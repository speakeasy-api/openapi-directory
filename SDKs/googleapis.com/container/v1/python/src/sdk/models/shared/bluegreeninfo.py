"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BlueGreenInfoPhaseEnum(str, Enum):
    r"""Current blue-green upgrade phase."""
    PHASE_UNSPECIFIED = 'PHASE_UNSPECIFIED'
    UPDATE_STARTED = 'UPDATE_STARTED'
    CREATING_GREEN_POOL = 'CREATING_GREEN_POOL'
    CORDONING_BLUE_POOL = 'CORDONING_BLUE_POOL'
    DRAINING_BLUE_POOL = 'DRAINING_BLUE_POOL'
    NODE_POOL_SOAKING = 'NODE_POOL_SOAKING'
    DELETING_BLUE_POOL = 'DELETING_BLUE_POOL'
    ROLLBACK_STARTED = 'ROLLBACK_STARTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BlueGreenInfo:
    r"""Information relevant to blue-green upgrade."""
    
    blue_instance_group_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blueInstanceGroupUrls'), 'exclude': lambda f: f is None }})
    r"""The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with blue pool."""  
    blue_pool_deletion_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bluePoolDeletionStartTime'), 'exclude': lambda f: f is None }})
    r"""Time to start deleting blue pool to complete blue-green upgrade, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""  
    green_instance_group_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('greenInstanceGroupUrls'), 'exclude': lambda f: f is None }})
    r"""The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with green pool."""  
    green_pool_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('greenPoolVersion'), 'exclude': lambda f: f is None }})
    r"""Version of green pool."""  
    phase: Optional[BlueGreenInfoPhaseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phase'), 'exclude': lambda f: f is None }})
    r"""Current blue-green upgrade phase."""  
    