// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// EnableSecurityHubRequestBodyControlFindingGeneratorEnum - <p>This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>The value for this field in a member account matches the value in the administrator account. For accounts that aren't part of an organization, the default value of this field is <code>SECURITY_CONTROL</code> if you enabled Security Hub on or after February 23, 2023.</p>
type EnableSecurityHubRequestBodyControlFindingGeneratorEnum string

const (
	EnableSecurityHubRequestBodyControlFindingGeneratorEnumStandardControl EnableSecurityHubRequestBodyControlFindingGeneratorEnum = "STANDARD_CONTROL"
	EnableSecurityHubRequestBodyControlFindingGeneratorEnumSecurityControl EnableSecurityHubRequestBodyControlFindingGeneratorEnum = "SECURITY_CONTROL"
)

func (e *EnableSecurityHubRequestBodyControlFindingGeneratorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STANDARD_CONTROL":
		fallthrough
	case "SECURITY_CONTROL":
		*e = EnableSecurityHubRequestBodyControlFindingGeneratorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableSecurityHubRequestBodyControlFindingGeneratorEnum: %s", s)
	}
}

type EnableSecurityHubRequestBody struct {
	// <p>This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>The value for this field in a member account matches the value in the administrator account. For accounts that aren't part of an organization, the default value of this field is <code>SECURITY_CONTROL</code> if you enabled Security Hub on or after February 23, 2023.</p>
	ControlFindingGenerator *EnableSecurityHubRequestBodyControlFindingGeneratorEnum `json:"ControlFindingGenerator,omitempty"`
	// Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for <code>EnableDefaultStandards</code>, it is set to <code>true</code>. To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.
	EnableDefaultStandards *bool `json:"EnableDefaultStandards,omitempty"`
	// The tags to add to the hub resource when you enable Security Hub.
	Tags map[string]string `json:"Tags,omitempty"`
}

type EnableSecurityHubRequest struct {
	RequestBody       EnableSecurityHubRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type EnableSecurityHubResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	EnableSecurityHubResponse map[string]interface{}
	// InternalException
	InternalException interface{}
	// InvalidAccessException
	InvalidAccessException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceConflictException
	ResourceConflictException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
