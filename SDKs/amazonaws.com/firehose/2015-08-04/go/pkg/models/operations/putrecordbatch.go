// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutRecordBatchXAmzTargetEnum
type PutRecordBatchXAmzTargetEnum string

const (
	PutRecordBatchXAmzTargetEnumFirehose20150804PutRecordBatch PutRecordBatchXAmzTargetEnum = "Firehose_20150804.PutRecordBatch"
)

func (e PutRecordBatchXAmzTargetEnum) ToPointer() *PutRecordBatchXAmzTargetEnum {
	return &e
}

func (e *PutRecordBatchXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Firehose_20150804.PutRecordBatch":
		*e = PutRecordBatchXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutRecordBatchXAmzTargetEnum: %v", v)
	}
}

type PutRecordBatchRequest struct {
	PutRecordBatchInput shared.PutRecordBatchInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          PutRecordBatchXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutRecordBatchResponse struct {
	ContentType string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidKMSResourceException
	InvalidKMSResourceException interface{}
	// Success
	PutRecordBatchOutput *shared.PutRecordBatchOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
