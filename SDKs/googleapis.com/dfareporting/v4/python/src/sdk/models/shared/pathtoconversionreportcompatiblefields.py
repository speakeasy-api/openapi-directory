"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from ..shared import metric as shared_metric
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PathToConversionReportCompatibleFields:
    r"""Represents fields that are compatible to be selected for a report of type \\"PATH_TO_CONVERSION\\"."""
    
    conversion_dimensions: Optional[list[shared_dimension.Dimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionDimensions'), 'exclude': lambda f: f is None }})
    r"""Conversion dimensions which are compatible to be selected in the \\"conversionDimensions\\" section of the report."""  
    custom_floodlight_variables: Optional[list[shared_dimension.Dimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFloodlightVariables'), 'exclude': lambda f: f is None }})
    r"""Custom floodlight variables which are compatible to be selected in the \\"customFloodlightVariables\\" section of the report."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields."""  
    metrics: Optional[list[shared_metric.Metric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""Metrics which are compatible to be selected in the \\"metricNames\\" section of the report."""  
    per_interaction_dimensions: Optional[list[shared_dimension.Dimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perInteractionDimensions'), 'exclude': lambda f: f is None }})
    r"""Per-interaction dimensions which are compatible to be selected in the \\"perInteractionDimensions\\" section of the report."""  
    