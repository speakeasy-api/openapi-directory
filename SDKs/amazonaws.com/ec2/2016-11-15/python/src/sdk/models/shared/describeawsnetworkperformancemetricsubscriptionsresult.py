"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsMetricEnum(str, Enum):
    r"""The metric used for the subscription."""
    AGGREGATE_LATENCY = 'aggregate-latency'

class DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsPeriodEnum(str, Enum):
    r"""The data aggregation time for the subscription."""
    FIVE_MINUTES = 'five-minutes'
    FIFTEEN_MINUTES = 'fifteen-minutes'
    ONE_HOUR = 'one-hour'
    THREE_HOURS = 'three-hours'
    ONE_DAY = 'one-day'
    ONE_WEEK = 'one-week'

class DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsStatisticEnum(str, Enum):
    r"""The statistic used for the subscription."""
    P50 = 'p50'


@dataclasses.dataclass
class DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptions:
    r"""Describes an Infrastructure Performance subscription."""
    
    destination: Optional[str] = dataclasses.field(default=None)  
    metric: Optional[DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsMetricEnum] = dataclasses.field(default=None)  
    period: Optional[DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsPeriodEnum] = dataclasses.field(default=None)  
    source: Optional[str] = dataclasses.field(default=None)  
    statistic: Optional[DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsStatisticEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeAwsNetworkPerformanceMetricSubscriptionsResult:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None)  
    subscriptions: Optional[list[DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptions]] = dataclasses.field(default=None)  
    