/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Execution - The definition of a single executed notebook.
 */
public class Execution {
    /**
     * Output only. Time the Execution was instantiated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Execution withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A brief description of this execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Execution withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Execution withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The description a notebook execution workload.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionTemplate")
    public ExecutionTemplate executionTemplate;

    public Execution withExecutionTemplate(ExecutionTemplate executionTemplate) {
        this.executionTemplate = executionTemplate;
        return this;
    }
    
    /**
     * Output only. The URI of the external job used to execute the notebook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobUri")
    public String jobUri;

    public Execution withJobUri(String jobUri) {
        this.jobUri = jobUri;
        return this;
    }
    
    /**
     * Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Execution withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output notebook file generated by this execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputNotebookFile")
    public String outputNotebookFile;

    public Execution withOutputNotebookFile(String outputNotebookFile) {
        this.outputNotebookFile = outputNotebookFile;
        return this;
    }
    
    /**
     * Output only. State of the underlying AI Platform job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ExecutionStateEnum state;

    public Execution withState(ExecutionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Time the Execution was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Execution withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Execution(){}
}
