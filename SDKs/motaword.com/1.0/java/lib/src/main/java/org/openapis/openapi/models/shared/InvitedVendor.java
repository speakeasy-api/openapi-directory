/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class InvitedVendor {
    /**
     * Action to be taken
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String action;
    public InvitedVendor withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * Email opening rate of the vendor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email_open_rate")
    public Double emailOpenRate;
    public InvitedVendor withEmailOpenRate(Double emailOpenRate) {
        this.emailOpenRate = emailOpenRate;
        return this;
    }
    
    /**
     * Did the vendor enter the given project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_entered")
    public Boolean isEntered;
    public InvitedVendor withIsEntered(Boolean isEntered) {
        this.isEntered = isEntered;
        return this;
    }
    
    /**
     * Is vendor get ever paid?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_get_paid")
    public Boolean isGetPaid;
    public InvitedVendor withIsGetPaid(Boolean isGetPaid) {
        this.isGetPaid = isGetPaid;
        return this;
    }
    
    /**
     * Did the vendor work on the given project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_worked")
    public Boolean isWorked;
    public InvitedVendor withIsWorked(Boolean isWorked) {
        this.isWorked = isWorked;
        return this;
    }
    
    /**
     * Vendors working status in any project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_worked_in_any_project")
    public Boolean isWorkedInAnyProject;
    public InvitedVendor withIsWorkedInAnyProject(Boolean isWorkedInAnyProject) {
        this.isWorkedInAnyProject = isWorkedInAnyProject;
        return this;
    }
    
    /**
     * Last project date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("last_project_date")
    public LocalDate lastProjectDate;
    public InvitedVendor withLastProjectDate(LocalDate lastProjectDate) {
        this.lastProjectDate = lastProjectDate;
        return this;
    }
    
    /**
     * Project translation percentage when interacted with the vendor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_status_when_interacted")
    public Double projectStatusWhenInteracted;
    public InvitedVendor withProjectStatusWhenInteracted(Double projectStatusWhenInteracted) {
        this.projectStatusWhenInteracted = projectStatusWhenInteracted;
        return this;
    }
    
    /**
     * Registration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("registration_date")
    public LocalDate registrationDate;
    public InvitedVendor withRegistrationDate(LocalDate registrationDate) {
        this.registrationDate = registrationDate;
        return this;
    }
    
    /**
     * Responsiveness of the vendor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsiveness")
    public Double responsiveness;
    public InvitedVendor withResponsiveness(Double responsiveness) {
        this.responsiveness = responsiveness;
        return this;
    }
    
    /**
     * Id in the Users
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public Double userId;
    public InvitedVendor withUserId(Double userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * Id in the Vendors
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendor_id")
    public Double vendorId;
    public InvitedVendor withVendorId(Double vendorId) {
        this.vendorId = vendorId;
        return this;
    }
    
    /**
     * The name of the vendor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendor_name")
    public String vendorName;
    public InvitedVendor withVendorName(String vendorName) {
        this.vendorName = vendorName;
        return this;
    }
    
    /**
     * Type of the vendor in the given project namely translator or proofreader
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendor_type")
    public String vendorType;
    public InvitedVendor withVendorType(String vendorType) {
        this.vendorType = vendorType;
        return this;
    }
    
}
