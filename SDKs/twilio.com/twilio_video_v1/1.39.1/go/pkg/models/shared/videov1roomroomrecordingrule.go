// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type VideoV1RoomRoomRecordingRuleRules struct {
	All       *bool   `json:"all,omitempty"`
	Kind      *string `json:"kind,omitempty"`
	Publisher *string `json:"publisher,omitempty"`
	Track     *string `json:"track,omitempty"`
	Type      *string `json:"type,omitempty"`
}

// VideoV1RoomRoomRecordingRule - OK
type VideoV1RoomRoomRecordingRule struct {
	// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	DateCreated *time.Time `json:"date_created,omitempty"`
	// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	DateUpdated *time.Time `json:"date_updated,omitempty"`
	// The SID of the Room resource for the Recording Rules
	RoomSid *string `json:"room_sid,omitempty"`
	// A collection of Recording Rules that describe how to include or exclude matching tracks for recording
	Rules []VideoV1RoomRoomRecordingRuleRules `json:"rules,omitempty"`
}
