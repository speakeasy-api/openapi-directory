// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteConformancePackXAmzTargetEnum
type DeleteConformancePackXAmzTargetEnum string

const (
	DeleteConformancePackXAmzTargetEnumStarlingDoveServiceDeleteConformancePack DeleteConformancePackXAmzTargetEnum = "StarlingDoveService.DeleteConformancePack"
)

func (e DeleteConformancePackXAmzTargetEnum) ToPointer() *DeleteConformancePackXAmzTargetEnum {
	return &e
}

func (e *DeleteConformancePackXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StarlingDoveService.DeleteConformancePack":
		*e = DeleteConformancePackXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConformancePackXAmzTargetEnum: %v", v)
	}
}

type DeleteConformancePackRequest struct {
	DeleteConformancePackRequest shared.DeleteConformancePackRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteConformancePackXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteConformancePackResponse struct {
	ContentType string
	// NoSuchConformancePackException
	NoSuchConformancePackException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
