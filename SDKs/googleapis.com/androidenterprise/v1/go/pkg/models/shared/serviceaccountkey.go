// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ServiceAccountKeyTypeEnum - The file format of the generated key data.
type ServiceAccountKeyTypeEnum string

const (
	ServiceAccountKeyTypeEnumGoogleCredentials ServiceAccountKeyTypeEnum = "googleCredentials"
	ServiceAccountKeyTypeEnumPkcs12            ServiceAccountKeyTypeEnum = "pkcs12"
)

func (e *ServiceAccountKeyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "googleCredentials":
		fallthrough
	case "pkcs12":
		*e = ServiceAccountKeyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceAccountKeyTypeEnum: %s", s)
	}
}

// ServiceAccountKey - Credentials that can be used to authenticate as a service account.
type ServiceAccountKey struct {
	// The body of the private key credentials file, in string format. This is only populated when the ServiceAccountKey is created, and is not stored by Google.
	Data *string `json:"data,omitempty"`
	// An opaque, unique identifier for this ServiceAccountKey. Assigned by the server.
	ID *string `json:"id,omitempty"`
	// Public key data for the credentials file. This is an X.509 cert. If you are using the googleCredentials key type, this is identical to the cert that can be retrieved by using the X.509 cert url inside of the credentials file.
	PublicData *string `json:"publicData,omitempty"`
	// The file format of the generated key data.
	Type *ServiceAccountKeyTypeEnum `json:"type,omitempty"`
}
