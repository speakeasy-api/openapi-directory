/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PrivateInstitutionAccountsListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

export class PrivateInstitutionAccountsListRequest extends SpeakeasyBase {
  /**
   * Filter by email
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  /**
   * Retrieve accounts with an ID greater or equal to the specified value
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_gte",
  })
  idGte?: number;

  /**
   * Retrieve accounts with an ID lower or equal to the specified value
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_lte",
  })
  idLte?: number;

  /**
   * Filter by institution_user_id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=institution_user_id",
  })
  institutionUserId?: string;

  /**
   * Filter by active status
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=is_active",
  })
  isActive?: number;

  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Page number. Used for pagination with page_size
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results included on a page. Used for pagination with page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;
}

export class PrivateInstitutionAccountsListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  errorMessage?: shared.ErrorMessage;

  /**
   * OK. An array of Accounts
   */
  @SpeakeasyMetadata({ elemType: shared.ShortAccount })
  shortAccounts?: shared.ShortAccount[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
