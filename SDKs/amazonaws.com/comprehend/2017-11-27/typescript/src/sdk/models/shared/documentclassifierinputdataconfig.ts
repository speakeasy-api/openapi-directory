/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AugmentedManifestsListItem } from "./augmentedmanifestslistitem";
import { DocumentClassifierDataFormatEnum } from "./documentclassifierdataformatenum";
import { Expose, Type } from "class-transformer";

/**
 * <p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/prep-classifier-data.html">Preparing training data</a> in the Comprehend Developer Guide. </p>
 */
export class DocumentClassifierInputDataConfig extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AugmentedManifestsListItem })
  @Expose({ name: "AugmentedManifests" })
  @Type(() => AugmentedManifestsListItem)
  augmentedManifests?: AugmentedManifestsListItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "DataFormat" })
  dataFormat?: DocumentClassifierDataFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelDelimiter" })
  labelDelimiter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Uri" })
  s3Uri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TestS3Uri" })
  testS3Uri?: string;
}
