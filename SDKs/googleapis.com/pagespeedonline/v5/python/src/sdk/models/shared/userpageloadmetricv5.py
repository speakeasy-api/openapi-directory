"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bucket as shared_bucket
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserPageLoadMetricV5:
    r"""A CrUX metric object for a single metric and form factor."""
    
    category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""The category of the specific time metric."""  
    distributions: Optional[list[shared_bucket.Bucket]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distributions'), 'exclude': lambda f: f is None }})
    r"""Metric distributions. Proportions should sum up to 1."""  
    form_factor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formFactor'), 'exclude': lambda f: f is None }})
    r"""Identifies the form factor of the metric being collected."""  
    median: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('median'), 'exclude': lambda f: f is None }})
    r"""The median number of the metric, in millisecond."""  
    metric_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricId'), 'exclude': lambda f: f is None }})
    r"""Identifies the type of the metric."""  
    percentile: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentile'), 'exclude': lambda f: f is None }})
    r"""We use this field to store certain percentile value for this metric. For v4, this field contains pc50. For v5, this field contains pc90."""  
    