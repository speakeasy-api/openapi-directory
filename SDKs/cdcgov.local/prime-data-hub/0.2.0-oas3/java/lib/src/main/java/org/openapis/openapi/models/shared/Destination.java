/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Destination {
    /**
     * The number of reports being sent to this destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemCount")
    public Long itemCount;

    public Destination withItemCount(Long itemCount) {
        this.itemCount = itemCount;
        return this;
    }
    
    /**
     * The name of the organization reciving the report
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    public String organization;

    public Destination withOrganization(String organization) {
        this.organization = organization;
        return this;
    }
    
    /**
     * The organization id (i.e. {state abbreviation}-phd)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_id")
    public String organizationId;

    public Destination withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * The time at which the report will be sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("sending_at")
    public OffsetDateTime sendingAt;

    public Destination withSendingAt(OffsetDateTime sendingAt) {
        this.sendingAt = sendingAt;
        return this;
    }
    
    /**
     * The service used for delivering the report
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;

    public Destination withService(String service) {
        this.service = service;
        return this;
    }
    
    public Destination(){}
}
