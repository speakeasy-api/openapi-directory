<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReadOptions - The options shared by read requests.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReadOptions
{
    /**
     * Options for beginning a new transaction. Transactions can be created explicitly with calls to Datastore.BeginTransaction or implicitly by setting ReadOptions.new_transaction in read requests.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionOptions $newTransaction
     */
	#[\JMS\Serializer\Annotation\SerializedName('newTransaction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionOptions $newTransaction = null;
    
    /**
     * The non-transactional read consistency to use.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReadOptionsReadConsistencyEnum $readConsistency
     */
	#[\JMS\Serializer\Annotation\SerializedName('readConsistency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReadOptionsReadConsistencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReadOptionsReadConsistencyEnum $readConsistency = null;
    
    /**
     * Reads entities as they were at the given time. This may not be older than 270 seconds. This value is only supported for Cloud Firestore in Datastore mode.
     * 
     * @var ?string $readTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('readTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $readTime = null;
    
    /**
     * The identifier of the transaction in which to read. A transaction identifier is returned by a call to Datastore.BeginTransaction.
     * 
     * @var ?string $transaction
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transaction = null;
    
	public function __construct()
	{
		$this->newTransaction = null;
		$this->readConsistency = null;
		$this->readTime = null;
		$this->transaction = null;
	}
}
