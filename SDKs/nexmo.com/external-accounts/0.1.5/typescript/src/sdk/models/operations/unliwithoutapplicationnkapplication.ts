/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UnliWithoutApplicationnkApplicationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basicAuth?: shared.SchemeBasicAuth;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth?: string;
}

/**
 * Provider of the account you want to unlink an application from
 */
export enum UnliWithoutApplicationnkApplicationProviderEnum {
  Messenger = "messenger",
  ViberServiceMsg = "viber_service_msg",
  Whatsapp = "whatsapp",
}

export class UnliWithoutApplicationnkApplicationRequest extends SpeakeasyBase {
  /**
   * Id of the application you want to unlink
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=application_id",
  })
  applicationId: string;

  /**
   * External id of the account you want to unlink an application from
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=external_id",
  })
  externalId: string;

  /**
   * Provider of the account you want to unlink an application from
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=provider",
  })
  provider: UnliWithoutApplicationnkApplicationProviderEnum;
}

/**
 * Conflict.
 */
export class UnliWithoutApplicationnkApplication409ApplicationJSON extends SpeakeasyBase {
  /**
   * The application is not linked or doesn't exist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Forbidden.
 */
export class UnliWithoutApplicationnkApplication403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class UnliWithoutApplicationnkApplicationResponse extends SpeakeasyBase {
  /**
   * Unauthorized.
   */
  @SpeakeasyMetadata()
  fourHundredAndOneResponse?: shared.FourHundredAndOneResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Forbidden.
   */
  @SpeakeasyMetadata()
  unliWithoutApplicationnkApplication403ApplicationJSONObject?: UnliWithoutApplicationnkApplication403ApplicationJSON;

  /**
   * Conflict.
   */
  @SpeakeasyMetadata()
  unliWithoutApplicationnkApplication409ApplicationJSONObject?: UnliWithoutApplicationnkApplication409ApplicationJSON;
}
