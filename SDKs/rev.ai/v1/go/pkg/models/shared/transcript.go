// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TranscriptMonologuesElementsTypeEnum - Type of transcript element. If Rev.ai was unable to determine the spoken word, the `type` will be `unknown`.
type TranscriptMonologuesElementsTypeEnum string

const (
	TranscriptMonologuesElementsTypeEnumText    TranscriptMonologuesElementsTypeEnum = "text"
	TranscriptMonologuesElementsTypeEnumPunct   TranscriptMonologuesElementsTypeEnum = "punct"
	TranscriptMonologuesElementsTypeEnumUnknown TranscriptMonologuesElementsTypeEnum = "unknown"
)

func (e *TranscriptMonologuesElementsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "punct":
		fallthrough
	case "unknown":
		*e = TranscriptMonologuesElementsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TranscriptMonologuesElementsTypeEnum: %s", s)
	}
}

type TranscriptMonologuesElements struct {
	// Confidence score of the provided value. If the element `type` is `punct` or `unknown`, confidence will be `null`
	Confidence *float64 `json:"confidence,omitempty"`
	// The timestamp of the beginning of the element relative to the beginning of the audio in seconds (centisecond precision)
	Ts *float64 `json:"ts,omitempty"`
	// The timestamp of the end of the element relative to the beginning of the audio in seconds (centisecond precision)
	TsEnd *float64 `json:"ts_end,omitempty"`
	// Type of transcript element. If Rev.ai was unable to determine the spoken word, the `type` will be `unknown`.
	Type *TranscriptMonologuesElementsTypeEnum `json:"type,omitempty"`
	// Value of the transcript element.
	Value *string `json:"value,omitempty"`
}

type TranscriptMonologues struct {
	// Array of transcript elements
	Elements []TranscriptMonologuesElements `json:"elements,omitempty"`
	// Id of the speaker of the monologue
	Speaker *int64 `json:"speaker,omitempty"`
}

// Transcript - Rev.ai Transcript Model
// ***
// Note: properties are not displayed in the returned object if they are null
//
// Jobs with skip_diarization set to true will only show a single speaker for the entire duration of the transcript.
type Transcript struct {
	Monologues []TranscriptMonologues `json:"monologues,omitempty"`
}
