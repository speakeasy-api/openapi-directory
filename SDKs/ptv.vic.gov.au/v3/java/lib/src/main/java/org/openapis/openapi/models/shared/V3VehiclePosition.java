/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class V3VehiclePosition {
    /**
     * Compass bearing of the vehicle when known, clockwise from True North, i.e., 0 is North and 90 is East. May be null.
     *             Only available for some bus runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bearing")
    public Double bearing;
    public V3VehiclePosition withBearing(Double bearing) {
        this.bearing = bearing;
        return this;
    }
    
    /**
     * Date and time that the vehicle position data was supplied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("datetime_utc")
    public OffsetDateTime datetimeUtc;
    public V3VehiclePosition withDatetimeUtc(OffsetDateTime datetimeUtc) {
        this.datetimeUtc = datetimeUtc;
        return this;
    }
    
    /**
     * CIS - Metro Train Vehicle Location Direction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public String direction;
    public V3VehiclePosition withDirection(String direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * CIS - Metro Train Vehicle Location Easting coordinate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("easting")
    public Double easting;
    public V3VehiclePosition withEasting(Double easting) {
        this.easting = easting;
        return this;
    }
    
    /**
     * CIS - Metro Train Vehicle Location data expiry time
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiry_time")
    public OffsetDateTime expiryTime;
    public V3VehiclePosition withExpiryTime(OffsetDateTime expiryTime) {
        this.expiryTime = expiryTime;
        return this;
    }
    
    /**
     * Geographic coordinate of latitude of the vehicle when known. May be null.
     *             Only available for some bus runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude")
    public Double latitude;
    public V3VehiclePosition withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Geographic coordinate of longitude of the vehicle when known. 
     *             Only available for some bus runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longitude")
    public Double longitude;
    public V3VehiclePosition withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * CIS - Metro Train Vehicle Location Northing coordinate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("northing")
    public Double northing;
    public V3VehiclePosition withNorthing(Double northing) {
        this.northing = northing;
        return this;
    }
    
    /**
     * Supplier of vehicle position data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplier")
    public String supplier;
    public V3VehiclePosition withSupplier(String supplier) {
        this.supplier = supplier;
        return this;
    }
    
}
