// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CustomObjectBulkDeleteFilterConditionOperatorEnum string

const (
	CustomObjectBulkDeleteFilterConditionOperatorEnumEq CustomObjectBulkDeleteFilterConditionOperatorEnum = "EQ"
	CustomObjectBulkDeleteFilterConditionOperatorEnumGt CustomObjectBulkDeleteFilterConditionOperatorEnum = "GT"
	CustomObjectBulkDeleteFilterConditionOperatorEnumLt CustomObjectBulkDeleteFilterConditionOperatorEnum = "LT"
	CustomObjectBulkDeleteFilterConditionOperatorEnumGe CustomObjectBulkDeleteFilterConditionOperatorEnum = "GE"
	CustomObjectBulkDeleteFilterConditionOperatorEnumLe CustomObjectBulkDeleteFilterConditionOperatorEnum = "LE"
)

func (e *CustomObjectBulkDeleteFilterConditionOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EQ":
		fallthrough
	case "GT":
		fallthrough
	case "LT":
		fallthrough
	case "GE":
		fallthrough
	case "LE":
		*e = CustomObjectBulkDeleteFilterConditionOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomObjectBulkDeleteFilterConditionOperatorEnum: %s", s)
	}
}

// CustomObjectBulkDeleteFilterCondition - Condition evaluated on a single object field
type CustomObjectBulkDeleteFilterCondition struct {
	// The object field that is evaluated. Only filterable fields can be evaluated in the filter.
	Field    string                                            `json:"field"`
	Operator CustomObjectBulkDeleteFilterConditionOperatorEnum `json:"operator"`
	// The value that the filterable `field` is evaluated against in the filter. The data type of `value` is consistent with that of the `field`.
	Value interface{} `json:"value"`
}
