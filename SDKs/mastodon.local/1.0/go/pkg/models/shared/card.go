// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CardTypeEnum - The type of the preview card. String (Enumerable, oneOf).
type CardTypeEnum string

const (
	CardTypeEnumLink  CardTypeEnum = "link"
	CardTypeEnumPhoto CardTypeEnum = "photo"
	CardTypeEnumVideo CardTypeEnum = "video"
	CardTypeEnumRich  CardTypeEnum = "rich"
)

func (e *CardTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "link":
		fallthrough
	case "photo":
		fallthrough
	case "video":
		fallthrough
	case "rich":
		*e = CardTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CardTypeEnum: %s", s)
	}
}

// Card - Represents a rich preview card that is generated using OpenGraph tags from a URL.
// https://docs.joinmastodon.org/entities/card/
type Card struct {
	// The author of the original resource.
	AuthorName *string `json:"author_name,omitempty"`
	// A link to the author of the original resource.
	AuthorURL *string `json:"author_url,omitempty"`
	// A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.
	Blurhash *string `json:"blurhash,omitempty"`
	// Description of preview.
	Description string `json:"description"`
	// Height of preview, in pixels.
	Height *int64 `json:"height,omitempty"`
	// HTML to be used for generating the preview card.
	HTML *string `json:"html,omitempty"`
	// Preview thumbnail (URL).
	Image *string `json:"image,omitempty"`
	// The provider of the original resource.
	ProviderName *string `json:"provider_name,omitempty"`
	// A link to the provider of the original resource.
	ProviderURL *string `json:"provider_url,omitempty"`
	// Title of linked resource.
	Title string `json:"title"`
	// The type of the preview card. String (Enumerable, oneOf).
	Type CardTypeEnum `json:"type"`
	// Location of linked resource.
	URL string `json:"url"`
	// Width of preview, in pixels.
	Width *int64 `json:"width,omitempty"`
}
