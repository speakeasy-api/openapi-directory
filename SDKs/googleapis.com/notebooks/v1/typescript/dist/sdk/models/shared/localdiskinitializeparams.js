"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalDiskInitializeParams = exports.LocalDiskInitializeParamsDiskTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).
 */
var LocalDiskInitializeParamsDiskTypeEnum;
(function (LocalDiskInitializeParamsDiskTypeEnum) {
    LocalDiskInitializeParamsDiskTypeEnum["DiskTypeUnspecified"] = "DISK_TYPE_UNSPECIFIED";
    LocalDiskInitializeParamsDiskTypeEnum["PdStandard"] = "PD_STANDARD";
    LocalDiskInitializeParamsDiskTypeEnum["PdSsd"] = "PD_SSD";
    LocalDiskInitializeParamsDiskTypeEnum["PdBalanced"] = "PD_BALANCED";
    LocalDiskInitializeParamsDiskTypeEnum["PdExtreme"] = "PD_EXTREME";
})(LocalDiskInitializeParamsDiskTypeEnum = exports.LocalDiskInitializeParamsDiskTypeEnum || (exports.LocalDiskInitializeParamsDiskTypeEnum = {}));
/**
 * Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new runtime. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
 */
var LocalDiskInitializeParams = /** @class */ (function (_super) {
    __extends(LocalDiskInitializeParams, _super);
    function LocalDiskInitializeParams() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], LocalDiskInitializeParams.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskName" }),
        __metadata("design:type", String)
    ], LocalDiskInitializeParams.prototype, "diskName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskSizeGb" }),
        __metadata("design:type", String)
    ], LocalDiskInitializeParams.prototype, "diskSizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskType" }),
        __metadata("design:type", String)
    ], LocalDiskInitializeParams.prototype, "diskType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], LocalDiskInitializeParams.prototype, "labels", void 0);
    return LocalDiskInitializeParams;
}(utils_1.SpeakeasyBase));
exports.LocalDiskInitializeParams = LocalDiskInitializeParams;
