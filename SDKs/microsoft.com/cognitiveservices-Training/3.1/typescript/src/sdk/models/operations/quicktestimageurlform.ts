/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class QuickTestImageUrlFormRequest extends SpeakeasyBase {
  /**
   * An ImageUrl that contains the url of the image to be evaluated.
   */
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  imageUrl: shared.ImageUrl;

  /**
   * API key.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Training-Key",
  })
  trainingKey: string;

  /**
   * Optional. Specifies the id of a particular iteration to evaluate against.
   *
   * @remarks
   *             The default iteration for the project will be used when not specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=iterationId",
  })
  iterationId?: string;

  /**
   * The project to evaluate against.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;

  /**
   * Optional. Specifies whether or not to store the result of this prediction. The default is true, to store.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=store" })
  store?: boolean;
}

export class QuickTestImageUrlFormResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error response
   */
  @SpeakeasyMetadata()
  customVisionError?: shared.CustomVisionError;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  imagePrediction?: shared.ImagePrediction;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
