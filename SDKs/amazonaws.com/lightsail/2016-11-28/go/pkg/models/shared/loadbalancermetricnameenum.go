// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoadBalancerMetricNameEnum string

const (
	LoadBalancerMetricNameEnumClientTLSNegotiationErrorCount LoadBalancerMetricNameEnum = "ClientTLSNegotiationErrorCount"
	LoadBalancerMetricNameEnumHealthyHostCount               LoadBalancerMetricNameEnum = "HealthyHostCount"
	LoadBalancerMetricNameEnumUnhealthyHostCount             LoadBalancerMetricNameEnum = "UnhealthyHostCount"
	LoadBalancerMetricNameEnumHTTPCodeLb4XxCount             LoadBalancerMetricNameEnum = "HTTPCode_LB_4XX_Count"
	LoadBalancerMetricNameEnumHTTPCodeLb5XxCount             LoadBalancerMetricNameEnum = "HTTPCode_LB_5XX_Count"
	LoadBalancerMetricNameEnumHTTPCodeInstance2XxCount       LoadBalancerMetricNameEnum = "HTTPCode_Instance_2XX_Count"
	LoadBalancerMetricNameEnumHTTPCodeInstance3XxCount       LoadBalancerMetricNameEnum = "HTTPCode_Instance_3XX_Count"
	LoadBalancerMetricNameEnumHTTPCodeInstance4XxCount       LoadBalancerMetricNameEnum = "HTTPCode_Instance_4XX_Count"
	LoadBalancerMetricNameEnumHTTPCodeInstance5XxCount       LoadBalancerMetricNameEnum = "HTTPCode_Instance_5XX_Count"
	LoadBalancerMetricNameEnumInstanceResponseTime           LoadBalancerMetricNameEnum = "InstanceResponseTime"
	LoadBalancerMetricNameEnumRejectedConnectionCount        LoadBalancerMetricNameEnum = "RejectedConnectionCount"
	LoadBalancerMetricNameEnumRequestCount                   LoadBalancerMetricNameEnum = "RequestCount"
)

func (e LoadBalancerMetricNameEnum) ToPointer() *LoadBalancerMetricNameEnum {
	return &e
}

func (e *LoadBalancerMetricNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ClientTLSNegotiationErrorCount":
		fallthrough
	case "HealthyHostCount":
		fallthrough
	case "UnhealthyHostCount":
		fallthrough
	case "HTTPCode_LB_4XX_Count":
		fallthrough
	case "HTTPCode_LB_5XX_Count":
		fallthrough
	case "HTTPCode_Instance_2XX_Count":
		fallthrough
	case "HTTPCode_Instance_3XX_Count":
		fallthrough
	case "HTTPCode_Instance_4XX_Count":
		fallthrough
	case "HTTPCode_Instance_5XX_Count":
		fallthrough
	case "InstanceResponseTime":
		fallthrough
	case "RejectedConnectionCount":
		fallthrough
	case "RequestCount":
		*e = LoadBalancerMetricNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoadBalancerMetricNameEnum: %v", v)
	}
}
