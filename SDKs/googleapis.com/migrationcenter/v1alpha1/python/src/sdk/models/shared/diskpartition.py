"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import diskpartitionlist as shared_diskpartitionlist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DiskPartition:
    r"""Disk Partition details."""
    
    capacity_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capacityBytes'), 'exclude': lambda f: f is None }})
    r"""Partition capacity."""  
    file_system: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileSystem'), 'exclude': lambda f: f is None }})
    r"""Partition file system."""  
    free_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freeBytes'), 'exclude': lambda f: f is None }})
    r"""Partition free space."""  
    mount_point: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mountPoint'), 'exclude': lambda f: f is None }})
    r"""Mount pount (Linux/Windows) or drive letter (Windows)."""  
    sub_partitions: Optional[shared_diskpartitionlist.DiskPartitionList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subPartitions'), 'exclude': lambda f: f is None }})
    r"""Disk partition list."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Partition type (e.g. BIOS boot)."""  
    uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uuid'), 'exclude': lambda f: f is None }})
    r"""Partition UUID."""  
    