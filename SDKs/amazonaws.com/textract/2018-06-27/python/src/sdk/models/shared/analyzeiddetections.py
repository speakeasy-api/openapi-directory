"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import normalizedvalue as shared_normalizedvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyzeIDDetections:
    r"""Used to contain the information detected by an AnalyzeID operation."""
    
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Text') }})  
    confidence: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Confidence'), 'exclude': lambda f: f is None }})  
    normalized_value: Optional[shared_normalizedvalue.NormalizedValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NormalizedValue'), 'exclude': lambda f: f is None }})  
    