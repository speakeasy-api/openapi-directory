"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import price as shared_price
from ..shared import settlementtransactionamountcommission as shared_settlementtransactionamountcommission
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SettlementTransactionAmount:
    
    commission: Optional[shared_settlementtransactionamountcommission.SettlementTransactionAmountCommission] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commission'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the event. Acceptable values are: - \\"`taxWithhold`\\" - \\"`principal`\\" - \\"`principalAdjustment`\\" - \\"`shippingFee`\\" - \\"`merchantRemittedSalesTax`\\" - \\"`googleRemittedSalesTax`\\" - \\"`merchantCoupon`\\" - \\"`merchantCouponTax`\\" - \\"`merchantRemittedDisposalTax`\\" - \\"`googleRemittedDisposalTax`\\" - \\"`merchantRemittedRedemptionFee`\\" - \\"`googleRemittedRedemptionFee`\\" - \\"`eeeEcoFee`\\" - \\"`furnitureEcoFee`\\" - \\"`copyPrivateFee`\\" - \\"`eeeEcoFeeCommission`\\" - \\"`furnitureEcoFeeCommission`\\" - \\"`copyPrivateFeeCommission`\\" - \\"`principalRefund`\\" - \\"`principalRefundTax`\\" - \\"`itemCommission`\\" - \\"`adjustmentCommission`\\" - \\"`shippingFeeCommission`\\" - \\"`commissionRefund`\\" - \\"`damaged`\\" - \\"`damagedOrDefectiveItem`\\" - \\"`expiredItem`\\" - \\"`faultyItem`\\" - \\"`incorrectItemReceived`\\" - \\"`itemMissing`\\" - \\"`qualityNotExpected`\\" - \\"`receivedTooLate`\\" - \\"`storePackageMissing`\\" - \\"`transitPackageMissing`\\" - \\"`unsuccessfulDeliveryUndeliverable`\\" - \\"`wrongChargeInStore`\\" - \\"`wrongItem`\\" - \\"`returns`\\" - \\"`undeliverable`\\" - \\"`issueRelatedRefundAndReplacementAmountDescription`\\" - \\"`refundFromMerchant`\\" - \\"`returnLabelShippingFee`\\" - \\"`lumpSumCorrection`\\" - \\"`pspFee`\\" - \\"`principalRefundDoesNotFit`\\" - \\"`principalRefundOrderedWrongItem`\\" - \\"`principalRefundQualityNotExpected`\\" - \\"`principalRefundBetterPriceFound`\\" - \\"`principalRefundNoLongerNeeded`\\" - \\"`principalRefundChangedMind`\\" - \\"`principalRefundReceivedTooLate`\\" - \\"`principalRefundIncorrectItemReceived`\\" - \\"`principalRefundDamagedOrDefectiveItem`\\" - \\"`principalRefundDidNotMatchDescription`\\" - \\"`principalRefundExpiredItem`\\" """  
    transaction_amount: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionAmount'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the amount. Acceptable values are: - \\"`itemPrice`\\" - \\"`orderPrice`\\" - \\"`refund`\\" - \\"`earlyRefund`\\" - \\"`courtesyRefund`\\" - \\"`returnRefund`\\" - \\"`returnLabelShippingFeeAmount`\\" - \\"`lumpSumCorrectionAmount`\\" """  
    