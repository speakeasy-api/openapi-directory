/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UpdateFlexFlowUpdateFlexFlowRequest {
    @SpeakeasyMetadata("form:name=ChannelType")
    public org.openapis.openapi.models.shared.FlexFlowEnumChannelTypeEnum channelType;
    public UpdateFlexFlowUpdateFlexFlowRequest withChannelType(org.openapis.openapi.models.shared.FlexFlowEnumChannelTypeEnum channelType) {
        this.channelType = channelType;
        return this;
    }
    
    /**
     * The SID of the chat service.
     */
    @SpeakeasyMetadata("form:name=ChatServiceSid")
    public String chatServiceSid;
    public UpdateFlexFlowUpdateFlexFlowRequest withChatServiceSid(String chatServiceSid) {
        this.chatServiceSid = chatServiceSid;
        return this;
    }
    
    /**
     * The channel contact's Identity.
     */
    @SpeakeasyMetadata("form:name=ContactIdentity")
    public String contactIdentity;
    public UpdateFlexFlowUpdateFlexFlowRequest withContactIdentity(String contactIdentity) {
        this.contactIdentity = contactIdentity;
        return this;
    }
    
    /**
     * Whether the new Flex Flow is enabled.
     */
    @SpeakeasyMetadata("form:name=Enabled")
    public Boolean enabled;
    public UpdateFlexFlowUpdateFlexFlowRequest withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * A descriptive string that you create to describe the Flex Flow resource.
     */
    @SpeakeasyMetadata("form:name=FriendlyName")
    public String friendlyName;
    public UpdateFlexFlowUpdateFlexFlowRequest withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The Task Channel SID (TCXXXX) or unique name (e.g., `sms`) to use for the Task that will be created. Applicable and required when `integrationType` is `task`. The default value is `default`.
     */
    @SpeakeasyMetadata("form:name=Integration.Channel")
    public String integrationChannel;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationChannel(String integrationChannel) {
        this.integrationChannel = integrationChannel;
        return this;
    }
    
    /**
     * In the context of outbound messaging, defines whether to create a Task immediately (and therefore reserve the conversation to current agent), or delay Task creation until the customer sends the first response. Set to false to create immediately, true to delay Task creation. This setting is only applicable for outbound messaging.
     */
    @SpeakeasyMetadata("form:name=Integration.CreationOnMessage")
    public Boolean integrationCreationOnMessage;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationCreationOnMessage(Boolean integrationCreationOnMessage) {
        this.integrationCreationOnMessage = integrationCreationOnMessage;
        return this;
    }
    
    /**
     * The SID of the Studio Flow. Required when `integrationType` is `studio`.
     */
    @SpeakeasyMetadata("form:name=Integration.FlowSid")
    public String integrationFlowSid;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationFlowSid(String integrationFlowSid) {
        this.integrationFlowSid = integrationFlowSid;
        return this;
    }
    
    /**
     * The Task priority of a new Task. The default priority is 0. Optional when `integrationType` is `task`, not applicable otherwise.
     */
    @SpeakeasyMetadata("form:name=Integration.Priority")
    public Long integrationPriority;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationPriority(Long integrationPriority) {
        this.integrationPriority = integrationPriority;
        return this;
    }
    
    /**
     * The number of times to retry the Studio Flow or webhook in case of failure. Takes integer values from 0 to 3 with the default being 3. Optional when `integrationType` is `studio` or `external`, not applicable otherwise.
     */
    @SpeakeasyMetadata("form:name=Integration.RetryCount")
    public Long integrationRetryCount;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationRetryCount(Long integrationRetryCount) {
        this.integrationRetryCount = integrationRetryCount;
        return this;
    }
    
    /**
     * The Task timeout in seconds for a new Task. Default is 86,400 seconds (24 hours). Optional when `integrationType` is `task`, not applicable otherwise.
     */
    @SpeakeasyMetadata("form:name=Integration.Timeout")
    public Long integrationTimeout;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationTimeout(Long integrationTimeout) {
        this.integrationTimeout = integrationTimeout;
        return this;
    }
    
    /**
     * The URL of the external webhook. Required when `integrationType` is `external`.
     */
    @SpeakeasyMetadata("form:name=Integration.Url")
    public String integrationUrl;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationUrl(String integrationUrl) {
        this.integrationUrl = integrationUrl;
        return this;
    }
    
    /**
     * The Workflow SID for a new Task. Required when `integrationType` is `task`.
     */
    @SpeakeasyMetadata("form:name=Integration.WorkflowSid")
    public String integrationWorkflowSid;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationWorkflowSid(String integrationWorkflowSid) {
        this.integrationWorkflowSid = integrationWorkflowSid;
        return this;
    }
    
    /**
     * The Workspace SID for a new Task. Required when `integrationType` is `task`.
     */
    @SpeakeasyMetadata("form:name=Integration.WorkspaceSid")
    public String integrationWorkspaceSid;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationWorkspaceSid(String integrationWorkspaceSid) {
        this.integrationWorkspaceSid = integrationWorkspaceSid;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=IntegrationType")
    public org.openapis.openapi.models.shared.FlexFlowEnumIntegrationTypeEnum integrationType;
    public UpdateFlexFlowUpdateFlexFlowRequest withIntegrationType(org.openapis.openapi.models.shared.FlexFlowEnumIntegrationTypeEnum integrationType) {
        this.integrationType = integrationType;
        return this;
    }
    
    /**
     * When enabled, the Messaging Channel Janitor will remove active Proxy sessions if the associated Task is deleted outside of the Flex UI. Defaults to `false`.
     */
    @SpeakeasyMetadata("form:name=JanitorEnabled")
    public Boolean janitorEnabled;
    public UpdateFlexFlowUpdateFlexFlowRequest withJanitorEnabled(Boolean janitorEnabled) {
        this.janitorEnabled = janitorEnabled;
        return this;
    }
    
    /**
     * When enabled, Flex will keep the chat channel active so that it may be used for subsequent interactions with a contact identity. Defaults to `false`.
     */
    @SpeakeasyMetadata("form:name=LongLived")
    public Boolean longLived;
    public UpdateFlexFlowUpdateFlexFlowRequest withLongLived(Boolean longLived) {
        this.longLived = longLived;
        return this;
    }
    
}
