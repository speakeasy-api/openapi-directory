"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import distributionconfig as shared_distributionconfig
from ..shared import tags as shared_tags
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateDistributionWithTags20180618RequestBodyDistributionConfigWithTags:
    r"""A distribution Configuration and a list of tags to be associated with the distribution."""
    
    distribution_config: Optional[shared_distributionconfig.DistributionConfig] = dataclasses.field(default=None)  
    tags: Optional[shared_tags.Tags] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateDistributionWithTags20180618RequestBody:
    
    distribution_config_with_tags: CreateDistributionWithTags20180618RequestBodyDistributionConfigWithTags = dataclasses.field()
    r"""A distribution Configuration and a list of tags to be associated with the distribution."""  
    
class CreateDistributionWithTags20180618WithTagsEnum(str, Enum):
    TRUE = 'true'


@dataclasses.dataclass
class CreateDistributionWithTags20180618Request:
    
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'text/xml' }})  
    with_tags: CreateDistributionWithTags20180618WithTagsEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'WithTags', 'style': 'form', 'explode': True }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class CreateDistributionWithTags20180618Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    