// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GetTruckDistanceOutputFormatOutputFormatEnum - Format of representation
type GetTruckDistanceOutputFormatOutputFormatEnum string

const (
	GetTruckDistanceOutputFormatOutputFormatEnumJSON GetTruckDistanceOutputFormatOutputFormatEnum = "json"
	GetTruckDistanceOutputFormatOutputFormatEnumKml  GetTruckDistanceOutputFormatOutputFormatEnum = "kml"
	GetTruckDistanceOutputFormatOutputFormatEnumHTML GetTruckDistanceOutputFormatOutputFormatEnum = "html"
)

func (e *GetTruckDistanceOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "kml":
		fallthrough
	case "html":
		*e = GetTruckDistanceOutputFormatOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTruckDistanceOutputFormatOutputFormatEnum: %s", s)
	}
}

type GetTruckDistanceOutputFormatPathParams struct {
	// Format of representation
	OutputFormat GetTruckDistanceOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
}

// GetTruckDistanceOutputFormatCriteriaEnum - Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
type GetTruckDistanceOutputFormatCriteriaEnum string

const (
	GetTruckDistanceOutputFormatCriteriaEnumShortest GetTruckDistanceOutputFormatCriteriaEnum = "shortest"
	GetTruckDistanceOutputFormatCriteriaEnumFastest  GetTruckDistanceOutputFormatCriteriaEnum = "fastest"
)

func (e *GetTruckDistanceOutputFormatCriteriaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "shortest":
		fallthrough
	case "fastest":
		*e = GetTruckDistanceOutputFormatCriteriaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTruckDistanceOutputFormatCriteriaEnum: %s", s)
	}
}

// GetTruckDistanceOutputFormatDistanceUnitEnum - distance unit of measure (e.g., km, mi). Default is km.
type GetTruckDistanceOutputFormatDistanceUnitEnum string

const (
	GetTruckDistanceOutputFormatDistanceUnitEnumKm GetTruckDistanceOutputFormatDistanceUnitEnum = "km"
	GetTruckDistanceOutputFormatDistanceUnitEnumMi GetTruckDistanceOutputFormatDistanceUnitEnum = "mi"
)

func (e *GetTruckDistanceOutputFormatDistanceUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "km":
		fallthrough
	case "mi":
		*e = GetTruckDistanceOutputFormatDistanceUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTruckDistanceOutputFormatDistanceUnitEnum: %s", s)
	}
}

// GetTruckDistanceOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetTruckDistanceOutputFormatOutputSrsEnum string

const (
	GetTruckDistanceOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetTruckDistanceOutputFormatOutputSrsEnum = "4326"
	GetTruckDistanceOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetTruckDistanceOutputFormatOutputSrsEnum = "4269"
	GetTruckDistanceOutputFormatOutputSrsEnumThreeThousandAndFive                  GetTruckDistanceOutputFormatOutputSrsEnum = "3005"
	GetTruckDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetTruckDistanceOutputFormatOutputSrsEnum = "26907"
	GetTruckDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetTruckDistanceOutputFormatOutputSrsEnum = "26908"
	GetTruckDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetTruckDistanceOutputFormatOutputSrsEnum = "26909"
	GetTruckDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetTruckDistanceOutputFormatOutputSrsEnum = "26910"
	GetTruckDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetTruckDistanceOutputFormatOutputSrsEnum = "26911"
)

func (e *GetTruckDistanceOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "4326":
		fallthrough
	case "4269":
		fallthrough
	case "3005":
		fallthrough
	case "26907":
		fallthrough
	case "26908":
		fallthrough
	case "26909":
		fallthrough
	case "26910":
		fallthrough
	case "26911":
		*e = GetTruckDistanceOutputFormatOutputSrsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTruckDistanceOutputFormatOutputSrsEnum: %s", s)
	}
}

type GetTruckDistanceOutputFormatQueryParams struct {
	// If true, route starts and ends on same side of road as start and end points.Default is false.
	CorrectSide *bool `queryParam:"style=form,explode=true,name=correctSide"`
	// Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
	Criteria *GetTruckDistanceOutputFormatCriteriaEnum `queryParam:"style=form,explode=true,name=criteria"`
	// departure date and time in internet timestamp notation as defined in RFC 3339, section 5.6 (e.g., 2019-02-28T11:36:00-08:00);<br> Ignored if time-dependency modules are disabled
	Departure *time.Time `queryParam:"style=form,explode=true,name=departure"`
	// A comma-separated list of time-related modules to disable (e.g., sc,tf,ev,td).<br>Module names include:<br> sc – ferry schedules; disabled by default; disabled by default and only suitable for demos<br>tf – historic traffic congestion; disabled by default and only suitable for demos<br>ev – road events; disabled by default and only suitable for demos<br>td – time-dependency; disabling this disables sc, tf, and ev modules<br>tr – turn restrictions; if td is disabled, time-dependent turn restrictions are ignored<br>tc - turn costs (e.g., left turns take longer than right turns)
	Disable *string `queryParam:"style=form,explode=true,name=disable"`
	// distance unit of measure (e.g., km, mi). Default is km.
	DistanceUnit *GetTruckDistanceOutputFormatDistanceUnitEnum `queryParam:"style=form,explode=true,name=distanceUnit"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetTruckDistanceOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// A list of any number of route points in start to end order. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#points target='_blank'>points</a>
	Points string `queryParam:"style=form,explode=true,name=points"`
	// If true, route ends at start point. Default is false.
	RoundTrip *bool `queryParam:"style=form,explode=true,name=roundTrip"`
	// Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
	RouteDescription *string `queryParam:"style=form,explode=true,name=routeDescription"`
}

type GetTruckDistanceOutputFormatRequest struct {
	PathParams  GetTruckDistanceOutputFormatPathParams
	QueryParams GetTruckDistanceOutputFormatQueryParams
}

type GetTruckDistanceOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
