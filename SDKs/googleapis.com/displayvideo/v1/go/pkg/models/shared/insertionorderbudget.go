// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InsertionOrderBudgetAutomationTypeEnum - The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.
type InsertionOrderBudgetAutomationTypeEnum string

const (
	InsertionOrderBudgetAutomationTypeEnumInsertionOrderAutomationTypeUnspecified InsertionOrderBudgetAutomationTypeEnum = "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED"
	InsertionOrderBudgetAutomationTypeEnumInsertionOrderAutomationTypeBudget      InsertionOrderBudgetAutomationTypeEnum = "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET"
	InsertionOrderBudgetAutomationTypeEnumInsertionOrderAutomationTypeNone        InsertionOrderBudgetAutomationTypeEnum = "INSERTION_ORDER_AUTOMATION_TYPE_NONE"
	InsertionOrderBudgetAutomationTypeEnumInsertionOrderAutomationTypeBidBudget   InsertionOrderBudgetAutomationTypeEnum = "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET"
)

func (e InsertionOrderBudgetAutomationTypeEnum) ToPointer() *InsertionOrderBudgetAutomationTypeEnum {
	return &e
}

func (e *InsertionOrderBudgetAutomationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED":
		fallthrough
	case "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET":
		fallthrough
	case "INSERTION_ORDER_AUTOMATION_TYPE_NONE":
		fallthrough
	case "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET":
		*e = InsertionOrderBudgetAutomationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertionOrderBudgetAutomationTypeEnum: %v", v)
	}
}

// InsertionOrderBudgetBudgetUnitEnum - Required. Immutable. The budget unit specifies whether the budget is currency based or impression based.
type InsertionOrderBudgetBudgetUnitEnum string

const (
	InsertionOrderBudgetBudgetUnitEnumBudgetUnitUnspecified InsertionOrderBudgetBudgetUnitEnum = "BUDGET_UNIT_UNSPECIFIED"
	InsertionOrderBudgetBudgetUnitEnumBudgetUnitCurrency    InsertionOrderBudgetBudgetUnitEnum = "BUDGET_UNIT_CURRENCY"
	InsertionOrderBudgetBudgetUnitEnumBudgetUnitImpressions InsertionOrderBudgetBudgetUnitEnum = "BUDGET_UNIT_IMPRESSIONS"
)

func (e InsertionOrderBudgetBudgetUnitEnum) ToPointer() *InsertionOrderBudgetBudgetUnitEnum {
	return &e
}

func (e *InsertionOrderBudgetBudgetUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BUDGET_UNIT_UNSPECIFIED":
		fallthrough
	case "BUDGET_UNIT_CURRENCY":
		fallthrough
	case "BUDGET_UNIT_IMPRESSIONS":
		*e = InsertionOrderBudgetBudgetUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertionOrderBudgetBudgetUnitEnum: %v", v)
	}
}

// InsertionOrderBudget - Settings that control how insertion order budget is allocated.
type InsertionOrderBudget struct {
	// The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.
	AutomationType *InsertionOrderBudgetAutomationTypeEnum `json:"automationType,omitempty"`
	// Required. The list of budget segments. Use a budget segment to specify a specific budget for a given period of time an insertion order is running.
	BudgetSegments []InsertionOrderBudgetSegment `json:"budgetSegments,omitempty"`
	// Required. Immutable. The budget unit specifies whether the budget is currency based or impression based.
	BudgetUnit *InsertionOrderBudgetBudgetUnitEnum `json:"budgetUnit,omitempty"`
}
