// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UnshareDirectoryXAmzTargetEnum
type UnshareDirectoryXAmzTargetEnum string

const (
	UnshareDirectoryXAmzTargetEnumDirectoryService20150416UnshareDirectory UnshareDirectoryXAmzTargetEnum = "DirectoryService_20150416.UnshareDirectory"
)

func (e *UnshareDirectoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.UnshareDirectory":
		*e = UnshareDirectoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UnshareDirectoryXAmzTargetEnum: %s", s)
	}
}

type UnshareDirectoryRequest struct {
	UnshareDirectoryRequest shared.UnshareDirectoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              UnshareDirectoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UnshareDirectoryResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// DirectoryNotSharedException
	DirectoryNotSharedException interface{}
	// EntityDoesNotExistException
	EntityDoesNotExistException interface{}
	// InvalidTargetException
	InvalidTargetException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ServiceException
	ServiceException interface{}
	// Success
	UnshareDirectoryResult *shared.UnshareDirectoryResult
}
