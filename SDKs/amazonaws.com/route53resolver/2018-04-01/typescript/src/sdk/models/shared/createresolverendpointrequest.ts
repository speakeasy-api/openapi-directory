/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IpAddressRequest } from "./ipaddressrequest";
import { ResolverEndpointDirectionEnum } from "./resolverendpointdirectionenum";
import { ResolverEndpointTypeEnum } from "./resolverendpointtypeenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateResolverEndpointRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatorRequestId" })
  creatorRequestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Direction" })
  direction: ResolverEndpointDirectionEnum;

  @SpeakeasyMetadata({ elemType: IpAddressRequest })
  @Expose({ name: "IpAddresses" })
  @Type(() => IpAddressRequest)
  ipAddresses: IpAddressRequest[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResolverEndpointType" })
  resolverEndpointType?: ResolverEndpointTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityGroupIds" })
  securityGroupIds: string[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
