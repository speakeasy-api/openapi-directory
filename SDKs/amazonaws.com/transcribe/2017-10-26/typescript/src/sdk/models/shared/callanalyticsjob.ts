/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CallAnalyticsJobSettings } from "./callanalyticsjobsettings";
import { CallAnalyticsJobStatusEnum } from "./callanalyticsjobstatusenum";
import { ChannelDefinition } from "./channeldefinition";
import { LanguageCodeEnum } from "./languagecodeenum";
import { Media } from "./media";
import { MediaFormatEnum } from "./mediaformatenum";
import { Transcript } from "./transcript";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Provides detailed information about a Call Analytics job.</p> <p>To view the job's status, refer to <code>CallAnalyticsJobStatus</code>. If the status is <code>COMPLETED</code>, the job is finished. You can find your completed transcript at the URI specified in <code>TranscriptFileUri</code>. If the status is <code>FAILED</code>, <code>FailureReason</code> provides details on why your transcription job failed.</p> <p>If you enabled personally identifiable information (PII) redaction, the redacted transcript appears at the location specified in <code>RedactedTranscriptFileUri</code>.</p> <p>If you chose to redact the audio in your media file, you can find your redacted media file at the location specified in the <code>RedactedMediaFileUri</code> field of your response.</p>
 */
export class CallAnalyticsJob extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CallAnalyticsJobName" })
  callAnalyticsJobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CallAnalyticsJobStatus" })
  callAnalyticsJobStatus?: CallAnalyticsJobStatusEnum;

  @SpeakeasyMetadata({ elemType: ChannelDefinition })
  @Expose({ name: "ChannelDefinitions" })
  @Type(() => ChannelDefinition)
  channelDefinitions?: ChannelDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "CompletionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completionTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DataAccessRoleArn" })
  dataAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentifiedLanguageScore" })
  identifiedLanguageScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LanguageCode" })
  languageCode?: LanguageCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Media" })
  @Type(() => Media)
  media?: Media;

  @SpeakeasyMetadata()
  @Expose({ name: "MediaFormat" })
  mediaFormat?: MediaFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MediaSampleRateHertz" })
  mediaSampleRateHertz?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Settings" })
  @Type(() => CallAnalyticsJobSettings)
  settings?: CallAnalyticsJobSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * Provides you with the Amazon S3 URI you can use to access your transcript.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Transcript" })
  @Type(() => Transcript)
  transcript?: Transcript;
}
