// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// POSTReconcileRefundRequestActionEnum - The action of the refund reconciliation.
//   - `settle`: Sets the gatewayState to "Settled" and returns the refund object as response.
//   - `reject`: Sets the gatewayState to "FailedToSettle" and handle the event according to the settings configured in the Gateway Reconciliation Configuration in Payments Settings through Zuora UI. See [Configure how to handle refund rejected events](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/M_Payment_Gateways/Gateway_Reconciliation#Configure_how_to_handle_refund_rejected_events) for details.
type POSTReconcileRefundRequestActionEnum string

const (
	POSTReconcileRefundRequestActionEnumSettle POSTReconcileRefundRequestActionEnum = "settle"
	POSTReconcileRefundRequestActionEnumReject POSTReconcileRefundRequestActionEnum = "reject"
)

func (e *POSTReconcileRefundRequestActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "settle":
		fallthrough
	case "reject":
		*e = POSTReconcileRefundRequestActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTReconcileRefundRequestActionEnum: %s", s)
	}
}

type POSTReconcileRefundRequest struct {
	// The action of the refund reconciliation.
	//   - `settle`: Sets the gatewayState to "Settled" and returns the refund object as response.
	//   - `reject`: Sets the gatewayState to "FailedToSettle" and handle the event according to the settings configured in the Gateway Reconciliation Configuration in Payments Settings through Zuora UI. See [Configure how to handle refund rejected events](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/M_Payment_Gateways/Gateway_Reconciliation#Configure_how_to_handle_refund_rejected_events) for details.
	//
	Action *POSTReconcileRefundRequestActionEnum `json:"action,omitempty"`
	// The date and time of the refund reconciliation action, in `yyyy-mm-dd hh:mm:ss` format.
	//
	ActionDate *string `json:"actionDate,omitempty"`
	// The reason of gateway reconciliation.
	//
	GatewayReconciliationReason *string `json:"gatewayReconciliationReason,omitempty"`
	// The status of gateway reconciliation.
	//
	GatewayReconciliationStatus *string `json:"gatewayReconciliationStatus,omitempty"`
	// The payout ID of the refund from the gateway side.
	//
	PayoutID *string `json:"payoutId,omitempty"`
}
