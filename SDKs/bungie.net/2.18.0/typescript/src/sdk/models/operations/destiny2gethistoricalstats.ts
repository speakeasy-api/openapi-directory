/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class Destiny2GetHistoricalStatsRequest extends SpeakeasyBase {
  /**
   * The id of the character to retrieve. You can omit this character ID or set it to 0 to get aggregate stats across all characters.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=characterId",
  })
  characterId: number;

  /**
   * Last day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dayend;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dayend?: Date;

  /**
   * First day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=daystart;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  daystart?: Date;

  /**
   * The Destiny membershipId of the user to retrieve.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=destinyMembershipId",
  })
  destinyMembershipId: number;

  /**
   * Group of stats to include, otherwise only general stats are returned. Comma separated list is allowed. Values: General, Weapons, Medals
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=groups",
  })
  groups?: number[];

  /**
   * A valid non-BungieNet membership type.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=membershipType",
  })
  membershipType: number;

  /**
   * Game modes to return. See the documentation for DestinyActivityModeType for valid values, and pass in string representation, comma delimited.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=modes",
  })
  modes?: number[];

  /**
   * Indicates a specific period type to return. Optional. May be: Daily, AllTime, or Activity
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=periodType",
  })
  periodType?: number;
}

/**
 * Look at the Response property for more information about the nature of this response
 */
export class Destiny2GetHistoricalStats200Wildcard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  detailedErrorTrace?: string;

  @SpeakeasyMetadata()
  errorCode?: number;

  @SpeakeasyMetadata()
  errorStatus?: string;

  @SpeakeasyMetadata()
  message?: string;

  @SpeakeasyMetadata()
  messageData?: Record<string, string>;

  @SpeakeasyMetadata({
    elemType: shared.DestinyHistoricalStatsDestinyHistoricalStatsByPeriod,
  })
  response?: Record<
    string,
    shared.DestinyHistoricalStatsDestinyHistoricalStatsByPeriod
  >;

  @SpeakeasyMetadata()
  throttleSeconds?: number;
}

export class Destiny2GetHistoricalStatsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
