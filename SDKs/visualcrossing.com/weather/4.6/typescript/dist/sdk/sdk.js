"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var historicalweather_1 = require("./historicalweather");
var timelineweatherapi15dayforecastrequest_1 = require("./timelineweatherapi15dayforecastrequest");
var timelineweatherapidaterangerequest_1 = require("./timelineweatherapidaterangerequest");
var timelineweatherapisingledaterequest_1 = require("./timelineweatherapisingledaterequest");
var weatherforecast_1 = require("./weatherforecast");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = ["https://weather.visualcrossing.com"];
/**
 * Weather Forecast and Historical Weather Data via RESTful API.
 *
 * @see {@link https://www.visualcrossing.com/resources/documentation/weather-api/timeline-weather-api/} - Full Timeline Weather API Documentation
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.historicalWeather = new historicalweather_1.HistoricalWeather(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.timelineWeatherAPI15DayForecastRequest =
            new timelineweatherapi15dayforecastrequest_1.TimelineWeatherApi15DayForecastRequest(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.timelineWeatherAPIDateRangeRequest =
            new timelineweatherapidaterangerequest_1.TimelineWeatherAPIDateRangeRequest(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.timelineWeatherAPISingleDateRequest =
            new timelineweatherapisingledaterequest_1.TimelineWeatherAPISingleDateRequest(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.weatherForecast = new weatherforecast_1.WeatherForecast(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
