"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateNetworkInsightsPathResult = exports.CreateNetworkInsightsPathResultNetworkInsightsPath = exports.CreateNetworkInsightsPathResultNetworkInsightsPathTags = exports.CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum = exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource = exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange = exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange = exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination = exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange = exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The destination port range.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange.prototype, "toPort", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange = CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange;
/**
 * The source port range.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange.prototype, "toPort", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange = CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange;
/**
 * Scopes the analysis to network paths that match specific filters at the destination.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination.prototype, "destinationAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination.prototype, "destinationPortRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination.prototype, "sourceAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination.prototype, "sourcePortRange", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination = CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination;
/**
 * The destination port range.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange.prototype, "toPort", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange = CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange;
/**
 * The source port range.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange.prototype, "toPort", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange = CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange;
/**
 * Scopes the analysis to network paths that match specific filters at the source.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource.prototype, "destinationAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource.prototype, "destinationPortRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource.prototype, "sourceAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource.prototype, "sourcePortRange", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource = CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource;
/**
 * The protocol.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum;
(function (CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum) {
    CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum["Tcp"] = "tcp";
    CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum["Udp"] = "udp";
})(CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum = exports.CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum || (exports.CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum = {}));
/**
 * Describes a tag.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPathTags = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPathTags, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPathTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPathTags.prototype, "value", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPathTags;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPathTags = CreateNetworkInsightsPathResultNetworkInsightsPathTags;
/**
 * Information about the path.
 */
var CreateNetworkInsightsPathResultNetworkInsightsPath = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResultNetworkInsightsPath, _super);
    function CreateNetworkInsightsPathResultNetworkInsightsPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "createdDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "destination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "destinationArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "destinationIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "destinationPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "filterAtDestination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "filterAtSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "networkInsightsPathArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "networkInsightsPathId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "source", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "sourceArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "sourceIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInsightsPathResultNetworkInsightsPathTags,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInsightsPathResultNetworkInsightsPath.prototype, "tags", void 0);
    return CreateNetworkInsightsPathResultNetworkInsightsPath;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResultNetworkInsightsPath = CreateNetworkInsightsPathResultNetworkInsightsPath;
/**
 * Success
 */
var CreateNetworkInsightsPathResult = /** @class */ (function (_super) {
    __extends(CreateNetworkInsightsPathResult, _super);
    function CreateNetworkInsightsPathResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInsightsPathResultNetworkInsightsPath)
    ], CreateNetworkInsightsPathResult.prototype, "networkInsightsPath", void 0);
    return CreateNetworkInsightsPathResult;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInsightsPathResult = CreateNetworkInsightsPathResult;
