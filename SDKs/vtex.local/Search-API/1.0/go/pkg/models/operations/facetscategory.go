// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type FacetscategoryPathParams struct {
	// Term used for the facet's search. You can search for as much term as you want. The term can be: `categoryId`, `brandId`, `specificationId`.
	Term string `pathParam:"style=simple,explode=false,name=term"`
}

type FacetscategoryQueryParams struct {
	// Starter page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
	From *string `queryParam:"style=form,explode=true,name=_from"`
	// Finisher page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
	To *string `queryParam:"style=form,explode=true,name=_to"`
	// Mapping of the term. It can be `c` for a category, `b` for a brand, or `specificationFilter_{specificationId}` for a specification. You need to include a map for each term you are searching for in the same term's order.
	Map string `queryParam:"style=form,explode=true,name=map"`
}

type FacetscategoryHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Describes the type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type FacetscategoryRequest struct {
	PathParams  FacetscategoryPathParams
	QueryParams FacetscategoryQueryParams
	Headers     FacetscategoryHeaders
}

type Facetscategory200ApplicationJSONBrands struct {
	// Link of the facet.
	Link string `json:"Link"`
	// Enconded link of the facet.
	LinkEncoded string `json:"LinkEncoded"`
	// Mapping of the facet.
	Map string `json:"Map"`
	// Brand name.
	Name string `json:"Name"`
	// Position of the facet.
	Position int64 `json:"Position"`
	// Quantity of facets.
	Quantity int64 `json:"Quantity"`
	// Value of the facet.
	Value string `json:"Value"`
}

type Facetscategory200ApplicationJSONCategoriesTreesChildren struct {
	// Category children.
	Children []interface{} `json:"Children"`
	// Category ID.
	ID int64 `json:"Id"`
	// Link of the facet.
	Link string `json:"Link"`
	// Encoded link of the facet.
	LinkEncoded string `json:"LinkEncoded"`
	// Mapping of the facet.
	Map string `json:"Map"`
	// Category name.
	Name string `json:"Name"`
	// Position of the facet.
	Position int64 `json:"Position"`
	// Quantity of the facets.
	Quantity int64 `json:"Quantity"`
	// Value of the facet.
	Value string `json:"Value"`
}

type Facetscategory200ApplicationJSONCategoriesTrees struct {
	// Category children.
	Children []Facetscategory200ApplicationJSONCategoriesTreesChildren `json:"Children"`
	// Category ID.
	ID int64 `json:"Id"`
	// Link of the facet.
	Link string `json:"Link"`
	// Encoded link of the facet.
	LinkEncoded string `json:"LinkEncoded"`
	// Mapping of the facet.
	Map string `json:"Map"`
	// Category name.
	Name string `json:"Name"`
	// Position of the facet.
	Position int64 `json:"Position"`
	// Quantity of the facets.
	Quantity int64 `json:"Quantity"`
	// Value of the facet.
	Value string `json:"Value"`
}

type Facetscategory200ApplicationJSONDepartments struct {
	// Link of the facet.
	Link string `json:"Link"`
	// Encoded link of the facet.
	LinkEncoded string `json:"LinkEncoded"`
	// Mapping of the facet.
	Map string `json:"Map"`
	// Category name.
	Name string `json:"Name"`
	// Position of the facets.
	Position int64 `json:"Position"`
	// Quantity of facets.
	Quantity int64 `json:"Quantity"`
	// Value of the facet.
	Value string `json:"Value"`
}

// Facetscategory200ApplicationJSONSummaryBrands - Brands' quantity of displayed and total items.
type Facetscategory200ApplicationJSONSummaryBrands struct {
	// Quantity of displayed items.
	DisplayedItems int64 `json:"DisplayedItems"`
	// Quantity of total items.
	TotalItems int64 `json:"TotalItems"`
}

// Facetscategory200ApplicationJSONSummaryCategoriesTrees - Category tree's quantity of displayed and total items.
type Facetscategory200ApplicationJSONSummaryCategoriesTrees struct {
	// Quantity of displayed items.
	DisplayedItems int64 `json:"DisplayedItems"`
	// Quantity of total items.
	TotalItems int64 `json:"TotalItems"`
}

// Facetscategory200ApplicationJSONSummaryDepartments - Departments' quantity of displayed and total items.
type Facetscategory200ApplicationJSONSummaryDepartments struct {
	// Quantity of displayed items.
	DisplayedItems int64 `json:"DisplayedItems"`
	// Quantity of total items.
	TotalItems int64 `json:"TotalItems"`
}

// Facetscategory200ApplicationJSONSummaryPriceRanges - Price ranges' quantity of displayed and total items.
type Facetscategory200ApplicationJSONSummaryPriceRanges struct {
	// Quantity of displayed items.
	DisplayedItems int64 `json:"DisplayedItems"`
	// Quantity of total items.
	TotalItems int64 `json:"TotalItems"`
}

// Facetscategory200ApplicationJSONSummary - Summary of the facets.
type Facetscategory200ApplicationJSONSummary struct {
	// Brands' quantity of displayed and total items.
	Brands Facetscategory200ApplicationJSONSummaryBrands `json:"Brands"`
	// Category tree's quantity of displayed and total items.
	CategoriesTrees Facetscategory200ApplicationJSONSummaryCategoriesTrees `json:"CategoriesTrees"`
	// Departments' quantity of displayed and total items.
	Departments Facetscategory200ApplicationJSONSummaryDepartments `json:"Departments"`
	// Price ranges' quantity of displayed and total items.
	PriceRanges Facetscategory200ApplicationJSONSummaryPriceRanges `json:"PriceRanges"`
	// Specification filters' quantity of displayed and total items.
	SpecificationFilters map[string]interface{} `json:"SpecificationFilters"`
}

// Facetscategory200ApplicationJSON - OK
type Facetscategory200ApplicationJSON struct {
	// Array of general information about the brands.
	Brands []Facetscategory200ApplicationJSONBrands `json:"Brands"`
	// Array of the category tree.
	CategoriesTrees []Facetscategory200ApplicationJSONCategoriesTrees `json:"CategoriesTrees"`
	// Array of general information about the categories.
	Departments []Facetscategory200ApplicationJSONDepartments `json:"Departments"`
	// Array with general information of the price ranges.
	PriceRanges []interface{} `json:"PriceRanges"`
	// Object with general information of specifications.
	SpecificationFilters map[string]interface{} `json:"SpecificationFilters"`
	// Summary of the facets.
	Summary Facetscategory200ApplicationJSONSummary `json:"Summary"`
}

type FacetscategoryResponse struct {
	ContentType string
	// OK
	Facetscategory200ApplicationJSONObject *Facetscategory200ApplicationJSON
	StatusCode                             int
	RawResponse                            *http.Response
}
