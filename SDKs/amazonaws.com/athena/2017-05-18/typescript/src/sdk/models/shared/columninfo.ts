/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ColumnNullableEnum } from "./columnnullableenum";
import { Expose } from "class-transformer";

/**
 * Information about the columns in a query execution result.
 */
export class ColumnInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CaseSensitive" })
  caseSensitive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CatalogName" })
  catalogName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Label" })
  label?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Nullable" })
  nullable?: ColumnNullableEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Precision" })
  precision?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Scale" })
  scale?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SchemaName" })
  schemaName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: string;
}
