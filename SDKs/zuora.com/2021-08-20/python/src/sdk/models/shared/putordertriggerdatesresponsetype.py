"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTOrderTriggerDatesResponseTypeReasons:
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The error code of response."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The detail information of the error response"""  
    
class PUTOrderTriggerDatesResponseTypeStatusEnum(str, Enum):
    r"""Status of the order."""
    COMPLETED = 'Completed'
    PENDING = 'Pending'

class PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum(str, Enum):
    r"""Status of the subscription. `Pending Activation` and `Pending Acceptance` are only applicable for an order that contains a `CreateSubscription` order action."""
    ACTIVE = 'Active'
    PENDING_ACTIVATION = 'Pending Activation'
    PENDING_ACCEPTANCE = 'Pending Acceptance'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTOrderTriggerDatesResponseTypeSubscriptions:
    
    status: Optional[PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the subscription. `Pending Activation` and `Pending Acceptance` are only applicable for an order that contains a `CreateSubscription` order action."""  
    subscription_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptionNumber'), 'exclude': lambda f: f is None }})
    r"""Subscription number of the subscription updated."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTOrderTriggerDatesResponseType:
    
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber'), 'exclude': lambda f: f is None }})
    r"""The account number for the order."""  
    order_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderNumber'), 'exclude': lambda f: f is None }})
    r"""The order number of the order updated."""  
    process_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processId'), 'exclude': lambda f: f is None }})
    r"""The Id of the process that handle the operation."""  
    reasons: Optional[list[PUTOrderTriggerDatesResponseTypeReasons]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasons'), 'exclude': lambda f: f is None }})  
    status: Optional[PUTOrderTriggerDatesResponseTypeStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the order."""  
    subscriptions: Optional[list[PUTOrderTriggerDatesResponseTypeSubscriptions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptions'), 'exclude': lambda f: f is None }})
    r"""The subscriptions updated."""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the call succeeded."""  
    