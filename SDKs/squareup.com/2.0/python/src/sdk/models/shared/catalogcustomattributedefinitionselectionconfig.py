"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogcustomattributedefinitionselectionconfigcustomattributeselection as shared_catalogcustomattributedefinitionselectionconfigcustomattributeselection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogCustomAttributeDefinitionSelectionConfig:
    r"""Configuration associated with `SELECTION`-type custom attribute definitions."""
    
    allowed_selections: Optional[list[shared_catalogcustomattributedefinitionselectionconfigcustomattributeselection.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed_selections'), 'exclude': lambda f: f is None }})
    r"""The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100
    selections can be defined. Can be modified.
    """  
    max_allowed_selections: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_allowed_selections'), 'exclude': lambda f: f is None }})
    r"""The maximum number of selections that can be set. The maximum value for this
    attribute is 100. The default value is 1. The value can be modified, but changing the value will not
    affect existing custom attribute values on objects. Clients need to
    handle custom attributes with more selected values than allowed by this limit.
    """  
    