/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateSubscriberRequestBody {
    /**
     * The Amazon S3 or Lake Formation access type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessTypes")
    public org.openapis.openapi.models.shared.AccessTypeEnum[] accessTypes;
    public CreateSubscriberRequestBody withAccessTypes(org.openapis.openapi.models.shared.AccessTypeEnum[] accessTypes) {
        this.accessTypes = accessTypes;
        return this;
    }
    
    /**
     * The Amazon Web Services account ID used to access your data.
     */
    @JsonProperty("accountId")
    public String accountId;
    public CreateSubscriberRequestBody withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The external ID of the subscriber. This lets the user that is assuming the role assert the circumstances in which they are operating. It also provides a way for the account owner to permit the role to be assumed only under specific circumstances.
     */
    @JsonProperty("externalId")
    public String externalId;
    public CreateSubscriberRequestBody withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }
    
    /**
     * The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.
     */
    @JsonProperty("sourceTypes")
    public org.openapis.openapi.models.shared.SourceType[] sourceTypes;
    public CreateSubscriberRequestBody withSourceTypes(org.openapis.openapi.models.shared.SourceType[] sourceTypes) {
        this.sourceTypes = sourceTypes;
        return this;
    }
    
    /**
     * The description for your subscriber account in Security Lake. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriberDescription")
    public String subscriberDescription;
    public CreateSubscriberRequestBody withSubscriberDescription(String subscriberDescription) {
        this.subscriberDescription = subscriberDescription;
        return this;
    }
    
    /**
     * The name of your Security Lake subscriber account.
     */
    @JsonProperty("subscriberName")
    public String subscriberName;
    public CreateSubscriberRequestBody withSubscriberName(String subscriberName) {
        this.subscriberName = subscriberName;
        return this;
    }
    
}
