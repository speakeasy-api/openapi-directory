// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum - The health status.
type DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum string

const (
	DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnumOk       DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum = "OK"
	DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnumImpaired DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum = "IMPAIRED"
)

func (e DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum) ToPointer() *DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum {
	return &e
}

func (e *DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		fallthrough
	case "IMPAIRED":
		*e = DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum: %v", v)
	}
}

// DescribeElasticGpusResultElasticGpuSetElasticGpuHealth - The status of the Elastic Graphics accelerator.
type DescribeElasticGpusResultElasticGpuSetElasticGpuHealth struct {
	Status *DescribeElasticGpusResultElasticGpuSetElasticGpuHealthStatusEnum
}

// DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum - The state of the Elastic Graphics accelerator.
type DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum string

const (
	DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnumAttached DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum = "ATTACHED"
)

func (e DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum) ToPointer() *DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum {
	return &e
}

func (e *DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ATTACHED":
		*e = DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum: %v", v)
	}
}

// DescribeElasticGpusResultElasticGpuSetTags - Describes a tag.
type DescribeElasticGpusResultElasticGpuSetTags struct {
	Key   *string
	Value *string
}

// DescribeElasticGpusResultElasticGpuSet - Describes an Elastic Graphics accelerator.
type DescribeElasticGpusResultElasticGpuSet struct {
	AvailabilityZone *string
	ElasticGpuHealth *DescribeElasticGpusResultElasticGpuSetElasticGpuHealth
	ElasticGpuID     *string
	ElasticGpuState  *DescribeElasticGpusResultElasticGpuSetElasticGpuStateEnum
	ElasticGpuType   *string
	InstanceID       *string
	Tags             []DescribeElasticGpusResultElasticGpuSetTags
}

// DescribeElasticGpusResult - Success
type DescribeElasticGpusResult struct {
	ElasticGpuSet []DescribeElasticGpusResultElasticGpuSet
	MaxResults    *int64
	NextToken     *string
}
