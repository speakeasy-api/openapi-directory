// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// BankTransferEventListRequestBankTransferTypeEnum - The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
type BankTransferEventListRequestBankTransferTypeEnum string

const (
	BankTransferEventListRequestBankTransferTypeEnumDebit  BankTransferEventListRequestBankTransferTypeEnum = "debit"
	BankTransferEventListRequestBankTransferTypeEnumCredit BankTransferEventListRequestBankTransferTypeEnum = "credit"
	BankTransferEventListRequestBankTransferTypeEnumNull   BankTransferEventListRequestBankTransferTypeEnum = "null"
)

func (e *BankTransferEventListRequestBankTransferTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "debit":
		fallthrough
	case "credit":
		fallthrough
	case "null":
		*e = BankTransferEventListRequestBankTransferTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BankTransferEventListRequestBankTransferTypeEnum: %s", s)
	}
}

// BankTransferEventListRequestBankTransferDirectionEnum - Indicates the direction of the transfer: `outbound`: for API-initiated transfers
// `inbound`: for payments received by the FBO account.
type BankTransferEventListRequestBankTransferDirectionEnum string

const (
	BankTransferEventListRequestBankTransferDirectionEnumInbound  BankTransferEventListRequestBankTransferDirectionEnum = "inbound"
	BankTransferEventListRequestBankTransferDirectionEnumOutbound BankTransferEventListRequestBankTransferDirectionEnum = "outbound"
	BankTransferEventListRequestBankTransferDirectionEnumNull     BankTransferEventListRequestBankTransferDirectionEnum = "null"
)

func (e *BankTransferEventListRequestBankTransferDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inbound":
		fallthrough
	case "outbound":
		fallthrough
	case "null":
		*e = BankTransferEventListRequestBankTransferDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BankTransferEventListRequestBankTransferDirectionEnum: %s", s)
	}
}

// BankTransferEventListRequest - BankTransferEventListRequest defines the request schema for `/bank_transfer/event/list`
type BankTransferEventListRequest struct {
	// The account ID to get events for all transactions to/from an account.
	AccountID *string `json:"account_id,omitempty"`
	// Plaidâ€™s unique identifier for a bank transfer.
	BankTransferID *string `json:"bank_transfer_id,omitempty"`
	// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
	BankTransferType *BankTransferEventListRequestBankTransferTypeEnum `json:"bank_transfer_type,omitempty"`
	// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
	ClientID *string `json:"client_id,omitempty"`
	// The maximum number of bank transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
	Count *int64 `json:"count,omitempty"`
	// Indicates the direction of the transfer: `outbound`: for API-initiated transfers
	// `inbound`: for payments received by the FBO account.
	Direction *BankTransferEventListRequestBankTransferDirectionEnum `json:"direction,omitempty"`
	// The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
	EndDate *time.Time `json:"end_date,omitempty"`
	// Filter events by event type.
	EventTypes []BankTransferEventTypeEnum `json:"event_types,omitempty"`
	// The offset into the list of bank transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.
	Offset *int64 `json:"offset,omitempty"`
	// The origination account ID to get events for transfers from a specific origination account.
	OriginationAccountID *string `json:"origination_account_id,omitempty"`
	// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
	Secret *string `json:"secret,omitempty"`
	// The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
	StartDate *time.Time `json:"start_date,omitempty"`
}
