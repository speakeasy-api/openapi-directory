/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Segment - An audio segment in an episode.
 */
public class Segment {
    /**
     * The number of audio channels in the segment. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channels")
    public Integer channels;

    public Segment withChannels(Integer channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * The date the segment was created. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;

    public Segment withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The ID of the episode that owns the segment.
     */
    @JsonProperty("episodeId")
    public Long episodeId;

    public Segment withEpisodeId(Long episodeId) {
        this.episodeId = episodeId;
        return this;
    }
    
    /**
     * The name of the audio content file. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;

    public Segment withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * The size of the audio content file in bytes. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileSize")
    public Long fileSize;

    public Segment withFileSize(Long fileSize) {
        this.fileSize = fileSize;
        return this;
    }
    
    /**
     * The unique ID of the segment. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Segment withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The in-cue copy that signals the start of the segment to a board operator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inCue")
    public String inCue;

    public Segment withInCue(String inCue) {
        this.inCue = inCue;
        return this;
    }
    
    /**
     * The date the segment was last modified/updated. Automatically updated on any write operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModifiedDate")
    public OffsetDateTime lastModifiedDate;

    public Segment withLastModifiedDate(OffsetDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
        return this;
    }
    
    /**
     * The length (duration) of the segment in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length")
    public Integer length;

    public Segment withLength(Integer length) {
        this.length = length;
        return this;
    }
    
    /**
     * The original name of the audio content file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalFileName")
    public String originalFileName;

    public Segment withOriginalFileName(String originalFileName) {
        this.originalFileName = originalFileName;
        return this;
    }
    
    /**
     * The out-cue copy that signals the end of the segment to a board operator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outCue")
    public String outCue;

    public Segment withOutCue(String outCue) {
        this.outCue = outCue;
        return this;
    }
    
    /**
     * The number of the segment in the episode, starting with 1.
     */
    @JsonProperty("segmentNumber")
    public Integer segmentNumber;

    public Segment withSegmentNumber(Integer segmentNumber) {
        this.segmentNumber = segmentNumber;
        return this;
    }
    
    public Segment(@JsonProperty("episodeId") Long episodeId, @JsonProperty("segmentNumber") Integer segmentNumber) {
        this.episodeId = episodeId;
        this.segmentNumber = segmentNumber;
  }
}
