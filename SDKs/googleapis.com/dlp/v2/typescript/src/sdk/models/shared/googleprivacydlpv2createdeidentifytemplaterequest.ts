/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2DeidentifyTemplateInput } from "./googleprivacydlpv2deidentifytemplate";
import { Expose, Type } from "class-transformer";

/**
 * Request message for CreateDeidentifyTemplate.
 */
export class GooglePrivacyDlpV2CreateDeidentifyTemplateRequestInput extends SpeakeasyBase {
  /**
   * DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deidentifyTemplate" })
  @Type(() => GooglePrivacyDlpV2DeidentifyTemplateInput)
  deidentifyTemplate?: GooglePrivacyDlpV2DeidentifyTemplateInput;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;

  /**
   * The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "templateId" })
  templateId?: string;
}
