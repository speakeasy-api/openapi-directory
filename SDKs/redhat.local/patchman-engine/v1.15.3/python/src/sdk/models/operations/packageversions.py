"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import controllers_packageversionsresponse as shared_controllers_packageversionsresponse
from typing import Optional


@dataclasses.dataclass
class PackageVersionsSecurity:
    
    rh_identity: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-rh-identity' }})  
    

@dataclasses.dataclass
class PackageVersionsRequest:
    
    package_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'package_name', 'style': 'simple', 'explode': False }})
    r"""Package name"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Limit for paging, set -1 to return all"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Offset for paging"""  
    

@dataclasses.dataclass
class PackageVersionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    controllers_package_versions_response: Optional[shared_controllers_packageversionsresponse.ControllersPackageVersionsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    