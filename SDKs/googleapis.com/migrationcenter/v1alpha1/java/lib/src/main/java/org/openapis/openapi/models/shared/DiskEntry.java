/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DiskEntry - Single disk entry.
 */
public class DiskEntry {
    /**
     * Disk label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskLabel")
    public String diskLabel;
    public DiskEntry withDiskLabel(String diskLabel) {
        this.diskLabel = diskLabel;
        return this;
    }
    
    /**
     * Disk label type (e.g. BIOS/GPT)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskLabelType")
    public String diskLabelType;
    public DiskEntry withDiskLabelType(String diskLabelType) {
        this.diskLabelType = diskLabelType;
        return this;
    }
    
    /**
     * Disk hardware address (e.g. 0:1 for SCSI).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hwAddress")
    public String hwAddress;
    public DiskEntry withHwAddress(String hwAddress) {
        this.hwAddress = hwAddress;
        return this;
    }
    
    /**
     * Disks interface type (e.g. SATA/SCSI)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interfaceType")
    public String interfaceType;
    public DiskEntry withInterfaceType(String interfaceType) {
        this.interfaceType = interfaceType;
        return this;
    }
    
    /**
     * Disk partition list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partitions")
    public DiskPartitionList partitions;
    public DiskEntry withPartitions(DiskPartitionList partitions) {
        this.partitions = partitions;
        return this;
    }
    
    /**
     * Disk status (e.g. online).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public DiskEntry withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Disk capacity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCapacityBytes")
    public String totalCapacityBytes;
    public DiskEntry withTotalCapacityBytes(String totalCapacityBytes) {
        this.totalCapacityBytes = totalCapacityBytes;
        return this;
    }
    
    /**
     * Disk free space.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalFreeBytes")
    public String totalFreeBytes;
    public DiskEntry withTotalFreeBytes(String totalFreeBytes) {
        this.totalFreeBytes = totalFreeBytes;
        return this;
    }
    
    /**
     * VMware disk config details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmwareConfig")
    public VmwareDiskConfig vmwareConfig;
    public DiskEntry withVmwareConfig(VmwareDiskConfig vmwareConfig) {
        this.vmwareConfig = vmwareConfig;
        return this;
    }
    
}
