/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetSearchRequest extends SpeakeasyBase {
  /**
   * Page number of search results. Ex. https://api.byautomata.io/search?page=0&link=cloud+computing,enterprise,security
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: string;

  /**
   * We provide information about related companies based on the search terms you provide. Separate search terms with commas. Ex. https://api.byautomata.io/search?link=cloud+computing,enterprise,security
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=terms" })
  terms: string;
}

/**
 * A successful operation
 */
export class GetSearch200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "calls_per_month" })
  callsPerMonth?: string;

  @SpeakeasyMetadata({ elemType: shared.SimilarCompanySearch })
  @Expose({ name: "companies" })
  @Type(() => shared.SimilarCompanySearch)
  companies?: shared.SimilarCompanySearch[];

  @SpeakeasyMetadata()
  @Expose({ name: "count_remaining" })
  countRemaining?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "renewal_date" })
  renewalDate?: string;
}

export class GetSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A successful operation
   */
  @SpeakeasyMetadata()
  getSearch200ApplicationJSONObject?: GetSearch200ApplicationJSON;
}
