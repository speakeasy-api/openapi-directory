// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum - Update replication configuration template data plane routing request.
type UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum string

const (
	UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnumPrivateIP UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum = "PRIVATE_IP"
	UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnumPublicIP  UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum = "PUBLIC_IP"
)

func (e UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum) ToPointer() *UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum {
	return &e
}

func (e *UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRIVATE_IP":
		fallthrough
	case "PUBLIC_IP":
		*e = UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum: %v", v)
	}
}

// UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum - Update replication configuration template use default large Staging Disk type request.
type UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum string

const (
	UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnumGp2 UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum = "GP2"
	UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnumSt1 UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum = "ST1"
	UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnumGp3 UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum = "GP3"
)

func (e UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum) ToPointer() *UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum {
	return &e
}

func (e *UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GP2":
		fallthrough
	case "ST1":
		fallthrough
	case "GP3":
		*e = UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum: %v", v)
	}
}

// UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum - Update replication configuration template EBS encryption request.
type UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum string

const (
	UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnumDefault UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum = "DEFAULT"
	UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnumCustom  UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum = "CUSTOM"
)

func (e UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum) ToPointer() *UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum {
	return &e
}

func (e *UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULT":
		fallthrough
	case "CUSTOM":
		*e = UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum: %v", v)
	}
}

type UpdateReplicationConfigurationTemplateRequestBody struct {
	// Update replication configuration template ARN request.
	Arn *string `json:"arn,omitempty"`
	// Update replication configuration template associate default Application Migration Service Security group request.
	AssociateDefaultSecurityGroup *bool `json:"associateDefaultSecurityGroup,omitempty"`
	// Update replication configuration template bandwidth throttling request.
	BandwidthThrottling *int64 `json:"bandwidthThrottling,omitempty"`
	// Update replication configuration template create Public IP request.
	CreatePublicIP *bool `json:"createPublicIP,omitempty"`
	// Update replication configuration template data plane routing request.
	DataPlaneRouting *UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum `json:"dataPlaneRouting,omitempty"`
	// Update replication configuration template use default large Staging Disk type request.
	DefaultLargeStagingDiskType *UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum `json:"defaultLargeStagingDiskType,omitempty"`
	// Update replication configuration template EBS encryption request.
	EbsEncryption *UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum `json:"ebsEncryption,omitempty"`
	// Update replication configuration template EBS encryption key ARN request.
	EbsEncryptionKeyArn *string `json:"ebsEncryptionKeyArn,omitempty"`
	// Update replication configuration template template ID request.
	ReplicationConfigurationTemplateID string `json:"replicationConfigurationTemplateID"`
	// Update replication configuration template Replication Server instance type request.
	ReplicationServerInstanceType *string `json:"replicationServerInstanceType,omitempty"`
	// Update replication configuration template Replication Server Security groups IDs request.
	ReplicationServersSecurityGroupsIDs []string `json:"replicationServersSecurityGroupsIDs,omitempty"`
	// Update replication configuration template Staging Area subnet ID request.
	StagingAreaSubnetID *string `json:"stagingAreaSubnetId,omitempty"`
	// Update replication configuration template Staging Area Tags request.
	StagingAreaTags map[string]string `json:"stagingAreaTags,omitempty"`
	// Update replication configuration template use dedicated Replication Server request.
	UseDedicatedReplicationServer *bool `json:"useDedicatedReplicationServer,omitempty"`
}

type UpdateReplicationConfigurationTemplateRequest struct {
	RequestBody       UpdateReplicationConfigurationTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateReplicationConfigurationTemplateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	ReplicationConfigurationTemplate *shared.ReplicationConfigurationTemplate
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
