// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectSettingsClassificationTypeEnum - Gets or sets the classification type of the project
type ProjectSettingsClassificationTypeEnum string

const (
	ProjectSettingsClassificationTypeEnumMulticlass ProjectSettingsClassificationTypeEnum = "Multiclass"
	ProjectSettingsClassificationTypeEnumMultilabel ProjectSettingsClassificationTypeEnum = "Multilabel"
)

func (e ProjectSettingsClassificationTypeEnum) ToPointer() *ProjectSettingsClassificationTypeEnum {
	return &e
}

func (e *ProjectSettingsClassificationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Multiclass":
		fallthrough
	case "Multilabel":
		*e = ProjectSettingsClassificationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectSettingsClassificationTypeEnum: %v", v)
	}
}

// ProjectSettings - Represents settings associated with a project
type ProjectSettings struct {
	// Gets or sets the classification type of the project
	ClassificationType *ProjectSettingsClassificationTypeEnum `json:"classificationType,omitempty"`
	// Gets or sets the id of the Domain to use with this project
	DomainID *string `json:"domainId,omitempty"`
}
