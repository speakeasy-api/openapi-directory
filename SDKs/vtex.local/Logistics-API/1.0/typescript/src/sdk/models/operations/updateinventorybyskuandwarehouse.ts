/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UpdateInventoryBySkuandWarehouseUpdateInventoryBySkuandWarehouseRequest extends SpeakeasyBase {
  /**
   * Defines the corresponding moment to the informed warehouse. It is useful due to the liberation of handling order reservations.
   *
   * @remarks
   *
   * When requested as `null`, this value will be the date/time of the request. Its format is `DateTimeOffset`, as in `yyyy-mm-dd-Thh:mm:ss`. For example: `2022-03-15T00:52:16`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateUtcOnBalanceSystem" })
  dateUtcOnBalanceSystem?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeToRefill (deprecated)" })
  timeToRefillDeprecated: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimitedQuantity" })
  unlimitedQuantity: boolean;
}

export class UpdateInventoryBySkuandWarehouseRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateInventoryBySkuandWarehouseUpdateInventoryBySkuandWarehouseRequest;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=skuId",
  })
  skuId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=warehouseId",
  })
  warehouseId: string;
}

export class UpdateInventoryBySkuandWarehouseResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
