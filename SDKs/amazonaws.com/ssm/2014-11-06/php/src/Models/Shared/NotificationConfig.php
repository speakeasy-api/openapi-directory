<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NotificationConfig - Configurations for sending notifications.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NotificationConfig
{
	#[\JMS\Serializer\Annotation\SerializedName('NotificationArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notificationArn = null;
    
    /**
     * $notificationEvents
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NotificationEventEnum> $notificationEvents
     */
	#[\JMS\Serializer\Annotation\SerializedName('NotificationEvents')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\NotificationEventEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notificationEvents = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotificationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NotificationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NotificationTypeEnum $notificationType = null;
    
	public function __construct()
	{
		$this->notificationArn = null;
		$this->notificationEvents = null;
		$this->notificationType = null;
	}
}
