"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appnetworkaccesstype_enum as shared_appnetworkaccesstype_enum
from ..shared import appsecuritygroupmanagement_enum as shared_appsecuritygroupmanagement_enum
from ..shared import authmode_enum as shared_authmode_enum
from ..shared import defaultspacesettings as shared_defaultspacesettings
from ..shared import domainsettings as shared_domainsettings
from ..shared import tag as shared_tag
from ..shared import usersettings as shared_usersettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateDomainRequest:
    
    auth_mode: shared_authmode_enum.AuthModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthMode') }})  
    default_user_settings: shared_usersettings.UserSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultUserSettings') }})  
    domain_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainName') }})  
    subnet_ids: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubnetIds') }})  
    vpc_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId') }})  
    app_network_access_type: Optional[shared_appnetworkaccesstype_enum.AppNetworkAccessTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppNetworkAccessType'), 'exclude': lambda f: f is None }})  
    app_security_group_management: Optional[shared_appsecuritygroupmanagement_enum.AppSecurityGroupManagementEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppSecurityGroupManagement'), 'exclude': lambda f: f is None }})  
    default_space_settings: Optional[shared_defaultspacesettings.DefaultSpaceSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultSpaceSettings'), 'exclude': lambda f: f is None }})  
    domain_settings: Optional[shared_domainsettings.DomainSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainSettings'), 'exclude': lambda f: f is None }})  
    home_efs_file_system_kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeEfsFileSystemKmsKeyId'), 'exclude': lambda f: f is None }})  
    kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsKeyId'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    