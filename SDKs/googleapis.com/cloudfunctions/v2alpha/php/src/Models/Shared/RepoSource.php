<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RepoSource - Location of the source in a Google Cloud Source Repository.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RepoSource
{
    /**
     * Regex matching branches to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     * 
     * @var ?string $branchName
     */
	#[\JMS\Serializer\Annotation\SerializedName('branchName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branchName = null;
    
    /**
     * Explicit commit SHA to build.
     * 
     * @var ?string $commitSha
     */
	#[\JMS\Serializer\Annotation\SerializedName('commitSha')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitSha = null;
    
    /**
     * Directory, relative to the source root, in which to run the build. This must be a relative path. If a step's `dir` is specified and is an absolute path, this value is ignored for that step's execution. eg. helloworld (no leading slash allowed)
     * 
     * @var ?string $dir
     */
	#[\JMS\Serializer\Annotation\SerializedName('dir')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dir = null;
    
    /**
     * Only trigger a build if the revision regex does NOT match the revision regex.
     * 
     * @var ?bool $invertRegex
     */
	#[\JMS\Serializer\Annotation\SerializedName('invertRegex')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $invertRegex = null;
    
    /**
     * ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.
     * 
     * @var ?string $projectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('projectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectId = null;
    
    /**
     * Name of the Cloud Source Repository.
     * 
     * @var ?string $repoName
     */
	#[\JMS\Serializer\Annotation\SerializedName('repoName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $repoName = null;
    
    /**
     * Regex matching tags to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     * 
     * @var ?string $tagName
     */
	#[\JMS\Serializer\Annotation\SerializedName('tagName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tagName = null;
    
	public function __construct()
	{
		$this->branchName = null;
		$this->commitSha = null;
		$this->dir = null;
		$this->invertRegex = null;
		$this->projectId = null;
		$this->repoName = null;
		$this->tagName = null;
	}
}
