// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AndroidAppStateEnum - Output only. The lifecycle state of the App.
type AndroidAppStateEnum string

const (
	AndroidAppStateEnumStateUnspecified AndroidAppStateEnum = "STATE_UNSPECIFIED"
	AndroidAppStateEnumActive           AndroidAppStateEnum = "ACTIVE"
	AndroidAppStateEnumDeleted          AndroidAppStateEnum = "DELETED"
)

func (e *AndroidAppStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETED":
		*e = AndroidAppStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AndroidAppStateEnum: %s", s)
	}
}

// AndroidApp - Details of a Firebase App for Android.
type AndroidApp struct {
	// The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `AndroidApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.androidApps/getConfig). If `api_key_id` is not set in requests to [`androidApps.Create`](../../rest/v1beta1/projects.androidApps/create), then Firebase automatically associates an `api_key_id` with the `AndroidApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `AndroidApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.
	APIKeyID *string `json:"apiKeyId,omitempty"`
	// Output only. Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified.
	AppID *string `json:"appId,omitempty"`
	// The user-assigned display name for the `AndroidApp`.
	DisplayName *string `json:"displayName,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.
	Etag *string `json:"etag,omitempty"`
	// Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.
	ExpireTime *string `json:"expireTime,omitempty"`
	// The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).
	Name *string `json:"name,omitempty"`
	// Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.
	PackageName *string `json:"packageName,omitempty"`
	// Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`.
	ProjectID *string `json:"projectId,omitempty"`
	// The SHA1 certificate hashes for the AndroidApp.
	Sha1Hashes []string `json:"sha1Hashes,omitempty"`
	// The SHA256 certificate hashes for the AndroidApp.
	Sha256Hashes []string `json:"sha256Hashes,omitempty"`
	// Output only. The lifecycle state of the App.
	State *AndroidAppStateEnum `json:"state,omitempty"`
}

// AndroidAppInput - Details of a Firebase App for Android.
type AndroidAppInput struct {
	// The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `AndroidApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.androidApps/getConfig). If `api_key_id` is not set in requests to [`androidApps.Create`](../../rest/v1beta1/projects.androidApps/create), then Firebase automatically associates an `api_key_id` with the `AndroidApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `AndroidApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.
	APIKeyID *string `json:"apiKeyId,omitempty"`
	// The user-assigned display name for the `AndroidApp`.
	DisplayName *string `json:"displayName,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.
	Etag *string `json:"etag,omitempty"`
	// The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).
	Name *string `json:"name,omitempty"`
	// Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.
	PackageName *string `json:"packageName,omitempty"`
	// The SHA1 certificate hashes for the AndroidApp.
	Sha1Hashes []string `json:"sha1Hashes,omitempty"`
	// The SHA256 certificate hashes for the AndroidApp.
	Sha256Hashes []string `json:"sha256Hashes,omitempty"`
}
