"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2bigquerytable as shared_googleprivacydlpv2bigquerytable
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum(str, Enum):
    r"""Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage."""
    OUTPUT_SCHEMA_UNSPECIFIED = 'OUTPUT_SCHEMA_UNSPECIFIED'
    BASIC_COLUMNS = 'BASIC_COLUMNS'
    GCS_COLUMNS = 'GCS_COLUMNS'
    DATASTORE_COLUMNS = 'DATASTORE_COLUMNS'
    BIG_QUERY_COLUMNS = 'BIG_QUERY_COLUMNS'
    ALL_COLUMNS = 'ALL_COLUMNS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2OutputStorageConfig:
    r"""Cloud repository for storing output."""
    
    output_schema: Optional[GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputSchema'), 'exclude': lambda f: f is None }})
    r"""Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage."""  
    table: Optional[shared_googleprivacydlpv2bigquerytable.GooglePrivacyDlpV2BigQueryTable] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('table'), 'exclude': lambda f: f is None }})
    r"""Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`."""  
    