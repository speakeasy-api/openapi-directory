/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GiftCardActivity - Represents an action performed on a gift card that affects its state or balance.
 */
public class GiftCardActivity {
    /**
     * Describes a gift card activity of the ACTIVATE type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activate_activity_details")
    public GiftCardActivityActivate activateActivityDetails;
    public GiftCardActivity withActivateActivityDetails(GiftCardActivityActivate activateActivityDetails) {
        this.activateActivityDetails = activateActivityDetails;
        return this;
    }
    
    /**
     * Describes a gift card activity of the ADJUST_DECREMENT type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjust_decrement_activity_details")
    public GiftCardActivityAdjustDecrement adjustDecrementActivityDetails;
    public GiftCardActivity withAdjustDecrementActivityDetails(GiftCardActivityAdjustDecrement adjustDecrementActivityDetails) {
        this.adjustDecrementActivityDetails = adjustDecrementActivityDetails;
        return this;
    }
    
    /**
     * Describes a gift card activity of the ADJUST_INCREMENT type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjust_increment_activity_details")
    public GiftCardActivityAdjustIncrement adjustIncrementActivityDetails;
    public GiftCardActivity withAdjustIncrementActivityDetails(GiftCardActivityAdjustIncrement adjustIncrementActivityDetails) {
        this.adjustIncrementActivityDetails = adjustIncrementActivityDetails;
        return this;
    }
    
    /**
     * Describes a gift card activity of the BLOCK type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("block_activity_details")
    public GiftCardActivityBlock blockActivityDetails;
    public GiftCardActivity withBlockActivityDetails(GiftCardActivityBlock blockActivityDetails) {
        this.blockActivityDetails = blockActivityDetails;
        return this;
    }
    
    /**
     * Describes a gift card activity of the CLEAR_BALANCE type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clear_balance_activity_details")
    public GiftCardActivityClearBalance clearBalanceActivityDetails;
    public GiftCardActivity withClearBalanceActivityDetails(GiftCardActivityClearBalance clearBalanceActivityDetails) {
        this.clearBalanceActivityDetails = clearBalanceActivityDetails;
        return this;
    }
    
    /**
     * The timestamp when the gift card activity was created, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public GiftCardActivity withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Describes a gift card activity of the DEACTIVATE type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deactivate_activity_details")
    public GiftCardActivityDeactivate deactivateActivityDetails;
    public GiftCardActivity withDeactivateActivityDetails(GiftCardActivityDeactivate deactivateActivityDetails) {
        this.deactivateActivityDetails = deactivateActivityDetails;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gift_card_balance_money")
    public Money giftCardBalanceMoney;
    public GiftCardActivity withGiftCardBalanceMoney(Money giftCardBalanceMoney) {
        this.giftCardBalanceMoney = giftCardBalanceMoney;
        return this;
    }
    
    /**
     * The gift card GAN. The GAN is not required if `gift_card_id` is present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gift_card_gan")
    public String giftCardGan;
    public GiftCardActivity withGiftCardGan(String giftCardGan) {
        this.giftCardGan = giftCardGan;
        return this;
    }
    
    /**
     * The gift card ID. The ID is not required if a GAN is present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gift_card_id")
    public String giftCardId;
    public GiftCardActivity withGiftCardId(String giftCardId) {
        this.giftCardId = giftCardId;
        return this;
    }
    
    /**
     * The unique ID of the gift card activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GiftCardActivity withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Describes a gift card activity of the IMPORT type and the `GiftCardGANSource` is OTHER 
     * (a third-party gift card).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("import_activity_details")
    public GiftCardActivityImport importActivityDetails;
    public GiftCardActivity withImportActivityDetails(GiftCardActivityImport importActivityDetails) {
        this.importActivityDetails = importActivityDetails;
        return this;
    }
    
    /**
     * Present only when GiftCardActivityType is IMPORT_REVERSAL and GiftCardGANSource is OTHER
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("import_reversal_activity_details")
    public GiftCardActivityImportReversal importReversalActivityDetails;
    public GiftCardActivity withImportReversalActivityDetails(GiftCardActivityImportReversal importReversalActivityDetails) {
        this.importReversalActivityDetails = importReversalActivityDetails;
        return this;
    }
    
    /**
     * Present only when `GiftCardActivityType` is LOAD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("load_activity_details")
    public GiftCardActivityLoad loadActivityDetails;
    public GiftCardActivity withLoadActivityDetails(GiftCardActivityLoad loadActivityDetails) {
        this.loadActivityDetails = loadActivityDetails;
        return this;
    }
    
    /**
     * The ID of the location at which the activity occurred.
     */
    @JsonProperty("location_id")
    public String locationId;
    public GiftCardActivity withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * Present only when `GiftCardActivityType` is REDEEM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redeem_activity_details")
    public GiftCardActivityRedeem redeemActivityDetails;
    public GiftCardActivity withRedeemActivityDetails(GiftCardActivityRedeem redeemActivityDetails) {
        this.redeemActivityDetails = redeemActivityDetails;
        return this;
    }
    
    /**
     * Present only when `GiftCardActivityType` is REFUND.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refund_activity_details")
    public GiftCardActivityRefund refundActivityDetails;
    public GiftCardActivity withRefundActivityDetails(GiftCardActivityRefund refundActivityDetails) {
        this.refundActivityDetails = refundActivityDetails;
        return this;
    }
    
    @JsonProperty("type")
    public Object type;
    public GiftCardActivity withType(Object type) {
        this.type = type;
        return this;
    }
    
    /**
     * Present only when `GiftCardActivityType` is UNBLOCK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unblock_activity_details")
    public GiftCardActivityUnblock unblockActivityDetails;
    public GiftCardActivity withUnblockActivityDetails(GiftCardActivityUnblock unblockActivityDetails) {
        this.unblockActivityDetails = unblockActivityDetails;
        return this;
    }
    
    /**
     * Present only when `GiftCardActivityType` is UNLINKED_ACTIVITY_REFUND.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unlinked_activity_refund_activity_details")
    public GiftCardActivityUnlinkedActivityRefund unlinkedActivityRefundActivityDetails;
    public GiftCardActivity withUnlinkedActivityRefundActivityDetails(GiftCardActivityUnlinkedActivityRefund unlinkedActivityRefundActivityDetails) {
        this.unlinkedActivityRefundActivityDetails = unlinkedActivityRefundActivityDetails;
        return this;
    }
    
}
