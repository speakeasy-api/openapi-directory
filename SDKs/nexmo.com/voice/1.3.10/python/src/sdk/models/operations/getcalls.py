"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getcallsresponse as shared_getcallsresponse
from datetime import datetime
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetCallsSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class GetCallsOrderEnum(str, Enum):
    r"""Either ascending or  descending order."""
    ASC = 'asc'
    DESC = 'desc'

class GetCallsStatusEnum(str, Enum):
    r"""Filter by call status"""
    STARTED = 'started'
    RINGING = 'ringing'
    ANSWERED = 'answered'
    MACHINE = 'machine'
    COMPLETED = 'completed'
    BUSY = 'busy'
    CANCELLED = 'cancelled'
    FAILED = 'failed'
    REJECTED = 'rejected'
    TIMEOUT = 'timeout'
    UNANSWERED = 'unanswered'


@dataclasses.dataclass
class GetCallsRequest:
    
    conversation_uuid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'conversation_uuid', 'style': 'form', 'explode': True }})
    r"""Return all the records associated with a specific conversation."""  
    date_end: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date_end', 'style': 'form', 'explode': True }})
    r"""Return the records that occurred before this point in time"""  
    date_start: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date_start', 'style': 'form', 'explode': True }})
    r"""Return the records that occurred after this point in time"""  
    order: Optional[GetCallsOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""Either ascending or  descending order."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""Return this amount of records in the response"""  
    record_index: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'record_index', 'style': 'form', 'explode': True }})
    r"""Return calls from this index in the response"""  
    status: Optional[GetCallsStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Filter by call status"""  
    

@dataclasses.dataclass
class GetCallsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_calls_response: Optional[shared_getcallsresponse.GetCallsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    