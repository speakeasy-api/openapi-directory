"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import previewfileresponse as shared_previewfileresponse
from enum import Enum
from typing import Optional

class GetPreviewImageSizeEnum(str, Enum):
    r"""The size of the image."""
    SMALL = 'small'
    MEDIUM = 'medium'
    LARGE = 'large'


@dataclasses.dataclass
class GetPreviewImageRequest:
    
    ev_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-access-token', 'style': 'simple', 'explode': False }})
    r"""Access Token"""  
    ev_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-api-key', 'style': 'simple', 'explode': False }})
    r"""API Key"""  
    resource: str = dataclasses.field(metadata={'query_param': { 'field_name': 'resource', 'style': 'form', 'explode': True }})
    r"""Resource identifier for the image file."""  
    size: GetPreviewImageSizeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""The size of the image."""  
    height: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'height', 'style': 'form', 'explode': True }})
    r"""Overrides sizes. Sets to a specific height."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files."""  
    width: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'width', 'style': 'form', 'explode': True }})
    r"""Overrides sizes. Sets to a specific width."""  
    

@dataclasses.dataclass
class GetPreviewImageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preview_file_response: Optional[shared_previewfileresponse.PreviewFileResponse] = dataclasses.field(default=None)
    r"""Successful Operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    