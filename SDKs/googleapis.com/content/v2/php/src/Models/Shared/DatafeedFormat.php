<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DatafeedFormat
{
    /**
     * Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`pipe`" - "`tab`" - "`tilde`" 
     * 
     * @var ?string $columnDelimiter
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnDelimiter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $columnDelimiter = null;
    
    /**
     * Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - "`latin-1`" - "`utf-16be`" - "`utf-16le`" - "`utf-8`" - "`windows-1252`" 
     * 
     * @var ?string $fileEncoding
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileEncoding')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fileEncoding = null;
    
    /**
     * Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`normal character`" - "`value quoting`" 
     * 
     * @var ?string $quotingMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('quotingMode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $quotingMode = null;
    
	public function __construct()
	{
		$this->columnDelimiter = null;
		$this->fileEncoding = null;
		$this->quotingMode = null;
	}
}
