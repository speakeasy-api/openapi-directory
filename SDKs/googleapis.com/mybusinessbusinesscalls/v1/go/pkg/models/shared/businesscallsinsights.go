// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BusinessCallsInsightsMetricTypeEnum - The metric for which the value applies.
type BusinessCallsInsightsMetricTypeEnum string

const (
	BusinessCallsInsightsMetricTypeEnumMetricTypeUnspecified BusinessCallsInsightsMetricTypeEnum = "METRIC_TYPE_UNSPECIFIED"
	BusinessCallsInsightsMetricTypeEnumAggregateCount        BusinessCallsInsightsMetricTypeEnum = "AGGREGATE_COUNT"
)

func (e *BusinessCallsInsightsMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_TYPE_UNSPECIFIED":
		fallthrough
	case "AGGREGATE_COUNT":
		*e = BusinessCallsInsightsMetricTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BusinessCallsInsightsMetricTypeEnum: %s", s)
	}
}

// BusinessCallsInsights - Insights for calls made to a location.
type BusinessCallsInsights struct {
	// Metrics aggregated over the input time range.
	AggregateMetrics *AggregateMetrics `json:"aggregateMetrics,omitempty"`
	// The metric for which the value applies.
	MetricType *BusinessCallsInsightsMetricTypeEnum `json:"metricType,omitempty"`
	// Required. The resource name of the calls insights. Format: locations/{location}/businesscallsinsights
	Name *string `json:"name,omitempty"`
}
