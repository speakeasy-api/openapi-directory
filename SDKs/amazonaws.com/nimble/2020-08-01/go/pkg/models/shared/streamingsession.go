// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// StreamingSession - A streaming session is a virtual workstation created using a particular launch profile.
type StreamingSession struct {
	Arn                      *string                         `json:"arn,omitempty"`
	AutomaticTerminationMode *AutomaticTerminationModeEnum   `json:"automaticTerminationMode,omitempty"`
	BackupMode               *SessionBackupModeEnum          `json:"backupMode,omitempty"`
	CreatedAt                *time.Time                      `json:"createdAt,omitempty"`
	CreatedBy                *string                         `json:"createdBy,omitempty"`
	Ec2InstanceType          *string                         `json:"ec2InstanceType,omitempty"`
	LaunchProfileID          *string                         `json:"launchProfileId,omitempty"`
	MaxBackupsToRetain       *int64                          `json:"maxBackupsToRetain,omitempty"`
	OwnedBy                  *string                         `json:"ownedBy,omitempty"`
	SessionID                *string                         `json:"sessionId,omitempty"`
	SessionPersistenceMode   *SessionPersistenceModeEnum     `json:"sessionPersistenceMode,omitempty"`
	StartedAt                *time.Time                      `json:"startedAt,omitempty"`
	StartedBy                *string                         `json:"startedBy,omitempty"`
	StartedFromBackupID      *string                         `json:"startedFromBackupId,omitempty"`
	State                    *StreamingSessionStateEnum      `json:"state,omitempty"`
	StatusCode               *StreamingSessionStatusCodeEnum `json:"statusCode,omitempty"`
	StatusMessage            *string                         `json:"statusMessage,omitempty"`
	StopAt                   *time.Time                      `json:"stopAt,omitempty"`
	StoppedAt                *time.Time                      `json:"stoppedAt,omitempty"`
	StoppedBy                *string                         `json:"stoppedBy,omitempty"`
	StreamingImageID         *string                         `json:"streamingImageId,omitempty"`
	Tags                     map[string]string               `json:"tags,omitempty"`
	TerminateAt              *time.Time                      `json:"terminateAt,omitempty"`
	UpdatedAt                *time.Time                      `json:"updatedAt,omitempty"`
	UpdatedBy                *string                         `json:"updatedBy,omitempty"`
	VolumeConfiguration      *VolumeConfiguration            `json:"volumeConfiguration,omitempty"`
	VolumeRetentionMode      *VolumeRetentionModeEnum        `json:"volumeRetentionMode,omitempty"`
}
