/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimerDefinition } from "./timerdefinition";
import { VariableDefinition } from "./variabledefinition";
import { Expose, Type } from "class-transformer";

/**
 * The new state, variable values, and timer settings of the detector (instance).
 */
export class DetectorStateDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "stateName" })
  stateName: string;

  @SpeakeasyMetadata({ elemType: TimerDefinition })
  @Expose({ name: "timers" })
  @Type(() => TimerDefinition)
  timers: TimerDefinition[];

  @SpeakeasyMetadata({ elemType: VariableDefinition })
  @Expose({ name: "variables" })
  @Type(() => VariableDefinition)
  variables: VariableDefinition[];
}
