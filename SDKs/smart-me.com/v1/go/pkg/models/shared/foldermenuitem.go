// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FolderMenuItemFolderTypeEnum - The folder type of the item
type FolderMenuItemFolderTypeEnum string

const (
	FolderMenuItemFolderTypeEnumFolder                      FolderMenuItemFolderTypeEnum = "Folder"
	FolderMenuItemFolderTypeEnumLocation                    FolderMenuItemFolderTypeEnum = "Location"
	FolderMenuItemFolderTypeEnumFactory                     FolderMenuItemFolderTypeEnum = "Factory"
	FolderMenuItemFolderTypeEnumHouse                       FolderMenuItemFolderTypeEnum = "House"
	FolderMenuItemFolderTypeEnumOffice                      FolderMenuItemFolderTypeEnum = "Office"
	FolderMenuItemFolderTypeEnumMachine                     FolderMenuItemFolderTypeEnum = "Machine"
	FolderMenuItemFolderTypeEnumVirtualMeter                FolderMenuItemFolderTypeEnum = "VirtualMeter"
	FolderMenuItemFolderTypeEnumElecticityFolder            FolderMenuItemFolderTypeEnum = "ElecticityFolder"
	FolderMenuItemFolderTypeEnumWaterFolder                 FolderMenuItemFolderTypeEnum = "WaterFolder"
	FolderMenuItemFolderTypeEnumHeatFolder                  FolderMenuItemFolderTypeEnum = "HeatFolder"
	FolderMenuItemFolderTypeEnumGasFolder                   FolderMenuItemFolderTypeEnum = "GasFolder"
	FolderMenuItemFolderTypeEnumTemperatureFolder           FolderMenuItemFolderTypeEnum = "TemperatureFolder"
	FolderMenuItemFolderTypeEnumSun                         FolderMenuItemFolderTypeEnum = "Sun"
	FolderMenuItemFolderTypeEnumLight                       FolderMenuItemFolderTypeEnum = "Light"
	FolderMenuItemFolderTypeEnumIce                         FolderMenuItemFolderTypeEnum = "Ice"
	FolderMenuItemFolderTypeEnumSofa                        FolderMenuItemFolderTypeEnum = "Sofa"
	FolderMenuItemFolderTypeEnumFood                        FolderMenuItemFolderTypeEnum = "Food"
	FolderMenuItemFolderTypeEnumCoffee                      FolderMenuItemFolderTypeEnum = "Coffee"
	FolderMenuItemFolderTypeEnumCar                         FolderMenuItemFolderTypeEnum = "Car"
	FolderMenuItemFolderTypeEnumChargingStation             FolderMenuItemFolderTypeEnum = "ChargingStation"
	FolderMenuItemFolderTypeEnumMeter                       FolderMenuItemFolderTypeEnum = "Meter"
	FolderMenuItemFolderTypeEnumUser                        FolderMenuItemFolderTypeEnum = "User"
	FolderMenuItemFolderTypeEnumTrash                       FolderMenuItemFolderTypeEnum = "Trash"
	FolderMenuItemFolderTypeEnumGridPhotovoltaicPowerSystem FolderMenuItemFolderTypeEnum = "GridPhotovoltaicPowerSystem"
)

func (e FolderMenuItemFolderTypeEnum) ToPointer() *FolderMenuItemFolderTypeEnum {
	return &e
}

func (e *FolderMenuItemFolderTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Folder":
		fallthrough
	case "Location":
		fallthrough
	case "Factory":
		fallthrough
	case "House":
		fallthrough
	case "Office":
		fallthrough
	case "Machine":
		fallthrough
	case "VirtualMeter":
		fallthrough
	case "ElecticityFolder":
		fallthrough
	case "WaterFolder":
		fallthrough
	case "HeatFolder":
		fallthrough
	case "GasFolder":
		fallthrough
	case "TemperatureFolder":
		fallthrough
	case "Sun":
		fallthrough
	case "Light":
		fallthrough
	case "Ice":
		fallthrough
	case "Sofa":
		fallthrough
	case "Food":
		fallthrough
	case "Coffee":
		fallthrough
	case "Car":
		fallthrough
	case "ChargingStation":
		fallthrough
	case "Meter":
		fallthrough
	case "User":
		fallthrough
	case "Trash":
		fallthrough
	case "GridPhotovoltaicPowerSystem":
		*e = FolderMenuItemFolderTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FolderMenuItemFolderTypeEnum: %v", v)
	}
}

// FolderMenuItem - A folder menu item
type FolderMenuItem struct {
	// Settings for the auto export functionality of a meter
	AutoExportSettings *AutoExportSettings `json:"AutoExportSettings,omitempty"`
	// Children folder menu items (sub folder menu items)
	Children []FolderMenuItem `json:"Children,omitempty"`
	// The Description of the folder
	Description *string `json:"Description,omitempty"`
	// The folder type of the item
	FolderType *FolderMenuItemFolderTypeEnum `json:"FolderType,omitempty"`
	// The path to the Icon of this folder
	Icon *string `json:"Icon,omitempty"`
	// The id of the folder menu item
	ID *string `json:"Id,omitempty"`
	// The serial number if the folder menu item is a meter.
	//             Serial number is handled as a string, as javascript on client side cannot handle long integers properly.
	MeterSerialNumber *string `json:"MeterSerialNumber,omitempty"`
	// The Name of the item
	Name *string `json:"Name,omitempty"`
	// The ID of the user of this folder (only for foldertype user)
	UserID *string `json:"UserId,omitempty"`
}
