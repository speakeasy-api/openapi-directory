"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBFundsConfirmation1DataInstructedAmount:
    r"""Amount of money to be confirmed as available funds in the debtor account. Contains an Amount and a Currency."""
    
    amount: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Amount') }})
    r"""A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Currency') }})
    r"""A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \\"Codes for the representation of currencies and funds\\"."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBFundsConfirmation1Data:
    
    consent_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsentId') }})
    r"""Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation consent resource."""  
    instructed_amount: OBFundsConfirmation1DataInstructedAmount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstructedAmount') }})
    r"""Amount of money to be confirmed as available funds in the debtor account. Contains an Amount and a Currency."""  
    reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reference') }})
    r"""Unique reference, as assigned by the CBPII, to unambiguously refer to the request related to the payment transaction."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBFundsConfirmation1:
    r"""Default"""
    
    data: OBFundsConfirmation1Data = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Data') }})  
    