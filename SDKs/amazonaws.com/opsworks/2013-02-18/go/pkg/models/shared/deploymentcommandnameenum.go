// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeploymentCommandNameEnum string

const (
	DeploymentCommandNameEnumInstallDependencies   DeploymentCommandNameEnum = "install_dependencies"
	DeploymentCommandNameEnumUpdateDependencies    DeploymentCommandNameEnum = "update_dependencies"
	DeploymentCommandNameEnumUpdateCustomCookbooks DeploymentCommandNameEnum = "update_custom_cookbooks"
	DeploymentCommandNameEnumExecuteRecipes        DeploymentCommandNameEnum = "execute_recipes"
	DeploymentCommandNameEnumConfigure             DeploymentCommandNameEnum = "configure"
	DeploymentCommandNameEnumSetup                 DeploymentCommandNameEnum = "setup"
	DeploymentCommandNameEnumDeploy                DeploymentCommandNameEnum = "deploy"
	DeploymentCommandNameEnumRollback              DeploymentCommandNameEnum = "rollback"
	DeploymentCommandNameEnumStart                 DeploymentCommandNameEnum = "start"
	DeploymentCommandNameEnumStop                  DeploymentCommandNameEnum = "stop"
	DeploymentCommandNameEnumRestart               DeploymentCommandNameEnum = "restart"
	DeploymentCommandNameEnumUndeploy              DeploymentCommandNameEnum = "undeploy"
)

func (e *DeploymentCommandNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "install_dependencies":
		fallthrough
	case "update_dependencies":
		fallthrough
	case "update_custom_cookbooks":
		fallthrough
	case "execute_recipes":
		fallthrough
	case "configure":
		fallthrough
	case "setup":
		fallthrough
	case "deploy":
		fallthrough
	case "rollback":
		fallthrough
	case "start":
		fallthrough
	case "stop":
		fallthrough
	case "restart":
		fallthrough
	case "undeploy":
		*e = DeploymentCommandNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeploymentCommandNameEnum: %s", s)
	}
}
