/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Successful GET on Connector resource
 */
export class Connector extends SpeakeasyBase {
  /**
   * Authentication mechanism to use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auth_mechanism" })
  authMechanism?: string;

  /**
   * If true, this connector is perhaps unstable :)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beta" })
  beta: boolean;

  /**
   * Usage of this connector is charged
   */
  @SpeakeasyMetadata()
  @Expose({ name: "charged" })
  charged: boolean;

  /**
   * Bank code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Main color of the bank or provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color?: string;

  /**
   * This connector is hidden from your users
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden?: boolean;

  /**
   * ID of the connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * How many months of history to fetch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "months_to_fetch" })
  monthsToFetch?: number;

  /**
   * Name of the bank or provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * If true, new connections cannot be added with this connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restricted" })
  restricted: boolean;

  /**
   * SIRET code for Bill modules
   */
  @SpeakeasyMetadata()
  @Expose({ name: "siret" })
  siret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;

  /**
   * How many days to wait between syncs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sync_frequency" })
  syncFrequency?: number;

  /**
   * Unique connector identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid: string;
}
