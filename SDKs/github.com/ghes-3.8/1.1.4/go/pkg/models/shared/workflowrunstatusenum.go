// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowRunStatusEnum - Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`.
type WorkflowRunStatusEnum string

const (
	WorkflowRunStatusEnumCompleted      WorkflowRunStatusEnum = "completed"
	WorkflowRunStatusEnumActionRequired WorkflowRunStatusEnum = "action_required"
	WorkflowRunStatusEnumCancelled      WorkflowRunStatusEnum = "cancelled"
	WorkflowRunStatusEnumFailure        WorkflowRunStatusEnum = "failure"
	WorkflowRunStatusEnumNeutral        WorkflowRunStatusEnum = "neutral"
	WorkflowRunStatusEnumSkipped        WorkflowRunStatusEnum = "skipped"
	WorkflowRunStatusEnumStale          WorkflowRunStatusEnum = "stale"
	WorkflowRunStatusEnumSuccess        WorkflowRunStatusEnum = "success"
	WorkflowRunStatusEnumTimedOut       WorkflowRunStatusEnum = "timed_out"
	WorkflowRunStatusEnumInProgress     WorkflowRunStatusEnum = "in_progress"
	WorkflowRunStatusEnumQueued         WorkflowRunStatusEnum = "queued"
	WorkflowRunStatusEnumRequested      WorkflowRunStatusEnum = "requested"
	WorkflowRunStatusEnumWaiting        WorkflowRunStatusEnum = "waiting"
	WorkflowRunStatusEnumPending        WorkflowRunStatusEnum = "pending"
)

func (e WorkflowRunStatusEnum) ToPointer() *WorkflowRunStatusEnum {
	return &e
}

func (e *WorkflowRunStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "completed":
		fallthrough
	case "action_required":
		fallthrough
	case "cancelled":
		fallthrough
	case "failure":
		fallthrough
	case "neutral":
		fallthrough
	case "skipped":
		fallthrough
	case "stale":
		fallthrough
	case "success":
		fallthrough
	case "timed_out":
		fallthrough
	case "in_progress":
		fallthrough
	case "queued":
		fallthrough
	case "requested":
		fallthrough
	case "waiting":
		fallthrough
	case "pending":
		*e = WorkflowRunStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowRunStatusEnum: %v", v)
	}
}
