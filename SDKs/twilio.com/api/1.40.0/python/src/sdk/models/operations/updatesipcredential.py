"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_v2010_account_sip_sip_credential_list_sip_credential as shared_api_v2010_account_sip_sip_credential_list_sip_credential
from typing import Optional

UPDATE_SIP_CREDENTIAL_SERVERS = [
	"https://api.twilio.com",
]


@dataclasses.dataclass
class UpdateSipCredentialSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateSipCredentialUpdateSipCredentialRequest:
    
    password: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Password' }})
    r"""The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg `IWasAtSignal2018`)"""  
    

@dataclasses.dataclass
class UpdateSipCredentialRequest:
    
    account_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AccountSid', 'style': 'simple', 'explode': False }})
    r"""The unique id of the Account that is responsible for this resource."""  
    credential_list_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'CredentialListSid', 'style': 'simple', 'explode': False }})
    r"""The unique id that identifies the credential list that includes this credential."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The unique id that identifies the resource to update."""  
    request_body: Optional[UpdateSipCredentialUpdateSipCredentialRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateSipCredentialResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_v2010_account_sip_sip_credential_list_sip_credential: Optional[shared_api_v2010_account_sip_sip_credential_list_sip_credential.APIV2010AccountSipSipCredentialListSipCredential] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    