"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudidentitytoolkitv2autoretrievalinfo as shared_googlecloudidentitytoolkitv2autoretrievalinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo:
    r"""App Verification info for a StartMfa request."""
    
    auto_retrieval_info: Optional[shared_googlecloudidentitytoolkitv2autoretrievalinfo.GoogleCloudIdentitytoolkitV2AutoRetrievalInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoRetrievalInfo'), 'exclude': lambda f: f is None }})
    r"""The information required to auto-retrieve an SMS."""  
    ios_receipt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosReceipt'), 'exclude': lambda f: f is None }})
    r"""iOS only. Receipt of successful app token validation with APNS."""  
    ios_secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosSecret'), 'exclude': lambda f: f is None }})
    r"""iOS only. Secret delivered to iOS app via APNS."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumber'), 'exclude': lambda f: f is None }})
    r"""Required for enrollment. Phone number to be enrolled as MFA."""  
    play_integrity_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playIntegrityToken'), 'exclude': lambda f: f is None }})
    r"""Android only. Used to assert application identity in place of a recaptcha token (or safety net token). A Play Integrity Token can be generated via the [PlayIntegrity API] (https://developer.android.com/google/play/integrity) with applying SHA256 to the `phone_number` field as the nonce."""  
    recaptcha_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recaptchaToken'), 'exclude': lambda f: f is None }})
    r"""Web only. Recaptcha solution."""  
    safety_net_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('safetyNetToken'), 'exclude': lambda f: f is None }})
    r"""Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce."""  
    