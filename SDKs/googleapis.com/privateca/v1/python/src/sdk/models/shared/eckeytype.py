"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EcKeyTypeSignatureAlgorithmEnum(str, Enum):
    r"""Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed."""
    EC_SIGNATURE_ALGORITHM_UNSPECIFIED = 'EC_SIGNATURE_ALGORITHM_UNSPECIFIED'
    ECDSA_P256 = 'ECDSA_P256'
    ECDSA_P384 = 'ECDSA_P384'
    EDDSA_25519 = 'EDDSA_25519'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EcKeyType:
    r"""Describes an Elliptic Curve key that may be used in a Certificate issued from a CaPool."""
    
    signature_algorithm: Optional[EcKeyTypeSignatureAlgorithmEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signatureAlgorithm'), 'exclude': lambda f: f is None }})
    r"""Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed."""  
    