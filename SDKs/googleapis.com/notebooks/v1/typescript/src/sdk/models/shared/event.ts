/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Event type.
 */
export enum EventTypeEnum {
  EventTypeUnspecified = "EVENT_TYPE_UNSPECIFIED",
  Idle = "IDLE",
  Heartbeat = "HEARTBEAT",
  Health = "HEALTH",
  Maintenance = "MAINTENANCE",
}

/**
 * The definition of an Event for a managed / semi-managed notebook instance.
 */
export class Event extends SpeakeasyBase {
  /**
   * Optional. Event details. This field is used to pass event information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: Record<string, string>;

  /**
   * Event report time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportTime" })
  reportTime?: string;

  /**
   * Event type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: EventTypeEnum;
}
