<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NodeNetworkConfig - Parameters for node pool-level network config.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NodeNetworkConfig
{
    /**
     * Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither `create_pod_range` or `pod_range` are specified, the cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
     * 
     * @var ?bool $createPodRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('createPodRange')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $createPodRange = null;
    
    /**
     * Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from cluster.privateClusterConfig.enablePrivateNodes
     * 
     * @var ?bool $enablePrivateNodes
     */
	#[\JMS\Serializer\Annotation\SerializedName('enablePrivateNodes')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enablePrivateNodes = null;
    
    /**
     * Configuration of all network bandwidth tiers
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkPerformanceConfig $networkPerformanceConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkPerformanceConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NetworkPerformanceConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkPerformanceConfig $networkPerformanceConfig = null;
    
    /**
     * The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to use. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
     * 
     * @var ?string $podIpv4CidrBlock
     */
	#[\JMS\Serializer\Annotation\SerializedName('podIpv4CidrBlock')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $podIpv4CidrBlock = null;
    
    /**
     * The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
     * 
     * @var ?string $podRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('podRange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $podRange = null;
    
	public function __construct()
	{
		$this->createPodRange = null;
		$this->enablePrivateNodes = null;
		$this->networkPerformanceConfig = null;
		$this->podIpv4CidrBlock = null;
		$this->podRange = null;
	}
}
