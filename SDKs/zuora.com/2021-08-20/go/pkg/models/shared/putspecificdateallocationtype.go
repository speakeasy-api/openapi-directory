// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PUTSpecificDateAllocationTypeDistributionTypeEnum - How to distribute the revenue for milestone-based recognition.
type PUTSpecificDateAllocationTypeDistributionTypeEnum string

const (
	PUTSpecificDateAllocationTypeDistributionTypeEnumSpecificDateDeltaFixedAmount          PUTSpecificDateAllocationTypeDistributionTypeEnum = "specific date (delta fixed amount)"
	PUTSpecificDateAllocationTypeDistributionTypeEnumSpecificDateDeltaPercentTotal         PUTSpecificDateAllocationTypeDistributionTypeEnum = "specific date (delta percent total)"
	PUTSpecificDateAllocationTypeDistributionTypeEnumSpecificDateDeltaPercentUndistributed PUTSpecificDateAllocationTypeDistributionTypeEnum = "specific date (delta percent undistributed)"
)

func (e *PUTSpecificDateAllocationTypeDistributionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "specific date (delta fixed amount)":
		fallthrough
	case "specific date (delta percent total)":
		fallthrough
	case "specific date (delta percent undistributed)":
		*e = PUTSpecificDateAllocationTypeDistributionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PUTSpecificDateAllocationTypeDistributionTypeEnum: %s", s)
	}
}

// PUTSpecificDateAllocationTypeEventTypeEnum - Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
//
// Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
type PUTSpecificDateAllocationTypeEventTypeEnum string

const (
	PUTSpecificDateAllocationTypeEventTypeEnumInvoicePosted                 PUTSpecificDateAllocationTypeEventTypeEnum = "Invoice Posted"
	PUTSpecificDateAllocationTypeEventTypeEnumInvoiceItemAdjustmentCreated  PUTSpecificDateAllocationTypeEventTypeEnum = "Invoice Item Adjustment Created"
	PUTSpecificDateAllocationTypeEventTypeEnumInvoiceCanceled               PUTSpecificDateAllocationTypeEventTypeEnum = "Invoice Canceled"
	PUTSpecificDateAllocationTypeEventTypeEnumInvoiceItemAdjustmentCanceled PUTSpecificDateAllocationTypeEventTypeEnum = "Invoice Item Adjustment Canceled"
	PUTSpecificDateAllocationTypeEventTypeEnumRevenueDistributed            PUTSpecificDateAllocationTypeEventTypeEnum = "Revenue Distributed"
	PUTSpecificDateAllocationTypeEventTypeEnumCreditMemoPosted              PUTSpecificDateAllocationTypeEventTypeEnum = "Credit Memo Posted"
	PUTSpecificDateAllocationTypeEventTypeEnumDebitMemoPosted               PUTSpecificDateAllocationTypeEventTypeEnum = "Debit Memo Posted"
)

func (e *PUTSpecificDateAllocationTypeEventTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Invoice Posted":
		fallthrough
	case "Invoice Item Adjustment Created":
		fallthrough
	case "Invoice Canceled":
		fallthrough
	case "Invoice Item Adjustment Canceled":
		fallthrough
	case "Revenue Distributed":
		fallthrough
	case "Credit Memo Posted":
		fallthrough
	case "Debit Memo Posted":
		*e = PUTSpecificDateAllocationTypeEventTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PUTSpecificDateAllocationTypeEventTypeEnum: %s", s)
	}
}

// PUTSpecificDateAllocationType - Container for custom fields of a Revenue Event object.
type PUTSpecificDateAllocationType struct {
	// The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`
	//
	Amount *string `json:"amount,omitempty"`
	// The recognition date on which to distribute revenue for milestone-based recognition.
	//
	// Type: date in `yyyy-mm-dd` format.
	//
	DistributeOn types.Date `json:"distributeOn"`
	// How to distribute the revenue for milestone-based recognition.
	DistributionType PUTSpecificDateAllocationTypeDistributionTypeEnum `json:"distributionType"`
	// Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
	//
	// Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
	//
	EventType *PUTSpecificDateAllocationTypeEventTypeEnum `json:"eventType,omitempty"`
	// System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
	//
	EventTypeSystemID *string `json:"eventTypeSystemId,omitempty"`
	// Additional information about this record.
	//
	Notes *string `json:"notes,omitempty"`
	// Percentage of the total recognition amount or total undistributed to distribute.
	//
	// Required if distributionType is either:
	// * specific date (delta percent total)
	// * specific date (delta percent undistributed)
	//
	Percentage *string `json:"percentage,omitempty"`
}
