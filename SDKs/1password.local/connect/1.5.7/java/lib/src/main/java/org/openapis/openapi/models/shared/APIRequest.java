/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * APIRequest - Represents a request that was made to the API. Including what Token was used and what resource was accessed.
 */
public class APIRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public APIRequestActionEnum action;
    public APIRequest withAction(APIRequestActionEnum action) {
        this.action = action;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actor")
    public APIRequestActor actor;
    public APIRequest withActor(APIRequestActor actor) {
        this.actor = actor;
        return this;
    }
    
    /**
     * The unique id used to identify a single request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestId")
    public String requestId;
    public APIRequest withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public APIRequestResource resource;
    public APIRequest withResource(APIRequestResource resource) {
        this.resource = resource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public APIRequestResultEnum result;
    public APIRequest withResult(APIRequestResultEnum result) {
        this.result = result;
        return this;
    }
    
    /**
     * The time at which the request was processed by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;
    public APIRequest withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
}
