"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import verify_v2_service_rate_limit_bucket as shared_verify_v2_service_rate_limit_bucket
from typing import Optional

UPDATE_BUCKET_SERVERS = [
	"https://verify.twilio.com",
]


@dataclasses.dataclass
class UpdateBucketSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateBucketUpdateBucketRequest:
    
    interval: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Interval' }})
    r"""Number of seconds that the rate limit will be enforced over."""  
    max: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Max' }})
    r"""Maximum number of requests permitted in during the interval."""  
    

@dataclasses.dataclass
class UpdateBucketRequest:
    
    rate_limit_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'RateLimitSid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the Rate Limit resource."""  
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""A 34 character string that uniquely identifies this Bucket."""  
    request_body: Optional[UpdateBucketUpdateBucketRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateBucketResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    verify_v2_service_rate_limit_bucket: Optional[shared_verify_v2_service_rate_limit_bucket.VerifyV2ServiceRateLimitBucket] = dataclasses.field(default=None)
    r"""OK"""  
    