// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MaximizeSpendBidStrategyPerformanceGoalTypeEnum - Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.
type MaximizeSpendBidStrategyPerformanceGoalTypeEnum string

const (
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeUnspecified MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeCpa         MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeCpc         MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeViewableCpm MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeCustomAlgo  MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeCiva        MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeIvoTen      MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN"
	MaximizeSpendBidStrategyPerformanceGoalTypeEnumBiddingStrategyPerformanceGoalTypeAvViewed    MaximizeSpendBidStrategyPerformanceGoalTypeEnum = "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
)

func (e MaximizeSpendBidStrategyPerformanceGoalTypeEnum) ToPointer() *MaximizeSpendBidStrategyPerformanceGoalTypeEnum {
	return &e
}

func (e *MaximizeSpendBidStrategyPerformanceGoalTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN":
		fallthrough
	case "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED":
		*e = MaximizeSpendBidStrategyPerformanceGoalTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MaximizeSpendBidStrategyPerformanceGoalTypeEnum: %v", v)
	}
}

// MaximizeSpendBidStrategy - A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget.
type MaximizeSpendBidStrategy struct {
	// The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
	CustomBiddingAlgorithmID *string `json:"customBiddingAlgorithmId,omitempty"`
	// The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency.
	MaxAverageCpmBidAmountMicros *string `json:"maxAverageCpmBidAmountMicros,omitempty"`
	// Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.
	PerformanceGoalType *MaximizeSpendBidStrategyPerformanceGoalTypeEnum `json:"performanceGoalType,omitempty"`
	// Whether the strategy takes deal floor prices into account.
	RaiseBidForDeals *bool `json:"raiseBidForDeals,omitempty"`
}
