"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ospolicyresourcecompliance as shared_ospolicyresourcecompliance
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum(str, Enum):
    r"""Compliance state of the OS policy."""
    OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED = 'OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED'
    COMPLIANT = 'COMPLIANT'
    NON_COMPLIANT = 'NON_COMPLIANT'
    UNKNOWN = 'UNKNOWN'
    NO_OS_POLICIES_APPLICABLE = 'NO_OS_POLICIES_APPLICABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceOSPoliciesComplianceOSPolicyCompliance:
    r"""Compliance data for an OS policy"""
    
    os_policy_assignment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('osPolicyAssignment'), 'exclude': lambda f: f is None }})
    r"""Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`"""  
    os_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('osPolicyId'), 'exclude': lambda f: f is None }})
    r"""The OS policy id"""  
    os_policy_resource_compliances: Optional[list[shared_ospolicyresourcecompliance.OSPolicyResourceCompliance]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('osPolicyResourceCompliances'), 'exclude': lambda f: f is None }})
    r"""Compliance data for each `OSPolicyResource` that is applied to the VM."""  
    state: Optional[InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Compliance state of the OS policy."""  
    