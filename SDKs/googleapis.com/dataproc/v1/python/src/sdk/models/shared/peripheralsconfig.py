"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sparkhistoryserverconfig as shared_sparkhistoryserverconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PeripheralsConfig:
    r"""Auxiliary services configuration for a workload."""
    
    metastore_service: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metastoreService'), 'exclude': lambda f: f is None }})
    r"""Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]"""  
    spark_history_server_config: Optional[shared_sparkhistoryserverconfig.SparkHistoryServerConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sparkHistoryServerConfig'), 'exclude': lambda f: f is None }})
    r"""Spark History Server configuration for the workload."""  
    