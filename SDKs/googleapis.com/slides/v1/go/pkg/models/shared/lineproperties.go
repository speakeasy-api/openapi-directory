// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LinePropertiesDashStyleEnum - The dash style of the line.
type LinePropertiesDashStyleEnum string

const (
	LinePropertiesDashStyleEnumDashStyleUnspecified LinePropertiesDashStyleEnum = "DASH_STYLE_UNSPECIFIED"
	LinePropertiesDashStyleEnumSolid                LinePropertiesDashStyleEnum = "SOLID"
	LinePropertiesDashStyleEnumDot                  LinePropertiesDashStyleEnum = "DOT"
	LinePropertiesDashStyleEnumDash                 LinePropertiesDashStyleEnum = "DASH"
	LinePropertiesDashStyleEnumDashDot              LinePropertiesDashStyleEnum = "DASH_DOT"
	LinePropertiesDashStyleEnumLongDash             LinePropertiesDashStyleEnum = "LONG_DASH"
	LinePropertiesDashStyleEnumLongDashDot          LinePropertiesDashStyleEnum = "LONG_DASH_DOT"
)

func (e LinePropertiesDashStyleEnum) ToPointer() *LinePropertiesDashStyleEnum {
	return &e
}

func (e *LinePropertiesDashStyleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DASH_STYLE_UNSPECIFIED":
		fallthrough
	case "SOLID":
		fallthrough
	case "DOT":
		fallthrough
	case "DASH":
		fallthrough
	case "DASH_DOT":
		fallthrough
	case "LONG_DASH":
		fallthrough
	case "LONG_DASH_DOT":
		*e = LinePropertiesDashStyleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LinePropertiesDashStyleEnum: %v", v)
	}
}

// LinePropertiesEndArrowEnum - The style of the arrow at the end of the line.
type LinePropertiesEndArrowEnum string

const (
	LinePropertiesEndArrowEnumArrowStyleUnspecified LinePropertiesEndArrowEnum = "ARROW_STYLE_UNSPECIFIED"
	LinePropertiesEndArrowEnumNone                  LinePropertiesEndArrowEnum = "NONE"
	LinePropertiesEndArrowEnumStealthArrow          LinePropertiesEndArrowEnum = "STEALTH_ARROW"
	LinePropertiesEndArrowEnumFillArrow             LinePropertiesEndArrowEnum = "FILL_ARROW"
	LinePropertiesEndArrowEnumFillCircle            LinePropertiesEndArrowEnum = "FILL_CIRCLE"
	LinePropertiesEndArrowEnumFillSquare            LinePropertiesEndArrowEnum = "FILL_SQUARE"
	LinePropertiesEndArrowEnumFillDiamond           LinePropertiesEndArrowEnum = "FILL_DIAMOND"
	LinePropertiesEndArrowEnumOpenArrow             LinePropertiesEndArrowEnum = "OPEN_ARROW"
	LinePropertiesEndArrowEnumOpenCircle            LinePropertiesEndArrowEnum = "OPEN_CIRCLE"
	LinePropertiesEndArrowEnumOpenSquare            LinePropertiesEndArrowEnum = "OPEN_SQUARE"
	LinePropertiesEndArrowEnumOpenDiamond           LinePropertiesEndArrowEnum = "OPEN_DIAMOND"
)

func (e LinePropertiesEndArrowEnum) ToPointer() *LinePropertiesEndArrowEnum {
	return &e
}

func (e *LinePropertiesEndArrowEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARROW_STYLE_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "STEALTH_ARROW":
		fallthrough
	case "FILL_ARROW":
		fallthrough
	case "FILL_CIRCLE":
		fallthrough
	case "FILL_SQUARE":
		fallthrough
	case "FILL_DIAMOND":
		fallthrough
	case "OPEN_ARROW":
		fallthrough
	case "OPEN_CIRCLE":
		fallthrough
	case "OPEN_SQUARE":
		fallthrough
	case "OPEN_DIAMOND":
		*e = LinePropertiesEndArrowEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LinePropertiesEndArrowEnum: %v", v)
	}
}

// LinePropertiesStartArrowEnum - The style of the arrow at the beginning of the line.
type LinePropertiesStartArrowEnum string

const (
	LinePropertiesStartArrowEnumArrowStyleUnspecified LinePropertiesStartArrowEnum = "ARROW_STYLE_UNSPECIFIED"
	LinePropertiesStartArrowEnumNone                  LinePropertiesStartArrowEnum = "NONE"
	LinePropertiesStartArrowEnumStealthArrow          LinePropertiesStartArrowEnum = "STEALTH_ARROW"
	LinePropertiesStartArrowEnumFillArrow             LinePropertiesStartArrowEnum = "FILL_ARROW"
	LinePropertiesStartArrowEnumFillCircle            LinePropertiesStartArrowEnum = "FILL_CIRCLE"
	LinePropertiesStartArrowEnumFillSquare            LinePropertiesStartArrowEnum = "FILL_SQUARE"
	LinePropertiesStartArrowEnumFillDiamond           LinePropertiesStartArrowEnum = "FILL_DIAMOND"
	LinePropertiesStartArrowEnumOpenArrow             LinePropertiesStartArrowEnum = "OPEN_ARROW"
	LinePropertiesStartArrowEnumOpenCircle            LinePropertiesStartArrowEnum = "OPEN_CIRCLE"
	LinePropertiesStartArrowEnumOpenSquare            LinePropertiesStartArrowEnum = "OPEN_SQUARE"
	LinePropertiesStartArrowEnumOpenDiamond           LinePropertiesStartArrowEnum = "OPEN_DIAMOND"
)

func (e LinePropertiesStartArrowEnum) ToPointer() *LinePropertiesStartArrowEnum {
	return &e
}

func (e *LinePropertiesStartArrowEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARROW_STYLE_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "STEALTH_ARROW":
		fallthrough
	case "FILL_ARROW":
		fallthrough
	case "FILL_CIRCLE":
		fallthrough
	case "FILL_SQUARE":
		fallthrough
	case "FILL_DIAMOND":
		fallthrough
	case "OPEN_ARROW":
		fallthrough
	case "OPEN_CIRCLE":
		fallthrough
	case "OPEN_SQUARE":
		fallthrough
	case "OPEN_DIAMOND":
		*e = LinePropertiesStartArrowEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LinePropertiesStartArrowEnum: %v", v)
	}
}

// LineProperties - The properties of the Line. When unset, these fields default to values that match the appearance of new lines created in the Slides editor.
type LineProperties struct {
	// The dash style of the line.
	DashStyle *LinePropertiesDashStyleEnum `json:"dashStyle,omitempty"`
	// The style of the arrow at the end of the line.
	EndArrow *LinePropertiesEndArrowEnum `json:"endArrow,omitempty"`
	// The properties for one end of a Line connection.
	EndConnection *LineConnection `json:"endConnection,omitempty"`
	// The fill of the line.
	LineFill *LineFill `json:"lineFill,omitempty"`
	// A hypertext link.
	Link *Link `json:"link,omitempty"`
	// The style of the arrow at the beginning of the line.
	StartArrow *LinePropertiesStartArrowEnum `json:"startArrow,omitempty"`
	// The properties for one end of a Line connection.
	StartConnection *LineConnection `json:"startConnection,omitempty"`
	// A magnitude in a single direction in the specified units.
	Weight *Dimension `json:"weight,omitempty"`
}
