"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Organization:
    
    crm_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crm_url') }})
    r"""A link to the organization profile in your CRM."""  
    lifecycle_stage: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lifecycle_stage') }})
    r"""The current stage of the organization in the marketing or sales process."""  
    source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    r"""The name of the CRM you use for tracking the organization."""  
    crm_uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crm_uid'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the organization in your CRM."""  
    deal_closed_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deal_closed_date'), 'exclude': lambda f: f is None }})
    r"""The date the organization became a customer."""  
    owner_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner_email'), 'exclude': lambda f: f is None }})
    r"""The email of the team member who is in charge of the organization."""  
    owner_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner_name'), 'exclude': lambda f: f is None }})
    r"""The name of the team member who is in charge of the organization."""  
    price_plan: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_plan'), 'exclude': lambda f: f is None }})
    r"""The pricing plan the organization is on."""  
    