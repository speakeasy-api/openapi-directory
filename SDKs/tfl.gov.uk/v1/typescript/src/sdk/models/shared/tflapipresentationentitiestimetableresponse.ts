/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesMatchedStop } from "./tflapipresentationentitiesmatchedstop";
import { TflApiPresentationEntitiesTimetable } from "./tflapipresentationentitiestimetable";
import { TflApiPresentationEntitiesTimetablesDisambiguation } from "./tflapipresentationentitiestimetablesdisambiguation";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class TflApiPresentationEntitiesTimetableResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disambiguation" })
  @Type(() => TflApiPresentationEntitiesTimetablesDisambiguation)
  disambiguation?: TflApiPresentationEntitiesTimetablesDisambiguation;

  @SpeakeasyMetadata()
  @Expose({ name: "lineId" })
  lineId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lineName" })
  lineName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdfUrl" })
  pdfUrl?: string;

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesMatchedStop })
  @Expose({ name: "stations" })
  @Type(() => TflApiPresentationEntitiesMatchedStop)
  stations?: TflApiPresentationEntitiesMatchedStop[];

  @SpeakeasyMetadata()
  @Expose({ name: "statusErrorMessage" })
  statusErrorMessage?: string;

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesMatchedStop })
  @Expose({ name: "stops" })
  @Type(() => TflApiPresentationEntitiesMatchedStop)
  stops?: TflApiPresentationEntitiesMatchedStop[];

  @SpeakeasyMetadata()
  @Expose({ name: "timetable" })
  @Type(() => TflApiPresentationEntitiesTimetable)
  timetable?: TflApiPresentationEntitiesTimetable;
}
