// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum - What to do with currently running tasks when disable task scheduling on the compute node. The default value is requeue.
type NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum string

const (
	NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnumRequeue        NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum = "requeue"
	NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnumTerminate      NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum = "terminate"
	NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnumTaskcompletion NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum = "taskcompletion"
)

func (e NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum) ToPointer() *NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum {
	return &e
}

func (e *NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "requeue":
		fallthrough
	case "terminate":
		fallthrough
	case "taskcompletion":
		*e = NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum: %v", v)
	}
}

// NodeDisableSchedulingParameter - Parameters for a ComputeNodeOperations.DisableScheduling request.
type NodeDisableSchedulingParameter struct {
	// What to do with currently running tasks when disable task scheduling on the compute node. The default value is requeue.
	NodeDisableSchedulingOption *NodeDisableSchedulingParameterNodeDisableSchedulingOptionEnum `json:"nodeDisableSchedulingOption,omitempty"`
}
