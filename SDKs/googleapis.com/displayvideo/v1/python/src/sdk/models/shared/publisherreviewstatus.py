"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PublisherReviewStatusStatusEnum(str, Enum):
    r"""Status of the publisher review."""
    REVIEW_STATUS_UNSPECIFIED = 'REVIEW_STATUS_UNSPECIFIED'
    REVIEW_STATUS_APPROVED = 'REVIEW_STATUS_APPROVED'
    REVIEW_STATUS_REJECTED = 'REVIEW_STATUS_REJECTED'
    REVIEW_STATUS_PENDING = 'REVIEW_STATUS_PENDING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PublisherReviewStatus:
    r"""Publisher review status for the creative."""
    
    publisher_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherName'), 'exclude': lambda f: f is None }})
    r"""The publisher reviewing the creative."""  
    status: Optional[PublisherReviewStatusStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the publisher review."""  
    