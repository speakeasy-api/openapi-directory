// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTSelectActionEnum
type POSTSelectActionEnum string

const (
	POSTSelectActionEnumSelect POSTSelectActionEnum = "Select"
)

func (e *POSTSelectActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Select":
		*e = POSTSelectActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSelectActionEnum: %s", s)
	}
}

// POSTSelectVersionEnum
type POSTSelectVersionEnum string

const (
	POSTSelectVersionEnumTwoThousandAndNine0415 POSTSelectVersionEnum = "2009-04-15"
)

func (e *POSTSelectVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2009-04-15":
		*e = POSTSelectVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSelectVersionEnum: %s", s)
	}
}

type POSTSelectRequest struct {
	AWSAccessKeyID string               `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action         POSTSelectActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	NextToken        *string               `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody      []byte                `request:"mediaType=text/xml"`
	Signature        string                `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                `queryParam:"style=form,explode=true,name=Timestamp"`
	Version          POSTSelectVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTSelectResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
