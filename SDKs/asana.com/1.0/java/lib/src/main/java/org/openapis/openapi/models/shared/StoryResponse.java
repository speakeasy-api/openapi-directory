/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StoryResponse - A story represents an activity associated with an object in the Asana system.
 */
public class StoryResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignee")
    public UserCompact assignee;

    public StoryResponse withAssignee(UserCompact assignee) {
        this.assignee = assignee;
        return this;
    }
    
    /**
     * The time at which this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public StoryResponse withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public UserCompact createdBy;

    public StoryResponse withCreatedBy(UserCompact createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_field")
    public CustomFieldCompact customField;

    public StoryResponse withCustomField(CustomFieldCompact customField) {
        this.customField = customField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dependency")
    public TaskCompact dependency;

    public StoryResponse withDependency(TaskCompact dependency) {
        this.dependency = dependency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duplicate_of")
    public TaskCompact duplicateOf;

    public StoryResponse withDuplicateOf(TaskCompact duplicateOf) {
        this.duplicateOf = duplicateOf;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duplicated_from")
    public TaskCompact duplicatedFrom;

    public StoryResponse withDuplicatedFrom(TaskCompact duplicatedFrom) {
        this.duplicatedFrom = duplicatedFrom;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("follower")
    public UserCompact follower;

    public StoryResponse withFollower(UserCompact follower) {
        this.follower = follower;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;

    public StoryResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * *Deprecated - please use likes instead*
     * *Conditional*. True if the story is hearted by the authorized user, false if not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hearted")
    public Boolean hearted;

    public StoryResponse withHearted(Boolean hearted) {
        this.hearted = hearted;
        return this;
    }
    
    /**
     * *Deprecated - please use likes instead*
     * 
     * *Conditional*. Array of likes for users who have hearted this story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hearts")
    public Like[] hearts;

    public StoryResponse withHearts(Like[] hearts) {
        this.hearts = hearts;
        return this;
    }
    
    /**
     * [Opt In](/docs/input-output-options). HTML formatted text for a comment. This will not include the name of the creator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_text")
    public String htmlText;

    public StoryResponse withHtmlText(String htmlText) {
        this.htmlText = htmlText;
        return this;
    }
    
    /**
     * *Conditional*. Whether the text of the story can be edited after creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_editable")
    public Boolean isEditable;

    public StoryResponse withIsEditable(Boolean isEditable) {
        this.isEditable = isEditable;
        return this;
    }
    
    /**
     * *Conditional*. Whether the text of the story has been edited after creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_edited")
    public Boolean isEdited;

    public StoryResponse withIsEdited(Boolean isEdited) {
        this.isEdited = isEdited;
        return this;
    }
    
    /**
     * *Conditional*. Whether the story should be pinned on the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_pinned")
    public Boolean isPinned;

    public StoryResponse withIsPinned(Boolean isPinned) {
        this.isPinned = isPinned;
        return this;
    }
    
    /**
     * *Conditional*. True if the story is liked by the authorized user, false if not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liked")
    public Boolean liked;

    public StoryResponse withLiked(Boolean liked) {
        this.liked = liked;
        return this;
    }
    
    /**
     * *Conditional*. Array of likes for users who have liked this story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("likes")
    public Like[] likes;

    public StoryResponse withLikes(Like[] likes) {
        this.likes = likes;
        return this;
    }
    
    /**
     * *Conditional*. The new value of approval status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_approval_status")
    public String newApprovalStatus;

    public StoryResponse withNewApprovalStatus(String newApprovalStatus) {
        this.newApprovalStatus = newApprovalStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_date_value")
    public StoryResponseNewDateValue newDateValue;

    public StoryResponse withNewDateValue(StoryResponseNewDateValue newDateValue) {
        this.newDateValue = newDateValue;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_dates")
    public StoryResponseDates newDates;

    public StoryResponse withNewDates(StoryResponseDates newDates) {
        this.newDates = newDates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_enum_value")
    public EnumOption newEnumValue;

    public StoryResponse withNewEnumValue(EnumOption newEnumValue) {
        this.newEnumValue = newEnumValue;
        return this;
    }
    
    /**
     * *Conditional*. The new value of a multi-enum custom field story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_multi_enum_values")
    public EnumOption[] newMultiEnumValues;

    public StoryResponse withNewMultiEnumValues(EnumOption[] newMultiEnumValues) {
        this.newMultiEnumValues = newMultiEnumValues;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_name")
    public String newName;

    public StoryResponse withNewName(String newName) {
        this.newName = newName;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_number_value")
    public Long newNumberValue;

    public StoryResponse withNewNumberValue(Long newNumberValue) {
        this.newNumberValue = newNumberValue;
        return this;
    }
    
    /**
     * *Conditional*. The new value of a people custom field story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_people_value")
    public UserCompact[] newPeopleValue;

    public StoryResponse withNewPeopleValue(UserCompact[] newPeopleValue) {
        this.newPeopleValue = newPeopleValue;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_resource_subtype")
    public String newResourceSubtype;

    public StoryResponse withNewResourceSubtype(String newResourceSubtype) {
        this.newResourceSubtype = newResourceSubtype;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_section")
    public SectionCompact newSection;

    public StoryResponse withNewSection(SectionCompact newSection) {
        this.newSection = newSection;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_text_value")
    public String newTextValue;

    public StoryResponse withNewTextValue(String newTextValue) {
        this.newTextValue = newTextValue;
        return this;
    }
    
    /**
     * *Deprecated - please use likes instead*
     * 
     * *Conditional*. The number of users who have hearted this story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_hearts")
    public Long numHearts;

    public StoryResponse withNumHearts(Long numHearts) {
        this.numHearts = numHearts;
        return this;
    }
    
    /**
     * *Conditional*. The number of users who have liked this story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_likes")
    public Long numLikes;

    public StoryResponse withNumLikes(Long numLikes) {
        this.numLikes = numLikes;
        return this;
    }
    
    /**
     * *Conditional*. The old value of approval status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_approval_status")
    public String oldApprovalStatus;

    public StoryResponse withOldApprovalStatus(String oldApprovalStatus) {
        this.oldApprovalStatus = oldApprovalStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_date_value")
    public StoryResponseOldDateValue oldDateValue;

    public StoryResponse withOldDateValue(StoryResponseOldDateValue oldDateValue) {
        this.oldDateValue = oldDateValue;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_dates")
    public StoryResponseDates oldDates;

    public StoryResponse withOldDates(StoryResponseDates oldDates) {
        this.oldDates = oldDates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_enum_value")
    public EnumOption oldEnumValue;

    public StoryResponse withOldEnumValue(EnumOption oldEnumValue) {
        this.oldEnumValue = oldEnumValue;
        return this;
    }
    
    /**
     * *Conditional*. The old value of a multi-enum custom field story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_multi_enum_values")
    public EnumOption[] oldMultiEnumValues;

    public StoryResponse withOldMultiEnumValues(EnumOption[] oldMultiEnumValues) {
        this.oldMultiEnumValues = oldMultiEnumValues;
        return this;
    }
    
    /**
     * *Conditional*'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_name")
    public String oldName;

    public StoryResponse withOldName(String oldName) {
        this.oldName = oldName;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_number_value")
    public Long oldNumberValue;

    public StoryResponse withOldNumberValue(Long oldNumberValue) {
        this.oldNumberValue = oldNumberValue;
        return this;
    }
    
    /**
     * *Conditional*. The old value of a people custom field story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_people_value")
    public UserCompact[] oldPeopleValue;

    public StoryResponse withOldPeopleValue(UserCompact[] oldPeopleValue) {
        this.oldPeopleValue = oldPeopleValue;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_resource_subtype")
    public String oldResourceSubtype;

    public StoryResponse withOldResourceSubtype(String oldResourceSubtype) {
        this.oldResourceSubtype = oldResourceSubtype;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_section")
    public SectionCompact oldSection;

    public StoryResponse withOldSection(SectionCompact oldSection) {
        this.oldSection = oldSection;
        return this;
    }
    
    /**
     * *Conditional*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_text_value")
    public String oldTextValue;

    public StoryResponse withOldTextValue(String oldTextValue) {
        this.oldTextValue = oldTextValue;
        return this;
    }
    
    /**
     * *Conditional*. A collection of previews to be displayed in the story.
     * 
     * *Note: This property only exists for comment stories.*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previews")
    public Preview[] previews;

    public StoryResponse withPreviews(Preview[] previews) {
        this.previews = previews;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project")
    public ProjectCompact project;

    public StoryResponse withProject(ProjectCompact project) {
        this.project = project;
        return this;
    }
    
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_subtype")
    public String resourceSubtype;

    public StoryResponse withResourceSubtype(String resourceSubtype) {
        this.resourceSubtype = resourceSubtype;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;

    public StoryResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The component of the Asana product the user used to trigger the story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public StoryResponseSourceEnum source;

    public StoryResponse withSource(StoryResponseSourceEnum source) {
        this.source = source;
        return this;
    }
    
    /**
     * The name of the sticker in this story. `null` if there is no sticker.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sticker_name")
    public StoryResponseStickerNameEnum stickerName;

    public StoryResponse withStickerName(StoryResponseStickerNameEnum stickerName) {
        this.stickerName = stickerName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("story")
    public StoryCompact story;

    public StoryResponse withStory(StoryCompact story) {
        this.story = story;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag")
    public TagCompact tag;

    public StoryResponse withTag(TagCompact tag) {
        this.tag = tag;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public StoryResponseTarget target;

    public StoryResponse withTarget(StoryResponseTarget target) {
        this.target = target;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task")
    public TaskCompact task;

    public StoryResponse withTask(TaskCompact task) {
        this.task = task;
        return this;
    }
    
    /**
     * The plain text of the comment to add. Cannot be used with html_text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public StoryResponse withText(String text) {
        this.text = text;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public StoryResponseTypeEnum type;

    public StoryResponse withType(StoryResponseTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public StoryResponse(){}
}
