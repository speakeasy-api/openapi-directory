<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Amount
{
    /**
     * The amount given with fractional digits, where fractions must be compliant to the currency definition.
     * 
     * Up to 14 significant figures. Negative amounts are signed by minus.
     * The decimal separator is a dot.
     * 
     * **Example:**
     * Valid representations for EUR with up to two decimals are:
     * 
     *   * 1056
     *   * 5768.2
     *   * -1.50
     *   * 5877.78
     * 
     * 
     * @var string $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $amount;
    
    /**
     * ISO 4217 Alpha 3 currency code.
     * 
     * 
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
	public function __construct()
	{
		$this->amount = "";
		$this->currency = "";
	}
}
