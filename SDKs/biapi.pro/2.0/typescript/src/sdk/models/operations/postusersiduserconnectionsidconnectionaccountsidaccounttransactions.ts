/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody extends SpeakeasyBase {
  /**
   * 1 if the transaction should be taken into account by pfm services (default: 1)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=active" })
  active?: boolean;

  /**
   * 1 if the transaction has already been debited (default: 0)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=coming" })
  coming?: boolean;

  /**
   * date of the transaction
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=date;dateTimeFormat=YYYY-MM-DD",
  })
  date: Date;

  /**
   * date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=date_scraped;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateScraped?: Date;

  /**
   * account of the transaction. If not supplied, it has to be given in the route
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=id_account" })
  idAccount?: number;

  /**
   * label of the transaction
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=original_wording" })
  originalWording: string;

  /**
   * realisation date of the transaction (default: value of date)
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=rdate;dateTimeFormat=YYYY-MM-DD",
  })
  rdate?: Date;

  /**
   * nature of the transaction (default: new)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=state" })
  state?: string;

  /**
   * type of the transaction (default: unknown)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=type" })
  type?: string;

  /**
   * vallue of the transaction
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=value" })
  value: number;
}

export class PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody: PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_account",
  })
  idAccount: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connection",
  })
  idConnection: number;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;
}

export class PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful POST on Transaction resource
   */
  @SpeakeasyMetadata()
  transaction?: shared.Transaction;
}
