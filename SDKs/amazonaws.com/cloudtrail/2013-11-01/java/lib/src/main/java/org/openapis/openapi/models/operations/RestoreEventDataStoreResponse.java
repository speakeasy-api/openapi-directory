/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class RestoreEventDataStoreResponse {
    /**
     * CloudTrailAccessNotEnabledException
     */
    
    public Object cloudTrailAccessNotEnabledException;

    public RestoreEventDataStoreResponse withCloudTrailAccessNotEnabledException(Object cloudTrailAccessNotEnabledException) {
        this.cloudTrailAccessNotEnabledException = cloudTrailAccessNotEnabledException;
        return this;
    }
    
    
    public String contentType;

    public RestoreEventDataStoreResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * EventDataStoreARNInvalidException
     */
    
    public Object eventDataStoreARNInvalidException;

    public RestoreEventDataStoreResponse withEventDataStoreARNInvalidException(Object eventDataStoreARNInvalidException) {
        this.eventDataStoreARNInvalidException = eventDataStoreARNInvalidException;
        return this;
    }
    
    /**
     * EventDataStoreMaxLimitExceededException
     */
    
    public Object eventDataStoreMaxLimitExceededException;

    public RestoreEventDataStoreResponse withEventDataStoreMaxLimitExceededException(Object eventDataStoreMaxLimitExceededException) {
        this.eventDataStoreMaxLimitExceededException = eventDataStoreMaxLimitExceededException;
        return this;
    }
    
    /**
     * EventDataStoreNotFoundException
     */
    
    public Object eventDataStoreNotFoundException;

    public RestoreEventDataStoreResponse withEventDataStoreNotFoundException(Object eventDataStoreNotFoundException) {
        this.eventDataStoreNotFoundException = eventDataStoreNotFoundException;
        return this;
    }
    
    /**
     * InsufficientDependencyServiceAccessPermissionException
     */
    
    public Object insufficientDependencyServiceAccessPermissionException;

    public RestoreEventDataStoreResponse withInsufficientDependencyServiceAccessPermissionException(Object insufficientDependencyServiceAccessPermissionException) {
        this.insufficientDependencyServiceAccessPermissionException = insufficientDependencyServiceAccessPermissionException;
        return this;
    }
    
    /**
     * InvalidEventDataStoreStatusException
     */
    
    public Object invalidEventDataStoreStatusException;

    public RestoreEventDataStoreResponse withInvalidEventDataStoreStatusException(Object invalidEventDataStoreStatusException) {
        this.invalidEventDataStoreStatusException = invalidEventDataStoreStatusException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public RestoreEventDataStoreResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * NoManagementAccountSLRExistsException
     */
    
    public Object noManagementAccountSLRExistsException;

    public RestoreEventDataStoreResponse withNoManagementAccountSLRExistsException(Object noManagementAccountSLRExistsException) {
        this.noManagementAccountSLRExistsException = noManagementAccountSLRExistsException;
        return this;
    }
    
    /**
     * NotOrganizationMasterAccountException
     */
    
    public Object notOrganizationMasterAccountException;

    public RestoreEventDataStoreResponse withNotOrganizationMasterAccountException(Object notOrganizationMasterAccountException) {
        this.notOrganizationMasterAccountException = notOrganizationMasterAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public RestoreEventDataStoreResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * OrganizationNotInAllFeaturesModeException
     */
    
    public Object organizationNotInAllFeaturesModeException;

    public RestoreEventDataStoreResponse withOrganizationNotInAllFeaturesModeException(Object organizationNotInAllFeaturesModeException) {
        this.organizationNotInAllFeaturesModeException = organizationNotInAllFeaturesModeException;
        return this;
    }
    
    /**
     * OrganizationsNotInUseException
     */
    
    public Object organizationsNotInUseException;

    public RestoreEventDataStoreResponse withOrganizationsNotInUseException(Object organizationsNotInUseException) {
        this.organizationsNotInUseException = organizationsNotInUseException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.RestoreEventDataStoreResponse restoreEventDataStoreResponse;

    public RestoreEventDataStoreResponse withRestoreEventDataStoreResponse(org.openapis.openapi.models.shared.RestoreEventDataStoreResponse restoreEventDataStoreResponse) {
        this.restoreEventDataStoreResponse = restoreEventDataStoreResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public RestoreEventDataStoreResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public RestoreEventDataStoreResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public RestoreEventDataStoreResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public RestoreEventDataStoreResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
