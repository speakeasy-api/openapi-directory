/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The state of the profile after a read or write operation.
 */
export class ProfileDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "durationSeconds" })
  durationSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "managedPolicyArns" })
  managedPolicyArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "profileArn" })
  profileArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "profileId" })
  profileId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requireInstanceProperties" })
  requireInstanceProperties?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArns" })
  roleArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "sessionPolicy" })
  sessionPolicy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
