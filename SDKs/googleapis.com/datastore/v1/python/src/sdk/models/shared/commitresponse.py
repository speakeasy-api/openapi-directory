"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mutationresult as shared_mutationresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CommitResponse:
    r"""The response for Datastore.Commit."""
    
    commit_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitTime'), 'exclude': lambda f: f is None }})
    r"""The transaction commit timestamp. Not set for non-transactional commits."""  
    index_updates: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indexUpdates'), 'exclude': lambda f: f is None }})
    r"""The number of index entries updated during the commit, or zero if none were updated."""  
    mutation_results: Optional[list[shared_mutationresult.MutationResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mutationResults'), 'exclude': lambda f: f is None }})
    r"""The result of performing the mutations. The i-th mutation result corresponds to the i-th mutation in the request."""  
    