/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TagFilter } from "./tagfilter";
import { Expose, Type } from "class-transformer";

export class GetResourcesInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeCompliantResources" })
  excludeCompliantResources?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IncludeComplianceDetails" })
  includeComplianceDetails?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "PaginationToken" })
  paginationToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceARNList" })
  resourceARNList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceTypeFilters" })
  resourceTypeFilters?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResourcesPerPage" })
  resourcesPerPage?: number;

  @SpeakeasyMetadata({ elemType: TagFilter })
  @Expose({ name: "TagFilters" })
  @Type(() => TagFilter)
  tagFilters?: TagFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "TagsPerPage" })
  tagsPerPage?: number;
}
