// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DoActionExperimentUsingPOSTActionEnum - action
type DoActionExperimentUsingPOSTActionEnum string

const (
	DoActionExperimentUsingPOSTActionEnumStart     DoActionExperimentUsingPOSTActionEnum = "start"
	DoActionExperimentUsingPOSTActionEnumStop      DoActionExperimentUsingPOSTActionEnum = "stop"
	DoActionExperimentUsingPOSTActionEnumPublish   DoActionExperimentUsingPOSTActionEnum = "publish"
	DoActionExperimentUsingPOSTActionEnumUnpublish DoActionExperimentUsingPOSTActionEnum = "unpublish"
)

func (e DoActionExperimentUsingPOSTActionEnum) ToPointer() *DoActionExperimentUsingPOSTActionEnum {
	return &e
}

func (e *DoActionExperimentUsingPOSTActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "start":
		fallthrough
	case "stop":
		fallthrough
	case "publish":
		fallthrough
	case "unpublish":
		*e = DoActionExperimentUsingPOSTActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DoActionExperimentUsingPOSTActionEnum: %v", v)
	}
}

type DoActionExperimentUsingPOSTRequest struct {
	// action
	Action DoActionExperimentUsingPOSTActionEnum `pathParam:"style=simple,explode=false,name=action"`
	// apiKey
	APIKey string `pathParam:"style=simple,explode=false,name=apiKey"`
	// id
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

type DoActionExperimentUsingPOSTResponse struct {
	ContentType string
	// OK
	ExperimentModel *shared.ExperimentModel
	// json error
	MessageModel *shared.MessageModel
	StatusCode   int
	RawResponse  *http.Response
}
