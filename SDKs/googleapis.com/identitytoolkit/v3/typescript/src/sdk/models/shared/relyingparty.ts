/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request of getting a code for user confirmation (reset password, change email etc.)
 */
export class Relyingparty extends SpeakeasyBase {
  /**
   * whether or not to install the android app on the device where the link is opened
   */
  @SpeakeasyMetadata()
  @Expose({ name: "androidInstallApp" })
  androidInstallApp?: boolean;

  /**
   * minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "androidMinimumVersion" })
  androidMinimumVersion?: string;

  /**
   * android package name of the android app to handle the action code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "androidPackageName" })
  androidPackageName?: string;

  /**
   * whether or not the app can handle the oob code without first going to web
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canHandleCodeInApp" })
  canHandleCodeInApp?: boolean;

  /**
   * The recaptcha response from the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "captchaResp" })
  captchaResp?: string;

  /**
   * The recaptcha challenge presented to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "challenge" })
  challenge?: string;

  /**
   * The url to continue to the Gitkit app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "continueUrl" })
  continueUrl?: string;

  /**
   * The email of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * iOS app store id to download the app if it's not already installed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iOSAppStoreId" })
  iOSAppStoreId?: string;

  /**
   * the iOS bundle id of iOS app to handle the action code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iOSBundleId" })
  iOSBundleId?: string;

  /**
   * The user's Gitkit login token for email change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idToken" })
  idToken?: string;

  /**
   * The fixed string "identitytoolkit#relyingparty".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The new email if the code is for email change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newEmail" })
  newEmail?: string;

  /**
   * The request type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestType" })
  requestType?: string;

  /**
   * The IP address of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userIp" })
  userIp?: string;
}
