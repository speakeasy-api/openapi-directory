"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Color:
    
    blue: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blue'), 'exclude': lambda f: f is None }})
    r"""RGB-Blue color value"""  
    green: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('green'), 'exclude': lambda f: f is None }})
    r"""RGB-Green color value."""  
    hex: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hex'), 'exclude': lambda f: f is None }})
    r"""Hex-label of this color."""  
    number_of_pixel: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_of_pixel'), 'exclude': lambda f: f is None }})
    r"""Number of pixels that holds this color."""  
    percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage'), 'exclude': lambda f: f is None }})
    r"""Percentage of pixels that holds this color."""  
    red: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('red'), 'exclude': lambda f: f is None }})
    r"""RGB-Red color value."""  
    