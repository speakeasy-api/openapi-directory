// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteParameterGroupXAmzTargetEnum
type DeleteParameterGroupXAmzTargetEnum string

const (
	DeleteParameterGroupXAmzTargetEnumAmazonMemoryDbDeleteParameterGroup DeleteParameterGroupXAmzTargetEnum = "AmazonMemoryDB.DeleteParameterGroup"
)

func (e DeleteParameterGroupXAmzTargetEnum) ToPointer() *DeleteParameterGroupXAmzTargetEnum {
	return &e
}

func (e *DeleteParameterGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonMemoryDB.DeleteParameterGroup":
		*e = DeleteParameterGroupXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteParameterGroupXAmzTargetEnum: %v", v)
	}
}

type DeleteParameterGroupRequest struct {
	DeleteParameterGroupRequest shared.DeleteParameterGroupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DeleteParameterGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteParameterGroupResponse struct {
	ContentType string
	// Success
	DeleteParameterGroupResponse *shared.DeleteParameterGroupResponse
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// InvalidParameterGroupStateFault
	InvalidParameterGroupStateFault interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ParameterGroupNotFoundFault
	ParameterGroupNotFoundFault interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceLinkedRoleNotFoundFault
	ServiceLinkedRoleNotFoundFault interface{}
}
