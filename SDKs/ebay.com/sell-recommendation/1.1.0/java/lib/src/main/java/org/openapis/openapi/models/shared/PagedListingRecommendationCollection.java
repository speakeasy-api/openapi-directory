/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PagedListingRecommendationCollection - The high-level object used to return a set of Promoted Listings ad recommendations.
 */
public class PagedListingRecommendationCollection {
    /**
     * The URI of the current page of results from the result set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("href")
    public String href;
    public PagedListingRecommendationCollection withHref(String href) {
        this.href = href;
        return this;
    }
    
    /**
     * The number of items returned on a single page from the result set. This value can be set in the request with the limit query parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Integer limit;
    public PagedListingRecommendationCollection withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Returns a list of listingRecommendations, where each element in the list offers recommendations for the associated listingId. Which elements are returned depend on how you structure the request. For example, if you request recommendations for all of a sellers listings (by leaving the request payload empty), ad recommendations are returned only for those listings where promoteWithAd is set to RECOMMENDED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingRecommendations")
    public ListingRecommendation[] listingRecommendations;
    public PagedListingRecommendationCollection withListingRecommendations(ListingRecommendation[] listingRecommendations) {
        this.listingRecommendations = listingRecommendations;
        return this;
    }
    
    /**
     * The URI for the following page of results. This value is returned only if there is an additional page of results to display from the result set. Max length: 2048
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;
    public PagedListingRecommendationCollection withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the offset query parameter. Note: The items in a paginated result set use a zero-based list where the first item in the list has an offset of 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Integer offset;
    public PagedListingRecommendationCollection withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The URI for the preceding page of results. This value is returned only if there is a previous page of results to display from the result set. Max length: 2048
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev")
    public String prev;
    public PagedListingRecommendationCollection withPrev(String prev) {
        this.prev = prev;
        return this;
    }
    
    /**
     * The total number of items retrieved in the result set. If no items are found, this field is returned with a value of 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Integer total;
    public PagedListingRecommendationCollection withTotal(Integer total) {
        this.total = total;
        return this;
    }
    
}
