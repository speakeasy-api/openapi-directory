// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LinkageLinkageTypeEnum string

const (
	LinkageLinkageTypeEnumStart   LinkageLinkageTypeEnum = "Start"
	LinkageLinkageTypeEnumSuccess LinkageLinkageTypeEnum = "Success"
	LinkageLinkageTypeEnumFailure LinkageLinkageTypeEnum = "Failure"
	LinkageLinkageTypeEnumIterate LinkageLinkageTypeEnum = "Iterate"
	LinkageLinkageTypeEnumTrue    LinkageLinkageTypeEnum = "true"
	LinkageLinkageTypeEnumFalse   LinkageLinkageTypeEnum = "false"
	LinkageLinkageTypeEnumApprove LinkageLinkageTypeEnum = "Approve"
	LinkageLinkageTypeEnumReject  LinkageLinkageTypeEnum = "Reject"
)

func (e *LinkageLinkageTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Start":
		fallthrough
	case "Success":
		fallthrough
	case "Failure":
		fallthrough
	case "Iterate":
		fallthrough
	case "true":
		fallthrough
	case "false":
		fallthrough
	case "Approve":
		fallthrough
	case "Reject":
		*e = LinkageLinkageTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LinkageLinkageTypeEnum: %s", s)
	}
}

// Linkage - Used to represent the relationship between workflow tasks
type Linkage struct {
	LinkageType *LinkageLinkageTypeEnum `json:"linkage_type,omitempty"`
	// the task that spawned the target task
	SourceTaskID *int64 `json:"source_task_id,omitempty"`
	// the workflow the target task is associated with
	SourceWorkflowID *int64 `json:"source_workflow_id,omitempty"`
	// the task that the source task is linked to.
	TargetTaskID *int64 `json:"target_task_id,omitempty"`
}
