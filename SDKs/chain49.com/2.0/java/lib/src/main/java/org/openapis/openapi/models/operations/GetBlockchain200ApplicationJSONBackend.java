/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetBlockchain200ApplicationJSONBackend {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bestBlockHash")
    public String bestBlockHash;

    public GetBlockchain200ApplicationJSONBackend withBestBlockHash(String bestBlockHash) {
        this.bestBlockHash = bestBlockHash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocks")
    public Long blocks;

    public GetBlockchain200ApplicationJSONBackend withBlocks(Long blocks) {
        this.blocks = blocks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chain")
    public String chain;

    public GetBlockchain200ApplicationJSONBackend withChain(String chain) {
        this.chain = chain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("difficulty")
    public String difficulty;

    public GetBlockchain200ApplicationJSONBackend withDifficulty(String difficulty) {
        this.difficulty = difficulty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public Long headers;

    public GetBlockchain200ApplicationJSONBackend withHeaders(Long headers) {
        this.headers = headers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocolVersion")
    public String protocolVersion;

    public GetBlockchain200ApplicationJSONBackend withProtocolVersion(String protocolVersion) {
        this.protocolVersion = protocolVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeOnDisk")
    public Long sizeOnDisk;

    public GetBlockchain200ApplicationJSONBackend withSizeOnDisk(Long sizeOnDisk) {
        this.sizeOnDisk = sizeOnDisk;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subversion")
    public String subversion;

    public GetBlockchain200ApplicationJSONBackend withSubversion(String subversion) {
        this.subversion = subversion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public GetBlockchain200ApplicationJSONBackend withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public GetBlockchain200ApplicationJSONBackend(){}
}
