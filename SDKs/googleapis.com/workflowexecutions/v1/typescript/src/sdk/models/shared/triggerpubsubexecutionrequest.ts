/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PubsubMessage } from "./pubsubmessage";
import { Expose, Type } from "class-transformer";

/**
 * Request for the TriggerPubsubExecution method.
 */
export class TriggerPubsubExecutionRequest extends SpeakeasyBase {
  /**
   * Required. LINT: LEGACY_NAMES The query parameter value for __GCP_CloudEventsMode, set by the Eventarc service when configuring triggers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GCPCloudEventsMode" })
  gcpCloudEventsMode?: string;

  /**
   * A message that is published by publishers and consumed by subscribers. The message must contain either a non-empty data field or at least one attribute. Note that client libraries represent this object differently depending on the language. See the corresponding [client library documentation](https://cloud.google.com/pubsub/docs/reference/libraries) for more information. See [quotas and limits] (https://cloud.google.com/pubsub/quotas) for more information about message limits.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  @Type(() => PubsubMessage)
  message?: PubsubMessage;

  /**
   * Required. The subscription of the Pub/Sub push notification. Format: projects/{project}/subscriptions/{sub}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription" })
  subscription?: string;
}
