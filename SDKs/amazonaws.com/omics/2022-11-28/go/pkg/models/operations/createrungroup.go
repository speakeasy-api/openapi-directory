// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateRunGroupRequestBody struct {
	// The maximum number of CPUs to use in the group.
	MaxCpus *int64 `json:"maxCpus,omitempty"`
	// A maximum run time for the group in minutes.
	MaxDuration *int64 `json:"maxDuration,omitempty"`
	// The maximum number of concurrent runs for the group.
	MaxRuns *int64 `json:"maxRuns,omitempty"`
	// A name for the group.
	Name *string `json:"name,omitempty"`
	// To ensure that requests don't run multiple times, specify a unique ID for each request.
	RequestID string `json:"requestId"`
	// Tags for the group.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateRunGroupRequest struct {
	RequestBody       CreateRunGroupRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateRunGroupResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateRunGroupResponse *shared.CreateRunGroupResponse
	// InternalServerException
	InternalServerException interface{}
	// RequestTimeoutException
	RequestTimeoutException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
