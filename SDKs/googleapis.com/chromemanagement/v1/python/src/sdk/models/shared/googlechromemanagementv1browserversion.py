"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleChromeManagementV1BrowserVersionChannelEnum(str, Enum):
    r"""Output only. The release channel of the installed browser."""
    RELEASE_CHANNEL_UNSPECIFIED = 'RELEASE_CHANNEL_UNSPECIFIED'
    CANARY = 'CANARY'
    DEV = 'DEV'
    BETA = 'BETA'
    STABLE = 'STABLE'

class GoogleChromeManagementV1BrowserVersionSystemEnum(str, Enum):
    r"""Output only. The device operating system."""
    DEVICE_SYSTEM_UNSPECIFIED = 'DEVICE_SYSTEM_UNSPECIFIED'
    SYSTEM_OTHER = 'SYSTEM_OTHER'
    SYSTEM_ANDROID = 'SYSTEM_ANDROID'
    SYSTEM_IOS = 'SYSTEM_IOS'
    SYSTEM_CROS = 'SYSTEM_CROS'
    SYSTEM_WINDOWS = 'SYSTEM_WINDOWS'
    SYSTEM_MAC = 'SYSTEM_MAC'
    SYSTEM_LINUX = 'SYSTEM_LINUX'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromeManagementV1BrowserVersion:
    r"""Describes a browser version and its install count."""
    
    channel: Optional[GoogleChromeManagementV1BrowserVersionChannelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel'), 'exclude': lambda f: f is None }})
    r"""Output only. The release channel of the installed browser."""  
    count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Output only. Count grouped by device_system and major version"""  
    device_os_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceOsVersion'), 'exclude': lambda f: f is None }})
    r"""Output only. Version of the system-specified operating system."""  
    system: Optional[GoogleChromeManagementV1BrowserVersionSystemEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('system'), 'exclude': lambda f: f is None }})
    r"""Output only. The device operating system."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""Output only. The full version of the installed browser."""  
    