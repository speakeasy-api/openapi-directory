/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Condition } from "./condition";
import { LogConfig } from "./logconfig";
import { Expose, Type } from "class-transformer";

/**
 * This is deprecated and has no effect. Do not use.
 */
export enum RuleActionEnum {
  Allow = "ALLOW",
  AllowWithLog = "ALLOW_WITH_LOG",
  Deny = "DENY",
  DenyWithLog = "DENY_WITH_LOG",
  Log = "LOG",
  NoAction = "NO_ACTION",
}

/**
 * This is deprecated and has no effect. Do not use.
 */
export class Rule extends SpeakeasyBase {
  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: RuleActionEnum;

  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata({ elemType: Condition })
  @Expose({ name: "conditions" })
  @Type(() => Condition)
  conditions?: Condition[];

  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ins" })
  ins?: string[];

  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata({ elemType: LogConfig })
  @Expose({ name: "logConfigs" })
  @Type(() => LogConfig)
  logConfigs?: LogConfig[];

  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notIns" })
  notIns?: string[];

  /**
   * This is deprecated and has no effect. Do not use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: string[];
}
