// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateUpdateFreightValuesPathParams struct {
	CarrierID string `pathParam:"style=simple,explode=false,name=carrierId"`
}

type CreateUpdateFreightValuesHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type CreateUpdateFreightValuesCreateUpdateFreightValuesRequest struct {
	// Fixed shipping cost to be charged in a decimal number.
	AbsoluteMoneyCost string `json:"absoluteMoneyCost"`
	// Three letter ISO code for the country where the delivery will take place.
	Country string `json:"country"`
	// Maximum volume that can be transported by the carrier in cmÂ³.
	MaxVolume int `json:"maxVolume"`
	// Indicates desired action for the object. Possible values are `1` (Insert), `2` (Update) or `3`(Delete).
	OperationType int `json:"operationType"`
	// Polygon ID, according to the [geolocation](https://help.vtex.com/en/tutorial/registering-geolocation/) feature.
	Polygon string `json:"polygon"`
	// [Price-based additional shipping charge](https://help.vtex.com/en/tutorial/additional-shipping-costs--2vqGwMn0LabkOHY6zSHYNV), calculated based on the total price of the order, in decimal number. You must fill in this field with a percentage value. For example, for an additional charge of 10%, fill in the table with 10.
	PricePercent int `json:"pricePercent"`
	// [Weight-based additional shipping charge](https://help.vtex.com/en/tutorial/additional-shipping-costs--2vqGwMn0LabkOHY6zSHYNV), calculated based on the total weight of the order.
	PricePercentByWeight int `json:"pricePercentByWeight"`
	// Delivery time frame informed by the carrier, in the format DD.HH:MM:SS.
	TimeCost string `json:"timeCost"`
	// Maximum weight allowed.
	WeightEnd int `json:"weightEnd"`
	// Minimum weight allowed
	WeightStart int `json:"weightStart"`
	// End of postal code interval.
	ZipCodeEnd string `json:"zipCodeEnd"`
	// Start of postal code interval.
	ZipCodeStart string `json:"zipCodeStart"`
}

type CreateUpdateFreightValuesRequest struct {
	PathParams CreateUpdateFreightValuesPathParams
	Headers    CreateUpdateFreightValuesHeaders
	Request    []CreateUpdateFreightValuesCreateUpdateFreightValuesRequest `request:"mediaType=application/json"`
}

type CreateUpdateFreightValuesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
