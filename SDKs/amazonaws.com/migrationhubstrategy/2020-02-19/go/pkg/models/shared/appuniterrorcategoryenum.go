// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppUnitErrorCategoryEnum string

const (
	AppUnitErrorCategoryEnumCredentialError   AppUnitErrorCategoryEnum = "CREDENTIAL_ERROR"
	AppUnitErrorCategoryEnumConnectivityError AppUnitErrorCategoryEnum = "CONNECTIVITY_ERROR"
	AppUnitErrorCategoryEnumPermissionError   AppUnitErrorCategoryEnum = "PERMISSION_ERROR"
	AppUnitErrorCategoryEnumUnsupportedError  AppUnitErrorCategoryEnum = "UNSUPPORTED_ERROR"
	AppUnitErrorCategoryEnumOtherError        AppUnitErrorCategoryEnum = "OTHER_ERROR"
)

func (e *AppUnitErrorCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREDENTIAL_ERROR":
		fallthrough
	case "CONNECTIVITY_ERROR":
		fallthrough
	case "PERMISSION_ERROR":
		fallthrough
	case "UNSUPPORTED_ERROR":
		fallthrough
	case "OTHER_ERROR":
		*e = AppUnitErrorCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppUnitErrorCategoryEnum: %s", s)
	}
}
