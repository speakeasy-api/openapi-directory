// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpdateCatalogCollectionCoverAsset struct {
	ID string `json:"id"`
}

type UpdateCatalogCollectionVisibilityEnum string

const (
	UpdateCatalogCollectionVisibilityEnumPrivate UpdateCatalogCollectionVisibilityEnum = "private"
	UpdateCatalogCollectionVisibilityEnumPublic  UpdateCatalogCollectionVisibilityEnum = "public"
)

func (e *UpdateCatalogCollectionVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private":
		fallthrough
	case "public":
		*e = UpdateCatalogCollectionVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCatalogCollectionVisibilityEnum: %s", s)
	}
}

// UpdateCatalogCollection - Collections Metadata to update
type UpdateCatalogCollection struct {
	CoverAsset *UpdateCatalogCollectionCoverAsset     `json:"cover_asset,omitempty"`
	Name       *string                                `json:"name,omitempty"`
	Visibility *UpdateCatalogCollectionVisibilityEnum `json:"visibility,omitempty"`
}
