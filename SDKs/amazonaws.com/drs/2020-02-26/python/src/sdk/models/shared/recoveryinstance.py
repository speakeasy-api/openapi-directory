"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ec2instancestate_enum as shared_ec2instancestate_enum
from ..shared import originenvironment_enum as shared_originenvironment_enum
from ..shared import recoveryinstancedatareplicationinfo as shared_recoveryinstancedatareplicationinfo
from ..shared import recoveryinstancefailback as shared_recoveryinstancefailback
from ..shared import recoveryinstanceproperties as shared_recoveryinstanceproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecoveryInstance:
    r"""A Recovery Instance is a replica of a Source Server running on EC2."""
    
    arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arn'), 'exclude': lambda f: f is None }})  
    data_replication_info: Optional[shared_recoveryinstancedatareplicationinfo.RecoveryInstanceDataReplicationInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataReplicationInfo'), 'exclude': lambda f: f is None }})  
    ec2_instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ec2InstanceID'), 'exclude': lambda f: f is None }})  
    ec2_instance_state: Optional[shared_ec2instancestate_enum.Ec2InstanceStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ec2InstanceState'), 'exclude': lambda f: f is None }})  
    failback: Optional[shared_recoveryinstancefailback.RecoveryInstanceFailback] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failback'), 'exclude': lambda f: f is None }})  
    is_drill: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDrill'), 'exclude': lambda f: f is None }})  
    job_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobID'), 'exclude': lambda f: f is None }})  
    origin_availability_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originAvailabilityZone'), 'exclude': lambda f: f is None }})  
    origin_environment: Optional[shared_originenvironment_enum.OriginEnvironmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originEnvironment'), 'exclude': lambda f: f is None }})  
    point_in_time_snapshot_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pointInTimeSnapshotDateTime'), 'exclude': lambda f: f is None }})  
    recovery_instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recoveryInstanceID'), 'exclude': lambda f: f is None }})  
    recovery_instance_properties: Optional[shared_recoveryinstanceproperties.RecoveryInstanceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recoveryInstanceProperties'), 'exclude': lambda f: f is None }})  
    source_server_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceServerID'), 'exclude': lambda f: f is None }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    