/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssociatedGateway } from "./associatedgateway";
import { DirectConnectGatewayAssociationProposalStateEnum } from "./directconnectgatewayassociationproposalstateenum";
import { RouteFilterPrefix } from "./routefilterprefix";
import { Expose, Type } from "class-transformer";

/**
 * Information about the proposal request to attach a virtual private gateway to a Direct Connect gateway.
 */
export class DirectConnectGatewayAssociationProposal extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "associatedGateway" })
  @Type(() => AssociatedGateway)
  associatedGateway?: AssociatedGateway;

  @SpeakeasyMetadata()
  @Expose({ name: "directConnectGatewayId" })
  directConnectGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "directConnectGatewayOwnerAccount" })
  directConnectGatewayOwnerAccount?: string;

  @SpeakeasyMetadata({ elemType: RouteFilterPrefix })
  @Expose({ name: "existingAllowedPrefixesToDirectConnectGateway" })
  @Type(() => RouteFilterPrefix)
  existingAllowedPrefixesToDirectConnectGateway?: RouteFilterPrefix[];

  @SpeakeasyMetadata()
  @Expose({ name: "proposalId" })
  proposalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "proposalState" })
  proposalState?: DirectConnectGatewayAssociationProposalStateEnum;

  @SpeakeasyMetadata({ elemType: RouteFilterPrefix })
  @Expose({ name: "requestedAllowedPrefixesToDirectConnectGateway" })
  @Type(() => RouteFilterPrefix)
  requestedAllowedPrefixesToDirectConnectGateway?: RouteFilterPrefix[];
}
