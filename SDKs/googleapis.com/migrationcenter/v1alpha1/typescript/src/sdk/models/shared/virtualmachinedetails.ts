/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GuestOsDetails } from "./guestosdetails";
import { PlatformDetails } from "./platformdetails";
import { VirtualMachineArchitectureDetails } from "./virtualmachinearchitecturedetails";
import { VirtualMachineDiskDetails } from "./virtualmachinediskdetails";
import { VirtualMachineNetworkDetails } from "./virtualmachinenetworkdetails";
import { Expose, Type } from "class-transformer";

/**
 * What family the OS belong to, if known.
 */
export enum VirtualMachineDetailsOsFamilyEnum {
  OsFamilyUnknown = "OS_FAMILY_UNKNOWN",
  OsFamilyWindows = "OS_FAMILY_WINDOWS",
  OsFamilyLinux = "OS_FAMILY_LINUX",
  OsFamilyUnix = "OS_FAMILY_UNIX",
}

/**
 * Details of a VirtualMachine.
 */
export class VirtualMachineDetails extends SpeakeasyBase {
  /**
   * Number of CPU cores in the VirtualMachine. Must be non-negative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coreCount" })
  coreCount?: number;

  /**
   * VM creation timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Information from Guest-level collections.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guestOs" })
  @Type(() => GuestOsDetails)
  guestOs?: GuestOsDetails;

  /**
   * The amount of memory in the VirtualMachine. Must be non-negative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memoryMb" })
  memoryMb?: number;

  /**
   * What family the OS belong to, if known.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osFamily" })
  osFamily?: VirtualMachineDetailsOsFamilyEnum;

  /**
   * The name of the operating system running on the VirtualMachine.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osName" })
  osName?: string;

  /**
   * The version of the operating system running on the virtual machine.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osVersion" })
  osVersion?: string;

  /**
   * Information about the platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  @Type(() => PlatformDetails)
  platform?: PlatformDetails;

  /**
   * Power state of VM (poweredOn or poweredOff).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "powerState" })
  powerState?: string;

  /**
   * Folder name in vCenter where asset resides.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcenterFolder" })
  vcenterFolder?: string;

  /**
   * vCenter URL used in collection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcenterUrl" })
  vcenterUrl?: string;

  /**
   * vCenter VM ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcenterVmId" })
  vcenterVmId?: string;

  /**
   * Details of the VM architecture.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmArchitecture" })
  @Type(() => VirtualMachineArchitectureDetails)
  vmArchitecture?: VirtualMachineArchitectureDetails;

  /**
   * Details of VM disks.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmDisks" })
  @Type(() => VirtualMachineDiskDetails)
  vmDisks?: VirtualMachineDiskDetails;

  /**
   * Virtual Machine display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmName" })
  vmName?: string;

  /**
   * Details of network adapters and settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmNetwork" })
  @Type(() => VirtualMachineNetworkDetails)
  vmNetwork?: VirtualMachineNetworkDetails;

  /**
   * Virtual Machine unique identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmUuid" })
  vmUuid?: string;
}
