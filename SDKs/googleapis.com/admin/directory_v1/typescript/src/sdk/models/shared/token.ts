/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * JSON template for token resource in Directory API.
 */
export class Token extends SpeakeasyBase {
  /**
   * Whether the application is registered with Google. The value is `true` if the application has an anonymous Client ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "anonymous" })
  anonymous?: boolean;

  /**
   * The Client ID of the application the token is issued to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * The displayable name of the application the token is issued to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayText" })
  displayText?: string;

  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The type of the API resource. This is always `admin#directory#token`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Whether the token is issued to an installed application. The value is `true` if the application is installed to a desktop or mobile device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nativeApp" })
  nativeApp?: boolean;

  /**
   * A list of authorization scopes the application is granted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string[];

  /**
   * The unique ID of the user that issued the token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userKey" })
  userKey?: string;
}
