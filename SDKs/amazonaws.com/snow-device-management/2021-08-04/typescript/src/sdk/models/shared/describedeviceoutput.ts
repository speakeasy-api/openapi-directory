/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Capacity } from "./capacity";
import { PhysicalNetworkInterface } from "./physicalnetworkinterface";
import { SoftwareInformation } from "./softwareinformation";
import { UnlockStateEnum } from "./unlockstateenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeDeviceOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "associatedWithJob" })
  associatedWithJob?: string;

  @SpeakeasyMetadata({ elemType: Capacity })
  @Expose({ name: "deviceCapacities" })
  @Type(() => Capacity)
  deviceCapacities?: Capacity[];

  @SpeakeasyMetadata()
  @Expose({ name: "deviceState" })
  deviceState?: UnlockStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceType" })
  deviceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastReachedOutAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastReachedOutAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "managedDeviceArn" })
  managedDeviceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "managedDeviceId" })
  managedDeviceId?: string;

  @SpeakeasyMetadata({ elemType: PhysicalNetworkInterface })
  @Expose({ name: "physicalNetworkInterfaces" })
  @Type(() => PhysicalNetworkInterface)
  physicalNetworkInterfaces?: PhysicalNetworkInterface[];

  @SpeakeasyMetadata()
  @Expose({ name: "software" })
  @Type(() => SoftwareInformation)
  software?: SoftwareInformation;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
