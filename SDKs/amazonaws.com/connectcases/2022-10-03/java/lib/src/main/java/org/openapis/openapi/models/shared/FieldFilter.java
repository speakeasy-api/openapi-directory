/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FieldFilter - A filter for fields. Only one value can be provided.
 */
public class FieldFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contains")
    public FieldValue contains;

    public FieldFilter withContains(FieldValue contains) {
        this.contains = contains;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("equalTo")
    public FieldValue equalTo;

    public FieldFilter withEqualTo(FieldValue equalTo) {
        this.equalTo = equalTo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("greaterThan")
    public FieldValue greaterThan;

    public FieldFilter withGreaterThan(FieldValue greaterThan) {
        this.greaterThan = greaterThan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("greaterThanOrEqualTo")
    public FieldValue greaterThanOrEqualTo;

    public FieldFilter withGreaterThanOrEqualTo(FieldValue greaterThanOrEqualTo) {
        this.greaterThanOrEqualTo = greaterThanOrEqualTo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lessThan")
    public FieldValue lessThan;

    public FieldFilter withLessThan(FieldValue lessThan) {
        this.lessThan = lessThan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lessThanOrEqualTo")
    public FieldValue lessThanOrEqualTo;

    public FieldFilter withLessThanOrEqualTo(FieldValue lessThanOrEqualTo) {
        this.lessThanOrEqualTo = lessThanOrEqualTo;
        return this;
    }
    
    public FieldFilter(){}
}
