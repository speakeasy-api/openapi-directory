/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRunV2Revision - A Revision is an immutable snapshot of code and configuration. A Revision references a container image. Revisions are only created by updates to its parent Service.
 */
public class GoogleCloudRunV2Revision {
    /**
     * Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public GoogleCloudRunV2Revision withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Output only. The Condition of this Revision, containing its readiness status, and detailed error information in case it did not reach a serving state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public GoogleCloudRunV2Condition[] conditions;

    public GoogleCloudRunV2Revision withConditions(GoogleCloudRunV2Condition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Holds the single container that defines the unit of execution for this Revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containers")
    public GoogleCloudRunV2Container[] containers;

    public GoogleCloudRunV2Revision withContainers(GoogleCloudRunV2Container[] containers) {
        this.containers = containers;
        return this;
    }
    
    /**
     * Output only. The creation time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public GoogleCloudRunV2Revision withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;

    public GoogleCloudRunV2Revision withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionKey")
    public String encryptionKey;

    public GoogleCloudRunV2Revision withEncryptionKey(String encryptionKey) {
        this.encryptionKey = encryptionKey;
        return this;
    }
    
    /**
     * The action to take if the encryption key is revoked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionKeyRevocationAction")
    public GoogleCloudRunV2RevisionEncryptionKeyRevocationActionEnum encryptionKeyRevocationAction;

    public GoogleCloudRunV2Revision withEncryptionKeyRevocationAction(GoogleCloudRunV2RevisionEncryptionKeyRevocationActionEnum encryptionKeyRevocationAction) {
        this.encryptionKeyRevocationAction = encryptionKeyRevocationAction;
        return this;
    }
    
    /**
     * If encryption_key_revocation_action is SHUTDOWN, the duration before shutting down all instances. The minimum increment is 1 hour.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionKeyShutdownDuration")
    public String encryptionKeyShutdownDuration;

    public GoogleCloudRunV2Revision withEncryptionKeyShutdownDuration(String encryptionKeyShutdownDuration) {
        this.encryptionKeyShutdownDuration = encryptionKeyShutdownDuration;
        return this;
    }
    
    /**
     * Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleCloudRunV2Revision withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The execution environment being used to host this Revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionEnvironment")
    public GoogleCloudRunV2RevisionExecutionEnvironmentEnum executionEnvironment;

    public GoogleCloudRunV2Revision withExecutionEnvironment(GoogleCloudRunV2RevisionExecutionEnvironmentEnum executionEnvironment) {
        this.executionEnvironment = executionEnvironment;
        return this;
    }
    
    /**
     * Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireTime")
    public String expireTime;

    public GoogleCloudRunV2Revision withExpireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * Output only. A number that monotonically increases every time the user modifies the desired state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("generation")
    public String generation;

    public GoogleCloudRunV2Revision withGeneration(String generation) {
        this.generation = generation;
        return this;
    }
    
    /**
     * Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GoogleCloudRunV2Revision withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchStage")
    public GoogleCloudRunV2RevisionLaunchStageEnum launchStage;

    public GoogleCloudRunV2Revision withLaunchStage(GoogleCloudRunV2RevisionLaunchStageEnum launchStage) {
        this.launchStage = launchStage;
        return this;
    }
    
    /**
     * Output only. The Google Console URI to obtain logs for the Revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logUri")
    public String logUri;

    public GoogleCloudRunV2Revision withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    /**
     * Sets the maximum number of requests that each serving instance can receive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxInstanceRequestConcurrency")
    public Integer maxInstanceRequestConcurrency;

    public GoogleCloudRunV2Revision withMaxInstanceRequestConcurrency(Integer maxInstanceRequestConcurrency) {
        this.maxInstanceRequestConcurrency = maxInstanceRequestConcurrency;
        return this;
    }
    
    /**
     * Output only. The unique name of this Revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudRunV2Revision withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The generation of this Revision currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("observedGeneration")
    public String observedGeneration;

    public GoogleCloudRunV2Revision withObservedGeneration(String observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }
    
    /**
     * Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Service.reconciling` for additional information on reconciliation process in Cloud Run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reconciling")
    public Boolean reconciling;

    public GoogleCloudRunV2Revision withReconciling(Boolean reconciling) {
        this.reconciling = reconciling;
        return this;
    }
    
    /**
     * Output only. Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;

    public GoogleCloudRunV2Revision withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * Settings for revision-level scaling settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaling")
    public GoogleCloudRunV2RevisionScaling scaling;

    public GoogleCloudRunV2Revision withScaling(GoogleCloudRunV2RevisionScaling scaling) {
        this.scaling = scaling;
        return this;
    }
    
    /**
     * Output only. The name of the parent service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;

    public GoogleCloudRunV2Revision withService(String service) {
        this.service = service;
        return this;
    }
    
    /**
     * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;

    public GoogleCloudRunV2Revision withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Enable session affinity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sessionAffinity")
    public Boolean sessionAffinity;

    public GoogleCloudRunV2Revision withSessionAffinity(Boolean sessionAffinity) {
        this.sessionAffinity = sessionAffinity;
        return this;
    }
    
    /**
     * Max allowed time for an instance to respond to a request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public String timeout;

    public GoogleCloudRunV2Revision withTimeout(String timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * Output only. Server assigned unique identifier for the Revision. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public GoogleCloudRunV2Revision withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The last-modified time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public GoogleCloudRunV2Revision withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * A list of Volumes to make available to containers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumes")
    public GoogleCloudRunV2Volume[] volumes;

    public GoogleCloudRunV2Revision withVolumes(GoogleCloudRunV2Volume[] volumes) {
        this.volumes = volumes;
        return this;
    }
    
    /**
     * VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcAccess")
    public GoogleCloudRunV2VpcAccess vpcAccess;

    public GoogleCloudRunV2Revision withVpcAccess(GoogleCloudRunV2VpcAccess vpcAccess) {
        this.vpcAccess = vpcAccess;
        return this;
    }
    
    public GoogleCloudRunV2Revision(){}
}
