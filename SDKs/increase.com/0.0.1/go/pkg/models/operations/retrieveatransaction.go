// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveATransactionRequest struct {
	TransactionID string `pathParam:"style=simple,explode=false,name=transaction_id"`
}

type RetrieveATransactionDefaultApplicationJSON13StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveATransactionDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveATransactionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveATransactionDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON13TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveATransactionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveATransactionDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON13 struct {
	Detail     string                                                 `json:"detail"`
	RetryAfter *int64                                                 `json:"retry_after,omitempty"`
	Status     RetrieveATransactionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                 `json:"title"`
	Type       RetrieveATransactionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON12StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveATransactionDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveATransactionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveATransactionDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON12TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveATransactionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveATransactionDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON12 struct {
	Detail string                                                 `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON11StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveATransactionDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveATransactionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveATransactionDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON11TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveATransactionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveATransactionDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON11 struct {
	Detail string                                                 `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON10StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON10StatusEnumFourHundred RetrieveATransactionDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveATransactionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveATransactionDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON10TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveATransactionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveATransactionDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON10 struct {
	Detail string                                                 `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON9StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON9StatusEnumFourHundred RetrieveATransactionDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveATransactionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveATransactionDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON9TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveATransactionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveATransactionDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                              `json:"errors,omitempty"`
	Status RetrieveATransactionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON8StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveATransactionDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveATransactionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveATransactionDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON8TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveATransactionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveATransactionDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON8 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON7StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveATransactionDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveATransactionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveATransactionDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON7TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveATransactionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveATransactionDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON7 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON6StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON6StatusEnumFiveHundred RetrieveATransactionDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveATransactionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveATransactionDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON6TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON6TypeEnumInternalServerError RetrieveATransactionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveATransactionDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON6 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON5StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveATransactionDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveATransactionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveATransactionDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON5TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveATransactionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveATransactionDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON5 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON4StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveATransactionDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveATransactionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveATransactionDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON4TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveATransactionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveATransactionDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON4 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON3StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveATransactionDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveATransactionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveATransactionDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON3TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveATransactionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveATransactionDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON3 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON2StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveATransactionDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveATransactionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveATransactionDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON2TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveATransactionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveATransactionDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON2 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveATransactionDefaultApplicationJSON1StatusEnum string

const (
	RetrieveATransactionDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveATransactionDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveATransactionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveATransactionDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON1TypeEnum string

const (
	RetrieveATransactionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveATransactionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveATransactionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveATransactionDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveATransactionDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveATransactionDefaultApplicationJSON1 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveATransactionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveATransactionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveATransactionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Transaction
	Transaction *shared.Transaction
}
