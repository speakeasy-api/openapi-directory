/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SourcePosition } from "./sourceposition";
import { ValueCount } from "./valuecount";
import { Expose, Type } from "class-transformer";

/**
 * Describes where in a file an expression is found and what it was evaluated to over the course of its use.
 */
export class ExpressionReport extends SpeakeasyBase {
  /**
   * Subexpressions
   */
  @SpeakeasyMetadata({ elemType: ExpressionReport })
  @Expose({ name: "children" })
  @Type(() => ExpressionReport)
  children?: ExpressionReport[];

  /**
   * Position in the `Source` content including its line, column number, and an index of the `File` in the `Source` message. Used for debug purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourcePosition" })
  @Type(() => SourcePosition)
  sourcePosition?: SourcePosition;

  /**
   * Values that this expression evaluated to when encountered.
   */
  @SpeakeasyMetadata({ elemType: ValueCount })
  @Expose({ name: "values" })
  @Type(() => ValueCount)
  values?: ValueCount[];
}
