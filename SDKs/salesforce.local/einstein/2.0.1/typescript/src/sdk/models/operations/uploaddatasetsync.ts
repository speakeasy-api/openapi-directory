/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UploadDatasetSyncSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerToken: string;
}

/**
 * Type of dataset data.
 */
export enum UploadDatasetSyncRequestBodyTypeEnum {
  TextIntent = "text-intent",
  TextSentiment = "text-sentiment",
}

export class UploadDatasetSyncRequestBody extends SpeakeasyBase {
  /**
   * Path to the .csv, .tsv, or .json file on the local drive (FilePart).
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=data" })
  data?: string;

  /**
   * Name of the dataset. Optional. If this parameter is omitted, the dataset name is derived from the file name.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;

  /**
   * URL of the .csv, .tsv, or .json file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=path" })
  path?: string;

  /**
   * Type of dataset data.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=type" })
  type?: UploadDatasetSyncRequestBodyTypeEnum;
}

export class UploadDatasetSyncResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Upload success
   */
  @SpeakeasyMetadata()
  dataset?: shared.Dataset;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
