"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import mediaitemwrapped as shared_mediaitemwrapped
from typing import Optional


@dataclasses.dataclass
class GetResourcesMediaSearchResultsJSONRequest:
    
    q: str = dataclasses.field(metadata={'query_param': { 'field_name': 'q', 'style': 'form', 'explode': False }})
    r"""The search query supplied by the user"""  
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': False }})
    r"""The maximum number of records to return"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': False }})
    r"""The offset of the records set to return for pagination."""  
    

@dataclasses.dataclass
class GetResourcesMediaSearchResultsJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    media_item_wrappeds: Optional[list[shared_mediaitemwrapped.MediaItemWrapped]] = dataclasses.field(default=None)
    r"""Returns the list of MediaItems matching the search query 'q'.<p>Please enter keyword or URL in search query 'q'."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    