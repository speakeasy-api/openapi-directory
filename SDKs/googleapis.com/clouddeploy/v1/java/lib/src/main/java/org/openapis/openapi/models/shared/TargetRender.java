/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TargetRender - Details of rendering for a single target.
 */
public class TargetRender {
    /**
     * Output only. Reason this render failed. This will always be unspecified while the render in progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureCause")
    public TargetRenderFailureCauseEnum failureCause;

    public TargetRender withFailureCause(TargetRenderFailureCauseEnum failureCause) {
        this.failureCause = failureCause;
        return this;
    }
    
    /**
     * Output only. Additional information about the render failure, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureMessage")
    public String failureMessage;

    public TargetRender withFailureMessage(String failureMessage) {
        this.failureMessage = failureMessage;
        return this;
    }
    
    /**
     * RenderMetadata includes information associated with a `Release` render.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public RenderMetadata metadata;

    public TargetRender withMetadata(RenderMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renderingBuild")
    public String renderingBuild;

    public TargetRender withRenderingBuild(String renderingBuild) {
        this.renderingBuild = renderingBuild;
        return this;
    }
    
    /**
     * Output only. Current state of the render operation for this Target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renderingState")
    public TargetRenderRenderingStateEnum renderingState;

    public TargetRender withRenderingState(TargetRenderRenderingStateEnum renderingState) {
        this.renderingState = renderingState;
        return this;
    }
    
    public TargetRender(){}
}
