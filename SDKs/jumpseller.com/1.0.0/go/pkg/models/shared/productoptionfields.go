// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductOptionFieldsOptionTypeEnum - Type of the product option
type ProductOptionFieldsOptionTypeEnum string

const (
	ProductOptionFieldsOptionTypeEnumOption ProductOptionFieldsOptionTypeEnum = "option"
	ProductOptionFieldsOptionTypeEnumInput  ProductOptionFieldsOptionTypeEnum = "input"
	ProductOptionFieldsOptionTypeEnumText   ProductOptionFieldsOptionTypeEnum = "text"
	ProductOptionFieldsOptionTypeEnumFile   ProductOptionFieldsOptionTypeEnum = "file"
)

func (e ProductOptionFieldsOptionTypeEnum) ToPointer() *ProductOptionFieldsOptionTypeEnum {
	return &e
}

func (e *ProductOptionFieldsOptionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "option":
		fallthrough
	case "input":
		fallthrough
	case "text":
		fallthrough
	case "file":
		*e = ProductOptionFieldsOptionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductOptionFieldsOptionTypeEnum: %v", v)
	}
}

type ProductOptionFields struct {
	// Unique identifier of the product option
	ID *int `json:"id,omitempty"`
	// Name of the product option
	Name *string `json:"name,omitempty"`
	// Type of the product option
	OptionType *ProductOptionFieldsOptionTypeEnum `json:"option_type,omitempty"`
	// Position of the product option
	Position *int                       `json:"position,omitempty"`
	Values   []ProductOptionValueFields `json:"values,omitempty"`
}
