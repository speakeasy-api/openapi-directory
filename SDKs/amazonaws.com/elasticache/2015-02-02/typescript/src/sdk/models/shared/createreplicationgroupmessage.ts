/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IpDiscoveryEnum } from "./ipdiscoveryenum";
import { LogDeliveryConfigurationRequestList } from "./logdeliveryconfigurationrequestlist";
import { NetworkTypeEnum } from "./networktypeenum";
import { NodeGroupConfigurationList } from "./nodegroupconfigurationlist";
import { TagList } from "./taglist";
import { TransitEncryptionModeEnum } from "./transitencryptionmodeenum";

/**
 * Represents the input of a <code>CreateReplicationGroup</code> operation.
 */
export class CreateReplicationGroupMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  atRestEncryptionEnabled?: boolean;

  @SpeakeasyMetadata()
  authToken?: string;

  @SpeakeasyMetadata()
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata()
  automaticFailoverEnabled?: boolean;

  @SpeakeasyMetadata()
  cacheNodeType?: string;

  @SpeakeasyMetadata()
  cacheParameterGroupName?: string;

  @SpeakeasyMetadata()
  cacheSecurityGroupNames?: string[];

  @SpeakeasyMetadata()
  cacheSubnetGroupName?: string;

  @SpeakeasyMetadata()
  dataTieringEnabled?: boolean;

  @SpeakeasyMetadata()
  engine?: string;

  @SpeakeasyMetadata()
  engineVersion?: string;

  @SpeakeasyMetadata()
  globalReplicationGroupId?: string;

  @SpeakeasyMetadata()
  ipDiscovery?: IpDiscoveryEnum;

  @SpeakeasyMetadata()
  kmsKeyId?: string;

  @SpeakeasyMetadata({ elemType: LogDeliveryConfigurationRequestList })
  logDeliveryConfigurations?: LogDeliveryConfigurationRequestList[];

  @SpeakeasyMetadata()
  multiAZEnabled?: boolean;

  @SpeakeasyMetadata()
  networkType?: NetworkTypeEnum;

  @SpeakeasyMetadata({ elemType: NodeGroupConfigurationList })
  nodeGroupConfiguration?: NodeGroupConfigurationList[];

  @SpeakeasyMetadata()
  notificationTopicArn?: string;

  @SpeakeasyMetadata()
  numCacheClusters?: number;

  @SpeakeasyMetadata()
  numNodeGroups?: number;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata()
  preferredCacheClusterAZs?: string[];

  @SpeakeasyMetadata()
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  primaryClusterId?: string;

  @SpeakeasyMetadata()
  replicasPerNodeGroup?: number;

  @SpeakeasyMetadata()
  replicationGroupDescription: string;

  @SpeakeasyMetadata()
  replicationGroupId: string;

  @SpeakeasyMetadata()
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  snapshotArns?: string[];

  @SpeakeasyMetadata()
  snapshotName?: string;

  @SpeakeasyMetadata()
  snapshotRetentionLimit?: number;

  @SpeakeasyMetadata()
  snapshotWindow?: string;

  @SpeakeasyMetadata({ elemType: TagList })
  tags?: TagList[];

  @SpeakeasyMetadata()
  transitEncryptionEnabled?: boolean;

  @SpeakeasyMetadata()
  transitEncryptionMode?: TransitEncryptionModeEnum;

  @SpeakeasyMetadata()
  userGroupIds?: string[];
}
