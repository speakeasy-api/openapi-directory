<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ConferenceData
{
    /**
     * The ID of the conference.
     * 
     * Can be used by developers to keep track of conferences, should not be displayed to users.
     * The ID value is formed differently for each conference solution type:  
     * - eventHangout: ID is not set. (This conference type is deprecated.)
     * - eventNamedHangout: ID is the name of the Hangout. (This conference type is deprecated.)
     * - hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc.
     * - addOn: ID is defined by the third-party provider.  Optional.
     * 
     * @var ?string $conferenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('conferenceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conferenceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('conferenceSolution')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConferenceSolution')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceSolution $conferenceSolution = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('createRequest')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateConferenceRequest')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateConferenceRequest $createRequest = null;
    
    /**
     * Information about individual conference entry points, such as URLs or phone numbers.
     * 
     * All of them must belong to the same conference.
     * Either conferenceSolution and at least one entryPoint, or createRequest is required.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EntryPoint> $entryPoints
     */
	#[\JMS\Serializer\Annotation\SerializedName('entryPoints')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EntryPoint>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $entryPoints = null;
    
    /**
     * Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional.
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('parameters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConferenceParameters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceParameters $parameters = null;
    
    /**
     * The signature of the conference data.
     * 
     * Generated on server side.
     * Unset for a conference with a failed create request.
     * Optional for a conference with a pending create request.
     * 
     * @var ?string $signature
     */
	#[\JMS\Serializer\Annotation\SerializedName('signature')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $signature = null;
    
	public function __construct()
	{
		$this->conferenceId = null;
		$this->conferenceSolution = null;
		$this->createRequest = null;
		$this->entryPoints = null;
		$this->notes = null;
		$this->parameters = null;
		$this->signature = null;
	}
}
