/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * EndUserAgreement - Represents an end-user agreement.
 */
public class EndUserAgreement {
    /**
     * The date &amp; time at which the end user accepted the agreement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("accepted")
    public OffsetDateTime accepted;

    public EndUserAgreement withAccepted(OffsetDateTime accepted) {
        this.accepted = accepted;
        return this;
    }
    
    /**
     * Array containing one or several values of ['balances', 'details', 'transactions']
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_scope")
    public Object[][] accessScope;

    public EndUserAgreement withAccessScope(Object[][] accessScope) {
        this.accessScope = accessScope;
        return this;
    }
    
    /**
     * Number of days from acceptance that the access can be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_valid_for_days")
    public Long accessValidForDays;

    public EndUserAgreement withAccessValidForDays(Long accessValidForDays) {
        this.accessValidForDays = accessValidForDays;
        return this;
    }
    
    /**
     * The date &amp; time at which the end user agreement was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public EndUserAgreement withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * The ID of this End User Agreement, used to refer to this end user agreement in other API calls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public EndUserAgreement withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * an Institution ID for this EUA
     */
    @JsonProperty("institution_id")
    public String institutionId;

    public EndUserAgreement withInstitutionId(String institutionId) {
        this.institutionId = institutionId;
        return this;
    }
    
    /**
     * Maximum number of days of transaction data to retrieve.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_historical_days")
    public Long maxHistoricalDays;

    public EndUserAgreement withMaxHistoricalDays(Long maxHistoricalDays) {
        this.maxHistoricalDays = maxHistoricalDays;
        return this;
    }
    
    public EndUserAgreement(@JsonProperty("institution_id") String institutionId) {
        this.institutionId = institutionId;
  }
}
