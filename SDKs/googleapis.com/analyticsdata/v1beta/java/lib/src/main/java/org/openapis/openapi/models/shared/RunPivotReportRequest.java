/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RunPivotReportRequest - The request to generate a pivot report.
 */
public class RunPivotReportRequest {
    /**
     * The specification of cohorts for a cohort report. Cohort reports create a time series of user retention for the cohort. For example, you could select the cohort of users that were acquired in the first week of September and follow that cohort for the next six weeks. Selecting the users acquired in the first week of September cohort is specified in the `cohort` object. Following that cohort for the next six weeks is specified in the `cohortsRange` object. For examples, see [Cohort Report Examples](https://developers.google.com/analytics/devguides/reporting/data/v1/advanced#cohort_report_examples). The report response could show a weekly time series where say your app has retained 60% of this cohort after three weeks and 25% of this cohort after six weeks. These two percentages can be calculated by the metric `cohortActiveUsers/cohortTotalUsers` and will be separate rows in the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cohortSpec")
    public CohortSpec cohortSpec;

    public RunPivotReportRequest withCohortSpec(CohortSpec cohortSpec) {
        this.cohortSpec = cohortSpec;
        return this;
    }
    
    /**
     * A currency code in ISO4217 format, such as "AED", "USD", "JPY". If the field is empty, the report uses the property's default currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;

    public RunPivotReportRequest withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * The date range to retrieve event data for the report. If multiple date ranges are specified, event data from each date range is used in the report. A special dimension with field name "dateRange" can be included in a Pivot's field names; if included, the report compares between date ranges. In a cohort request, this `dateRanges` must be unspecified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateRanges")
    public DateRange[] dateRanges;

    public RunPivotReportRequest withDateRanges(DateRange[] dateRanges) {
        this.dateRanges = dateRanges;
        return this;
    }
    
    /**
     * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensionFilter")
    public FilterExpression dimensionFilter;

    public RunPivotReportRequest withDimensionFilter(FilterExpression dimensionFilter) {
        this.dimensionFilter = dimensionFilter;
        return this;
    }
    
    /**
     * The dimensions requested. All defined dimensions must be used by one of the following: dimension_expression, dimension_filter, pivots, order_bys.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public Dimension[] dimensions;

    public RunPivotReportRequest withDimensions(Dimension[] dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. Regardless of this `keep_empty_rows` setting, only data recorded by the Google Analytics (GA4) property can be displayed in a report. For example if a property never logs a `purchase` event, then a query for the `eventName` dimension and `eventCount` metric will not have a row eventName: "purchase" and eventCount: 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keepEmptyRows")
    public Boolean keepEmptyRows;

    public RunPivotReportRequest withKeepEmptyRows(Boolean keepEmptyRows) {
        this.keepEmptyRows = keepEmptyRows;
        return this;
    }
    
    /**
     * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricFilter")
    public FilterExpression metricFilter;

    public RunPivotReportRequest withMetricFilter(FilterExpression metricFilter) {
        this.metricFilter = metricFilter;
        return this;
    }
    
    /**
     * The metrics requested, at least one metric needs to be specified. All defined metrics must be used by one of the following: metric_expression, metric_filter, order_bys.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics")
    public Metric[] metrics;

    public RunPivotReportRequest withMetrics(Metric[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * Describes the visual format of the report's dimensions in columns or rows. The union of the fieldNames (dimension names) in all pivots must be a subset of dimension names defined in Dimensions. No two pivots can share a dimension. A dimension is only visible if it appears in a pivot.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pivots")
    public Pivot[] pivots;

    public RunPivotReportRequest withPivots(Pivot[] pivots) {
        this.pivots = pivots;
        return this;
    }
    
    /**
     * A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("property")
    public String property;

    public RunPivotReportRequest withProperty(String property) {
        this.property = property;
        return this;
    }
    
    /**
     * Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnPropertyQuota")
    public Boolean returnPropertyQuota;

    public RunPivotReportRequest withReturnPropertyQuota(Boolean returnPropertyQuota) {
        this.returnPropertyQuota = returnPropertyQuota;
        return this;
    }
    
    public RunPivotReportRequest(){}
}
