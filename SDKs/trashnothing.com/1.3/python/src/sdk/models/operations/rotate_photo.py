"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import photoresult as shared_photoresult
from typing import Optional


@dataclasses.dataclass
class RotatePhotoRequest:
    
    degrees: int = dataclasses.field(metadata={'query_param': { 'field_name': 'degrees', 'style': 'form', 'explode': True }})
    r"""Rotation in degrees - currently only 90, 180 and 270 are supported which correspond to rotate left, rotate upside down and rotate right."""  
    photo_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'photo_id', 'style': 'simple', 'explode': False }})  
    device_pixel_ratio: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'device_pixel_ratio', 'style': 'form', 'explode': True }})
    r"""Client device pixel ratio used to determine thumbnail size (default 1.0)."""  
    

@dataclasses.dataclass
class RotatePhotoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    photo_result: Optional[shared_photoresult.PhotoResult] = dataclasses.field(default=None)
    r"""Photo rotated."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    