// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// PermissionInput - A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy.
type PermissionInput struct {
	// Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type domain or anyone.
	AllowFileDiscovery *bool `json:"allowFileDiscovery,omitempty"`
	// Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
	Deleted *bool `json:"deleted,omitempty"`
	// The "pretty" name of the value of the permission. The following is a list of examples for each type of permission:
	// - user - User's full name, as defined for their Google Account, such as "Joe Smith."
	// - group - Name of the Google Group, such as "The Company Administrators."
	// - domain - String domain name, such as "your-company.com."
	// - anyone - No displayName is present.
	DisplayName *string `json:"displayName,omitempty"`
	// The domain to which this permission refers. The following options are currently allowed:
	// - The entire domain, such as "your-company.com."
	// - A target audience, such as "ID.audience.googledomains.com."
	Domain *string `json:"domain,omitempty"`
	// The email address of the user or group to which this permission refers.
	EmailAddress *string `json:"emailAddress,omitempty"`
	// The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions:
	// - They cannot be set on shared drive items.
	// - They can only be set on user and group permissions.
	// - The time must be in the future.
	// - The time cannot be more than one year in the future.
	ExpirationTime *time.Time `json:"expirationTime,omitempty"`
	// The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as permissionId. IDs should be treated as opaque values.
	ID *string `json:"id,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "drive#permission".
	Kind *string `json:"kind,omitempty"`
	// Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that aren't in a shared drive.
	PendingOwner *bool `json:"pendingOwner,omitempty"`
	// A link to the user's profile photo, if available.
	PhotoLink *string `json:"photoLink,omitempty"`
	// The role granted by this permission. While new values may be supported in the future, the following are currently allowed:
	// - owner
	// - organizer
	// - fileOrganizer
	// - writer
	// - commenter
	// - reader
	Role *string `json:"role,omitempty"`
	// The type of the grantee. Valid values are:
	// - user
	// - group
	// - domain
	// - anyone  When creating a permission, if type is user or group, you must provide an emailAddress for the user or group. When type is domain, you must provide a domain. There isn't extra information required for the anyone type.
	Type *string `json:"type,omitempty"`
	// Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
	View *string `json:"view,omitempty"`
}

type PermissionPermissionDetails struct {
	// Whether this permission is inherited. This field is always populated. This is an output-only field.
	Inherited *bool `json:"inherited,omitempty"`
	// The ID of the item from which this permission is inherited. This is an output-only field.
	InheritedFrom *string `json:"inheritedFrom,omitempty"`
	// The permission type for this user. While new values may be added in future, the following are currently allowed:
	// - file
	// - member
	PermissionType *string `json:"permissionType,omitempty"`
	// The primary role for this user. While new values may be added in the future, the following are currently allowed:
	// - organizer
	// - fileOrganizer
	// - writer
	// - commenter
	// - reader
	Role *string `json:"role,omitempty"`
}

type PermissionTeamDrivePermissionDetails struct {
	// Deprecated - use permissionDetails/inherited instead.
	Inherited *bool `json:"inherited,omitempty"`
	// Deprecated - use permissionDetails/inheritedFrom instead.
	InheritedFrom *string `json:"inheritedFrom,omitempty"`
	// Deprecated - use permissionDetails/role instead.
	Role *string `json:"role,omitempty"`
	// Deprecated - use permissionDetails/permissionType instead.
	TeamDrivePermissionType *string `json:"teamDrivePermissionType,omitempty"`
}

// Permission - A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy.
type Permission struct {
	// Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type domain or anyone.
	AllowFileDiscovery *bool `json:"allowFileDiscovery,omitempty"`
	// Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
	Deleted *bool `json:"deleted,omitempty"`
	// The "pretty" name of the value of the permission. The following is a list of examples for each type of permission:
	// - user - User's full name, as defined for their Google Account, such as "Joe Smith."
	// - group - Name of the Google Group, such as "The Company Administrators."
	// - domain - String domain name, such as "your-company.com."
	// - anyone - No displayName is present.
	DisplayName *string `json:"displayName,omitempty"`
	// The domain to which this permission refers. The following options are currently allowed:
	// - The entire domain, such as "your-company.com."
	// - A target audience, such as "ID.audience.googledomains.com."
	Domain *string `json:"domain,omitempty"`
	// The email address of the user or group to which this permission refers.
	EmailAddress *string `json:"emailAddress,omitempty"`
	// The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions:
	// - They cannot be set on shared drive items.
	// - They can only be set on user and group permissions.
	// - The time must be in the future.
	// - The time cannot be more than one year in the future.
	ExpirationTime *time.Time `json:"expirationTime,omitempty"`
	// The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as permissionId. IDs should be treated as opaque values.
	ID *string `json:"id,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "drive#permission".
	Kind *string `json:"kind,omitempty"`
	// Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that aren't in a shared drive.
	PendingOwner *bool `json:"pendingOwner,omitempty"`
	// Details of whether the permissions on this shared drive item are inherited or are directly on this item. This is an output-only field that's present only for shared drive items.
	PermissionDetails []PermissionPermissionDetails `json:"permissionDetails,omitempty"`
	// A link to the user's profile photo, if available.
	PhotoLink *string `json:"photoLink,omitempty"`
	// The role granted by this permission. While new values may be supported in the future, the following are currently allowed:
	// - owner
	// - organizer
	// - fileOrganizer
	// - writer
	// - commenter
	// - reader
	Role *string `json:"role,omitempty"`
	// Deprecated - use permissionDetails instead.
	TeamDrivePermissionDetails []PermissionTeamDrivePermissionDetails `json:"teamDrivePermissionDetails,omitempty"`
	// The type of the grantee. Valid values are:
	// - user
	// - group
	// - domain
	// - anyone  When creating a permission, if type is user or group, you must provide an emailAddress for the user or group. When type is domain, you must provide a domain. There isn't extra information required for the anyone type.
	Type *string `json:"type,omitempty"`
	// Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
	View *string `json:"view,omitempty"`
}
