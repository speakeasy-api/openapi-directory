// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRoomRequestBodyMessageReviewHandler - Configuration information for optional message review.
type UpdateRoomRequestBodyMessageReviewHandler struct {
	FallbackResult *shared.FallbackResultEnum `json:"fallbackResult,omitempty"`
	URI            *string                    `json:"uri,omitempty"`
}

type UpdateRoomRequestBody struct {
	// Identifier of the room to be updated. Currently this must be an ARN.
	Identifier string `json:"identifier"`
	// Array of logging-configuration identifiers attached to the room.
	LoggingConfigurationIdentifiers []string `json:"loggingConfigurationIdentifiers,omitempty"`
	// The maximum number of characters in a single message. Messages are expected to be UTF-8 encoded and this limit applies specifically to rune/code-point count, not number of bytes. Default: 500.
	MaximumMessageLength *int64 `json:"maximumMessageLength,omitempty"`
	// Maximum number of messages per second that can be sent to the room (by all clients). Default: 10.
	MaximumMessageRatePerSecond *int64 `json:"maximumMessageRatePerSecond,omitempty"`
	// Configuration information for optional message review.
	MessageReviewHandler *UpdateRoomRequestBodyMessageReviewHandler `json:"messageReviewHandler,omitempty"`
	// Room name. The value does not need to be unique.
	Name *string `json:"name,omitempty"`
}

type UpdateRoomRequest struct {
	RequestBody       UpdateRoomRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateRoomResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// PendingVerification
	PendingVerification interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateRoomResponse *shared.UpdateRoomResponse
	// ValidationException
	ValidationException interface{}
}
