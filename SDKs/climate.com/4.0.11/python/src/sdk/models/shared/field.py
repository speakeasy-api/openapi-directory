"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import parent as shared_parent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Field:
    r"""Logical representation of a Field with a name.  Spatial attributes of the Field are provided in the Boundary."""
    
    boundary_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boundaryId') }})
    r"""Unique identifier for the current Field's Boundary."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Unique identifier for a Field."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the Field."""  
    parent: shared_parent.Parent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent') }})
    r"""A minimal set of attributes regarding the parent of a farm organization."""  
    resource_owner_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceOwnerId') }})
    r"""Unique identifier of the resource owner that owns the Field."""  
    