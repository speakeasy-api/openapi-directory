/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetAllApIsRequest extends SpeakeasyBase {
  /**
   * Only return APIs that have been created by the user ID represented by the given value.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBy",
  })
  createdBy?: string;

  /**
   * Only return APIs whose description includes the given value. Matching is case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=description",
  })
  description?: string;

  /**
   * The sorting direction, which can be ascending or descending. The value can be asc to specify an ascending direction or desc to specify a descending direction. If none is specified, the default sorting direction is descending for timestamp and numeric fields and ascending otherwise. An ID is not considered a numeric field.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: string;

  /**
   * Only return APIs with the corresponding privacy state. Public APIs have the isPublic value true; private APIs have the isPublic value false.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isPublic",
  })
  isPublic?: string;

  /**
   * Only return APIs whose name includes the given value. Matching is case insensitive.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Only return APIs that have been updated after this time. Time is represented using the ISO 8601 date and time format.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=since" })
  since?: string;

  /**
   * The value of sort can be one of the names of the fields included in the response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Only return APIs whose summary includes the given value. Matching is case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=summary",
  })
  summary?: string;

  /**
   * Only return APIs that have been updated before this time. Time is represented using the ISO 8601 date and time format.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=until" })
  until?: string;

  /**
   * Only return APIs that have been updated by the user ID represented by the given value.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updatedBy",
  })
  updatedBy?: string;

  /**
   * Only return APIs that are inside the given workspace.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=workspace",
  })
  workspace?: string;
}

export class GetAllApIsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
