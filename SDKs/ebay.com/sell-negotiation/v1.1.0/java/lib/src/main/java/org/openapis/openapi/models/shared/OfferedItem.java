/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OfferedItem - A complex type that defines the offer being made to an &amp;quot;interested&amp;quot; buyer.
 */
public class OfferedItem {
    /**
     * This value denotes the percentage that the listing in the offer will be discounted from its original listed price. The seller can specify either the exact price of the discounted items with the price field or they can use this field to specify the percentage that the listing will be discounted, but not both. Minimum: 5 Required if you do not specify a price value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountPercentage")
    public String discountPercentage;

    public OfferedItem withDiscountPercentage(String discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }
    
    /**
     * This value is a unique eBay-assigned ID that identifies the listing to which the offer pertains. A listingId value is generated by eBay when you list an item with the Trading API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingId")
    public String listingId;

    public OfferedItem withListingId(String listingId) {
        this.listingId = listingId;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Amount price;

    public OfferedItem withPrice(Amount price) {
        this.price = price;
        return this;
    }
    
    /**
     * This integer value indicates the number of items in the eBay listing for which the offer is being made. The offer being made by the seller is an &amp;quot;all or nothing&amp;quot; offer, meaning the buyer must purchase the indicated quantity of items in order to receive the discount on the transaction. Default: 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Integer quantity;

    public OfferedItem withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    public OfferedItem(){}
}
