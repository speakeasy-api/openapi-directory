"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import paragraphstylesuggestionstate as shared_paragraphstylesuggestionstate
from ..shared import textstylesuggestionstate as shared_textstylesuggestionstate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NamedStyleSuggestionStateNamedStyleTypeEnum(str, Enum):
    r"""The named style type that this suggestion state corresponds to. This field is provided as a convenience for matching the NamedStyleSuggestionState with its corresponding NamedStyle."""
    NAMED_STYLE_TYPE_UNSPECIFIED = 'NAMED_STYLE_TYPE_UNSPECIFIED'
    NORMAL_TEXT = 'NORMAL_TEXT'
    TITLE = 'TITLE'
    SUBTITLE = 'SUBTITLE'
    HEADING_1 = 'HEADING_1'
    HEADING_2 = 'HEADING_2'
    HEADING_3 = 'HEADING_3'
    HEADING_4 = 'HEADING_4'
    HEADING_5 = 'HEADING_5'
    HEADING_6 = 'HEADING_6'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NamedStyleSuggestionState:
    r"""A suggestion state of a NamedStyle message."""
    
    named_style_type: Optional[NamedStyleSuggestionStateNamedStyleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namedStyleType'), 'exclude': lambda f: f is None }})
    r"""The named style type that this suggestion state corresponds to. This field is provided as a convenience for matching the NamedStyleSuggestionState with its corresponding NamedStyle."""  
    paragraph_style_suggestion_state: Optional[shared_paragraphstylesuggestionstate.ParagraphStyleSuggestionState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraphStyleSuggestionState'), 'exclude': lambda f: f is None }})
    r"""A mask that indicates which of the fields on the base ParagraphStyle have been changed in this suggestion. For any field set to true, there's a new suggested value."""  
    text_style_suggestion_state: Optional[shared_textstylesuggestionstate.TextStyleSuggestionState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textStyleSuggestionState'), 'exclude': lambda f: f is None }})
    r"""A mask that indicates which of the fields on the base TextStyle have been changed in this suggestion. For any field set to true, there's a new suggested value."""  
    