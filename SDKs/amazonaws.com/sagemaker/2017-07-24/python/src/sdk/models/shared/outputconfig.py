"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import targetdevice_enum as shared_targetdevice_enum
from ..shared import targetplatform as shared_targetplatform
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OutputConfig:
    r"""Contains information about the output location for the compiled model and the target device that the model runs on. <code>TargetDevice</code> and <code>TargetPlatform</code> are mutually exclusive, so you need to choose one between the two to specify your target device or platform. If you cannot find your device you want to use from the <code>TargetDevice</code> list, use <code>TargetPlatform</code> to describe the platform of your edge device and <code>CompilerOptions</code> if there are specific settings that are required or recommended to use for particular TargetPlatform."""
    
    s3_output_location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3OutputLocation') }})  
    compiler_options: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilerOptions'), 'exclude': lambda f: f is None }})  
    kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsKeyId'), 'exclude': lambda f: f is None }})  
    target_device: Optional[shared_targetdevice_enum.TargetDeviceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetDevice'), 'exclude': lambda f: f is None }})  
    target_platform: Optional[shared_targetplatform.TargetPlatform] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetPlatform'), 'exclude': lambda f: f is None }})  
    