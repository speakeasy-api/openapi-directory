"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import curatedlistsimple as shared_curatedlistsimple
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCuratedPodcastsResponse:
    r"""OK"""
    
    curated_lists: list[shared_curatedlistsimple.CuratedListSimple] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('curated_lists') }})  
    has_next: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_next') }})  
    has_previous: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_previous') }})  
    next_page_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_number') }})  
    page_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_number') }})  
    previous_page_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previous_page_number') }})  
    total: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})  
    