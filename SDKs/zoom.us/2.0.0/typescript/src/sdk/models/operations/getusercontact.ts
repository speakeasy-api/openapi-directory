/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetUserContactSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetUserContactRequest extends SpeakeasyBase {
  /**
   * The user's contact Id or email address. The contact can be either a company contact or an external contact.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=contactId",
  })
  contactId: string;

  /**
   * The presence status of the contact.
   *
   * @remarks
   * Include this query parameter with a value of `true` to get the presence status of the contact in the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=query_presence_status",
  })
  queryPresenceStatus?: boolean;
}

/**
 * Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`
 */
export enum GetUserContact200ApplicationXMLPresenceStatusEnum {
  DoNotDisturb = "Do_Not_Disturb",
  Away = "Away",
  Available = "Available",
  Offline = "Offline",
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Contact information returned.
 *
 *
 *
 */
export class GetUserContact200ApplicationXML extends SpeakeasyBase {
  /**
   * Direct number(s) assigned to the contact.
   */
  @SpeakeasyMetadata()
  directNumbers?: string[];

  /**
   * Contact's email address.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Extension number of the contact.
   */
  @SpeakeasyMetadata()
  extensionNumber?: string;

  /**
   * Contact's first name
   */
  @SpeakeasyMetadata()
  firstName?: string;

  /**
   * User ID of the contact.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Contact's last name
   */
  @SpeakeasyMetadata()
  lastName?: string;

  /**
   * Phone number of the contact.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;

  /**
   * Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`
   */
  @SpeakeasyMetadata()
  presenceStatus?: GetUserContact200ApplicationXMLPresenceStatusEnum;
}

/**
 * Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`
 */
export enum GetUserContact200ApplicationJSONPresenceStatusEnum {
  DoNotDisturb = "Do_Not_Disturb",
  Away = "Away",
  Available = "Available",
  Offline = "Offline",
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Contact information returned.
 *
 *
 *
 */
export class GetUserContact200ApplicationJSON extends SpeakeasyBase {
  /**
   * Direct number(s) assigned to the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direct_numbers" })
  directNumbers?: string[];

  /**
   * Contact's email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Extension number of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  /**
   * Contact's first name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * User ID of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Contact's last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Phone number of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "presence_status" })
  presenceStatus?: GetUserContact200ApplicationJSONPresenceStatusEnum;
}

export class GetUserContactResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Contact information returned.
   *
   *
   *
   */
  @SpeakeasyMetadata()
  getUserContact200ApplicationJSONObject?: GetUserContact200ApplicationJSON;
}
