// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateNetworkAppliancePortRequestBody struct {
	// The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing.
	AccessPolicy *string `json:"accessPolicy,omitempty"`
	// Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
	AllowedVlans *string `json:"allowedVlans,omitempty"`
	// Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
	DropUntaggedTraffic *bool `json:"dropUntaggedTraffic,omitempty"`
	// The status of the port
	Enabled *bool `json:"enabled,omitempty"`
	// The type of the port: 'access' or 'trunk'.
	Type *string `json:"type,omitempty"`
	// Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
	Vlan *int64 `json:"vlan,omitempty"`
}

type UpdateNetworkAppliancePortRequest struct {
	RequestBody     *UpdateNetworkAppliancePortRequestBody `request:"mediaType=application/json"`
	AppliancePortID string                                 `pathParam:"style=simple,explode=false,name=appliancePortId"`
	NetworkID       string                                 `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkAppliancePortResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkAppliancePort200ApplicationJSONObject map[string]interface{}
}
