// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteApplicationXAmzTargetEnum
type DeleteApplicationXAmzTargetEnum string

const (
	DeleteApplicationXAmzTargetEnumPhotonAdminProxyServiceDeleteApplication DeleteApplicationXAmzTargetEnum = "PhotonAdminProxyService.DeleteApplication"
)

func (e *DeleteApplicationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PhotonAdminProxyService.DeleteApplication":
		*e = DeleteApplicationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteApplicationXAmzTargetEnum: %s", s)
	}
}

type DeleteApplicationRequest struct {
	DeleteApplicationRequest shared.DeleteApplicationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               DeleteApplicationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteApplicationResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DeleteApplicationResult map[string]interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
}
