/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * The summary of a closed cash drawer shift.
 *
 * @remarks
 * This model contains only the money counted to start a cash drawer shift, counted
 * at the end of the shift, and the amount that should be in the drawer at shift
 * end based on summing all cash drawer shift events.
 */
export class CashDrawerShiftSummary extends SpeakeasyBase {
  /**
   * The shift close time in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closed_at" })
  closedAt?: string;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closed_cash_money" })
  @Type(() => Money)
  closedCashMoney?: Money;

  /**
   * An employee free-text description of a cash drawer shift.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The shift end time in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ended_at" })
  endedAt?: string;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expected_cash_money" })
  @Type(() => Money)
  expectedCashMoney?: Money;

  /**
   * The shift unique ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The shift start time in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "opened_at" })
  openedAt?: string;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "opened_cash_money" })
  @Type(() => Money)
  openedCashMoney?: Money;

  /**
   * The shift current state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;
}
