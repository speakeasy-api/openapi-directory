/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartConfigurationSessionRequestBody {
    /**
     * The application ID or the application name.
     */
    @JsonProperty("ApplicationIdentifier")
    public String applicationIdentifier;

    public StartConfigurationSessionRequestBody withApplicationIdentifier(String applicationIdentifier) {
        this.applicationIdentifier = applicationIdentifier;
        return this;
    }
    
    /**
     * The configuration profile ID or the configuration profile name.
     */
    @JsonProperty("ConfigurationProfileIdentifier")
    public String configurationProfileIdentifier;

    public StartConfigurationSessionRequestBody withConfigurationProfileIdentifier(String configurationProfileIdentifier) {
        this.configurationProfileIdentifier = configurationProfileIdentifier;
        return this;
    }
    
    /**
     * The environment ID or the environment name.
     */
    @JsonProperty("EnvironmentIdentifier")
    public String environmentIdentifier;

    public StartConfigurationSessionRequestBody withEnvironmentIdentifier(String environmentIdentifier) {
        this.environmentIdentifier = environmentIdentifier;
        return this;
    }
    
    /**
     * Sets a constraint on a session. If you specify a value of, for example, 60 seconds, then the client that established the session can't call &lt;a&gt;GetLatestConfiguration&lt;/a&gt; more frequently than every 60 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequiredMinimumPollIntervalInSeconds")
    public Long requiredMinimumPollIntervalInSeconds;

    public StartConfigurationSessionRequestBody withRequiredMinimumPollIntervalInSeconds(Long requiredMinimumPollIntervalInSeconds) {
        this.requiredMinimumPollIntervalInSeconds = requiredMinimumPollIntervalInSeconds;
        return this;
    }
    
    public StartConfigurationSessionRequestBody(@JsonProperty("ApplicationIdentifier") String applicationIdentifier, @JsonProperty("ConfigurationProfileIdentifier") String configurationProfileIdentifier, @JsonProperty("EnvironmentIdentifier") String environmentIdentifier) {
        this.applicationIdentifier = applicationIdentifier;
        this.configurationProfileIdentifier = configurationProfileIdentifier;
        this.environmentIdentifier = environmentIdentifier;
  }
}
