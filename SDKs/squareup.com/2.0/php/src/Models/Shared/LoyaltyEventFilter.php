<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LoyaltyEventFilter - The filtering criteria. If the request specifies multiple filters, 
 * 
 * the endpoint uses a logical AND to evaluate them.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LoyaltyEventFilter
{
    /**
     * Filter events by date time range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoyaltyEventDateTimeFilter $dateTimeFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_time_filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyEventDateTimeFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoyaltyEventDateTimeFilter $dateTimeFilter = null;
    
    /**
     * Filter events by location.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoyaltyEventLocationFilter $locationFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyEventLocationFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoyaltyEventLocationFilter $locationFilter = null;
    
    /**
     * Filter events by loyalty account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoyaltyEventLoyaltyAccountFilter $loyaltyAccountFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('loyalty_account_filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyEventLoyaltyAccountFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoyaltyEventLoyaltyAccountFilter $loyaltyAccountFilter = null;
    
    /**
     * Filter events by the order associated with the event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoyaltyEventOrderFilter $orderFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('order_filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyEventOrderFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoyaltyEventOrderFilter $orderFilter = null;
    
    /**
     * Filter events by event type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoyaltyEventTypeFilter $typeFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('type_filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyEventTypeFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoyaltyEventTypeFilter $typeFilter = null;
    
	public function __construct()
	{
		$this->dateTimeFilter = null;
		$this->locationFilter = null;
		$this->loyaltyAccountFilter = null;
		$this->orderFilter = null;
		$this->typeFilter = null;
	}
}
