/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { CellInput } from "./cellinput";
import { Expose, Transform } from "class-transformer";

/**
 *  Data needed to create a single row in a table as part of the BatchCreateTableRows request.
 */
export class CreateRowData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "batchItemId" })
  batchItemId: string;

  @SpeakeasyMetadata({ elemType: CellInput })
  @Expose({ name: "cellsToCreate" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, CellInput> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], CellInput);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  cellsToCreate: Record<string, CellInput>;
}
