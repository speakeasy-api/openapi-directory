/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AnalyticsListAudiencesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class AnalyticsListAudiencesRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * Include disabled audience definitions
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_disabled",
  })
  includeDisabled?: boolean;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum AnalyticsListAudiencesDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AnalyticsListAudiencesDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AnalyticsListAudiencesDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class AnalyticsListAudiencesDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AnalyticsListAudiencesDefaultApplicationJSONError)
  error: AnalyticsListAudiencesDefaultApplicationJSONError;
}

/**
 * Audience state.
 */
export enum AnalyticsListAudiences200ApplicationJSONValuesStateEnum {
  Calculating = "Calculating",
  Ready = "Ready",
  Disabled = "Disabled",
}

/**
 * Audience definition.
 */
export class AnalyticsListAudiences200ApplicationJSONValues extends SpeakeasyBase {
  /**
   * Audience definition in OData format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition?: string;

  /**
   * Audience description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Estimated audience size.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "estimated_count" })
  estimatedCount?: number;

  /**
   * Audience name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Audience state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: AnalyticsListAudiences200ApplicationJSONValuesStateEnum;
}

/**
 * List of audiences.
 */
export class AnalyticsListAudiences200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "nextLink" })
  nextLink?: string;

  /**
   * List of audiences.
   */
  @SpeakeasyMetadata({
    elemType: AnalyticsListAudiences200ApplicationJSONValues,
  })
  @Expose({ name: "values" })
  @Type(() => AnalyticsListAudiences200ApplicationJSONValues)
  values: AnalyticsListAudiences200ApplicationJSONValues[];
}

export class AnalyticsListAudiencesResponse extends SpeakeasyBase {
  /**
   * List of audiences.
   */
  @SpeakeasyMetadata()
  analyticsListAudiences200ApplicationJSONObject?: AnalyticsListAudiences200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  analyticsListAudiencesDefaultApplicationJSONObject?: AnalyticsListAudiencesDefaultApplicationJSON;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
