/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * LogAnomalyClass -  Information about an anomalous log event found within a log group. 
 */
public class LogAnomalyClass {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Explanation")
    public String explanation;

    public LogAnomalyClass withExplanation(String explanation) {
        this.explanation = explanation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogAnomalyToken")
    public String logAnomalyToken;

    public LogAnomalyClass withLogAnomalyToken(String logAnomalyToken) {
        this.logAnomalyToken = logAnomalyToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogAnomalyType")
    public LogAnomalyTypeEnum logAnomalyType;

    public LogAnomalyClass withLogAnomalyType(LogAnomalyTypeEnum logAnomalyType) {
        this.logAnomalyType = logAnomalyType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogEventId")
    public String logEventId;

    public LogAnomalyClass withLogEventId(String logEventId) {
        this.logEventId = logEventId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LogEventTimestamp")
    public OffsetDateTime logEventTimestamp;

    public LogAnomalyClass withLogEventTimestamp(OffsetDateTime logEventTimestamp) {
        this.logEventTimestamp = logEventTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogStreamName")
    public String logStreamName;

    public LogAnomalyClass withLogStreamName(String logStreamName) {
        this.logStreamName = logStreamName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberOfLogLinesOccurrences")
    public Long numberOfLogLinesOccurrences;

    public LogAnomalyClass withNumberOfLogLinesOccurrences(Long numberOfLogLinesOccurrences) {
        this.numberOfLogLinesOccurrences = numberOfLogLinesOccurrences;
        return this;
    }
    
    public LogAnomalyClass(){}
}
