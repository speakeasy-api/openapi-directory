/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LicenseConfiguration - A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.
 */
public class LicenseConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutomatedDiscoveryInformation")
    public AutomatedDiscoveryInformation automatedDiscoveryInformation;
    public LicenseConfiguration withAutomatedDiscoveryInformation(AutomatedDiscoveryInformation automatedDiscoveryInformation) {
        this.automatedDiscoveryInformation = automatedDiscoveryInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsumedLicenseSummaryList")
    public ConsumedLicenseSummary[] consumedLicenseSummaryList;
    public LicenseConfiguration withConsumedLicenseSummaryList(ConsumedLicenseSummary[] consumedLicenseSummaryList) {
        this.consumedLicenseSummaryList = consumedLicenseSummaryList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsumedLicenses")
    public Long consumedLicenses;
    public LicenseConfiguration withConsumedLicenses(Long consumedLicenses) {
        this.consumedLicenses = consumedLicenses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public LicenseConfiguration withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisassociateWhenNotFound")
    public Boolean disassociateWhenNotFound;
    public LicenseConfiguration withDisassociateWhenNotFound(Boolean disassociateWhenNotFound) {
        this.disassociateWhenNotFound = disassociateWhenNotFound;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseConfigurationArn")
    public String licenseConfigurationArn;
    public LicenseConfiguration withLicenseConfigurationArn(String licenseConfigurationArn) {
        this.licenseConfigurationArn = licenseConfigurationArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseConfigurationId")
    public String licenseConfigurationId;
    public LicenseConfiguration withLicenseConfigurationId(String licenseConfigurationId) {
        this.licenseConfigurationId = licenseConfigurationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseCount")
    public Long licenseCount;
    public LicenseConfiguration withLicenseCount(Long licenseCount) {
        this.licenseCount = licenseCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseCountHardLimit")
    public Boolean licenseCountHardLimit;
    public LicenseConfiguration withLicenseCountHardLimit(Boolean licenseCountHardLimit) {
        this.licenseCountHardLimit = licenseCountHardLimit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseCountingType")
    public LicenseCountingTypeEnum licenseCountingType;
    public LicenseConfiguration withLicenseCountingType(LicenseCountingTypeEnum licenseCountingType) {
        this.licenseCountingType = licenseCountingType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseRules")
    public String[] licenseRules;
    public LicenseConfiguration withLicenseRules(String[] licenseRules) {
        this.licenseRules = licenseRules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ManagedResourceSummaryList")
    public ManagedResourceSummary[] managedResourceSummaryList;
    public LicenseConfiguration withManagedResourceSummaryList(ManagedResourceSummary[] managedResourceSummaryList) {
        this.managedResourceSummaryList = managedResourceSummaryList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public LicenseConfiguration withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OwnerAccountId")
    public String ownerAccountId;
    public LicenseConfiguration withOwnerAccountId(String ownerAccountId) {
        this.ownerAccountId = ownerAccountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProductInformationList")
    public ProductInformation[] productInformationList;
    public LicenseConfiguration withProductInformationList(ProductInformation[] productInformationList) {
        this.productInformationList = productInformationList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public LicenseConfiguration withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
