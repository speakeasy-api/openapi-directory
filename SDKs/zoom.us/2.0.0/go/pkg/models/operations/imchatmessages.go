// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
	"time"
)

type ImChatMessagesPathParams struct {
	// IM chat session ID.
	SessionID string `pathParam:"style=simple,explode=false,name=sessionId"`
}

type ImChatMessagesQueryParams struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
}

type ImChatMessagesRequest struct {
	PathParams  ImChatMessagesPathParams
	QueryParams ImChatMessagesQueryParams
}

type ImChatMessages200ApplicationXMLMessages struct {
	// IM chat message action.
	Action *string
	// Action time.
	ActionTime *time.Time
	// IM chat message sent time.
	DateTime *time.Time
	// IM chat message content.
	Message *string
	// IM chat message sender.
	Sender *string
}

// ImChatMessages200ApplicationXML - Pagination object.
type ImChatMessages200ApplicationXML struct {
	// Start date.
	From *types.Date
	// Array of session objects.
	Messages []ImChatMessages200ApplicationXMLMessages
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
	NextPageToken *string
	// The amount of records returns within a single API call.
	PageSize *int64
	// IM chat session ID.
	SessionID *string
	// End date.
	To *types.Date
}

type ImChatMessages200ApplicationJSONMessages struct {
	// IM chat message action.
	Action *string `json:"action,omitempty"`
	// Action time.
	ActionTime *time.Time `json:"action_time,omitempty"`
	// IM chat message sent time.
	DateTime *time.Time `json:"date_time,omitempty"`
	// IM chat message content.
	Message *string `json:"message,omitempty"`
	// IM chat message sender.
	Sender *string `json:"sender,omitempty"`
}

// ImChatMessages200ApplicationJSON - Pagination object.
type ImChatMessages200ApplicationJSON struct {
	// Start date.
	From *types.Date `json:"from,omitempty"`
	// Array of session objects.
	Messages []ImChatMessages200ApplicationJSONMessages `json:"messages,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The amount of records returns within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// IM chat session ID.
	SessionID *string `json:"session_id,omitempty"`
	// End date.
	To *types.Date `json:"to,omitempty"`
}

type ImChatMessagesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` <br>
	// Archived IM chat messages returned.
	ImChatMessages200ApplicationJSONObject *ImChatMessages200ApplicationJSON
}
