/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Conversation Request Payload Object
 */
export class CreateConversationRequestBody extends SpeakeasyBase {
  /**
   * The display name for the conversation. It does not have to be unique
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * A link to an image for conversations' and users' avatars
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl?: string;

  /**
   * Unique name for a conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Conversation properties
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  @Type(() => shared.ConversationProperties)
  properties?: shared.ConversationProperties;
}

/**
 * Create / Update Conversation Response Payload Object
 */
export class CreateConversation200ApplicationJSON extends SpeakeasyBase {
  /**
   * A link towards a conversation included in Conversation API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href: string;

  /**
   * The unique identifier for this conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class CreateConversationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Create / Update Conversation Response Payload Object
   */
  @SpeakeasyMetadata()
  createConversation200ApplicationJSONObject?: CreateConversation200ApplicationJSON;
}
