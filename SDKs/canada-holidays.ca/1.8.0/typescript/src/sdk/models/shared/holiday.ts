/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Province } from "./province";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Whether this holiday is observed by federally-regulated industries.
 */
export enum HolidayFederalEnum {
  One = "1",
  Zero = "0",
}

/**
 * Whether this is a province-wide statutory holiday, or one that is optional for employers.
 */
export enum HolidayOptionalEnum {
  One = "1",
}

/**
 * A Canadian holiday. Includes a name, the literal date of the holiday, the observed date of the holiday (ie, accommodating for weekends), and a list of regions that observe this holiday.
 */
export class Holiday extends SpeakeasyBase {
  /**
   * ISO date: the literal date of the holiday
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date: Date;

  /**
   * Whether this holiday is observed by federally-regulated industries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "federal" })
  federal: HolidayFederalEnum;

  /**
   * Primary key for a holiday
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * English name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameEn" })
  nameEn: string;

  /**
   * French name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameFr" })
  nameFr: string;

  /**
   * ISO date: when this holiday is observed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "observedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  observedDate: Date;

  /**
   * Whether this is a province-wide statutory holiday, or one that is optional for employers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "optional" })
  optional?: HolidayOptionalEnum;

  @SpeakeasyMetadata({ elemType: Province })
  @Expose({ name: "provinces" })
  @Type(() => Province)
  provinces?: Province[];
}
