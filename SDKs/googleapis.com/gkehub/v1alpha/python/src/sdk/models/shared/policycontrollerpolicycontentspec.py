"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import policycontrollerbundleinstallspec as shared_policycontrollerbundleinstallspec
from ..shared import policycontrollertemplatelibraryconfig as shared_policycontrollertemplatelibraryconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PolicyControllerPolicyContentSpec:
    r"""PolicyContentSpec defines the user's desired content configuration on the cluster."""
    
    bundles: Optional[dict[str, shared_policycontrollerbundleinstallspec.PolicyControllerBundleInstallSpec]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bundles'), 'exclude': lambda f: f is None }})
    r"""map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint."""  
    template_library: Optional[shared_policycontrollertemplatelibraryconfig.PolicyControllerTemplateLibraryConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateLibrary'), 'exclude': lambda f: f is None }})
    r"""The config specifying which default library templates to install."""  
    