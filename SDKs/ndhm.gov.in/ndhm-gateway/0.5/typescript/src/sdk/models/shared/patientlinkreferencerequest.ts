/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CareContext } from "./carecontext";
import { Expose, Transform, Type } from "class-transformer";

export class PatientLinkReferenceRequestPatient extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CareContext })
  @Expose({ name: "careContexts" })
  @Type(() => CareContext)
  careContexts: CareContext[];

  /**
   * Identifier of patient at consent manager
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "referenceNumber" })
  referenceNumber: string;
}

export class PatientLinkReferenceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  @Type(() => PatientLinkReferenceRequestPatient)
  patient: PatientLinkReferenceRequestPatient;

  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId: string;
}
