"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class QuoteOfTheDay:
    r"""Access quote of the day service. Use this to get the quote of the day in various categories. This is a free API that is available to public. You must credit They Said So if you are using the free version.
    https://theysaidso.com/api/quote#qod - Find out more
    """
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_qod(self, request: operations.GetQodRequest, security: operations.GetQodSecurity) -> operations.GetQodResponse:
        r"""Gets `Quote of the Day`. Optional `category` param determines the category of returned quote of the day"""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/qod'
        
        query_params = utils.get_query_params(operations.GetQodRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetQodResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.QuoteResponse])
                res.quote_response = out
        elif http_res.status_code == 400:
            pass

        return res

    def get_qod_categories(self, request: operations.GetQodCategoriesRequest, security: operations.GetQodCategoriesSecurity) -> operations.GetQodCategoriesResponse:
        r"""Gets a list of `Quote of the Day` Categories."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/qod/categories'
        
        query_params = utils.get_query_params(operations.GetQodCategoriesRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetQodCategoriesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_qod_languages(self) -> operations.GetQodLanguagesResponse:
        r"""Gets a list of supported languages for `Quote of the Day`."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/qod/languages'
        
        
        client = self._client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetQodLanguagesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    