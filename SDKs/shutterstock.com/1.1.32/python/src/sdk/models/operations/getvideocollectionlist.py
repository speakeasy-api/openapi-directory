"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import collectiondatalist as shared_collectiondatalist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetVideoCollectionListSecurity:
    
    customer_access_code: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetVideoCollectionListEmbedEnum(str, Enum):
    SHARE_CODE = 'share_code'
    SHARE_URL = 'share_url'


@dataclasses.dataclass
class GetVideoCollectionListRequest:
    
    embed: Optional[list[GetVideoCollectionListEmbedEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'embed', 'style': 'form', 'explode': True }})
    r"""Which sharing information to include in the response, such as a URL to the collection"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Number of results per page"""  
    

@dataclasses.dataclass
class GetVideoCollectionListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    collection_data_list: Optional[shared_collectiondatalist.CollectionDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    