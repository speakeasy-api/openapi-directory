"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labeldetectionfeaturename_enum as shared_labeldetectionfeaturename_enum
from ..shared import labeldetectionsettings as shared_labeldetectionsettings
from ..shared import notificationchannel as shared_notificationchannel
from ..shared import video as shared_video
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartLabelDetectionRequest:
    
    video: shared_video.Video = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Video') }})  
    client_request_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientRequestToken'), 'exclude': lambda f: f is None }})  
    features: Optional[list[shared_labeldetectionfeaturename_enum.LabelDetectionFeatureNameEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Features'), 'exclude': lambda f: f is None }})  
    job_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobTag'), 'exclude': lambda f: f is None }})  
    min_confidence: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinConfidence'), 'exclude': lambda f: f is None }})  
    notification_channel: Optional[shared_notificationchannel.NotificationChannel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotificationChannel'), 'exclude': lambda f: f is None }})  
    settings: Optional[shared_labeldetectionsettings.LabelDetectionSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Settings'), 'exclude': lambda f: f is None }})  
    