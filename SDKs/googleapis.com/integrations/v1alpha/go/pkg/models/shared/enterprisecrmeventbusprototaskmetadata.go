// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum string

const (
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumUnspecifiedCategory EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "UNSPECIFIED_CATEGORY"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumCustom              EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "CUSTOM"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumFlowControl         EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "FLOW_CONTROL"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumDataManipulation    EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "DATA_MANIPULATION"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumScripting           EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "SCRIPTING"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumConnector           EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "CONNECTOR"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumHidden              EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "HIDDEN"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumCloudSystems        EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "CLOUD_SYSTEMS"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumCustomTaskTemplate  EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "CUSTOM_TASK_TEMPLATE"
	EnterpriseCrmEventbusProtoTaskMetadataCategoryEnumTaskRecommendations EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum = "TASK_RECOMMENDATIONS"
)

func (e *EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_CATEGORY":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "FLOW_CONTROL":
		fallthrough
	case "DATA_MANIPULATION":
		fallthrough
	case "SCRIPTING":
		fallthrough
	case "CONNECTOR":
		fallthrough
	case "HIDDEN":
		fallthrough
	case "CLOUD_SYSTEMS":
		fallthrough
	case "CUSTOM_TASK_TEMPLATE":
		fallthrough
	case "TASK_RECOMMENDATIONS":
		*e = EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum: %s", s)
	}
}

// EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum - Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
type EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum string

const (
	EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnumUnspecifiedJSONValidationOption EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum = "UNSPECIFIED_JSON_VALIDATION_OPTION"
	EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnumSkip                            EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum = "SKIP"
	EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnumPreExecution                    EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum = "PRE_EXECUTION"
	EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnumPostExecution                   EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum = "POST_EXECUTION"
	EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnumPrePostExecution                EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum = "PRE_POST_EXECUTION"
)

func (e *EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_JSON_VALIDATION_OPTION":
		fallthrough
	case "SKIP":
		fallthrough
	case "PRE_EXECUTION":
		fallthrough
	case "POST_EXECUTION":
		fallthrough
	case "PRE_POST_EXECUTION":
		*e = EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum: %s", s)
	}
}

type EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum string

const (
	EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnumUnspecifiedExternalCategory EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum = "UNSPECIFIED_EXTERNAL_CATEGORY"
	EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnumCore                        EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum = "CORE"
	EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnumConnectors                  EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum = "CONNECTORS"
)

func (e *EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_EXTERNAL_CATEGORY":
		fallthrough
	case "CORE":
		fallthrough
	case "CONNECTORS":
		*e = EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum: %s", s)
	}
}

// EnterpriseCrmEventbusProtoTaskMetadataStatusEnum - Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
type EnterpriseCrmEventbusProtoTaskMetadataStatusEnum string

const (
	EnterpriseCrmEventbusProtoTaskMetadataStatusEnumUnspecifiedStatus EnterpriseCrmEventbusProtoTaskMetadataStatusEnum = "UNSPECIFIED_STATUS"
	EnterpriseCrmEventbusProtoTaskMetadataStatusEnumDefaultInactive   EnterpriseCrmEventbusProtoTaskMetadataStatusEnum = "DEFAULT_INACTIVE"
	EnterpriseCrmEventbusProtoTaskMetadataStatusEnumActive            EnterpriseCrmEventbusProtoTaskMetadataStatusEnum = "ACTIVE"
)

func (e *EnterpriseCrmEventbusProtoTaskMetadataStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_STATUS":
		fallthrough
	case "DEFAULT_INACTIVE":
		fallthrough
	case "ACTIVE":
		*e = EnterpriseCrmEventbusProtoTaskMetadataStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoTaskMetadataStatusEnum: %s", s)
	}
}

type EnterpriseCrmEventbusProtoTaskMetadataSystemEnum string

const (
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumUnspecifiedSystem EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "UNSPECIFIED_SYSTEM"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumGeneric           EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "GENERIC"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumBuganizer         EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "BUGANIZER"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumSalesforce        EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "SALESFORCE"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumCloudSQL          EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "CLOUD_SQL"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumPlx               EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "PLX"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumSheets            EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "SHEETS"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumGoogleGroups      EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "GOOGLE_GROUPS"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumEmail             EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "EMAIL"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumSpanner           EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "SPANNER"
	EnterpriseCrmEventbusProtoTaskMetadataSystemEnumDataBridge        EnterpriseCrmEventbusProtoTaskMetadataSystemEnum = "DATA_BRIDGE"
)

func (e *EnterpriseCrmEventbusProtoTaskMetadataSystemEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_SYSTEM":
		fallthrough
	case "GENERIC":
		fallthrough
	case "BUGANIZER":
		fallthrough
	case "SALESFORCE":
		fallthrough
	case "CLOUD_SQL":
		fallthrough
	case "PLX":
		fallthrough
	case "SHEETS":
		fallthrough
	case "GOOGLE_GROUPS":
		fallthrough
	case "EMAIL":
		fallthrough
	case "SPANNER":
		fallthrough
	case "DATA_BRIDGE":
		*e = EnterpriseCrmEventbusProtoTaskMetadataSystemEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoTaskMetadataSystemEnum: %s", s)
	}
}

// EnterpriseCrmEventbusProtoTaskMetadata - TaskMetadata are attributes that are associated to every common Task we have.
type EnterpriseCrmEventbusProtoTaskMetadata struct {
	// The new task name to replace the current task if it is deprecated. Otherwise, it is the same as the current task name.
	ActiveTaskName *string                                             `json:"activeTaskName,omitempty"`
	Admins         []EnterpriseCrmEventbusProtoTaskMetadataAdmin       `json:"admins,omitempty"`
	Category       *EnterpriseCrmEventbusProtoTaskMetadataCategoryEnum `json:"category,omitempty"`
	// The Code Search link to the Task Java file.
	CodeSearchLink *string `json:"codeSearchLink,omitempty"`
	// Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
	DefaultJSONValidationOption *EnterpriseCrmEventbusProtoTaskMetadataDefaultJSONValidationOptionEnum `json:"defaultJsonValidationOption,omitempty"`
	// Contains the initial configuration of the task with default values set. For now, The string should be compatible to an ASCII-proto format.
	DefaultSpec *string `json:"defaultSpec,omitempty"`
	// In a few sentences, describe the purpose and usage of the task.
	Description *string `json:"description,omitempty"`
	// The string name to show on the task list on the Workflow editor screen. This should be a very short, one to two words name for the task. (e.g. "Send Mail")
	DescriptiveName *string `json:"descriptiveName,omitempty"`
	// Snippet of markdown documentation to embed in the RHP for this task.
	DocMarkdown      *string                                                     `json:"docMarkdown,omitempty"`
	ExternalCategory *EnterpriseCrmEventbusProtoTaskMetadataExternalCategoryEnum `json:"externalCategory,omitempty"`
	// Sequence with which the task in specific category to be displayed in task discovery panel for external users.
	ExternalCategorySequence *int `json:"externalCategorySequence,omitempty"`
	// External-facing documention embedded in the RHP for this task.
	ExternalDocHTML *string `json:"externalDocHtml,omitempty"`
	// Doc link for external-facing documentation (separate from g3doc).
	ExternalDocLink *string `json:"externalDocLink,omitempty"`
	// DEPRECATED: Use external_doc_html.
	ExternalDocMarkdown *string `json:"externalDocMarkdown,omitempty"`
	// URL to the associated G3 Doc for the task if available
	G3DocLink *string `json:"g3DocLink,omitempty"`
	// URL to gstatic image icon for this task. This icon shows up on the task list panel along with the task name in the Workflow Editor screen. Use the 24p, 2x, gray color icon image format.
	IconLink *string `json:"iconLink,omitempty"`
	// The deprecation status of the current task. Default value is false;
	IsDeprecated *bool `json:"isDeprecated,omitempty"`
	// The actual class name or the annotated name of the task. Task Author should initialize this field with value from the getName() method of the Task class.
	Name *string `json:"name,omitempty"`
	// External-facing documention for standalone IP in pantheon embedded in the RHP for this task. Non null only if different from external_doc_html
	StandaloneExternalDocHTML *string `json:"standaloneExternalDocHtml,omitempty"`
	// Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
	Status *EnterpriseCrmEventbusProtoTaskMetadataStatusEnum `json:"status,omitempty"`
	System *EnterpriseCrmEventbusProtoTaskMetadataSystemEnum `json:"system,omitempty"`
	// A set of tags that pertain to a particular task. This can be used to improve the searchability of tasks with several names ("REST Caller" vs. "Call REST Endpoint") or to help users find tasks based on related words.
	Tags []string `json:"tags,omitempty"`
}
