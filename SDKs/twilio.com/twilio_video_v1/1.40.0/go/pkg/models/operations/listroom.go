// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListRoomServerList = []string{
	"https://video.twilio.com",
}

type ListRoomSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListRoomQueryParams struct {
	// Read only rooms that started on or after this date, given as `YYYY-MM-DD`.
	DateCreatedAfter *time.Time `queryParam:"style=form,explode=true,name=DateCreatedAfter"`
	// Read only rooms that started before this date, given as `YYYY-MM-DD`.
	DateCreatedBefore *time.Time `queryParam:"style=form,explode=true,name=DateCreatedBefore"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// Read only the rooms with this status. Can be: `in-progress` (default) or `completed`
	Status *shared.RoomEnumRoomStatusEnum `queryParam:"style=form,explode=true,name=Status"`
	// Read only rooms with the this `unique_name`.
	UniqueName *string `queryParam:"style=form,explode=true,name=UniqueName"`
}

type ListRoomRequest struct {
	QueryParams ListRoomQueryParams
	Security    ListRoomSecurity
	ServerURL   *string
}

type ListRoomListRoomResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListRoomListRoomResponse - OK
type ListRoomListRoomResponse struct {
	Meta  *ListRoomListRoomResponseMeta `json:"meta,omitempty"`
	Rooms []shared.VideoV1Room          `json:"rooms,omitempty"`
}

type ListRoomResponse struct {
	ContentType string
	// OK
	ListRoomResponse *ListRoomListRoomResponse
	StatusCode       int
	RawResponse      *http.Response
}
