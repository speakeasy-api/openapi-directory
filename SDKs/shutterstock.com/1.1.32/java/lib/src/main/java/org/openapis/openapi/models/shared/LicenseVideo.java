/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LicenseVideo - Data required to license a video
 */
public class LicenseVideo {
    /**
     * Cookie object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_cookie")
    public Cookie authCookie;
    public LicenseVideo withAuthCookie(Cookie authCookie) {
        this.authCookie = authCookie;
        return this;
    }
    
    /**
     * Whether or not this item is editorial content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("editorial_acknowledgement")
    public Boolean editorialAcknowledgement;
    public LicenseVideo withEditorialAcknowledgement(Boolean editorialAcknowledgement) {
        this.editorialAcknowledgement = editorialAcknowledgement;
        return this;
    }
    
    /**
     * Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;
    public LicenseVideo withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Retail price amount as a floating-point number in the transaction currency, such as 12.34; only for rev-share partners
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public LicenseVideo withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * ID of the search that led to this licensing event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("search_id")
    public String searchId;
    public LicenseVideo withSearchId(String searchId) {
        this.searchId = searchId;
        return this;
    }
    
    /**
     * (Deprecated)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("show_modal")
    public Boolean showModal;
    public LicenseVideo withShowModal(Boolean showModal) {
        this.showModal = showModal;
        return this;
    }
    
    /**
     * Size of the video being licensed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public LicenseVideoSizeEnum size;
    public LicenseVideo withSize(LicenseVideoSizeEnum size) {
        this.size = size;
        return this;
    }
    
    /**
     * ID of the subscription used for this license
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription_id")
    public String subscriptionId;
    public LicenseVideo withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * ID of the video being licensed
     */
    @JsonProperty("video_id")
    public String videoId;
    public LicenseVideo withVideoId(String videoId) {
        this.videoId = videoId;
        return this;
    }
    
}
