"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrecaptchaenterprisev1androidkeysettings as shared_googlecloudrecaptchaenterprisev1androidkeysettings
from ..shared import googlecloudrecaptchaenterprisev1ioskeysettings as shared_googlecloudrecaptchaenterprisev1ioskeysettings
from ..shared import googlecloudrecaptchaenterprisev1testingoptions as shared_googlecloudrecaptchaenterprisev1testingoptions
from ..shared import googlecloudrecaptchaenterprisev1wafsettings as shared_googlecloudrecaptchaenterprisev1wafsettings
from ..shared import googlecloudrecaptchaenterprisev1webkeysettings as shared_googlecloudrecaptchaenterprisev1webkeysettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1KeyInput:
    r"""A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise."""
    
    android_settings: Optional[shared_googlecloudrecaptchaenterprisev1androidkeysettings.GoogleCloudRecaptchaenterpriseV1AndroidKeySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used by Android apps."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Human-readable display name of this key. Modifiable by user."""  
    ios_settings: Optional[shared_googlecloudrecaptchaenterprisev1ioskeysettings.GoogleCloudRecaptchaenterpriseV1IOSKeySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used by iOS apps."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""See Creating and managing labels."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for the Key in the format \\"projects/{project}/keys/{key}\\"."""  
    testing_options: Optional[shared_googlecloudrecaptchaenterprisev1testingoptions.GoogleCloudRecaptchaenterpriseV1TestingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testingOptions'), 'exclude': lambda f: f is None }})
    r"""Options for user acceptance testing."""  
    waf_settings: Optional[shared_googlecloudrecaptchaenterprisev1wafsettings.GoogleCloudRecaptchaenterpriseV1WafSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wafSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used for WAF (Web Application Firewall)."""  
    web_settings: Optional[shared_googlecloudrecaptchaenterprisev1webkeysettings.GoogleCloudRecaptchaenterpriseV1WebKeySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used by websites."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1Key:
    r"""A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise."""
    
    android_settings: Optional[shared_googlecloudrecaptchaenterprisev1androidkeysettings.GoogleCloudRecaptchaenterpriseV1AndroidKeySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used by Android apps."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp corresponding to the creation of this key."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Human-readable display name of this key. Modifiable by user."""  
    ios_settings: Optional[shared_googlecloudrecaptchaenterprisev1ioskeysettings.GoogleCloudRecaptchaenterpriseV1IOSKeySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used by iOS apps."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""See Creating and managing labels."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for the Key in the format \\"projects/{project}/keys/{key}\\"."""  
    testing_options: Optional[shared_googlecloudrecaptchaenterprisev1testingoptions.GoogleCloudRecaptchaenterpriseV1TestingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testingOptions'), 'exclude': lambda f: f is None }})
    r"""Options for user acceptance testing."""  
    waf_settings: Optional[shared_googlecloudrecaptchaenterprisev1wafsettings.GoogleCloudRecaptchaenterpriseV1WafSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wafSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used for WAF (Web Application Firewall)."""  
    web_settings: Optional[shared_googlecloudrecaptchaenterprisev1webkeysettings.GoogleCloudRecaptchaenterpriseV1WebKeySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to keys that can be used by websites."""  
    