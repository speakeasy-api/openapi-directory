// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type DashboardIssueZoomRoomSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type DashboardIssueZoomRoomQueryParams struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
}

type DashboardIssueZoomRoomRequest struct {
	QueryParams DashboardIssueZoomRoomQueryParams
	Security    DashboardIssueZoomRoomSecurity
}

type DashboardIssueZoomRoom200ApplicationXMLZoomRooms struct {
	// Zoom Room ID
	ID *string
	// Issue Count of Zoom Room
	IssuesCount *int64
	// Zoom Room Name
	RoomName *string
}

// DashboardIssueZoomRoom200ApplicationXML - **HTTP Status Code:** `200`<br>
// Zoom Room with issue details returned
type DashboardIssueZoomRoom200ApplicationXML struct {
	// Start date for this report
	From *types.Date
	// End date for this report
	To *types.Date
	// The number of all records available across pages
	TotalRecords *int64
	ZoomRooms    []DashboardIssueZoomRoom200ApplicationXMLZoomRooms
}

type DashboardIssueZoomRoom200ApplicationJSONZoomRooms struct {
	// Zoom Room ID
	ID *string `json:"id,omitempty"`
	// Issue Count of Zoom Room
	IssuesCount *int64 `json:"issues_count,omitempty"`
	// Zoom Room Name
	RoomName *string `json:"room_name,omitempty"`
}

// DashboardIssueZoomRoom200ApplicationJSON - **HTTP Status Code:** `200`<br>
// Zoom Room with issue details returned
type DashboardIssueZoomRoom200ApplicationJSON struct {
	// Start date for this report
	From *types.Date `json:"from,omitempty"`
	// End date for this report
	To *types.Date `json:"to,omitempty"`
	// The number of all records available across pages
	TotalRecords *int64                                              `json:"total_records,omitempty"`
	ZoomRooms    []DashboardIssueZoomRoom200ApplicationJSONZoomRooms `json:"zoom_rooms,omitempty"`
}

type DashboardIssueZoomRoomResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Zoom Room with issue details returned
	DashboardIssueZoomRoom200ApplicationJSONObject *DashboardIssueZoomRoom200ApplicationJSON
}
