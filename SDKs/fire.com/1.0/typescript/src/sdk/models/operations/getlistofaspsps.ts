/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetListOfAspspsRequest extends SpeakeasyBase {
  /**
   * The three letter code for the currency - either `EUR` or `GBP`. Use this to filter the list for banks that can be used to pay in a certain currency.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=currency",
  })
  currency?: string;
}

export class GetListOfAspspsAspspsAspspCountry extends SpeakeasyBase {
  /**
   * The 2-letter code for the country - e.g. `IE`, `GP`...
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * The name of the country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

/**
 * The three letter code for the currency - either `EUR` or `GBP`.
 */
export enum GetListOfAspspsAspspsAspspCurrencyCodeEnum {
  Eur = "EUR",
  Gbp = "GBP",
}

/**
 * The currency.
 */
export class GetListOfAspspsAspspsAspspCurrency extends SpeakeasyBase {
  /**
   * The three letter code for the currency - either `EUR` or `GBP`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: GetListOfAspspsAspspsAspspCurrencyCodeEnum;

  /**
   * The name of the currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

export class GetListOfAspspsAspspsAspsp extends SpeakeasyBase {
  /**
   * The name of the ASPSP / bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  /**
   * The UUID associated with the ASPSP / bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aspspUuid" })
  aspspUuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  @Type(() => GetListOfAspspsAspspsAspspCountry)
  country?: GetListOfAspspsAspspsAspspCountry;

  /**
   * The currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  @Type(() => GetListOfAspspsAspspsAspspCurrency)
  currency?: GetListOfAspspsAspspsAspspCurrency;

  /**
   * The date the ASPSP / bank was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateCreated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date the ASPSP / bank was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  /**
   * A link to the ASPSP / bank's logo in SVG format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logoUrl" })
  logoUrl?: string;
}

/**
 * A list of ASPSPs the customers can use to pay a payment.
 *
 * @remarks
 *
 */
export class GetListOfAspspsAspsps extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetListOfAspspsAspspsAspsp })
  @Expose({ name: "aspsps" })
  @Type(() => GetListOfAspspsAspspsAspsp)
  aspsps?: GetListOfAspspsAspspsAspsp[];

  /**
   * The total number of ASPSPs in the list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetListOfAspspsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of ASPSPs the customers can use to pay a payment.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  aspsps?: GetListOfAspspsAspsps;
}
