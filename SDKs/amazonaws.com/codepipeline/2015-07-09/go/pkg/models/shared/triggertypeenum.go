// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TriggerTypeEnum string

const (
	TriggerTypeEnumCreatePipeline         TriggerTypeEnum = "CreatePipeline"
	TriggerTypeEnumStartPipelineExecution TriggerTypeEnum = "StartPipelineExecution"
	TriggerTypeEnumPollForSourceChanges   TriggerTypeEnum = "PollForSourceChanges"
	TriggerTypeEnumWebhook                TriggerTypeEnum = "Webhook"
	TriggerTypeEnumCloudWatchEvent        TriggerTypeEnum = "CloudWatchEvent"
	TriggerTypeEnumPutActionRevision      TriggerTypeEnum = "PutActionRevision"
)

func (e *TriggerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreatePipeline":
		fallthrough
	case "StartPipelineExecution":
		fallthrough
	case "PollForSourceChanges":
		fallthrough
	case "Webhook":
		fallthrough
	case "CloudWatchEvent":
		fallthrough
	case "PutActionRevision":
		*e = TriggerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TriggerTypeEnum: %s", s)
	}
}
