/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddOnRequest } from "./addonrequest";
import { IpAddressTypeEnum } from "./ipaddresstypeenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateInstancesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AddOnRequest })
  @Expose({ name: "addOns" })
  @Type(() => AddOnRequest)
  addOns?: AddOnRequest[];

  @SpeakeasyMetadata()
  @Expose({ name: "availabilityZone" })
  availabilityZone: string;

  @SpeakeasyMetadata()
  @Expose({ name: "blueprintId" })
  blueprintId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bundleId" })
  bundleId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customImageName" })
  customImageName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceNames" })
  instanceNames: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddressType" })
  ipAddressType?: IpAddressTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "keyPairName" })
  keyPairName?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "userData" })
  userData?: string;
}
