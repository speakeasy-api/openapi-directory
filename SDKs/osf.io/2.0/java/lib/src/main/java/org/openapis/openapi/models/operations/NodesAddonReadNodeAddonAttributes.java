/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



/**
 * NodesAddonReadNodeAddonAttributes - The properties of the node addon entity.
 */
public class NodesAddonReadNodeAddonAttributes {
    /**
     * Whether or not this node has been configured with an addon folder.
     */
    
    public Boolean configured;
    public NodesAddonReadNodeAddonAttributes withConfigured(Boolean configured) {
        this.configured = configured;
        return this;
    }
    
    /**
     * Whether or not this node has a NodeSettings object associated with it.
     */
    
    public Boolean enabled;
    public NodesAddonReadNodeAddonAttributes withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The ID of the associated node addon account, if any.
     */
    
    public String externalAccountId;
    public NodesAddonReadNodeAddonAttributes withExternalAccountId(String externalAccountId) {
        this.externalAccountId = externalAccountId;
        return this;
    }
    
    /**
     * The ID of the linked folder from the addon provider.
     */
    
    public String folderId;
    public NodesAddonReadNodeAddonAttributes withFolderId(String folderId) {
        this.folderId = folderId;
        return this;
    }
    
    /**
     * The folder path of the linked folder from the addon provider. Google Drive specific
     */
    
    public String folderPath;
    public NodesAddonReadNodeAddonAttributes withFolderPath(String folderPath) {
        this.folderPath = folderPath;
        return this;
    }
    
    /**
     * A label specific to the addon provider.
     */
    
    public String label;
    public NodesAddonReadNodeAddonAttributes withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Whether or not this node is fully authorized to use this node addon.
     */
    
    public Boolean nodeHasAuth;
    public NodesAddonReadNodeAddonAttributes withNodeHasAuth(Boolean nodeHasAuth) {
        this.nodeHasAuth = nodeHasAuth;
        return this;
    }
    
    /**
     * An external link specific to the addon provider.
     */
    
    public String url;
    public NodesAddonReadNodeAddonAttributes withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
