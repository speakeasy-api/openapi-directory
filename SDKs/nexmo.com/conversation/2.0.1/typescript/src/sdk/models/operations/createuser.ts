/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Create a Member in invite state
 */
export class CreateUserRequestBody extends SpeakeasyBase {
  /**
   * A string to be displayed as user name. It does not need to be unique
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * A link to an image for conversations' and users' avatars
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl?: string;

  /**
   * Unique name for a user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Create a user response
 */
export class CreateUser200ApplicationJSON extends SpeakeasyBase {
  /**
   * A link towards a user included in Conversation API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * User ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class CreateUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Create a user response
   */
  @SpeakeasyMetadata()
  createUser200ApplicationJSONObject?: CreateUser200ApplicationJSON;
}
