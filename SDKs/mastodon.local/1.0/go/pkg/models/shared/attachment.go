// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AttachmentTypeEnum - The type of the attachment.
type AttachmentTypeEnum string

const (
	AttachmentTypeEnumUnknown AttachmentTypeEnum = "unknown"
	AttachmentTypeEnumImage   AttachmentTypeEnum = "image"
	AttachmentTypeEnumGifv    AttachmentTypeEnum = "gifv"
	AttachmentTypeEnumVideo   AttachmentTypeEnum = "video"
	AttachmentTypeEnumAudio   AttachmentTypeEnum = "audio"
)

func (e AttachmentTypeEnum) ToPointer() *AttachmentTypeEnum {
	return &e
}

func (e *AttachmentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown":
		fallthrough
	case "image":
		fallthrough
	case "gifv":
		fallthrough
	case "video":
		fallthrough
	case "audio":
		*e = AttachmentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttachmentTypeEnum: %v", v)
	}
}

// Attachment - Represents a file or media attachment that can be added to a status.
// https://docs.joinmastodon.org/entities/attachment/
type Attachment struct {
	// A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.
	Blurhash *string `json:"blurhash,omitempty"`
	// Alternate text that describes what is in the media attachment, to be used for the visually impaired or when media attachments do not load.
	Description *string `json:"description,omitempty"`
	// The ID of the attachment in the database. Cast from an integer but not guaranteed to be a number
	ID string `json:"id"`
	// Metadata returned by Paperclip.
	Meta map[string]interface{} `json:"meta,omitempty"`
	// The location of a scaled-down preview of the attachment.
	PreviewURL string `json:"preview_url"`
	// The location of the full-size original attachment on the remote website. String or null if the attachment is local.
	RemoteURL *string `json:"remote_url,omitempty"`
	// A shorter URL for the attachment.
	TextURL *string `json:"text_url,omitempty"`
	// The type of the attachment.
	Type AttachmentTypeEnum `json:"type"`
	// The location of the original full-size attachment.
	URL string `json:"url"`
}
