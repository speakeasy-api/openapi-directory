// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateRebalanceSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

// CreateRebalanceSwitchInstructionRequestTypeEnum - Rebalance request triggering type. This describe the types of elements included in the values field
type CreateRebalanceSwitchInstructionRequestTypeEnum string

const (
	CreateRebalanceSwitchInstructionRequestTypeEnumPot       CreateRebalanceSwitchInstructionRequestTypeEnum = "pot"
	CreateRebalanceSwitchInstructionRequestTypeEnumInvestor  CreateRebalanceSwitchInstructionRequestTypeEnum = "investor"
	CreateRebalanceSwitchInstructionRequestTypeEnumPortfolio CreateRebalanceSwitchInstructionRequestTypeEnum = "portfolio"
)

func (e *CreateRebalanceSwitchInstructionRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pot":
		fallthrough
	case "investor":
		fallthrough
	case "portfolio":
		*e = CreateRebalanceSwitchInstructionRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRebalanceSwitchInstructionRequestTypeEnum: %s", s)
	}
}

// CreateRebalanceSwitchInstructionRequest - Definition of Switch instruction
type CreateRebalanceSwitchInstructionRequest struct {
	// Unique request id to ensure idempotency. (eg: UUID)
	RequestID string `json:"request_id"`
	// Rebalance request triggering type. This describe the types of elements included in the values field
	Type CreateRebalanceSwitchInstructionRequestTypeEnum `json:"type"`
	// List of unique Ids from the mentioned type to trigger the rebalance process
	Values []string `json:"values"`
}

type CreateRebalanceRequest struct {
	RequestBody *CreateRebalanceSwitchInstructionRequest `request:"mediaType=application/json"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// CreateRebalance500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type CreateRebalance500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateRebalance429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type CreateRebalance429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateRebalance409ApplicationJSONStatusEnum - Current status of the original request
type CreateRebalance409ApplicationJSONStatusEnum string

const (
	CreateRebalance409ApplicationJSONStatusEnumProcessing CreateRebalance409ApplicationJSONStatusEnum = "PROCESSING"
	CreateRebalance409ApplicationJSONStatusEnumComplete   CreateRebalance409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e *CreateRebalance409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = CreateRebalance409ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRebalance409ApplicationJSONStatusEnum: %s", s)
	}
}

// CreateRebalance409ApplicationJSON - Duplicate request
type CreateRebalance409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status CreateRebalance409ApplicationJSONStatusEnum `json:"status"`
}

// CreateRebalance404ApplicationJSON - The specified resource was not found
type CreateRebalance404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateRebalance403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type CreateRebalance403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateRebalance401ApplicationJSON - You do not have permissions to access this resource.
type CreateRebalance401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateRebalance400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type CreateRebalance400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum - Current status of the rebalance on the specific pot_id
type CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum string

const (
	CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnumProcessing CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum = "processing"
	CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnumFailed     CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum = "failed"
	CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnumCompleted  CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum = "completed"
)

func (e *CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "processing":
		fallthrough
	case "failed":
		fallthrough
	case "completed":
		*e = CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum: %s", s)
	}
}

// CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest - Each individual pot details on the rebalance request
type CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest struct {
	// portfolio deviation for the pot
	PortfolioDeviation string `json:"portfolio_deviation"`
	// portfolio_template_id in used by the relevent pot
	PortfolioTemplateID string `json:"portfolio_template_id"`
	// Identifier of pot triggered for rebalance
	PotID string `json:"pot_id"`
	// if the status is rejected then the reason for it.
	Reason string `json:"reason"`
	// Current status of the rebalance on the specific pot_id
	Status CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum `json:"status"`
}

// CreateRebalance201ApplicationJSONStatusEnum - Status of the Rebalance instruction
type CreateRebalance201ApplicationJSONStatusEnum string

const (
	CreateRebalance201ApplicationJSONStatusEnumProcessing CreateRebalance201ApplicationJSONStatusEnum = "processing"
	CreateRebalance201ApplicationJSONStatusEnumInProgress CreateRebalance201ApplicationJSONStatusEnum = "in_progress"
	CreateRebalance201ApplicationJSONStatusEnumCompleted  CreateRebalance201ApplicationJSONStatusEnum = "completed"
	CreateRebalance201ApplicationJSONStatusEnumFailed     CreateRebalance201ApplicationJSONStatusEnum = "failed"
)

func (e *CreateRebalance201ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "processing":
		fallthrough
	case "in_progress":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = CreateRebalance201ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRebalance201ApplicationJSONStatusEnum: %s", s)
	}
}

// CreateRebalance201ApplicationJSON - success
type CreateRebalance201ApplicationJSON struct {
	PotDetails []CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest `json:"pot_details"`
	// Unique identifier of the rebalance instruction
	RebalanceRequestID string `json:"rebalance_request_id"`
	// Status of the Rebalance instruction
	Status CreateRebalance201ApplicationJSONStatusEnum `json:"status"`
}

type CreateRebalanceResponse struct {
	ContentType string
	// success
	CreateRebalance201ApplicationJSONObject *CreateRebalance201ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	CreateRebalance400ApplicationJSONObject *CreateRebalance400ApplicationJSON
	// You do not have permissions to access this resource.
	CreateRebalance401ApplicationJSONObject *CreateRebalance401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	CreateRebalance403ApplicationJSONObject *CreateRebalance403ApplicationJSON
	// The specified resource was not found
	CreateRebalance404ApplicationJSONObject *CreateRebalance404ApplicationJSON
	// Duplicate request
	CreateRebalance409ApplicationJSONObject *CreateRebalance409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	CreateRebalance429ApplicationJSONObject *CreateRebalance429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	CreateRebalance500ApplicationJSONObject *CreateRebalance500ApplicationJSON
	StatusCode                              int
	RawResponse                             *http.Response
}
