// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETExecutePolicyActionEnum
type GETExecutePolicyActionEnum string

const (
	GETExecutePolicyActionEnumExecutePolicy GETExecutePolicyActionEnum = "ExecutePolicy"
)

func (e GETExecutePolicyActionEnum) ToPointer() *GETExecutePolicyActionEnum {
	return &e
}

func (e *GETExecutePolicyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ExecutePolicy":
		*e = GETExecutePolicyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETExecutePolicyActionEnum: %v", v)
	}
}

// GETExecutePolicyVersionEnum
type GETExecutePolicyVersionEnum string

const (
	GETExecutePolicyVersionEnumTwoThousandAndEleven0101 GETExecutePolicyVersionEnum = "2011-01-01"
)

func (e GETExecutePolicyVersionEnum) ToPointer() *GETExecutePolicyVersionEnum {
	return &e
}

func (e *GETExecutePolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = GETExecutePolicyVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETExecutePolicyVersionEnum: %v", v)
	}
}

type GETExecutePolicyRequest struct {
	Action GETExecutePolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName *string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// <p>The breach threshold for the alarm.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
	BreachThreshold *float64 `queryParam:"style=form,explode=true,name=BreachThreshold"`
	// <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
	HonorCooldown *bool `queryParam:"style=form,explode=true,name=HonorCooldown"`
	// <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
	MetricValue *float64 `queryParam:"style=form,explode=true,name=MetricValue"`
	// The name or ARN of the policy.
	PolicyName        string                      `queryParam:"style=form,explode=true,name=PolicyName"`
	Version           GETExecutePolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETExecutePolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
