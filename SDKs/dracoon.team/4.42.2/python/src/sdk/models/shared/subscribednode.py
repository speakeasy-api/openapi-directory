"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SubscribedNodeTypeEnum(str, Enum):
    r"""Node type"""
    ROOM = 'room'
    FOLDER = 'folder'
    FILE = 'file'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscribedNode:
    r"""Subscribed node information"""
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Node ID"""  
    auth_parent_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authParentId'), 'exclude': lambda f: f is None }})
    r"""Auth parent room ID"""  
    type: Optional[SubscribedNodeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Node type"""  
    