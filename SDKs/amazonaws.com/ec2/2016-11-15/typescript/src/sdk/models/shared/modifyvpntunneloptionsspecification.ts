/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VpnTunnelLogOptionsSpecification } from "./vpntunnellogoptionsspecification";

/**
 * The IKE version that is permitted for the VPN tunnel.
 */
export class ModifyVpnTunnelOptionsSpecificationIKEVersions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.
 */
export class ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: number;
}

/**
 * Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.
 */
export class ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.
 */
export class ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.
 */
export class ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: number;
}

/**
 * Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.
 */
export class ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.
 */
export class ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The Amazon Web Services Site-to-Site VPN tunnel options to modify.
 */
export class ModifyVpnTunnelOptionsSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  dpdTimeoutAction?: string;

  @SpeakeasyMetadata()
  dpdTimeoutSeconds?: number;

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationIKEVersions,
  })
  ikeVersions?: ModifyVpnTunnelOptionsSpecificationIKEVersions[];

  @SpeakeasyMetadata()
  logOptions?: VpnTunnelLogOptionsSpecification;

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers,
  })
  phase1DHGroupNumbers?: ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers[];

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms,
  })
  phase1EncryptionAlgorithms?: ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms[];

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms,
  })
  phase1IntegrityAlgorithms?: ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms[];

  @SpeakeasyMetadata()
  phase1LifetimeSeconds?: number;

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers,
  })
  phase2DHGroupNumbers?: ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers[];

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms,
  })
  phase2EncryptionAlgorithms?: ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms[];

  @SpeakeasyMetadata({
    elemType: ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms,
  })
  phase2IntegrityAlgorithms?: ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms[];

  @SpeakeasyMetadata()
  phase2LifetimeSeconds?: number;

  @SpeakeasyMetadata()
  preSharedKey?: string;

  @SpeakeasyMetadata()
  rekeyFuzzPercentage?: number;

  @SpeakeasyMetadata()
  rekeyMarginTimeSeconds?: number;

  @SpeakeasyMetadata()
  replayWindowSize?: number;

  @SpeakeasyMetadata()
  startupAction?: string;

  @SpeakeasyMetadata()
  tunnelInsideCidr?: string;

  @SpeakeasyMetadata()
  tunnelInsideIpv6Cidr?: string;
}
