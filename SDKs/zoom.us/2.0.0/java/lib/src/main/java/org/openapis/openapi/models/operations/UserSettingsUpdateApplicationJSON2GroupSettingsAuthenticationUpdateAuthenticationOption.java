/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption - Meeting Authentication Options
 */
public class UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption {
    /**
     * Authentication action
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOptionActionEnum action;
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption withAction(UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOptionActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Authentication default option
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_option")
    public Boolean defaultOption;
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption withDefaultOption(Boolean defaultOption) {
        this.defaultOption = defaultOption;
        return this;
    }
    
    /**
     * Authentication domains
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domains")
    public String domains;
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption withDomains(String domains) {
        this.domains = domains;
        return this;
    }
    
    /**
     * Authentication id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Authentication name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     *  Authentication type. Specify one of the following authentication types for the authentication profile:&lt;br&gt;
     *  * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
     *  * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.&lt;br&gt;
     *  * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOptionTypeEnum type;
    public UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOption withType(UserSettingsUpdateApplicationJSON2GroupSettingsAuthenticationUpdateAuthenticationOptionTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
