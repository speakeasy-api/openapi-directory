// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchGameSessionsXAmzTargetEnum
type SearchGameSessionsXAmzTargetEnum string

const (
	SearchGameSessionsXAmzTargetEnumGameLiftSearchGameSessions SearchGameSessionsXAmzTargetEnum = "GameLift.SearchGameSessions"
)

func (e *SearchGameSessionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GameLift.SearchGameSessions":
		*e = SearchGameSessionsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchGameSessionsXAmzTargetEnum: %s", s)
	}
}

type SearchGameSessionsRequest struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	NextToken               *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	SearchGameSessionsInput shared.SearchGameSessionsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              SearchGameSessionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SearchGameSessionsResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	// Success
	SearchGameSessionsOutput *shared.SearchGameSessionsOutput
	StatusCode               int
	RawResponse              *http.Response
	// TerminalRoutingStrategyException
	TerminalRoutingStrategyException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
	// UnsupportedRegionException
	UnsupportedRegionException interface{}
}
