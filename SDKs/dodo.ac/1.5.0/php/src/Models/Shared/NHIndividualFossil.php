<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NHIndividualFossil - A JSON object describing the individual fossil.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NHIndividualFossil
{
    /**
     * $colors
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NHIndividualFossilColorsEnum> $colors
     */
	#[\JMS\Serializer\Annotation\SerializedName('colors')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\NHIndividualFossilColorsEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $colors = null;
    
    /**
     * The name of the group that the fossil belongs to.
     * 
     * @var ?string $fossilGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('fossil_group')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fossilGroup = null;
    
    /**
     * The base value that the item provides to a player's Happy Home Academy score when placed in their home.
     * 
     * @var ?int $hhaBase
     */
	#[\JMS\Serializer\Annotation\SerializedName('hha_base')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hhaBase = null;
    
    /**
     * Image of the fossil's icon. dodo.ac is Nookipedia's CDN server.
     * 
     * @var ?string $imageUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('image_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imageUrl = null;
    
    /**
     * Whether or not the item can be interacted with.
     * 
     * @var ?bool $interactable
     */
	#[\JMS\Serializer\Annotation\SerializedName('interactable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $interactable = null;
    
    /**
     * The length of the fossil.
     * 
     * @var ?int $length
     */
	#[\JMS\Serializer\Annotation\SerializedName('length')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $length = null;
    
    /**
     * The name of the fossil.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The number of bells the item can be sold to Nook's store for.
     * 
     * @var ?int $sell
     */
	#[\JMS\Serializer\Annotation\SerializedName('sell')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sell = null;
    
    /**
     * Link to the respective Nookipedia article.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * The width of the fossil.
     * 
     * @var ?int $width
     */
	#[\JMS\Serializer\Annotation\SerializedName('width')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $width = null;
    
	public function __construct()
	{
		$this->colors = null;
		$this->fossilGroup = null;
		$this->hhaBase = null;
		$this->imageUrl = null;
		$this->interactable = null;
		$this->length = null;
		$this->name = null;
		$this->sell = null;
		$this->url = null;
		$this->width = null;
	}
}
