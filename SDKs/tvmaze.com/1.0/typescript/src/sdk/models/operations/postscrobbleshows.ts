/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class PostScrobbleShowsRequestBody extends SpeakeasyBase {
  /**
   * The episode airdate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "airdate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  airdate?: Date;

  /**
   * The episode number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "episode" })
  episode?: number;

  /**
   * Epoch timestamp for when the user watched the episode, or 0 for unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marked_at" })
  markedAt?: number;

  /**
   * The season number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "season" })
  season?: number;

  /**
   * 0 for watched, 1 for acquired, 2 for skipped
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: any;
}

export class PostScrobbleShowsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/json",
    elemType: PostScrobbleShowsRequestBody,
  })
  requestBody?: PostScrobbleShowsRequestBody[];

  /**
   * The show's IMDB ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=imdb_id",
  })
  imdbId?: number;

  /**
   * The show's TheTVDB ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=thetvdb_id",
  })
  thetvdbId?: number;

  /**
   * The show's TVmaze ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tvmaze_id",
  })
  tvmazeId?: number;
}

export class PostScrobbleShowsResponse extends SpeakeasyBase {
  /**
   * All episodes were succesfully marked
   */
  @SpeakeasyMetadata({ elemType: shared.BulkResponse })
  bulkResponse?: shared.BulkResponse[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
