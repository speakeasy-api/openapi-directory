<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MosaicLayout - A mosaic layout divides the available space into a grid of blocks, and overlays the grid with tiles. Unlike GridLayout, tiles may span multiple grid blocks and can be placed at arbitrary locations in the grid.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MosaicLayout
{
    /**
     * The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive.
     * 
     * @var ?int $columns
     */
	#[\JMS\Serializer\Annotation\SerializedName('columns')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $columns = null;
    
    /**
     * The tiles to display.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tile> $tiles
     */
	#[\JMS\Serializer\Annotation\SerializedName('tiles')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tile>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tiles = null;
    
	public function __construct()
	{
		$this->columns = null;
		$this->tiles = null;
	}
}
