// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum - The payer responsibility.
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum string

const (
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnumServiceOwner CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum = "ServiceOwner"
)

func (e *CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ServiceOwner":
		*e = CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum: %s", s)
	}
}

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum - <p>The verification state of the VPC endpoint service.</p> <p>&gt;Consumers of the endpoint service can use the private name only when the state is <code>verified</code>.</p>
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum string

const (
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnumPendingVerification CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum = "pendingVerification"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnumVerified            CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum = "verified"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnumFailed              CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum = "failed"
)

func (e *CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pendingVerification":
		fallthrough
	case "verified":
		fallthrough
	case "failed":
		*e = CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum: %s", s)
	}
}

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfiguration - Information about the endpoint service private DNS name configuration.
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfiguration struct {
	Name  *string
	State *CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum
	Type  *string
	Value *string
}

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum - The service state.
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum string

const (
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnumPending   CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum = "Pending"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnumAvailable CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum = "Available"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnumDeleting  CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum = "Deleting"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnumDeleted   CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum = "Deleted"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnumFailed    CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum = "Failed"
)

func (e *CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Available":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "Failed":
		*e = CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum: %s", s)
	}
}

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum - The type of service.
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum string

const (
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnumInterface           CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum = "Interface"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnumGateway             CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum = "Gateway"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnumGatewayLoadBalancer CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum = "GatewayLoadBalancer"
)

func (e *CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Interface":
		fallthrough
	case "Gateway":
		fallthrough
	case "GatewayLoadBalancer":
		*e = CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum: %s", s)
	}
}

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceType - Describes the type of service for a VPC endpoint.
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceType struct {
	ServiceType *CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum
}

type CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum string

const (
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnumIpv4 CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum = "ipv4"
	CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnumIpv6 CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum = "ipv6"
)

func (e *CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum: %s", s)
	}
}

// CreateVpcEndpointServiceConfigurationResultServiceConfigurationTags - Describes a tag.
type CreateVpcEndpointServiceConfigurationResultServiceConfigurationTags struct {
	Key   *string
	Value *string
}

// CreateVpcEndpointServiceConfigurationResultServiceConfiguration - Information about the service configuration.
type CreateVpcEndpointServiceConfigurationResultServiceConfiguration struct {
	AcceptanceRequired          *bool
	AvailabilityZones           []string
	BaseEndpointDNSNames        []string
	GatewayLoadBalancerArns     []string
	ManagesVpcEndpoints         *bool
	NetworkLoadBalancerArns     []string
	PayerResponsibility         *CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum
	PrivateDNSName              *string
	PrivateDNSNameConfiguration *CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfiguration
	ServiceID                   *string
	ServiceName                 *string
	ServiceState                *CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum
	ServiceType                 []CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceType
	SupportedIPAddressTypes     []CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum
	Tags                        []CreateVpcEndpointServiceConfigurationResultServiceConfigurationTags
}

// CreateVpcEndpointServiceConfigurationResult - Success
type CreateVpcEndpointServiceConfigurationResult struct {
	ClientToken          *string
	ServiceConfiguration *CreateVpcEndpointServiceConfigurationResultServiceConfiguration
}
