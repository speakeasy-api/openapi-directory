// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyVpcTenancyActionEnum
type GETModifyVpcTenancyActionEnum string

const (
	GETModifyVpcTenancyActionEnumModifyVpcTenancy GETModifyVpcTenancyActionEnum = "ModifyVpcTenancy"
)

func (e GETModifyVpcTenancyActionEnum) ToPointer() *GETModifyVpcTenancyActionEnum {
	return &e
}

func (e *GETModifyVpcTenancyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyVpcTenancy":
		*e = GETModifyVpcTenancyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpcTenancyActionEnum: %v", v)
	}
}

// GETModifyVpcTenancyInstanceTenancyEnum - The instance tenancy attribute for the VPC.
type GETModifyVpcTenancyInstanceTenancyEnum string

const (
	GETModifyVpcTenancyInstanceTenancyEnumDefault GETModifyVpcTenancyInstanceTenancyEnum = "default"
)

func (e GETModifyVpcTenancyInstanceTenancyEnum) ToPointer() *GETModifyVpcTenancyInstanceTenancyEnum {
	return &e
}

func (e *GETModifyVpcTenancyInstanceTenancyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		*e = GETModifyVpcTenancyInstanceTenancyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpcTenancyInstanceTenancyEnum: %v", v)
	}
}

// GETModifyVpcTenancyVersionEnum
type GETModifyVpcTenancyVersionEnum string

const (
	GETModifyVpcTenancyVersionEnumTwoThousandAndSixteen1115 GETModifyVpcTenancyVersionEnum = "2016-11-15"
)

func (e GETModifyVpcTenancyVersionEnum) ToPointer() *GETModifyVpcTenancyVersionEnum {
	return &e
}

func (e *GETModifyVpcTenancyVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETModifyVpcTenancyVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpcTenancyVersionEnum: %v", v)
	}
}

type GETModifyVpcTenancyRequest struct {
	Action GETModifyVpcTenancyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The instance tenancy attribute for the VPC.
	InstanceTenancy GETModifyVpcTenancyInstanceTenancyEnum `queryParam:"style=form,explode=true,name=InstanceTenancy"`
	Version         GETModifyVpcTenancyVersionEnum         `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the VPC.
	VpcID             string  `queryParam:"style=form,explode=true,name=VpcId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyVpcTenancyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
