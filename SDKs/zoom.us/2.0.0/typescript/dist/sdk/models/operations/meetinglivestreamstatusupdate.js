"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MeetingLiveStreamStatusUpdateResponse = exports.MeetingLiveStreamStatusUpdateRequest = exports.MeetingLiveStreamStatusUpdateApplicationJSON = exports.MeetingLiveStreamStatusUpdateApplicationJSONSettings = exports.MeetingLiveStreamStatusUpdateApplicationJSONActionEnum = exports.MeetingLiveStreamStatusUpdateSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var MeetingLiveStreamStatusUpdateSecurity = /** @class */ (function (_super) {
    __extends(MeetingLiveStreamStatusUpdateSecurity, _super);
    function MeetingLiveStreamStatusUpdateSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MeetingLiveStreamStatusUpdateSecurity.prototype, "oAuth", void 0);
    return MeetingLiveStreamStatusUpdateSecurity;
}(utils_1.SpeakeasyBase));
exports.MeetingLiveStreamStatusUpdateSecurity = MeetingLiveStreamStatusUpdateSecurity;
/**
 * Update the status of a livestream.
 *
 * @remarks
 *
 * The value can be one of the following:<br>
 * `start`: Start a live stream. <br>
 * `stop`: Stop an ongoing live stream.
 */
var MeetingLiveStreamStatusUpdateApplicationJSONActionEnum;
(function (MeetingLiveStreamStatusUpdateApplicationJSONActionEnum) {
    MeetingLiveStreamStatusUpdateApplicationJSONActionEnum["Start"] = "start";
    MeetingLiveStreamStatusUpdateApplicationJSONActionEnum["Stop"] = "stop";
})(MeetingLiveStreamStatusUpdateApplicationJSONActionEnum = exports.MeetingLiveStreamStatusUpdateApplicationJSONActionEnum || (exports.MeetingLiveStreamStatusUpdateApplicationJSONActionEnum = {}));
/**
 * Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.
 */
var MeetingLiveStreamStatusUpdateApplicationJSONSettings = /** @class */ (function (_super) {
    __extends(MeetingLiveStreamStatusUpdateApplicationJSONSettings, _super);
    function MeetingLiveStreamStatusUpdateApplicationJSONSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "active_speaker_name" }),
        __metadata("design:type", Boolean)
    ], MeetingLiveStreamStatusUpdateApplicationJSONSettings.prototype, "activeSpeakerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "display_name" }),
        __metadata("design:type", String)
    ], MeetingLiveStreamStatusUpdateApplicationJSONSettings.prototype, "displayName", void 0);
    return MeetingLiveStreamStatusUpdateApplicationJSONSettings;
}(utils_1.SpeakeasyBase));
exports.MeetingLiveStreamStatusUpdateApplicationJSONSettings = MeetingLiveStreamStatusUpdateApplicationJSONSettings;
/**
 * Meeting live stream status.
 */
var MeetingLiveStreamStatusUpdateApplicationJSON = /** @class */ (function (_super) {
    __extends(MeetingLiveStreamStatusUpdateApplicationJSON, _super);
    function MeetingLiveStreamStatusUpdateApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "action" }),
        __metadata("design:type", String)
    ], MeetingLiveStreamStatusUpdateApplicationJSON.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "settings" }),
        (0, class_transformer_1.Type)(function () { return MeetingLiveStreamStatusUpdateApplicationJSONSettings; }),
        __metadata("design:type", MeetingLiveStreamStatusUpdateApplicationJSONSettings)
    ], MeetingLiveStreamStatusUpdateApplicationJSON.prototype, "settings", void 0);
    return MeetingLiveStreamStatusUpdateApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.MeetingLiveStreamStatusUpdateApplicationJSON = MeetingLiveStreamStatusUpdateApplicationJSON;
var MeetingLiveStreamStatusUpdateRequest = /** @class */ (function (_super) {
    __extends(MeetingLiveStreamStatusUpdateRequest, _super);
    function MeetingLiveStreamStatusUpdateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", MeetingLiveStreamStatusUpdateApplicationJSON)
    ], MeetingLiveStreamStatusUpdateRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=meetingId",
        }),
        __metadata("design:type", Number)
    ], MeetingLiveStreamStatusUpdateRequest.prototype, "meetingId", void 0);
    return MeetingLiveStreamStatusUpdateRequest;
}(utils_1.SpeakeasyBase));
exports.MeetingLiveStreamStatusUpdateRequest = MeetingLiveStreamStatusUpdateRequest;
var MeetingLiveStreamStatusUpdateResponse = /** @class */ (function (_super) {
    __extends(MeetingLiveStreamStatusUpdateResponse, _super);
    function MeetingLiveStreamStatusUpdateResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], MeetingLiveStreamStatusUpdateResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], MeetingLiveStreamStatusUpdateResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], MeetingLiveStreamStatusUpdateResponse.prototype, "rawResponse", void 0);
    return MeetingLiveStreamStatusUpdateResponse;
}(utils_1.SpeakeasyBase));
exports.MeetingLiveStreamStatusUpdateResponse = MeetingLiveStreamStatusUpdateResponse;
