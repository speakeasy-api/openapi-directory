"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bullet as shared_bullet
from ..shared import bulletsuggestionstate as shared_bulletsuggestionstate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuggestedBullet:
    r"""A suggested change to a Bullet."""
    
    bullet: Optional[shared_bullet.Bullet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bullet'), 'exclude': lambda f: f is None }})
    r"""Describes the bullet of a paragraph."""  
    bullet_suggestion_state: Optional[shared_bulletsuggestionstate.BulletSuggestionState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bulletSuggestionState'), 'exclude': lambda f: f is None }})
    r"""A mask that indicates which of the fields on the base Bullet have been changed in this suggestion. For any field set to true, there's a new suggested value."""  
    