/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents a Pub/Sub transport.
 */
export class PubsubInput extends SpeakeasyBase {
  /**
   * Optional. The name of the Pub/Sub topic created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/topics/{TOPIC_NAME}`. You can set an existing topic for triggers of the type `google.cloud.pubsub.topic.v1.messagePublished`. The topic you provide here is not deleted by Eventarc at trigger deletion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}

/**
 * Represents a Pub/Sub transport.
 */
export class Pubsub extends SpeakeasyBase {
  /**
   * Output only. The name of the Pub/Sub subscription created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/subscriptions/{SUBSCRIPTION_NAME}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription" })
  subscription?: string;

  /**
   * Optional. The name of the Pub/Sub topic created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/topics/{TOPIC_NAME}`. You can set an existing topic for triggers of the type `google.cloud.pubsub.topic.v1.messagePublished`. The topic you provide here is not deleted by Eventarc at trigger deletion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}
