/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Meta } from "./meta";
import { Expose, Type } from "class-transformer";

export class ScimEnterpriseGroupResponseMembers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "$ref" })
  dollarRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "display" })
  display?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export enum ScimEnterpriseGroupResponseSchemasEnum {
  UrnIetfParamsScimSchemasCore20Group = "urn:ietf:params:scim:schemas:core:2.0:Group",
  UrnIetfParamsScimApiMessages20ListResponse = "urn:ietf:params:scim:api:messages:2.0:ListResponse",
}

/**
 * Group has been created
 */
export class ScimEnterpriseGroupResponse extends SpeakeasyBase {
  /**
   * A human-readable name for a security group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A unique identifier for the resource as defined by the provisioning client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId?: string;

  /**
   * The internally generated id for the group object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The security group members.
   */
  @SpeakeasyMetadata({ elemType: ScimEnterpriseGroupResponseMembers })
  @Expose({ name: "members" })
  @Type(() => ScimEnterpriseGroupResponseMembers)
  members?: ScimEnterpriseGroupResponseMembers[];

  /**
   * The metadata associated with the creation/updates to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => Meta)
  meta?: Meta;

  /**
   * The URIs that are used to indicate the namespaces of the SCIM schemas.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemas" })
  schemas: ScimEnterpriseGroupResponseSchemasEnum[];
}
