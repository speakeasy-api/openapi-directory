/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableLicenseSimple } from "./nullablelicensesimple";
import { Expose, Type } from "class-transformer";

export class LicenseContentLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "git" })
  git: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html" })
  html: string;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self: string;
}

/**
 * License Content
 */
export class LicenseContent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => LicenseContentLinks)
  links: LicenseContentLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content: string;

  @SpeakeasyMetadata()
  @Expose({ name: "download_url" })
  downloadUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "encoding" })
  encoding: string;

  @SpeakeasyMetadata()
  @Expose({ name: "git_url" })
  gitUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * License Simple
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  @Type(() => NullableLicenseSimple)
  license: NullableLicenseSimple;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha: string;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
