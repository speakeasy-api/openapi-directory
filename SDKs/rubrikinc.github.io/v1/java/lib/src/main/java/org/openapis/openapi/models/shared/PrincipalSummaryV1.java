/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PrincipalSummaryV1 {
    /**
     * ID of the authentication domain for a specified principal.
     */
    @JsonProperty("authDomainId")
    public String authDomainId;

    public PrincipalSummaryV1 withAuthDomainId(String authDomainId) {
        this.authDomainId = authDomainId;
        return this;
    }
    
    /**
     * The type of authentication domain.
     */
    @JsonProperty("authDomainType")
    public AuthDomainTypeEnum authDomainType;

    public PrincipalSummaryV1 withAuthDomainType(AuthDomainTypeEnum authDomainType) {
        this.authDomainType = authDomainType;
        return this;
    }
    
    /**
     * Short description for a principal of type group. For all other types the value is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public PrincipalSummaryV1 withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Email address associated with a principal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailAddress")
    public String emailAddress;

    public PrincipalSummaryV1 withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }
    
    /**
     * First name of a principal of type user. For all other types the value is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;

    public PrincipalSummaryV1 withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * ID of a principal in an authentication domain.
     */
    @JsonProperty("id")
    public String id;

    public PrincipalSummaryV1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A Boolean that specifies whether the principal has any roles assigned. When this value is 'true,' the principal has one or more roles assigned.
     * 
     */
    @JsonProperty("isAssignedRoles")
    public Boolean isAssignedRoles;

    public PrincipalSummaryV1 withIsAssignedRoles(Boolean isAssignedRoles) {
        this.isAssignedRoles = isAssignedRoles;
        return this;
    }
    
    /**
     * A Boolean that specifies whether the principal is a local user or has any roles assigned. When this value is 'true,' the principal either has one or more roles assigned or is a local user.
     * 
     */
    @JsonProperty("isAssignedRolesOrIsLocal")
    public Boolean isAssignedRolesOrIsLocal;

    public PrincipalSummaryV1 withIsAssignedRolesOrIsLocal(Boolean isAssignedRolesOrIsLocal) {
        this.isAssignedRolesOrIsLocal = isAssignedRolesOrIsLocal;
        return this;
    }
    
    /**
     * Boolean value that shows the lock state of a user account. Value is true when the account is locked and false when the account is not locked.
     * 
     */
    @JsonProperty("isLocked")
    public Boolean isLocked;

    public PrincipalSummaryV1 withIsLocked(Boolean isLocked) {
        this.isLocked = isLocked;
        return this;
    }
    
    /**
     * Indicates if the principal has TOTP authentication enabled. Returns true when TOTP is enabled, returns false when TOTP is not enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isTotpEnabled")
    public Boolean isTotpEnabled;

    public PrincipalSummaryV1 withIsTotpEnabled(Boolean isTotpEnabled) {
        this.isTotpEnabled = isTotpEnabled;
        return this;
    }
    
    /**
     * Indicates if the TOTP authentication is enforced. Returns true when TOTP is enforced, returns false when TOTP is not enforced.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isTotpEnforced")
    public Boolean isTotpEnforced;

    public PrincipalSummaryV1 withIsTotpEnforced(Boolean isTotpEnforced) {
        this.isTotpEnforced = isTotpEnforced;
        return this;
    }
    
    /**
     * Last name of a principal of type user. For all other types the value is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;

    public PrincipalSummaryV1 withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Name of the MFA server assgined to the user.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mfaServerName")
    public String mfaServerName;

    public PrincipalSummaryV1 withMfaServerName(String mfaServerName) {
        this.mfaServerName = mfaServerName;
        return this;
    }
    
    /**
     * The name of a principal in an authentication domain.
     */
    @JsonProperty("name")
    public String name;

    public PrincipalSummaryV1 withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Type of a principal in an authentication domain. Type can be user or group.
     * 
     */
    @JsonProperty("principalType")
    public PrincipalTypeEnum principalType;

    public PrincipalSummaryV1 withPrincipalType(PrincipalTypeEnum principalType) {
        this.principalType = principalType;
        return this;
    }
    
    /**
     * Roles assigned to this principal.
     */
    @JsonProperty("roles")
    public RoleInfo[] roles;

    public PrincipalSummaryV1 withRoles(RoleInfo[] roles) {
        this.roles = roles;
        return this;
    }
    
    public PrincipalSummaryV1(@JsonProperty("authDomainId") String authDomainId, @JsonProperty("authDomainType") AuthDomainTypeEnum authDomainType, @JsonProperty("id") String id, @JsonProperty("isAssignedRoles") Boolean isAssignedRoles, @JsonProperty("isAssignedRolesOrIsLocal") Boolean isAssignedRolesOrIsLocal, @JsonProperty("isLocked") Boolean isLocked, @JsonProperty("name") String name, @JsonProperty("principalType") PrincipalTypeEnum principalType, @JsonProperty("roles") RoleInfo[] roles) {
        this.authDomainId = authDomainId;
        this.authDomainType = authDomainType;
        this.id = id;
        this.isAssignedRoles = isAssignedRoles;
        this.isAssignedRolesOrIsLocal = isAssignedRolesOrIsLocal;
        this.isLocked = isLocked;
        this.name = name;
        this.principalType = principalType;
        this.roles = roles;
  }
}
