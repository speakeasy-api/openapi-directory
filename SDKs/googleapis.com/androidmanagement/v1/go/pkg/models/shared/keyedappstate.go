// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// KeyedAppStateSeverityEnum - The severity of the app state.
type KeyedAppStateSeverityEnum string

const (
	KeyedAppStateSeverityEnumSeverityUnspecified KeyedAppStateSeverityEnum = "SEVERITY_UNSPECIFIED"
	KeyedAppStateSeverityEnumInfo                KeyedAppStateSeverityEnum = "INFO"
	KeyedAppStateSeverityEnumError               KeyedAppStateSeverityEnum = "ERROR"
)

func (e *KeyedAppStateSeverityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "INFO":
		fallthrough
	case "ERROR":
		*e = KeyedAppStateSeverityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyedAppStateSeverityEnum: %s", s)
	}
}

// KeyedAppState - Keyed app state reported by the app.
type KeyedAppState struct {
	// The creation time of the app state on the device.
	CreateTime *string `json:"createTime,omitempty"`
	// Optionally, a machine-readable value to be read by the EMM. For example, setting values that the admin can choose to query against in the EMM console (e.g. “notify me if the battery_warning data < 10”).
	Data *string `json:"data,omitempty"`
	// The key for the app state. Acts as a point of reference for what the app is providing state for. For example, when providing managed configuration feedback, this key could be the managed configuration key.
	Key *string `json:"key,omitempty"`
	// The time the app state was most recently updated.
	LastUpdateTime *string `json:"lastUpdateTime,omitempty"`
	// Optionally, a free-form message string to explain the app state. If the state was triggered by a particular value (e.g. a managed configuration value), it should be included in the message.
	Message *string `json:"message,omitempty"`
	// The severity of the app state.
	Severity *KeyedAppStateSeverityEnum `json:"severity,omitempty"`
}
