/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkflowTemplateInput - A Dataproc workflow template resource.
 */
public class WorkflowTemplateInput {
    /**
     * Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dagTimeout")
    public String dagTimeout;
    public WorkflowTemplateInput withDagTimeout(String dagTimeout) {
        this.dagTimeout = dagTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public WorkflowTemplateInput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Required. The Directed Acyclic Graph of Jobs to submit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobs")
    public OrderedJob[] jobs;
    public WorkflowTemplateInput withJobs(OrderedJob[] jobs) {
        this.jobs = jobs;
        return this;
    }
    
    /**
     * Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public WorkflowTemplateInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public TemplateParameter[] parameters;
    public WorkflowTemplateInput withParameters(TemplateParameter[] parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placement")
    public WorkflowTemplatePlacementInput placement;
    public WorkflowTemplateInput withPlacement(WorkflowTemplatePlacementInput placement) {
        this.placement = placement;
        return this;
    }
    
    /**
     * Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Integer version;
    public WorkflowTemplateInput withVersion(Integer version) {
        this.version = version;
        return this;
    }
    
}
