/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HITLayoutParameter } from "./hitlayoutparameter";
import { ReviewPolicy } from "./reviewpolicy";
import { Expose, Type } from "class-transformer";

export class CreateHITWithHITTypeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssignmentReviewPolicy" })
  @Type(() => ReviewPolicy)
  assignmentReviewPolicy?: ReviewPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "HITLayoutId" })
  hitLayoutId?: string;

  @SpeakeasyMetadata({ elemType: HITLayoutParameter })
  @Expose({ name: "HITLayoutParameters" })
  @Type(() => HITLayoutParameter)
  hitLayoutParameters?: HITLayoutParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "HITReviewPolicy" })
  @Type(() => ReviewPolicy)
  hitReviewPolicy?: ReviewPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "HITTypeId" })
  hitTypeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LifetimeInSeconds" })
  lifetimeInSeconds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxAssignments" })
  maxAssignments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Question" })
  question?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequesterAnnotation" })
  requesterAnnotation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UniqueRequestToken" })
  uniqueRequestToken?: string;
}
