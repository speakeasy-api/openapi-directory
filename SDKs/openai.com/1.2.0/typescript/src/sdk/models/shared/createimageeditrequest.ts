/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResponseFormatEnum } from "./responseformatenum";
import { SizeEnum } from "./sizeenum";

export class CreateImageEditRequestImage extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=image" })
  image: string;
}

export class CreateImageEditRequestMask extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=mask" })
  mask: string;
}

export class CreateImageEditRequest extends SpeakeasyBase {
  /**
   * The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  image: CreateImageEditRequestImage;

  /**
   * An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as `image`.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  mask?: CreateImageEditRequestMask;

  /**
   * The number of images to generate. Must be between 1 and 10.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=n" })
  n?: number;

  /**
   * A text description of the desired image(s). The maximum length is 1000 characters.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=prompt" })
  prompt: string;

  /**
   * The format in which the generated images are returned. Must be one of `url` or `b64_json`.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=response_format" })
  responseFormat?: ResponseFormatEnum;

  /**
   * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=size" })
  size?: SizeEnum;

  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=user" })
  user?: string;
}
