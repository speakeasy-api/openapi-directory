/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Disable the outro.
 */
export enum EditEmbedPresetRequestBodyOutroEnum {
  Nothing = "nothing",
}

export class EditEmbedPresetRequestBody extends SpeakeasyBase {
  /**
   * Disable the outro.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outro" })
  outro?: EditEmbedPresetRequestBodyOutroEnum;
}

export class EditEmbedPresetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/vnd.vimeo.preset+json",
  })
  requestBody?: EditEmbedPresetRequestBody;

  /**
   * The ID of the preset.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=preset_id",
  })
  presetId: number;

  /**
   * The ID of the user.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=user_id",
  })
  userId: number;
}

export class EditEmbedPresetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The outro type is invalid.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The embed preset was edited.
   */
  @SpeakeasyMetadata()
  presets?: shared.Presets;
}
