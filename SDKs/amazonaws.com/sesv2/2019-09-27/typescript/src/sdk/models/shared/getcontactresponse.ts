/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TopicPreference } from "./topicpreference";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetContactResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AttributesData" })
  attributesData?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContactListName" })
  contactListName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailAddress" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimestamp?: Date;

  @SpeakeasyMetadata({ elemType: TopicPreference })
  @Expose({ name: "TopicDefaultPreferences" })
  @Type(() => TopicPreference)
  topicDefaultPreferences?: TopicPreference[];

  @SpeakeasyMetadata({ elemType: TopicPreference })
  @Expose({ name: "TopicPreferences" })
  @Type(() => TopicPreference)
  topicPreferences?: TopicPreference[];

  @SpeakeasyMetadata()
  @Expose({ name: "UnsubscribeAll" })
  unsubscribeAll?: boolean;
}
