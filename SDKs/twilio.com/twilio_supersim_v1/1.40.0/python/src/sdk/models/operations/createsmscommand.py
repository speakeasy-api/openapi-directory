"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import supersim_v1_sms_command as shared_supersim_v1_sms_command
from enum import Enum
from typing import Optional

CREATE_SMS_COMMAND_SERVERS = [
	"https://supersim.twilio.com",
]


@dataclasses.dataclass
class CreateSmsCommandSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class CreateSmsCommandCreateSmsCommandRequestCallbackMethodEnum(str, Enum):
    r"""The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclasses.dataclass
class CreateSmsCommandCreateSmsCommandRequest:
    
    payload: str = dataclasses.field(metadata={'form': { 'field_name': 'Payload' }})
    r"""The message body of the SMS Command."""  
    sim: str = dataclasses.field(metadata={'form': { 'field_name': 'Sim' }})
    r"""The `sid` or `unique_name` of the [SIM](https://www.twilio.com/docs/iot/supersim/api/sim-resource) to send the SMS Command to."""  
    callback_method: Optional[CreateSmsCommandCreateSmsCommandRequestCallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackMethod' }})
    r"""The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST."""  
    callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackUrl' }})
    r"""The URL we should call using the `callback_method` after we have sent the command."""  
    

@dataclasses.dataclass
class CreateSmsCommandResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    supersim_v1_sms_command: Optional[shared_supersim_v1_sms_command.SupersimV1SmsCommand] = dataclasses.field(default=None)
    r"""Created"""  
    