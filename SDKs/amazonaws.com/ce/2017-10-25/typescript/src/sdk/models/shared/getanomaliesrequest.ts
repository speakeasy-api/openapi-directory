/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnomalyDateInterval } from "./anomalydateinterval";
import { AnomalyFeedbackTypeEnum } from "./anomalyfeedbacktypeenum";
import { TotalImpactFilter } from "./totalimpactfilter";
import { Expose, Type } from "class-transformer";

export class GetAnomaliesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DateInterval" })
  @Type(() => AnomalyDateInterval)
  dateInterval: AnomalyDateInterval;

  @SpeakeasyMetadata()
  @Expose({ name: "Feedback" })
  feedback?: AnomalyFeedbackTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorArn" })
  monitorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NextPageToken" })
  nextPageToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TotalImpact" })
  @Type(() => TotalImpactFilter)
  totalImpact?: TotalImpactFilter;
}
