/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MissedParticipationCountDetails - Missed participation count broken down by reason.
 */
public class MissedParticipationCountDetails {
    /**
     * The total number of missed participations due to one or more of your hotels being suspended due to price accuracy violations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hotelSuspendedCount")
    public String hotelSuspendedCount;

    public MissedParticipationCountDetails withHotelSuspendedCount(String hotelSuspendedCount) {
        this.hotelSuspendedCount = hotelSuspendedCount;
        return this;
    }
    
    /**
     * The total number of missed participation due to the hotel/itinerary combination being unavailable, or the traveler was ineligible for the rates. To participate in these auctions, you may need to provide more pricing information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noAvailabilityCount")
    public String noAvailabilityCount;

    public MissedParticipationCountDetails withNoAvailabilityCount(String noAvailabilityCount) {
        this.noAvailabilityCount = noAvailabilityCount;
        return this;
    }
    
    /**
     * No landing page matched the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noLandingPageCount")
    public String noLandingPageCount;

    public MissedParticipationCountDetails withNoLandingPageCount(String noLandingPageCount) {
        this.noLandingPageCount = noLandingPageCount;
        return this;
    }
    
    /**
     * The total number of missed participations due to a price not being offered for the requested itinerary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noPriceCount")
    public String noPriceCount;

    public MissedParticipationCountDetails withNoPriceCount(String noPriceCount) {
        this.noPriceCount = noPriceCount;
        return this;
    }
    
    /**
     * The reasons that contributed to the no price count and the total count for each reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noPriceCountDetails")
    public NoPriceCountDetails noPriceCountDetails;

    public MissedParticipationCountDetails withNoPriceCountDetails(NoPriceCountDetails noPriceCountDetails) {
        this.noPriceCountDetails = noPriceCountDetails;
        return this;
    }
    
    /**
     * The total number of missed participation due to one or more of your hotels not specifying taxes and fees separately.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noTaxBreakdownCount")
    public String noTaxBreakdownCount;

    public MissedParticipationCountDetails withNoTaxBreakdownCount(String noTaxBreakdownCount) {
        this.noTaxBreakdownCount = noTaxBreakdownCount;
        return this;
    }
    
    /**
     * Hotel did not participate for an unknown reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherReasonCount")
    public String otherReasonCount;

    public MissedParticipationCountDetails withOtherReasonCount(String otherReasonCount) {
        this.otherReasonCount = otherReasonCount;
        return this;
    }
    
    /**
     * The total number of missed participations due to either a price not being present in Google's cache or failing to successfully respond to live pricing. Comprised of the following: * Bandwidth depleted * Cache rate missing * Itinerary blocked * Live pricing not set up * Live pricing timeout * Live pricing error
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceMissingCount")
    public String priceMissingCount;

    public MissedParticipationCountDetails withPriceMissingCount(String priceMissingCount) {
        this.priceMissingCount = priceMissingCount;
        return this;
    }
    
    /**
     * The reasons that contributed to the price missing count and the total count for each reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceMissingCountDetails")
    public PriceMissingCountDetails priceMissingCountDetails;

    public MissedParticipationCountDetails withPriceMissingCountDetails(PriceMissingCountDetails priceMissingCountDetails) {
        this.priceMissingCountDetails = priceMissingCountDetails;
        return this;
    }
    
    /**
     * The total number of missed participation due to an issue with the accuracy of the price provided for the itinerary. Comprised of the following: * Hotel suspended * Price unusually high * Price unusually low * Taxes and feeds missing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceProblemCount")
    public String priceProblemCount;

    public MissedParticipationCountDetails withPriceProblemCount(String priceProblemCount) {
        this.priceProblemCount = priceProblemCount;
        return this;
    }
    
    /**
     * The reasons that contributed to the price problem count and the total count for each reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceProblemCountDetails")
    public PriceProblemCountDetails priceProblemCountDetails;

    public MissedParticipationCountDetails withPriceProblemCountDetails(PriceProblemCountDetails priceProblemCountDetails) {
        this.priceProblemCountDetails = priceProblemCountDetails;
        return this;
    }
    
    /**
     * The total number of missed participation due to price listed as unavailable (-1) for the requested itinerary. Comprised of the following: * Price unavailable * Participation not likely * Other
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceUnavailableCount")
    public String priceUnavailableCount;

    public MissedParticipationCountDetails withPriceUnavailableCount(String priceUnavailableCount) {
        this.priceUnavailableCount = priceUnavailableCount;
        return this;
    }
    
    /**
     * The reasons that contributed to the price unavailable count and the total count for each reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceUnavailableCountDetails")
    public PriceUnavailableCountDetails priceUnavailableCountDetails;

    public MissedParticipationCountDetails withPriceUnavailableCountDetails(PriceUnavailableCountDetails priceUnavailableCountDetails) {
        this.priceUnavailableCountDetails = priceUnavailableCountDetails;
        return this;
    }
    
    public MissedParticipationCountDetails(){}
}
