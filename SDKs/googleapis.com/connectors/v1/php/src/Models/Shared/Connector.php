<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Connector - Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Connector
{
    /**
     * Output only. Created time.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Output only. Description of the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Output only. Display name.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Output only. Link to documentation page.
     * 
     * @var ?string $documentationUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('documentationUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $documentationUri = null;
    
    /**
     * Output only. Link to external page.
     * 
     * @var ?string $externalUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalUri = null;
    
    /**
     * Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Output only. Flag to mark the version indicating the launch stage.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectorLaunchStageEnum $launchStage
     */
	#[\JMS\Serializer\Annotation\SerializedName('launchStage')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConnectorLaunchStageEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectorLaunchStageEnum $launchStage = null;
    
    /**
     * Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector} Only global location is supported for Connector resource.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. Updated time.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
    /**
     * Output only. Cloud storage location of icons etc consumed by UI.
     * 
     * @var ?string $webAssetsLocation
     */
	#[\JMS\Serializer\Annotation\SerializedName('webAssetsLocation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webAssetsLocation = null;
    
	public function __construct()
	{
		$this->createTime = null;
		$this->description = null;
		$this->displayName = null;
		$this->documentationUri = null;
		$this->externalUri = null;
		$this->labels = null;
		$this->launchStage = null;
		$this->name = null;
		$this->updateTime = null;
		$this->webAssetsLocation = null;
	}
}
