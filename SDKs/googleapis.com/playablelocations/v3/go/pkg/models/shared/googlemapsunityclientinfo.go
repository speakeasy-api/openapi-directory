// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleMapsUnityClientInfoPlatformEnum - Platform where the application is running.
type GoogleMapsUnityClientInfoPlatformEnum string

const (
	GoogleMapsUnityClientInfoPlatformEnumPlatformUnspecified GoogleMapsUnityClientInfoPlatformEnum = "PLATFORM_UNSPECIFIED"
	GoogleMapsUnityClientInfoPlatformEnumEditor              GoogleMapsUnityClientInfoPlatformEnum = "EDITOR"
	GoogleMapsUnityClientInfoPlatformEnumMacOs               GoogleMapsUnityClientInfoPlatformEnum = "MAC_OS"
	GoogleMapsUnityClientInfoPlatformEnumWindows             GoogleMapsUnityClientInfoPlatformEnum = "WINDOWS"
	GoogleMapsUnityClientInfoPlatformEnumLinux               GoogleMapsUnityClientInfoPlatformEnum = "LINUX"
	GoogleMapsUnityClientInfoPlatformEnumAndroid             GoogleMapsUnityClientInfoPlatformEnum = "ANDROID"
	GoogleMapsUnityClientInfoPlatformEnumIos                 GoogleMapsUnityClientInfoPlatformEnum = "IOS"
	GoogleMapsUnityClientInfoPlatformEnumWebGl               GoogleMapsUnityClientInfoPlatformEnum = "WEB_GL"
)

func (e GoogleMapsUnityClientInfoPlatformEnum) ToPointer() *GoogleMapsUnityClientInfoPlatformEnum {
	return &e
}

func (e *GoogleMapsUnityClientInfoPlatformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PLATFORM_UNSPECIFIED":
		fallthrough
	case "EDITOR":
		fallthrough
	case "MAC_OS":
		fallthrough
	case "WINDOWS":
		fallthrough
	case "LINUX":
		fallthrough
	case "ANDROID":
		fallthrough
	case "IOS":
		fallthrough
	case "WEB_GL":
		*e = GoogleMapsUnityClientInfoPlatformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleMapsUnityClientInfoPlatformEnum: %v", v)
	}
}

// GoogleMapsUnityClientInfo - Client information.
type GoogleMapsUnityClientInfo struct {
	// API client name and version. For example, the SDK calling the API. The exact format is up to the client.
	APIClient *string `json:"apiClient,omitempty"`
	// Application ID, such as the package name on Android and the bundle identifier on iOS platforms.
	ApplicationID *string `json:"applicationId,omitempty"`
	// Application version number, such as "1.2.3". The exact format is application-dependent.
	ApplicationVersion *string `json:"applicationVersion,omitempty"`
	// Device model as reported by the device. The exact format is platform-dependent.
	DeviceModel *string `json:"deviceModel,omitempty"`
	// Language code (in BCP-47 format) indicating the UI language of the client. Examples are "en", "en-US" or "ja-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
	LanguageCode *string `json:"languageCode,omitempty"`
	// Operating system name and version as reported by the OS. For example, "Mac OS X 10.10.4". The exact format is platform-dependent.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// Build number/version of the operating system. e.g., the contents of android.os.Build.ID in Android, or the contents of sysctl "kern.osversion" in iOS.
	OperatingSystemBuild *string `json:"operatingSystemBuild,omitempty"`
	// Platform where the application is running.
	Platform *GoogleMapsUnityClientInfoPlatformEnum `json:"platform,omitempty"`
}
