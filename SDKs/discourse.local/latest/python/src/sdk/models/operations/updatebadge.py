"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateBadgeRequestBody:
    
    badge_type_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badge_type_id') }})
    r"""The ID for the badge type. 1 for Gold, 2 for Silver,
    3 for Bronze.
    """  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name for the new badge."""  
    

@dataclasses.dataclass
class UpdateBadgeRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateBadgeRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateBadge200ApplicationJSONBadge:
    
    allow_title: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_title') }})  
    auto_revoke: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_revoke') }})  
    badge_grouping_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badge_grouping_id') }})  
    badge_type_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badge_type_id') }})  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})  
    grant_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grant_count') }})  
    icon: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icon') }})  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    image_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image_url') }})  
    listable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listable') }})  
    long_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('long_description') }})  
    manually_grantable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manually_grantable') }})  
    multiple_grant: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multiple_grant') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    query: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query') }})  
    show_posts: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('show_posts') }})  
    slug: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slug') }})  
    system: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('system') }})  
    target_posts: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_posts') }})  
    trigger: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trigger') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateBadge200ApplicationJSONBadgeTypes:
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    sort_order: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sort_order') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateBadge200ApplicationJSON:
    r"""success response"""
    
    badge: UpdateBadge200ApplicationJSONBadge = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badge') }})  
    badge_types: list[UpdateBadge200ApplicationJSONBadgeTypes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badge_types') }})  
    

@dataclasses.dataclass
class UpdateBadgeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_badge_200_application_json_object: Optional[UpdateBadge200ApplicationJSON] = dataclasses.field(default=None)
    r"""success response"""  
    