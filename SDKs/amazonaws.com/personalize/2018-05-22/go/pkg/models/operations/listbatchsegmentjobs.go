// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListBatchSegmentJobsXAmzTargetEnum
type ListBatchSegmentJobsXAmzTargetEnum string

const (
	ListBatchSegmentJobsXAmzTargetEnumAmazonPersonalizeListBatchSegmentJobs ListBatchSegmentJobsXAmzTargetEnum = "AmazonPersonalize.ListBatchSegmentJobs"
)

func (e ListBatchSegmentJobsXAmzTargetEnum) ToPointer() *ListBatchSegmentJobsXAmzTargetEnum {
	return &e
}

func (e *ListBatchSegmentJobsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonPersonalize.ListBatchSegmentJobs":
		*e = ListBatchSegmentJobsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBatchSegmentJobsXAmzTargetEnum: %v", v)
	}
}

type ListBatchSegmentJobsRequest struct {
	ListBatchSegmentJobsRequest shared.ListBatchSegmentJobsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  ListBatchSegmentJobsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListBatchSegmentJobsResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListBatchSegmentJobsResponse *shared.ListBatchSegmentJobsResponse
	StatusCode                   int
	RawResponse                  *http.Response
}
