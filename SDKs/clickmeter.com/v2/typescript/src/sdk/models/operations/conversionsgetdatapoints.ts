/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Status of datapoint ("deleted"/"active"/"paused"/"spam")
 */
export enum ConversionsGetDatapointsStatusEnum {
  Deleted = "deleted",
  Active = "active",
  Paused = "paused",
  Spam = "spam",
}

/**
 * Type of datapoint ("tl"/"tp")
 */
export enum ConversionsGetDatapointsTypeEnum {
  Tp = "tp",
  Tl = "tl",
}

export class ConversionsGetDatapointsRequest extends SpeakeasyBase {
  /**
   * Id of the conversion
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=conversionId",
  })
  conversionId: number;

  /**
   * Exclude datapoints created before this date (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAfter",
  })
  createdAfter?: string;

  /**
   * Exclude datapoints created after this date (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBefore",
  })
  createdBefore?: string;

  /**
   * Limit results to this number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Offset where to start from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Status of datapoint ("deleted"/"active"/"paused"/"spam")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: ConversionsGetDatapointsStatusEnum;

  /**
   * Filter by this tag name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tags" })
  tags?: string;

  /**
   * Filter fields by this pattern
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=textSearch",
  })
  textSearch?: string;

  /**
   * Type of datapoint ("tl"/"tp")
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: ConversionsGetDatapointsTypeEnum;
}

export class ConversionsGetDatapointsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64?: shared.ApiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
