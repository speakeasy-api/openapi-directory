/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalysisRulePolicy } from "./analysisrulepolicy";
import { AnalysisRuleTypeEnum } from "./analysisruletypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A specification about how data from the configured table can be used in a query.
 */
export class AnalysisRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collaborationId" })
  collaborationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "policy" })
  @Type(() => AnalysisRulePolicy)
  policy: AnalysisRulePolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AnalysisRuleTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
