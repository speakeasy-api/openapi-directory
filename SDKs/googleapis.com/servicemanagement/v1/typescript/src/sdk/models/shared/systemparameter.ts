/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Define a parameter's name and location. The parameter may be passed as either an HTTP header or a URL query parameter, and if both are passed the behavior is implementation-dependent.
 */
export class SystemParameter extends SpeakeasyBase {
  /**
   * Define the HTTP header name to use for the parameter. It is case insensitive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpHeader" })
  httpHeader?: string;

  /**
   * Define the name of the parameter, such as "api_key" . It is case sensitive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Define the URL query parameter name to use for the parameter. It is case sensitive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlQueryParameter" })
  urlQueryParameter?: string;
}
