// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateInferenceRecommendationsJobXAmzTargetEnum
type CreateInferenceRecommendationsJobXAmzTargetEnum string

const (
	CreateInferenceRecommendationsJobXAmzTargetEnumSageMakerCreateInferenceRecommendationsJob CreateInferenceRecommendationsJobXAmzTargetEnum = "SageMaker.CreateInferenceRecommendationsJob"
)

func (e CreateInferenceRecommendationsJobXAmzTargetEnum) ToPointer() *CreateInferenceRecommendationsJobXAmzTargetEnum {
	return &e
}

func (e *CreateInferenceRecommendationsJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.CreateInferenceRecommendationsJob":
		*e = CreateInferenceRecommendationsJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateInferenceRecommendationsJobXAmzTargetEnum: %v", v)
	}
}

type CreateInferenceRecommendationsJobRequest struct {
	CreateInferenceRecommendationsJobRequest shared.CreateInferenceRecommendationsJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                           *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                 *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                        *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                               CreateInferenceRecommendationsJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateInferenceRecommendationsJobResponse struct {
	ContentType string
	// Success
	CreateInferenceRecommendationsJobResponse *shared.CreateInferenceRecommendationsJobResponse
	// ResourceInUse
	ResourceInUse interface{}
	StatusCode    int
	RawResponse   *http.Response
	// ResourceLimitExceeded
	ResourceLimitExceeded interface{}
}
