"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageInfo:
    r"""OK. A list of all available Docker images in the private Bluemix registry is returned."""
    
    created: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Created'), 'exclude': lambda f: f is None }})
    r"""The time when your container image was created."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""The unique identifier representing a container image."""  
    image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Image'), 'exclude': lambda f: f is None }})
    r"""The name of your container image."""  
    repo_tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RepoTags'), 'exclude': lambda f: f is None }})
    r"""The full path to the private Bluemix registry where the image is stored including the registry name, the organization namespace, and image tag."""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Size'), 'exclude': lambda f: f is None }})
    r"""The real size of the container image."""  
    virtual_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VirtualSize'), 'exclude': lambda f: f is None }})
    r"""The virtual size of the container image."""  
    