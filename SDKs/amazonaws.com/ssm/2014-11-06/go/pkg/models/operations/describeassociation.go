// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeAssociationXAmzTargetEnum
type DescribeAssociationXAmzTargetEnum string

const (
	DescribeAssociationXAmzTargetEnumAmazonSsmDescribeAssociation DescribeAssociationXAmzTargetEnum = "AmazonSSM.DescribeAssociation"
)

func (e *DescribeAssociationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.DescribeAssociation":
		*e = DescribeAssociationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeAssociationXAmzTargetEnum: %s", s)
	}
}

type DescribeAssociationHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeAssociationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeAssociationRequest struct {
	Headers DescribeAssociationHeaders
	Request shared.DescribeAssociationRequest `request:"mediaType=application/json"`
}

type DescribeAssociationResponse struct {
	// AssociationDoesNotExist
	AssociationDoesNotExist interface{}
	ContentType             string
	// Success
	DescribeAssociationResult *shared.DescribeAssociationResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidAssociationVersion
	InvalidAssociationVersion interface{}
	// InvalidDocument
	InvalidDocument interface{}
	// InvalidInstanceId
	InvalidInstanceID interface{}
	StatusCode        int
	RawResponse       *http.Response
}
