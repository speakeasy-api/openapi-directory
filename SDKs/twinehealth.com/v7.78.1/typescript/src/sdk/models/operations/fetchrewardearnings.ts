/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class FetchRewardEarningsRequest extends SpeakeasyBase {
  /**
   * Group identifiers
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[groups]",
  })
  filterGroups: string;

  /**
   * Patient identifier
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[patient]",
  })
  filterPatient: string;

  /**
   * If true, only returns those reward earnings for which ready_for_fulfillment is true and fulfilled_at is null. If false, only returns those reward earnings for which ready_for_fulfillment is false and fulfilled_at is null.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[ready_for_fulfillment]",
  })
  filterReadyForFulfillment?: boolean;
}

export class FetchRewardEarningsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fetchErrorResponse?: shared.FetchErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  fetchRewardEarningsResponse?: shared.FetchRewardEarningsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
