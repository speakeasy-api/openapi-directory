/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IntegerFacetingOptions } from "./integerfacetingoptions";
import { Expose, Type } from "class-transformer";

/**
 * Specifies operators to return facet results for. There will be one FacetResult for every source_name/object_type/operator_name combination.
 */
export class FacetOptions extends SpeakeasyBase {
  /**
   * Used to specify integer faceting options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integerFacetingOptions" })
  @Type(() => IntegerFacetingOptions)
  integerFacetingOptions?: IntegerFacetingOptions;

  /**
   * Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum value is 100.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numFacetBuckets" })
  numFacetBuckets?: number;

  /**
   * If object_type is set, only those objects of that type will be used to compute facets. If empty, then all objects will be used to compute facets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectType" })
  objectType?: string;

  /**
   * The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operatorName" })
  operatorName?: string;

  /**
   * Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceName" })
  sourceName?: string;
}
