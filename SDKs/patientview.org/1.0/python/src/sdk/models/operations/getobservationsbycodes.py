"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetObservationsByCodesRequest:
    
    code: list[str] = dataclasses.field(metadata={'query_param': { 'field_name': 'code', 'style': 'form', 'explode': True }})
    r"""code"""  
    limit: int = dataclasses.field(metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""limit"""  
    offset: int = dataclasses.field(metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""offset"""  
    order_direction: str = dataclasses.field(metadata={'query_param': { 'field_name': 'orderDirection', 'style': 'form', 'explode': True }})
    r"""orderDirection"""  
    user_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""userId"""  
    

@dataclasses.dataclass
class GetObservationsByCodesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    