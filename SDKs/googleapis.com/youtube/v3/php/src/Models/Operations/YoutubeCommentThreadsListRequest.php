<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class YoutubeCommentThreadsListRequest
{
    /**
     * V1 error format.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\XgafvEnum $dollarXgafv
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=$.xgafv')]
    public ?\OpenAPI\OpenAPI\Models\Shared\XgafvEnum $dollarXgafv = null;
    
    /**
     * OAuth access token.
     * 
     * @var ?string $accessToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=access_token')]
    public ?string $accessToken = null;
    
    /**
     * Returns the comment threads of all videos of the channel and the channel comments as well.
     * 
     * @var ?string $allThreadsRelatedToChannelId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=allThreadsRelatedToChannelId')]
    public ?string $allThreadsRelatedToChannelId = null;
    
    /**
     * Data format for response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * JSONP
     * 
     * @var ?string $callback
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=callback')]
    public ?string $callback = null;
    
    /**
     * Returns the comment threads for all the channel comments (ie does not include comments left on videos).
     * 
     * @var ?string $channelId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=channelId')]
    public ?string $channelId = null;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * Returns the comment threads with the given IDs for Stubby or Apiary.
     * 
     * @var ?array<string> $id
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=id')]
    public ?array $id = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * The *maxResults* parameter specifies the maximum number of items that should be returned in the result set.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxResults')]
    public ?int $maxResults = null;
    
    /**
     * Limits the returned comment threads to those with the specified moderation status. Not compatible with the 'id' filter. Valid values: published, heldForReview, likelySpam.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\YoutubeCommentThreadsListModerationStatusEnum $moderationStatus
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=moderationStatus')]
    public ?YoutubeCommentThreadsListModerationStatusEnum $moderationStatus = null;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order')]
    public ?YoutubeCommentThreadsListOrderEnum $order = null;
    
    /**
     * The *pageToken* parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageToken')]
    public ?string $pageToken = null;
    
    /**
     * The *part* parameter specifies a comma-separated list of one or more commentThread resource properties that the API response will include.
     * 
     * @var array<string> $part
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=part')]
    public array $part;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * Limits the returned comment threads to those matching the specified key words. Not compatible with the 'id' filter.
     * 
     * @var ?string $searchTerms
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=searchTerms')]
    public ?string $searchTerms = null;
    
    /**
     * The requested text format for the returned comments.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\YoutubeCommentThreadsListTextFormatEnum $textFormat
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=textFormat')]
    public ?YoutubeCommentThreadsListTextFormatEnum $textFormat = null;
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     * 
     * @var ?string $uploadType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=uploadType')]
    public ?string $uploadType = null;
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     * 
     * @var ?string $uploadProtocol
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=upload_protocol')]
    public ?string $uploadProtocol = null;
    
    /**
     * Returns the comment threads of the specified video.
     * 
     * @var ?string $videoId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=videoId')]
    public ?string $videoId = null;
    
	public function __construct()
	{
		$this->dollarXgafv = null;
		$this->accessToken = null;
		$this->allThreadsRelatedToChannelId = null;
		$this->alt = null;
		$this->callback = null;
		$this->channelId = null;
		$this->fields = null;
		$this->id = null;
		$this->key = null;
		$this->maxResults = null;
		$this->moderationStatus = null;
		$this->oauthToken = null;
		$this->order = null;
		$this->pageToken = null;
		$this->part = [];
		$this->prettyPrint = null;
		$this->quotaUser = null;
		$this->searchTerms = null;
		$this->textFormat = null;
		$this->uploadType = null;
		$this->uploadProtocol = null;
		$this->videoId = null;
	}
}
