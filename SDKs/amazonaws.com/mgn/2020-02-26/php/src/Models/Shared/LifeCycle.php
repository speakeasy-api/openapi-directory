<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LifeCycle - Lifecycle.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LifeCycle
{
	#[\JMS\Serializer\Annotation\SerializedName('addedToServiceDateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addedToServiceDateTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('elapsedReplicationDuration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $elapsedReplicationDuration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('firstByteDateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstByteDateTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('lastCutover')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LifeCycleLastCutover')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LifeCycleLastCutover $lastCutover = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('lastSeenByServiceDateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastSeenByServiceDateTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('lastTest')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LifeCycleLastTest')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LifeCycleLastTest $lastTest = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LifeCycleStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LifeCycleStateEnum $state = null;
    
	public function __construct()
	{
		$this->addedToServiceDateTime = null;
		$this->elapsedReplicationDuration = null;
		$this->firstByteDateTime = null;
		$this->lastCutover = null;
		$this->lastSeenByServiceDateTime = null;
		$this->lastTest = null;
		$this->state = null;
	}
}
