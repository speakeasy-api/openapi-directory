"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyResponsesDestinyProfileUserInfoCard = exports.DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum = exports.DestinyResponsesDestinyProfileUserInfoCardPlatformSilver = void 0;
var utils_1 = require("../../../internal/utils");
var destinyentitiesitemsdestinyitemcomponent_1 = require("./destinyentitiesitemsdestinyitemcomponent");
/**
 * This is the silver available on this Profile across any platforms on which they have purchased silver.
 *
 * @remarks
 *  This is only available if you are requesting yourself.
 */
var DestinyResponsesDestinyProfileUserInfoCardPlatformSilver = /** @class */ (function (_super) {
    __extends(DestinyResponsesDestinyProfileUserInfoCardPlatformSilver, _super);
    function DestinyResponsesDestinyProfileUserInfoCardPlatformSilver() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: destinyentitiesitemsdestinyitemcomponent_1.DestinyEntitiesItemsDestinyItemComponent }),
        __metadata("design:type", Object)
    ], DestinyResponsesDestinyProfileUserInfoCardPlatformSilver.prototype, "platformSilver", void 0);
    return DestinyResponsesDestinyProfileUserInfoCardPlatformSilver;
}(utils_1.SpeakeasyBase));
exports.DestinyResponsesDestinyProfileUserInfoCardPlatformSilver = DestinyResponsesDestinyProfileUserInfoCardPlatformSilver;
/**
 * If this profile is not in a cross save pairing, this will return the game versions that we believe this profile has access to.
 *
 * @remarks
 *  For the time being, we will not return this information for any membership that is in a cross save pairing. The gist is that, once the pairing occurs, we do not currently have a consistent way to get that information for the profile's original Platform, and thus gameVersions would be too inconsistent (based on the last platform they happened to play on) for the info to be useful.
 *  If we ever can get this data, this field will be deprecated and replaced with data on the DestinyLinkedProfileResponse itself, with game versions per linked Platform. But since we can't get that, we have this as a stop-gap measure for getting the data in the only situation that we currently need it.
 */
var DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum;
(function (DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum) {
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["Zero"] = "0";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["One"] = "1";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["Two"] = "2";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["Four"] = "4";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["Eight"] = "8";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["Sixteen"] = "16";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["ThirtyTwo"] = "32";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["SixtyFour"] = "64";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["OneHundredAndTwentyEight"] = "128";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["TwoHundredAndFiftySix"] = "256";
    DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum["FiveHundredAndTwelve"] = "512";
})(DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum = exports.DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum || (exports.DestinyResponsesDestinyProfileUserInfoCardUnpairedGameVersionsEnum = {}));
var DestinyResponsesDestinyProfileUserInfoCard = /** @class */ (function (_super) {
    __extends(DestinyResponsesDestinyProfileUserInfoCard, _super);
    function DestinyResponsesDestinyProfileUserInfoCard() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "applicableMembershipTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "bungieGlobalDisplayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "bungieGlobalDisplayNameCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "crossSaveOverride", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "dateLastPlayed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "iconPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "isCrossSavePrimary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "isOverridden", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "isPublic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "membershipId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "membershipType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DestinyResponsesDestinyProfileUserInfoCardPlatformSilver)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "platformSilver", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "supplementalDisplayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyProfileUserInfoCard.prototype, "unpairedGameVersions", void 0);
    return DestinyResponsesDestinyProfileUserInfoCard;
}(utils_1.SpeakeasyBase));
exports.DestinyResponsesDestinyProfileUserInfoCard = DestinyResponsesDestinyProfileUserInfoCard;
