// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateBackendEnvironmentPathParams struct {
	//  The unique ID for an Amplify app.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
}

type CreateBackendEnvironmentHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateBackendEnvironmentRequestBody struct {
	//  The name of deployment artifacts.
	DeploymentArtifacts *string `json:"deploymentArtifacts,omitempty"`
	//  The name for the backend environment.
	EnvironmentName string `json:"environmentName"`
	//  The AWS CloudFormation stack name of a backend environment.
	StackName *string `json:"stackName,omitempty"`
}

type CreateBackendEnvironmentRequest struct {
	PathParams CreateBackendEnvironmentPathParams
	Headers    CreateBackendEnvironmentHeaders
	Request    CreateBackendEnvironmentRequestBody `request:"mediaType=application/json"`
}

type CreateBackendEnvironmentResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateBackendEnvironmentResult *shared.CreateBackendEnvironmentResult
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
