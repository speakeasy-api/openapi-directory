/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum AzureSubscriptionListForUserDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AzureSubscriptionListForUserDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AzureSubscriptionListForUserDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * BadRequest
 */
export class AzureSubscriptionListForUserDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AzureSubscriptionListForUserDefaultApplicationJSONError)
  error: AzureSubscriptionListForUserDefaultApplicationJSONError;
}

export class AzureSubscriptionListForUser200ApplicationJSON extends SpeakeasyBase {
  /**
   * If the subscription can be used for billing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_billable" })
  isBillable?: boolean;

  /**
   * If the subscription is used for billing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_billing" })
  isBilling?: boolean;

  /**
   * If the subscription is internal Microsoft subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_microsoft_internal" })
  isMicrosoftInternal?: boolean;

  /**
   * The azure subscription id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_id" })
  subscriptionId: string;

  /**
   * The name of the azure subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_name" })
  subscriptionName: string;

  /**
   * The tenant id of the azure subscription belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenant_id" })
  tenantId: string;
}

export class AzureSubscriptionListForUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({
    elemType: AzureSubscriptionListForUser200ApplicationJSON,
  })
  azureSubscriptionListForUser200ApplicationJSONObjects?: AzureSubscriptionListForUser200ApplicationJSON[];

  /**
   * BadRequest
   */
  @SpeakeasyMetadata()
  azureSubscriptionListForUserDefaultApplicationJSONObject?: AzureSubscriptionListForUserDefaultApplicationJSON;
}
