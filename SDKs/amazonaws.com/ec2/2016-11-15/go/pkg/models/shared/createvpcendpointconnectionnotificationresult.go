// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum - The state of the notification.
type CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum string

const (
	CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnumEnabled  CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum = "Enabled"
	CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnumDisabled CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum = "Disabled"
)

func (e CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum) ToPointer() *CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum {
	return &e
}

func (e *CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Enabled":
		fallthrough
	case "Disabled":
		*e = CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum: %v", v)
	}
}

// CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum - The type of notification.
type CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum string

const (
	CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnumTopic CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum = "Topic"
)

func (e CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum) ToPointer() *CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum {
	return &e
}

func (e *CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Topic":
		*e = CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum: %v", v)
	}
}

// CreateVpcEndpointConnectionNotificationResultConnectionNotification - Information about the notification.
type CreateVpcEndpointConnectionNotificationResultConnectionNotification struct {
	ConnectionEvents            []string
	ConnectionNotificationArn   *string
	ConnectionNotificationID    *string
	ConnectionNotificationState *CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum
	ConnectionNotificationType  *CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum
	ServiceID                   *string
	VpcEndpointID               *string
}

// CreateVpcEndpointConnectionNotificationResult - Success
type CreateVpcEndpointConnectionNotificationResult struct {
	ClientToken            *string
	ConnectionNotification *CreateVpcEndpointConnectionNotificationResultConnectionNotification
}
