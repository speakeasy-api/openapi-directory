/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - The representation of a user
 */
public class User {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("github_username")
    public String githubUsername;
    public User withGithubUsername(String githubUsername) {
        this.githubUsername = githubUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public User withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("joined_at")
    public String joinedAt;
    public User withJoinedAt(String joinedAt) {
        this.joinedAt = joinedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public User withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public User withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile_image")
    public String profileImage;
    public User withProfileImage(String profileImage) {
        this.profileImage = profileImage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summary")
    public String summary;
    public User withSummary(String summary) {
        this.summary = summary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("twitter_username")
    public String twitterUsername;
    public User withTwitterUsername(String twitterUsername) {
        this.twitterUsername = twitterUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type_of")
    public String typeOf;
    public User withTypeOf(String typeOf) {
        this.typeOf = typeOf;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public User withUsername(String username) {
        this.username = username;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("website_url")
    public String websiteUrl;
    public User withWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }
    
}
