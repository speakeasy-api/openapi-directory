// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StackSetOperationStatusEnum string

const (
	StackSetOperationStatusEnumRunning   StackSetOperationStatusEnum = "RUNNING"
	StackSetOperationStatusEnumSucceeded StackSetOperationStatusEnum = "SUCCEEDED"
	StackSetOperationStatusEnumFailed    StackSetOperationStatusEnum = "FAILED"
	StackSetOperationStatusEnumStopping  StackSetOperationStatusEnum = "STOPPING"
	StackSetOperationStatusEnumStopped   StackSetOperationStatusEnum = "STOPPED"
	StackSetOperationStatusEnumQueued    StackSetOperationStatusEnum = "QUEUED"
)

func (e StackSetOperationStatusEnum) ToPointer() *StackSetOperationStatusEnum {
	return &e
}

func (e *StackSetOperationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "QUEUED":
		*e = StackSetOperationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StackSetOperationStatusEnum: %v", v)
	}
}
