// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListUsageRecordServerList = []string{
	"https://wireless.twilio.com",
}

type ListUsageRecordSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListUsageRecordRequest struct {
	// Only include usage that occurred on or before this date, specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html). The default is the current time.
	End *time.Time `queryParam:"style=form,explode=true,name=End"`
	// How to summarize the usage by time. Can be: `daily`, `hourly`, or `all`. The default is `all`. A value of `all` returns one Usage Record that describes the usage for the entire period.
	Granularity *shared.UsageRecordEnumGranularityEnum `queryParam:"style=form,explode=true,name=Granularity"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The SID of the [Sim resource](https://www.twilio.com/docs/wireless/api/sim-resource)  to read the usage from.
	SimSid string `pathParam:"style=simple,explode=false,name=SimSid"`
	// Only include usage that has occurred on or after this date, specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html). The default is one month before the `end` parameter value.
	Start *time.Time `queryParam:"style=form,explode=true,name=Start"`
}

type ListUsageRecordListUsageRecordResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListUsageRecordListUsageRecordResponse - OK
type ListUsageRecordListUsageRecordResponse struct {
	Meta         *ListUsageRecordListUsageRecordResponseMeta `json:"meta,omitempty"`
	UsageRecords []shared.WirelessV1SimUsageRecord           `json:"usage_records,omitempty"`
}

type ListUsageRecordResponse struct {
	ContentType string
	// OK
	ListUsageRecordResponse *ListUsageRecordListUsageRecordResponse
	StatusCode              int
	RawResponse             *http.Response
}
