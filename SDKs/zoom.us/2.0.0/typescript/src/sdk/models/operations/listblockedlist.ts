/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListBlockedListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListBlockedListRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The total number of records returned from a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;
}

/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
export enum ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum {
  Inbound = "inbound",
  Outbound = "outbound",
}

/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
export enum ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum {
  PhoneNumber = "phoneNumber",
  Prefix = "prefix",
}

/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
export enum ListBlockedList200ApplicationXMLBlockedListStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class ListBlockedList200ApplicationXMLBlockedList extends SpeakeasyBase {
  /**
   * Block type.<br>
   *
   * @remarks
   * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
   * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
   */
  @SpeakeasyMetadata()
  blockType?: ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum;

  /**
   * Provide a comment to help you identify the blocked number or prefix.
   */
  @SpeakeasyMetadata()
  comment?: string;

  /**
   * Unique identifier of the blocked list.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Indicates the match type for the blocked list. The values can be one of the following:<br>
   *
   * @remarks
   * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
   * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
   */
  @SpeakeasyMetadata()
  matchType?: ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum;

  /**
   * The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;

  /**
   * Indicates whether the blocking is active or inactive. <br>
   *
   * @remarks
   * `active`: The blocked list is active.<br>
   * `inactive`: The blocked list is inactive.
   */
  @SpeakeasyMetadata()
  status?: ListBlockedList200ApplicationXMLBlockedListStatusEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list returned successfully.
 */
export class ListBlockedList200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListBlockedList200ApplicationXMLBlockedList })
  blockedList?: ListBlockedList200ApplicationXMLBlockedList[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The total number of records returned from a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * The total number of records found for this query.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
export enum ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum {
  Inbound = "inbound",
  Outbound = "outbound",
}

/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
export enum ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum {
  PhoneNumber = "phoneNumber",
  Prefix = "prefix",
}

/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
export enum ListBlockedList200ApplicationJSONBlockedListStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class ListBlockedList200ApplicationJSONBlockedList extends SpeakeasyBase {
  /**
   * Block type.<br>
   *
   * @remarks
   * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
   * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "block_type" })
  blockType?: ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum;

  /**
   * Provide a comment to help you identify the blocked number or prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * Unique identifier of the blocked list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Indicates the match type for the blocked list. The values can be one of the following:<br>
   *
   * @remarks
   * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
   * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "match_type" })
  matchType?: ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum;

  /**
   * The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Indicates whether the blocking is active or inactive. <br>
   *
   * @remarks
   * `active`: The blocked list is active.<br>
   * `inactive`: The blocked list is inactive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ListBlockedList200ApplicationJSONBlockedListStatusEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list returned successfully.
 */
export class ListBlockedList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListBlockedList200ApplicationJSONBlockedList })
  @Expose({ name: "blocked_list" })
  @Type(() => ListBlockedList200ApplicationJSONBlockedList)
  blockedList?: ListBlockedList200ApplicationJSONBlockedList[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The total number of records returned from a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * The total number of records found for this query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListBlockedListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Blocked list returned successfully.
   */
  @SpeakeasyMetadata()
  listBlockedList200ApplicationJSONObject?: ListBlockedList200ApplicationJSON;
}
