/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Environment } from "./environment";
import { RobotSoftwareSuite } from "./robotsoftwaresuite";
import { Source } from "./source";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeRobotApplicationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  @Type(() => Environment)
  environment?: Environment;

  @SpeakeasyMetadata()
  @Expose({ name: "imageDigest" })
  imageDigest?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "revisionId" })
  revisionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "robotSoftwareSuite" })
  @Type(() => RobotSoftwareSuite)
  robotSoftwareSuite?: RobotSoftwareSuite;

  @SpeakeasyMetadata({ elemType: Source })
  @Expose({ name: "sources" })
  @Type(() => Source)
  sources?: Source[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
