<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NHFossilGroupWithIndividualFossils - A JSON object describing the fossil group.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NHFossilGroupWithIndividualFossils
{
    /**
     * A description of the fossil group.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * An array of objects, each object representing a fossil that belongs to the given group.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NHFossilGroupWithIndividualFossilsFossils> $fossils
     */
	#[\JMS\Serializer\Annotation\SerializedName('fossils')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NHFossilGroupWithIndividualFossilsFossils>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fossils = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('matched')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NHFossilGroupWithIndividualFossilsMatched')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NHFossilGroupWithIndividualFossilsMatched $matched = null;
    
    /**
     * The name of the fossil group.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The room where the fossil group can be found in the museum's fossil section.
     * 
     * @var ?int $room
     */
	#[\JMS\Serializer\Annotation\SerializedName('room')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $room = null;
    
    /**
     * Link to the respective Nookipedia article.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->fossils = null;
		$this->matched = null;
		$this->name = null;
		$this->room = null;
		$this->url = null;
	}
}
