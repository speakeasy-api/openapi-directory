"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OwnerOpeningBalanceInPeriodsDto:
    r"""OK"""
    
    current_month: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentMonth'), 'exclude': lambda f: f is None }})  
    one_month_old: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oneMonthOld'), 'exclude': lambda f: f is None }})  
    three_months_old: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threeMonthsOld'), 'exclude': lambda f: f is None }})  
    two_months_old: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('twoMonthsOld'), 'exclude': lambda f: f is None }})  
    