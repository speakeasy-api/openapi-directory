// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type MergeTemplatesRequest struct {
	// Data used to specify templates and data objects which are used to merge the template
	RequestBody []shared.BatchData `request:"mediaType=application/json"`
	// Document format. The zip option will return a ZIP file with PDF files.
	Format *shared.FormatEnum `queryParam:"style=form,explode=true,name=format"`
	// Document name, returned in the meta data.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Response format. With the url option, the document is stored for 30 days and automatically deleted.
	Output *shared.OutputEnum `queryParam:"style=form,explode=true,name=output"`
}

// MergeTemplates500ApplicationJSON - Internal Server Error
type MergeTemplates500ApplicationJSON struct {
	// Error description
	Error *string `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// MergeTemplates422ApplicationJSONErrorEnum - Error description
type MergeTemplates422ApplicationJSONErrorEnum string

const (
	MergeTemplates422ApplicationJSONErrorEnumUnableToParseJSONPleaseCheckFormatting               MergeTemplates422ApplicationJSONErrorEnum = "Unable to parse JSON, please check formatting"
	MergeTemplates422ApplicationJSONErrorEnumRequiredParameterMissing                             MergeTemplates422ApplicationJSONErrorEnum = "Required parameter missing"
	MergeTemplates422ApplicationJSONErrorEnumRequiredParameterMissingTemplateDefinitionNotDefined MergeTemplates422ApplicationJSONErrorEnum = "Required parameter missing: template definition not defined"
	MergeTemplates422ApplicationJSONErrorEnumRequiredParameterMissingTemplateNotDefined           MergeTemplates422ApplicationJSONErrorEnum = "Required parameter missing: template not defined"
)

func (e *MergeTemplates422ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unable to parse JSON, please check formatting":
		fallthrough
	case "Required parameter missing":
		fallthrough
	case "Required parameter missing: template definition not defined":
		fallthrough
	case "Required parameter missing: template not defined":
		*e = MergeTemplates422ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MergeTemplates422ApplicationJSONErrorEnum: %s", s)
	}
}

// MergeTemplates422ApplicationJSON - Unprocessable Entity
type MergeTemplates422ApplicationJSON struct {
	// Error description
	Error *MergeTemplates422ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// MergeTemplates404ApplicationJSONErrorEnum - Error description
type MergeTemplates404ApplicationJSONErrorEnum string

const (
	MergeTemplates404ApplicationJSONErrorEnumEntityNotFound                               MergeTemplates404ApplicationJSONErrorEnum = "Entity not found"
	MergeTemplates404ApplicationJSONErrorEnumResourceNotFound                             MergeTemplates404ApplicationJSONErrorEnum = "Resource not found"
	MergeTemplates404ApplicationJSONErrorEnumNoneOfTheTemplatesIsAvailableForTheWorkspace MergeTemplates404ApplicationJSONErrorEnum = "None of the templates is available for the workspace."
)

func (e *MergeTemplates404ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Entity not found":
		fallthrough
	case "Resource not found":
		fallthrough
	case "None of the templates is available for the workspace.":
		*e = MergeTemplates404ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MergeTemplates404ApplicationJSONErrorEnum: %s", s)
	}
}

// MergeTemplates404ApplicationJSON - Not Found
type MergeTemplates404ApplicationJSON struct {
	// Error description
	Error *MergeTemplates404ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// MergeTemplates403ApplicationJSONErrorEnum - Error description
type MergeTemplates403ApplicationJSONErrorEnum string

const (
	MergeTemplates403ApplicationJSONErrorEnumYourAccountHasExceededTheMonthlyDocumentGenerationLimit MergeTemplates403ApplicationJSONErrorEnum = "Your account has exceeded the monthly document generation limit."
)

func (e *MergeTemplates403ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Your account has exceeded the monthly document generation limit.":
		*e = MergeTemplates403ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MergeTemplates403ApplicationJSONErrorEnum: %s", s)
	}
}

// MergeTemplates403ApplicationJSON - Forbidden
type MergeTemplates403ApplicationJSON struct {
	// Error description
	Error *MergeTemplates403ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// MergeTemplates401ApplicationJSONErrorEnum - Error description
type MergeTemplates401ApplicationJSONErrorEnum string

const (
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedRequestExpired                        MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: request expired"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedSignatureOrSecretMissing              MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: signature or secret missing"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedWorkspaceMissing                      MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: workspace missing"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedKeyMissing                            MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: key missing"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedPropertyIssIssuerMissingInJwt         MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: property 'iss' (issuer) missing in JWT"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedPropertySubSubjectMissingInJwt        MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: property 'sub' (subject) missing in JWT"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedPropertyExpExpirationTimeMissingInJwt MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: property 'exp' (expiration time) missing in JWT"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedInvalidIssIssuer                      MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: invalid 'iss' (issuer)"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailedIncorrectSignature                    MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed: incorrect signature"
	MergeTemplates401ApplicationJSONErrorEnumAuthenticationFailed                                      MergeTemplates401ApplicationJSONErrorEnum = "Authentication failed"
)

func (e *MergeTemplates401ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Authentication failed: request expired":
		fallthrough
	case "Authentication failed: signature or secret missing":
		fallthrough
	case "Authentication failed: workspace missing":
		fallthrough
	case "Authentication failed: key missing":
		fallthrough
	case "Authentication failed: property 'iss' (issuer) missing in JWT":
		fallthrough
	case "Authentication failed: property 'sub' (subject) missing in JWT":
		fallthrough
	case "Authentication failed: property 'exp' (expiration time) missing in JWT":
		fallthrough
	case "Authentication failed: invalid 'iss' (issuer)":
		fallthrough
	case "Authentication failed: incorrect signature":
		fallthrough
	case "Authentication failed":
		*e = MergeTemplates401ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MergeTemplates401ApplicationJSONErrorEnum: %s", s)
	}
}

// MergeTemplates401ApplicationJSON - Unauthorized
type MergeTemplates401ApplicationJSON struct {
	// Error description
	Error *MergeTemplates401ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

type MergeTemplates200ApplicationJSONMeta struct {
	// Document content type.
	ContentType *string `json:"content-type,omitempty"`
	// Document name without the file extension.
	DisplayName *string `json:"display_name,omitempty"`
	// Document encoding
	Encoding *string `json:"encoding,omitempty"`
	// Document name. This value is automatically generated if name attribute is not defined in request.
	Name *string `json:"name,omitempty"`
}

// MergeTemplates200ApplicationJSON - Document data
type MergeTemplates200ApplicationJSON struct {
	Meta *MergeTemplates200ApplicationJSONMeta `json:"meta,omitempty"`
	// Base64 encoded document if the output=base64 is used or URL to the document when the output=url is used.
	Response *string `json:"response,omitempty"`
}

type MergeTemplatesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Document data
	MergeTemplates200ApplicationJSONObject *MergeTemplates200ApplicationJSON
	// Unauthorized
	MergeTemplates401ApplicationJSONObject *MergeTemplates401ApplicationJSON
	// Forbidden
	MergeTemplates403ApplicationJSONObject *MergeTemplates403ApplicationJSON
	// Not Found
	MergeTemplates404ApplicationJSONObject *MergeTemplates404ApplicationJSON
	// Unprocessable Entity
	MergeTemplates422ApplicationJSONObject *MergeTemplates422ApplicationJSON
	// Internal Server Error
	MergeTemplates500ApplicationJSONObject *MergeTemplates500ApplicationJSON
}
