// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableGraphTypeEnum string

const (
	WritableGraphTypeEnumOneHundred   WritableGraphTypeEnum = "100"
	WritableGraphTypeEnumTwoHundred   WritableGraphTypeEnum = "200"
	WritableGraphTypeEnumThreeHundred WritableGraphTypeEnum = "300"
)

func (e *WritableGraphTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "100":
		fallthrough
	case "200":
		fallthrough
	case "300":
		*e = WritableGraphTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableGraphTypeEnum: %s", s)
	}
}

type WritableGraphInput struct {
	Link   *string               `json:"link,omitempty"`
	Name   string                `json:"name"`
	Source string                `json:"source"`
	Type   WritableGraphTypeEnum `json:"type"`
	Weight *int64                `json:"weight,omitempty"`
}
