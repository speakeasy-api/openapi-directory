/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillbeeInterfacesBillbeeAPIModelCommentAPIModel } from "./billbeeinterfacesbillbeeapimodelcommentapimodel";
import {
  BillbeeInterfacesBillbeeAPIModelCustomerAPIModel,
  BillbeeInterfacesBillbeeAPIModelCustomerAPIModelInput,
} from "./billbeeinterfacesbillbeeapimodelcustomerapimodel";
import { BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel } from "./billbeeinterfacesbillbeeapimodelorderaddressapimodel";
import {
  BillbeeInterfacesBillbeeAPIModelOrderItem,
  BillbeeInterfacesBillbeeAPIModelOrderItemInput,
} from "./billbeeinterfacesbillbeeapimodelorderitem";
import {
  BillbeeInterfacesBillbeeAPIModelOrderUser,
  BillbeeInterfacesBillbeeAPIModelOrderUserInput,
} from "./billbeeinterfacesbillbeeapimodelorderuser";
import { BillbeeInterfacesBillbeeAPIModelShipment } from "./billbeeinterfacesbillbeeapimodelshipment";
import { BillbeeInterfacesBillbeeAPIModelsOrderPayment } from "./billbeeinterfacesbillbeeapimodelsorderpayment";
import { BillbeeInterfacesOrderHistoryEntry } from "./billbeeinterfacesorderhistoryentry";
import { BillbeeInterfacesShippingProductService } from "./billbeeinterfacesshippingproductservice";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The payment method
 */
export enum BillbeeInterfacesBillbeeAPIModelOrderPaymentMethodEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Six = "6",
  Nineteen = "19",
  Twenty = "20",
  TwentyOne = "21",
  TwentyTwo = "22",
  TwentyThree = "23",
  TwentyFour = "24",
  TwentyFive = "25",
  TwentySix = "26",
  TwentySeven = "27",
  TwentyEight = "28",
  TwentyNine = "29",
  Thirty = "30",
  ThirtyOne = "31",
  ThirtyTwo = "32",
  ThirtyThree = "33",
  ThirtyFour = "34",
  ThirtyFive = "35",
  ThirtySix = "36",
  ThirtySeven = "37",
  ThirtyEight = "38",
  ThirtyNine = "39",
  Forty = "40",
  FortyOne = "41",
  FortyTwo = "42",
  FortyThree = "43",
  FortyFour = "44",
  FortyFive = "45",
  FortySix = "46",
  FortySeven = "47",
  FortyEight = "48",
  FortyNine = "49",
  Fifty = "50",
  FiftyOne = "51",
  FiftyTwo = "52",
  FiftyThree = "53",
  FiftyFour = "54",
  FiftyFive = "55",
  FiftySix = "56",
  FiftySeven = "57",
  FiftyEight = "58",
  FiftyNine = "59",
  Sixty = "60",
  SixtyOne = "61",
  SixtyTwo = "62",
  SixtyThree = "63",
  SixtyFour = "64",
  SixtyFive = "65",
  SixtySix = "66",
  SixtySeven = "67",
  SixtyEight = "68",
  SixtyNine = "69",
  Seventy = "70",
  SeventyOne = "71",
  SeventyTwo = "72",
  SeventyThree = "73",
  SeventyFour = "74",
  SeventyFive = "75",
  SeventySix = "76",
  SeventySeven = "77",
  SeventyEight = "78",
  SeventyNine = "79",
  Eighty = "80",
  EightyOne = "81",
  EightyTwo = "82",
  EightyThree = "83",
  EightyFour = "84",
  EightyFive = "85",
  EightySix = "86",
  EightySeven = "87",
  EightyEight = "88",
  EightyNine = "89",
  Ninety = "90",
  NinetyOne = "91",
  NinetyTwo = "92",
  NinetyThree = "93",
  NinetyFour = "94",
  NinetyFive = "95",
  NinetySix = "96",
  NinetySeven = "97",
  NinetyEight = "98",
  NinetyNine = "99",
  OneHundred = "100",
  OneHundredAndOne = "101",
  OneHundredAndTwo = "102",
  OneHundredAndThree = "103",
  OneHundredAndFour = "104",
  OneHundredAndFive = "105",
  OneHundredAndSix = "106",
  OneHundredAndSeven = "107",
  OneHundredAndEight = "108",
  OneHundredAndNine = "109",
  OneHundredAndTen = "110",
  OneHundredAndEleven = "111",
  OneHundredAndTwelve = "112",
  OneHundredAndThirteen = "113",
  OneHundredAndFourteen = "114",
  OneHundredAndFifteen = "115",
  OneHundredAndSixteen = "116",
  OneHundredAndSeventeen = "117",
  OneHundredAndEighteen = "118",
  OneHundredAndNineteen = "119",
  OneHundredAndTwenty = "120",
  OneHundredAndTwentyOne = "121",
  OneHundredAndTwentyTwo = "122",
  OneHundredAndTwentyThree = "123",
  OneHundredAndTwentyFour = "124",
  OneHundredAndTwentyFive = "125",
  OneHundredAndTwentySix = "126",
  OneHundredAndTwentySeven = "127",
  OneHundredAndTwentyEight = "128",
  OneHundredAndTwentyNine = "129",
  OneHundredAndThirty = "130",
  OneHundredAndThirtyOne = "131",
  OneHundredAndThirtyTwo = "132",
  OneHundredAndThirtyThree = "133",
  OneHundredAndThirtyFour = "134",
  OneHundredAndThirtyFive = "135",
  OneHundredAndThirtySix = "136",
}

/**
 * The current state of the order
 */
export enum BillbeeInterfacesBillbeeAPIModelOrderStateEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  Six = "6",
  Seven = "7",
  Eight = "8",
  Nine = "9",
  Ten = "10",
  Eleven = "11",
  Twelve = "12",
  Thirteen = "13",
  Fourteen = "14",
  Fifteen = "15",
  Sixteen = "16",
}

/**
 * The vat mode of the order
 */
export enum BillbeeInterfacesBillbeeAPIModelOrderVatModeEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
}

/**
 * A class that represents the Billbee data model of a single order
 */
export class BillbeeInterfacesBillbeeAPIModelOrderInput extends SpeakeasyBase {
  /**
   * Customer accepts loss due to withdrawal
   */
  @SpeakeasyMetadata({ data: "form, name=AcceptLossOfReturnRight" })
  @Expose({ name: "AcceptLossOfReturnRight" })
  acceptLossOfReturnRight?: boolean;

  @SpeakeasyMetadata({ data: "form, name=AdjustmentCost" })
  @Expose({ name: "AdjustmentCost" })
  adjustmentCost?: number;

  @SpeakeasyMetadata({ data: "form, name=AdjustmentReason" })
  @Expose({ name: "AdjustmentReason" })
  adjustmentReason?: string;

  /**
   * Id of the account, this order belongs to
   */
  @SpeakeasyMetadata({ data: "form, name=ApiAccountId" })
  @Expose({ name: "ApiAccountId" })
  apiAccountId?: number;

  /**
   * The name of the account, this order belongs to. Will be ignored on order creation.
   */
  @SpeakeasyMetadata({ data: "form, name=ApiAccountName" })
  @Expose({ name: "ApiAccountName" })
  apiAccountName?: string;

  /**
   * If set, the order was already archived at the given date. Further modification is disabled.
   */
  @SpeakeasyMetadata({
    data: "form, name=ArchivedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "ArchivedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  archivedAt?: Date;

  /**
   * The Order.Id from the Billbee database
   */
  @SpeakeasyMetadata({ data: "form, name=BillBeeOrderId" })
  @Expose({ name: "BillBeeOrderId" })
  billBeeOrderId?: number;

  /**
   * The Id of the parent order in the Billbee database
   */
  @SpeakeasyMetadata({ data: "form, name=BillBeeParentOrderId" })
  @Expose({ name: "BillBeeParentOrderId" })
  billBeeParentOrderId?: number;

  @SpeakeasyMetadata({ data: "form, name=Buyer;json=true" })
  @Expose({ name: "Buyer" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderUserInput)
  buyer?: BillbeeInterfacesBillbeeAPIModelOrderUserInput;

  /**
   * All messages / comments of the order
   */
  @SpeakeasyMetadata({
    data: "form, name=Comments;json=true",
    elemType: BillbeeInterfacesBillbeeAPIModelCommentAPIModel,
  })
  @Expose({ name: "Comments" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelCommentAPIModel)
  comments?: BillbeeInterfacesBillbeeAPIModelCommentAPIModel[];

  /**
   * The date on which the order was confirmed
   */
  @SpeakeasyMetadata({
    data: "form, name=ConfirmedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "ConfirmedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  confirmedAt?: Date;

  /**
   * The date on which the order was created
   */
  @SpeakeasyMetadata({
    data: "form, name=CreatedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The three letter currency code.
   */
  @SpeakeasyMetadata({ data: "form, name=Currency" })
  @Expose({ name: "Currency" })
  currency?: string;

  /**
   * An optional multiline text which is printed on the invoice
   */
  @SpeakeasyMetadata({ data: "form, name=CustomInvoiceNote" })
  @Expose({ name: "CustomInvoiceNote" })
  customInvoiceNote?: string;

  @SpeakeasyMetadata({ data: "form, name=Customer;json=true" })
  @Expose({ name: "Customer" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelCustomerAPIModelInput)
  customer?: BillbeeInterfacesBillbeeAPIModelCustomerAPIModelInput;

  /**
   * The customer number (not to be confused with the id of the customer)
   */
  @SpeakeasyMetadata({ data: "form, name=CustomerNumber" })
  @Expose({ name: "CustomerNumber" })
  customerNumber?: string;

  /**
   * The vat-id, that was given by the customer to fulfill this order
   */
  @SpeakeasyMetadata({ data: "form, name=CustomerVatId" })
  @Expose({ name: "CustomerVatId" })
  customerVatId?: string;

  /**
   * An optional Country ISO2 Code of the country where order is shipped from (FBA)
   */
  @SpeakeasyMetadata({ data: "form, name=DeliverySourceCountryCode" })
  @Expose({ name: "DeliverySourceCountryCode" })
  deliverySourceCountryCode?: string;

  /**
   * An optional code for the distribution center delivering this order
   */
  @SpeakeasyMetadata({ data: "form, name=DistributionCenter" })
  @Expose({ name: "DistributionCenter" })
  distributionCenter?: string;

  @SpeakeasyMetadata({
    data: "form, name=History;json=true",
    elemType: BillbeeInterfacesOrderHistoryEntry,
  })
  @Expose({ name: "History" })
  @Type(() => BillbeeInterfacesOrderHistoryEntry)
  history?: BillbeeInterfacesOrderHistoryEntry[];

  /**
   * Id of the order in the external system (marketplace)
   */
  @SpeakeasyMetadata({ data: "form, name=Id" })
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata({ data: "form, name=InvoiceAddress;json=true" })
  @Expose({ name: "InvoiceAddress" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel)
  invoiceAddress?: BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel;

  /**
   * The date on which the invoice was created
   */
  @SpeakeasyMetadata({
    data: "form, name=InvoiceDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "InvoiceDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  invoiceDate?: Date;

  /**
   * The invoice number
   */
  @SpeakeasyMetadata({ data: "form, name=InvoiceNumber" })
  @Expose({ name: "InvoiceNumber" })
  invoiceNumber?: number;

  /**
   * The postfix of the invoice number
   */
  @SpeakeasyMetadata({ data: "form, name=InvoiceNumberPostfix" })
  @Expose({ name: "InvoiceNumberPostfix" })
  invoiceNumberPostfix?: string;

  /**
   * The prefix of the invoice number
   */
  @SpeakeasyMetadata({ data: "form, name=InvoiceNumberPrefix" })
  @Expose({ name: "InvoiceNumberPrefix" })
  invoiceNumberPrefix?: string;

  /**
   * An optional Order Id (externalid) for an order if this is a cancel order (shopify only at the moment)
   */
  @SpeakeasyMetadata({ data: "form, name=IsCancelationFor" })
  @Expose({ name: "IsCancelationFor" })
  isCancelationFor?: string;

  /**
   * Indicates whether the order was created through the Billbee-Api or not.
   */
  @SpeakeasyMetadata({ data: "form, name=IsFromBillbeeApi" })
  @Expose({ name: "IsFromBillbeeApi" })
  isFromBillbeeApi?: boolean;

  /**
   * The two-letter language code of the customer
   */
  @SpeakeasyMetadata({ data: "form, name=LanguageCode" })
  @Expose({ name: "LanguageCode" })
  languageCode?: string;

  /**
   * Date of the last update, the order got
   */
  @SpeakeasyMetadata({
    data: "form, name=LastModifiedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "LastModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt?: Date;

  /**
   * The vat-id, that should be displayed on the invoice and other order documents
   */
  @SpeakeasyMetadata({ data: "form, name=MerchantVatId" })
  @Expose({ name: "MerchantVatId" })
  merchantVatId?: string;

  /**
   * The list of items purchased like shirt, pant, toys etc
   */
  @SpeakeasyMetadata({
    data: "form, name=OrderItems;json=true",
    elemType: BillbeeInterfacesBillbeeAPIModelOrderItemInput,
  })
  @Expose({ name: "OrderItems" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderItemInput)
  orderItems?: BillbeeInterfacesBillbeeAPIModelOrderItemInput[];

  /**
   * Order number of the order in the external system (marketplace)
   */
  @SpeakeasyMetadata({ data: "form, name=OrderNumber" })
  @Expose({ name: "OrderNumber" })
  orderNumber?: string;

  @SpeakeasyMetadata({ data: "form, name=PaidAmount" })
  @Expose({ name: "PaidAmount" })
  paidAmount?: number;

  /**
   * The date on which the order was paid
   */
  @SpeakeasyMetadata({
    data: "form, name=PayedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "PayedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  payedAt?: Date;

  /**
   * A textfield optionaly filled with a payment instruction text for printout on the invoice (z.B. Ebay Kauf auf Rechnung)
   */
  @SpeakeasyMetadata({ data: "form, name=PaymentInstruction" })
  @Expose({ name: "PaymentInstruction" })
  paymentInstruction?: string;

  /**
   * The payment method
   */
  @SpeakeasyMetadata({ data: "form, name=PaymentMethod" })
  @Expose({ name: "PaymentMethod" })
  paymentMethod?: BillbeeInterfacesBillbeeAPIModelOrderPaymentMethodEnum;

  /**
   * A payment reference. Should not be used any more. Please use 'Payments' instead.
   */
  @SpeakeasyMetadata({ data: "form, name=PaymentReference" })
  @Expose({ name: "PaymentReference" })
  paymentReference?: string;

  /**
   * The id of the payment transaction. For example the transaction id of PayPal payment. Should not be used any more. Please use 'Payments' instead.
   */
  @SpeakeasyMetadata({ data: "form, name=PaymentTransactionId" })
  @Expose({ name: "PaymentTransactionId" })
  paymentTransactionId?: string;

  @SpeakeasyMetadata({
    data: "form, name=Payments;json=true",
    elemType: BillbeeInterfacesBillbeeAPIModelsOrderPayment,
  })
  @Expose({ name: "Payments" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelsOrderPayment)
  payments?: BillbeeInterfacesBillbeeAPIModelsOrderPayment[];

  /**
   * If set, the order was restored from the archive at the given date.
   */
  @SpeakeasyMetadata({
    data: "form, name=RestoredAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "RestoredAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  restoredAt?: Date;

  @SpeakeasyMetadata({ data: "form, name=Seller;json=true" })
  @Expose({ name: "Seller" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderUserInput)
  seller?: BillbeeInterfacesBillbeeAPIModelOrderUserInput;

  /**
   * An internal seller comment
   */
  @SpeakeasyMetadata({ data: "form, name=SellerComment" })
  @Expose({ name: "SellerComment" })
  sellerComment?: string;

  /**
   * The total weight of the shipment(s)
   */
  @SpeakeasyMetadata({ data: "form, name=ShipWeightKg" })
  @Expose({ name: "ShipWeightKg" })
  shipWeightKg?: number;

  /**
   * The date on which the order was shipped
   */
  @SpeakeasyMetadata({
    data: "form, name=ShippedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "ShippedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  shippedAt?: Date;

  @SpeakeasyMetadata({ data: "form, name=ShippingAddress;json=true" })
  @Expose({ name: "ShippingAddress" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel)
  shippingAddress?: BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel;

  /**
   * The shipping cost
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingCost" })
  @Expose({ name: "ShippingCost" })
  shippingCost?: number;

  /**
   * The shipments of the order
   */
  @SpeakeasyMetadata({
    data: "form, name=ShippingIds;json=true",
    elemType: BillbeeInterfacesBillbeeAPIModelShipment,
  })
  @Expose({ name: "ShippingIds" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelShipment)
  shippingIds?: BillbeeInterfacesBillbeeAPIModelShipment[];

  /**
   * Internal Id for the shipping profile for that order
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingProfileId" })
  @Expose({ name: "ShippingProfileId" })
  shippingProfileId?: string;

  /**
   * Display Name of Shipping profile, if available
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingProfileName" })
  @Expose({ name: "ShippingProfileName" })
  shippingProfileName?: string;

  /**
   * Internal Id for the used shipping provider
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingProviderId" })
  @Expose({ name: "ShippingProviderId" })
  shippingProviderId?: number;

  /**
   * The Name for of used shipping provider
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingProviderName" })
  @Expose({ name: "ShippingProviderName" })
  shippingProviderName?: string;

  /**
   * Internal Id for the used shipping product
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingProviderProductId" })
  @Expose({ name: "ShippingProviderProductId" })
  shippingProviderProductId?: number;

  /**
   * The Name of the used shipping product
   */
  @SpeakeasyMetadata({ data: "form, name=ShippingProviderProductName" })
  @Expose({ name: "ShippingProviderProductName" })
  shippingProviderProductName?: string;

  /**
   * The current state of the order
   */
  @SpeakeasyMetadata({ data: "form, name=State" })
  @Expose({ name: "State" })
  state?: BillbeeInterfacesBillbeeAPIModelOrderStateEnum;

  /**
   * The Tags of the order
   */
  @SpeakeasyMetadata({ data: "form, name=Tags" })
  @Expose({ name: "Tags" })
  tags?: string[];

  /**
   * The regular tax rate
   */
  @SpeakeasyMetadata({ data: "form, name=TaxRate1" })
  @Expose({ name: "TaxRate1" })
  taxRate1?: number;

  /**
   * The reduced tax rate
   */
  @SpeakeasyMetadata({ data: "form, name=TaxRate2" })
  @Expose({ name: "TaxRate2" })
  taxRate2?: number;

  /**
   * The total cost excluding shipping cost
   */
  @SpeakeasyMetadata({ data: "form, name=TotalCost" })
  @Expose({ name: "TotalCost" })
  totalCost?: number;

  /**
   * The date on which the order was last updated
   */
  @SpeakeasyMetadata({
    data: "form, name=UpdatedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The customers vat id
   */
  @SpeakeasyMetadata({ data: "form, name=VatId" })
  @Expose({ name: "VatId" })
  vatId?: string;

  /**
   * The vat mode of the order
   */
  @SpeakeasyMetadata({ data: "form, name=VatMode" })
  @Expose({ name: "VatMode" })
  vatMode?: BillbeeInterfacesBillbeeAPIModelOrderVatModeEnum;
}

/**
 * A class that represents the Billbee data model of a single order
 */
export class BillbeeInterfacesBillbeeAPIModelOrder extends SpeakeasyBase {
  /**
   * Customer accepts loss due to withdrawal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AcceptLossOfReturnRight" })
  acceptLossOfReturnRight?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AdjustmentCost" })
  adjustmentCost?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AdjustmentReason" })
  adjustmentReason?: string;

  /**
   * Id of the account, this order belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApiAccountId" })
  apiAccountId?: number;

  /**
   * The name of the account, this order belongs to. Will be ignored on order creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApiAccountName" })
  apiAccountName?: string;

  /**
   * If set, the order was already archived at the given date. Further modification is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ArchivedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  archivedAt?: Date;

  /**
   * The Order.Id from the Billbee database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillBeeOrderId" })
  billBeeOrderId?: number;

  /**
   * The Id of the parent order in the Billbee database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillBeeParentOrderId" })
  billBeeParentOrderId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Buyer" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderUser)
  buyer?: BillbeeInterfacesBillbeeAPIModelOrderUser;

  /**
   * All messages / comments of the order
   */
  @SpeakeasyMetadata({
    elemType: BillbeeInterfacesBillbeeAPIModelCommentAPIModel,
  })
  @Expose({ name: "Comments" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelCommentAPIModel)
  comments?: BillbeeInterfacesBillbeeAPIModelCommentAPIModel[];

  /**
   * The date on which the order was confirmed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ConfirmedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  confirmedAt?: Date;

  /**
   * The date on which the order was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The three letter currency code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Currency" })
  currency?: string;

  /**
   * An optional multiline text which is printed on the invoice
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomInvoiceNote" })
  customInvoiceNote?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Customer" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelCustomerAPIModel)
  customer?: BillbeeInterfacesBillbeeAPIModelCustomerAPIModel;

  /**
   * The customer number (not to be confused with the id of the customer)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerNumber" })
  customerNumber?: string;

  /**
   * The vat-id, that was given by the customer to fulfill this order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerVatId" })
  customerVatId?: string;

  /**
   * An optional Country ISO2 Code of the country where order is shipped from (FBA)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeliverySourceCountryCode" })
  deliverySourceCountryCode?: string;

  /**
   * An optional code for the distribution center delivering this order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DistributionCenter" })
  distributionCenter?: string;

  @SpeakeasyMetadata({ elemType: BillbeeInterfacesOrderHistoryEntry })
  @Expose({ name: "History" })
  @Type(() => BillbeeInterfacesOrderHistoryEntry)
  history?: BillbeeInterfacesOrderHistoryEntry[];

  /**
   * Id of the order in the external system (marketplace)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceAddress" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel)
  invoiceAddress?: BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel;

  /**
   * The date on which the invoice was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  invoiceDate?: Date;

  /**
   * The invoice number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceNumber" })
  invoiceNumber?: number;

  /**
   * The postfix of the invoice number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceNumberPostfix" })
  invoiceNumberPostfix?: string;

  /**
   * The prefix of the invoice number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceNumberPrefix" })
  invoiceNumberPrefix?: string;

  /**
   * An optional Order Id (externalid) for an order if this is a cancel order (shopify only at the moment)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsCancelationFor" })
  isCancelationFor?: string;

  /**
   * Indicates whether the order was created through the Billbee-Api or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsFromBillbeeApi" })
  isFromBillbeeApi?: boolean;

  /**
   * The two-letter language code of the customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LanguageCode" })
  languageCode?: string;

  /**
   * Date of the last update, the order got
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt?: Date;

  /**
   * The vat-id, that should be displayed on the invoice and other order documents
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MerchantVatId" })
  merchantVatId?: string;

  /**
   * The list of items purchased like shirt, pant, toys etc
   */
  @SpeakeasyMetadata({ elemType: BillbeeInterfacesBillbeeAPIModelOrderItem })
  @Expose({ name: "OrderItems" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderItem)
  orderItems?: BillbeeInterfacesBillbeeAPIModelOrderItem[];

  /**
   * Order number of the order in the external system (marketplace)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OrderNumber" })
  orderNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PaidAmount" })
  paidAmount?: number;

  /**
   * The date on which the order was paid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  payedAt?: Date;

  /**
   * A textfield optionaly filled with a payment instruction text for printout on the invoice (z.B. Ebay Kauf auf Rechnung)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentInstruction" })
  paymentInstruction?: string;

  /**
   * The payment method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentMethod" })
  paymentMethod?: BillbeeInterfacesBillbeeAPIModelOrderPaymentMethodEnum;

  /**
   * A payment reference. Should not be used any more. Please use 'Payments' instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentReference" })
  paymentReference?: string;

  /**
   * The id of the payment transaction. For example the transaction id of PayPal payment. Should not be used any more. Please use 'Payments' instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentTransactionId" })
  paymentTransactionId?: string;

  @SpeakeasyMetadata({
    elemType: BillbeeInterfacesBillbeeAPIModelsOrderPayment,
  })
  @Expose({ name: "Payments" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelsOrderPayment)
  payments?: BillbeeInterfacesBillbeeAPIModelsOrderPayment[];

  @SpeakeasyMetadata()
  @Expose({ name: "RebateDifference" })
  rebateDifference?: number;

  /**
   * If set, the order was restored from the archive at the given date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RestoredAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  restoredAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Seller" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderUser)
  seller?: BillbeeInterfacesBillbeeAPIModelOrderUser;

  /**
   * An internal seller comment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerComment" })
  sellerComment?: string;

  /**
   * The total weight of the shipment(s)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShipWeightKg" })
  shipWeightKg?: number;

  /**
   * The date on which the order was shipped
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  shippedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ShippingAddress" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel)
  shippingAddress?: BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel;

  /**
   * The shipping cost
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingCost" })
  shippingCost?: number;

  /**
   * The shipments of the order
   */
  @SpeakeasyMetadata({ elemType: BillbeeInterfacesBillbeeAPIModelShipment })
  @Expose({ name: "ShippingIds" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelShipment)
  shippingIds?: BillbeeInterfacesBillbeeAPIModelShipment[];

  /**
   * Internal Id for the shipping profile for that order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProfileId" })
  shippingProfileId?: string;

  /**
   * Display Name of Shipping profile, if available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProfileName" })
  shippingProfileName?: string;

  /**
   * Internal Id for the used shipping provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProviderId" })
  shippingProviderId?: number;

  /**
   * The Name for of used shipping provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProviderName" })
  shippingProviderName?: string;

  /**
   * Internal Id for the used shipping product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProviderProductId" })
  shippingProviderProductId?: number;

  /**
   * The Name of the used shipping product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProviderProductName" })
  shippingProviderProductName?: string;

  /**
   * Additional services for the shipment
   */
  @SpeakeasyMetadata({ elemType: BillbeeInterfacesShippingProductService })
  @Expose({ name: "ShippingServices" })
  @Type(() => BillbeeInterfacesShippingProductService)
  shippingServices?: BillbeeInterfacesShippingProductService[];

  /**
   * The current state of the order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: BillbeeInterfacesBillbeeAPIModelOrderStateEnum;

  /**
   * The Tags of the order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: string[];

  /**
   * The regular tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxRate1" })
  taxRate1?: number;

  /**
   * The reduced tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxRate2" })
  taxRate2?: number;

  /**
   * The total cost excluding shipping cost
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalCost" })
  totalCost?: number;

  /**
   * The date on which the order was last updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The customers vat id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "VatId" })
  vatId?: string;

  /**
   * The vat mode of the order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "VatMode" })
  vatMode?: BillbeeInterfacesBillbeeAPIModelOrderVatModeEnum;
}
