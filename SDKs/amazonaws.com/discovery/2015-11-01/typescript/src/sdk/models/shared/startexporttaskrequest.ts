/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExportDataFormatEnum } from "./exportdataformatenum";
import { ExportFilter } from "./exportfilter";
import { Expose, Transform, Type } from "class-transformer";

export class StartExportTaskRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "exportDataFormat" })
  exportDataFormat?: ExportDataFormatEnum[];

  @SpeakeasyMetadata({ elemType: ExportFilter })
  @Expose({ name: "filters" })
  @Type(() => ExportFilter)
  filters?: ExportFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;
}
