"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import facilitiesidsresponse as shared_facilitiesidsresponse
from ..shared import genericerror as shared_genericerror
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetFacilityIdsSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'apikey' }})  
    
class GetFacilityIdsTypeEnum(str, Enum):
    r"""Optional facility type search filter"""
    HEALTH = 'health'
    CEMETERY = 'cemetery'
    BENEFITS = 'benefits'
    VET_CENTER = 'vet_center'


@dataclasses.dataclass
class GetFacilityIdsRequest:
    
    type: Optional[GetFacilityIdsTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Optional facility type search filter"""  
    

@dataclasses.dataclass
class GetFacilityIdsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Requested format unacceptable"""  
    facilities_ids_response: Optional[shared_facilitiesidsresponse.FacilitiesIdsResponse] = dataclasses.field(default=None)
    r"""Success"""  
    generic_error: Optional[shared_genericerror.GenericError] = dataclasses.field(default=None)
    r"""Missing API token"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    