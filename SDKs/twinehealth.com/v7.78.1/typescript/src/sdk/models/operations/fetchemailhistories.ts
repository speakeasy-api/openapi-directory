/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * valid sorts:
 *
 * @remarks
 *   * send_time - ascending by send_time
 *   * -send_time - descending by send_time
 *
 */
export enum FetchEmailHistoriesSortEnum {
  SendTime = "send_time",
  MinusSendTime = "-send_time",
}

export class FetchEmailHistoriesRequest extends SpeakeasyBase {
  /**
   * Type of email
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[emailType]",
  })
  filterEmailType?: string;

  /**
   * Fitbit Plus user id of email recipient. Required if filter[sender] is not defined.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[receiver]",
  })
  filterReceiver?: string;

  /**
   * Fitbit Plus user id of email sender. Required if filter[receiver] is not defined.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[sender]",
  })
  filterSender?: string;

  /**
   * valid sorts:
   *
   * @remarks
   *   * send_time - ascending by send_time
   *   * -send_time - descending by send_time
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: FetchEmailHistoriesSortEnum;
}

export class FetchEmailHistoriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  fetchEmailHistoriesResponse?: shared.FetchEmailHistoriesResponse;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fetchErrorResponse?: shared.FetchErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
