// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventTypeEnum string

const (
	EventTypeEnumAssignmentAccepted  EventTypeEnum = "AssignmentAccepted"
	EventTypeEnumAssignmentAbandoned EventTypeEnum = "AssignmentAbandoned"
	EventTypeEnumAssignmentReturned  EventTypeEnum = "AssignmentReturned"
	EventTypeEnumAssignmentSubmitted EventTypeEnum = "AssignmentSubmitted"
	EventTypeEnumAssignmentRejected  EventTypeEnum = "AssignmentRejected"
	EventTypeEnumAssignmentApproved  EventTypeEnum = "AssignmentApproved"
	EventTypeEnumHitCreated          EventTypeEnum = "HITCreated"
	EventTypeEnumHitExpired          EventTypeEnum = "HITExpired"
	EventTypeEnumHitReviewable       EventTypeEnum = "HITReviewable"
	EventTypeEnumHitExtended         EventTypeEnum = "HITExtended"
	EventTypeEnumHitDisposed         EventTypeEnum = "HITDisposed"
	EventTypeEnumPing                EventTypeEnum = "Ping"
)

func (e *EventTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AssignmentAccepted":
		fallthrough
	case "AssignmentAbandoned":
		fallthrough
	case "AssignmentReturned":
		fallthrough
	case "AssignmentSubmitted":
		fallthrough
	case "AssignmentRejected":
		fallthrough
	case "AssignmentApproved":
		fallthrough
	case "HITCreated":
		fallthrough
	case "HITExpired":
		fallthrough
	case "HITReviewable":
		fallthrough
	case "HITExtended":
		fallthrough
	case "HITDisposed":
		fallthrough
	case "Ping":
		*e = EventTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EventTypeEnum: %s", s)
	}
}
