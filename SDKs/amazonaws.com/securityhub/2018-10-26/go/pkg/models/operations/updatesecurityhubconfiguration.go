// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum - <p>Updates whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>For accounts that are part of an organization, this value can only be updated in the administrator account.</p>
type UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum string

const (
	UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnumStandardControl UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum = "STANDARD_CONTROL"
	UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnumSecurityControl UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum = "SECURITY_CONTROL"
)

func (e *UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STANDARD_CONTROL":
		fallthrough
	case "SECURITY_CONTROL":
		*e = UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum: %s", s)
	}
}

type UpdateSecurityHubConfigurationRequestBody struct {
	// <p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>By default, this is set to <code>true</code>, and new controls are enabled automatically. To not automatically enable new controls, set this to <code>false</code>. </p>
	AutoEnableControls *bool `json:"AutoEnableControls,omitempty"`
	// <p>Updates whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>For accounts that are part of an organization, this value can only be updated in the administrator account.</p>
	ControlFindingGenerator *UpdateSecurityHubConfigurationRequestBodyControlFindingGeneratorEnum `json:"ControlFindingGenerator,omitempty"`
}

type UpdateSecurityHubConfigurationRequest struct {
	RequestBody       UpdateSecurityHubConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateSecurityHubConfigurationResponse struct {
	ContentType string
	// InternalException
	InternalException interface{}
	// InvalidAccessException
	InvalidAccessException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateSecurityHubConfigurationResponse map[string]interface{}
}
