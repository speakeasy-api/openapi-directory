// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GoogleAppsCardV1DecoratedText - A widget that displays text with optional decorations such as a label above or below the text, an icon in front of the text, a selection widget or a button after the text.
type GoogleAppsCardV1DecoratedText struct {
	// The text that appears below `text`. Always truncates.
	BottomLabel *string `json:"bottomLabel,omitempty"`
	// A text, icon, or text + icon button that users can click. To make an image a clickable button, specify an Image (not an ImageComponent) and set an `onClick` action.
	Button *GoogleAppsCardV1Button `json:"button,omitempty"`
	// An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
	EndIcon *GoogleAppsCardV1Icon `json:"endIcon,omitempty"`
	// An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
	Icon *GoogleAppsCardV1Icon `json:"icon,omitempty"`
	// Represents how to respond when users click an interactive element on a card, such as a button.
	OnClick *GoogleAppsCardV1OnClick `json:"onClick,omitempty"`
	// An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
	StartIcon *GoogleAppsCardV1Icon `json:"startIcon,omitempty"`
	// Either a toggle-style switch or a checkbox inside a `decoratedText` widget. Only supported on the `decoratedText` widget.
	SwitchControl *GoogleAppsCardV1SwitchControl `json:"switchControl,omitempty"`
	// Required. The primary text. Supports simple formatting. For more information about formatting text, see Formatting text in Google Chat apps and Formatting text in Google Workspace Add-ons.
	Text *string `json:"text,omitempty"`
	// The text that appears above `text`. Always truncates.
	TopLabel *string `json:"topLabel,omitempty"`
	// The wrap text setting. If `true`, the text wraps and displays on multiple lines. Otherwise, the text is truncated. Only applies to `text`, not `topLabel` and `bottomLabel`.
	WrapText *bool `json:"wrapText,omitempty"`
}
