/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateCustomObjectCusotmField - A reference to a field.
 */
public class UpdateCustomObjectCusotmField {
    /**
     * The custom field definition in the custom object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("definition")
    public CustomObjectCustomFieldDefinitionUpdate definition;
    public UpdateCustomObjectCusotmField withDefinition(CustomObjectCustomFieldDefinitionUpdate definition) {
        this.definition = definition;
        return this;
    }
    
    /**
     * Indicates whether the field is filterable or not. Applicable to `addField` and `updateField` actions.
     * 
     * You can change a filterable field to non-filterable and vice versa. You can also add a filterable field. One custom object can have a maximum of 10 filterable fields.
     * 
     * Note that changing filterable fields triggers reindexing. It will take 12-24 hours before all your data are reindexed and available to query.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterable")
    public Boolean filterable;
    public UpdateCustomObjectCusotmField withFilterable(Boolean filterable) {
        this.filterable = filterable;
        return this;
    }
    
    /**
     * The name of the custom field to be updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UpdateCustomObjectCusotmField withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Indicates whether the field is required or optional.
     * 
     * You can update a required field to optional. On the other hand, you can only update an optional field to required on the custom object with no records.
     * 
     * You can only add a required field to the custom object with no records.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public Boolean required;
    public UpdateCustomObjectCusotmField withRequired(Boolean required) {
        this.required = required;
        return this;
    }
    
    /**
     * Required if the `type` of the action is `renameField`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetName")
    public String targetName;
    public UpdateCustomObjectCusotmField withTargetName(String targetName) {
        this.targetName = targetName;
        return this;
    }
    
}
