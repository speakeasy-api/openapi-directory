"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import channelauditdetails as shared_channelauditdetails
from ..shared import channelbrandingsettings as shared_channelbrandingsettings
from ..shared import channelcontentdetails as shared_channelcontentdetails
from ..shared import channelcontentownerdetails as shared_channelcontentownerdetails
from ..shared import channelconversionpings as shared_channelconversionpings
from ..shared import channellocalization as shared_channellocalization
from ..shared import channelsnippet as shared_channelsnippet
from ..shared import channelstatistics as shared_channelstatistics
from ..shared import channelstatus as shared_channelstatus
from ..shared import channeltopicdetails as shared_channeltopicdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Channel:
    r"""A *channel* resource contains information about a YouTube channel."""
    
    audit_details: Optional[shared_channelauditdetails.ChannelAuditDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auditDetails'), 'exclude': lambda f: f is None }})
    r"""The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process."""  
    branding_settings: Optional[shared_channelbrandingsettings.ChannelBrandingSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brandingSettings'), 'exclude': lambda f: f is None }})
    r"""Branding properties of a YouTube channel."""  
    content_details: Optional[shared_channelcontentdetails.ChannelContentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentDetails'), 'exclude': lambda f: f is None }})
    r"""Details about the content of a channel."""  
    content_owner_details: Optional[shared_channelcontentownerdetails.ChannelContentOwnerDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentOwnerDetails'), 'exclude': lambda f: f is None }})
    r"""The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel."""  
    conversion_pings: Optional[shared_channelconversionpings.ChannelConversionPings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionPings'), 'exclude': lambda f: f is None }})
    r"""The conversionPings object encapsulates information about conversion pings that need to be respected by the channel."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Etag of this resource."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID that YouTube uses to uniquely identify the channel."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"youtube#channel\\"."""  
    localizations: Optional[dict[str, shared_channellocalization.ChannelLocalization]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localizations'), 'exclude': lambda f: f is None }})
    r"""Localizations for different languages"""  
    snippet: Optional[shared_channelsnippet.ChannelSnippet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snippet'), 'exclude': lambda f: f is None }})
    r"""Basic details about a channel, including title, description and thumbnails."""  
    statistics: Optional[shared_channelstatistics.ChannelStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statistics'), 'exclude': lambda f: f is None }})
    r"""Statistics about a channel: number of subscribers, number of videos in the channel, etc."""  
    status: Optional[shared_channelstatus.ChannelStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""JSON template for the status part of a channel."""  
    topic_details: Optional[shared_channeltopicdetails.ChannelTopicDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topicDetails'), 'exclude': lambda f: f is None }})
    r"""Freebase topic information related to the channel."""  
    