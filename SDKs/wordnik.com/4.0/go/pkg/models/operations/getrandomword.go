// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetRandomWordRequest struct {
	// CSV part-of-speech values to exclude (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
	ExcludePartOfSpeech *string `queryParam:"style=form,explode=true,name=excludePartOfSpeech"`
	// Only return words with dictionary definitions
	HasDictionaryDef *string `queryParam:"style=form,explode=true,name=hasDictionaryDef"`
	// CSV part-of-speech values to include (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
	IncludePartOfSpeech *string `queryParam:"style=form,explode=true,name=includePartOfSpeech"`
	// Maximum corpus frequency for terms
	MaxCorpusCount *int `queryParam:"style=form,explode=true,name=maxCorpusCount"`
	// Maximum dictionary count
	MaxDictionaryCount *int `queryParam:"style=form,explode=true,name=maxDictionaryCount"`
	// Maximum word length
	MaxLength *int `queryParam:"style=form,explode=true,name=maxLength"`
	// Minimum corpus frequency for terms
	MinCorpusCount *int `queryParam:"style=form,explode=true,name=minCorpusCount"`
	// Minimum dictionary count
	MinDictionaryCount *int `queryParam:"style=form,explode=true,name=minDictionaryCount"`
	// Minimum word length
	MinLength *int `queryParam:"style=form,explode=true,name=minLength"`
}

type GetRandomWordResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
