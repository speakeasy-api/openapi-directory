/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DescribePipeResponse - Success
 */
public class DescribePipeResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Arn")
    public String arn;
    public DescribePipeResponse withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public DescribePipeResponse withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrentState")
    public PipeStateEnum currentState;
    public DescribePipeResponse withCurrentState(PipeStateEnum currentState) {
        this.currentState = currentState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public DescribePipeResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DesiredState")
    public RequestedPipeStateDescribeResponseEnum desiredState;
    public DescribePipeResponse withDesiredState(RequestedPipeStateDescribeResponseEnum desiredState) {
        this.desiredState = desiredState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Enrichment")
    public String enrichment;
    public DescribePipeResponse withEnrichment(String enrichment) {
        this.enrichment = enrichment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnrichmentParameters")
    public PipeEnrichmentParameters enrichmentParameters;
    public DescribePipeResponse withEnrichmentParameters(PipeEnrichmentParameters enrichmentParameters) {
        this.enrichmentParameters = enrichmentParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public DescribePipeResponse withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public DescribePipeResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoleArn")
    public String roleArn;
    public DescribePipeResponse withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Source")
    public String source;
    public DescribePipeResponse withSource(String source) {
        this.source = source;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceParameters")
    public PipeSourceParameters sourceParameters;
    public DescribePipeResponse withSourceParameters(PipeSourceParameters sourceParameters) {
        this.sourceParameters = sourceParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StateReason")
    public String stateReason;
    public DescribePipeResponse withStateReason(String stateReason) {
        this.stateReason = stateReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;
    public DescribePipeResponse withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Target")
    public String target;
    public DescribePipeResponse withTarget(String target) {
        this.target = target;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetParameters")
    public PipeTargetParameters targetParameters;
    public DescribePipeResponse withTargetParameters(PipeTargetParameters targetParameters) {
        this.targetParameters = targetParameters;
        return this;
    }
    
}
