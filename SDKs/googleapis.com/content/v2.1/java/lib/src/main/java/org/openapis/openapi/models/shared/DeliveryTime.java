/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DeliveryTime {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cutoffTime")
    public CutoffTime cutoffTime;
    public DeliveryTime withCutoffTime(CutoffTime cutoffTime) {
        this.cutoffTime = cutoffTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("handlingBusinessDayConfig")
    public BusinessDayConfig handlingBusinessDayConfig;
    public DeliveryTime withHandlingBusinessDayConfig(BusinessDayConfig handlingBusinessDayConfig) {
        this.handlingBusinessDayConfig = handlingBusinessDayConfig;
        return this;
    }
    
    /**
     * Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("holidayCutoffs")
    public HolidayCutoff[] holidayCutoffs;
    public DeliveryTime withHolidayCutoffs(HolidayCutoff[] holidayCutoffs) {
        this.holidayCutoffs = holidayCutoffs;
        return this;
    }
    
    /**
     * Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxHandlingTimeInDays")
    public Long maxHandlingTimeInDays;
    public DeliveryTime withMaxHandlingTimeInDays(Long maxHandlingTimeInDays) {
        this.maxHandlingTimeInDays = maxHandlingTimeInDays;
        return this;
    }
    
    /**
     * Maximum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTransitTimeInDays")
    public Long maxTransitTimeInDays;
    public DeliveryTime withMaxTransitTimeInDays(Long maxTransitTimeInDays) {
        this.maxTransitTimeInDays = maxTransitTimeInDays;
        return this;
    }
    
    /**
     * Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minHandlingTimeInDays")
    public Long minHandlingTimeInDays;
    public DeliveryTime withMinHandlingTimeInDays(Long minHandlingTimeInDays) {
        this.minHandlingTimeInDays = minHandlingTimeInDays;
        return this;
    }
    
    /**
     * Minimum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minTransitTimeInDays")
    public Long minTransitTimeInDays;
    public DeliveryTime withMinTransitTimeInDays(Long minTransitTimeInDays) {
        this.minTransitTimeInDays = minTransitTimeInDays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transitBusinessDayConfig")
    public BusinessDayConfig transitBusinessDayConfig;
    public DeliveryTime withTransitBusinessDayConfig(BusinessDayConfig transitBusinessDayConfig) {
        this.transitBusinessDayConfig = transitBusinessDayConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transitTimeTable")
    public TransitTable transitTimeTable;
    public DeliveryTime withTransitTimeTable(TransitTable transitTimeTable) {
        this.transitTimeTable = transitTimeTable;
        return this;
    }
    
    /**
     * Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warehouseBasedDeliveryTimes")
    public WarehouseBasedDeliveryTime[] warehouseBasedDeliveryTimes;
    public DeliveryTime withWarehouseBasedDeliveryTimes(WarehouseBasedDeliveryTime[] warehouseBasedDeliveryTimes) {
        this.warehouseBasedDeliveryTimes = warehouseBasedDeliveryTimes;
        return this;
    }
    
}
