// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateStorageLocationActionEnum
type POSTCreateStorageLocationActionEnum string

const (
	POSTCreateStorageLocationActionEnumCreateStorageLocation POSTCreateStorageLocationActionEnum = "CreateStorageLocation"
)

func (e POSTCreateStorageLocationActionEnum) ToPointer() *POSTCreateStorageLocationActionEnum {
	return &e
}

func (e *POSTCreateStorageLocationActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateStorageLocation":
		*e = POSTCreateStorageLocationActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateStorageLocationActionEnum: %v", v)
	}
}

// POSTCreateStorageLocationVersionEnum
type POSTCreateStorageLocationVersionEnum string

const (
	POSTCreateStorageLocationVersionEnumTwoThousandAndTen1201 POSTCreateStorageLocationVersionEnum = "2010-12-01"
)

func (e POSTCreateStorageLocationVersionEnum) ToPointer() *POSTCreateStorageLocationVersionEnum {
	return &e
}

func (e *POSTCreateStorageLocationVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = POSTCreateStorageLocationVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateStorageLocationVersionEnum: %v", v)
	}
}

type POSTCreateStorageLocationRequest struct {
	Action            POSTCreateStorageLocationActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version           POSTCreateStorageLocationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateStorageLocationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
