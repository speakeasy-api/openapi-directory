<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BinaryClassificationMetrics - Evaluation metrics for binary classification/classifier models.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BinaryClassificationMetrics
{
    /**
     * Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AggregateClassificationMetrics $aggregateClassificationMetrics
     */
	#[\JMS\Serializer\Annotation\SerializedName('aggregateClassificationMetrics')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AggregateClassificationMetrics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AggregateClassificationMetrics $aggregateClassificationMetrics = null;
    
    /**
     * Binary confusion matrix at multiple thresholds.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BinaryConfusionMatrix> $binaryConfusionMatrixList
     */
	#[\JMS\Serializer\Annotation\SerializedName('binaryConfusionMatrixList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BinaryConfusionMatrix>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $binaryConfusionMatrixList = null;
    
    /**
     * Label representing the negative class.
     * 
     * @var ?string $negativeLabel
     */
	#[\JMS\Serializer\Annotation\SerializedName('negativeLabel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $negativeLabel = null;
    
    /**
     * Label representing the positive class.
     * 
     * @var ?string $positiveLabel
     */
	#[\JMS\Serializer\Annotation\SerializedName('positiveLabel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $positiveLabel = null;
    
	public function __construct()
	{
		$this->aggregateClassificationMetrics = null;
		$this->binaryConfusionMatrixList = null;
		$this->negativeLabel = null;
		$this->positiveLabel = null;
	}
}
