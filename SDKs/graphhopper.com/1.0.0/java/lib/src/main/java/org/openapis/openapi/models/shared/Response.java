/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Response - A response containing the solution
 */
public class Response {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copyrights")
    public String[] copyrights;

    public Response withCopyrights(String[] copyrights) {
        this.copyrights = copyrights;
        return this;
    }
    
    /**
     * Processing time in ms. If job is still waiting in queue, processing_time is 0
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processing_time")
    public Long processingTime;

    public Response withProcessingTime(Long processingTime) {
        this.processingTime = processingTime;
        return this;
    }
    
    /**
     * Only available if status field indicates `finished`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("solution")
    public Solution solution;

    public Response withSolution(Solution solution) {
        this.solution = solution;
        return this;
    }
    
    /**
     * Indicates the current status of the job
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ResponseStatusEnum status;

    public Response withStatus(ResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Waiting time in ms
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waiting_time_in_queue")
    public Long waitingTimeInQueue;

    public Response withWaitingTimeInQueue(Long waitingTimeInQueue) {
        this.waitingTimeInQueue = waitingTimeInQueue;
        return this;
    }
    
    public Response(){}
}
