// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListDiscoveredResourcesXAmzTargetEnum
type ListDiscoveredResourcesXAmzTargetEnum string

const (
	ListDiscoveredResourcesXAmzTargetEnumAwsfms20180101ListDiscoveredResources ListDiscoveredResourcesXAmzTargetEnum = "AWSFMS_20180101.ListDiscoveredResources"
)

func (e *ListDiscoveredResourcesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSFMS_20180101.ListDiscoveredResources":
		*e = ListDiscoveredResourcesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDiscoveredResourcesXAmzTargetEnum: %s", s)
	}
}

type ListDiscoveredResourcesRequest struct {
	ListDiscoveredResourcesRequest shared.ListDiscoveredResourcesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     ListDiscoveredResourcesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListDiscoveredResourcesResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// Success
	ListDiscoveredResourcesResponse *shared.ListDiscoveredResourcesResponse
	StatusCode                      int
	RawResponse                     *http.Response
}
