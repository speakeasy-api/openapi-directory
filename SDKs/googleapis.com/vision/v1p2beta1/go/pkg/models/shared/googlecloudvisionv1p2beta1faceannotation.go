// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum - Anger likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum - Blurred likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum - Headwear likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum - Joy likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum - Sorrow likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum - Surprise likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum - Under-exposed likelihood.
type GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum string

const (
	GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnumUnknown      GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum = "UNKNOWN"
	GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnumVeryUnlikely GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum = "VERY_UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnumUnlikely     GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum = "UNLIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnumPossible     GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum = "POSSIBLE"
	GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnumLikely       GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum = "LIKELY"
	GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnumVeryLikely   GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum = "VERY_LIKELY"
)

func (e *GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum: %s", s)
	}
}

// GoogleCloudVisionV1p2beta1FaceAnnotation - A face annotation object contains the results of face detection.
type GoogleCloudVisionV1p2beta1FaceAnnotation struct {
	// Anger likelihood.
	AngerLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum `json:"angerLikelihood,omitempty"`
	// Blurred likelihood.
	BlurredLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum `json:"blurredLikelihood,omitempty"`
	// A bounding polygon for the detected image annotation.
	BoundingPoly *GoogleCloudVisionV1p2beta1BoundingPoly `json:"boundingPoly,omitempty"`
	// Detection confidence. Range [0, 1].
	DetectionConfidence *float32 `json:"detectionConfidence,omitempty"`
	// A bounding polygon for the detected image annotation.
	FdBoundingPoly *GoogleCloudVisionV1p2beta1BoundingPoly `json:"fdBoundingPoly,omitempty"`
	// Headwear likelihood.
	HeadwearLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum `json:"headwearLikelihood,omitempty"`
	// Joy likelihood.
	JoyLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum `json:"joyLikelihood,omitempty"`
	// Face landmarking confidence. Range [0, 1].
	LandmarkingConfidence *float32 `json:"landmarkingConfidence,omitempty"`
	// Detected face landmarks.
	Landmarks []GoogleCloudVisionV1p2beta1FaceAnnotationLandmark `json:"landmarks,omitempty"`
	// Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].
	PanAngle *float32 `json:"panAngle,omitempty"`
	// Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].
	RollAngle *float32 `json:"rollAngle,omitempty"`
	// Sorrow likelihood.
	SorrowLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum `json:"sorrowLikelihood,omitempty"`
	// Surprise likelihood.
	SurpriseLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum `json:"surpriseLikelihood,omitempty"`
	// Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180].
	TiltAngle *float32 `json:"tiltAngle,omitempty"`
	// Under-exposed likelihood.
	UnderExposedLikelihood *GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum `json:"underExposedLikelihood,omitempty"`
}
