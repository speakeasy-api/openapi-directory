"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudintegrationsv1alphaclientcertificate as shared_googlecloudintegrationsv1alphaclientcertificate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudIntegrationsV1alphaCertificateCertificateStatusEnum(str, Enum):
    r"""Status of the certificate"""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    EXPIRED = 'EXPIRED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaCertificate:
    r"""The certificate definition"""
    
    certificate_status: Optional[GoogleCloudIntegrationsV1alphaCertificateCertificateStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the certificate"""  
    credential_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credentialId'), 'exclude': lambda f: f is None }})
    r"""Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the certificate"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Name of the certificate"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Auto generated primary key"""  
    raw_certificate: Optional[shared_googlecloudintegrationsv1alphaclientcertificate.GoogleCloudIntegrationsV1alphaClientCertificate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rawCertificate'), 'exclude': lambda f: f is None }})
    r"""Contains client certificate information"""  
    requestor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestorId'), 'exclude': lambda f: f is None }})
    r"""Immutable. Requestor ID to be used to register certificate with trawler"""  
    valid_end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validEndTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp after which certificate will expire"""  
    valid_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validStartTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp after which certificate will be valid"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaCertificateInput:
    r"""The certificate definition"""
    
    certificate_status: Optional[GoogleCloudIntegrationsV1alphaCertificateCertificateStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the certificate"""  
    credential_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credentialId'), 'exclude': lambda f: f is None }})
    r"""Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the certificate"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Name of the certificate"""  
    raw_certificate: Optional[shared_googlecloudintegrationsv1alphaclientcertificate.GoogleCloudIntegrationsV1alphaClientCertificate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rawCertificate'), 'exclude': lambda f: f is None }})
    r"""Contains client certificate information"""  
    requestor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestorId'), 'exclude': lambda f: f is None }})
    r"""Immutable. Requestor ID to be used to register certificate with trawler"""  
    