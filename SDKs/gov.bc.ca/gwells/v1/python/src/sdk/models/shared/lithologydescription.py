"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LithologyDescription:
    
    lithology_colour: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lithology_colour'), 'exclude': lambda f: f is None }})  
    lithology_from: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lithology_from'), 'exclude': lambda f: f is None }})  
    lithology_hardness: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lithology_hardness'), 'exclude': lambda f: f is None }})  
    lithology_moisture: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lithology_moisture'), 'exclude': lambda f: f is None }})  
    lithology_raw_data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lithology_raw_data'), 'exclude': lambda f: f is None }})  
    lithology_to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lithology_to'), 'exclude': lambda f: f is None }})  
    water_bearing_estimated_flow: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('water_bearing_estimated_flow'), 'exclude': lambda f: f is None }})  
    