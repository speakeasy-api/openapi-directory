<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetCommitteeCommitteeIdCandidatesRequest
{
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * One-letter code explaining if the candidate is:
     * 
     *         - C present candidate
     *         - F future candidate
     *         - N not yet a candidate
     *         - P prior candidate
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteeCommitteeIdCandidatesCandidateStatusEnum> $candidateStatus
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=candidate_status')]
    public ?array $candidateStatus = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var string $committeeId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=committee_id')]
    public string $committeeId;
    
    /**
     * 
     * Two-year election cycle in which a candidate runs for office.
     * Calculated from Form 2. The cycle begins with
     * an odd year and is named for its ending, even year. This cycle follows
     * the traditional house election cycle and subdivides the presidential
     * and Senate elections into comparable two-year blocks. To retrieve data for
     * the entire four years of a presidential term or six years of a senatorial term,
     * you will need the `election_full` flag.
     * 
     * 
     * @var ?array<int> $cycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cycle')]
    public ?array $cycle = null;
    
    /**
     * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
     * 
     * @var ?array<string> $district
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=district')]
    public ?array $district = null;
    
    /**
     * Year of election
     * 
     * @var ?array<int> $electionYear
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=election_year')]
    public ?array $electionYear = null;
    
    /**
     * A boolean the describes if a presidential candidate has accepted federal funds. The flag will be false for House and Senate candidates.
     * 
     * @var ?bool $federalFundsFlag
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=federal_funds_flag')]
    public ?bool $federalFundsFlag = null;
    
    /**
     * A boolean that describes if a candidate's committee has ever received any receipts for their campaign for this particular office. (Candidates have separate candidate IDs for each office.)
     * 
     * @var ?bool $hasRaisedFunds
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=has_raised_funds')]
    public ?bool $hasRaisedFunds = null;
    
    /**
     * One-letter code ('I', 'C', 'O') explaining if the candidate is an incumbent, a challenger, or if the seat is open.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteeCommitteeIdCandidatesIncumbentChallengeEnum> $incumbentChallenge
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=incumbent_challenge')]
    public ?array $incumbentChallenge = null;
    
    /**
     * Name (candidate or committee) to search for. Alias for 'q'.
     * 
     * @var ?array<string> $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?array $name = null;
    
    /**
     * Federal office candidate runs for: H, S or P
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteeCommitteeIdCandidatesOfficeEnum> $office
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=office')]
    public ?array $office = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     * 
     * @var ?array<string> $party
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=party')]
    public ?array $party = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Provide a field to sort by. Use `-` for descending order.
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * US state or territory where a candidate runs for office
     * 
     * @var ?array<string> $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?array $state = null;
    
    /**
     * Retrieve records pertaining to a particular election year. The list of election years is based on a candidate filing a statement of candidacy (F2) for that year.
     * 
     * @var ?string $year
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=year')]
    public ?string $year = null;
    
	public function __construct()
	{
		$this->apiKey = "";
		$this->candidateStatus = null;
		$this->committeeId = "";
		$this->cycle = null;
		$this->district = null;
		$this->electionYear = null;
		$this->federalFundsFlag = null;
		$this->hasRaisedFunds = null;
		$this->incumbentChallenge = null;
		$this->name = null;
		$this->office = null;
		$this->page = null;
		$this->party = null;
		$this->perPage = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->state = null;
		$this->year = null;
	}
}
