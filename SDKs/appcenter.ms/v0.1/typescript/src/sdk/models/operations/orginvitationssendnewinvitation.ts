/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class OrgInvitationsSendNewInvitationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The role of the user to be added
 */
export enum OrgInvitationsSendNewInvitationRequestBodyRoleEnum {
  Admin = "admin",
  Collaborator = "collaborator",
  Member = "member",
}

/**
 * The role of the user to be added
 */
export class OrgInvitationsSendNewInvitationRequestBody extends SpeakeasyBase {
  /**
   * The role of the user to be added
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: OrgInvitationsSendNewInvitationRequestBodyRoleEnum;
}

export class OrgInvitationsSendNewInvitationRequest extends SpeakeasyBase {
  /**
   * The role of the user to be added
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: OrgInvitationsSendNewInvitationRequestBody;

  /**
   * The email address of the user to send the password reset mail to.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=email",
  })
  email: string;

  /**
   * The organization's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=org_name",
  })
  orgName: string;
}

export enum OrgInvitationsSendNewInvitationDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class OrgInvitationsSendNewInvitationDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: OrgInvitationsSendNewInvitationDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class OrgInvitationsSendNewInvitationDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => OrgInvitationsSendNewInvitationDefaultApplicationJSONError)
  error: OrgInvitationsSendNewInvitationDefaultApplicationJSONError;
}

export class OrgInvitationsSendNewInvitationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  orgInvitationsSendNewInvitationDefaultApplicationJSONObject?: OrgInvitationsSendNewInvitationDefaultApplicationJSON;
}
