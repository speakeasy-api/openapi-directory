/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SessionManagerOutputUrl } from "./sessionmanageroutputurl";
import { SessionStatusEnum } from "./sessionstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a Session Manager connection to a managed node.
 */
export class Session extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Details" })
  details?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentName" })
  documentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxSessionDuration" })
  maxSessionDuration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputUrl" })
  @Type(() => SessionManagerOutputUrl)
  outputUrl?: SessionManagerOutputUrl;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SessionId" })
  sessionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: SessionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Target" })
  target?: string;
}
