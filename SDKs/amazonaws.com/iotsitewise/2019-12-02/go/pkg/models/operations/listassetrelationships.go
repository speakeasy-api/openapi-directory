// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListAssetRelationshipsPathParams struct {
	// The ID of the asset.
	AssetID string `pathParam:"style=simple,explode=false,name=assetId"`
}

// ListAssetRelationshipsTraversalTypeEnum - <p>The type of traversal to use to identify asset relationships. Choose the following option:</p> <ul> <li> <p> <code>PATH_TO_ROOT</code> – Identify the asset's parent assets up to the root asset. The asset that you specify in <code>assetId</code> is the first result in the list of <code>assetRelationshipSummaries</code>, and the root asset is the last result.</p> </li> </ul>
type ListAssetRelationshipsTraversalTypeEnum string

const (
	ListAssetRelationshipsTraversalTypeEnumPathToRoot ListAssetRelationshipsTraversalTypeEnum = "PATH_TO_ROOT"
)

func (e *ListAssetRelationshipsTraversalTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATH_TO_ROOT":
		*e = ListAssetRelationshipsTraversalTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAssetRelationshipsTraversalTypeEnum: %s", s)
	}
}

type ListAssetRelationshipsQueryParams struct {
	// The maximum number of results to return for each paginated request.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token to be used for the next set of paginated results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// <p>The type of traversal to use to identify asset relationships. Choose the following option:</p> <ul> <li> <p> <code>PATH_TO_ROOT</code> – Identify the asset's parent assets up to the root asset. The asset that you specify in <code>assetId</code> is the first result in the list of <code>assetRelationshipSummaries</code>, and the root asset is the last result.</p> </li> </ul>
	TraversalType ListAssetRelationshipsTraversalTypeEnum `queryParam:"style=form,explode=true,name=traversalType"`
}

type ListAssetRelationshipsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListAssetRelationshipsRequest struct {
	PathParams  ListAssetRelationshipsPathParams
	QueryParams ListAssetRelationshipsQueryParams
	Headers     ListAssetRelationshipsHeaders
}

type ListAssetRelationshipsResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListAssetRelationshipsResponse *shared.ListAssetRelationshipsResponse
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
