"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class VoiceXMLEnum(str, Enum):
    r"""Decides whether the parameter \\"text\\" is plain text or XML. The default value is 0."""
    ONE = '1'
    ZERO = '0'


@dataclasses.dataclass
class VoiceRequest:
    
    text: str = dataclasses.field(metadata={'query_param': { 'field_name': 'text', 'style': 'form', 'explode': True }})
    r"""The text to convert to a voice message. Accepts valid XML too."""  
    to: str = dataclasses.field(metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""Determines the receiver. Must be a valid phone number or contact from the address book."""  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Sets the sender. Must be a verified sender. Use an inbound number of yours or one of ours."""  
    xml: Optional[VoiceXMLEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'xml', 'style': 'form', 'explode': True }})
    r"""Decides whether the parameter \\"text\\" is plain text or XML. The default value is 0."""  
    

@dataclasses.dataclass
class VoiceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    voice_200_text_plain_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    