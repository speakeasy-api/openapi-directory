"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import data as shared_data
from ..shared import format_enum as shared_format_enum
from ..shared import output_enum as shared_output_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class MergeTemplateRequest:
    
    data: shared_data.Data = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Data used to generate the PDF. This can be JSON encoded string or a public URL to your JSON file."""  
    template_id: int = dataclasses.field(metadata={'query_param': { 'field_name': 'templateId', 'style': 'form', 'explode': True }})
    r"""Template unique identifier"""  
    format: Optional[shared_format_enum.FormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""Document format. The zip option will return a ZIP file with PDF files."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""Document name, returned in the meta data."""  
    output: Optional[shared_output_enum.OutputEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'output', 'style': 'form', 'explode': True }})
    r"""Response format. With the url option, the document is stored for 30 days and automatically deleted."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate500ApplicationJSON:
    r"""Internal Server Error"""
    
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error description"""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""HTTP Error code"""  
    
class MergeTemplate422ApplicationJSONErrorEnum(str, Enum):
    r"""Error description"""
    UNABLE_TO_PARSE_JSON_PLEASE_CHECK_FORMATTING = 'Unable to parse JSON, please check formatting'
    REQUIRED_PARAMETER_MISSING = 'Required parameter missing'
    REQUIRED_PARAMETER_MISSING_TEMPLATE_DEFINITION_NOT_DEFINED = 'Required parameter missing: template definition not defined'
    REQUIRED_PARAMETER_MISSING_TEMPLATE_NOT_DEFINED = 'Required parameter missing: template not defined'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate422ApplicationJSON:
    r"""Unprocessable Entity"""
    
    error: Optional[MergeTemplate422ApplicationJSONErrorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error description"""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""HTTP Error code"""  
    
class MergeTemplate404ApplicationJSONErrorEnum(str, Enum):
    r"""Error description"""
    ENTITY_NOT_FOUND = 'Entity not found'
    RESOURCE_NOT_FOUND = 'Resource not found'
    NONE_OF_THE_TEMPLATES_IS_AVAILABLE_FOR_THE_WORKSPACE_ = 'None of the templates is available for the workspace.'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate404ApplicationJSON:
    r"""Not Found"""
    
    error: Optional[MergeTemplate404ApplicationJSONErrorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error description"""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""HTTP Error code"""  
    
class MergeTemplate403ApplicationJSONErrorEnum(str, Enum):
    r"""Error description"""
    YOUR_ACCOUNT_HAS_EXCEEDED_THE_MONTHLY_DOCUMENT_GENERATION_LIMIT_ = 'Your account has exceeded the monthly document generation limit.'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate403ApplicationJSON:
    r"""Forbidden"""
    
    error: Optional[MergeTemplate403ApplicationJSONErrorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error description"""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""HTTP Error code"""  
    
class MergeTemplate401ApplicationJSONErrorEnum(str, Enum):
    r"""Error description"""
    AUTHENTICATION_FAILED_REQUEST_EXPIRED = 'Authentication failed: request expired'
    AUTHENTICATION_FAILED_SIGNATURE_OR_SECRET_MISSING = 'Authentication failed: signature or secret missing'
    AUTHENTICATION_FAILED_WORKSPACE_MISSING = 'Authentication failed: workspace missing'
    AUTHENTICATION_FAILED_KEY_MISSING = 'Authentication failed: key missing'
    AUTHENTICATION_FAILED_PROPERTY_ISS_ISSUER_MISSING_IN_JWT = 'Authentication failed: property \'iss\' (issuer) missing in JWT'
    AUTHENTICATION_FAILED_PROPERTY_SUB_SUBJECT_MISSING_IN_JWT = 'Authentication failed: property \'sub\' (subject) missing in JWT'
    AUTHENTICATION_FAILED_PROPERTY_EXP_EXPIRATION_TIME_MISSING_IN_JWT = 'Authentication failed: property \'exp\' (expiration time) missing in JWT'
    AUTHENTICATION_FAILED_INVALID_ISS_ISSUER_ = 'Authentication failed: invalid \'iss\' (issuer)'
    AUTHENTICATION_FAILED_INCORRECT_SIGNATURE = 'Authentication failed: incorrect signature'
    AUTHENTICATION_FAILED = 'Authentication failed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate401ApplicationJSON:
    r"""Unauthorized"""
    
    error: Optional[MergeTemplate401ApplicationJSONErrorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error description"""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""HTTP Error code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate200ApplicationJSONMeta:
    
    content_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content-type'), 'exclude': lambda f: f is None }})
    r"""Document content type."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""Document name without the file extension."""  
    encoding: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encoding'), 'exclude': lambda f: f is None }})
    r"""Document encoding"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Document name. This value is automatically generated if name attribute is not defined in request."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergeTemplate200ApplicationJSON:
    r"""Document data"""
    
    meta: Optional[MergeTemplate200ApplicationJSONMeta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})  
    response: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response'), 'exclude': lambda f: f is None }})
    r"""Base64 encoded document if the output=base64 is used or URL to the document when the output=url is used."""  
    

@dataclasses.dataclass
class MergeTemplateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    merge_template_200_application_json_object: Optional[MergeTemplate200ApplicationJSON] = dataclasses.field(default=None)
    r"""Document data"""  
    merge_template_401_application_json_object: Optional[MergeTemplate401ApplicationJSON] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    merge_template_403_application_json_object: Optional[MergeTemplate403ApplicationJSON] = dataclasses.field(default=None)
    r"""Forbidden"""  
    merge_template_404_application_json_object: Optional[MergeTemplate404ApplicationJSON] = dataclasses.field(default=None)
    r"""Not Found"""  
    merge_template_422_application_json_object: Optional[MergeTemplate422ApplicationJSON] = dataclasses.field(default=None)
    r"""Unprocessable Entity"""  
    merge_template_500_application_json_object: Optional[MergeTemplate500ApplicationJSON] = dataclasses.field(default=None)
    r"""Internal Server Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    