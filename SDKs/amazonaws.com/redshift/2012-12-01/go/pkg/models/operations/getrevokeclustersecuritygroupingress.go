// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRevokeClusterSecurityGroupIngressActionEnum
type GETRevokeClusterSecurityGroupIngressActionEnum string

const (
	GETRevokeClusterSecurityGroupIngressActionEnumRevokeClusterSecurityGroupIngress GETRevokeClusterSecurityGroupIngressActionEnum = "RevokeClusterSecurityGroupIngress"
)

func (e *GETRevokeClusterSecurityGroupIngressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RevokeClusterSecurityGroupIngress":
		*e = GETRevokeClusterSecurityGroupIngressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRevokeClusterSecurityGroupIngressActionEnum: %s", s)
	}
}

// GETRevokeClusterSecurityGroupIngressVersionEnum
type GETRevokeClusterSecurityGroupIngressVersionEnum string

const (
	GETRevokeClusterSecurityGroupIngressVersionEnumTwoThousandAndTwelve1201 GETRevokeClusterSecurityGroupIngressVersionEnum = "2012-12-01"
)

func (e *GETRevokeClusterSecurityGroupIngressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETRevokeClusterSecurityGroupIngressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRevokeClusterSecurityGroupIngressVersionEnum: %s", s)
	}
}

type GETRevokeClusterSecurityGroupIngressQueryParams struct {
	Action GETRevokeClusterSecurityGroupIngressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The IP range for which to revoke access. This range must be a valid Classless Inter-Domain Routing (CIDR) block of IP addresses. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided.
	Cidrip *string `queryParam:"style=form,explode=true,name=CIDRIP"`
	// The name of the security Group from which to revoke the ingress rule.
	ClusterSecurityGroupName string `queryParam:"style=form,explode=true,name=ClusterSecurityGroupName"`
	// The name of the EC2 Security Group whose access is to be revoked. If <code>EC2SecurityGroupName</code> is specified, <code>EC2SecurityGroupOwnerId</code> must also be provided and <code>CIDRIP</code> cannot be provided.
	Ec2SecurityGroupName *string `queryParam:"style=form,explode=true,name=EC2SecurityGroupName"`
	// <p>The Amazon Web Services account number of the owner of the security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID is not an acceptable value. If <code>EC2SecurityGroupOwnerId</code> is specified, <code>EC2SecurityGroupName</code> must also be provided. and <code>CIDRIP</code> cannot be provided. </p> <p>Example: <code>111122223333</code> </p>
	Ec2SecurityGroupOwnerID *string                                         `queryParam:"style=form,explode=true,name=EC2SecurityGroupOwnerId"`
	Version                 GETRevokeClusterSecurityGroupIngressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETRevokeClusterSecurityGroupIngressHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRevokeClusterSecurityGroupIngressRequest struct {
	QueryParams GETRevokeClusterSecurityGroupIngressQueryParams
	Headers     GETRevokeClusterSecurityGroupIngressHeaders
}

type GETRevokeClusterSecurityGroupIngressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
