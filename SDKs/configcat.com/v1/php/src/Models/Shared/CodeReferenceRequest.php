<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CodeReferenceRequest
{
    /**
     * The currently active branches of the repository. Each previously uploaded report that belongs to a non-reported active branch is being deleted.
     * 
     * @var ?array<string> $activeBranches
     */
	#[\JMS\Serializer\Annotation\SerializedName('activeBranches')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $activeBranches = null;
    
    /**
     * The source control branch on where the scan was performed. (Source of the branch selector on the ConfigCat Dashboard)
     * 
     * @var string $branch
     */
	#[\JMS\Serializer\Annotation\SerializedName('branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $branch;
    
    /**
     * The related commit's hash. (Appears on the ConfigCat Dashboard)
     * 
     * @var ?string $commitHash
     */
	#[\JMS\Serializer\Annotation\SerializedName('commitHash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitHash = null;
    
    /**
     * The related commit's URL. (Appears on the ConfigCat Dashboard)
     * 
     * @var ?string $commitUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('commitUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitUrl = null;
    
    /**
     * The Config's identifier the scanning was performed against.
     * 
     * @var string $configId
     */
	#[\JMS\Serializer\Annotation\SerializedName('configId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configId;
    
    /**
     * The actual code reference collection.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FlagReference> $flagReferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('flagReferences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FlagReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $flagReferences = null;
    
    /**
     * The source control repository that contains the scanned code. (Source of the repository selector on the ConfigCat Dashboard)
     * 
     * @var string $repository
     */
	#[\JMS\Serializer\Annotation\SerializedName('repository')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $repository;
    
    /**
     * The scanning tool's name. (Appears on the ConfigCat Dashboard)
     * 
     * @var ?string $uploader
     */
	#[\JMS\Serializer\Annotation\SerializedName('uploader')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uploader = null;
    
	public function __construct()
	{
		$this->activeBranches = null;
		$this->branch = "";
		$this->commitHash = null;
		$this->commitUrl = null;
		$this->configId = "";
		$this->flagReferences = null;
		$this->repository = "";
		$this->uploader = null;
	}
}
