/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetProductInfoRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=code",
  })
  code: string;
}

/**
 * The type of product code (UPC/EAN/ISBN).
 */
export enum GetProductInfo200ApplicationJSONCodeTypeEnum {
  Upc = "UPC",
  Ean = "EAN",
  Isbn = "ISBN",
}

/**
 * all matching product details.
 */
export class GetProductInfo200ApplicationJSONProduct extends SpeakeasyBase {
  /**
   * The brand of the product (if available).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: string;

  /**
   * The category of the product (if available).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  /**
   * A description of the product (if available).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The EAN code of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ean" })
  ean?: number;

  /**
   * The URL for the product image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl?: string;

  /**
   * The name of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The region of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * A list of additional item specifications (if available).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "specs" })
  specs?: string[][];

  /**
   * The UPC code of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upc" })
  upc?: number;
}

/**
 * The product corresponding to the provided `code`
 */
export class GetProductInfo200ApplicationJSON extends SpeakeasyBase {
  /**
   * The URL to the scannable barcode image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "barcodeUrl" })
  barcodeUrl?: string;

  /**
   * The type of product code (UPC/EAN/ISBN).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codeType" })
  codeType?: GetProductInfo200ApplicationJSONCodeTypeEnum;

  /**
   * all matching product details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "product" })
  @Type(() => GetProductInfo200ApplicationJSONProduct)
  product?: GetProductInfo200ApplicationJSONProduct;
}

export class GetProductInfoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * No product information was found for the given `code`.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * The product corresponding to the provided `code`
   */
  @SpeakeasyMetadata()
  getProductInfo200ApplicationJSONObject?: GetProductInfo200ApplicationJSON;
}
