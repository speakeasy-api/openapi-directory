/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { APNConfigRequest } from "./apnconfigrequest";
import { AsyncModerationConfigurationRequest } from "./asyncmoderationconfigurationrequest";
import { ConfigRequest } from "./configrequest";
import { FileUploadConfigRequest } from "./fileuploadconfigrequest";
import { FirebaseConfigRequest } from "./firebaseconfigrequest";
import { HuaweiConfigRequest } from "./huaweiconfigrequest";
import { PushConfigRequest } from "./pushconfigrequest";
import { XiaomiConfigRequest } from "./xiaomiconfigrequest";
import { Expose, Transform, Type } from "class-transformer";

export enum UpdateAppRequestEnforceUniqueUsernamesEnum {
  No = "no",
  App = "app",
  Team = "team",
}

export enum UpdateAppRequestPermissionVersionEnum {
  V1 = "v1",
  V2 = "v2",
}

export enum UpdateAppRequestVideoProviderEnum {
  Agora = "agora",
  Hms = "hms",
}

export class UpdateAppRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "agora_options" })
  @Type(() => ConfigRequest)
  agoraOptions?: ConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "apn_config" })
  @Type(() => APNConfigRequest)
  apnConfig?: APNConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "async_moderation_config" })
  @Type(() => AsyncModerationConfigurationRequest)
  asyncModerationConfig?: AsyncModerationConfigurationRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "async_url_enrich_enabled" })
  asyncUrlEnrichEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "auto_translation_enabled" })
  autoTranslationEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "before_message_send_hook_url" })
  beforeMessageSendHookUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cdn_expiration_seconds" })
  cdnExpirationSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "channel_hide_members_only" })
  channelHideMembersOnly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_action_handler_url" })
  customActionHandlerUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disable_auth_checks" })
  disableAuthChecks?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "disable_permissions_checks" })
  disablePermissionsChecks?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enforce_unique_usernames" })
  enforceUniqueUsernames?: UpdateAppRequestEnforceUniqueUsernamesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "file_upload_config" })
  @Type(() => FileUploadConfigRequest)
  fileUploadConfig?: FileUploadConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "firebase_config" })
  @Type(() => FirebaseConfigRequest)
  firebaseConfig?: FirebaseConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "grants" })
  grants?: Record<string, string[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "hms_options" })
  @Type(() => ConfigRequest)
  hmsOptions?: ConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "huawei_config" })
  @Type(() => HuaweiConfigRequest)
  huaweiConfig?: HuaweiConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "image_moderation_block_labels" })
  imageModerationBlockLabels?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "image_moderation_enabled" })
  imageModerationEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "image_moderation_labels" })
  imageModerationLabels?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "image_upload_config" })
  @Type(() => FileUploadConfigRequest)
  imageUploadConfig?: FileUploadConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "migrate_permissions_to_v2" })
  migratePermissionsToV2?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "multi_tenant_enabled" })
  multiTenantEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "permission_version" })
  permissionVersion?: UpdateAppRequestPermissionVersionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "push_config" })
  @Type(() => PushConfigRequest)
  pushConfig?: PushConfigRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "reminders_interval" })
  remindersInterval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "revoke_tokens_issued_before" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revokeTokensIssuedBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "sqs_key" })
  sqsKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sqs_secret" })
  sqsSecret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sqs_url" })
  sqsUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_search_disallowed_roles" })
  userSearchDisallowedRoles?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "video_provider" })
  videoProvider?: UpdateAppRequestVideoProviderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "webhook_events" })
  webhookEvents?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "webhook_url" })
  webhookUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "xiaomi_config" })
  @Type(() => XiaomiConfigRequest)
  xiaomiConfig?: XiaomiConfigRequest;
}
