/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AuditConfig - Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
 */
public class AuditConfig {
    /**
     * The configuration for logging of each type of permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auditLogConfigs")
    public AuditLogConfig[] auditLogConfigs;
    public AuditConfig withAuditLogConfigs(AuditLogConfig[] auditLogConfigs) {
        this.auditLogConfigs = auditLogConfigs;
        return this;
    }
    
    /**
     * This is deprecated and has no effect. Do not use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptedMembers")
    public String[] exemptedMembers;
    public AuditConfig withExemptedMembers(String[] exemptedMembers) {
        this.exemptedMembers = exemptedMembers;
        return this;
    }
    
    /**
     * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;
    public AuditConfig withService(String service) {
        this.service = service;
        return this;
    }
    
}
