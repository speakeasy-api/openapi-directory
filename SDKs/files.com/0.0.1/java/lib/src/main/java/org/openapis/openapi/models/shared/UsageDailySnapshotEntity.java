/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * UsageDailySnapshotEntity - List Usage Daily Snapshots
 */
public class UsageDailySnapshotEntity {
    /**
     * True if the API usage fields `read_api_usage` and `write_api_usage` can be relied upon.  If this is false, we suggest hiding that value from any UI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_usage_available")
    public Boolean apiUsageAvailable;
    public UsageDailySnapshotEntity withApiUsageAvailable(Boolean apiUsageAvailable) {
        this.apiUsageAvailable = apiUsageAvailable;
        return this;
    }
    
    /**
     * GB of Files Native Storage used on this day.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_storage")
    public Integer currentStorage;
    public UsageDailySnapshotEntity withCurrentStorage(Integer currentStorage) {
        this.currentStorage = currentStorage;
        return this;
    }
    
    /**
     * The date of this usage record
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date")
    public LocalDate date;
    public UsageDailySnapshotEntity withDate(LocalDate date) {
        this.date = date;
        return this;
    }
    
    /**
     * GB of Files Native Storage used on this day for files that have been permanently deleted but were uploaded less than 30 days ago, and are still billable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted_files_counted_in_minimum")
    public Integer deletedFilesCountedInMinimum;
    public UsageDailySnapshotEntity withDeletedFilesCountedInMinimum(Integer deletedFilesCountedInMinimum) {
        this.deletedFilesCountedInMinimum = deletedFilesCountedInMinimum;
        return this;
    }
    
    /**
     * GB of Files Native Storage used on this day for files that have been deleted and are stored as backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted_files_storage")
    public Integer deletedFilesStorage;
    public UsageDailySnapshotEntity withDeletedFilesStorage(Integer deletedFilesStorage) {
        this.deletedFilesStorage = deletedFilesStorage;
        return this;
    }
    
    /**
     * ID of the usage record
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public UsageDailySnapshotEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Read API Calls used on this day. Note: only updated for days before the current day.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read_api_usage")
    public Integer readApiUsage;
    public UsageDailySnapshotEntity withReadApiUsage(Integer readApiUsage) {
        this.readApiUsage = readApiUsage;
        return this;
    }
    
    /**
     * GB of Files Native Storage used for the root folder.  Included here because this value will not be part of `usage_by_top_level_dir`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("root_storage")
    public Integer rootStorage;
    public UsageDailySnapshotEntity withRootStorage(Integer rootStorage) {
        this.rootStorage = rootStorage;
        return this;
    }
    
    /**
     * Usage broken down by each top-level folder
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage_by_top_level_dir")
    public java.util.Map<String, Object> usageByTopLevelDir;
    public UsageDailySnapshotEntity withUsageByTopLevelDir(java.util.Map<String, Object> usageByTopLevelDir) {
        this.usageByTopLevelDir = usageByTopLevelDir;
        return this;
    }
    
    /**
     * Number of billable users as of this day.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_count")
    public Integer userCount;
    public UsageDailySnapshotEntity withUserCount(Integer userCount) {
        this.userCount = userCount;
        return this;
    }
    
    /**
     * Write API Calls used on this day. Note: only updated for days before the current day.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("write_api_usage")
    public Integer writeApiUsage;
    public UsageDailySnapshotEntity withWriteApiUsage(Integer writeApiUsage) {
        this.writeApiUsage = writeApiUsage;
        return this;
    }
    
}
