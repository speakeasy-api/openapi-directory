"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import bundleentity as shared_bundleentity
from datetime import datetime
from enum import Enum
from typing import Optional

class PostBundlesRequestBodyPermissionsEnum(str, Enum):
    r"""Permissions that apply to Folders in this Share Link."""
    READ = 'read'
    WRITE = 'write'
    READ_WRITE = 'read_write'
    FULL = 'full'
    NONE = 'none'
    PREVIEW_ONLY = 'preview_only'


@dataclasses.dataclass
class PostBundlesRequestBodyWatermarkAttachmentFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    watermark_attachment_file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'watermark_attachment_file' }})  
    

@dataclasses.dataclass
class PostBundlesRequestBody:
    
    paths: list[str] = dataclasses.field(metadata={'multipart_form': { 'field_name': 'paths' }})
    r"""A list of paths to include in this bundle."""  
    clickwrap_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'clickwrap_id' }})
    r"""ID of the clickwrap to use with this bundle."""  
    code: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'code' }})
    r"""Bundle code.  This code forms the end part of the Public URL."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description' }})
    r"""Public description"""  
    dont_separate_submissions_by_folder: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'dont_separate_submissions_by_folder' }})
    r"""Do not create subfolders for files uploaded to this share. Note: there are subtle security pitfalls with allowing anonymous uploads from multiple users to live in the same folder. We strongly discourage use of this option unless absolutely required."""  
    expires_at: Optional[datetime] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'expires_at' }})
    r"""Bundle expiration date/time"""  
    form_field_set_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'form_field_set_id' }})
    r"""Id of Form Field Set to use with this bundle"""  
    inbox_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'inbox_id' }})
    r"""ID of the associated inbox, if available."""  
    max_uses: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'max_uses' }})
    r"""Maximum number of times bundle can be accessed"""  
    note: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'note' }})
    r"""Bundle internal note"""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'password' }})
    r"""Password for this bundle."""  
    path_template: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'path_template' }})
    r"""Template for creating submission subfolders. Can use the uploader's name, email address, ip, company, and any custom form data."""  
    permissions: Optional[PostBundlesRequestBodyPermissionsEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'permissions' }})
    r"""Permissions that apply to Folders in this Share Link."""  
    preview_only: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'preview_only' }})
    r"""Restrict users to previewing files only?"""  
    require_registration: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'require_registration' }})
    r"""Show a registration page that captures the downloader's name and email address?"""  
    require_share_recipient: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'require_share_recipient' }})
    r"""Only allow access to recipients who have explicitly received the share via an email sent through the Files.com UI?"""  
    send_email_receipt_to_uploader: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'send_email_receipt_to_uploader' }})
    r"""Send delivery receipt to the uploader. Note: For writable share only"""  
    skip_company: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'skip_company' }})
    r"""BundleRegistrations can be saved without providing company?"""  
    skip_email: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'skip_email' }})
    r"""BundleRegistrations can be saved without providing email?"""  
    skip_name: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'skip_name' }})
    r"""BundleRegistrations can be saved without providing name?"""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user_id' }})
    r"""User ID.  Provide a value of `0` to operate the current session's user."""  
    watermark_attachment_file: Optional[PostBundlesRequestBodyWatermarkAttachmentFile] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})
    r"""Preview watermark image applied to all bundle items."""  
    

@dataclasses.dataclass
class PostBundlesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bundle_entity: Optional[shared_bundleentity.BundleEntity] = dataclasses.field(default=None)
    r"""The Bundles object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    