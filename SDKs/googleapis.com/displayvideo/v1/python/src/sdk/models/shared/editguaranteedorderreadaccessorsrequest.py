"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EditGuaranteedOrderReadAccessorsRequest:
    r"""Request message for GuaranteedOrderService.EditGuaranteedOrderReadAccessors."""
    
    added_advertisers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addedAdvertisers'), 'exclude': lambda f: f is None }})
    r"""The advertisers to add as read accessors to the guaranteed order."""  
    partner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partnerId'), 'exclude': lambda f: f is None }})
    r"""Required. The partner context in which the change is being made."""  
    read_access_inherited: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readAccessInherited'), 'exclude': lambda f: f is None }})
    r"""Whether to give all advertisers of the read/write accessor partner read access to the guaranteed order. Only applicable if read_write_partner_id is set in the guaranteed order."""  
    removed_advertisers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removedAdvertisers'), 'exclude': lambda f: f is None }})
    r"""The advertisers to remove as read accessors to the guaranteed order."""  
    