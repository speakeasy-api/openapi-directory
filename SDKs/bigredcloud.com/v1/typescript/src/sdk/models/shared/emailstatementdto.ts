/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class EmailStatementDto extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bccAddresses" })
  bccAddresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "customerId" })
  customerId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fromPeriod" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fromPeriod?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "messageBody" })
  messageBody?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minimumBalance" })
  minimumBalance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "toAddress" })
  toAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "toPeriod" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  toPeriod?: Date;
}
