// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// AggregateClassificationMetrics - Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.
type AggregateClassificationMetrics struct {
	// Accuracy is the fraction of predictions given the correct label. For multiclass this is a micro-averaged metric.
	Accuracy *float64 `json:"accuracy,omitempty"`
	// The F1 score is an average of recall and precision. For multiclass this is a macro-averaged metric.
	F1Score *float64 `json:"f1Score,omitempty"`
	// Logarithmic Loss. For multiclass this is a macro-averaged metric.
	LogLoss *float64 `json:"logLoss,omitempty"`
	// Precision is the fraction of actual positive predictions that had positive actual labels. For multiclass this is a macro-averaged metric treating each class as a binary classifier.
	Precision *float64 `json:"precision,omitempty"`
	// Recall is the fraction of actual positive labels that were given a positive prediction. For multiclass this is a macro-averaged metric.
	Recall *float64 `json:"recall,omitempty"`
	// Area Under a ROC Curve. For multiclass this is a macro-averaged metric.
	RocAuc *float64 `json:"rocAuc,omitempty"`
	// Threshold at which the metrics are computed. For binary classification models this is the positive class threshold. For multi-class classfication models this is the confidence threshold.
	Threshold *float64 `json:"threshold,omitempty"`
}
