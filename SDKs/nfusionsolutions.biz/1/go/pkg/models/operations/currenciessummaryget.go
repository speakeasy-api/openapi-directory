// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CurrenciesSummaryGETFormatEnum - to override content negotiation specify a value of json or xml
type CurrenciesSummaryGETFormatEnum string

const (
	CurrenciesSummaryGETFormatEnumJSON CurrenciesSummaryGETFormatEnum = "json"
	CurrenciesSummaryGETFormatEnumXML  CurrenciesSummaryGETFormatEnum = "xml"
)

func (e CurrenciesSummaryGETFormatEnum) ToPointer() *CurrenciesSummaryGETFormatEnum {
	return &e
}

func (e *CurrenciesSummaryGETFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = CurrenciesSummaryGETFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CurrenciesSummaryGETFormatEnum: %v", v)
	}
}

type CurrenciesSummaryGETRequest struct {
	// to override content negotiation specify a value of json or xml
	Format *CurrenciesSummaryGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// comma separated list of currency pairs. For example: USD/CAD,USD/EUR,USD/AUD
	Pairs string `queryParam:"style=form,explode=true,name=pairs"`
}

type CurrenciesSummaryGETResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	SummaryResponses []shared.SummaryResponse
}
