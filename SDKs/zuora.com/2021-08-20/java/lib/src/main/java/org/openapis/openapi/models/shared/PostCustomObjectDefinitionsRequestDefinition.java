/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostCustomObjectDefinitionsRequestDefinition {
    /**
     * The set of fields that are allowed to be queried on. Queries on non-filterable fields will be rejected. You can not change a non-filterable field to filterable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterable")
    public String[] filterable;
    public PostCustomObjectDefinitionsRequestDefinition withFilterable(String[] filterable) {
        this.filterable = filterable;
        return this;
    }
    
    /**
     * A UI label for the custom object
     */
    @JsonProperty("label")
    public String label;
    public PostCustomObjectDefinitionsRequestDefinition withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * The API name of the custom object
     */
    @JsonProperty("object")
    public String object;
    public PostCustomObjectDefinitionsRequestDefinition withObject(String object) {
        this.object = object;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, PostCustomObjectDefinitionFieldDefinitionRequest> properties;
    public PostCustomObjectDefinitionsRequestDefinition withProperties(java.util.Map<String, PostCustomObjectDefinitionFieldDefinitionRequest> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * An array of relationships with Zuora objects or other custom objects. You can add at most 2 `manyToOne` relationships when creating a custom field definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationships")
    public PostCustomObjectDefinitionsRequestDefinitionRelationships[] relationships;
    public PostCustomObjectDefinitionsRequestDefinition withRelationships(PostCustomObjectDefinitionsRequestDefinitionRelationships[] relationships) {
        this.relationships = relationships;
        return this;
    }
    
    /**
     * The required fields of the custom object. You can change required fields to optional. However, you can only change optional fields to required on the custom objects with no records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public String[] required;
    public PostCustomObjectDefinitionsRequestDefinition withRequired(String[] required) {
        this.required = required;
        return this;
    }
    
}
