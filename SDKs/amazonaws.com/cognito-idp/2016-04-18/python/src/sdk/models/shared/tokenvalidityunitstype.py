"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeunitstype_enum as shared_timeunitstype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TokenValidityUnitsType:
    r"""The data type TokenValidityUnits specifies the time units you use when you set the duration of ID, access, and refresh tokens."""
    
    access_token: Optional[shared_timeunitstype_enum.TimeUnitsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessToken'), 'exclude': lambda f: f is None }})  
    id_token: Optional[shared_timeunitstype_enum.TimeUnitsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IdToken'), 'exclude': lambda f: f is None }})  
    refresh_token: Optional[shared_timeunitstype_enum.TimeUnitsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefreshToken'), 'exclude': lambda f: f is None }})  
    