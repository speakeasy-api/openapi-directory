// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DBProxyStatusEnum string

const (
	DBProxyStatusEnumAvailable                  DBProxyStatusEnum = "available"
	DBProxyStatusEnumModifying                  DBProxyStatusEnum = "modifying"
	DBProxyStatusEnumIncompatibleNetwork        DBProxyStatusEnum = "incompatible-network"
	DBProxyStatusEnumInsufficientResourceLimits DBProxyStatusEnum = "insufficient-resource-limits"
	DBProxyStatusEnumCreating                   DBProxyStatusEnum = "creating"
	DBProxyStatusEnumDeleting                   DBProxyStatusEnum = "deleting"
	DBProxyStatusEnumSuspended                  DBProxyStatusEnum = "suspended"
	DBProxyStatusEnumSuspending                 DBProxyStatusEnum = "suspending"
	DBProxyStatusEnumReactivating               DBProxyStatusEnum = "reactivating"
)

func (e *DBProxyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "incompatible-network":
		fallthrough
	case "insufficient-resource-limits":
		fallthrough
	case "creating":
		fallthrough
	case "deleting":
		fallthrough
	case "suspended":
		fallthrough
	case "suspending":
		fallthrough
	case "reactivating":
		*e = DBProxyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DBProxyStatusEnum: %s", s)
	}
}
