/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FrequencyCap - Message contains details about publisher-set frequency caps of the delivery.
 */
public class FrequencyCap {
    /**
     * The maximum number of impressions that can be served to a user within the specified time period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxImpressions")
    public Integer maxImpressions;

    public FrequencyCap withMaxImpressions(Integer maxImpressions) {
        this.maxImpressions = maxImpressions;
        return this;
    }
    
    /**
     * The time unit. Along with num_time_units defines the amount of time over which impressions per user are counted and capped.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeUnitType")
    public FrequencyCapTimeUnitTypeEnum timeUnitType;

    public FrequencyCap withTimeUnitType(FrequencyCapTimeUnitTypeEnum timeUnitType) {
        this.timeUnitType = timeUnitType;
        return this;
    }
    
    /**
     * The amount of time, in the units specified by time_unit_type. Defines the amount of time over which impressions per user are counted and capped.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeUnitsCount")
    public Integer timeUnitsCount;

    public FrequencyCap withTimeUnitsCount(Integer timeUnitsCount) {
        this.timeUnitsCount = timeUnitsCount;
        return this;
    }
    
    public FrequencyCap(){}
}
