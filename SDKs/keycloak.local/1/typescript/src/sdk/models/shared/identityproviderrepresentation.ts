/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * JSON body
 */
export class IdentityProviderRepresentation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addReadTokenRoleOnCreate" })
  addReadTokenRoleOnCreate?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  config?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "firstBrokerLoginFlowAlias" })
  firstBrokerLoginFlowAlias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "internalId" })
  internalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "linkOnly" })
  linkOnly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "postBrokerLoginFlowAlias" })
  postBrokerLoginFlowAlias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "storeToken" })
  storeToken?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "trustEmail" })
  trustEmail?: boolean;
}
