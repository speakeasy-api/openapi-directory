// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GrantStatusEnum string

const (
	GrantStatusEnumPendingWorkflow   GrantStatusEnum = "PENDING_WORKFLOW"
	GrantStatusEnumPendingAccept     GrantStatusEnum = "PENDING_ACCEPT"
	GrantStatusEnumRejected          GrantStatusEnum = "REJECTED"
	GrantStatusEnumActive            GrantStatusEnum = "ACTIVE"
	GrantStatusEnumFailedWorkflow    GrantStatusEnum = "FAILED_WORKFLOW"
	GrantStatusEnumDeleted           GrantStatusEnum = "DELETED"
	GrantStatusEnumPendingDelete     GrantStatusEnum = "PENDING_DELETE"
	GrantStatusEnumDisabled          GrantStatusEnum = "DISABLED"
	GrantStatusEnumWorkflowCompleted GrantStatusEnum = "WORKFLOW_COMPLETED"
)

func (e GrantStatusEnum) ToPointer() *GrantStatusEnum {
	return &e
}

func (e *GrantStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_WORKFLOW":
		fallthrough
	case "PENDING_ACCEPT":
		fallthrough
	case "REJECTED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED_WORKFLOW":
		fallthrough
	case "DELETED":
		fallthrough
	case "PENDING_DELETE":
		fallthrough
	case "DISABLED":
		fallthrough
	case "WORKFLOW_COMPLETED":
		*e = GrantStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantStatusEnum: %v", v)
	}
}
