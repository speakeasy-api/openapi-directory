// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum string

const (
	MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnumGet  MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum = "GET"
	MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnumPost MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum = "POST"
	MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnumPut  MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum = "PUT"
)

func (e MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum) ToPointer() *MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum {
	return &e
}

func (e *MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		*e = MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum: %v", v)
	}
}

// MeetingsCapabilityWebhooksRecordingChanged - Vonage will send recording changed events to this URL
type MeetingsCapabilityWebhooksRecordingChanged struct {
	Address    *string                                                   `json:"address,omitempty"`
	HTTPMethod *MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum `json:"http_method,omitempty"`
}

type MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum string

const (
	MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnumGet  MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum = "GET"
	MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnumPost MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum = "POST"
	MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnumPut  MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum = "PUT"
)

func (e MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum) ToPointer() *MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum {
	return &e
}

func (e *MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		*e = MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum: %v", v)
	}
}

// MeetingsCapabilityWebhooksRoomChanged - Vonage will send call room changed events to this URL
type MeetingsCapabilityWebhooksRoomChanged struct {
	Address    *string                                              `json:"address,omitempty"`
	HTTPMethod *MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum `json:"http_method,omitempty"`
}

type MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum string

const (
	MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnumGet  MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum = "GET"
	MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnumPost MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum = "POST"
	MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnumPut  MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum = "PUT"
)

func (e MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum) ToPointer() *MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum {
	return &e
}

func (e *MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		*e = MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum: %v", v)
	}
}

// MeetingsCapabilityWebhooksSessionChanged - Vonage will send call session changed events to this URL
type MeetingsCapabilityWebhooksSessionChanged struct {
	Address    *string                                                 `json:"address,omitempty"`
	HTTPMethod *MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum `json:"http_method,omitempty"`
}

type MeetingsCapabilityWebhooks struct {
	// Vonage will send recording changed events to this URL
	RecordingChanged *MeetingsCapabilityWebhooksRecordingChanged `json:"recording_changed,omitempty"`
	// Vonage will send call room changed events to this URL
	RoomChanged *MeetingsCapabilityWebhooksRoomChanged `json:"room_changed,omitempty"`
	// Vonage will send call session changed events to this URL
	SessionChanged *MeetingsCapabilityWebhooksSessionChanged `json:"session_changed,omitempty"`
}

// MeetingsCapability - Meetings related configuration
type MeetingsCapability struct {
	Webhooks *MeetingsCapabilityWebhooks `json:"webhooks,omitempty"`
}
