// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type TeamsAddUserSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// TeamsAddUserRequestBody - The email of the user to add to the team
type TeamsAddUserRequestBody struct {
	// The user's email address
	UserEmail string `json:"user_email"`
}

type TeamsAddUserRequest struct {
	// The email of the user to add to the team
	RequestBody TeamsAddUserRequestBody `request:"mediaType=application/json"`
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
	// The team's name
	TeamName string `pathParam:"style=simple,explode=false,name=team_name"`
}

type TeamsAddUserDefaultApplicationJSONErrorCodeEnum string

const (
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumBadRequest          TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumConflict            TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "Conflict"
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumNotAcceptable       TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumNotFound            TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "NotFound"
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumInternalServerError TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumUnauthorized        TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	TeamsAddUserDefaultApplicationJSONErrorCodeEnumTooManyRequests     TeamsAddUserDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *TeamsAddUserDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = TeamsAddUserDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsAddUserDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type TeamsAddUserDefaultApplicationJSONError struct {
	Code    TeamsAddUserDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                          `json:"message"`
}

// TeamsAddUserDefaultApplicationJSON - Error
type TeamsAddUserDefaultApplicationJSON struct {
	Error TeamsAddUserDefaultApplicationJSONError `json:"error"`
}

// TeamsAddUser201ApplicationJSONRoleEnum - The role of the user has within the team
type TeamsAddUser201ApplicationJSONRoleEnum string

const (
	TeamsAddUser201ApplicationJSONRoleEnumMaintainer   TeamsAddUser201ApplicationJSONRoleEnum = "maintainer"
	TeamsAddUser201ApplicationJSONRoleEnumCollaborator TeamsAddUser201ApplicationJSONRoleEnum = "collaborator"
)

func (e *TeamsAddUser201ApplicationJSONRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "maintainer":
		fallthrough
	case "collaborator":
		*e = TeamsAddUser201ApplicationJSONRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsAddUser201ApplicationJSONRoleEnum: %s", s)
	}
}

// TeamsAddUser201ApplicationJSON - Success
type TeamsAddUser201ApplicationJSON struct {
	// The full name of the user. Might for example be first and last name
	DisplayName string `json:"display_name"`
	// The email address of the user
	Email string `json:"email"`
	// The unique name that is used to identify the user.
	Name string `json:"name"`
	// The role of the user has within the team
	Role TeamsAddUser201ApplicationJSONRoleEnum `json:"role"`
}

type TeamsAddUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	TeamsAddUser201ApplicationJSONObject *TeamsAddUser201ApplicationJSON
	// Error
	TeamsAddUserDefaultApplicationJSONObject *TeamsAddUserDefaultApplicationJSON
}
