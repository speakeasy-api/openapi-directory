"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import credit as shared_credit
from enum import Enum
from typing import Optional

class GetVideoCreditsAlt1DirectionEnum(str, Enum):
    r"""The sort direction of the results."""
    ASC = 'asc'
    DESC = 'desc'

class GetVideoCreditsAlt1SortEnum(str, Enum):
    r"""The way to sort the results."""
    ALPHABETICAL = 'alphabetical'
    DATE = 'date'


@dataclasses.dataclass
class GetVideoCreditsAlt1Request:
    
    channel_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'channel_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the channel."""  
    video_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'video_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the video."""  
    direction: Optional[GetVideoCreditsAlt1DirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""The sort direction of the results."""  
    page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The page number of the results to show."""  
    per_page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""The number of items to show on each page of results, up to a maximum of 100."""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""The search query to use to filter the results."""  
    sort: Optional[GetVideoCreditsAlt1SortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""The way to sort the results."""  
    

@dataclasses.dataclass
class GetVideoCreditsAlt1Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    credits: Optional[list[shared_credit.Credit]] = dataclasses.field(default=None)
    r"""The users were returned."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    