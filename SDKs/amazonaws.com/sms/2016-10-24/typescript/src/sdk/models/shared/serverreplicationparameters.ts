/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LicenseTypeEnum } from "./licensetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The replication parameters for replicating a server.
 */
export class ServerReplicationParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "encrypted" })
  encrypted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "licenseType" })
  licenseType?: LicenseTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "numberOfRecentAmisToKeep" })
  numberOfRecentAmisToKeep?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "runOnce" })
  runOnce?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "seedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  seedTime?: Date;
}
