/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Media type of the license
 */
export enum LicenseFormatMediaTypeEnum {
  Image = "image",
  Video = "video",
  Audio = "audio",
  Editorial = "editorial",
}

/**
 * Description of a license
 */
export class LicenseFormat extends SpeakeasyBase {
  /**
   * Description of the license
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Format or extension of the media, such as mpeg for videos or jpeg for images
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: string;

  /**
   * Media type of the license
   */
  @SpeakeasyMetadata()
  @Expose({ name: "media_type" })
  mediaType?: LicenseFormatMediaTypeEnum;

  /**
   * Width of the media, in pixels, allowed by this license
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min_resolution" })
  minResolution?: number;

  /**
   * Keyword that details the size of the media, such as hd or sd for video, huge or vector for images
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: string;
}
