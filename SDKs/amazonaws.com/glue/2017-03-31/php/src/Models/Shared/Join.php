<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Join - Specifies a transform that joins two datasets into one dataset using a comparison phrase on the specified data property keys. You can use inner, outer, left, right, left semi, and left anti joins.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Join
{
    /**
     * $columns
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\JoinColumn> $columns
     */
	#[\JMS\Serializer\Annotation\SerializedName('Columns')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\JoinColumn>')]
    public array $columns;
    
    /**
     * $inputs
     * 
     * @var array<string> $inputs
     */
	#[\JMS\Serializer\Annotation\SerializedName('Inputs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $inputs;
    
	#[\JMS\Serializer\Annotation\SerializedName('JoinType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\JoinTypeEnum>')]
    public JoinTypeEnum $joinType;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	public function __construct()
	{
		$this->columns = [];
		$this->inputs = [];
		$this->joinType = \OpenAPI\OpenAPI\Models\Shared\JoinTypeEnum::EQUIJOIN;
		$this->name = "";
	}
}
