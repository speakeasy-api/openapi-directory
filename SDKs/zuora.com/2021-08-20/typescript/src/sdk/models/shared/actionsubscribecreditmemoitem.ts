/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ActionSubscribeCreditMemoItem extends SpeakeasyBase {
  /**
   * The credit memo item amount excluding tax.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AmountWithoutTax" })
  amountWithoutTax?: number;

  /**
   * Name of this credit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeName" })
  chargeName?: string;

  /**
   * Description of this credit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * ID of the product rate plan charge associated with this credit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductRatePlanChargeId" })
  productRatePlanChargeId?: string;

  /**
   * Quantity of the charge associated with this credit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Quantity" })
  quantity?: number;

  /**
   * End date of the service period for this credit memo item, as yyyy-mm-dd.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceEndDate?: Date;

  /**
   * Service start date of this credit memo item, as yyyy-mm-dd.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceStartDate?: Date;

  /**
   * The tax amount of the credit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxAmount" })
  taxAmount?: number;

  /**
   * Unit used to measure consumption.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UnitOfMeasure" })
  unitOfMeasure?: string;
}
