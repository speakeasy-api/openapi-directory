/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudOrgpolicyV2Constraint - A constraint describes a way to restrict resource's configuration. For example, you could enforce a constraint that controls which Google Cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. Constraints can be configured by the organization policy administrator to fit the needs of the organization by setting a policy that includes constraints at different locations in the organization's resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about `policies`. Constraints have a default behavior determined by the `constraint_default` field, which is the enforcement behavior that is used in the absence of a policy being defined or inherited for the resource in question.
 */
public class GoogleCloudOrgpolicyV2Constraint {
    /**
     * A constraint that is either enforced or not. For example, a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("booleanConstraint")
    public java.util.Map<String, Object> booleanConstraint;

    public GoogleCloudOrgpolicyV2Constraint withBooleanConstraint(java.util.Map<String, Object> booleanConstraint) {
        this.booleanConstraint = booleanConstraint;
        return this;
    }
    
    /**
     * The evaluation behavior of this constraint in the absence of a policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("constraintDefault")
    public GoogleCloudOrgpolicyV2ConstraintConstraintDefaultEnum constraintDefault;

    public GoogleCloudOrgpolicyV2Constraint withConstraintDefault(GoogleCloudOrgpolicyV2ConstraintConstraintDefaultEnum constraintDefault) {
        this.constraintDefault = constraintDefault;
        return this;
    }
    
    /**
     * Detailed description of what this constraint controls as well as how and where it is enforced. Mutable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GoogleCloudOrgpolicyV2Constraint withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The human readable name. Mutable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public GoogleCloudOrgpolicyV2Constraint withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A constraint that allows or disallows a list of string values, which are configured by an Organization Policy administrator with a policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listConstraint")
    public GoogleCloudOrgpolicyV2ConstraintListConstraint listConstraint;

    public GoogleCloudOrgpolicyV2Constraint withListConstraint(GoogleCloudOrgpolicyV2ConstraintListConstraint listConstraint) {
        this.listConstraint = listConstraint;
        return this;
    }
    
    /**
     * Immutable. The resource name of the constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, "/projects/123/constraints/compute.disableSerialPortAccess".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudOrgpolicyV2Constraint withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Shows if dry run is supported for this constraint or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportsDryRun")
    public Boolean supportsDryRun;

    public GoogleCloudOrgpolicyV2Constraint withSupportsDryRun(Boolean supportsDryRun) {
        this.supportsDryRun = supportsDryRun;
        return this;
    }
    
    public GoogleCloudOrgpolicyV2Constraint(){}
}
