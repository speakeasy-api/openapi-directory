/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Commit } from "./commit";
import { DiffEntry } from "./diffentry";
import { Expose, Type } from "class-transformer";

export enum CommitComparisonStatusEnum {
  Diverged = "diverged",
  Ahead = "ahead",
  Behind = "behind",
  Identical = "identical",
}

/**
 * Commit Comparison
 */
export class CommitComparison extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ahead_by" })
  aheadBy: number;

  /**
   * Commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "base_commit" })
  @Type(() => Commit)
  baseCommit: Commit;

  @SpeakeasyMetadata()
  @Expose({ name: "behind_by" })
  behindBy: number;

  @SpeakeasyMetadata({ elemType: Commit })
  @Expose({ name: "commits" })
  @Type(() => Commit)
  commits: Commit[];

  @SpeakeasyMetadata()
  @Expose({ name: "diff_url" })
  diffUrl: string;

  @SpeakeasyMetadata({ elemType: DiffEntry })
  @Expose({ name: "files" })
  @Type(() => DiffEntry)
  files?: DiffEntry[];

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * Commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merge_base_commit" })
  @Type(() => Commit)
  mergeBaseCommit: Commit;

  @SpeakeasyMetadata()
  @Expose({ name: "patch_url" })
  patchUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "permalink_url" })
  permalinkUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CommitComparisonStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "total_commits" })
  totalCommits: number;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
