"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsecsservicedeploymentconfigurationdeploymentcircuitbreakerdetails as shared_awsecsservicedeploymentconfigurationdeploymentcircuitbreakerdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEcsServiceDeploymentConfigurationDetails:
    r"""Optional deployment parameters for the service."""
    
    deployment_circuit_breaker: Optional[shared_awsecsservicedeploymentconfigurationdeploymentcircuitbreakerdetails.AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeploymentCircuitBreaker'), 'exclude': lambda f: f is None }})  
    maximum_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumPercent'), 'exclude': lambda f: f is None }})  
    minimum_healthy_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumHealthyPercent'), 'exclude': lambda f: f is None }})  
    