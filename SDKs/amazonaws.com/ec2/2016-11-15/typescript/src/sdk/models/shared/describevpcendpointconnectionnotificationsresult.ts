/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The state of the notification.
 */
export enum DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSetConnectionNotificationStateEnum {
  Enabled = "Enabled",
  Disabled = "Disabled",
}

/**
 * The type of notification.
 */
export enum DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSetConnectionNotificationTypeEnum {
  Topic = "Topic",
}

/**
 * Describes a connection notification for a VPC endpoint or VPC endpoint service.
 */
export class DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  connectionEvents?: string[];

  @SpeakeasyMetadata()
  connectionNotificationArn?: string;

  @SpeakeasyMetadata()
  connectionNotificationId?: string;

  @SpeakeasyMetadata()
  connectionNotificationState?: DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSetConnectionNotificationStateEnum;

  @SpeakeasyMetadata()
  connectionNotificationType?: DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSetConnectionNotificationTypeEnum;

  @SpeakeasyMetadata()
  serviceId?: string;

  @SpeakeasyMetadata()
  vpcEndpointId?: string;
}

/**
 * Success
 */
export class DescribeVpcEndpointConnectionNotificationsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSet,
  })
  connectionNotificationSet?: DescribeVpcEndpointConnectionNotificationsResultConnectionNotificationSet[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
