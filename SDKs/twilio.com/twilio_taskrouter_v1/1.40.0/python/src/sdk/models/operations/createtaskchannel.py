"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import taskrouter_v1_workspace_task_channel as shared_taskrouter_v1_workspace_task_channel
from typing import Optional

CREATE_TASK_CHANNEL_SERVERS = [
	"https://taskrouter.twilio.com",
]


@dataclasses.dataclass
class CreateTaskChannelSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateTaskChannelCreateTaskChannelRequest:
    
    friendly_name: str = dataclasses.field(metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the Task Channel. It can be up to 64 characters long."""  
    unique_name: str = dataclasses.field(metadata={'form': { 'field_name': 'UniqueName' }})
    r"""An application-defined string that uniquely identifies the Task Channel, such as `voice` or `sms`."""  
    channel_optimized_routing: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ChannelOptimizedRouting' }})
    r"""Whether the Task Channel should prioritize Workers that have been idle. If `true`, Workers that have been idle the longest are prioritized."""  
    

@dataclasses.dataclass
class CreateTaskChannelRequest:
    
    workspace_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'WorkspaceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Workspace that the new Task Channel belongs to."""  
    request_body: Optional[CreateTaskChannelCreateTaskChannelRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateTaskChannelResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    taskrouter_v1_workspace_task_channel: Optional[shared_taskrouter_v1_workspace_task_channel.TaskrouterV1WorkspaceTaskChannel] = dataclasses.field(default=None)
    r"""Created"""  
    