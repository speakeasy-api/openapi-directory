/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GitCreateCommitRequestBody {
    /**
     * Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public GitCreateCommitRequestBodyAuthor author;
    public GitCreateCommitRequestBody withAuthor(GitCreateCommitRequestBodyAuthor author) {
        this.author = author;
        return this;
    }
    
    /**
     * Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committer")
    public GitCreateCommitRequestBodyCommitter committer;
    public GitCreateCommitRequestBody withCommitter(GitCreateCommitRequestBodyCommitter committer) {
        this.committer = committer;
        return this;
    }
    
    /**
     * The commit message
     */
    @JsonProperty("message")
    public String message;
    public GitCreateCommitRequestBody withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parents")
    public String[] parents;
    public GitCreateCommitRequestBody withParents(String[] parents) {
        this.parents = parents;
        return this;
    }
    
    /**
     * The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signature")
    public String signature;
    public GitCreateCommitRequestBody withSignature(String signature) {
        this.signature = signature;
        return this;
    }
    
    /**
     * The SHA of the tree object this commit points to
     */
    @JsonProperty("tree")
    public String tree;
    public GitCreateCommitRequestBody withTree(String tree) {
        this.tree = tree;
        return this;
    }
    
}
