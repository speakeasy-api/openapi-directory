/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GlossaryInputConfig } from "./glossaryinputconfig";
import { LanguageCodePair } from "./languagecodepair";
import { LanguageCodesSet } from "./languagecodesset";
import { Expose, Type } from "class-transformer";

/**
 * Represents a glossary built from user-provided data.
 */
export class Glossary extends SpeakeasyBase {
  /**
   * Optional. The display name of the glossary.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Output only. When the glossary creation was finished.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Output only. The number of entries defined in the glossary.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entryCount" })
  entryCount?: number;

  /**
   * Input configuration for glossaries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputConfig" })
  @Type(() => GlossaryInputConfig)
  inputConfig?: GlossaryInputConfig;

  /**
   * Used with equivalent term set glossaries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCodesSet" })
  @Type(() => LanguageCodesSet)
  languageCodesSet?: LanguageCodesSet;

  /**
   * Used with unidirectional glossaries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languagePair" })
  @Type(() => LanguageCodePair)
  languagePair?: LanguageCodePair;

  /**
   * Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. When CreateGlossary was called.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submitTime" })
  submitTime?: string;
}

/**
 * Represents a glossary built from user-provided data.
 */
export class GlossaryInput extends SpeakeasyBase {
  /**
   * Optional. The display name of the glossary.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Input configuration for glossaries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputConfig" })
  @Type(() => GlossaryInputConfig)
  inputConfig?: GlossaryInputConfig;

  /**
   * Used with equivalent term set glossaries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCodesSet" })
  @Type(() => LanguageCodesSet)
  languageCodesSet?: LanguageCodesSet;

  /**
   * Used with unidirectional glossaries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languagePair" })
  @Type(() => LanguageCodePair)
  languagePair?: LanguageCodePair;

  /**
   * Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
