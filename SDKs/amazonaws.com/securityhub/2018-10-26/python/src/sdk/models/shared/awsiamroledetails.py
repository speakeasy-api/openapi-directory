"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsiamattachedmanagedpolicy as shared_awsiamattachedmanagedpolicy
from ..shared import awsiaminstanceprofile as shared_awsiaminstanceprofile
from ..shared import awsiampermissionsboundary as shared_awsiampermissionsboundary
from ..shared import awsiamrolepolicy as shared_awsiamrolepolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsIamRoleDetails:
    r"""Contains information about an IAM role, including all of the role's policies."""
    
    assume_role_policy_document: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AssumeRolePolicyDocument'), 'exclude': lambda f: f is None }})  
    attached_managed_policies: Optional[list[shared_awsiamattachedmanagedpolicy.AwsIamAttachedManagedPolicy]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttachedManagedPolicies'), 'exclude': lambda f: f is None }})  
    create_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreateDate'), 'exclude': lambda f: f is None }})  
    instance_profile_list: Optional[list[shared_awsiaminstanceprofile.AwsIamInstanceProfile]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceProfileList'), 'exclude': lambda f: f is None }})  
    max_session_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxSessionDuration'), 'exclude': lambda f: f is None }})  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Path'), 'exclude': lambda f: f is None }})  
    permissions_boundary: Optional[shared_awsiampermissionsboundary.AwsIamPermissionsBoundary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PermissionsBoundary'), 'exclude': lambda f: f is None }})
    r"""Information about the policy used to set the permissions boundary for an IAM principal."""  
    role_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleId'), 'exclude': lambda f: f is None }})  
    role_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleName'), 'exclude': lambda f: f is None }})  
    role_policy_list: Optional[list[shared_awsiamrolepolicy.AwsIamRolePolicy]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RolePolicyList'), 'exclude': lambda f: f is None }})  
    