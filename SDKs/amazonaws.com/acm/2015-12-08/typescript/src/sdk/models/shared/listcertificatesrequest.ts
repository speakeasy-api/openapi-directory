/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateStatusEnum } from "./certificatestatusenum";
import { Filters } from "./filters";
import { SortByEnum } from "./sortbyenum";
import { SortOrderEnum } from "./sortorderenum";
import { Expose, Type } from "class-transformer";

export class ListCertificatesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateStatuses" })
  certificateStatuses?: CertificateStatusEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "Includes" })
  @Type(() => Filters)
  includes?: Filters;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxItems" })
  maxItems?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SortBy" })
  sortBy?: SortByEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: SortOrderEnum;
}
