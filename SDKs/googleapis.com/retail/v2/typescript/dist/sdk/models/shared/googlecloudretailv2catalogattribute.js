"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleCloudRetailV2CatalogAttribute = exports.GoogleCloudRetailV2CatalogAttributeTypeEnum = exports.GoogleCloudRetailV2CatalogAttributeInput = exports.GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
 */
var GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum;
(function (GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum) {
    GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum["DynamicFacetableOptionUnspecified"] = "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED";
    GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum["DynamicFacetableEnabled"] = "DYNAMIC_FACETABLE_ENABLED";
    GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum["DynamicFacetableDisabled"] = "DYNAMIC_FACETABLE_DISABLED";
})(GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum || (exports.GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum = {}));
/**
 * If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
 */
var GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum;
(function (GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum) {
    GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum["ExactSearchableOptionUnspecified"] = "EXACT_SEARCHABLE_OPTION_UNSPECIFIED";
    GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum["ExactSearchableEnabled"] = "EXACT_SEARCHABLE_ENABLED";
    GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum["ExactSearchableDisabled"] = "EXACT_SEARCHABLE_DISABLED";
})(GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum || (exports.GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum = {}));
/**
 * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
 */
var GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum;
(function (GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum) {
    GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum["IndexableOptionUnspecified"] = "INDEXABLE_OPTION_UNSPECIFIED";
    GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum["IndexableEnabled"] = "INDEXABLE_ENABLED";
    GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum["IndexableDisabled"] = "INDEXABLE_DISABLED";
})(GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum || (exports.GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum = {}));
/**
 * If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
 */
var GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum;
(function (GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum) {
    GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum["RetrievableOptionUnspecified"] = "RETRIEVABLE_OPTION_UNSPECIFIED";
    GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum["RetrievableEnabled"] = "RETRIEVABLE_ENABLED";
    GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum["RetrievableDisabled"] = "RETRIEVABLE_DISABLED";
})(GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum || (exports.GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum = {}));
/**
 * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
 */
var GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum;
(function (GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum) {
    GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum["SearchableOptionUnspecified"] = "SEARCHABLE_OPTION_UNSPECIFIED";
    GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum["SearchableEnabled"] = "SEARCHABLE_ENABLED";
    GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum["SearchableDisabled"] = "SEARCHABLE_DISABLED";
})(GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum = exports.GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum || (exports.GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum = {}));
/**
 * Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
 */
var GoogleCloudRetailV2CatalogAttributeInput = /** @class */ (function (_super) {
    __extends(GoogleCloudRetailV2CatalogAttributeInput, _super);
    function GoogleCloudRetailV2CatalogAttributeInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dynamicFacetableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttributeInput.prototype, "dynamicFacetableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exactSearchableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttributeInput.prototype, "exactSearchableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indexableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttributeInput.prototype, "indexableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttributeInput.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "retrievableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttributeInput.prototype, "retrievableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "searchableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttributeInput.prototype, "searchableOption", void 0);
    return GoogleCloudRetailV2CatalogAttributeInput;
}(utils_1.SpeakeasyBase));
exports.GoogleCloudRetailV2CatalogAttributeInput = GoogleCloudRetailV2CatalogAttributeInput;
/**
 * Output only. The type of this attribute. This is derived from the attribute in Product.attributes.
 */
var GoogleCloudRetailV2CatalogAttributeTypeEnum;
(function (GoogleCloudRetailV2CatalogAttributeTypeEnum) {
    GoogleCloudRetailV2CatalogAttributeTypeEnum["Unknown"] = "UNKNOWN";
    GoogleCloudRetailV2CatalogAttributeTypeEnum["Textual"] = "TEXTUAL";
    GoogleCloudRetailV2CatalogAttributeTypeEnum["Numerical"] = "NUMERICAL";
})(GoogleCloudRetailV2CatalogAttributeTypeEnum = exports.GoogleCloudRetailV2CatalogAttributeTypeEnum || (exports.GoogleCloudRetailV2CatalogAttributeTypeEnum = {}));
/**
 * Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
 */
var GoogleCloudRetailV2CatalogAttribute = /** @class */ (function (_super) {
    __extends(GoogleCloudRetailV2CatalogAttribute, _super);
    function GoogleCloudRetailV2CatalogAttribute() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dynamicFacetableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "dynamicFacetableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exactSearchableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "exactSearchableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inUse" }),
        __metadata("design:type", Boolean)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "inUse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indexableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "indexableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "retrievableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "retrievableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "searchableOption" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "searchableOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GoogleCloudRetailV2CatalogAttribute.prototype, "type", void 0);
    return GoogleCloudRetailV2CatalogAttribute;
}(utils_1.SpeakeasyBase));
exports.GoogleCloudRetailV2CatalogAttribute = GoogleCloudRetailV2CatalogAttribute;
