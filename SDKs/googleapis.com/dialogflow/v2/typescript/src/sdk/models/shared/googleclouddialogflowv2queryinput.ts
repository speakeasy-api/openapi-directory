/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowV2EventInput } from "./googleclouddialogflowv2eventinput";
import { GoogleCloudDialogflowV2InputAudioConfig } from "./googleclouddialogflowv2inputaudioconfig";
import { GoogleCloudDialogflowV2TextInput } from "./googleclouddialogflowv2textinput";
import { Expose, Type } from "class-transformer";

/**
 * Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how to process the speech audio. 2. A conversational query in the form of text,. 3. An event that specifies which intent to trigger.
 */
export class GoogleCloudDialogflowV2QueryInput extends SpeakeasyBase {
  /**
   * Instructs the speech recognizer how to process the audio content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audioConfig" })
  @Type(() => GoogleCloudDialogflowV2InputAudioConfig)
  audioConfig?: GoogleCloudDialogflowV2InputAudioConfig;

  /**
   * Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  @Type(() => GoogleCloudDialogflowV2EventInput)
  event?: GoogleCloudDialogflowV2EventInput;

  /**
   * ============================================================================ Auxiliary proto messages. Represents the natural language text to be processed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  @Type(() => GoogleCloudDialogflowV2TextInput)
  text?: GoogleCloudDialogflowV2TextInput;
}
