"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import specifications as shared_specifications
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Sku:
    
    eans: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eans') }})
    r"""SKU reference code."""  
    height: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height') }})
    r"""Height of the SKU."""  
    images: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('images') }})  
    length: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('length') }})
    r"""Length of the SKU."""  
    measurement_unit: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurementUnit') }})
    r"""Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value un."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    ref_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refId') }})
    r"""SKU reference code."""  
    specifications: shared_specifications.Specifications = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('specifications') }})  
    unit_multiplier: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unitMultiplier') }})
    r"""Unit multiplier for this SKU. If this information doesn't apply, you should use the default value 1."""  
    weight: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight') }})
    r"""Weight of the SKU."""  
    width: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width') }})
    r"""Width of the SKU."""  
    