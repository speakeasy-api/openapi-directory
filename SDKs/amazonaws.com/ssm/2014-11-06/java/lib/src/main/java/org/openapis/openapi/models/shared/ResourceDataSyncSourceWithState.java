/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ResourceDataSyncSourceWithState - &lt;p&gt;The data type name for including resource data sync state. There are four sync states:&lt;/p&gt; &lt;p&gt; &lt;code&gt;OrganizationNotExists&lt;/code&gt; (Your organization doesn't exist)&lt;/p&gt; &lt;p&gt; &lt;code&gt;NoPermissions&lt;/code&gt; (The system can't locate the service-linked role. This role is automatically created when a user creates a resource data sync in Amazon Web Services Systems Manager Explorer.)&lt;/p&gt; &lt;p&gt; &lt;code&gt;InvalidOrganizationalUnit&lt;/code&gt; (You specified or selected an invalid unit in the resource data sync configuration.)&lt;/p&gt; &lt;p&gt; &lt;code&gt;TrustedAccessDisabled&lt;/code&gt; (You disabled Systems Manager access in the organization in Organizations.)&lt;/p&gt;
 */
public class ResourceDataSyncSourceWithState {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwsOrganizationsSource")
    public ResourceDataSyncAwsOrganizationsSource awsOrganizationsSource;

    public ResourceDataSyncSourceWithState withAwsOrganizationsSource(ResourceDataSyncAwsOrganizationsSource awsOrganizationsSource) {
        this.awsOrganizationsSource = awsOrganizationsSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableAllOpsDataSources")
    public Boolean enableAllOpsDataSources;

    public ResourceDataSyncSourceWithState withEnableAllOpsDataSources(Boolean enableAllOpsDataSources) {
        this.enableAllOpsDataSources = enableAllOpsDataSources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeFutureRegions")
    public Boolean includeFutureRegions;

    public ResourceDataSyncSourceWithState withIncludeFutureRegions(Boolean includeFutureRegions) {
        this.includeFutureRegions = includeFutureRegions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceRegions")
    public String[] sourceRegions;

    public ResourceDataSyncSourceWithState withSourceRegions(String[] sourceRegions) {
        this.sourceRegions = sourceRegions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceType")
    public String sourceType;

    public ResourceDataSyncSourceWithState withSourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public String state;

    public ResourceDataSyncSourceWithState withState(String state) {
        this.state = state;
        return this;
    }
    
    public ResourceDataSyncSourceWithState(){}
}
