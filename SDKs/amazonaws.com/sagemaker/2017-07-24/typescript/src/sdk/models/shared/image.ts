/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImageStatusEnum } from "./imagestatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * A SageMaker image. A SageMaker image represents a set of container images that are derived from a common base container image. Each of these container images is represented by a SageMaker <code>ImageVersion</code>.
 */
export class Image extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageArn" })
  imageArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageName" })
  imageName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageStatus" })
  imageStatus: ImageStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;
}
