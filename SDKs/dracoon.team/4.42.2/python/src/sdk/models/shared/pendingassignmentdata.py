"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import groupinfo as shared_groupinfo
from ..shared import pendinggroupdata as shared_pendinggroupdata
from ..shared import pendinguserdata as shared_pendinguserdata
from ..shared import userinfo as shared_userinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class PendingAssignmentDataStateEnum(str, Enum):
    r"""Acceptance state:
    
    * `ACCEPTED`
    
    * `WAITING`
    
    * `DENIED`
    """
    ACCEPTED = 'ACCEPTED'
    DENIED = 'DENIED'
    WAITING = 'WAITING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PendingAssignmentData:
    r"""Pending assignment information"""
    
    group_info: shared_groupinfo.GroupInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupInfo') }})
    r"""Group information"""  
    pending_group_data: shared_pendinggroupdata.PendingGroupData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pendingGroupData') }})
    r"""Pending group information"""  
    pending_user_data: shared_pendinguserdata.PendingUserData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pendingUserData') }})
    r"""Pending user information"""  
    room_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roomId') }})
    r"""Room ID"""  
    room_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roomName') }})
    r"""Room name"""  
    state: PendingAssignmentDataStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""Acceptance state:
    
    * `ACCEPTED`
    
    * `WAITING`
    
    * `DENIED`
    """  
    user_info: shared_userinfo.UserInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userInfo') }})
    r"""User information"""  
    