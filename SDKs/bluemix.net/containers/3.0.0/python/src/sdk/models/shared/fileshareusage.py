"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FileshareUsage:
    
    available_space: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('available_space'), 'exclude': lambda f: f is None }})
    r"""The amount of space that is available in the file share in gigabytes."""  
    total_space: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_space'), 'exclude': lambda f: f is None }})
    r"""The total size of the file share in gigabytes."""  
    used_space: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('used_space'), 'exclude': lambda f: f is None }})
    r"""The amount of space that is currently used from the file share."""  
    used_space_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('used_space_percentage'), 'exclude': lambda f: f is None }})
    r"""The amount of space that is currently used from the file share in percentage."""  
    