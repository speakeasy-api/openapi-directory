// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowTypeEnum - The type of the workflow. Currently the only valid value is 'Workflow::Setup'.
type WorkflowTypeEnum string

const (
	WorkflowTypeEnumWorkflowSetup    WorkflowTypeEnum = "Workflow::Setup"
	WorkflowTypeEnumWorkflowInstance WorkflowTypeEnum = "Workflow::Instance"
)

func (e *WorkflowTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Workflow::Setup":
		fallthrough
	case "Workflow::Instance":
		*e = WorkflowTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowTypeEnum: %s", s)
	}
}

// Workflow - A workflow.
type Workflow struct {
	// Indicates whether the callout trigger is enabled for the retrieved workflow.
	//
	CalloutTrigger *bool `json:"calloutTrigger,omitempty"`
	// The date and time when the workflow is created, in the `YYYY-MM-DD HH:MM:SS` format.
	//
	CreatedAt *string `json:"createdAt,omitempty"`
	// The description of the workflow.
	//
	Description *string `json:"description,omitempty"`
	// The unique ID of the workflow.
	//
	ID *int64 `json:"id,omitempty"`
	// The schedule of the workflow, in a CRON expression. Returns null if the schedued trigger is disabled.
	//
	Interval *string `json:"interval,omitempty"`
	// The name of the workflow.
	//
	Name *string `json:"name,omitempty"`
	// Indicates whether the ondemand trigger is enabled for the workflow.
	//
	OndemandTrigger *bool `json:"ondemandTrigger,omitempty"`
	// Indicates whether the scheduled trigger is enabled for the workflow.
	//
	ScheduledTrigger *bool `json:"scheduledTrigger,omitempty"`
	// The timezone that is configured for the scheduler of the workflow. Returns null if the scheduled trigger is disabled.
	//
	Timezone *string `json:"timezone,omitempty"`
	// The type of the workflow. Currently the only valid value is 'Workflow::Setup'.
	//
	Type *WorkflowTypeEnum `json:"type,omitempty"`
	// The date and time when the workflow is updated the last time, in the `YYYY-MM-DD HH:MM:SS` format.
	//
	UpdatedAt *string `json:"updatedAt,omitempty"`
}
