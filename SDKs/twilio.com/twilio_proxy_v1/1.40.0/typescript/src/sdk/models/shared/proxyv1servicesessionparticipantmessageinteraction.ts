/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MessageInteractionEnumResourceStatusEnum } from "./messageinteractionenumresourcestatusenum";
import { MessageInteractionEnumTypeEnum } from "./messageinteractionenumtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class ProxyV1ServiceSessionParticipantMessageInteraction extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MessageInteraction resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * A JSON string that includes the message body sent to the participant. (e.g. `{"body": "hello"}`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * Always empty for created Message Interactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_participant_sid" })
  inboundParticipantSid?: string;

  /**
   * Always empty for created Message Interactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_resource_sid" })
  inboundResourceSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inbound_resource_status" })
  inboundResourceStatus?: MessageInteractionEnumResourceStatusEnum;

  /**
   * Always empty for created Message Interactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_resource_type" })
  inboundResourceType?: string;

  /**
   * Always empty for created Message Interactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_resource_url" })
  inboundResourceUrl?: string;

  /**
   * The SID of the outbound [Participant](https://www.twilio.com/docs/proxy/api/participant) resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_participant_sid" })
  outboundParticipantSid?: string;

  /**
   * The SID of the outbound [Message](https://www.twilio.com/docs/sms/api/message-resource) resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_resource_sid" })
  outboundResourceSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "outbound_resource_status" })
  outboundResourceStatus?: MessageInteractionEnumResourceStatusEnum;

  /**
   * The outbound resource type. This value is always `Message`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_resource_type" })
  outboundResourceType?: string;

  /**
   * The URL of the Twilio message resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_resource_url" })
  outboundResourceUrl?: string;

  /**
   * The SID of the [Participant](https://www.twilio.com/docs/proxy/api/participant) resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participant_sid" })
  participantSid?: string;

  /**
   * The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_sid" })
  serviceSid?: string;

  /**
   * The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "session_sid" })
  sessionSid?: string;

  /**
   * The unique string that we created to identify the MessageInteraction resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: MessageInteractionEnumTypeEnum;

  /**
   * The absolute URL of the MessageInteraction resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
