/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Edit - An edit defines the arrangement of a video on a timeline, an audio edit or an image design and the output format.
 */
public class Edit {
    /**
     * An optional webhook callback URL used to receive status notifications when a render completes or fails. See [webhooks](https://shotstack.gitbook.io/docs/guides/architecting-an-application/webhooks) for  more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callback")
    public String callback;

    public Edit withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The disk type to use for storing footage and assets for each render. See [disk types](https://shotstack.gitbook.io/docs/guides/architecting-an-application/disk-types) for more details. &lt;ul&gt;
     *   &lt;li&gt;`local` - optimized for high speed rendering with up to 512MB storage&lt;/li&gt;
     *   &lt;li&gt;`mount` - optimized for larger file sizes and longer videos with 5GB for source footage and 512MB for output render&lt;/li&gt;
     * &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disk")
    public EditDiskEnum disk;

    public Edit withDisk(EditDiskEnum disk) {
        this.disk = disk;
        return this;
    }
    
    /**
     * The output format, render range and type of media to generate.
     */
    @JsonProperty("output")
    public Output output;

    public Edit withOutput(Output output) {
        this.output = output;
        return this;
    }
    
    /**
     * A timeline represents the contents of a video edit over time, an audio edit over time, in seconds, or an image layout. A timeline consists of layers called tracks. Tracks are composed of titles, images, audio, html or video segments referred to as clips which are placed along the track at specific starting point and lasting for a specific amount of time.
     */
    @JsonProperty("timeline")
    public Timeline timeline;

    public Edit withTimeline(Timeline timeline) {
        this.timeline = timeline;
        return this;
    }
    
    public Edit(@JsonProperty("output") Output output, @JsonProperty("timeline") Timeline timeline) {
        this.output = output;
        this.timeline = timeline;
  }
}
