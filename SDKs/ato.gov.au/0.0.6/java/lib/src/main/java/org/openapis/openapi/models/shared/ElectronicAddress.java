/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ElectronicAddress - The Electronic Address resource.
 */
public class ElectronicAddress {
    /**
     * The area code, for example, "02".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("areaCode")
    public String areaCode;
    public ElectronicAddress withAreaCode(String areaCode) {
        this.areaCode = areaCode;
        return this;
    }
    
    /**
     * The country prefix, for example, "61".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryPrefix")
    public String countryPrefix;
    public ElectronicAddress withCountryPrefix(String countryPrefix) {
        this.countryPrefix = countryPrefix;
        return this;
    }
    
    /**
     * The electronic address type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("electronicAddressType")
    public ElectronicAddressElectronicAddressTypeEnum electronicAddressType;
    public ElectronicAddress withElectronicAddressType(ElectronicAddressElectronicAddressTypeEnum electronicAddressType) {
        this.electronicAddressType = electronicAddressType;
        return this;
    }
    
    /**
     * The email address, for example, "robert.ferguson@ato.gov.au".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public ElectronicAddress withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The extension number, for example, "4453".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extension")
    public String extension;
    public ElectronicAddress withExtension(String extension) {
        this.extension = extension;
        return this;
    }
    
    /**
     * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fromDate")
    public OffsetDateTime fromDate;
    public ElectronicAddress withFromDate(OffsetDateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }
    
    /**
     * The resource's unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ElectronicAddress withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The number, for example, "62164453".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;
    public ElectronicAddress withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("toDate")
    public OffsetDateTime toDate;
    public ElectronicAddress withToDate(OffsetDateTime toDate) {
        this.toDate = toDate;
        return this;
    }
    
    /**
     * The website address, for example, "https://ato.gov.au".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public ElectronicAddress withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
