/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NodePermissions } from "./nodepermissions";
import { Expose, Type } from "class-transformer";

/**
 * Behaviour when new users are added to the group:
 *
 * @remarks
 *
 * * `autoallow`
 *
 * * `pending`
 *
 *
 *
 * Only relevant if `adminGroupIds` has items.
 */
export enum RoomGroupsAddBatchRequestItemNewGroupMemberAcceptanceEnum {
  Autoallow = "autoallow",
  Pending = "pending",
}

/**
 * Request item model for granting group to the room
 */
export class RoomGroupsAddBatchRequestItem extends SpeakeasyBase {
  /**
   * Unique identifier for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Behaviour when new users are added to the group:
   *
   * @remarks
   *
   * * `autoallow`
   *
   * * `pending`
   *
   *
   *
   * Only relevant if `adminGroupIds` has items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newGroupMemberAcceptance" })
  newGroupMemberAcceptance?: RoomGroupsAddBatchRequestItemNewGroupMemberAcceptanceEnum;

  /**
   * Node permissions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => NodePermissions)
  permissions: NodePermissions;
}
