"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateNetworkFirewalledServiceResponse = exports.UpdateNetworkFirewalledServiceRequest = exports.UpdateNetworkFirewalledServiceRequestBody = exports.UpdateNetworkFirewalledServiceRequestBodyAccessEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are "blocked" (no remote IPs can access the service), "restricted" (only whitelisted IPs can access the service), and "unrestriced" (any remote IP can access the service). This field is required
 */
var UpdateNetworkFirewalledServiceRequestBodyAccessEnum;
(function (UpdateNetworkFirewalledServiceRequestBodyAccessEnum) {
    UpdateNetworkFirewalledServiceRequestBodyAccessEnum["Blocked"] = "blocked";
    UpdateNetworkFirewalledServiceRequestBodyAccessEnum["Restricted"] = "restricted";
    UpdateNetworkFirewalledServiceRequestBodyAccessEnum["Unrestricted"] = "unrestricted";
})(UpdateNetworkFirewalledServiceRequestBodyAccessEnum = exports.UpdateNetworkFirewalledServiceRequestBodyAccessEnum || (exports.UpdateNetworkFirewalledServiceRequestBodyAccessEnum = {}));
var UpdateNetworkFirewalledServiceRequestBody = /** @class */ (function (_super) {
    __extends(UpdateNetworkFirewalledServiceRequestBody, _super);
    function UpdateNetworkFirewalledServiceRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "access" }),
        __metadata("design:type", String)
    ], UpdateNetworkFirewalledServiceRequestBody.prototype, "access", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedIps" }),
        __metadata("design:type", Array)
    ], UpdateNetworkFirewalledServiceRequestBody.prototype, "allowedIps", void 0);
    return UpdateNetworkFirewalledServiceRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkFirewalledServiceRequestBody = UpdateNetworkFirewalledServiceRequestBody;
var UpdateNetworkFirewalledServiceRequest = /** @class */ (function (_super) {
    __extends(UpdateNetworkFirewalledServiceRequest, _super);
    function UpdateNetworkFirewalledServiceRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateNetworkFirewalledServiceRequestBody)
    ], UpdateNetworkFirewalledServiceRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], UpdateNetworkFirewalledServiceRequest.prototype, "networkId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=service",
        }),
        __metadata("design:type", String)
    ], UpdateNetworkFirewalledServiceRequest.prototype, "service", void 0);
    return UpdateNetworkFirewalledServiceRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkFirewalledServiceRequest = UpdateNetworkFirewalledServiceRequest;
var UpdateNetworkFirewalledServiceResponse = /** @class */ (function (_super) {
    __extends(UpdateNetworkFirewalledServiceResponse, _super);
    function UpdateNetworkFirewalledServiceResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateNetworkFirewalledServiceResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateNetworkFirewalledServiceResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkFirewalledServiceResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkFirewalledServiceResponse.prototype, "updateNetworkFirewalledService200ApplicationJSONObject", void 0);
    return UpdateNetworkFirewalledServiceResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkFirewalledServiceResponse = UpdateNetworkFirewalledServiceResponse;
