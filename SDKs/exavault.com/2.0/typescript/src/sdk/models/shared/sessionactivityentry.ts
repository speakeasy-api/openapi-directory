/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class SessionActivityEntryAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bytesTransferred" })
  bytesTransferred?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  fileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fileSource" })
  fileSource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  operation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

export enum SessionActivityEntryTypeEnum {
  SessionActivity = "sessionActivity",
}

/**
 * Single entry of session activity
 */
export class SessionActivityEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => SessionActivityEntryAttributes)
  attributes?: SessionActivityEntryAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: SessionActivityEntryTypeEnum;
}
