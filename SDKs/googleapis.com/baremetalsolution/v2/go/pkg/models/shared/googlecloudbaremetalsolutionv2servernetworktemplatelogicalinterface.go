// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum - Interface type.
type GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum string

const (
	GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnumInterfaceTypeUnspecified GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum = "INTERFACE_TYPE_UNSPECIFIED"
	GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnumBond                     GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum = "BOND"
	GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnumNic                      GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum = "NIC"
)

func (e *GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INTERFACE_TYPE_UNSPECIFIED":
		fallthrough
	case "BOND":
		fallthrough
	case "NIC":
		*e = GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum: %s", s)
	}
}

// GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface - Logical interface.
type GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface struct {
	// Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.
	Name *string `json:"name,omitempty"`
	// If true, interface must have network connected.
	Required *bool `json:"required,omitempty"`
	// Interface type.
	Type *GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterfaceTypeEnum `json:"type,omitempty"`
}
