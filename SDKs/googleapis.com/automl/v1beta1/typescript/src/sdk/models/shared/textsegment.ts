/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A contiguous part of a text (string), assuming it has an UTF-8 NFC encoding.
 */
export class TextSegment extends SpeakeasyBase {
  /**
   * Output only. The content of the TextSegment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  /**
   * Required. Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endOffset" })
  endOffset?: string;

  /**
   * Required. Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startOffset" })
  startOffset?: string;
}
