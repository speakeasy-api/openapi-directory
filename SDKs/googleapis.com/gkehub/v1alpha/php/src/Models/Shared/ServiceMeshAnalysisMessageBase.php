<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServiceMeshAnalysisMessageBase - AnalysisMessageBase describes some common information that is needed for all messages.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServiceMeshAnalysisMessageBase
{
    /**
     * A url pointing to the Service Mesh or Istio documentation for this specific error type.
     * 
     * @var ?string $documentationUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('documentationUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $documentationUrl = null;
    
    /**
     * Represents how severe a message is.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceMeshAnalysisMessageBaseLevelEnum $level
     */
	#[\JMS\Serializer\Annotation\SerializedName('level')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ServiceMeshAnalysisMessageBaseLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceMeshAnalysisMessageBaseLevelEnum $level = null;
    
    /**
     * A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceMeshType $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ServiceMeshType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceMeshType $type = null;
    
	public function __construct()
	{
		$this->documentationUrl = null;
		$this->level = null;
		$this->type = null;
	}
}
