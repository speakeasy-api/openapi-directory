// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountStatusEnum - Status of the account
type AccountStatusEnum string

const (
	AccountStatusEnumPending  AccountStatusEnum = "PENDING"
	AccountStatusEnumActive   AccountStatusEnum = "ACTIVE"
	AccountStatusEnumDeleted  AccountStatusEnum = "DELETED"
	AccountStatusEnumArchived AccountStatusEnum = "ARCHIVED"
)

func (e AccountStatusEnum) ToPointer() *AccountStatusEnum {
	return &e
}

func (e *AccountStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETED":
		fallthrough
	case "ARCHIVED":
		*e = AccountStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountStatusEnum: %v", v)
	}
}

type AccountUcisHealth struct {
	Message *string `json:"message,omitempty"`
	Status  *string `json:"status,omitempty"`
}

type AccountUcis struct {
	Health       *AccountUcisHealth `json:"health,omitempty"`
	ID           *int64             `json:"id,omitempty"`
	Type         *string            `json:"type,omitempty"`
	UcpAccountID *string            `json:"ucpAccountId,omitempty"`
	UcpLabel     *string            `json:"ucpLabel,omitempty"`
}

// Account - Successful
type Account struct {
	// Unique identifier of the account
	ID *int64 `json:"id,omitempty"`
	// Name of the account
	Name *string `json:"name,omitempty"`
	// Organization of the account
	Org *string `json:"org,omitempty"`
	// Status of the account
	Status *AccountStatusEnum `json:"status,omitempty"`
	Ucis   []AccountUcis      `json:"ucis,omitempty"`
}
