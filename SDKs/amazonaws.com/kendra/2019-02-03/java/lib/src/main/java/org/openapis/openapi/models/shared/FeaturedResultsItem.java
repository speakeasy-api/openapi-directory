/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FeaturedResultsItem - A single featured result item. A featured result is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then certain documents are featured in the search results.
 */
public class FeaturedResultsItem {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalAttributes")
    public AdditionalResultAttribute[] additionalAttributes;

    public FeaturedResultsItem withAdditionalAttributes(AdditionalResultAttribute[] additionalAttributes) {
        this.additionalAttributes = additionalAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentAttributes")
    public DocumentAttribute[] documentAttributes;

    public FeaturedResultsItem withDocumentAttributes(DocumentAttribute[] documentAttributes) {
        this.documentAttributes = documentAttributes;
        return this;
    }
    
    /**
     * Provides text and information about where to highlight the text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentExcerpt")
    public TextWithHighlights documentExcerpt;

    public FeaturedResultsItem withDocumentExcerpt(TextWithHighlights documentExcerpt) {
        this.documentExcerpt = documentExcerpt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentId")
    public String documentId;

    public FeaturedResultsItem withDocumentId(String documentId) {
        this.documentId = documentId;
        return this;
    }
    
    /**
     * Provides text and information about where to highlight the text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentTitle")
    public TextWithHighlights documentTitle;

    public FeaturedResultsItem withDocumentTitle(TextWithHighlights documentTitle) {
        this.documentTitle = documentTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentURI")
    public String documentURI;

    public FeaturedResultsItem withDocumentURI(String documentURI) {
        this.documentURI = documentURI;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeedbackToken")
    public String feedbackToken;

    public FeaturedResultsItem withFeedbackToken(String feedbackToken) {
        this.feedbackToken = feedbackToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;

    public FeaturedResultsItem withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public QueryResultTypeEnum type;

    public FeaturedResultsItem withType(QueryResultTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public FeaturedResultsItem(){}
}
