/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BooksAnnotationsRange } from "./booksannotationsrange";
import { Expose, Type } from "class-transformer";

/**
 * Selection ranges sent from the client.
 */
export class AnnotationClientVersionRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cfiRange" })
  @Type(() => BooksAnnotationsRange)
  cfiRange?: BooksAnnotationsRange;

  /**
   * Content version the client sent in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentVersion" })
  contentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gbImageRange" })
  @Type(() => BooksAnnotationsRange)
  gbImageRange?: BooksAnnotationsRange;

  @SpeakeasyMetadata()
  @Expose({ name: "gbTextRange" })
  @Type(() => BooksAnnotationsRange)
  gbTextRange?: BooksAnnotationsRange;

  @SpeakeasyMetadata()
  @Expose({ name: "imageCfiRange" })
  @Type(() => BooksAnnotationsRange)
  imageCfiRange?: BooksAnnotationsRange;
}

/**
 * Selection ranges for the most recent content version.
 */
export class AnnotationCurrentVersionRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cfiRange" })
  @Type(() => BooksAnnotationsRange)
  cfiRange?: BooksAnnotationsRange;

  /**
   * Content version applicable to ranges below.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentVersion" })
  contentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gbImageRange" })
  @Type(() => BooksAnnotationsRange)
  gbImageRange?: BooksAnnotationsRange;

  @SpeakeasyMetadata()
  @Expose({ name: "gbTextRange" })
  @Type(() => BooksAnnotationsRange)
  gbTextRange?: BooksAnnotationsRange;

  @SpeakeasyMetadata()
  @Expose({ name: "imageCfiRange" })
  @Type(() => BooksAnnotationsRange)
  imageCfiRange?: BooksAnnotationsRange;
}

export class AnnotationLayerSummary extends SpeakeasyBase {
  /**
   * Maximum allowed characters on this layer, especially for the "copy" layer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedCharacterCount" })
  allowedCharacterCount?: number;

  /**
   * Type of limitation on this layer. "limited" or "unlimited" for the "copy" layer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitType" })
  limitType?: string;

  /**
   * Remaining allowed characters on this layer, especially for the "copy" layer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remainingCharacterCount" })
  remainingCharacterCount?: number;
}

/**
 * Successful response
 */
export class Annotation extends SpeakeasyBase {
  /**
   * Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "afterSelectedText" })
  afterSelectedText?: string;

  /**
   * Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beforeSelectedText" })
  beforeSelectedText?: string;

  /**
   * Selection ranges sent from the client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientVersionRanges" })
  @Type(() => AnnotationClientVersionRanges)
  clientVersionRanges?: AnnotationClientVersionRanges;

  /**
   * Timestamp for the created time of this annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created?: string;

  /**
   * Selection ranges for the most recent content version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersionRanges" })
  @Type(() => AnnotationCurrentVersionRanges)
  currentVersionRanges?: AnnotationCurrentVersionRanges;

  /**
   * User-created data for this annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;

  /**
   * Indicates that this annotation is deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * The highlight style for this annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "highlightStyle" })
  highlightStyle?: string;

  /**
   * Id of this annotation, in the form of a GUID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The layer this annotation is for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layerId" })
  layerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "layerSummary" })
  @Type(() => AnnotationLayerSummary)
  layerSummary?: AnnotationLayerSummary;

  /**
   * Pages that this annotation spans.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageIds" })
  pageIds?: string[];

  /**
   * Excerpt from the volume.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedText" })
  selectedText?: string;

  /**
   * URL to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Timestamp for the last time this annotation was modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: string;

  /**
   * The volume that this annotation belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volumeId" })
  volumeId?: string;
}
