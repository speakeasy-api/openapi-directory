// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PurchaseInvoicePaymentMeansTypeEnum - The type of payment means. Which type are returned is determined by the &pmv= query parameter. For details see documentation for that field.
type PurchaseInvoicePaymentMeansTypeEnum string

const (
	PurchaseInvoicePaymentMeansTypeEnumBankPaymentMean                 PurchaseInvoicePaymentMeansTypeEnum = "BankPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumDirectDebitPaymentMean          PurchaseInvoicePaymentMeansTypeEnum = "DirectDebitPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumCardPaymentMean                 PurchaseInvoicePaymentMeansTypeEnum = "CardPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumNppPaymentMean                  PurchaseInvoicePaymentMeansTypeEnum = "NppPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumSeBankGiroPaymentMean           PurchaseInvoicePaymentMeansTypeEnum = "SeBankGiroPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumSePlusgiroPaymentMean           PurchaseInvoicePaymentMeansTypeEnum = "SePlusgiroPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumSgCardPaymentMean               PurchaseInvoicePaymentMeansTypeEnum = "SgCardPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumSgGiroPaymentMean               PurchaseInvoicePaymentMeansTypeEnum = "SgGiroPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumSgPaynowPaymentMean             PurchaseInvoicePaymentMeansTypeEnum = "SgPaynowPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumCreditTransferPaymentMean       PurchaseInvoicePaymentMeansTypeEnum = "CreditTransferPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumCreditCardPaymentMean           PurchaseInvoicePaymentMeansTypeEnum = "CreditCardPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumSeBankgiroPaymentMean           PurchaseInvoicePaymentMeansTypeEnum = "SeBankgiroPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumAunzNppPayidPaymentMean         PurchaseInvoicePaymentMeansTypeEnum = "AunzNppPayidPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumOnlinePaymentServicePaymentMean PurchaseInvoicePaymentMeansTypeEnum = "OnlinePaymentServicePaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumStandingAgreementPaymentMean    PurchaseInvoicePaymentMeansTypeEnum = "StandingAgreementPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumAunzNppPaytoPaymentMean         PurchaseInvoicePaymentMeansTypeEnum = "AunzNppPaytoPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumAunzBpayPaymentMean             PurchaseInvoicePaymentMeansTypeEnum = "AunzBpayPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumAunzPostbillpayPaymentMean      PurchaseInvoicePaymentMeansTypeEnum = "AunzPostbillpayPaymentMean"
	PurchaseInvoicePaymentMeansTypeEnumAunzURIPaymentMean              PurchaseInvoicePaymentMeansTypeEnum = "AunzUriPaymentMean"
)

func (e *PurchaseInvoicePaymentMeansTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BankPaymentMean":
		fallthrough
	case "DirectDebitPaymentMean":
		fallthrough
	case "CardPaymentMean":
		fallthrough
	case "NppPaymentMean":
		fallthrough
	case "SeBankGiroPaymentMean":
		fallthrough
	case "SePlusgiroPaymentMean":
		fallthrough
	case "SgCardPaymentMean":
		fallthrough
	case "SgGiroPaymentMean":
		fallthrough
	case "SgPaynowPaymentMean":
		fallthrough
	case "CreditTransferPaymentMean":
		fallthrough
	case "CreditCardPaymentMean":
		fallthrough
	case "SeBankgiroPaymentMean":
		fallthrough
	case "AunzNppPayidPaymentMean":
		fallthrough
	case "OnlinePaymentServicePaymentMean":
		fallthrough
	case "StandingAgreementPaymentMean":
		fallthrough
	case "AunzNppPaytoPaymentMean":
		fallthrough
	case "AunzBpayPaymentMean":
		fallthrough
	case "AunzPostbillpayPaymentMean":
		fallthrough
	case "AunzUriPaymentMean":
		*e = PurchaseInvoicePaymentMeansTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PurchaseInvoicePaymentMeansTypeEnum: %s", s)
	}
}

type PurchaseInvoicePaymentMeans struct {
	// The account number to which to transfer.
	Account *string `json:"account,omitempty"`
	// The code identifying the bank branch. May contain a BIC/SWIFT or something appropriate for the payment method, such as "NPP" for type NppPaymentMean.
	BranchCode *string `json:"branch_code,omitempty"`
	// The account holder name to which to transfer.
	Holder *string `json:"holder,omitempty"`
	// The mandate, used only for type DirectDebitPaymentMean.
	Mandate *string `json:"mandate,omitempty"`
	// The payment network. Used only for type CardPaymentType.
	Network *string `json:"network,omitempty"`
	// The payment id to use when making the payment. The invoice sender will use this to match the received funds to the invoice.
	PaymentID *string `json:"payment_id,omitempty"`
	// The type of payment means. Which type are returned is determined by the &pmv= query parameter. For details see documentation for that field.
	Type *PurchaseInvoicePaymentMeansTypeEnum `json:"type,omitempty"`
}
