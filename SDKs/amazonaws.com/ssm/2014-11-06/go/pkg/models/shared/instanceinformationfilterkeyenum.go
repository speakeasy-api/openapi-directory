// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceInformationFilterKeyEnum string

const (
	InstanceInformationFilterKeyEnumInstanceIds       InstanceInformationFilterKeyEnum = "InstanceIds"
	InstanceInformationFilterKeyEnumAgentVersion      InstanceInformationFilterKeyEnum = "AgentVersion"
	InstanceInformationFilterKeyEnumPingStatus        InstanceInformationFilterKeyEnum = "PingStatus"
	InstanceInformationFilterKeyEnumPlatformTypes     InstanceInformationFilterKeyEnum = "PlatformTypes"
	InstanceInformationFilterKeyEnumActivationIds     InstanceInformationFilterKeyEnum = "ActivationIds"
	InstanceInformationFilterKeyEnumIamRole           InstanceInformationFilterKeyEnum = "IamRole"
	InstanceInformationFilterKeyEnumResourceType      InstanceInformationFilterKeyEnum = "ResourceType"
	InstanceInformationFilterKeyEnumAssociationStatus InstanceInformationFilterKeyEnum = "AssociationStatus"
)

func (e InstanceInformationFilterKeyEnum) ToPointer() *InstanceInformationFilterKeyEnum {
	return &e
}

func (e *InstanceInformationFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InstanceIds":
		fallthrough
	case "AgentVersion":
		fallthrough
	case "PingStatus":
		fallthrough
	case "PlatformTypes":
		fallthrough
	case "ActivationIds":
		fallthrough
	case "IamRole":
		fallthrough
	case "ResourceType":
		fallthrough
	case "AssociationStatus":
		*e = InstanceInformationFilterKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceInformationFilterKeyEnum: %v", v)
	}
}
