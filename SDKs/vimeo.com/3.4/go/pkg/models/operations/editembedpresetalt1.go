// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type EditEmbedPresetAlt1PathParams struct {
	// The ID of the preset.
	PresetID float64 `pathParam:"style=simple,explode=false,name=preset_id"`
}

// EditEmbedPresetAlt1RequestBodyOutroEnum - Disable the outro.
type EditEmbedPresetAlt1RequestBodyOutroEnum string

const (
	EditEmbedPresetAlt1RequestBodyOutroEnumNothing EditEmbedPresetAlt1RequestBodyOutroEnum = "nothing"
)

func (e *EditEmbedPresetAlt1RequestBodyOutroEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "nothing":
		*e = EditEmbedPresetAlt1RequestBodyOutroEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EditEmbedPresetAlt1RequestBodyOutroEnum: %s", s)
	}
}

type EditEmbedPresetAlt1RequestBody struct {
	// Disable the outro.
	Outro *EditEmbedPresetAlt1RequestBodyOutroEnum `json:"outro,omitempty"`
}

type EditEmbedPresetAlt1Request struct {
	PathParams EditEmbedPresetAlt1PathParams
	Request    *EditEmbedPresetAlt1RequestBody `request:"mediaType=application/vnd.vimeo.preset+json"`
}

type EditEmbedPresetAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The outro type is invalid.
	LegacyError *shared.LegacyError
	// The embed preset was edited.
	Presets *shared.Presets
}
