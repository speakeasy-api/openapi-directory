<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateSubscriptionRequest - Defines parameters in a
 * 
 * [CreateSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/create-subscription) endpoint request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateSubscriptionRequest
{
    /**
     * The date when the subscription should be canceled, in
     * 
     * YYYY-MM-DD format (for example, 2025-02-29). This overrides the plan configuration
     * if it comes before the date the subscription would otherwise end.
     * 
     * @var ?string $canceledDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('canceled_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $canceledDate = null;
    
    /**
     * The ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) [card](https://developer.squareup.com/reference/square_2021-08-18/objects/Card) to charge.
     * 
     * If not specified, Square sends an invoice via email. For an example to
     * create a customer and add a card on file, see [Subscriptions Walkthrough](https://developer.squareup.com/docs/subscriptions-api/walkthrough).
     * 
     * @var ?string $cardId
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardId = null;
    
    /**
     * The ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) profile.
     * 
     * @var string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $customerId;
    
    /**
     * A unique string that identifies this `CreateSubscription` request.
     * 
     * If you do not provide a unique string (or provide an empty string as the value),
     * the endpoint treats each request as independent.
     * 
     * For more information, see [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency).
     * 
     * @var ?string $idempotencyKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('idempotency_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idempotencyKey = null;
    
    /**
     * The ID of the location the subscription is associated with.
     * 
     * @var string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $locationId;
    
    /**
     * The ID of the subscription plan created using the Catalog API.
     * 
     * For more information, see
     * [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/subscriptions-api/setup-plan) and 
     * [Subscriptions Walkthrough](https://developer.squareup.com/docs/subscriptions-api/walkthrough).
     * 
     * @var string $planId
     */
	#[\JMS\Serializer\Annotation\SerializedName('plan_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $planId;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $priceOverrideMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('price_override_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $priceOverrideMoney = null;
    
    /**
     * The start date of the subscription, in YYYY-MM-DD format. For example,
     * 
     * 2013-01-15. If the start date is left empty, the subscription begins
     * immediately.
     * 
     * @var ?string $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startDate = null;
    
    /**
     * The tax to add when billing the subscription.
     * 
     * The percentage is expressed in decimal form, using a `'.'` as the decimal
     * separator and without a `'%'` sign. For example, a value of 7.5
     * corresponds to 7.5%.
     * 
     * @var ?string $taxPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_percentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxPercentage = null;
    
    /**
     * The timezone that is used in date calculations for the subscription. If unset, defaults to
     * 
     * the location timezone. If a timezone is not configured for the location, defaults to "America/New_York".
     * Format: the IANA Timezone Database identifier for the location timezone. For
     * a list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
	public function __construct()
	{
		$this->canceledDate = null;
		$this->cardId = null;
		$this->customerId = "";
		$this->idempotencyKey = null;
		$this->locationId = "";
		$this->planId = "";
		$this->priceOverrideMoney = null;
		$this->startDate = null;
		$this->taxPercentage = null;
		$this->timezone = null;
	}
}
