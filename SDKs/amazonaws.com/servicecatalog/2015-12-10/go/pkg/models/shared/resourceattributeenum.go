// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceAttributeEnum string

const (
	ResourceAttributeEnumProperties     ResourceAttributeEnum = "PROPERTIES"
	ResourceAttributeEnumMetadata       ResourceAttributeEnum = "METADATA"
	ResourceAttributeEnumCreationpolicy ResourceAttributeEnum = "CREATIONPOLICY"
	ResourceAttributeEnumUpdatepolicy   ResourceAttributeEnum = "UPDATEPOLICY"
	ResourceAttributeEnumDeletionpolicy ResourceAttributeEnum = "DELETIONPOLICY"
	ResourceAttributeEnumTags           ResourceAttributeEnum = "TAGS"
)

func (e ResourceAttributeEnum) ToPointer() *ResourceAttributeEnum {
	return &e
}

func (e *ResourceAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROPERTIES":
		fallthrough
	case "METADATA":
		fallthrough
	case "CREATIONPOLICY":
		fallthrough
	case "UPDATEPOLICY":
		fallthrough
	case "DELETIONPOLICY":
		fallthrough
	case "TAGS":
		*e = ResourceAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceAttributeEnum: %v", v)
	}
}
