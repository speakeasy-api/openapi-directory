/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateWithdrawalSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * Withdrawal sub transaction type
 */
export enum CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum {
  Withdrawal = "Withdrawal",
}

/**
 * JSON for the Withdrawal resource type
 */
export class CreateWithdrawalRootTypeForWithdrawal extends SpeakeasyBase {
  /**
   * Bank Account ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_account_id" })
  bankAccountId: string;

  /**
   * Currency of the Withdrawal.must be a currency configured for the Pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * Pot ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  /**
   * Unique request id to ensure idempotency. (ex: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  /**
   * Withdrawal sub transaction type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_transaction_type" })
  subTransactionType: CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum;

  /**
   * Withdrawal Amount upto 2 decimal places
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_value" })
  transactionValue: string;
}

export class CreateWithdrawalRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateWithdrawalRootTypeForWithdrawal;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class CreateWithdrawal500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class CreateWithdrawal429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum CreateWithdrawal409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class CreateWithdrawal409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateWithdrawal409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class CreateWithdrawal404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class CreateWithdrawal403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class CreateWithdrawal401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class CreateWithdrawal400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
 */
export enum CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum {
  In = "in",
  Out = "out",
}

/**
 * Origin of the transaction
 */
export enum CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum {
  Api = "api",
  AdminUi = "admin_ui",
  FileUpload = "file_upload",
  System = "system",
}

export enum CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum {
  Withdrawal = "Withdrawal",
}

/**
 * Withdrawal sub transaction type
 */
export enum CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum {
  Withdrawal = "Withdrawal",
}

/**
 * Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
 */
export enum CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum {
  Instructed = "instructed",
  Confirmed = "confirmed",
  Priced = "priced",
  Rejected = "rejected",
  Settled = "settled",
  Cancelled = "cancelled",
  Scheduled = "scheduled",
}

/**
 * State of the transaction
 */
export enum CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum {
  Pending = "pending",
  Archived = "archived",
}

/**
 * JSON for the Withdrawal creation response
 */
export class CreateWithdrawalRootTypeForWithdrawalCreationResponse extends SpeakeasyBase {
  /**
   * Will indicate the date where this record was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  /**
   * Currency of the Withdrawal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction: CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum;

  /**
   * External Transaction Reference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_transaction_reference" })
  externalTransactionReference?: string;

  /**
   * investment_product_id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Origin of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum;

  /**
   * Pot ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_transaction_type" })
  primaryTransactionType: CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum;

  /**
   * Intended settlement date of the pending transaction or actual the settled day of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settlement_date" })
  settlementDate?: string;

  /**
   * Withdrawal sub transaction type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_transaction_type" })
  subTransactionType: CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum;

  /**
   * Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_type" })
  subType: CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum;

  /**
   * Date the transaction was effected
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trade_date" })
  tradeDate?: string;

  /**
   * Unique ID of the withdrawal transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;

  /**
   * Withdrawal Amount upto 2 decimal places
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_value" })
  transactionValue: string;

  /**
   * State of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum;

  /**
   * Will indicate the date where this record was last changed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;
}

export class CreateWithdrawalResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * success
   */
  @SpeakeasyMetadata()
  rootTypeForWithdrawalCreationResponse?: CreateWithdrawalRootTypeForWithdrawalCreationResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  createWithdrawal400ApplicationJSONObject?: CreateWithdrawal400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  createWithdrawal401ApplicationJSONObject?: CreateWithdrawal401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  createWithdrawal403ApplicationJSONObject?: CreateWithdrawal403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  createWithdrawal404ApplicationJSONObject?: CreateWithdrawal404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  createWithdrawal409ApplicationJSONObject?: CreateWithdrawal409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  createWithdrawal429ApplicationJSONObject?: CreateWithdrawal429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  createWithdrawal500ApplicationJSONObject?: CreateWithdrawal500ApplicationJSON;
}
