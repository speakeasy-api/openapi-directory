// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType - EntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types.
type GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType struct {
	// The entity type that this type is derived from. For now, one and only one should be set.
	BaseTypes []string `json:"baseTypes,omitempty"`
	// User defined name for the type.
	DisplayName *string `json:"displayName,omitempty"`
	// Defines the a list of enum values.
	EnumValues *GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues `json:"enumValues,omitempty"`
	// Name of the type. It must be unique within the schema file and cannot be a 'Common Type'. Besides that we use the following naming conventions: - *use `snake_casing`* - name matching is case-sensitive - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility.
	Name *string `json:"name,omitempty"`
	// Description the nested structure, or composition of an entity.
	Properties []GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty `json:"properties,omitempty"`
}
