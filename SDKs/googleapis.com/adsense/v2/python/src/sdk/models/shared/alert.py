"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AlertSeverityEnum(str, Enum):
    r"""Output only. Severity of this alert."""
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    INFO = 'INFO'
    WARNING = 'WARNING'
    SEVERE = 'SEVERE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Alert:
    r"""Representation of an alert."""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Output only. The localized alert message. This may contain HTML markup, such as phrase elements or links."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Resource name of the alert. Format: accounts/{account}/alerts/{alert}"""  
    severity: Optional[AlertSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity'), 'exclude': lambda f: f is None }})
    r"""Output only. Severity of this alert."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. Type of alert. This identifies the broad type of this alert, and provides a stable machine-readable identifier that will not be translated. For example, \\"payment-hold\\"."""  
    