/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GlossaryTerm } from "./glossaryterm";
import { Expose, Type } from "class-transformer";

/**
 * Represents a single entry for an unidirectional glossary.
 */
export class GlossaryTermsPair extends SpeakeasyBase {
  /**
   * Represents a single glossary term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceTerm" })
  @Type(() => GlossaryTerm)
  sourceTerm?: GlossaryTerm;

  /**
   * Represents a single glossary term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetTerm" })
  @Type(() => GlossaryTerm)
  targetTerm?: GlossaryTerm;
}
