// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum - Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
type GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum string

const (
	GetOrganizationDevicesUplinksLossAndLatencyUplinkEnumCellular GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum = "cellular"
	GetOrganizationDevicesUplinksLossAndLatencyUplinkEnumWan1     GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum = "wan1"
	GetOrganizationDevicesUplinksLossAndLatencyUplinkEnumWan2     GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum = "wan2"
)

func (e *GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cellular":
		fallthrough
	case "wan1":
		fallthrough
	case "wan2":
		*e = GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum: %s", s)
	}
}

type GetOrganizationDevicesUplinksLossAndLatencyRequest struct {
	// Optional filter for a specific destination IP. Default will return all destination IPs.
	IP             *string `queryParam:"style=form,explode=true,name=ip"`
	OrganizationID string  `pathParam:"style=simple,explode=false,name=organizationId"`
	// The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
	T1 *string `queryParam:"style=form,explode=true,name=t1"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
	// Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
	Uplink *GetOrganizationDevicesUplinksLossAndLatencyUplinkEnum `queryParam:"style=form,explode=true,name=uplink"`
}

type GetOrganizationDevicesUplinksLossAndLatency200ApplicationJSONTimeSeries struct {
	// Latency in milliseconds
	LatencyMs *float32 `json:"latencyMs,omitempty"`
	// Loss percentage
	LossPercent *float32 `json:"lossPercent,omitempty"`
	// Timestamp for this data point
	Ts *time.Time `json:"ts,omitempty"`
}

type GetOrganizationDevicesUplinksLossAndLatency200ApplicationJSON struct {
	// IP address of uplink
	IP *string `json:"ip,omitempty"`
	// Network ID
	NetworkID *string `json:"networkId,omitempty"`
	// Serial of MX device
	Serial *string `json:"serial,omitempty"`
	// Loss and latency timeseries data
	TimeSeries []GetOrganizationDevicesUplinksLossAndLatency200ApplicationJSONTimeSeries `json:"timeSeries,omitempty"`
	// Uplink interface (wan1, wan2, or cellular)
	Uplink *string `json:"uplink,omitempty"`
}

type GetOrganizationDevicesUplinksLossAndLatencyResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationDevicesUplinksLossAndLatency200ApplicationJSONObjects []GetOrganizationDevicesUplinksLossAndLatency200ApplicationJSON
}
