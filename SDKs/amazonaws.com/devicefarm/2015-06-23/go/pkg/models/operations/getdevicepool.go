// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetDevicePoolXAmzTargetEnum
type GetDevicePoolXAmzTargetEnum string

const (
	GetDevicePoolXAmzTargetEnumDeviceFarm20150623GetDevicePool GetDevicePoolXAmzTargetEnum = "DeviceFarm_20150623.GetDevicePool"
)

func (e GetDevicePoolXAmzTargetEnum) ToPointer() *GetDevicePoolXAmzTargetEnum {
	return &e
}

func (e *GetDevicePoolXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.GetDevicePool":
		*e = GetDevicePoolXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDevicePoolXAmzTargetEnum: %v", v)
	}
}

type GetDevicePoolRequest struct {
	GetDevicePoolRequest shared.GetDevicePoolRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           GetDevicePoolXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetDevicePoolResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// Success
	GetDevicePoolResult *shared.GetDevicePoolResult
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceAccountException
	ServiceAccountException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
