// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CompleteWorkflowExecutionFailedCauseEnum string

const (
	CompleteWorkflowExecutionFailedCauseEnumUnhandledDecision     CompleteWorkflowExecutionFailedCauseEnum = "UNHANDLED_DECISION"
	CompleteWorkflowExecutionFailedCauseEnumOperationNotPermitted CompleteWorkflowExecutionFailedCauseEnum = "OPERATION_NOT_PERMITTED"
)

func (e CompleteWorkflowExecutionFailedCauseEnum) ToPointer() *CompleteWorkflowExecutionFailedCauseEnum {
	return &e
}

func (e *CompleteWorkflowExecutionFailedCauseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNHANDLED_DECISION":
		fallthrough
	case "OPERATION_NOT_PERMITTED":
		*e = CompleteWorkflowExecutionFailedCauseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompleteWorkflowExecutionFailedCauseEnum: %v", v)
	}
}
