// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BindingTypeEnum - Protocol binding identifier
type BindingTypeEnum string

const (
	BindingTypeEnumKafka        BindingTypeEnum = "KAFKA"
	BindingTypeEnumMqtt         BindingTypeEnum = "MQTT"
	BindingTypeEnumWs           BindingTypeEnum = "WS"
	BindingTypeEnumAmqp         BindingTypeEnum = "AMQP"
	BindingTypeEnumNats         BindingTypeEnum = "NATS"
	BindingTypeEnumGooglepubsub BindingTypeEnum = "GOOGLEPUBSUB"
)

func (e BindingTypeEnum) ToPointer() *BindingTypeEnum {
	return &e
}

func (e *BindingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KAFKA":
		fallthrough
	case "MQTT":
		fallthrough
	case "WS":
		fallthrough
	case "AMQP":
		fallthrough
	case "NATS":
		fallthrough
	case "GOOGLEPUBSUB":
		*e = BindingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BindingTypeEnum: %v", v)
	}
}

// Binding - Protocol binding details for asynchronous operations
type Binding struct {
	// Name of destination for asynchronous messages of this operation
	DestinationName string `json:"destinationName"`
	// Type of destination for asynchronous messages of this operation
	DestinationType *string `json:"destinationType,omitempty"`
	// Type of key for Kafka messages
	KeyType *string `json:"keyType,omitempty"`
	// HTTP method for WebSocket binding
	Method *string `json:"method,omitempty"`
	// Persistent attribute for MQTT binding
	Persistent *bool `json:"persistent,omitempty"`
	// Quality of Service attribute for MQTT binding
	QoS *string `json:"qoS,omitempty"`
	// Protocol binding identifier
	Type BindingTypeEnum `json:"type"`
}
