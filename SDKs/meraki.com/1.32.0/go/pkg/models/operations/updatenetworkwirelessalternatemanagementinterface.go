// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyAccessPoints struct {
	// Wireless alternate management interface device IP. Provide an empty string to remove alternate management IP assignment
	AlternateManagementIP string `json:"alternateManagementIp"`
	// Primary DNS must be in IP format
	Dns1 *string `json:"dns1,omitempty"`
	// Optional secondary DNS must be in IP format
	Dns2 *string `json:"dns2,omitempty"`
	// Gateway must be in IP format
	Gateway *string `json:"gateway,omitempty"`
	// Serial number of access point to be configured with alternate management IP
	Serial string `json:"serial"`
	// Subnet mask must be in IP format
	SubnetMask *string `json:"subnetMask,omitempty"`
}

type UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum string

const (
	UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnumLdap   UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum = "ldap"
	UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnumRadius UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum = "radius"
	UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnumSnmp   UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum = "snmp"
	UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnumSyslog UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum = "syslog"
)

func (e UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum) ToPointer() *UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum {
	return &e
}

func (e *UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ldap":
		fallthrough
	case "radius":
		fallthrough
	case "snmp":
		fallthrough
	case "syslog":
		*e = UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum: %v", v)
	}
}

type UpdateNetworkWirelessAlternateManagementInterfaceRequestBody struct {
	// Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments
	AccessPoints []UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyAccessPoints `json:"accessPoints,omitempty"`
	// Boolean value to enable or disable alternate management interface
	Enabled *bool `json:"enabled,omitempty"`
	// Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'
	Protocols []UpdateNetworkWirelessAlternateManagementInterfaceRequestBodyProtocolsEnum `json:"protocols,omitempty"`
	// Alternate management interface VLAN, must be between 1 and 4094
	VlanID *int64 `json:"vlanId,omitempty"`
}

type UpdateNetworkWirelessAlternateManagementInterfaceRequest struct {
	RequestBody *UpdateNetworkWirelessAlternateManagementInterfaceRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                                        `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkWirelessAlternateManagementInterfaceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkWirelessAlternateManagementInterface200ApplicationJSONObject map[string]interface{}
}
