// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

// GETAnalyticsDataUsingGETDataTypeEnum - dataType
type GETAnalyticsDataUsingGETDataTypeEnum string

const (
	GETAnalyticsDataUsingGETDataTypeEnumActiveDevices              GETAnalyticsDataUsingGETDataTypeEnum = "activeDevices"
	GETAnalyticsDataUsingGETDataTypeEnumActiveLocations            GETAnalyticsDataUsingGETDataTypeEnum = "activeLocations"
	GETAnalyticsDataUsingGETDataTypeEnumActiveUsers                GETAnalyticsDataUsingGETDataTypeEnum = "activeUsers"
	GETAnalyticsDataUsingGETDataTypeEnumAverageBandwidthPerUser    GETAnalyticsDataUsingGETDataTypeEnum = "averageBandwidthPerUser"
	GETAnalyticsDataUsingGETDataTypeEnumAverageDauOverMau          GETAnalyticsDataUsingGETDataTypeEnum = "averageDauOverMau"
	GETAnalyticsDataUsingGETDataTypeEnumAverageJsExecutionTime     GETAnalyticsDataUsingGETDataTypeEnum = "averageJsExecutionTime"
	GETAnalyticsDataUsingGETDataTypeEnumAverageRequestsPerUser     GETAnalyticsDataUsingGETDataTypeEnum = "averageRequestsPerUser"
	GETAnalyticsDataUsingGETDataTypeEnumAverageResponseTime        GETAnalyticsDataUsingGETDataTypeEnum = "averageResponseTime"
	GETAnalyticsDataUsingGETDataTypeEnumAverageResponseTimePerType GETAnalyticsDataUsingGETDataTypeEnum = "averageResponseTimePerType"
	GETAnalyticsDataUsingGETDataTypeEnumScriptLogLevelsCount       GETAnalyticsDataUsingGETDataTypeEnum = "scriptLogLevelsCount"
	GETAnalyticsDataUsingGETDataTypeEnumSessionAnalytic            GETAnalyticsDataUsingGETDataTypeEnum = "sessionAnalytic"
	GETAnalyticsDataUsingGETDataTypeEnumStoragePerUser             GETAnalyticsDataUsingGETDataTypeEnum = "storagePerUser"
	GETAnalyticsDataUsingGETDataTypeEnumCustomAnalyticTotal        GETAnalyticsDataUsingGETDataTypeEnum = "customAnalyticTotal"
	GETAnalyticsDataUsingGETDataTypeEnumCustomAnalyticUser         GETAnalyticsDataUsingGETDataTypeEnum = "customAnalyticUser"
	GETAnalyticsDataUsingGETDataTypeEnumTimedAnalyticTotal         GETAnalyticsDataUsingGETDataTypeEnum = "timedAnalyticTotal"
	GETAnalyticsDataUsingGETDataTypeEnumSessionAnalyticTotal       GETAnalyticsDataUsingGETDataTypeEnum = "sessionAnalyticTotal"
	GETAnalyticsDataUsingGETDataTypeEnumConnectedUsers             GETAnalyticsDataUsingGETDataTypeEnum = "connectedUsers"
)

func (e *GETAnalyticsDataUsingGETDataTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activeDevices":
		fallthrough
	case "activeLocations":
		fallthrough
	case "activeUsers":
		fallthrough
	case "averageBandwidthPerUser":
		fallthrough
	case "averageDauOverMau":
		fallthrough
	case "averageJsExecutionTime":
		fallthrough
	case "averageRequestsPerUser":
		fallthrough
	case "averageResponseTime":
		fallthrough
	case "averageResponseTimePerType":
		fallthrough
	case "scriptLogLevelsCount":
		fallthrough
	case "sessionAnalytic":
		fallthrough
	case "storagePerUser":
		fallthrough
	case "customAnalyticTotal":
		fallthrough
	case "customAnalyticUser":
		fallthrough
	case "timedAnalyticTotal":
		fallthrough
	case "sessionAnalyticTotal":
		fallthrough
	case "connectedUsers":
		*e = GETAnalyticsDataUsingGETDataTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAnalyticsDataUsingGETDataTypeEnum: %s", s)
	}
}

// GETAnalyticsDataUsingGETPrecisionEnum - precision
type GETAnalyticsDataUsingGETPrecisionEnum string

const (
	GETAnalyticsDataUsingGETPrecisionEnumHourly  GETAnalyticsDataUsingGETPrecisionEnum = "HOURLY"
	GETAnalyticsDataUsingGETPrecisionEnumDaily   GETAnalyticsDataUsingGETPrecisionEnum = "DAILY"
	GETAnalyticsDataUsingGETPrecisionEnumMonthly GETAnalyticsDataUsingGETPrecisionEnum = "MONTHLY"
)

func (e *GETAnalyticsDataUsingGETPrecisionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HOURLY":
		fallthrough
	case "DAILY":
		fallthrough
	case "MONTHLY":
		*e = GETAnalyticsDataUsingGETPrecisionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAnalyticsDataUsingGETPrecisionEnum: %s", s)
	}
}

// GETAnalyticsDataUsingGETStageEnum - stage
type GETAnalyticsDataUsingGETStageEnum string

const (
	GETAnalyticsDataUsingGETStageEnumLive    GETAnalyticsDataUsingGETStageEnum = "LIVE"
	GETAnalyticsDataUsingGETStageEnumPreview GETAnalyticsDataUsingGETStageEnum = "PREVIEW"
)

func (e *GETAnalyticsDataUsingGETStageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIVE":
		fallthrough
	case "PREVIEW":
		*e = GETAnalyticsDataUsingGETStageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAnalyticsDataUsingGETStageEnum: %s", s)
	}
}

type GETAnalyticsDataUsingGETRequest struct {
	// apiKey
	APIKey string `pathParam:"style=simple,explode=false,name=apiKey"`
	// dataType
	DataType GETAnalyticsDataUsingGETDataTypeEnum `queryParam:"style=form,explode=true,name=dataType"`
	// yyyy-MM-dd
	EndDate types.Date `queryParam:"style=form,explode=true,name=endDate"`
	// the keys to select. For example "ReturningUsers", "NewUsers", etc
	Keys *string `queryParam:"style=form,explode=true,name=keys"`
	// precision
	Precision GETAnalyticsDataUsingGETPrecisionEnum `queryParam:"style=form,explode=true,name=precision"`
	// stage
	Stage GETAnalyticsDataUsingGETStageEnum `queryParam:"style=form,explode=true,name=stage"`
	// yyyy-MM-dd
	StartDate types.Date `queryParam:"style=form,explode=true,name=startDate"`
}

type GETAnalyticsDataUsingGETResponse struct {
	// OK
	AnalyticsDataSwaggerModels []shared.AnalyticsDataSwaggerModel
	ContentType                string
	// json error
	MessageModel *shared.MessageModel
	StatusCode   int
	RawResponse  *http.Response
}
