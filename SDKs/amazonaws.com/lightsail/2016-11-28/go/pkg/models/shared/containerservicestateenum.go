// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContainerServiceStateEnum string

const (
	ContainerServiceStateEnumPending   ContainerServiceStateEnum = "PENDING"
	ContainerServiceStateEnumReady     ContainerServiceStateEnum = "READY"
	ContainerServiceStateEnumRunning   ContainerServiceStateEnum = "RUNNING"
	ContainerServiceStateEnumUpdating  ContainerServiceStateEnum = "UPDATING"
	ContainerServiceStateEnumDeleting  ContainerServiceStateEnum = "DELETING"
	ContainerServiceStateEnumDisabled  ContainerServiceStateEnum = "DISABLED"
	ContainerServiceStateEnumDeploying ContainerServiceStateEnum = "DEPLOYING"
)

func (e ContainerServiceStateEnum) ToPointer() *ContainerServiceStateEnum {
	return &e
}

func (e *ContainerServiceStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "READY":
		fallthrough
	case "RUNNING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DEPLOYING":
		*e = ContainerServiceStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContainerServiceStateEnum: %v", v)
	}
}
