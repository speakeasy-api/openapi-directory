"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import group as shared_group
from typing import Optional


@dataclasses.dataclass
class SubmitAnswersRequest:
    
    group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'group_id', 'style': 'simple', 'explode': False }})
    r"""The group ID of the group that the user is submitting answers for."""  
    request_body: dict[str, str] = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A JSON object mapping each question from the group membership.questionnaire.questions field to an answer (eg. {\\"Where do you live?\\": \\"New York City\\"} ). All questions are required so no null or empty string answers are allowed."""  
    

@dataclasses.dataclass
class SubmitAnswersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    group: Optional[shared_group.Group] = dataclasses.field(default=None)
    r"""The updated group."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    