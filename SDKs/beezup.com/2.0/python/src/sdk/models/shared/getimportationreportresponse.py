"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getimportationreportresponsediff as shared_getimportationreportresponsediff
from ..shared import getimportationreportresponseerror as shared_getimportationreportresponseerror
from ..shared import getimportationreportresponseimportationinfo as shared_getimportationreportresponseimportationinfo
from ..shared import getimportationreportresponseproductmetrics as shared_getimportationreportresponseproductmetrics
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetImportationReportResponse:
    r"""Get Importation Report Response"""
    
    errors: list[shared_getimportationreportresponseerror.GetImportationReportResponseError] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors') }})  
    execution_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionId') }})
    r"""The execution identifier of the catalog importation"""  
    importation_info: shared_getimportationreportresponseimportationinfo.GetImportationReportResponseImportationInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('importationInfo') }})  
    categories: Optional[shared_getimportationreportresponsediff.GetImportationReportResponseDiff] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categories'), 'exclude': lambda f: f is None }})  
    columns: Optional[shared_getimportationreportresponsediff.GetImportationReportResponseDiff] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columns'), 'exclude': lambda f: f is None }})  
    product_metrics: Optional[shared_getimportationreportresponseproductmetrics.GetImportationReportResponseProductMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productMetrics'), 'exclude': lambda f: f is None }})  
    products: Optional[shared_getimportationreportresponsediff.GetImportationReportResponseDiff] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('products'), 'exclude': lambda f: f is None }})  
    