// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetUserVodsPathParams struct {
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

// GetUserVodsDirectionEnum - The sort direction of the results.
type GetUserVodsDirectionEnum string

const (
	GetUserVodsDirectionEnumAsc  GetUserVodsDirectionEnum = "asc"
	GetUserVodsDirectionEnumDesc GetUserVodsDirectionEnum = "desc"
)

func (e *GetUserVodsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetUserVodsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserVodsDirectionEnum: %s", s)
	}
}

// GetUserVodsFilterEnum - The type of On Demand pages to return.
type GetUserVodsFilterEnum string

const (
	GetUserVodsFilterEnumFilm   GetUserVodsFilterEnum = "film"
	GetUserVodsFilterEnumSeries GetUserVodsFilterEnum = "series"
)

func (e *GetUserVodsFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "film":
		fallthrough
	case "series":
		*e = GetUserVodsFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserVodsFilterEnum: %s", s)
	}
}

// GetUserVodsSortEnum - The way to sort the results.
type GetUserVodsSortEnum string

const (
	GetUserVodsSortEnumAdded        GetUserVodsSortEnum = "added"
	GetUserVodsSortEnumAlphabetical GetUserVodsSortEnum = "alphabetical"
	GetUserVodsSortEnumDate         GetUserVodsSortEnum = "date"
	GetUserVodsSortEnumModifiedTime GetUserVodsSortEnum = "modified_time"
	GetUserVodsSortEnumName         GetUserVodsSortEnum = "name"
	GetUserVodsSortEnumPublishTime  GetUserVodsSortEnum = "publish.time"
	GetUserVodsSortEnumRating       GetUserVodsSortEnum = "rating"
)

func (e *GetUserVodsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "added":
		fallthrough
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "modified_time":
		fallthrough
	case "name":
		fallthrough
	case "publish.time":
		fallthrough
	case "rating":
		*e = GetUserVodsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserVodsSortEnum: %s", s)
	}
}

type GetUserVodsQueryParams struct {
	// The sort direction of the results.
	Direction *GetUserVodsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The type of On Demand pages to return.
	Filter *GetUserVodsFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The way to sort the results.
	Sort *GetUserVodsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetUserVodsRequest struct {
	PathParams  GetUserVodsPathParams
	QueryParams GetUserVodsQueryParams
}

type GetUserVodsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// No such user exists.
	LegacyError *shared.LegacyError
	// The On Demand pages were returned.
	OnDemandPages []shared.OnDemandPage
}
