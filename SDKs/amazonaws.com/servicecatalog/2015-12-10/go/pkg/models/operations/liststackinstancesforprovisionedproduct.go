// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListStackInstancesForProvisionedProductXAmzTargetEnum
type ListStackInstancesForProvisionedProductXAmzTargetEnum string

const (
	ListStackInstancesForProvisionedProductXAmzTargetEnumAws242ServiceCatalogServiceListStackInstancesForProvisionedProduct ListStackInstancesForProvisionedProductXAmzTargetEnum = "AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct"
)

func (e ListStackInstancesForProvisionedProductXAmzTargetEnum) ToPointer() *ListStackInstancesForProvisionedProductXAmzTargetEnum {
	return &e
}

func (e *ListStackInstancesForProvisionedProductXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct":
		*e = ListStackInstancesForProvisionedProductXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListStackInstancesForProvisionedProductXAmzTargetEnum: %v", v)
	}
}

type ListStackInstancesForProvisionedProductRequest struct {
	ListStackInstancesForProvisionedProductInput shared.ListStackInstancesForProvisionedProductInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                                *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                            *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                               *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                     *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                            *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                            *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                   ListStackInstancesForProvisionedProductXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListStackInstancesForProvisionedProductResponse struct {
	ContentType string
	// InvalidParametersException
	InvalidParametersException interface{}
	// Success
	ListStackInstancesForProvisionedProductOutput *shared.ListStackInstancesForProvisionedProductOutput
	StatusCode                                    int
	RawResponse                                   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
