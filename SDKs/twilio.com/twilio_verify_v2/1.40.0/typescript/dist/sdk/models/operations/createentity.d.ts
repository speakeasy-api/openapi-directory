import { SpeakeasyBase } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export declare const CreateEntityServerList: readonly ["https://verify.twilio.com"];
export declare class CreateEntitySecurity extends SpeakeasyBase {
    password: string;
    username: string;
}
export declare class CreateEntityCreateEntityRequest extends SpeakeasyBase {
    /**
     * The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
     */
    identity: string;
}
export declare class CreateEntityRequest extends SpeakeasyBase {
    requestBody?: CreateEntityCreateEntityRequest;
    /**
     * The unique SID identifier of the Service.
     */
    serviceSid: string;
}
export declare class CreateEntityResponse extends SpeakeasyBase {
    contentType: string;
    statusCode: number;
    rawResponse?: AxiosResponse;
    /**
     * Created
     */
    verifyV2ServiceEntity?: shared.VerifyV2ServiceEntity;
}
