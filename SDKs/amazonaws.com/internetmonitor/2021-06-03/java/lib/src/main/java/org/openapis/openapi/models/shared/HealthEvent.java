/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * HealthEvent - Information about a health event created in a monitor in Amazon CloudWatch Internet Monitor.
 */
public class HealthEvent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;

    public HealthEvent withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndedAt")
    public OffsetDateTime endedAt;

    public HealthEvent withEndedAt(OffsetDateTime endedAt) {
        this.endedAt = endedAt;
        return this;
    }
    
    @JsonProperty("EventArn")
    public String eventArn;

    public HealthEvent withEventArn(String eventArn) {
        this.eventArn = eventArn;
        return this;
    }
    
    @JsonProperty("EventId")
    public String eventId;

    public HealthEvent withEventId(String eventId) {
        this.eventId = eventId;
        return this;
    }
    
    @JsonProperty("ImpactType")
    public HealthEventImpactTypeEnum impactType;

    public HealthEvent withImpactType(HealthEventImpactTypeEnum impactType) {
        this.impactType = impactType;
        return this;
    }
    
    @JsonProperty("ImpactedLocations")
    public ImpactedLocation[] impactedLocations;

    public HealthEvent withImpactedLocations(ImpactedLocation[] impactedLocations) {
        this.impactedLocations = impactedLocations;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedAt")
    public OffsetDateTime lastUpdatedAt;

    public HealthEvent withLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PercentOfTotalTrafficImpacted")
    public Double percentOfTotalTrafficImpacted;

    public HealthEvent withPercentOfTotalTrafficImpacted(Double percentOfTotalTrafficImpacted) {
        this.percentOfTotalTrafficImpacted = percentOfTotalTrafficImpacted;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartedAt")
    public OffsetDateTime startedAt;

    public HealthEvent withStartedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }
    
    @JsonProperty("Status")
    public HealthEventStatusEnum status;

    public HealthEvent withStatus(HealthEventStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public HealthEvent(@JsonProperty("EventArn") String eventArn, @JsonProperty("EventId") String eventId, @JsonProperty("ImpactType") HealthEventImpactTypeEnum impactType, @JsonProperty("ImpactedLocations") ImpactedLocation[] impactedLocations, @JsonProperty("LastUpdatedAt") OffsetDateTime lastUpdatedAt, @JsonProperty("StartedAt") OffsetDateTime startedAt, @JsonProperty("Status") HealthEventStatusEnum status) {
        this.eventArn = eventArn;
        this.eventId = eventId;
        this.impactType = impactType;
        this.impactedLocations = impactedLocations;
        this.lastUpdatedAt = lastUpdatedAt;
        this.startedAt = startedAt;
        this.status = status;
  }
}
