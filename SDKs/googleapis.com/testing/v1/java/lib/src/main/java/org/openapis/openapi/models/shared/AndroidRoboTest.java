/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AndroidRoboTest - A test of an android application that explores the application on a virtual or physical Android Device, finding culprits and crashes as it goes.
 */
public class AndroidRoboTest {
    /**
     * A reference to a file, used for user inputs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appApk")
    public FileReference appApk;
    public AndroidRoboTest withAppApk(FileReference appApk) {
        this.appApk = appApk;
        return this;
    }
    
    /**
     * An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories. See https://developer.android.com/guide/app-bundle/build for guidance on building App Bundles.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appBundle")
    public AppBundle appBundle;
    public AndroidRoboTest withAppBundle(AppBundle appBundle) {
        this.appBundle = appBundle;
        return this;
    }
    
    /**
     * The initial activity that should be used to start the app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appInitialActivity")
    public String appInitialActivity;
    public AndroidRoboTest withAppInitialActivity(String appInitialActivity) {
        this.appInitialActivity = appInitialActivity;
        return this;
    }
    
    /**
     * The java package for the application under test. The default value is determined by examining the application's manifest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appPackageId")
    public String appPackageId;
    public AndroidRoboTest withAppPackageId(String appPackageId) {
        this.appPackageId = appPackageId;
        return this;
    }
    
    /**
     * The max depth of the traversal stack Robo can explore. Needs to be at least 2 to make Robo explore the app beyond the first activity. Default is 50.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDepth")
    public Integer maxDepth;
    public AndroidRoboTest withMaxDepth(Integer maxDepth) {
        this.maxDepth = maxDepth;
        return this;
    }
    
    /**
     * The max number of steps Robo can execute. Default is no limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxSteps")
    public Integer maxSteps;
    public AndroidRoboTest withMaxSteps(Integer maxSteps) {
        this.maxSteps = maxSteps;
        return this;
    }
    
    /**
     * A set of directives Robo should apply during the crawl. This allows users to customize the crawl. For example, the username and password for a test account can be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roboDirectives")
    public RoboDirective[] roboDirectives;
    public AndroidRoboTest withRoboDirectives(RoboDirective[] roboDirectives) {
        this.roboDirectives = roboDirectives;
        return this;
    }
    
    /**
     * The mode in which Robo should run. Most clients should allow the server to populate this field automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roboMode")
    public AndroidRoboTestRoboModeEnum roboMode;
    public AndroidRoboTest withRoboMode(AndroidRoboTestRoboModeEnum roboMode) {
        this.roboMode = roboMode;
        return this;
    }
    
    /**
     * A reference to a file, used for user inputs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roboScript")
    public FileReference roboScript;
    public AndroidRoboTest withRoboScript(FileReference roboScript) {
        this.roboScript = roboScript;
        return this;
    }
    
    /**
     * The intents used to launch the app for the crawl. If none are provided, then the main launcher activity is launched. If some are provided, then only those provided are launched (the main launcher activity must be provided explicitly).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startingIntents")
    public RoboStartingIntent[] startingIntents;
    public AndroidRoboTest withStartingIntents(RoboStartingIntent[] startingIntents) {
        this.startingIntents = startingIntents;
        return this;
    }
    
}
