/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NAPlug {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_id")
    public String id;

    public NAPlug withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmware")
    public Integer firmware;

    public NAPlug withFirmware(Integer firmware) {
        this.firmware = firmware;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_bilan")
    public NAYearMonth lastBilan;

    public NAPlug withLastBilan(NAYearMonth lastBilan) {
        this.lastBilan = lastBilan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_plug_seen")
    public Integer lastPlugSeen;

    public NAPlug withLastPlugSeen(Integer lastPlugSeen) {
        this.lastPlugSeen = lastPlugSeen;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_status_store")
    public Integer lastStatusStore;

    public NAPlug withLastStatusStore(Integer lastStatusStore) {
        this.lastStatusStore = lastStatusStore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modules")
    public NAThermostat[] modules;

    public NAPlug withModules(NAThermostat[] modules) {
        this.modules = modules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("place")
    public NAPlace place;

    public NAPlug withPlace(NAPlace place) {
        this.place = place;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plug_connected_boiler")
    public Integer plugConnectedBoiler;

    public NAPlug withPlugConnectedBoiler(Integer plugConnectedBoiler) {
        this.plugConnectedBoiler = plugConnectedBoiler;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("station_name")
    public String stationName;

    public NAPlug withStationName(String stationName) {
        this.stationName = stationName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("syncing")
    public Boolean syncing;

    public NAPlug withSyncing(Boolean syncing) {
        this.syncing = syncing;
        return this;
    }
    
    /**
     * Included in every device or module. It defines the type of the device/module. Its values are among :
     * NAMain : for the base station
     * NAModule1 : for the outdoor module
     * NAModule4 : for the additionnal indoor module
     * NAModule3 : for the rain gauge module
     * NAPlug : for the thermostat relay/plug
     * NATherm1 : for the thermostat module
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public NAPlug withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("udp_conn")
    public Boolean udpConn;

    public NAPlug withUdpConn(Boolean udpConn) {
        this.udpConn = udpConn;
        return this;
    }
    
    /**
     * It contains the current wifi status. The different thresholds to take into account are
     * RSSI_THRESHOLD_0 = 86 bad signal
     * RSSI_THRESHOLD_1 = 71 middle quality signal
     * RSSI_THRESHOLD_2 = 56 good signal
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifi_status")
    public Integer wifiStatus;

    public NAPlug withWifiStatus(Integer wifiStatus) {
        this.wifiStatus = wifiStatus;
        return this;
    }
    
    public NAPlug(){}
}
