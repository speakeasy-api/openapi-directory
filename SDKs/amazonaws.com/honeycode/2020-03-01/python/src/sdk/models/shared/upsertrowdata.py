"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cellinput as shared_cellinput
from ..shared import filter as shared_filter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpsertRowData:
    r"""Data needed to upsert rows in a table as part of a single item in the BatchUpsertTableRows request."""
    
    batch_item_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchItemId') }})  
    cells_to_update: dict[str, shared_cellinput.CellInput] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cellsToUpdate') }})  
    filter: shared_filter.Filter = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter') }})  
    