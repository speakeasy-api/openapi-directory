/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RemoteServerConfigurationFileEntity - Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)
 */
public class RemoteServerConfigurationFileEntity {
    /**
     * Files Agent API Token
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_token")
    public String apiToken;
    public RemoteServerConfigurationFileEntity withApiToken(String apiToken) {
        this.apiToken = apiToken;
        return this;
    }
    
    /**
     * agent config version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config_version")
    public String configVersion;
    public RemoteServerConfigurationFileEntity withConfigVersion(String configVersion) {
        this.configVersion = configVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;
    public RemoteServerConfigurationFileEntity withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Agent ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public RemoteServerConfigurationFileEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permission_set")
    public String permissionSet;
    public RemoteServerConfigurationFileEntity withPermissionSet(String permissionSet) {
        this.permissionSet = permissionSet;
        return this;
    }
    
    /**
     * Incoming port for files agent connections
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public Integer port;
    public RemoteServerConfigurationFileEntity withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * private key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private_key")
    public String privateKey;
    public RemoteServerConfigurationFileEntity withPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }
    
    /**
     * public key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_key")
    public String publicKey;
    public RemoteServerConfigurationFileEntity withPublicKey(String publicKey) {
        this.publicKey = publicKey;
        return this;
    }
    
    /**
     * Agent local root path
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("root")
    public String root;
    public RemoteServerConfigurationFileEntity withRoot(String root) {
        this.root = root;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("server_host_key")
    public String serverHostKey;
    public RemoteServerConfigurationFileEntity withServerHostKey(String serverHostKey) {
        this.serverHostKey = serverHostKey;
        return this;
    }
    
    /**
     * either running or shutdown
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public RemoteServerConfigurationFileEntity withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subdomain")
    public String subdomain;
    public RemoteServerConfigurationFileEntity withSubdomain(String subdomain) {
        this.subdomain = subdomain;
        return this;
    }
    
}
