<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GooglePrivacyDlpV2Condition - The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GooglePrivacyDlpV2Condition
{
    /**
     * General identifier of a data field in a storage service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2FieldId $field
     */
	#[\JMS\Serializer\Annotation\SerializedName('field')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2FieldId')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2FieldId $field = null;
    
    /**
     * Required. Operator used to compare the field or infoType to the value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2ConditionOperatorEnum $operator
     */
	#[\JMS\Serializer\Annotation\SerializedName('operator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2ConditionOperatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2ConditionOperatorEnum $operator = null;
    
    /**
     * Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2Value $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2Value')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2Value $value = null;
    
	public function __construct()
	{
		$this->field = null;
		$this->operator = null;
		$this->value = null;
	}
}
