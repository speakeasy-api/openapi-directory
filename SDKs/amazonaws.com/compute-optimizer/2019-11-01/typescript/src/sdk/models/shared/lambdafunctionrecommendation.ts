/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CurrentPerformanceRiskEnum } from "./currentperformanceriskenum";
import { LambdaFunctionMemoryRecommendationOption } from "./lambdafunctionmemoryrecommendationoption";
import { LambdaFunctionRecommendationFindingEnum } from "./lambdafunctionrecommendationfindingenum";
import { LambdaFunctionRecommendationFindingReasonCodeEnum } from "./lambdafunctionrecommendationfindingreasoncodeenum";
import { LambdaFunctionUtilizationMetric } from "./lambdafunctionutilizationmetric";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes an Lambda function recommendation.
 */
export class LambdaFunctionRecommendation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currentMemorySize" })
  currentMemorySize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "currentPerformanceRisk" })
  currentPerformanceRisk?: CurrentPerformanceRiskEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "finding" })
  finding?: LambdaFunctionRecommendationFindingEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "findingReasonCodes" })
  findingReasonCodes?: LambdaFunctionRecommendationFindingReasonCodeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "functionArn" })
  functionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "functionVersion" })
  functionVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastRefreshTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastRefreshTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lookbackPeriodInDays" })
  lookbackPeriodInDays?: number;

  @SpeakeasyMetadata({ elemType: LambdaFunctionMemoryRecommendationOption })
  @Expose({ name: "memorySizeRecommendationOptions" })
  @Type(() => LambdaFunctionMemoryRecommendationOption)
  memorySizeRecommendationOptions?: LambdaFunctionMemoryRecommendationOption[];

  @SpeakeasyMetadata()
  @Expose({ name: "numberOfInvocations" })
  numberOfInvocations?: number;

  @SpeakeasyMetadata({ elemType: LambdaFunctionUtilizationMetric })
  @Expose({ name: "utilizationMetrics" })
  @Type(() => LambdaFunctionUtilizationMetric)
  utilizationMetrics?: LambdaFunctionUtilizationMetric[];
}
