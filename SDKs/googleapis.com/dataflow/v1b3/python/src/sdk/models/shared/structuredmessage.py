"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import parameter as shared_parameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StructuredMessage:
    r"""A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption."""
    
    message_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageKey'), 'exclude': lambda f: f is None }})
    r"""Identifier for this message type. Used by external systems to internationalize or personalize message."""  
    message_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageText'), 'exclude': lambda f: f is None }})
    r"""Human-readable version of message."""  
    parameters: Optional[list[shared_parameter.Parameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""The structured data associated with this message."""  
    