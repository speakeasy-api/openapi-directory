"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyPerformanceResult = exports.PropertyPerformanceResultOccupancyEnum = exports.PropertyPerformanceResultLengthOfStayEnum = exports.PropertyPerformanceResultDeviceTypeEnum = exports.PropertyPerformanceResultAdvanceBookingWindowEnum = void 0;
var utils_1 = require("../../../internal/utils");
var date_1 = require("./date");
var class_transformer_1 = require("class-transformer");
/**
 * Difference in days between query date and check-in date in property's local timezone. Only present if `advanceBookingWindow` is specified in `aggregateBy` in the request.
 */
var PropertyPerformanceResultAdvanceBookingWindowEnum;
(function (PropertyPerformanceResultAdvanceBookingWindowEnum) {
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowUnspecified"] = "ADVANCE_BOOKING_WINDOW_UNSPECIFIED";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowSameDay"] = "ADVANCE_BOOKING_WINDOW_SAME_DAY";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowNextDay"] = "ADVANCE_BOOKING_WINDOW_NEXT_DAY";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays2To7"] = "ADVANCE_BOOKING_WINDOW_DAYS_2_TO_7";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays8To14"] = "ADVANCE_BOOKING_WINDOW_DAYS_8_TO_14";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays15To30"] = "ADVANCE_BOOKING_WINDOW_DAYS_15_TO_30";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays31To60"] = "ADVANCE_BOOKING_WINDOW_DAYS_31_TO_60";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays61To90"] = "ADVANCE_BOOKING_WINDOW_DAYS_61_TO_90";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays91To120"] = "ADVANCE_BOOKING_WINDOW_DAYS_91_TO_120";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays121To150"] = "ADVANCE_BOOKING_WINDOW_DAYS_121_TO_150";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDays151To180"] = "ADVANCE_BOOKING_WINDOW_DAYS_151_TO_180";
    PropertyPerformanceResultAdvanceBookingWindowEnum["AdvanceBookingWindowDaysOver180"] = "ADVANCE_BOOKING_WINDOW_DAYS_OVER_180";
})(PropertyPerformanceResultAdvanceBookingWindowEnum = exports.PropertyPerformanceResultAdvanceBookingWindowEnum || (exports.PropertyPerformanceResultAdvanceBookingWindowEnum = {}));
/**
 * The userâ€™s device type. Only present if `deviceType` is specified in `aggregateBy` in the request.
 */
var PropertyPerformanceResultDeviceTypeEnum;
(function (PropertyPerformanceResultDeviceTypeEnum) {
    PropertyPerformanceResultDeviceTypeEnum["DeviceUnspecified"] = "DEVICE_UNSPECIFIED";
    PropertyPerformanceResultDeviceTypeEnum["DeviceUnknown"] = "DEVICE_UNKNOWN";
    PropertyPerformanceResultDeviceTypeEnum["Desktop"] = "DESKTOP";
    PropertyPerformanceResultDeviceTypeEnum["Mobile"] = "MOBILE";
    PropertyPerformanceResultDeviceTypeEnum["Tablet"] = "TABLET";
})(PropertyPerformanceResultDeviceTypeEnum = exports.PropertyPerformanceResultDeviceTypeEnum || (exports.PropertyPerformanceResultDeviceTypeEnum = {}));
/**
 * Number of nights between check-in and check-out dates specified by user. Only present if `lengthOfStay` is specified in `aggregateBy` in the request.
 */
var PropertyPerformanceResultLengthOfStayEnum;
(function (PropertyPerformanceResultLengthOfStayEnum) {
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayUnspecified"] = "LENGTH_OF_STAY_UNSPECIFIED";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights1"] = "LENGTH_OF_STAY_NIGHTS_1";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights2"] = "LENGTH_OF_STAY_NIGHTS_2";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights3"] = "LENGTH_OF_STAY_NIGHTS_3";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights4To7"] = "LENGTH_OF_STAY_NIGHTS_4_TO_7";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights8To14"] = "LENGTH_OF_STAY_NIGHTS_8_TO_14";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights15To21"] = "LENGTH_OF_STAY_NIGHTS_15_TO_21";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNights22To30"] = "LENGTH_OF_STAY_NIGHTS_22_TO_30";
    PropertyPerformanceResultLengthOfStayEnum["LengthOfStayNightsOver30"] = "LENGTH_OF_STAY_NIGHTS_OVER_30";
})(PropertyPerformanceResultLengthOfStayEnum = exports.PropertyPerformanceResultLengthOfStayEnum || (exports.PropertyPerformanceResultLengthOfStayEnum = {}));
/**
 * Requested number of people staying at the property. Only present if `partnerPropertyId` is specified in `aggregateBy` in the request.
 */
var PropertyPerformanceResultOccupancyEnum;
(function (PropertyPerformanceResultOccupancyEnum) {
    PropertyPerformanceResultOccupancyEnum["OccupancyUnspecified"] = "OCCUPANCY_UNSPECIFIED";
    PropertyPerformanceResultOccupancyEnum["Occupancy1"] = "OCCUPANCY_1";
    PropertyPerformanceResultOccupancyEnum["Occupancy2"] = "OCCUPANCY_2";
    PropertyPerformanceResultOccupancyEnum["Occupancy3"] = "OCCUPANCY_3";
    PropertyPerformanceResultOccupancyEnum["Occupancy4"] = "OCCUPANCY_4";
    PropertyPerformanceResultOccupancyEnum["OccupancyOver4"] = "OCCUPANCY_OVER_4";
})(PropertyPerformanceResultOccupancyEnum = exports.PropertyPerformanceResultOccupancyEnum || (exports.PropertyPerformanceResultOccupancyEnum = {}));
/**
 * Represents a result from querying for the property performance report for an account.
 */
var PropertyPerformanceResult = /** @class */ (function (_super) {
    __extends(PropertyPerformanceResult, _super);
    function PropertyPerformanceResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adsClickCount" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "adsClickCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adsClickthroughRate" }),
        __metadata("design:type", Number)
    ], PropertyPerformanceResult.prototype, "adsClickthroughRate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adsImpressionCount" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "adsImpressionCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "advanceBookingWindow" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "advanceBookingWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "brand" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "brand", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clickCount" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "clickCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clickthroughRate" }),
        __metadata("design:type", Number)
    ], PropertyPerformanceResult.prototype, "clickthroughRate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "date" }),
        (0, class_transformer_1.Type)(function () { return date_1.Date; }),
        __metadata("design:type", date_1.Date)
    ], PropertyPerformanceResult.prototype, "date", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deviceType" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "deviceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "highIntentUsers" }),
        __metadata("design:type", Boolean)
    ], PropertyPerformanceResult.prototype, "highIntentUsers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "impressionCount" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "impressionCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lengthOfStay" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "lengthOfStay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "occupancy" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "occupancy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "partnerPropertyDisplayName" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "partnerPropertyDisplayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "partnerPropertyId" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "partnerPropertyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "propertyRegionCode" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "propertyRegionCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userRegionCode" }),
        __metadata("design:type", String)
    ], PropertyPerformanceResult.prototype, "userRegionCode", void 0);
    return PropertyPerformanceResult;
}(utils_1.SpeakeasyBase));
exports.PropertyPerformanceResult = PropertyPerformanceResult;
