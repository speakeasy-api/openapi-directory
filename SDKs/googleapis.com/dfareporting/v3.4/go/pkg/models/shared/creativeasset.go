// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreativeAssetAlignmentEnum - Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL .
type CreativeAssetAlignmentEnum string

const (
	CreativeAssetAlignmentEnumAlignmentTop    CreativeAssetAlignmentEnum = "ALIGNMENT_TOP"
	CreativeAssetAlignmentEnumAlignmentRight  CreativeAssetAlignmentEnum = "ALIGNMENT_RIGHT"
	CreativeAssetAlignmentEnumAlignmentBottom CreativeAssetAlignmentEnum = "ALIGNMENT_BOTTOM"
	CreativeAssetAlignmentEnumAlignmentLeft   CreativeAssetAlignmentEnum = "ALIGNMENT_LEFT"
)

func (e CreativeAssetAlignmentEnum) ToPointer() *CreativeAssetAlignmentEnum {
	return &e
}

func (e *CreativeAssetAlignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALIGNMENT_TOP":
		fallthrough
	case "ALIGNMENT_RIGHT":
		fallthrough
	case "ALIGNMENT_BOTTOM":
		fallthrough
	case "ALIGNMENT_LEFT":
		*e = CreativeAssetAlignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetAlignmentEnum: %v", v)
	}
}

// CreativeAssetArtworkTypeEnum - Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
type CreativeAssetArtworkTypeEnum string

const (
	CreativeAssetArtworkTypeEnumArtworkTypeFlash CreativeAssetArtworkTypeEnum = "ARTWORK_TYPE_FLASH"
	CreativeAssetArtworkTypeEnumArtworkTypeHtml5 CreativeAssetArtworkTypeEnum = "ARTWORK_TYPE_HTML5"
	CreativeAssetArtworkTypeEnumArtworkTypeMixed CreativeAssetArtworkTypeEnum = "ARTWORK_TYPE_MIXED"
	CreativeAssetArtworkTypeEnumArtworkTypeImage CreativeAssetArtworkTypeEnum = "ARTWORK_TYPE_IMAGE"
)

func (e CreativeAssetArtworkTypeEnum) ToPointer() *CreativeAssetArtworkTypeEnum {
	return &e
}

func (e *CreativeAssetArtworkTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARTWORK_TYPE_FLASH":
		fallthrough
	case "ARTWORK_TYPE_HTML5":
		fallthrough
	case "ARTWORK_TYPE_MIXED":
		fallthrough
	case "ARTWORK_TYPE_IMAGE":
		*e = CreativeAssetArtworkTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetArtworkTypeEnum: %v", v)
	}
}

// CreativeAssetChildAssetTypeEnum - Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.
type CreativeAssetChildAssetTypeEnum string

const (
	CreativeAssetChildAssetTypeEnumChildAssetTypeFlash CreativeAssetChildAssetTypeEnum = "CHILD_ASSET_TYPE_FLASH"
	CreativeAssetChildAssetTypeEnumChildAssetTypeVideo CreativeAssetChildAssetTypeEnum = "CHILD_ASSET_TYPE_VIDEO"
	CreativeAssetChildAssetTypeEnumChildAssetTypeImage CreativeAssetChildAssetTypeEnum = "CHILD_ASSET_TYPE_IMAGE"
	CreativeAssetChildAssetTypeEnumChildAssetTypeData  CreativeAssetChildAssetTypeEnum = "CHILD_ASSET_TYPE_DATA"
)

func (e CreativeAssetChildAssetTypeEnum) ToPointer() *CreativeAssetChildAssetTypeEnum {
	return &e
}

func (e *CreativeAssetChildAssetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CHILD_ASSET_TYPE_FLASH":
		fallthrough
	case "CHILD_ASSET_TYPE_VIDEO":
		fallthrough
	case "CHILD_ASSET_TYPE_IMAGE":
		fallthrough
	case "CHILD_ASSET_TYPE_DATA":
		*e = CreativeAssetChildAssetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetChildAssetTypeEnum: %v", v)
	}
}

type CreativeAssetDetectedFeaturesEnum string

const (
	CreativeAssetDetectedFeaturesEnumCSSFontFace            CreativeAssetDetectedFeaturesEnum = "CSS_FONT_FACE"
	CreativeAssetDetectedFeaturesEnumCSSBackgroundSize      CreativeAssetDetectedFeaturesEnum = "CSS_BACKGROUND_SIZE"
	CreativeAssetDetectedFeaturesEnumCSSBorderImage         CreativeAssetDetectedFeaturesEnum = "CSS_BORDER_IMAGE"
	CreativeAssetDetectedFeaturesEnumCSSBorderRadius        CreativeAssetDetectedFeaturesEnum = "CSS_BORDER_RADIUS"
	CreativeAssetDetectedFeaturesEnumCSSBoxShadow           CreativeAssetDetectedFeaturesEnum = "CSS_BOX_SHADOW"
	CreativeAssetDetectedFeaturesEnumCSSFlexBox             CreativeAssetDetectedFeaturesEnum = "CSS_FLEX_BOX"
	CreativeAssetDetectedFeaturesEnumCSSHsla                CreativeAssetDetectedFeaturesEnum = "CSS_HSLA"
	CreativeAssetDetectedFeaturesEnumCSSMultipleBgs         CreativeAssetDetectedFeaturesEnum = "CSS_MULTIPLE_BGS"
	CreativeAssetDetectedFeaturesEnumCSSOpacity             CreativeAssetDetectedFeaturesEnum = "CSS_OPACITY"
	CreativeAssetDetectedFeaturesEnumCSSRgba                CreativeAssetDetectedFeaturesEnum = "CSS_RGBA"
	CreativeAssetDetectedFeaturesEnumCSSTextShadow          CreativeAssetDetectedFeaturesEnum = "CSS_TEXT_SHADOW"
	CreativeAssetDetectedFeaturesEnumCSSAnimations          CreativeAssetDetectedFeaturesEnum = "CSS_ANIMATIONS"
	CreativeAssetDetectedFeaturesEnumCSSColumns             CreativeAssetDetectedFeaturesEnum = "CSS_COLUMNS"
	CreativeAssetDetectedFeaturesEnumCSSGeneratedContent    CreativeAssetDetectedFeaturesEnum = "CSS_GENERATED_CONTENT"
	CreativeAssetDetectedFeaturesEnumCSSGradients           CreativeAssetDetectedFeaturesEnum = "CSS_GRADIENTS"
	CreativeAssetDetectedFeaturesEnumCSSReflections         CreativeAssetDetectedFeaturesEnum = "CSS_REFLECTIONS"
	CreativeAssetDetectedFeaturesEnumCSSTransforms          CreativeAssetDetectedFeaturesEnum = "CSS_TRANSFORMS"
	CreativeAssetDetectedFeaturesEnumCSSTransforms3D        CreativeAssetDetectedFeaturesEnum = "CSS_TRANSFORMS3D"
	CreativeAssetDetectedFeaturesEnumCSSTransitions         CreativeAssetDetectedFeaturesEnum = "CSS_TRANSITIONS"
	CreativeAssetDetectedFeaturesEnumApplicationCache       CreativeAssetDetectedFeaturesEnum = "APPLICATION_CACHE"
	CreativeAssetDetectedFeaturesEnumCanvas                 CreativeAssetDetectedFeaturesEnum = "CANVAS"
	CreativeAssetDetectedFeaturesEnumCanvasText             CreativeAssetDetectedFeaturesEnum = "CANVAS_TEXT"
	CreativeAssetDetectedFeaturesEnumDragAndDrop            CreativeAssetDetectedFeaturesEnum = "DRAG_AND_DROP"
	CreativeAssetDetectedFeaturesEnumHashChange             CreativeAssetDetectedFeaturesEnum = "HASH_CHANGE"
	CreativeAssetDetectedFeaturesEnumHistory                CreativeAssetDetectedFeaturesEnum = "HISTORY"
	CreativeAssetDetectedFeaturesEnumAudio                  CreativeAssetDetectedFeaturesEnum = "AUDIO"
	CreativeAssetDetectedFeaturesEnumVideo                  CreativeAssetDetectedFeaturesEnum = "VIDEO"
	CreativeAssetDetectedFeaturesEnumIndexedDb              CreativeAssetDetectedFeaturesEnum = "INDEXED_DB"
	CreativeAssetDetectedFeaturesEnumInputAttrAutocomplete  CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_AUTOCOMPLETE"
	CreativeAssetDetectedFeaturesEnumInputAttrAutofocus     CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_AUTOFOCUS"
	CreativeAssetDetectedFeaturesEnumInputAttrList          CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_LIST"
	CreativeAssetDetectedFeaturesEnumInputAttrPlaceholder   CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_PLACEHOLDER"
	CreativeAssetDetectedFeaturesEnumInputAttrMax           CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_MAX"
	CreativeAssetDetectedFeaturesEnumInputAttrMin           CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_MIN"
	CreativeAssetDetectedFeaturesEnumInputAttrMultiple      CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_MULTIPLE"
	CreativeAssetDetectedFeaturesEnumInputAttrPattern       CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_PATTERN"
	CreativeAssetDetectedFeaturesEnumInputAttrRequired      CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_REQUIRED"
	CreativeAssetDetectedFeaturesEnumInputAttrStep          CreativeAssetDetectedFeaturesEnum = "INPUT_ATTR_STEP"
	CreativeAssetDetectedFeaturesEnumInputTypeSearch        CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_SEARCH"
	CreativeAssetDetectedFeaturesEnumInputTypeTel           CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_TEL"
	CreativeAssetDetectedFeaturesEnumInputTypeURL           CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_URL"
	CreativeAssetDetectedFeaturesEnumInputTypeEmail         CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_EMAIL"
	CreativeAssetDetectedFeaturesEnumInputTypeDatetime      CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_DATETIME"
	CreativeAssetDetectedFeaturesEnumInputTypeDate          CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_DATE"
	CreativeAssetDetectedFeaturesEnumInputTypeMonth         CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_MONTH"
	CreativeAssetDetectedFeaturesEnumInputTypeWeek          CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_WEEK"
	CreativeAssetDetectedFeaturesEnumInputTypeTime          CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_TIME"
	CreativeAssetDetectedFeaturesEnumInputTypeDatetimeLocal CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_DATETIME_LOCAL"
	CreativeAssetDetectedFeaturesEnumInputTypeNumber        CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_NUMBER"
	CreativeAssetDetectedFeaturesEnumInputTypeRange         CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_RANGE"
	CreativeAssetDetectedFeaturesEnumInputTypeColor         CreativeAssetDetectedFeaturesEnum = "INPUT_TYPE_COLOR"
	CreativeAssetDetectedFeaturesEnumLocalStorage           CreativeAssetDetectedFeaturesEnum = "LOCAL_STORAGE"
	CreativeAssetDetectedFeaturesEnumPostMessage            CreativeAssetDetectedFeaturesEnum = "POST_MESSAGE"
	CreativeAssetDetectedFeaturesEnumSessionStorage         CreativeAssetDetectedFeaturesEnum = "SESSION_STORAGE"
	CreativeAssetDetectedFeaturesEnumWebSockets             CreativeAssetDetectedFeaturesEnum = "WEB_SOCKETS"
	CreativeAssetDetectedFeaturesEnumWebSQLDatabase         CreativeAssetDetectedFeaturesEnum = "WEB_SQL_DATABASE"
	CreativeAssetDetectedFeaturesEnumWebWorkers             CreativeAssetDetectedFeaturesEnum = "WEB_WORKERS"
	CreativeAssetDetectedFeaturesEnumGeoLocation            CreativeAssetDetectedFeaturesEnum = "GEO_LOCATION"
	CreativeAssetDetectedFeaturesEnumInlineSvg              CreativeAssetDetectedFeaturesEnum = "INLINE_SVG"
	CreativeAssetDetectedFeaturesEnumSmil                   CreativeAssetDetectedFeaturesEnum = "SMIL"
	CreativeAssetDetectedFeaturesEnumSvgHref                CreativeAssetDetectedFeaturesEnum = "SVG_HREF"
	CreativeAssetDetectedFeaturesEnumSvgClipPaths           CreativeAssetDetectedFeaturesEnum = "SVG_CLIP_PATHS"
	CreativeAssetDetectedFeaturesEnumTouch                  CreativeAssetDetectedFeaturesEnum = "TOUCH"
	CreativeAssetDetectedFeaturesEnumWebgl                  CreativeAssetDetectedFeaturesEnum = "WEBGL"
	CreativeAssetDetectedFeaturesEnumSvgFilters             CreativeAssetDetectedFeaturesEnum = "SVG_FILTERS"
	CreativeAssetDetectedFeaturesEnumSvgFeImage             CreativeAssetDetectedFeaturesEnum = "SVG_FE_IMAGE"
)

func (e CreativeAssetDetectedFeaturesEnum) ToPointer() *CreativeAssetDetectedFeaturesEnum {
	return &e
}

func (e *CreativeAssetDetectedFeaturesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CSS_FONT_FACE":
		fallthrough
	case "CSS_BACKGROUND_SIZE":
		fallthrough
	case "CSS_BORDER_IMAGE":
		fallthrough
	case "CSS_BORDER_RADIUS":
		fallthrough
	case "CSS_BOX_SHADOW":
		fallthrough
	case "CSS_FLEX_BOX":
		fallthrough
	case "CSS_HSLA":
		fallthrough
	case "CSS_MULTIPLE_BGS":
		fallthrough
	case "CSS_OPACITY":
		fallthrough
	case "CSS_RGBA":
		fallthrough
	case "CSS_TEXT_SHADOW":
		fallthrough
	case "CSS_ANIMATIONS":
		fallthrough
	case "CSS_COLUMNS":
		fallthrough
	case "CSS_GENERATED_CONTENT":
		fallthrough
	case "CSS_GRADIENTS":
		fallthrough
	case "CSS_REFLECTIONS":
		fallthrough
	case "CSS_TRANSFORMS":
		fallthrough
	case "CSS_TRANSFORMS3D":
		fallthrough
	case "CSS_TRANSITIONS":
		fallthrough
	case "APPLICATION_CACHE":
		fallthrough
	case "CANVAS":
		fallthrough
	case "CANVAS_TEXT":
		fallthrough
	case "DRAG_AND_DROP":
		fallthrough
	case "HASH_CHANGE":
		fallthrough
	case "HISTORY":
		fallthrough
	case "AUDIO":
		fallthrough
	case "VIDEO":
		fallthrough
	case "INDEXED_DB":
		fallthrough
	case "INPUT_ATTR_AUTOCOMPLETE":
		fallthrough
	case "INPUT_ATTR_AUTOFOCUS":
		fallthrough
	case "INPUT_ATTR_LIST":
		fallthrough
	case "INPUT_ATTR_PLACEHOLDER":
		fallthrough
	case "INPUT_ATTR_MAX":
		fallthrough
	case "INPUT_ATTR_MIN":
		fallthrough
	case "INPUT_ATTR_MULTIPLE":
		fallthrough
	case "INPUT_ATTR_PATTERN":
		fallthrough
	case "INPUT_ATTR_REQUIRED":
		fallthrough
	case "INPUT_ATTR_STEP":
		fallthrough
	case "INPUT_TYPE_SEARCH":
		fallthrough
	case "INPUT_TYPE_TEL":
		fallthrough
	case "INPUT_TYPE_URL":
		fallthrough
	case "INPUT_TYPE_EMAIL":
		fallthrough
	case "INPUT_TYPE_DATETIME":
		fallthrough
	case "INPUT_TYPE_DATE":
		fallthrough
	case "INPUT_TYPE_MONTH":
		fallthrough
	case "INPUT_TYPE_WEEK":
		fallthrough
	case "INPUT_TYPE_TIME":
		fallthrough
	case "INPUT_TYPE_DATETIME_LOCAL":
		fallthrough
	case "INPUT_TYPE_NUMBER":
		fallthrough
	case "INPUT_TYPE_RANGE":
		fallthrough
	case "INPUT_TYPE_COLOR":
		fallthrough
	case "LOCAL_STORAGE":
		fallthrough
	case "POST_MESSAGE":
		fallthrough
	case "SESSION_STORAGE":
		fallthrough
	case "WEB_SOCKETS":
		fallthrough
	case "WEB_SQL_DATABASE":
		fallthrough
	case "WEB_WORKERS":
		fallthrough
	case "GEO_LOCATION":
		fallthrough
	case "INLINE_SVG":
		fallthrough
	case "SMIL":
		fallthrough
	case "SVG_HREF":
		fallthrough
	case "SVG_CLIP_PATHS":
		fallthrough
	case "TOUCH":
		fallthrough
	case "WEBGL":
		fallthrough
	case "SVG_FILTERS":
		fallthrough
	case "SVG_FE_IMAGE":
		*e = CreativeAssetDetectedFeaturesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetDetectedFeaturesEnum: %v", v)
	}
}

// CreativeAssetDisplayTypeEnum - Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
type CreativeAssetDisplayTypeEnum string

const (
	CreativeAssetDisplayTypeEnumAssetDisplayTypeInpage                CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_INPAGE"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeFloating              CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_FLOATING"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeOverlay               CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_OVERLAY"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeExpanding             CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_EXPANDING"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeFlashInFlash          CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeFlashInFlashExpanding CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH_EXPANDING"
	CreativeAssetDisplayTypeEnumAssetDisplayTypePeelDown              CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_PEEL_DOWN"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeVpaidLinear           CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_VPAID_LINEAR"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeVpaidNonLinear        CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_VPAID_NON_LINEAR"
	CreativeAssetDisplayTypeEnumAssetDisplayTypeBackdrop              CreativeAssetDisplayTypeEnum = "ASSET_DISPLAY_TYPE_BACKDROP"
)

func (e CreativeAssetDisplayTypeEnum) ToPointer() *CreativeAssetDisplayTypeEnum {
	return &e
}

func (e *CreativeAssetDisplayTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASSET_DISPLAY_TYPE_INPAGE":
		fallthrough
	case "ASSET_DISPLAY_TYPE_FLOATING":
		fallthrough
	case "ASSET_DISPLAY_TYPE_OVERLAY":
		fallthrough
	case "ASSET_DISPLAY_TYPE_EXPANDING":
		fallthrough
	case "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH":
		fallthrough
	case "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH_EXPANDING":
		fallthrough
	case "ASSET_DISPLAY_TYPE_PEEL_DOWN":
		fallthrough
	case "ASSET_DISPLAY_TYPE_VPAID_LINEAR":
		fallthrough
	case "ASSET_DISPLAY_TYPE_VPAID_NON_LINEAR":
		fallthrough
	case "ASSET_DISPLAY_TYPE_BACKDROP":
		*e = CreativeAssetDisplayTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetDisplayTypeEnum: %v", v)
	}
}

// CreativeAssetDurationTypeEnum - Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.
type CreativeAssetDurationTypeEnum string

const (
	CreativeAssetDurationTypeEnumAssetDurationTypeAuto   CreativeAssetDurationTypeEnum = "ASSET_DURATION_TYPE_AUTO"
	CreativeAssetDurationTypeEnumAssetDurationTypeNone   CreativeAssetDurationTypeEnum = "ASSET_DURATION_TYPE_NONE"
	CreativeAssetDurationTypeEnumAssetDurationTypeCustom CreativeAssetDurationTypeEnum = "ASSET_DURATION_TYPE_CUSTOM"
)

func (e CreativeAssetDurationTypeEnum) ToPointer() *CreativeAssetDurationTypeEnum {
	return &e
}

func (e *CreativeAssetDurationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASSET_DURATION_TYPE_AUTO":
		fallthrough
	case "ASSET_DURATION_TYPE_NONE":
		fallthrough
	case "ASSET_DURATION_TYPE_CUSTOM":
		*e = CreativeAssetDurationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetDurationTypeEnum: %v", v)
	}
}

// CreativeAssetOrientationEnum - Orientation of video asset. This is a read-only, auto-generated field.
type CreativeAssetOrientationEnum string

const (
	CreativeAssetOrientationEnumLandscape CreativeAssetOrientationEnum = "LANDSCAPE"
	CreativeAssetOrientationEnumPortrait  CreativeAssetOrientationEnum = "PORTRAIT"
	CreativeAssetOrientationEnumSquare    CreativeAssetOrientationEnum = "SQUARE"
)

func (e CreativeAssetOrientationEnum) ToPointer() *CreativeAssetOrientationEnum {
	return &e
}

func (e *CreativeAssetOrientationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LANDSCAPE":
		fallthrough
	case "PORTRAIT":
		fallthrough
	case "SQUARE":
		*e = CreativeAssetOrientationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetOrientationEnum: %v", v)
	}
}

// CreativeAssetPositionLeftUnitEnum - Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
type CreativeAssetPositionLeftUnitEnum string

const (
	CreativeAssetPositionLeftUnitEnumOffsetUnitPixel           CreativeAssetPositionLeftUnitEnum = "OFFSET_UNIT_PIXEL"
	CreativeAssetPositionLeftUnitEnumOffsetUnitPercent         CreativeAssetPositionLeftUnitEnum = "OFFSET_UNIT_PERCENT"
	CreativeAssetPositionLeftUnitEnumOffsetUnitPixelFromCenter CreativeAssetPositionLeftUnitEnum = "OFFSET_UNIT_PIXEL_FROM_CENTER"
)

func (e CreativeAssetPositionLeftUnitEnum) ToPointer() *CreativeAssetPositionLeftUnitEnum {
	return &e
}

func (e *CreativeAssetPositionLeftUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OFFSET_UNIT_PIXEL":
		fallthrough
	case "OFFSET_UNIT_PERCENT":
		fallthrough
	case "OFFSET_UNIT_PIXEL_FROM_CENTER":
		*e = CreativeAssetPositionLeftUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetPositionLeftUnitEnum: %v", v)
	}
}

// CreativeAssetPositionTopUnitEnum - Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.
type CreativeAssetPositionTopUnitEnum string

const (
	CreativeAssetPositionTopUnitEnumOffsetUnitPixel           CreativeAssetPositionTopUnitEnum = "OFFSET_UNIT_PIXEL"
	CreativeAssetPositionTopUnitEnumOffsetUnitPercent         CreativeAssetPositionTopUnitEnum = "OFFSET_UNIT_PERCENT"
	CreativeAssetPositionTopUnitEnumOffsetUnitPixelFromCenter CreativeAssetPositionTopUnitEnum = "OFFSET_UNIT_PIXEL_FROM_CENTER"
)

func (e CreativeAssetPositionTopUnitEnum) ToPointer() *CreativeAssetPositionTopUnitEnum {
	return &e
}

func (e *CreativeAssetPositionTopUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OFFSET_UNIT_PIXEL":
		fallthrough
	case "OFFSET_UNIT_PERCENT":
		fallthrough
	case "OFFSET_UNIT_PIXEL_FROM_CENTER":
		*e = CreativeAssetPositionTopUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetPositionTopUnitEnum: %v", v)
	}
}

// CreativeAssetRoleEnum - Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field. PRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE, DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives. BACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE. ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives. OTHER refers to assets from sources other than Campaign Manager, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives. PARENT_VIDEO refers to videos uploaded by the user in Campaign Manager and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. TRANSCODED_VIDEO refers to videos transcoded by Campaign Manager from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. ALTERNATE_VIDEO refers to the Campaign Manager representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives. These cannot be added or removed within Campaign Manager. For VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR_VIDEO creative. PARENT_AUDIO refers to audios uploaded by the user in Campaign Manager and is applicable to INSTREAM_AUDIO creatives. TRANSCODED_AUDIO refers to audios transcoded by Campaign Manager from PARENT_AUDIO assets and is applicable to INSTREAM_AUDIO creatives.
type CreativeAssetRoleEnum string

const (
	CreativeAssetRoleEnumPrimary         CreativeAssetRoleEnum = "PRIMARY"
	CreativeAssetRoleEnumBackupImage     CreativeAssetRoleEnum = "BACKUP_IMAGE"
	CreativeAssetRoleEnumAdditionalImage CreativeAssetRoleEnum = "ADDITIONAL_IMAGE"
	CreativeAssetRoleEnumAdditionalFlash CreativeAssetRoleEnum = "ADDITIONAL_FLASH"
	CreativeAssetRoleEnumParentVideo     CreativeAssetRoleEnum = "PARENT_VIDEO"
	CreativeAssetRoleEnumTranscodedVideo CreativeAssetRoleEnum = "TRANSCODED_VIDEO"
	CreativeAssetRoleEnumOther           CreativeAssetRoleEnum = "OTHER"
	CreativeAssetRoleEnumAlternateVideo  CreativeAssetRoleEnum = "ALTERNATE_VIDEO"
	CreativeAssetRoleEnumParentAudio     CreativeAssetRoleEnum = "PARENT_AUDIO"
	CreativeAssetRoleEnumTranscodedAudio CreativeAssetRoleEnum = "TRANSCODED_AUDIO"
)

func (e CreativeAssetRoleEnum) ToPointer() *CreativeAssetRoleEnum {
	return &e
}

func (e *CreativeAssetRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRIMARY":
		fallthrough
	case "BACKUP_IMAGE":
		fallthrough
	case "ADDITIONAL_IMAGE":
		fallthrough
	case "ADDITIONAL_FLASH":
		fallthrough
	case "PARENT_VIDEO":
		fallthrough
	case "TRANSCODED_VIDEO":
		fallthrough
	case "OTHER":
		fallthrough
	case "ALTERNATE_VIDEO":
		fallthrough
	case "PARENT_AUDIO":
		fallthrough
	case "TRANSCODED_AUDIO":
		*e = CreativeAssetRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetRoleEnum: %v", v)
	}
}

// CreativeAssetStartTimeTypeEnum - Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA.
type CreativeAssetStartTimeTypeEnum string

const (
	CreativeAssetStartTimeTypeEnumAssetStartTimeTypeNone   CreativeAssetStartTimeTypeEnum = "ASSET_START_TIME_TYPE_NONE"
	CreativeAssetStartTimeTypeEnumAssetStartTimeTypeCustom CreativeAssetStartTimeTypeEnum = "ASSET_START_TIME_TYPE_CUSTOM"
)

func (e CreativeAssetStartTimeTypeEnum) ToPointer() *CreativeAssetStartTimeTypeEnum {
	return &e
}

func (e *CreativeAssetStartTimeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASSET_START_TIME_TYPE_NONE":
		fallthrough
	case "ASSET_START_TIME_TYPE_CUSTOM":
		*e = CreativeAssetStartTimeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetStartTimeTypeEnum: %v", v)
	}
}

// CreativeAssetWindowModeEnum - Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and RICH_MEDIA_INPAGE_FLOATING.
type CreativeAssetWindowModeEnum string

const (
	CreativeAssetWindowModeEnumOpaque      CreativeAssetWindowModeEnum = "OPAQUE"
	CreativeAssetWindowModeEnumWindow      CreativeAssetWindowModeEnum = "WINDOW"
	CreativeAssetWindowModeEnumTransparent CreativeAssetWindowModeEnum = "TRANSPARENT"
)

func (e CreativeAssetWindowModeEnum) ToPointer() *CreativeAssetWindowModeEnum {
	return &e
}

func (e *CreativeAssetWindowModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPAQUE":
		fallthrough
	case "WINDOW":
		fallthrough
	case "TRANSPARENT":
		*e = CreativeAssetWindowModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeAssetWindowModeEnum: %v", v)
	}
}

// CreativeAsset - Creative Asset.
type CreativeAsset struct {
	// Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
	ActionScript3 *bool `json:"actionScript3,omitempty"`
	// Whether the video or audio asset is active. This is a read-only field for VPAID_NON_LINEAR_VIDEO assets. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
	Active *bool `json:"active,omitempty"`
	// Additional sizes associated with this creative asset. HTML5 asset generated by compatible software such as GWD will be able to support more sizes this creative asset can render.
	AdditionalSizes []Size `json:"additionalSizes,omitempty"`
	// Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL .
	Alignment *CreativeAssetAlignmentEnum `json:"alignment,omitempty"`
	// Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
	ArtworkType *CreativeAssetArtworkTypeEnum `json:"artworkType,omitempty"`
	// Creative Asset ID.
	AssetIdentifier *CreativeAssetID `json:"assetIdentifier,omitempty"`
	// Audio stream bit rate in kbps. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
	AudioBitRate *int `json:"audioBitRate,omitempty"`
	// Audio sample bit rate in hertz. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
	AudioSampleRate *int `json:"audioSampleRate,omitempty"`
	// Creative Custom Event.
	BackupImageExit *CreativeCustomEvent `json:"backupImageExit,omitempty"`
	// Detected bit-rate for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
	BitRate *int `json:"bitRate,omitempty"`
	// Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.
	ChildAssetType *CreativeAssetChildAssetTypeEnum `json:"childAssetType,omitempty"`
	// Represents the dimensions of ads, placements, creatives, or creative assets.
	CollapsedSize *Size `json:"collapsedSize,omitempty"`
	// List of companion creatives assigned to an in-stream video creative asset. Acceptable values include IDs of existing flash and image creatives. Applicable to INSTREAM_VIDEO creative type with dynamicAssetSelection set to true.
	CompanionCreativeIds []string `json:"companionCreativeIds,omitempty"`
	// Custom start time in seconds for making the asset visible. Applicable to the following creative types: all RICH_MEDIA. Value must be greater than or equal to 0.
	CustomStartTimeValue *int `json:"customStartTimeValue,omitempty"`
	// List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
	DetectedFeatures []CreativeAssetDetectedFeaturesEnum `json:"detectedFeatures,omitempty"`
	// Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
	DisplayType *CreativeAssetDisplayTypeEnum `json:"displayType,omitempty"`
	// Duration in seconds for which an asset will be displayed. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID_LINEAR_VIDEO. Value must be greater than or equal to 1.
	Duration *int `json:"duration,omitempty"`
	// Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.
	DurationType *CreativeAssetDurationTypeEnum `json:"durationType,omitempty"`
	// Represents the dimensions of ads, placements, creatives, or creative assets.
	ExpandedDimension *Size `json:"expandedDimension,omitempty"`
	// File size associated with this creative asset. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
	FileSize *string `json:"fileSize,omitempty"`
	// Flash version of the asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
	FlashVersion *int `json:"flashVersion,omitempty"`
	// Video frame rate for video asset in frames per second. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
	FrameRate *float32 `json:"frameRate,omitempty"`
	// Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA.
	HideFlashObjects *bool `json:"hideFlashObjects,omitempty"`
	// Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all RICH_MEDIA.
	HideSelectionBoxes *bool `json:"hideSelectionBoxes,omitempty"`
	// Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
	HorizontallyLocked *bool `json:"horizontallyLocked,omitempty"`
	// Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
	ID *string `json:"id,omitempty"`
	// Represents a DimensionValue resource.
	IDDimensionValue *DimensionValue `json:"idDimensionValue,omitempty"`
	// Detected duration for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
	MediaDuration *float32 `json:"mediaDuration,omitempty"`
	// Detected MIME type for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
	MimeType *string `json:"mimeType,omitempty"`
	// Offset Position.
	Offset *OffsetPosition `json:"offset,omitempty"`
	// Orientation of video asset. This is a read-only, auto-generated field.
	Orientation *CreativeAssetOrientationEnum `json:"orientation,omitempty"`
	// Whether the backup asset is original or changed by the user in Campaign Manager. Applicable to the following creative types: all RICH_MEDIA.
	OriginalBackup *bool `json:"originalBackup,omitempty"`
	// Whether this asset is used as a polite load asset.
	PoliteLoad *bool `json:"politeLoad,omitempty"`
	// Offset Position.
	Position *OffsetPosition `json:"position,omitempty"`
	// Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
	PositionLeftUnit *CreativeAssetPositionLeftUnitEnum `json:"positionLeftUnit,omitempty"`
	// Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.
	PositionTopUnit *CreativeAssetPositionTopUnitEnum `json:"positionTopUnit,omitempty"`
	// Progressive URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
	ProgressiveServingURL *string `json:"progressiveServingUrl,omitempty"`
	// Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.
	Pushdown *bool `json:"pushdown,omitempty"`
	// Pushdown duration in seconds for an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height. Acceptable values are 0 to 9.99, inclusive.
	PushdownDuration *float32 `json:"pushdownDuration,omitempty"`
	// Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field. PRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE, DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives. BACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE. ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives. OTHER refers to assets from sources other than Campaign Manager, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives. PARENT_VIDEO refers to videos uploaded by the user in Campaign Manager and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. TRANSCODED_VIDEO refers to videos transcoded by Campaign Manager from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. ALTERNATE_VIDEO refers to the Campaign Manager representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives. These cannot be added or removed within Campaign Manager. For VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR_VIDEO creative. PARENT_AUDIO refers to audios uploaded by the user in Campaign Manager and is applicable to INSTREAM_AUDIO creatives. TRANSCODED_AUDIO refers to audios transcoded by Campaign Manager from PARENT_AUDIO assets and is applicable to INSTREAM_AUDIO creatives.
	Role *CreativeAssetRoleEnum `json:"role,omitempty"`
	// Represents the dimensions of ads, placements, creatives, or creative assets.
	Size *Size `json:"size,omitempty"`
	// Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
	SslCompliant *bool `json:"sslCompliant,omitempty"`
	// Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA.
	StartTimeType *CreativeAssetStartTimeTypeEnum `json:"startTimeType,omitempty"`
	// Streaming URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
	StreamingServingURL *string `json:"streamingServingUrl,omitempty"`
	// Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable to HTML5 assets.
	Transparency *bool `json:"transparency,omitempty"`
	// Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
	VerticallyLocked *bool `json:"verticallyLocked,omitempty"`
	// Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and RICH_MEDIA_INPAGE_FLOATING.
	WindowMode *CreativeAssetWindowModeEnum `json:"windowMode,omitempty"`
	// zIndex value of an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY. Acceptable values are -999999999 to 999999999, inclusive.
	ZIndex *int `json:"zIndex,omitempty"`
	// File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.
	ZipFilename *string `json:"zipFilename,omitempty"`
	// Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.
	ZipFilesize *string `json:"zipFilesize,omitempty"`
}
