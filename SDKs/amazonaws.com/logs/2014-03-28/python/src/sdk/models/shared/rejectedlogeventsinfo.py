"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RejectedLogEventsInfo:
    r"""Represents the rejected events."""
    
    expired_log_event_end_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiredLogEventEndIndex'), 'exclude': lambda f: f is None }})  
    too_new_log_event_start_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tooNewLogEventStartIndex'), 'exclude': lambda f: f is None }})  
    too_old_log_event_end_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tooOldLogEventEndIndex'), 'exclude': lambda f: f is None }})  
    