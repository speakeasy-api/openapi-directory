"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import orgsettings as shared_orgsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutV2OrgsNameSettingsRequestBodyRestrictedImages:
    
    allow_official_images: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_official_images') }})
    r"""Allow usage of official images if \\"enabled\\" is `true`."""  
    allow_verified_publishers: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_verified_publishers') }})
    r"""Allow usage of verified publisher images if \\"enabled\\" is `true`."""  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Whether or not to restrict image usage for users in the organization."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutV2OrgsNameSettingsRequestBody:
    
    restricted_images: PutV2OrgsNameSettingsRequestBodyRestrictedImages = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restricted_images') }})  
    

@dataclasses.dataclass
class PutV2OrgsNameSettingsRequest:
    
    name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'name', 'style': 'simple', 'explode': False }})
    r"""Name of the organization."""  
    request_body: PutV2OrgsNameSettingsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PutV2OrgsNameSettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    org_settings: Optional[shared_orgsettings.OrgSettings] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    