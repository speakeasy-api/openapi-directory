// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetResourceSharesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetResourceSharesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// GetResourceSharesRequestBodyResourceOwnerEnum - <p>Specifies that you want to retrieve details of only those resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – resource shares that your account shares with other accounts</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – resource shares that other accounts share with your account</p> </li> </ul>
type GetResourceSharesRequestBodyResourceOwnerEnum string

const (
	GetResourceSharesRequestBodyResourceOwnerEnumSelf          GetResourceSharesRequestBodyResourceOwnerEnum = "SELF"
	GetResourceSharesRequestBodyResourceOwnerEnumOtherAccounts GetResourceSharesRequestBodyResourceOwnerEnum = "OTHER-ACCOUNTS"
)

func (e *GetResourceSharesRequestBodyResourceOwnerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SELF":
		fallthrough
	case "OTHER-ACCOUNTS":
		*e = GetResourceSharesRequestBodyResourceOwnerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetResourceSharesRequestBodyResourceOwnerEnum: %s", s)
	}
}

// GetResourceSharesRequestBodyResourceShareStatusEnum - Specifies that you want to retrieve details of only those resource shares that have this status.
type GetResourceSharesRequestBodyResourceShareStatusEnum string

const (
	GetResourceSharesRequestBodyResourceShareStatusEnumPending  GetResourceSharesRequestBodyResourceShareStatusEnum = "PENDING"
	GetResourceSharesRequestBodyResourceShareStatusEnumActive   GetResourceSharesRequestBodyResourceShareStatusEnum = "ACTIVE"
	GetResourceSharesRequestBodyResourceShareStatusEnumFailed   GetResourceSharesRequestBodyResourceShareStatusEnum = "FAILED"
	GetResourceSharesRequestBodyResourceShareStatusEnumDeleting GetResourceSharesRequestBodyResourceShareStatusEnum = "DELETING"
	GetResourceSharesRequestBodyResourceShareStatusEnumDeleted  GetResourceSharesRequestBodyResourceShareStatusEnum = "DELETED"
)

func (e *GetResourceSharesRequestBodyResourceShareStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = GetResourceSharesRequestBodyResourceShareStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetResourceSharesRequestBodyResourceShareStatusEnum: %s", s)
	}
}

type GetResourceSharesRequestBody struct {
	// Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// Specifies the name of an individual resource share that you want to retrieve details about.
	Name *string `json:"name,omitempty"`
	// Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
	// Specifies that you want to retrieve details of only those resource shares that use the RAM permission with this <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resoure Name (ARN)</a>.
	PermissionArn *string `json:"permissionArn,omitempty"`
	// <p>Specifies that you want to retrieve details of only those resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – resource shares that your account shares with other accounts</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – resource shares that other accounts share with your account</p> </li> </ul>
	ResourceOwner GetResourceSharesRequestBodyResourceOwnerEnum `json:"resourceOwner"`
	// Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> of individual resource shares that you want information about.
	ResourceShareArns []string `json:"resourceShareArns,omitempty"`
	// Specifies that you want to retrieve details of only those resource shares that have this status.
	ResourceShareStatus *GetResourceSharesRequestBodyResourceShareStatusEnum `json:"resourceShareStatus,omitempty"`
	// Specifies that you want to retrieve details of only those resource shares that match the specified tag keys and values.
	TagFilters []shared.TagFilter `json:"tagFilters,omitempty"`
}

type GetResourceSharesRequest struct {
	QueryParams GetResourceSharesQueryParams
	Headers     GetResourceSharesHeaders
	Request     GetResourceSharesRequestBody `request:"mediaType=application/json"`
}

type GetResourceSharesResponse struct {
	ContentType string
	// Success
	GetResourceSharesResponse *shared.GetResourceSharesResponse
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// MalformedArnException
	MalformedArnException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ServerInternalException
	ServerInternalException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// UnknownResourceException
	UnknownResourceException interface{}
}
