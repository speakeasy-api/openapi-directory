"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatePaymentType = exports.CreatePaymentTypeTypeEnum = exports.CreatePaymentTypeMitTransactionSourceEnum = exports.CreatePaymentTypeGatewayOptions = exports.CreatePaymentTypeFinanceInformation = exports.CreatePaymentTypeFinanceInformationTransferredToAccountingEnum = void 0;
var utils_1 = require("../../../internal/utils");
var paymentdebitmemoapplicationcreaterequesttype_1 = require("./paymentdebitmemoapplicationcreaterequesttype");
var paymentinvoiceapplicationcreaterequesttype_1 = require("./paymentinvoiceapplicationcreaterequesttype");
var class_transformer_1 = require("class-transformer");
/**
 * Whether the payment was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
 *
 * @remarks
 *
 */
var CreatePaymentTypeFinanceInformationTransferredToAccountingEnum;
(function (CreatePaymentTypeFinanceInformationTransferredToAccountingEnum) {
    CreatePaymentTypeFinanceInformationTransferredToAccountingEnum["Processing"] = "Processing";
    CreatePaymentTypeFinanceInformationTransferredToAccountingEnum["Yes"] = "Yes";
    CreatePaymentTypeFinanceInformationTransferredToAccountingEnum["No"] = "No";
    CreatePaymentTypeFinanceInformationTransferredToAccountingEnum["Error"] = "Error";
    CreatePaymentTypeFinanceInformationTransferredToAccountingEnum["Ignore"] = "Ignore";
})(CreatePaymentTypeFinanceInformationTransferredToAccountingEnum = exports.CreatePaymentTypeFinanceInformationTransferredToAccountingEnum || (exports.CreatePaymentTypeFinanceInformationTransferredToAccountingEnum = {}));
/**
 * Container for the finance information related to the payment.
 *
 * @remarks
 *
 */
var CreatePaymentTypeFinanceInformation = /** @class */ (function (_super) {
    __extends(CreatePaymentTypeFinanceInformation, _super);
    function CreatePaymentTypeFinanceInformation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCode" }),
        __metadata("design:type", String)
    ], CreatePaymentTypeFinanceInformation.prototype, "bankAccountAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredToAccounting" }),
        __metadata("design:type", String)
    ], CreatePaymentTypeFinanceInformation.prototype, "transferredToAccounting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCode" }),
        __metadata("design:type", String)
    ], CreatePaymentTypeFinanceInformation.prototype, "unappliedPaymentAccountingCode", void 0);
    return CreatePaymentTypeFinanceInformation;
}(utils_1.SpeakeasyBase));
exports.CreatePaymentTypeFinanceInformation = CreatePaymentTypeFinanceInformation;
/**
 * The field used to pass gateway-specific parameters and parameter values.
 *
 * @remarks
 *
 */
var CreatePaymentTypeGatewayOptions = /** @class */ (function (_super) {
    __extends(CreatePaymentTypeGatewayOptions, _super);
    function CreatePaymentTypeGatewayOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], CreatePaymentTypeGatewayOptions.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], CreatePaymentTypeGatewayOptions.prototype, "value", void 0);
    return CreatePaymentTypeGatewayOptions;
}(utils_1.SpeakeasyBase));
exports.CreatePaymentTypeGatewayOptions = CreatePaymentTypeGatewayOptions;
/**
 * Payment transaction source used to differentiate the transaction source in Stored Credential Transaction framework.
 *
 * @remarks
 *   - `C_Unscheduled`: Cardholder-initiated transaction (CIT) that does not occur on scheduled or regularly occurring dates.
 *   - `M_Recurring`: Merchant-initiated transaction (MIT) that occurs at regular intervals.
 *   - `M_Unscheduled`: Merchant-initiated transaction (MIT) that does not occur on scheduled or regularly occurring dates.
 *
 */
var CreatePaymentTypeMitTransactionSourceEnum;
(function (CreatePaymentTypeMitTransactionSourceEnum) {
    CreatePaymentTypeMitTransactionSourceEnum["CUnscheduled"] = "C_Unscheduled";
    CreatePaymentTypeMitTransactionSourceEnum["MRecurring"] = "M_Recurring";
    CreatePaymentTypeMitTransactionSourceEnum["MUnscheduled"] = "M_Unscheduled";
})(CreatePaymentTypeMitTransactionSourceEnum = exports.CreatePaymentTypeMitTransactionSourceEnum || (exports.CreatePaymentTypeMitTransactionSourceEnum = {}));
/**
 * The type of the payment.
 *
 * @remarks
 *
 */
var CreatePaymentTypeTypeEnum;
(function (CreatePaymentTypeTypeEnum) {
    CreatePaymentTypeTypeEnum["External"] = "External";
    CreatePaymentTypeTypeEnum["Electronic"] = "Electronic";
})(CreatePaymentTypeTypeEnum = exports.CreatePaymentTypeTypeEnum || (exports.CreatePaymentTypeTypeEnum = {}));
/**
 * Container for custom fields of a Payment object.
 *
 * @remarks
 *
 */
var CreatePaymentType = /** @class */ (function (_super) {
    __extends(CreatePaymentType, _super);
    function CreatePaymentType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationId__NS" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "integrationIdNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationStatus__NS" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "integrationStatusNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Origin__NS" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "originNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SyncDate__NS" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "syncDateNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Transaction__NS" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "transactionNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountId" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], CreatePaymentType.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authTransactionId" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "authTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: paymentdebitmemoapplicationcreaterequesttype_1.PaymentDebitMemoApplicationCreateRequestType }),
        (0, class_transformer_1.Expose)({ name: "debitMemos" }),
        (0, class_transformer_1.Type)(function () { return paymentdebitmemoapplicationcreaterequesttype_1.PaymentDebitMemoApplicationCreateRequestType; }),
        __metadata("design:type", Array)
    ], CreatePaymentType.prototype, "debitMemos", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "effectiveDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CreatePaymentType.prototype, "effectiveDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "financeInformation" }),
        (0, class_transformer_1.Type)(function () { return CreatePaymentTypeFinanceInformation; }),
        __metadata("design:type", CreatePaymentTypeFinanceInformation)
    ], CreatePaymentType.prototype, "financeInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayId" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "gatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayOptions" }),
        (0, class_transformer_1.Type)(function () { return CreatePaymentTypeGatewayOptions; }),
        __metadata("design:type", CreatePaymentTypeGatewayOptions)
    ], CreatePaymentType.prototype, "gatewayOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayOrderId" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "gatewayOrderId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: paymentinvoiceapplicationcreaterequesttype_1.PaymentInvoiceApplicationCreateRequestType }),
        (0, class_transformer_1.Expose)({ name: "invoices" }),
        (0, class_transformer_1.Type)(function () { return paymentinvoiceapplicationcreaterequesttype_1.PaymentInvoiceApplicationCreateRequestType; }),
        __metadata("design:type", Array)
    ], CreatePaymentType.prototype, "invoices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mitTransactionSource" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "mitTransactionSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodId" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "paymentMethodId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceId" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "referenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptor" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "softDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptorPhone" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "softDescriptorPhone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "standalone" }),
        __metadata("design:type", Boolean)
    ], CreatePaymentType.prototype, "standalone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], CreatePaymentType.prototype, "type", void 0);
    return CreatePaymentType;
}(utils_1.SpeakeasyBase));
exports.CreatePaymentType = CreatePaymentType;
