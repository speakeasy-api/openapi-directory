// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PatchJobInstanceDetailsStateEnum - Current state of instance patch.
type PatchJobInstanceDetailsStateEnum string

const (
	PatchJobInstanceDetailsStateEnumPatchStateUnspecified   PatchJobInstanceDetailsStateEnum = "PATCH_STATE_UNSPECIFIED"
	PatchJobInstanceDetailsStateEnumPending                 PatchJobInstanceDetailsStateEnum = "PENDING"
	PatchJobInstanceDetailsStateEnumInactive                PatchJobInstanceDetailsStateEnum = "INACTIVE"
	PatchJobInstanceDetailsStateEnumNotified                PatchJobInstanceDetailsStateEnum = "NOTIFIED"
	PatchJobInstanceDetailsStateEnumStarted                 PatchJobInstanceDetailsStateEnum = "STARTED"
	PatchJobInstanceDetailsStateEnumDownloadingPatches      PatchJobInstanceDetailsStateEnum = "DOWNLOADING_PATCHES"
	PatchJobInstanceDetailsStateEnumApplyingPatches         PatchJobInstanceDetailsStateEnum = "APPLYING_PATCHES"
	PatchJobInstanceDetailsStateEnumRebooting               PatchJobInstanceDetailsStateEnum = "REBOOTING"
	PatchJobInstanceDetailsStateEnumSucceeded               PatchJobInstanceDetailsStateEnum = "SUCCEEDED"
	PatchJobInstanceDetailsStateEnumSucceededRebootRequired PatchJobInstanceDetailsStateEnum = "SUCCEEDED_REBOOT_REQUIRED"
	PatchJobInstanceDetailsStateEnumFailed                  PatchJobInstanceDetailsStateEnum = "FAILED"
	PatchJobInstanceDetailsStateEnumAcked                   PatchJobInstanceDetailsStateEnum = "ACKED"
	PatchJobInstanceDetailsStateEnumTimedOut                PatchJobInstanceDetailsStateEnum = "TIMED_OUT"
	PatchJobInstanceDetailsStateEnumRunningPrePatchStep     PatchJobInstanceDetailsStateEnum = "RUNNING_PRE_PATCH_STEP"
	PatchJobInstanceDetailsStateEnumRunningPostPatchStep    PatchJobInstanceDetailsStateEnum = "RUNNING_POST_PATCH_STEP"
	PatchJobInstanceDetailsStateEnumNoAgentDetected         PatchJobInstanceDetailsStateEnum = "NO_AGENT_DETECTED"
)

func (e *PatchJobInstanceDetailsStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATCH_STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "NOTIFIED":
		fallthrough
	case "STARTED":
		fallthrough
	case "DOWNLOADING_PATCHES":
		fallthrough
	case "APPLYING_PATCHES":
		fallthrough
	case "REBOOTING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "SUCCEEDED_REBOOT_REQUIRED":
		fallthrough
	case "FAILED":
		fallthrough
	case "ACKED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "RUNNING_PRE_PATCH_STEP":
		fallthrough
	case "RUNNING_POST_PATCH_STEP":
		fallthrough
	case "NO_AGENT_DETECTED":
		*e = PatchJobInstanceDetailsStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchJobInstanceDetailsStateEnum: %s", s)
	}
}

// PatchJobInstanceDetails - Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).
type PatchJobInstanceDetails struct {
	// The number of times the agent that the agent attempts to apply the patch.
	AttemptCount *string `json:"attemptCount,omitempty"`
	// If the patch fails, this field provides the reason.
	FailureReason *string `json:"failureReason,omitempty"`
	// The unique identifier for the instance. This identifier is defined by the server.
	InstanceSystemID *string `json:"instanceSystemId,omitempty"`
	// The instance name in the form `projects/*/zones/*/instances/*`
	Name *string `json:"name,omitempty"`
	// Current state of instance patch.
	State *PatchJobInstanceDetailsStateEnum `json:"state,omitempty"`
}
