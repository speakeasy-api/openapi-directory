/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ProxyActionqueryRequestConf extends SpeakeasyBase {
  /**
   * Defines the batch size of the query result. The range is 1 - 2000 (inclusive). If a value higher than 2000 is submitted, only 2000 results are returned.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "batchSize" })
  batchSize?: number;
}

export class ProxyActionqueryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "conf" })
  @Type(() => ProxyActionqueryRequestConf)
  conf?: ProxyActionqueryRequestConf;

  /**
   * [ZOQL](https://knowledgecenter.zuora.com/DC_Developers/K_Zuora_Object_Query_Language) expression that specifies the object to query, the fields to retrieve, and any filters.
   *
   * @remarks
   *
   * **Note:** When querying one time charges from ProductRatePlanCharge, you need to specify the `ChargeType` value as `One-Time` rather than `OneTime`.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryString" })
  queryString: string;
}
