"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FindMatchingLocationsRequest:
    r"""Request message for Locations.FindMatchingLocations."""
    
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""The preferred language for the matching location (in BCP-47 format)."""  
    max_cache_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxCacheDuration'), 'exclude': lambda f: f is None }})
    r"""Deprecated. This field is ignored for all requests."""  
    num_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numResults'), 'exclude': lambda f: f is None }})
    r"""The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination."""  
    