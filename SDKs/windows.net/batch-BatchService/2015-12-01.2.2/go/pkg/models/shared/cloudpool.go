// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CloudPoolAllocationStateEnum - Gets or sets whether the pool is resizing.
type CloudPoolAllocationStateEnum string

const (
	CloudPoolAllocationStateEnumSteady   CloudPoolAllocationStateEnum = "steady"
	CloudPoolAllocationStateEnumResizing CloudPoolAllocationStateEnum = "resizing"
	CloudPoolAllocationStateEnumStopping CloudPoolAllocationStateEnum = "stopping"
)

func (e *CloudPoolAllocationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "steady":
		fallthrough
	case "resizing":
		fallthrough
	case "stopping":
		*e = CloudPoolAllocationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudPoolAllocationStateEnum: %s", s)
	}
}

// CloudPoolStateEnum - Gets or sets the current state of the pool.
type CloudPoolStateEnum string

const (
	CloudPoolStateEnumActive    CloudPoolStateEnum = "active"
	CloudPoolStateEnumDeleting  CloudPoolStateEnum = "deleting"
	CloudPoolStateEnumUpgrading CloudPoolStateEnum = "upgrading"
)

func (e *CloudPoolStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "deleting":
		fallthrough
	case "upgrading":
		*e = CloudPoolStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudPoolStateEnum: %s", s)
	}
}

// CloudPool - A pool in the Azure Batch service.
type CloudPool struct {
	// Gets or sets whether the pool is resizing.
	AllocationState *CloudPoolAllocationStateEnum `json:"allocationState,omitempty"`
	// Gets or sets the time at which the pool entered its current allocation state.
	AllocationStateTransitionTime *time.Time `json:"allocationStateTransitionTime,omitempty"`
	// Gets or sets the list of application packages to be installed on each compute node in the pool.
	ApplicationPackageReferences []ApplicationPackageReference `json:"applicationPackageReferences,omitempty"`
	// Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
	AutoScaleEvaluationInterval *string `json:"autoScaleEvaluationInterval,omitempty"`
	// Gets or sets a formula for the desired number of compute nodes in the pool.
	AutoScaleFormula *string `json:"autoScaleFormula,omitempty"`
	// The results and errors from an execution of a pool autoscale formula.
	AutoScaleRun *AutoScaleRun `json:"autoScaleRun,omitempty"`
	// Gets or sets the list of certificates to be installed on each compute node in the pool.
	CertificateReferences []CertificateReference `json:"certificateReferences,omitempty"`
	// Gets or sets the creation time of the pool.
	CreationTime *time.Time `json:"creationTime,omitempty"`
	// Gets or sets the number of compute nodes currently in the pool.
	CurrentDedicated *int `json:"currentDedicated,omitempty"`
	// Gets or sets the Azure Guest OS Version currently installed on the virtual machines in the pool. This may differ from TargetOSVersion if the pool state is Upgrading.
	CurrentOSVersion *string `json:"currentOSVersion,omitempty"`
	// Gets or sets the display name for the pool.
	DisplayName *string `json:"displayName,omitempty"`
	// Gets or sets the ETag of the pool.
	ETag *string `json:"eTag,omitempty"`
	// Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
	EnableAutoScale *bool `json:"enableAutoScale,omitempty"`
	// Gets or sets whether the pool permits direct communication between nodes.
	EnableInterNodeCommunication *bool `json:"enableInterNodeCommunication,omitempty"`
	// Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
	ID *string `json:"id,omitempty"`
	// Gets or sets the last modified time of the pool.
	LastModified *time.Time `json:"lastModified,omitempty"`
	// Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
	MaxTasksPerNode *int `json:"maxTasksPerNode,omitempty"`
	// Gets or sets a list of name-value pairs associated with the pool as metadata.
	Metadata []MetadataItem `json:"metadata,omitempty"`
	// Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
	OsFamily *string `json:"osFamily,omitempty"`
	// An error that occurred when resizing a pool.
	ResizeError *ResizeError `json:"resizeError,omitempty"`
	// Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
	ResizeTimeout *string `json:"resizeTimeout,omitempty"`
	// A task defined on a pool and run by compute nodes when they join the pool.
	StartTask *StartTask `json:"startTask,omitempty"`
	// Gets or sets the current state of the pool.
	State *CloudPoolStateEnum `json:"state,omitempty"`
	// Gets or sets the time at which the pool entered its current state.
	StateTransitionTime *time.Time `json:"stateTransitionTime,omitempty"`
	// Contains utilization and resource usage statistics for the lifetime of a pool.
	Stats *PoolStatistics `json:"stats,omitempty"`
	// Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
	TargetDedicated *int `json:"targetDedicated,omitempty"`
	// Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
	TargetOSVersion *string `json:"targetOSVersion,omitempty"`
	// Specifies how tasks should be distributed across compute nodes.
	TaskSchedulingPolicy *TaskSchedulingPolicy `json:"taskSchedulingPolicy,omitempty"`
	// Gets or sets the URL of the pool.
	URL *string `json:"url,omitempty"`
	// Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
	VMSize *string `json:"vmSize,omitempty"`
}
