/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The request to change the source server migration lifecycle state.
 */
export class ChangeServerLifeCycleStateRequestBodyLifeCycle extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: shared.ChangeServerLifeCycleStateSourceServerLifecycleStateEnum;
}

export class ChangeServerLifeCycleStateRequestBody extends SpeakeasyBase {
  /**
   * The request to change the source server migration lifecycle state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lifeCycle" })
  @Type(() => ChangeServerLifeCycleStateRequestBodyLifeCycle)
  lifeCycle: ChangeServerLifeCycleStateRequestBodyLifeCycle;

  /**
   * The request to change the source server migration lifecycle state by source server ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceServerID" })
  sourceServerID: string;
}

export class ChangeServerLifeCycleStateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ChangeServerLifeCycleStateRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ChangeServerLifeCycleStateResponse extends SpeakeasyBase {
  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  sourceServer?: shared.SourceServer;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * UninitializedAccountException
   */
  @SpeakeasyMetadata()
  uninitializedAccountException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
