// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

type SecretScanningLocationDetailsType string

const (
	SecretScanningLocationDetailsTypeSecretScanningLocationCommit SecretScanningLocationDetailsType = "secret-scanning-location-commit"
)

type SecretScanningLocationDetails struct {
	SecretScanningLocationCommit *SecretScanningLocationCommit

	Type SecretScanningLocationDetailsType
}

func CreateSecretScanningLocationDetailsSecretScanningLocationCommit(secretScanningLocationCommit SecretScanningLocationCommit) SecretScanningLocationDetails {
	typ := SecretScanningLocationDetailsTypeSecretScanningLocationCommit

	return SecretScanningLocationDetails{
		SecretScanningLocationCommit: &secretScanningLocationCommit,
		Type:                         typ,
	}
}

func (u *SecretScanningLocationDetails) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	secretScanningLocationCommit := new(SecretScanningLocationCommit)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&secretScanningLocationCommit); err == nil {
		u.SecretScanningLocationCommit = secretScanningLocationCommit
		u.Type = SecretScanningLocationDetailsTypeSecretScanningLocationCommit
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SecretScanningLocationDetails) MarshalJSON() ([]byte, error) {
	if u.SecretScanningLocationCommit != nil {
		return json.Marshal(u.SecretScanningLocationCommit)
	}

	return nil, nil
}

// SecretScanningLocationTypeEnum - The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
type SecretScanningLocationTypeEnum string

const (
	SecretScanningLocationTypeEnumCommit SecretScanningLocationTypeEnum = "commit"
)

func (e SecretScanningLocationTypeEnum) ToPointer() *SecretScanningLocationTypeEnum {
	return &e
}

func (e *SecretScanningLocationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "commit":
		*e = SecretScanningLocationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecretScanningLocationTypeEnum: %v", v)
	}
}

type SecretScanningLocation struct {
	Details SecretScanningLocationDetails `json:"details"`
	// The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
	Type SecretScanningLocationTypeEnum `json:"type"`
}
