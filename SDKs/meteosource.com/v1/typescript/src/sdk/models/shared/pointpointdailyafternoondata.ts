/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PointPointDailyAfternoonCloudCoverData } from "./pointpointdailyafternooncloudcoverdata";
import { PointPointDailyAfternoonPrecipitationData } from "./pointpointdailyafternoonprecipitationdata";
import { PointPointDailyAfternoonProbData } from "./pointpointdailyafternoonprobdata";
import { PointPointDailyAfternoonWindData } from "./pointpointdailyafternoonwinddata";
import { Expose, Type } from "class-transformer";

export class PointPointDailyAfternoonData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cloud_cover" })
  @Type(() => PointPointDailyAfternoonCloudCoverData)
  cloudCover: PointPointDailyAfternoonCloudCoverData;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dew_point" })
  dewPoint?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feels_like" })
  feelsLike?: number;

  /**
   * Relative humidity. (afternoon avg)
   *
   * @remarks
   * Unit: \%
   */
  @SpeakeasyMetadata()
  @Expose({ name: "humidity" })
  humidity?: number;

  /**
   * Afternoon umeric identifier of the weather icon. The following values can appear:
   *
   * @remarks
   *
   * * 1 - Not available
   * * 2 - Sunny
   * * 3 - Mostly sunny
   * * 4 - Partly sunny
   * * 5 - Mostly cloudy
   * * 6 - Cloudy
   * * 7 - Overcast
   * * 8 - Overcast with low clouds
   * * 9 - Fog
   * * 10 - Light rain
   * * 11 - Rain
   * * 12 - Possible rain
   * * 13 - Rain shower
   * * 14 - Thunderstorm
   * * 15 - Local thunderstorms
   * * 16 - Light snow
   * * 17 - Snow
   * * 18 - Possible snow
   * * 19 - Snow shower
   * * 20 - Rain and snow
   * * 21 - Possible rain and snow
   * * 22 - Rain and snow
   * * 23 - Freezing rain
   * * 24 - Possible freezing rain
   * * 25 - Hail
   * * 26 - Clear (night)
   * * 27 - Mostly clear (night)
   * * 28 - Partly clear (night)
   * * 29 - Mostly cloudy (night)
   * * 30 - Cloudy (night)
   * * 31 - Overcast with low clouds (night)
   * * 32 - Rain shower (night)
   * * 33 - Local thunderstorms (night)
   * * 34 - Snow shower (night)
   * * 35 - Rain and snow (night)
   * * 36 - Possible freezing rain (night)
   *
   * Unit: icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon" })
  icon?: number;

  /**
   * Total column of ozone. (afternoon avg)
   *
   * @remarks
   * Unit: Dobson
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ozone" })
  ozone?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "precipitation" })
  @Type(() => PointPointDailyAfternoonPrecipitationData)
  precipitation: PointPointDailyAfternoonPrecipitationData;

  /**
   * Atmospheric pressure at mean sea level. (afternoon avg)
   *
   * @remarks
   * Units: metric = hPa, us = Hg, uk = hPa, ca = kPa
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pressure" })
  pressure?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "probability" })
  @Type(() => PointPointDailyAfternoonProbData)
  probability: PointPointDailyAfternoonProbData;

  /**
   * Snow depth. (afternoon avg)
   *
   * @remarks
   * Units: metric = cm, us = inch, uk = cm, ca = cm
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snow_depth" })
  snowDepth?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "soil_temperature" })
  soilTemperature?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "surface_temperature" })
  surfaceTemperature?: number;

  /**
   * Temperature 2 metres above ground. (afternoon avg)
   *
   * @remarks
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "temperature" })
  temperature?: number;

  /**
   * Visibility. (afternoon avg)
   *
   * @remarks
   * Units: metric = km, us = mi, uk = mi, ca = km
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: number;

  /**
   * Afternoon day string identifier of the weather icon, e.g. `light_rain`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weather" })
  weather?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wind" })
  @Type(() => PointPointDailyAfternoonWindData)
  wind: PointPointDailyAfternoonWindData;

  /**
   * Temperature 2 metres above ground. (afternoon avg)
   *
   * @remarks
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wind_chill" })
  windChill?: number;
}
