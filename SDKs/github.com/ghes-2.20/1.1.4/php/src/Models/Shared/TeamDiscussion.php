<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TeamDiscussion - A team discussion is a persistent record of a free-form conversation within a team.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TeamDiscussion
{
    /**
     * Simple User
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $author;
    
    /**
     * The main text of the discussion.
     * 
     * @var string $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $body;
    
	#[\JMS\Serializer\Annotation\SerializedName('body_html')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bodyHtml;
    
    /**
     * The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
     * 
     * @var string $bodyVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('body_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bodyVersion;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $commentsCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_edited_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $lastEditedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * The unique sequence number of a team discussion.
     * 
     * @var int $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $number;
    
    /**
     * Whether or not this discussion should be pinned for easy retrieval.
     * 
     * @var bool $pinned
     */
	#[\JMS\Serializer\Annotation\SerializedName('pinned')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $pinned;
    
    /**
     * Whether or not this discussion should be restricted to team members and organization administrators.
     * 
     * @var bool $private
     */
	#[\JMS\Serializer\Annotation\SerializedName('private')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $private;
    
	#[\JMS\Serializer\Annotation\SerializedName('reactions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReactionRollup')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReactionRollup $reactions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('team_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $teamUrl;
    
    /**
     * The title of the discussion.
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->author = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->body = "";
		$this->bodyHtml = "";
		$this->bodyVersion = "";
		$this->commentsCount = 0;
		$this->commentsUrl = "";
		$this->createdAt = new \DateTime();
		$this->htmlUrl = "";
		$this->lastEditedAt = new \DateTime();
		$this->nodeId = "";
		$this->number = 0;
		$this->pinned = false;
		$this->private = false;
		$this->reactions = null;
		$this->teamUrl = "";
		$this->title = "";
		$this->updatedAt = new \DateTime();
		$this->url = "";
	}
}
