// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusEnum string

const (
	StatusEnumStartExpired             StatusEnum = "startExpired"
	StatusEnumNotStarted               StatusEnum = "notStarted"
	StatusEnumStarted                  StatusEnum = "started"
	StatusEnumStarting                 StatusEnum = "starting"
	StatusEnumStopped                  StatusEnum = "stopped"
	StatusEnumStopping                 StatusEnum = "stopping"
	StatusEnumSettingUpInstance        StatusEnum = "settingUpInstance"
	StatusEnumFailedInstanceCreation   StatusEnum = "failedInstanceCreation"
	StatusEnumFailedStartingGuiSession StatusEnum = "failedStartingGUISession"
	StatusEnumFailedStoppingGuiSession StatusEnum = "failedStoppingGUISession"
)

func (e *StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "startExpired":
		fallthrough
	case "notStarted":
		fallthrough
	case "started":
		fallthrough
	case "starting":
		fallthrough
	case "stopped":
		fallthrough
	case "stopping":
		fallthrough
	case "settingUpInstance":
		fallthrough
	case "failedInstanceCreation":
		fallthrough
	case "failedStartingGUISession":
		fallthrough
	case "failedStoppingGUISession":
		*e = StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusEnum: %s", s)
	}
}
