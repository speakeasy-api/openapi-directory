// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeAddressTransfersActionEnum
type GETDescribeAddressTransfersActionEnum string

const (
	GETDescribeAddressTransfersActionEnumDescribeAddressTransfers GETDescribeAddressTransfersActionEnum = "DescribeAddressTransfers"
)

func (e GETDescribeAddressTransfersActionEnum) ToPointer() *GETDescribeAddressTransfersActionEnum {
	return &e
}

func (e *GETDescribeAddressTransfersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeAddressTransfers":
		*e = GETDescribeAddressTransfersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAddressTransfersActionEnum: %v", v)
	}
}

// GETDescribeAddressTransfersVersionEnum
type GETDescribeAddressTransfersVersionEnum string

const (
	GETDescribeAddressTransfersVersionEnumTwoThousandAndSixteen1115 GETDescribeAddressTransfersVersionEnum = "2016-11-15"
)

func (e GETDescribeAddressTransfersVersionEnum) ToPointer() *GETDescribeAddressTransfersVersionEnum {
	return &e
}

func (e *GETDescribeAddressTransfersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDescribeAddressTransfersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAddressTransfersVersionEnum: %v", v)
	}
}

type GETDescribeAddressTransfersRequest struct {
	Action GETDescribeAddressTransfersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The allocation IDs of Elastic IP addresses.
	AllocationID []string `queryParam:"style=form,explode=true,name=AllocationId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The maximum number of address transfers to return in one page of results.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// Specify the pagination token from a previous request to retrieve the next page of results.
	NextToken         *string                                `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETDescribeAddressTransfersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeAddressTransfersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
