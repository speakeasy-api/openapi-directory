"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import block as shared_block
from ..shared import expensefield as shared_expensefield
from ..shared import lineitemgroup as shared_lineitemgroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExpenseDocument:
    r"""The structure holding all the information returned by AnalyzeExpense"""
    
    blocks: Optional[list[shared_block.Block]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Blocks'), 'exclude': lambda f: f is None }})  
    expense_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExpenseIndex'), 'exclude': lambda f: f is None }})  
    line_item_groups: Optional[list[shared_lineitemgroup.LineItemGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LineItemGroups'), 'exclude': lambda f: f is None }})  
    summary_fields: Optional[list[shared_expensefield.ExpenseField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SummaryFields'), 'exclude': lambda f: f is None }})  
    