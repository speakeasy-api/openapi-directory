/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OwnerReference - OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
 */
public class OwnerReference {
    /**
     * API version of the referent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiVersion")
    public String apiVersion;

    public OwnerReference withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }
    
    /**
     * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockOwnerDeletion")
    public Boolean blockOwnerDeletion;

    public OwnerReference withBlockOwnerDeletion(Boolean blockOwnerDeletion) {
        this.blockOwnerDeletion = blockOwnerDeletion;
        return this;
    }
    
    /**
     * If true, this reference points to the managing controller. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controller")
    public Boolean controller;

    public OwnerReference withController(Boolean controller) {
        this.controller = controller;
        return this;
    }
    
    /**
     * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public OwnerReference withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/user-guide/identifiers#names
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public OwnerReference withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * UID of the referent. More info: https://kubernetes.io/docs/user-guide/identifiers#uids
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public OwnerReference withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    public OwnerReference(){}
}
