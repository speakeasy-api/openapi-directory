"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalculateRouteResponse = exports.CalculateRouteRequest = exports.CalculateRouteRequestBody = exports.CalculateRouteRequestBodyTruckModeOptions = exports.CalculateRouteRequestBodyTravelModeEnum = exports.CalculateRouteRequestBodyDistanceUnitEnum = exports.CalculateRouteRequestBodyCarModeOptions = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * Contains details about additional route preferences for requests that specify <code>TravelMode</code> as <code>Car</code>.
 */
var CalculateRouteRequestBodyCarModeOptions = /** @class */ (function (_super) {
    __extends(CalculateRouteRequestBodyCarModeOptions, _super);
    function CalculateRouteRequestBodyCarModeOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AvoidFerries" }),
        __metadata("design:type", Boolean)
    ], CalculateRouteRequestBodyCarModeOptions.prototype, "avoidFerries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AvoidTolls" }),
        __metadata("design:type", Boolean)
    ], CalculateRouteRequestBodyCarModeOptions.prototype, "avoidTolls", void 0);
    return CalculateRouteRequestBodyCarModeOptions;
}(utils_1.SpeakeasyBase));
exports.CalculateRouteRequestBodyCarModeOptions = CalculateRouteRequestBodyCarModeOptions;
/**
 * <p>Set the unit system to specify the distance.</p> <p>Default Value: <code>Kilometers</code> </p>
 */
var CalculateRouteRequestBodyDistanceUnitEnum;
(function (CalculateRouteRequestBodyDistanceUnitEnum) {
    CalculateRouteRequestBodyDistanceUnitEnum["Kilometers"] = "Kilometers";
    CalculateRouteRequestBodyDistanceUnitEnum["Miles"] = "Miles";
})(CalculateRouteRequestBodyDistanceUnitEnum = exports.CalculateRouteRequestBodyDistanceUnitEnum || (exports.CalculateRouteRequestBodyDistanceUnitEnum = {}));
/**
 * <p>Specifies the mode of transport when calculating a route. Used in estimating the speed of travel and road compatibility. You can choose <code>Car</code>, <code>Truck</code>, <code>Walking</code>, <code>Bicycle</code> or <code>Motorcycle</code> as options for the <code>TravelMode</code>.</p> <note> <p> <code>Bicycle</code> and <code>Motorcycle</code> are only valid when using Grab as a data provider, and only within Southeast Asia.</p> <p> <code>Truck</code> is not available for Grab.</p> <p>For more details on the using Grab for routing, including areas of coverage, see <a href="https://docs.aws.amazon.com/location/latest/developerguide/grab.html">GrabMaps</a> in the <i>Amazon Location Service Developer Guide</i>.</p> </note> <p>The <code>TravelMode</code> you specify also determines how you specify route preferences: </p> <ul> <li> <p>If traveling by <code>Car</code> use the <code>CarModeOptions</code> parameter.</p> </li> <li> <p>If traveling by <code>Truck</code> use the <code>TruckModeOptions</code> parameter.</p> </li> </ul> <p>Default Value: <code>Car</code> </p>
 */
var CalculateRouteRequestBodyTravelModeEnum;
(function (CalculateRouteRequestBodyTravelModeEnum) {
    CalculateRouteRequestBodyTravelModeEnum["Car"] = "Car";
    CalculateRouteRequestBodyTravelModeEnum["Truck"] = "Truck";
    CalculateRouteRequestBodyTravelModeEnum["Walking"] = "Walking";
    CalculateRouteRequestBodyTravelModeEnum["Bicycle"] = "Bicycle";
    CalculateRouteRequestBodyTravelModeEnum["Motorcycle"] = "Motorcycle";
})(CalculateRouteRequestBodyTravelModeEnum = exports.CalculateRouteRequestBodyTravelModeEnum || (exports.CalculateRouteRequestBodyTravelModeEnum = {}));
/**
 * Contains details about additional route preferences for requests that specify <code>TravelMode</code> as <code>Truck</code>.
 */
var CalculateRouteRequestBodyTruckModeOptions = /** @class */ (function (_super) {
    __extends(CalculateRouteRequestBodyTruckModeOptions, _super);
    function CalculateRouteRequestBodyTruckModeOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AvoidFerries" }),
        __metadata("design:type", Boolean)
    ], CalculateRouteRequestBodyTruckModeOptions.prototype, "avoidFerries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AvoidTolls" }),
        __metadata("design:type", Boolean)
    ], CalculateRouteRequestBodyTruckModeOptions.prototype, "avoidTolls", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Dimensions" }),
        (0, class_transformer_1.Type)(function () { return shared.TruckDimensions; }),
        __metadata("design:type", shared.TruckDimensions)
    ], CalculateRouteRequestBodyTruckModeOptions.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Weight" }),
        (0, class_transformer_1.Type)(function () { return shared.TruckWeight; }),
        __metadata("design:type", shared.TruckWeight)
    ], CalculateRouteRequestBodyTruckModeOptions.prototype, "weight", void 0);
    return CalculateRouteRequestBodyTruckModeOptions;
}(utils_1.SpeakeasyBase));
exports.CalculateRouteRequestBodyTruckModeOptions = CalculateRouteRequestBodyTruckModeOptions;
var CalculateRouteRequestBody = /** @class */ (function (_super) {
    __extends(CalculateRouteRequestBody, _super);
    function CalculateRouteRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CarModeOptions" }),
        (0, class_transformer_1.Type)(function () { return CalculateRouteRequestBodyCarModeOptions; }),
        __metadata("design:type", CalculateRouteRequestBodyCarModeOptions)
    ], CalculateRouteRequestBody.prototype, "carModeOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DepartNow" }),
        __metadata("design:type", Boolean)
    ], CalculateRouteRequestBody.prototype, "departNow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DeparturePosition" }),
        __metadata("design:type", Array)
    ], CalculateRouteRequestBody.prototype, "departurePosition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DepartureTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CalculateRouteRequestBody.prototype, "departureTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DestinationPosition" }),
        __metadata("design:type", Array)
    ], CalculateRouteRequestBody.prototype, "destinationPosition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DistanceUnit" }),
        __metadata("design:type", String)
    ], CalculateRouteRequestBody.prototype, "distanceUnit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IncludeLegGeometry" }),
        __metadata("design:type", Boolean)
    ], CalculateRouteRequestBody.prototype, "includeLegGeometry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TravelMode" }),
        __metadata("design:type", String)
    ], CalculateRouteRequestBody.prototype, "travelMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TruckModeOptions" }),
        (0, class_transformer_1.Type)(function () { return CalculateRouteRequestBodyTruckModeOptions; }),
        __metadata("design:type", CalculateRouteRequestBodyTruckModeOptions)
    ], CalculateRouteRequestBody.prototype, "truckModeOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "WaypointPositions" }),
        __metadata("design:type", Array)
    ], CalculateRouteRequestBody.prototype, "waypointPositions", void 0);
    return CalculateRouteRequestBody;
}(utils_1.SpeakeasyBase));
exports.CalculateRouteRequestBody = CalculateRouteRequestBody;
var CalculateRouteRequest = /** @class */ (function (_super) {
    __extends(CalculateRouteRequest, _super);
    function CalculateRouteRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=CalculatorName",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "calculatorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", CalculateRouteRequestBody)
    ], CalculateRouteRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], CalculateRouteRequest.prototype, "xAmzSignedHeaders", void 0);
    return CalculateRouteRequest;
}(utils_1.SpeakeasyBase));
exports.CalculateRouteRequest = CalculateRouteRequest;
var CalculateRouteResponse = /** @class */ (function (_super) {
    __extends(CalculateRouteResponse, _super);
    function CalculateRouteResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CalculateRouteResponse.prototype, "accessDeniedException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.CalculateRouteResponse)
    ], CalculateRouteResponse.prototype, "calculateRouteResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CalculateRouteResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CalculateRouteResponse.prototype, "internalServerException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CalculateRouteResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CalculateRouteResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CalculateRouteResponse.prototype, "resourceNotFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CalculateRouteResponse.prototype, "throttlingException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CalculateRouteResponse.prototype, "validationException", void 0);
    return CalculateRouteResponse;
}(utils_1.SpeakeasyBase));
exports.CalculateRouteResponse = CalculateRouteResponse;
