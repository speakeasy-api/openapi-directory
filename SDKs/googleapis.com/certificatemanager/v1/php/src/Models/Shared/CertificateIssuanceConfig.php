<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CertificateIssuanceConfig - CertificateIssuanceConfig specifies how to issue and manage a certificate.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CertificateIssuanceConfig
{
    /**
     * The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateAuthorityConfig $certificateAuthorityConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateAuthorityConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CertificateAuthorityConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateAuthorityConfig $certificateAuthorityConfig = null;
    
    /**
     * Output only. The creation timestamp of a CertificateIssuanceConfig.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * One or more paragraphs of text description of a CertificateIssuanceConfig.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Required. The key algorithm to use when generating the private key.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateIssuanceConfigKeyAlgorithmEnum $keyAlgorithm
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyAlgorithm')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateIssuanceConfigKeyAlgorithmEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateIssuanceConfigKeyAlgorithmEnum $keyAlgorithm = null;
    
    /**
     * Set of labels associated with a CertificateIssuanceConfig.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Required. Workload certificate lifetime requested.
     * 
     * @var ?string $lifetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lifetime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lifetime = null;
    
    /**
     * A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/* /locations/* /certificateIssuanceConfigs/*`.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.
     * 
     * @var ?int $rotationWindowPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('rotationWindowPercentage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rotationWindowPercentage = null;
    
    /**
     * Output only. The last update timestamp of a CertificateIssuanceConfig.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
	public function __construct()
	{
		$this->certificateAuthorityConfig = null;
		$this->createTime = null;
		$this->description = null;
		$this->keyAlgorithm = null;
		$this->labels = null;
		$this->lifetime = null;
		$this->name = null;
		$this->rotationWindowPercentage = null;
		$this->updateTime = null;
	}
}
