// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOrganizationNetworksTagsFilterTypeEnum - An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
type GetOrganizationNetworksTagsFilterTypeEnum string

const (
	GetOrganizationNetworksTagsFilterTypeEnumWithAllTags GetOrganizationNetworksTagsFilterTypeEnum = "withAllTags"
	GetOrganizationNetworksTagsFilterTypeEnumWithAnyTags GetOrganizationNetworksTagsFilterTypeEnum = "withAnyTags"
)

func (e GetOrganizationNetworksTagsFilterTypeEnum) ToPointer() *GetOrganizationNetworksTagsFilterTypeEnum {
	return &e
}

func (e *GetOrganizationNetworksTagsFilterTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "withAllTags":
		fallthrough
	case "withAnyTags":
		*e = GetOrganizationNetworksTagsFilterTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationNetworksTagsFilterTypeEnum: %v", v)
	}
}

type GetOrganizationNetworksRequest struct {
	// An optional parameter that is the ID of a config template. Will return all networks bound to that template.
	ConfigTemplateID *string `queryParam:"style=form,explode=true,name=configTemplateId"`
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	// An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
	IsBoundToConfigTemplate *bool  `queryParam:"style=form,explode=true,name=isBoundToConfigTemplate"`
	OrganizationID          string `pathParam:"style=simple,explode=false,name=organizationId"`
	// The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
	// An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
	Tags []string `queryParam:"style=form,explode=false,name=tags"`
	// An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	TagsFilterType *GetOrganizationNetworksTagsFilterTypeEnum `queryParam:"style=form,explode=true,name=tagsFilterType"`
}

type GetOrganizationNetworks200ApplicationJSON struct {
	// Enrollment string for the network
	EnrollmentString *string `json:"enrollmentString,omitempty"`
	// Network ID
	ID *string `json:"id,omitempty"`
	// If the network is bound to a config template
	IsBoundToConfigTemplate *bool `json:"isBoundToConfigTemplate,omitempty"`
	// Network name
	Name *string `json:"name,omitempty"`
	// Notes for the network
	Notes *string `json:"notes,omitempty"`
	// Organization ID
	OrganizationID *string `json:"organizationId,omitempty"`
	// List of the product types that the network supports
	ProductTypes []string `json:"productTypes,omitempty"`
	// Network tags
	Tags []string `json:"tags,omitempty"`
	// Timezone of the network
	TimeZone *string `json:"timeZone,omitempty"`
	// URL to the network Dashboard UI
	URL *string `json:"url,omitempty"`
}

type GetOrganizationNetworksResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationNetworks200ApplicationJSONObjects []GetOrganizationNetworks200ApplicationJSON
}
