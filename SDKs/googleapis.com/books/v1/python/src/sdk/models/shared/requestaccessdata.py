"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import concurrentaccessrestriction as shared_concurrentaccessrestriction
from ..shared import downloadaccessrestriction as shared_downloadaccessrestriction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RequestAccessData:
    r"""Successful response"""
    
    concurrent_access: Optional[shared_concurrentaccessrestriction.ConcurrentAccessRestriction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentAccess'), 'exclude': lambda f: f is None }})  
    download_access: Optional[shared_downloadaccessrestriction.DownloadAccessRestriction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downloadAccess'), 'exclude': lambda f: f is None }})  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Resource type."""  
    