"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayslipSummaryInput:
    
    deductions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Deductions'), 'exclude': lambda f: f is None }})
    r"""The Deductions for the Payslip"""  
    employee_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeGroup'), 'exclude': lambda f: f is None }})
    r"""Employee group name"""  
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for an employee"""  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstName'), 'exclude': lambda f: f is None }})
    r"""First name of employee"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastName'), 'exclude': lambda f: f is None }})
    r"""Last name of employee"""  
    net_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetPay'), 'exclude': lambda f: f is None }})
    r"""The NetPay for the Payslip"""  
    payslip_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PayslipID'), 'exclude': lambda f: f is None }})
    r"""Xero identifier for the payslip"""  
    reimbursements: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reimbursements'), 'exclude': lambda f: f is None }})
    r"""The Reimbursements for the Payslip"""  
    super: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Super'), 'exclude': lambda f: f is None }})
    r"""The Super for the Payslip"""  
    tax: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tax'), 'exclude': lambda f: f is None }})
    r"""The Tax for the Payslip"""  
    wages: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Wages'), 'exclude': lambda f: f is None }})
    r"""The Wages for the Payslip"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayslipSummary:
    
    deductions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Deductions'), 'exclude': lambda f: f is None }})
    r"""The Deductions for the Payslip"""  
    employee_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeGroup'), 'exclude': lambda f: f is None }})
    r"""Employee group name"""  
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for an employee"""  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstName'), 'exclude': lambda f: f is None }})
    r"""First name of employee"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastName'), 'exclude': lambda f: f is None }})
    r"""Last name of employee"""  
    net_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetPay'), 'exclude': lambda f: f is None }})
    r"""The NetPay for the Payslip"""  
    payslip_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PayslipID'), 'exclude': lambda f: f is None }})
    r"""Xero identifier for the payslip"""  
    reimbursements: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reimbursements'), 'exclude': lambda f: f is None }})
    r"""The Reimbursements for the Payslip"""  
    super: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Super'), 'exclude': lambda f: f is None }})
    r"""The Super for the Payslip"""  
    tax: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tax'), 'exclude': lambda f: f is None }})
    r"""The Tax for the Payslip"""  
    updated_date_utc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDateUTC'), 'exclude': lambda f: f is None }})
    r"""Last modified timestamp"""  
    wages: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Wages'), 'exclude': lambda f: f is None }})
    r"""The Wages for the Payslip"""  
    