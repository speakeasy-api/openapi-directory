<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateResponsePlanRequestBody
{
    /**
     * The actions that this response plan takes at the beginning of an incident.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Action> $actions
     */
	#[\JMS\Serializer\Annotation\SerializedName('actions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Action>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $actions = null;
    
    /**
     * The Amazon Resource Name (ARN) of the response plan.
     * 
     * @var string $arn
     */
	#[\JMS\Serializer\Annotation\SerializedName('arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $arn;
    
    /**
     * The Chatbot chat channel used for collaboration during an incident.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateResponsePlanRequestBodyChatChannel $chatChannel
     */
	#[\JMS\Serializer\Annotation\SerializedName('chatChannel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateResponsePlanRequestBodyChatChannel')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateResponsePlanRequestBodyChatChannel $chatChannel = null;
    
    /**
     * A token ensuring that the operation is called only once with the specified details.
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * The long format name of the response plan. The display name can't contain spaces.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
     * 
     * @var ?array<string> $engagements
     */
	#[\JMS\Serializer\Annotation\SerializedName('engagements')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $engagements = null;
    
    /**
     * The string Incident Manager uses to prevent duplicate incidents from being created by the same incident in the same account.
     * 
     * @var ?string $incidentTemplateDedupeString
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentTemplateDedupeString')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incidentTemplateDedupeString = null;
    
    /**
     * <p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>5</code> - Severe impact</p> </li> <li> <p> <code>4</code> - High impact</p> </li> <li> <p> <code>3</code> - Medium impact</p> </li> <li> <p> <code>2</code> - Low impact</p> </li> <li> <p> <code>1</code> - No impact</p> </li> </ul>
     * 
     * @var ?int $incidentTemplateImpact
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentTemplateImpact')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $incidentTemplateImpact = null;
    
    /**
     * The Amazon SNS targets that are notified when updates are made to an incident.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NotificationTargetItem> $incidentTemplateNotificationTargets
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentTemplateNotificationTargets')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NotificationTargetItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $incidentTemplateNotificationTargets = null;
    
    /**
     * A brief summary of the incident. This typically contains what has happened, what's currently happening, and next steps.
     * 
     * @var ?string $incidentTemplateSummary
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentTemplateSummary')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incidentTemplateSummary = null;
    
    /**
     * Tags to assign to the template. When the <code>StartIncident</code> API action is called, Incident Manager assigns the tags specified in the template to the incident. To call this action, you must also have permission to call the <code>TagResource</code> API action for the incident record resource.
     * 
     * @var ?array<string, string> $incidentTemplateTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentTemplateTags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $incidentTemplateTags = null;
    
    /**
     * The short format name of the incident. The title can't contain spaces.
     * 
     * @var ?string $incidentTemplateTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentTemplateTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incidentTemplateTitle = null;
    
    /**
     * Information about third-party services integrated into the response plan.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Integration> $integrations
     */
	#[\JMS\Serializer\Annotation\SerializedName('integrations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Integration>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $integrations = null;
    
	public function __construct()
	{
		$this->actions = null;
		$this->arn = "";
		$this->chatChannel = null;
		$this->clientToken = null;
		$this->displayName = null;
		$this->engagements = null;
		$this->incidentTemplateDedupeString = null;
		$this->incidentTemplateImpact = null;
		$this->incidentTemplateNotificationTargets = null;
		$this->incidentTemplateSummary = null;
		$this->incidentTemplateTags = null;
		$this->incidentTemplateTitle = null;
		$this->integrations = null;
	}
}
