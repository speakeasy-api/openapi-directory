"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Webhook = exports.WebhookSslVersionEnum = exports.WebhookNetworkTypeEnum = exports.WebhookFilterMerchantAccountTypeEnum = exports.WebhookCommunicationFormatEnum = void 0;
var utils_1 = require("../../../internal/utils");
var additionalsettingsresponse_1 = require("./additionalsettingsresponse");
var webhooklinks_1 = require("./webhooklinks");
var class_transformer_1 = require("class-transformer");
/**
 * Format or protocol for receiving webhooks. Possible values:
 *
 * @remarks
 * * **soap**
 * * **http**
 * * **json**
 */
var WebhookCommunicationFormatEnum;
(function (WebhookCommunicationFormatEnum) {
    WebhookCommunicationFormatEnum["Http"] = "http";
    WebhookCommunicationFormatEnum["Json"] = "json";
    WebhookCommunicationFormatEnum["Soap"] = "soap";
})(WebhookCommunicationFormatEnum = exports.WebhookCommunicationFormatEnum || (exports.WebhookCommunicationFormatEnum = {}));
/**
 * Shows how merchant accounts are included in company-level webhooks. Possible values:
 *
 * @remarks
 * * **includeAccounts**
 * * **excludeAccounts**
 * * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
 */
var WebhookFilterMerchantAccountTypeEnum;
(function (WebhookFilterMerchantAccountTypeEnum) {
    WebhookFilterMerchantAccountTypeEnum["AllAccounts"] = "allAccounts";
    WebhookFilterMerchantAccountTypeEnum["ExcludeAccounts"] = "excludeAccounts";
    WebhookFilterMerchantAccountTypeEnum["IncludeAccounts"] = "includeAccounts";
})(WebhookFilterMerchantAccountTypeEnum = exports.WebhookFilterMerchantAccountTypeEnum || (exports.WebhookFilterMerchantAccountTypeEnum = {}));
/**
 * Network type for Terminal API details webhooks.
 */
var WebhookNetworkTypeEnum;
(function (WebhookNetworkTypeEnum) {
    WebhookNetworkTypeEnum["Local"] = "LOCAL";
    WebhookNetworkTypeEnum["Public"] = "PUBLIC";
})(WebhookNetworkTypeEnum = exports.WebhookNetworkTypeEnum || (exports.WebhookNetworkTypeEnum = {}));
/**
 * SSL version to access the public webhook URL specified in the `url` field. Possible values:
 *
 * @remarks
 * * **TLSv1.3**
 * * **TLSv1.2**
 * * **HTTP** - Only allowed on Test environment.
 *
 * If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
 */
var WebhookSslVersionEnum;
(function (WebhookSslVersionEnum) {
    WebhookSslVersionEnum["Http"] = "HTTP";
    WebhookSslVersionEnum["Ssl"] = "SSL";
    WebhookSslVersionEnum["SSLv3"] = "SSLv3";
    WebhookSslVersionEnum["Tls"] = "TLS";
    WebhookSslVersionEnum["TLSv1"] = "TLSv1";
    WebhookSslVersionEnum["TLSv11"] = "TLSv1.1";
    WebhookSslVersionEnum["TLSv12"] = "TLSv1.2";
    WebhookSslVersionEnum["TLSv13"] = "TLSv1.3";
})(WebhookSslVersionEnum = exports.WebhookSslVersionEnum || (exports.WebhookSslVersionEnum = {}));
/**
 * OK - the request has succeeded.
 */
var Webhook = /** @class */ (function (_super) {
    __extends(Webhook, _super);
    function Webhook() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "_links" }),
        (0, class_transformer_1.Type)(function () { return webhooklinks_1.WebhookLinks; }),
        __metadata("design:type", webhooklinks_1.WebhookLinks)
    ], Webhook.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "acceptsExpiredCertificate" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "acceptsExpiredCertificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "acceptsSelfSignedCertificate" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "acceptsSelfSignedCertificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "acceptsUntrustedRootCertificate" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "acceptsUntrustedRootCertificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountReference" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "accountReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "active" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "active", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "additionalSettings" }),
        (0, class_transformer_1.Type)(function () { return additionalsettingsresponse_1.AdditionalSettingsResponse; }),
        __metadata("design:type", additionalsettingsresponse_1.AdditionalSettingsResponse)
    ], Webhook.prototype, "additionalSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateAlias" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "certificateAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "communicationFormat" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "communicationFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "filterMerchantAccountType" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "filterMerchantAccountType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "filterMerchantAccounts" }),
        __metadata("design:type", Array)
    ], Webhook.prototype, "filterMerchantAccounts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasError" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "hasError", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasPassword" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "hasPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hmacKeyCheckValue" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "hmacKeyCheckValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networkType" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "networkType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "populateSoapActionHeader" }),
        __metadata("design:type", Boolean)
    ], Webhook.prototype, "populateSoapActionHeader", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sslVersion" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "sslVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "url", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "username" }),
        __metadata("design:type", String)
    ], Webhook.prototype, "username", void 0);
    return Webhook;
}(utils_1.SpeakeasyBase));
exports.Webhook = Webhook;
