// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETEnableTransitGatewayRouteTablePropagationActionEnum
type GETEnableTransitGatewayRouteTablePropagationActionEnum string

const (
	GETEnableTransitGatewayRouteTablePropagationActionEnumEnableTransitGatewayRouteTablePropagation GETEnableTransitGatewayRouteTablePropagationActionEnum = "EnableTransitGatewayRouteTablePropagation"
)

func (e *GETEnableTransitGatewayRouteTablePropagationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EnableTransitGatewayRouteTablePropagation":
		*e = GETEnableTransitGatewayRouteTablePropagationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableTransitGatewayRouteTablePropagationActionEnum: %s", s)
	}
}

// GETEnableTransitGatewayRouteTablePropagationVersionEnum
type GETEnableTransitGatewayRouteTablePropagationVersionEnum string

const (
	GETEnableTransitGatewayRouteTablePropagationVersionEnumTwoThousandAndSixteen1115 GETEnableTransitGatewayRouteTablePropagationVersionEnum = "2016-11-15"
)

func (e *GETEnableTransitGatewayRouteTablePropagationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETEnableTransitGatewayRouteTablePropagationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableTransitGatewayRouteTablePropagationVersionEnum: %s", s)
	}
}

type GETEnableTransitGatewayRouteTablePropagationQueryParams struct {
	Action GETEnableTransitGatewayRouteTablePropagationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the attachment.
	TransitGatewayAttachmentID *string `queryParam:"style=form,explode=true,name=TransitGatewayAttachmentId"`
	// The ID of the transit gateway route table announcement.
	TransitGatewayRouteTableAnnouncementID *string `queryParam:"style=form,explode=true,name=TransitGatewayRouteTableAnnouncementId"`
	// The ID of the propagation route table.
	TransitGatewayRouteTableID string                                                  `queryParam:"style=form,explode=true,name=TransitGatewayRouteTableId"`
	Version                    GETEnableTransitGatewayRouteTablePropagationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETEnableTransitGatewayRouteTablePropagationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETEnableTransitGatewayRouteTablePropagationRequest struct {
	QueryParams GETEnableTransitGatewayRouteTablePropagationQueryParams
	Headers     GETEnableTransitGatewayRouteTablePropagationHeaders
}

type GETEnableTransitGatewayRouteTablePropagationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
