"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import stagingdistributiondnsnames as shared_stagingdistributiondnsnames
from ..shared import trafficconfig as shared_trafficconfig
from typing import Optional


@dataclasses.dataclass
class CreateContinuousDeploymentPolicy20200531RequestBodyContinuousDeploymentPolicyConfig:
    r"""Contains the configuration for a continuous deployment policy."""
    
    enabled: Optional[bool] = dataclasses.field(default=None)  
    staging_distribution_dns_names: Optional[shared_stagingdistributiondnsnames.StagingDistributionDNSNames] = dataclasses.field(default=None)  
    traffic_config: Optional[shared_trafficconfig.TrafficConfig] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateContinuousDeploymentPolicy20200531RequestBody:
    
    continuous_deployment_policy_config: CreateContinuousDeploymentPolicy20200531RequestBodyContinuousDeploymentPolicyConfig = dataclasses.field()
    r"""Contains the configuration for a continuous deployment policy."""  
    

@dataclasses.dataclass
class CreateContinuousDeploymentPolicy20200531Request:
    
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'text/xml' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class CreateContinuousDeploymentPolicy20200531Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    