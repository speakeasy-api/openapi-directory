/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetCmsV3DomainsGetPageSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=hapikey",
  })
  hapikey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2Legacy?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2Legacy1?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth3?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=private-app",
  })
  privateApps?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=private-app",
  })
  privateApps1?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=private-app-legacy",
  })
  privateAppsLegacy?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=private-app-legacy",
  })
  privateAppsLegacy1?: string;
}

export class GetCmsV3DomainsGetPageRequest extends SpeakeasyBase {
  /**
   * The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=after" })
  after?: string;

  /**
   * Whether to return only results that have been archived.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=archived",
  })
  archived?: boolean;

  /**
   * Only return domains created after this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdAfter?: Date;

  /**
   * Only return domains created at this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdAt?: Date;

  /**
   * Only return domains created before this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdBefore?: Date;

  /**
   * Maximum number of results per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string[];

  /**
   * Only return domains updated after this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updatedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  updatedAfter?: Date;

  /**
   * Only return domains updated at this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updatedAt;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  updatedAt?: Date;

  /**
   * Only return domains updated before this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updatedBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  updatedBefore?: Date;
}

export class GetCmsV3DomainsGetPageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  collectionResponseWithTotalDomainForwardPaging?: shared.CollectionResponseWithTotalDomainForwardPaging;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
