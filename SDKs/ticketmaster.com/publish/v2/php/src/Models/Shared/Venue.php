<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Venue - Venue
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Venue
{
    /**
     * Venue accessible seating details - multi-lingual fields
     * 
     * @var ?array<string, string> $accessibleSeatingDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessibleSeatingDetails')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accessibleSeatingDetails = null;
    
    /**
     * Indicate if the entity is active, inactive entity won't appear in Discovery API
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * Additional informations of the entity - multi-lingual fields
     * 
     * @var ?array<string, string> $additionalInfos
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalInfos')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalInfos = null;
    
    /**
     * Address
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Address $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Address')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Address $address = null;
    
    /**
     * Venue box office information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VenueBoxOfficeInfo $boxOfficeInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('boxOfficeInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VenueBoxOfficeInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VenueBoxOfficeInfo $boxOfficeInfo = null;
    
    /**
     * City
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\City $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\City')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?City $city = null;
    
    /**
     * Country
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Country $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Country')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Country $country = null;
    
    /**
     * Default currency of ticket prices for events in this venue
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * Descriptions of the entity - multi-lingual fields
     * 
     * @var ?array<string, string> $descriptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('descriptions')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $descriptions = null;
    
    /**
     * True if the entity is dicoverable in discovery API
     * 
     * @var ?bool $discoverable
     */
	#[\JMS\Serializer\Annotation\SerializedName('discoverable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $discoverable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('distance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $distance = null;
    
    /**
     * The list of associated DMAs (Designated Market Areas) of the venue
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Dma> $dma
     */
	#[\JMS\Serializer\Annotation\SerializedName('dma')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Dma>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dma = null;
    
    /**
     * Venue general information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VenueGeneralInfo $generalInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('generalInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VenueGeneralInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VenueGeneralInfo $generalInfo = null;
    
    /**
     * Images of the entity
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Image> $images
     */
	#[\JMS\Serializer\Annotation\SerializedName('images')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Image>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $images = null;
    
    /**
     * Location
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Location $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Location')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Location $location = null;
    
    /**
     * Markets of the venue
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Market> $markets
     */
	#[\JMS\Serializer\Annotation\SerializedName('markets')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Market>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $markets = null;
    
    /**
     * Names of the entity - multi-lingual fields
     * 
     * @var ?array<string, string> $names
     */
	#[\JMS\Serializer\Annotation\SerializedName('names')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $names = null;
    
    /**
     * Venue parking info - multi-lingual fields
     * 
     * @var ?array<string, string> $parkingDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('parkingDetails')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parkingDetails = null;
    
    /**
     * Postal code / zipcode of the venue
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * References of this entity in an other system. Reference is the exact same entity
     * 
     * @var ?array<string, string> $references
     */
	#[\JMS\Serializer\Annotation\SerializedName('references')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $references = null;
    
    /**
     * Relationships on the entity, like if the entity is a duplicate of another one
     * 
     * @var ?array<array<string, mixed>> $relationships
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationships')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relationships = null;
    
    /**
     * Social networks data
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Social $social
     */
	#[\JMS\Serializer\Annotation\SerializedName('social')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Social')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Social $social = null;
    
    /**
     * Source
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Source $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Source')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Source $source = null;
    
    /**
     * State
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\State $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\State')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?State $state = null;
    
    /**
     * Indicate if this is a test entity, by default test entities won't appear in discovery API
     * 
     * @var ?bool $test
     */
	#[\JMS\Serializer\Annotation\SerializedName('test')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $test = null;
    
    /**
     * Timezone of the venue
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * Type of the entity
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VenueTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VenueTypeEnum>')]
    public VenueTypeEnum $type;
    
	#[\JMS\Serializer\Annotation\SerializedName('units')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $units = null;
    
    /**
     * URL of a web site detail page of the entity
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * Version of the entity. Version is to avoid updated an entity with an older version
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->accessibleSeatingDetails = null;
		$this->active = null;
		$this->additionalInfos = null;
		$this->address = null;
		$this->boxOfficeInfo = null;
		$this->city = null;
		$this->country = null;
		$this->currency = null;
		$this->descriptions = null;
		$this->discoverable = null;
		$this->distance = null;
		$this->dma = null;
		$this->generalInfo = null;
		$this->images = null;
		$this->location = null;
		$this->markets = null;
		$this->names = null;
		$this->parkingDetails = null;
		$this->postalCode = null;
		$this->references = null;
		$this->relationships = null;
		$this->social = null;
		$this->source = null;
		$this->state = null;
		$this->test = null;
		$this->timezone = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\VenueTypeEnum::EVENT;
		$this->units = null;
		$this->url = null;
		$this->version = null;
	}
}
