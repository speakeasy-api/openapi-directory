// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// HolidayFederalEnum - Whether this holiday is observed by federally-regulated industries.
type HolidayFederalEnum string

const (
	HolidayFederalEnumOne  HolidayFederalEnum = "1"
	HolidayFederalEnumZero HolidayFederalEnum = "0"
)

func (e *HolidayFederalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		*e = HolidayFederalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidayFederalEnum: %s", s)
	}
}

// HolidayOptionalEnum - Whether this is a province-wide statutory holiday, or one that is optional for employers.
type HolidayOptionalEnum string

const (
	HolidayOptionalEnumOne HolidayOptionalEnum = "1"
)

func (e *HolidayOptionalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		*e = HolidayOptionalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidayOptionalEnum: %s", s)
	}
}

// Holiday - A Canadian holiday. Includes a name, the literal date of the holiday, the observed date of the holiday (ie, accommodating for weekends), and a list of regions that observe this holiday.
type Holiday struct {
	// ISO date: the literal date of the holiday
	Date types.Date `json:"date"`
	// Whether this holiday is observed by federally-regulated industries.
	Federal HolidayFederalEnum `json:"federal"`
	// Primary key for a holiday
	ID int64 `json:"id"`
	// English name
	NameEn string `json:"nameEn"`
	// French name
	NameFr string `json:"nameFr"`
	// ISO date: when this holiday is observed
	ObservedDate types.Date `json:"observedDate"`
	// Whether this is a province-wide statutory holiday, or one that is optional for employers.
	Optional  *HolidayOptionalEnum `json:"optional,omitempty"`
	Provinces []Province           `json:"provinces,omitempty"`
}
