<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateCallRequestAnswerUrl
{
    /**
     * The HTTP method used to send event information to answer_url.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateCallRequestAnswerUrlAnswerMethodEnum $answerMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('answer_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCallRequestAnswerUrlAnswerMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateCallRequestAnswerUrlAnswerMethodEnum $answerMethod = null;
    
    /**
     * The webhook endpoint where you provide the [Nexmo Call Control Object](/voice/voice-api/ncco-reference) that governs this call.
     * 
     * 
     * 
     * @var array<string> $answerUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('answer_url')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $answerUrl;
    
    /**
     * The HTTP method used to send event information to `event_url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateCallRequestAnswerUrlEventMethodEnum $eventMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCallRequestAnswerUrlEventMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateCallRequestAnswerUrlEventMethodEnum $eventMethod = null;
    
    /**
     * **Required** unless `event_url` is configured at the application
     * 
     * level, see [Create an Application](/api/application.v2#createApplication)
     * 
     * The webhook endpoint where call progress events are
     * sent to. For more information about the values sent, see
     * [Event webhook](/voice/voice-api/webhook-reference#event-webhook).
     * 
     * 
     * @var ?array<string> $eventUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_url')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventUrl = null;
    
    /**
     * Connect to a Phone (PSTN) number
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\EndpointPhoneFrom $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EndpointPhoneFrom')]
    public EndpointPhoneFrom $from;
    
    /**
     * Set the number of seconds that elapse before Vonage hangs up after the call state changes to answered.
     * 
     * @var ?int $lengthTimer
     */
	#[\JMS\Serializer\Annotation\SerializedName('length_timer')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lengthTimer = null;
    
    /**
     * Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateCallRequestAnswerUrlMachineDetectionEnum $machineDetection
     */
	#[\JMS\Serializer\Annotation\SerializedName('machine_detection')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCallRequestAnswerUrlMachineDetectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateCallRequestAnswerUrlMachineDetectionEnum $machineDetection = null;
    
    /**
     * Set to `true` to use random phone number as `from`. The number will be selected from the list of the numbers assigned to the current application. `random_from_number: true` cannot be used together with `from`.
     * 
     * @var ?bool $randomFromNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('random_from_number')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $randomFromNumber = null;
    
    /**
     * Set the number of seconds that elapse before Vonage hangs up after the call state changes to ‘ringing’.
     * 
     * @var ?int $ringingTimer
     */
	#[\JMS\Serializer\Annotation\SerializedName('ringing_timer')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ringingTimer = null;
    
    /**
     * $to
     * 
     * @var array<mixed> $to
     */
	#[\JMS\Serializer\Annotation\SerializedName('to')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $to;
    
	public function __construct()
	{
		$this->answerMethod = null;
		$this->answerUrl = [];
		$this->eventMethod = null;
		$this->eventUrl = null;
		$this->from = new \OpenAPI\OpenAPI\Models\Shared\EndpointPhoneFrom();
		$this->lengthTimer = null;
		$this->machineDetection = null;
		$this->randomFromNumber = null;
		$this->ringingTimer = null;
		$this->to = [];
	}
}
