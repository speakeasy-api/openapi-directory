<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Schema - The type of API resource. For Schema resources, this is always `admin#directory#schema`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Schema
{
    /**
     * Display name for the schema.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The ETag of the resource.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * A list of fields in the schema.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SchemaFieldSpec> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SchemaFieldSpec>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * Kind of resource this is.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The unique identifier of the schema (Read-only)
     * 
     * @var ?string $schemaId
     */
	#[\JMS\Serializer\Annotation\SerializedName('schemaId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schemaId = null;
    
    /**
     * The schema's name. Each `schema_name` must be unique within a customer. Reusing a name results in a `409: Entity already exists` error.
     * 
     * @var ?string $schemaName
     */
	#[\JMS\Serializer\Annotation\SerializedName('schemaName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schemaName = null;
    
	public function __construct()
	{
		$this->displayName = null;
		$this->etag = null;
		$this->fields = null;
		$this->kind = null;
		$this->schemaId = null;
		$this->schemaName = null;
	}
}
