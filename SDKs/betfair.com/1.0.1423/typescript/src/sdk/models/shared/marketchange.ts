/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MarketDefinition } from "./marketdefinition";
import { RunnerChange } from "./runnerchange";
import { Expose, Type } from "class-transformer";

export class MarketChange extends SpeakeasyBase {
  /**
   * Conflated - have more than a single change been combined (or null if not conflated)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "con" })
  con?: boolean;

  /**
   * Market Id - the id of the market
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Image - replace existing prices / data with the data supplied: it is not a delta (or null if delta)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "img" })
  img?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "marketDefinition" })
  @Type(() => MarketDefinition)
  marketDefinition?: MarketDefinition;

  /**
   * Runner Changes - a list of changes to runners (or null if un-changed)
   */
  @SpeakeasyMetadata({ elemType: RunnerChange })
  @Expose({ name: "rc" })
  @Type(() => RunnerChange)
  rc?: RunnerChange[];

  /**
   * The total amount matched across the market. This value is truncated at 2dp (or null if un-changed)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tv" })
  tv?: number;
}
