/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute, AttributeInput } from "./attribute";
import { Expose, Type } from "class-transformer";

/**
 * A container for all the attributes for a given location.
 */
export class AttributesInput extends SpeakeasyBase {
  /**
   * A collection of attributes that need to be updated.
   */
  @SpeakeasyMetadata({ elemType: AttributeInput })
  @Expose({ name: "attributes" })
  @Type(() => AttributeInput)
  attributes?: AttributeInput[];

  /**
   * Required. Google identifier for this location in the form of `locations/{location_id}/attributes`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * A container for all the attributes for a given location.
 */
export class Attributes extends SpeakeasyBase {
  /**
   * A collection of attributes that need to be updated.
   */
  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes?: Attribute[];

  /**
   * Required. Google identifier for this location in the form of `locations/{location_id}/attributes`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
