"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bindetail as shared_bindetail
from ..shared import dspublickeydetail as shared_dspublickeydetail
from ..shared import threeds2cardrangedetail as shared_threeds2cardrangedetail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ThreeDSAvailabilityResponse:
    r"""OK - the request has succeeded."""
    
    bin_details: Optional[shared_bindetail.BinDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('binDetails'), 'exclude': lambda f: f is None }})  
    ds_public_keys: Optional[list[shared_dspublickeydetail.DSPublicKeyDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dsPublicKeys'), 'exclude': lambda f: f is None }})
    r"""List of Directory Server (DS) public keys."""  
    three_ds1_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threeDS1Supported'), 'exclude': lambda f: f is None }})
    r"""Indicator if 3D Secure 1 is supported."""  
    three_ds2_card_range_details: Optional[list[shared_threeds2cardrangedetail.ThreeDs2CardRangeDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threeDS2CardRangeDetails'), 'exclude': lambda f: f is None }})
    r"""List of brand and card range pairs."""  
    three_ds2supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threeDS2supported'), 'exclude': lambda f: f is None }})
    r"""Indicator if 3D Secure 2 is supported."""  
    