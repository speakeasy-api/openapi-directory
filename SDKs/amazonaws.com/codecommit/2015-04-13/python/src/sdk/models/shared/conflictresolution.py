"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deletefileentry as shared_deletefileentry
from ..shared import replacecontententry as shared_replacecontententry
from ..shared import setfilemodeentry as shared_setfilemodeentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConflictResolution:
    r"""If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving conflicts during a merge."""
    
    delete_files: Optional[list[shared_deletefileentry.DeleteFileEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleteFiles'), 'exclude': lambda f: f is None }})  
    replace_contents: Optional[list[shared_replacecontententry.ReplaceContentEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replaceContents'), 'exclude': lambda f: f is None }})  
    set_file_modes: Optional[list[shared_setfilemodeentry.SetFileModeEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setFileModes'), 'exclude': lambda f: f is None }})  
    