/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NASetpoint } from "./nasetpoint";
import { NASetpointLog } from "./nasetpointlog";
import { NAThermMeasure } from "./nathermmeasure";
import { NAThermProgram } from "./nathermprogram";
import { Expose, Type } from "class-transformer";

export class NAThermostat extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_id" })
  id?: string;

  /**
   * It contains the current battery level in percentage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "battery_percent" })
  batteryPercent?: number;

  /**
   * It contains the current battery status. The threshold depends on the kind of module, below is the list of the different threshold to take into account according the module type.
   *
   * @remarks
   * "Indoor module Battery range: 6000 ... 4200" |
   * INDOOR_BATTERY_LEVEL_FULL = 5640
   * INDOOR_BATTERY_LEVEL_HIGH = 5280
   * INDOOR_BATTERY_LEVEL_MEDIUM = 4920
   * INDOOR_BATTERY_LEVEL_LOW = 4560
   * "Below 4560: very low" |
   *
   * "Raingauge and outdoor module Battery range: 6000 ... 3600" |
   * BATTERY_LEVEL_FULL = 5500
   * BATTERY_LEVEL_HIGH = 5000
   * BATTERY_LEVEL_MEDIUM = 4500
   * BATTERY_LEVEL_LOW = 4000
   * "Below 4000: very low" |
   *
   * "Thermostat Battery range: 4500 ... 3000" |
   * THERMOSTAT_BATTERY_LEVEL_FULL = 4100
   * THERMOSTAT_BATTERY_LEVEL_HIGH = 3600
   * THERMOSTAT_BATTERY_LEVEL_MEDIUM = 3300
   * THERMOSTAT_BATTERY_LEVEL_LOW = 3000
   * "Below 3000: very low"
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "battery_vp" })
  batteryVp?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_message" })
  lastMessage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_therm_seen" })
  lastThermSeen?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "measured" })
  @Type(() => NAThermMeasure)
  measured?: NAThermMeasure;

  @SpeakeasyMetadata()
  @Expose({ name: "module_name" })
  moduleName?: string;

  /**
   * "It contains the current radio status. The different thresholds to take into account are :" |
   *
   * @remarks
   * RADIO_THRESHOLD_SIGNAL_LOW = 90
   * RADIO_THRESHOLD_SIGNAL_MEDIUM = 80
   * RADIO_THRESHOLD_SIGNAL_HIGH = 70
   * RADIO_THRESHOLD_SIGNAL_FULL = 60
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rf_status" })
  rfStatus?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "setpoint" })
  @Type(() => NASetpoint)
  setpoint?: NASetpoint;

  /**
   * The last 20 setpoints (mode, endtime, and timestamp) the thermostats has entered.
   */
  @SpeakeasyMetadata({ elemType: NASetpointLog })
  @Expose({ name: "setpoint_history" })
  @Type(() => NASetpointLog)
  setpointHistory?: NASetpointLog[];

  @SpeakeasyMetadata()
  @Expose({ name: "setpoint_order" })
  @Type(() => NASetpoint)
  setpointOrder?: NASetpoint;

  @SpeakeasyMetadata()
  @Expose({ name: "therm_orientation" })
  thermOrientation?: number;

  /**
   * List of the weekly heating planning used by the thermostat
   */
  @SpeakeasyMetadata({ elemType: NAThermProgram })
  @Expose({ name: "therm_program_list" })
  @Type(() => NAThermProgram)
  thermProgramList?: NAThermProgram[];

  @SpeakeasyMetadata()
  @Expose({ name: "therm_relay_cmd" })
  thermRelayCmd?: number;

  /**
   * Included in every device or module. It defines the type of the device/module. Its values are among :
   *
   * @remarks
   * NAMain : for the base station
   * NAModule1 : for the outdoor module
   * NAModule4 : for the additionnal indoor module
   * NAModule3 : for the rain gauge module
   * NAPlug : for the thermostat relay/plug
   * NATherm1 : for the thermostat module
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
