/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GETPaymentRunDataElementResponse {
    /**
     * The customer account ID specified in the `data` field when creating the payment run.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public GETPaymentRunDataElementResponse withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The amount specified in the `data` field when creating the payment run. `null` is returned if it was not specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public GETPaymentRunDataElementResponse withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The amount that is collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountCollected")
    public Double amountCollected;
    public GETPaymentRunDataElementResponse withAmountCollected(Double amountCollected) {
        this.amountCollected = amountCollected;
        return this;
    }
    
    /**
     * The amount to be collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountToCollect")
    public Double amountToCollect;
    public GETPaymentRunDataElementResponse withAmountToCollect(Double amountToCollect) {
        this.amountToCollect = amountToCollect;
        return this;
    }
    
    /**
     * The comment specified in the `data` field when creating the payment run. `null` is returned if it was not specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public GETPaymentRunDataElementResponse withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The billing document ID specified in the `data` field when creating the payment run. `null` is returned if it was not specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentId")
    public String documentId;
    public GETPaymentRunDataElementResponse withDocumentId(String documentId) {
        this.documentId = documentId;
        return this;
    }
    
    /**
     * The billing document type specified in the `data` field when creating the payment run. `null` is returned if it was not specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentType")
    public GETPaymentRunDataElementResponseDocumentTypeEnum documentType;
    public GETPaymentRunDataElementResponse withDocumentType(GETPaymentRunDataElementResponseDocumentTypeEnum documentType) {
        this.documentType = documentType;
        return this;
    }
    
    /**
     * The error code of the response.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCode")
    public String errorCode;
    public GETPaymentRunDataElementResponse withErrorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * The detailed information of the error response.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;
    public GETPaymentRunDataElementResponse withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * The payment gateway ID specified in the `data` field when creating the payment run. `null` is returned if it was not specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentGatewayId")
    public String paymentGatewayId;
    public GETPaymentRunDataElementResponse withPaymentGatewayId(String paymentGatewayId) {
        this.paymentGatewayId = paymentGatewayId;
        return this;
    }
    
    /**
     * The payment method ID specified in the `data` field when creating the payment run. `null` is returned if it was not specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethodId")
    public String paymentMethodId;
    public GETPaymentRunDataElementResponse withPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
        return this;
    }
    
    /**
     * Indicates whether the data is processed successfully or not.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public GETPaymentRunDataElementResponseResultEnum result;
    public GETPaymentRunDataElementResponse withResult(GETPaymentRunDataElementResponseResultEnum result) {
        this.result = result;
        return this;
    }
    
    /**
     * Container for transactions that apply to the current request. Each element contains an array of the settlement/payment applied to the record.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactions")
    public GETPaymentRunDataTransactionElementResponse[] transactions;
    public GETPaymentRunDataElementResponse withTransactions(GETPaymentRunDataTransactionElementResponse[] transactions) {
        this.transactions = transactions;
        return this;
    }
    
}
