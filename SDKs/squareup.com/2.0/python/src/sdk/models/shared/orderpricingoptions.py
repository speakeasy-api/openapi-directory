"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderPricingOptions:
    r"""Pricing options for an order. The options affect how the order's price is calculated.
    They can be used, for example, to apply automatic price adjustments that are based on preconfigured
    [pricing rules](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogPricingRule).
    """
    
    auto_apply_discounts: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_apply_discounts'), 'exclude': lambda f: f is None }})
    r"""The option to determine whether pricing rule-based
    discounts are automatically applied to an order.
    """  
    auto_apply_taxes: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_apply_taxes'), 'exclude': lambda f: f is None }})
    r"""The option to determine whether rule-based taxes are automatically
    applied to an order when the criteria of the corresponding rules are met.
    """  
    