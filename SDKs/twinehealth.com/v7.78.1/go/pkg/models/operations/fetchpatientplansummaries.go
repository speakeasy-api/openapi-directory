// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// FetchPatientPlanSummariesIncludeEnum - List of related resources to include in the response
type FetchPatientPlanSummariesIncludeEnum string

const (
	FetchPatientPlanSummariesIncludeEnumActions        FetchPatientPlanSummariesIncludeEnum = "actions"
	FetchPatientPlanSummariesIncludeEnumBundles        FetchPatientPlanSummariesIncludeEnum = "bundles"
	FetchPatientPlanSummariesIncludeEnumPatient        FetchPatientPlanSummariesIncludeEnum = "patient"
	FetchPatientPlanSummariesIncludeEnumCurrentResults FetchPatientPlanSummariesIncludeEnum = "current_results"
)

func (e FetchPatientPlanSummariesIncludeEnum) ToPointer() *FetchPatientPlanSummariesIncludeEnum {
	return &e
}

func (e *FetchPatientPlanSummariesIncludeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "actions":
		fallthrough
	case "bundles":
		fallthrough
	case "patient":
		fallthrough
	case "current_results":
		*e = FetchPatientPlanSummariesIncludeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FetchPatientPlanSummariesIncludeEnum: %v", v)
	}
}

type FetchPatientPlanSummariesRequest struct {
	// Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
	//
	FilterGroups *string `queryParam:"style=form,explode=true,name=filter[groups]"`
	// Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
	//
	FilterOrganization *string `queryParam:"style=form,explode=true,name=filter[organization]"`
	// Patient id to fetch plan summary for. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`.
	//
	FilterPatient *string `queryParam:"style=form,explode=true,name=filter[patient]"`
	// List of related resources to include in the response
	Include *FetchPatientPlanSummariesIncludeEnum `queryParam:"style=form,explode=true,name=include"`
}

type FetchPatientPlanSummariesResponse struct {
	ContentType string
	// Unauthorized
	FetchErrorResponse *shared.FetchErrorResponse
	// OK
	FetchPatientPlanSummariesResponse *shared.FetchPatientPlanSummariesResponse
	StatusCode                        int
	RawResponse                       *http.Response
}
