/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InlineObjectProperties } from "./inlineobjectproperties";
import { InlineObjectPropertiesSuggestionState } from "./inlineobjectpropertiessuggestionstate";
import { Expose, Type } from "class-transformer";

/**
 * A suggested change to InlineObjectProperties.
 */
export class SuggestedInlineObjectProperties extends SpeakeasyBase {
  /**
   * Properties of an InlineObject.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inlineObjectProperties" })
  @Type(() => InlineObjectProperties)
  inlineObjectProperties?: InlineObjectProperties;

  /**
   * A mask that indicates which of the fields on the base InlineObjectProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inlineObjectPropertiesSuggestionState" })
  @Type(() => InlineObjectPropertiesSuggestionState)
  inlineObjectPropertiesSuggestionState?: InlineObjectPropertiesSuggestionState;
}
