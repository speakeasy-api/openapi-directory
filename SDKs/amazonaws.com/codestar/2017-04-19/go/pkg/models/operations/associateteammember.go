// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateTeamMemberXAmzTargetEnum
type AssociateTeamMemberXAmzTargetEnum string

const (
	AssociateTeamMemberXAmzTargetEnumCodeStar20170419AssociateTeamMember AssociateTeamMemberXAmzTargetEnum = "CodeStar_20170419.AssociateTeamMember"
)

func (e *AssociateTeamMemberXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeStar_20170419.AssociateTeamMember":
		*e = AssociateTeamMemberXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateTeamMemberXAmzTargetEnum: %s", s)
	}
}

type AssociateTeamMemberRequest struct {
	AssociateTeamMemberRequest shared.AssociateTeamMemberRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 AssociateTeamMemberXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateTeamMemberResponse struct {
	// Success
	AssociateTeamMemberResult *shared.AssociateTeamMemberResult
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidServiceRoleException
	InvalidServiceRoleException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ProjectConfigurationException
	ProjectConfigurationException interface{}
	// ProjectNotFoundException
	ProjectNotFoundException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// TeamMemberAlreadyAssociatedException
	TeamMemberAlreadyAssociatedException interface{}
	// ValidationException
	ValidationException interface{}
}
