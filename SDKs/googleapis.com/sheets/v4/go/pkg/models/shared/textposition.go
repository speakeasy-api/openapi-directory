// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TextPositionHorizontalAlignmentEnum - Horizontal alignment setting for the piece of text.
type TextPositionHorizontalAlignmentEnum string

const (
	TextPositionHorizontalAlignmentEnumHorizontalAlignUnspecified TextPositionHorizontalAlignmentEnum = "HORIZONTAL_ALIGN_UNSPECIFIED"
	TextPositionHorizontalAlignmentEnumLeft                       TextPositionHorizontalAlignmentEnum = "LEFT"
	TextPositionHorizontalAlignmentEnumCenter                     TextPositionHorizontalAlignmentEnum = "CENTER"
	TextPositionHorizontalAlignmentEnumRight                      TextPositionHorizontalAlignmentEnum = "RIGHT"
)

func (e *TextPositionHorizontalAlignmentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HORIZONTAL_ALIGN_UNSPECIFIED":
		fallthrough
	case "LEFT":
		fallthrough
	case "CENTER":
		fallthrough
	case "RIGHT":
		*e = TextPositionHorizontalAlignmentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TextPositionHorizontalAlignmentEnum: %s", s)
	}
}

// TextPosition - Position settings for text.
type TextPosition struct {
	// Horizontal alignment setting for the piece of text.
	HorizontalAlignment *TextPositionHorizontalAlignmentEnum `json:"horizontalAlignment,omitempty"`
}
