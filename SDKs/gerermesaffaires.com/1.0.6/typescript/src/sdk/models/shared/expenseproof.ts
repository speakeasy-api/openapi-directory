/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum ExpenseProofAccountEnum {
  Cab = "CAB",
  Ikm = "IKM",
  Prk = "PRK",
  Txi = "TXI",
  Voy = "VOY",
  Ptt = "PTT",
  Fhr = "FHR",
  Div = "DIV",
  Res = "RES",
}

export enum ExpenseProofStatusEnum {
  R = "R",
  V = "V",
  W = "W",
}

export class ExpenseProof extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Account" })
  account?: ExpenseProofAccountEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ArchivalDate" })
  archivalDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Class" })
  class?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpenseDate" })
  expenseDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Extension" })
  extension?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FolderDate" })
  folderDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InclVAT" })
  inclVAT?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Provider" })
  provider?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ExpenseProofStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VAT" })
  vat?: number;
}
