// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var UpdateConversationServerList = []string{
	"https://conversations.twilio.com",
}

type UpdateConversationSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateConversationPathParams struct {
	// A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateConversationHeaders struct {
	// The X-Twilio-Webhook-Enabled HTTP request header
	XTwilioWebhookEnabled *shared.ConversationEnumWebhookEnabledTypeEnum `header:"style=simple,explode=false,name=X-Twilio-Webhook-Enabled"`
}

type UpdateConversationUpdateConversationRequest struct {
	// An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set "{}" will be returned.
	Attributes *string `form:"name=Attributes"`
	// The date that this resource was created.
	DateCreated *time.Time `form:"name=DateCreated"`
	// The date that this resource was last updated.
	DateUpdated *time.Time `form:"name=DateUpdated"`
	// The human-readable name of this conversation, limited to 256 characters. Optional.
	FriendlyName *string `form:"name=FriendlyName"`
	// The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.
	MessagingServiceSid *string                           `form:"name=MessagingServiceSid"`
	State               *shared.ConversationEnumStateEnum `form:"name=State"`
	// ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.
	TimersClosed *string `form:"name=Timers.Closed"`
	// ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.
	TimersInactive *string `form:"name=Timers.Inactive"`
	// An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.
	UniqueName *string `form:"name=UniqueName"`
}

type UpdateConversationRequest struct {
	PathParams UpdateConversationPathParams
	Headers    UpdateConversationHeaders
	Request    *UpdateConversationUpdateConversationRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateConversationSecurity
	ServerURL  *string
}

type UpdateConversationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ConversationsV1Conversation *shared.ConversationsV1Conversation
}
