"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cardinfo as shared_cardinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PaymentInstrumentUpdateRequestStatusEnum(str, Enum):
    r"""The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **Active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **Requested**.
    
    Possible values: 
    
     * **Active**:  The payment instrument is active and can be used to make payments. 
    
     * **Requested**: The payment instrument has been requested. This state is applicable for physical cards. 
    
    * **Inactive**: The payment instrument is inactive and cannot be used to make payments. 
    
     * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments. 
    
     * **Closed**: The payment instrument is permanently closed. This action cannot be undone. 
    
    * **Stolen** 
    
     * **Lost**
    """
    ACTIVE = 'Active'
    CLOSED = 'Closed'
    INACTIVE = 'Inactive'
    LOST = 'Lost'
    REQUESTED = 'Requested'
    STOLEN = 'Stolen'
    SUSPENDED = 'Suspended'
    BLOCKED = 'blocked'
    DISCARDED = 'discarded'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentInstrumentUpdateRequest:
    
    balance_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balanceAccountId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the balance account associated with this payment instrument.
    >You can only change the balance account ID if the payment instrument has **Requested** or **Inactive** status.
    """  
    card: Optional[shared_cardinfo.CardInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card'), 'exclude': lambda f: f is None }})  
    status: Optional[PaymentInstrumentUpdateRequestStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **Active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **Requested**.
    
    Possible values: 
    
     * **Active**:  The payment instrument is active and can be used to make payments. 
    
     * **Requested**: The payment instrument has been requested. This state is applicable for physical cards. 
    
    * **Inactive**: The payment instrument is inactive and cannot be used to make payments. 
    
     * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments. 
    
     * **Closed**: The payment instrument is permanently closed. This action cannot be undone. 
    
    * **Stolen** 
    
     * **Lost**
    """  
    status_comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusComment'), 'exclude': lambda f: f is None }})
    r"""Comment for the status of the payment instrument."""  
    