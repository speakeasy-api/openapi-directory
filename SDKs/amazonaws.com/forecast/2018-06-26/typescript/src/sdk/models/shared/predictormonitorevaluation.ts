/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetricResult } from "./metricresult";
import { MonitorDataSource } from "./monitordatasource";
import { PredictorEvent } from "./predictorevent";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes the results of a monitor evaluation.
 */
export class PredictorMonitorEvaluation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationState" })
  evaluationState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  evaluationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata({ elemType: MetricResult })
  @Expose({ name: "MetricResults" })
  @Type(() => MetricResult)
  metricResults?: MetricResult[];

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorArn" })
  monitorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorDataSource" })
  @Type(() => MonitorDataSource)
  monitorDataSource?: MonitorDataSource;

  @SpeakeasyMetadata()
  @Expose({ name: "NumItemsEvaluated" })
  numItemsEvaluated?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PredictorEvent" })
  @Type(() => PredictorEvent)
  predictorEvent?: PredictorEvent;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceArn" })
  resourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WindowEndDatetime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  windowEndDatetime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "WindowStartDatetime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  windowStartDatetime?: Date;
}
