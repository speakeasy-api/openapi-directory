/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LabelValue } from "./labelvalue";
import { PointData } from "./pointdata";
import { Expose, Type } from "class-transformer";

/**
 * Represents the values of a time series associated with a TimeSeriesDescriptor.
 */
export class TimeSeriesData extends SpeakeasyBase {
  /**
   * The values of the labels in the time series identifier, given in the same order as the label_descriptors field of the TimeSeriesDescriptor associated with this object. Each value must have a value of the type given in the corresponding entry of label_descriptors.
   */
  @SpeakeasyMetadata({ elemType: LabelValue })
  @Expose({ name: "labelValues" })
  @Type(() => LabelValue)
  labelValues?: LabelValue[];

  /**
   * The points in the time series.
   */
  @SpeakeasyMetadata({ elemType: PointData })
  @Expose({ name: "pointData" })
  @Type(() => PointData)
  pointData?: PointData[];
}
