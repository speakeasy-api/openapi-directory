<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VoiceCapabilityWebhooksEventUrl - Vonage will send call events (e.g. `ringing`, `answered`) to this URL
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VoiceCapabilityWebhooksEventUrl
{
    /**
     * The URL that Vonage sends events related to your call to
     * 
     * @var ?string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address = null;
    
    /**
     * If Vonage can't connect to the webhook URL for this specified amount of time, then Vonage makes one additional attempt to connect to the webhook endpoint. This is an integer value specified in milliseconds.
     * 
     * @var ?int $connectionTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('connection_timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $connectionTimeout = null;
    
    /**
     * The HTTP method used to send events to your server
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VoiceCapabilityWebhooksEventUrlHttpMethodEnum $httpMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('http_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VoiceCapabilityWebhooksEventUrlHttpMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VoiceCapabilityWebhooksEventUrlHttpMethodEnum $httpMethod = null;
    
    /**
     * If a response from the webhook URL can't be read for this specified amount of time, then Vonage makes one additional attempt to read the webhook endpoint. This is an integer value specified in milliseconds.
     * 
     * @var ?int $socketTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('socket_timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $socketTimeout = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->connectionTimeout = null;
		$this->httpMethod = null;
		$this->socketTimeout = null;
	}
}
