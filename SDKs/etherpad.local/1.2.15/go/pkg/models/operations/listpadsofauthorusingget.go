// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListPadsOfAuthorUsingGETQueryParams struct {
	AuthorID *string `queryParam:"style=form,explode=true,name=authorID"`
}

type ListPadsOfAuthorUsingGETRequest struct {
	QueryParams ListPadsOfAuthorUsingGETQueryParams
}

// ListPadsOfAuthorUsingGET500ApplicationJSON - internal api error (code 2)
type ListPadsOfAuthorUsingGET500ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// ListPadsOfAuthorUsingGET401ApplicationJSON - no or wrong API key (code 4)
type ListPadsOfAuthorUsingGET401ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// ListPadsOfAuthorUsingGET400ApplicationJSON - generic api error (code 1)
type ListPadsOfAuthorUsingGET400ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

type ListPadsOfAuthorUsingGET200ApplicationJSONData struct {
	PadIDs []string `json:"padIDs,omitempty"`
}

// ListPadsOfAuthorUsingGET200ApplicationJSON - ok (code 0)
type ListPadsOfAuthorUsingGET200ApplicationJSON struct {
	Code    *int64                                          `json:"code,omitempty"`
	Data    *ListPadsOfAuthorUsingGET200ApplicationJSONData `json:"data,omitempty"`
	Message *string                                         `json:"message,omitempty"`
}

type ListPadsOfAuthorUsingGETResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ok (code 0)
	ListPadsOfAuthorUsingGET200ApplicationJSONObject *ListPadsOfAuthorUsingGET200ApplicationJSON
	// generic api error (code 1)
	ListPadsOfAuthorUsingGET400ApplicationJSONObject *ListPadsOfAuthorUsingGET400ApplicationJSON
	// no or wrong API key (code 4)
	ListPadsOfAuthorUsingGET401ApplicationJSONObject *ListPadsOfAuthorUsingGET401ApplicationJSON
	// internal api error (code 2)
	ListPadsOfAuthorUsingGET500ApplicationJSONObject *ListPadsOfAuthorUsingGET500ApplicationJSON
}
