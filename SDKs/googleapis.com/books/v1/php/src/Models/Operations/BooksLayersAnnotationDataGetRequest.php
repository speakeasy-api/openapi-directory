<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class BooksLayersAnnotationDataGetRequest
{
    /**
     * V1 error format.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\XgafvEnum $dollarXgafv
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=$.xgafv')]
    public ?\OpenAPI\OpenAPI\Models\Shared\XgafvEnum $dollarXgafv = null;
    
    /**
     * OAuth access token.
     * 
     * @var ?string $accessToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=access_token')]
    public ?string $accessToken = null;
    
    /**
     * For the dictionary layer. Whether or not to allow web definitions.
     * 
     * @var ?bool $allowWebDefinitions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=allowWebDefinitions')]
    public ?bool $allowWebDefinitions = null;
    
    /**
     * Data format for response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * The ID of the annotation data to retrieve.
     * 
     * @var string $annotationDataId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=annotationDataId')]
    public string $annotationDataId;
    
    /**
     * JSONP
     * 
     * @var ?string $callback
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=callback')]
    public ?string $callback = null;
    
    /**
     * The content version for the volume you are trying to retrieve.
     * 
     * @var string $contentVersion
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=contentVersion')]
    public string $contentVersion;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * The requested pixel height for any images. If height is provided width must also be provided.
     * 
     * @var ?int $h
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=h')]
    public ?int $h = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * The ID for the layer to get the annotations.
     * 
     * @var string $layerId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=layerId')]
    public string $layerId;
    
    /**
     * The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.
     * 
     * @var ?string $locale
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=locale')]
    public ?string $locale = null;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * The requested scale for the image.
     * 
     * @var ?int $scale
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=scale')]
    public ?int $scale = null;
    
    /**
     * String to identify the originator of this request.
     * 
     * @var ?string $source
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=source')]
    public ?string $source = null;
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     * 
     * @var ?string $uploadType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=uploadType')]
    public ?string $uploadType = null;
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     * 
     * @var ?string $uploadProtocol
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=upload_protocol')]
    public ?string $uploadProtocol = null;
    
    /**
     * The volume to retrieve annotations for.
     * 
     * @var string $volumeId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=volumeId')]
    public string $volumeId;
    
    /**
     * The requested pixel width for any images. If width is provided height must also be provided.
     * 
     * @var ?int $w
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=w')]
    public ?int $w = null;
    
	public function __construct()
	{
		$this->dollarXgafv = null;
		$this->accessToken = null;
		$this->allowWebDefinitions = null;
		$this->alt = null;
		$this->annotationDataId = "";
		$this->callback = null;
		$this->contentVersion = "";
		$this->fields = null;
		$this->h = null;
		$this->key = null;
		$this->layerId = "";
		$this->locale = null;
		$this->oauthToken = null;
		$this->prettyPrint = null;
		$this->quotaUser = null;
		$this->scale = null;
		$this->source = null;
		$this->uploadType = null;
		$this->uploadProtocol = null;
		$this->volumeId = "";
		$this->w = null;
	}
}
