"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import nullable_team_simple as shared_nullable_team_simple
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamPermissions:
    
    admin: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('admin') }})  
    maintain: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maintain') }})  
    pull: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pull') }})  
    push: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('push') }})  
    triage: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triage') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Team:
    r"""Groups of organization members that gives permissions on specified repositories."""
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    html_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('html_url') }})  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    members_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members_url') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    node_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('node_id') }})  
    parent: shared_nullable_team_simple.NullableTeamSimple = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent') }})
    r"""Groups of organization members that gives permissions on specified repositories."""  
    permission: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permission') }})  
    repositories_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repositories_url') }})  
    slug: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slug') }})  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})  
    permissions: Optional[TeamPermissions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})  
    privacy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privacy'), 'exclude': lambda f: f is None }})  
    