// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveACardDisputePathParams struct {
	CardDisputeID string `pathParam:"style=simple,explode=false,name=card_dispute_id"`
}

type RetrieveACardDisputeRequest struct {
	PathParams RetrieveACardDisputePathParams
}

type RetrieveACardDisputeDefaultApplicationJSON13StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveACardDisputeDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveACardDisputeDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON13TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveACardDisputeDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON13 struct {
	Detail     string                                                 `json:"detail"`
	RetryAfter *int64                                                 `json:"retry_after,omitempty"`
	Status     RetrieveACardDisputeDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                 `json:"title"`
	Type       RetrieveACardDisputeDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON12StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveACardDisputeDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveACardDisputeDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON12TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveACardDisputeDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON12 struct {
	Detail string                                                 `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON11StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveACardDisputeDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveACardDisputeDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON11TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveACardDisputeDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON11 struct {
	Detail string                                                 `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON10StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON10StatusEnumFourHundred RetrieveACardDisputeDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveACardDisputeDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON10TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveACardDisputeDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON10 struct {
	Detail string                                                 `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON9StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON9StatusEnumFourHundred RetrieveACardDisputeDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveACardDisputeDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON9TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveACardDisputeDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                              `json:"errors,omitempty"`
	Status RetrieveACardDisputeDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON8StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveACardDisputeDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveACardDisputeDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON8TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveACardDisputeDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON8 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON7StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveACardDisputeDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveACardDisputeDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON7TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveACardDisputeDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON7 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON6StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON6StatusEnumFiveHundred RetrieveACardDisputeDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveACardDisputeDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON6TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON6TypeEnumInternalServerError RetrieveACardDisputeDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON6 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON5StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveACardDisputeDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveACardDisputeDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON5TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveACardDisputeDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON5 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON4StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveACardDisputeDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveACardDisputeDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON4TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveACardDisputeDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON4 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON3StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveACardDisputeDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveACardDisputeDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON3TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveACardDisputeDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON3 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON2StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveACardDisputeDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveACardDisputeDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON2TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveACardDisputeDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON2 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveACardDisputeDefaultApplicationJSON1StatusEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveACardDisputeDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveACardDisputeDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON1TypeEnum string

const (
	RetrieveACardDisputeDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveACardDisputeDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveACardDisputeDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveACardDisputeDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDisputeDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveACardDisputeDefaultApplicationJSON1 struct {
	Detail string                                                `json:"detail"`
	Status RetrieveACardDisputeDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   RetrieveACardDisputeDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveACardDisputeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card Dispute
	CardDispute *shared.CardDispute
	// Error
	Error interface{}
}
