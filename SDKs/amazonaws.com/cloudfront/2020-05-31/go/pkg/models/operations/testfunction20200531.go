// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// TestFunction20200531RequestBodyStageEnum - The stage of the function that you are testing, either <code>DEVELOPMENT</code> or <code>LIVE</code>.
type TestFunction20200531RequestBodyStageEnum string

const (
	TestFunction20200531RequestBodyStageEnumDevelopment TestFunction20200531RequestBodyStageEnum = "DEVELOPMENT"
	TestFunction20200531RequestBodyStageEnumLive        TestFunction20200531RequestBodyStageEnum = "LIVE"
)

func (e TestFunction20200531RequestBodyStageEnum) ToPointer() *TestFunction20200531RequestBodyStageEnum {
	return &e
}

func (e *TestFunction20200531RequestBodyStageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVELOPMENT":
		fallthrough
	case "LIVE":
		*e = TestFunction20200531RequestBodyStageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestFunction20200531RequestBodyStageEnum: %v", v)
	}
}

type TestFunction20200531RequestBody struct {
	// The event object to test the function with. For more information about the structure of the event object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/managing-functions.html#test-function">Testing functions</a> in the <i>Amazon CloudFront Developer Guide</i>.
	EventObject string
	// The stage of the function that you are testing, either <code>DEVELOPMENT</code> or <code>LIVE</code>.
	Stage *TestFunction20200531RequestBodyStageEnum
}

type TestFunction20200531Request struct {
	// The current version (<code>ETag</code> value) of the function that you are testing, which you can get using <code>DescribeFunction</code>.
	IfMatch string `header:"style=simple,explode=false,name=If-Match"`
	// The name of the function that you are testing.
	Name              string  `pathParam:"style=simple,explode=false,name=Name"`
	RequestBody       []byte  `request:"mediaType=text/xml"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type TestFunction20200531Response struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
