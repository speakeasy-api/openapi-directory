// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum - Indicates whether the member has the specified permission for the specified resource, based on evaluating all of the applicable policies.
type GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum string

const (
	GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnumAccessStateUnspecified GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum = "ACCESS_STATE_UNSPECIFIED"
	GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnumGranted                GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum = "GRANTED"
	GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnumNotGranted             GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum = "NOT_GRANTED"
	GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnumUnknownConditional     GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum = "UNKNOWN_CONDITIONAL"
	GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnumUnknownInfoDenied      GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum = "UNKNOWN_INFO_DENIED"
)

func (e GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum) ToPointer() *GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum {
	return &e
}

func (e *GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCESS_STATE_UNSPECIFIED":
		fallthrough
	case "GRANTED":
		fallthrough
	case "NOT_GRANTED":
		fallthrough
	case "UNKNOWN_CONDITIONAL":
		fallthrough
	case "UNKNOWN_INFO_DENIED":
		*e = GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum: %v", v)
	}
}

// GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse - Response for TroubleshootIamPolicy.
type GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse struct {
	// Indicates whether the member has the specified permission for the specified resource, based on evaluating all of the applicable policies.
	Access *GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponseAccessEnum `json:"access,omitempty"`
	// List of IAM policies that were evaluated to check the member's permissions, with annotations to indicate how each policy contributed to the final result. The list of policies can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy.
	ExplainedPolicies []GoogleCloudPolicytroubleshooterV1betaExplainedPolicy `json:"explainedPolicies,omitempty"`
}
