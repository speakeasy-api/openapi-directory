"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import budgetdetailresponse as shared_budgetdetailresponse
from ..shared import errorresponse as shared_errorresponse
from typing import Optional


@dataclasses.dataclass
class GetBudgetByIDRequest:
    
    budget_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'budget_id', 'style': 'simple', 'explode': False }})
    r"""The id of the budget. \\"last-used\\" can be used to specify the last used budget and \\"default\\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)."""  
    last_knowledge_of_server: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_knowledge_of_server', 'style': 'form', 'explode': True }})
    r"""The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included."""  
    

@dataclasses.dataclass
class GetBudgetByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    budget_detail_response: Optional[shared_budgetdetailresponse.BudgetDetailResponse] = dataclasses.field(default=None)
    r"""The requested budget"""  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""The specified budget was not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    