"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import date_ as shared_date_
from ..shared import guestinstalledapplicationlist as shared_guestinstalledapplicationlist
from ..shared import openfilelist as shared_openfilelist
from ..shared import runningprocesslist as shared_runningprocesslist
from ..shared import runningservicelist as shared_runningservicelist
from ..shared import runtimenetworkinfo as shared_runtimenetworkinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GuestRuntimeDetails:
    r"""Guest OS runtime information."""
    
    domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain'), 'exclude': lambda f: f is None }})
    r"""Domain, e.g. c.stratozone-development.internal."""  
    installed_apps: Optional[shared_guestinstalledapplicationlist.GuestInstalledApplicationList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installedApps'), 'exclude': lambda f: f is None }})
    r"""Guest installed application list."""  
    last_uptime: Optional[shared_date_.Date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUptime'), 'exclude': lambda f: f is None }})
    r"""Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"""  
    machine_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineName'), 'exclude': lambda f: f is None }})
    r"""Machine name."""  
    network_info: Optional[shared_runtimenetworkinfo.RuntimeNetworkInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkInfo'), 'exclude': lambda f: f is None }})
    r"""Runtime networking information."""  
    open_file_list: Optional[shared_openfilelist.OpenFileList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openFileList'), 'exclude': lambda f: f is None }})
    r"""Open file list."""  
    processes: Optional[shared_runningprocesslist.RunningProcessList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processes'), 'exclude': lambda f: f is None }})
    r"""List of running guest OS processes."""  
    services: Optional[shared_runningservicelist.RunningServiceList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services'), 'exclude': lambda f: f is None }})
    r"""List of running guest OS services."""  
    