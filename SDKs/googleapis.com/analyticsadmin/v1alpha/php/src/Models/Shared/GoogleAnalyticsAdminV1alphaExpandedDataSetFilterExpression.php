<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression - A logical expression of EnhancedDataSet dimension filters.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression
{
    /**
     * A list of ExpandedDataSet filter expressions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList $andGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('andGroup')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList $andGroup = null;
    
    /**
     * A specific filter for a single dimension
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaExpandedDataSetFilter $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaExpandedDataSetFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAnalyticsAdminV1alphaExpandedDataSetFilter $filter = null;
    
    /**
     * A logical expression of EnhancedDataSet dimension filters.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression $notExpression
     */
	#[\JMS\Serializer\Annotation\SerializedName('notExpression')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression $notExpression = null;
    
	public function __construct()
	{
		$this->andGroup = null;
		$this->filter = null;
		$this->notExpression = null;
	}
}
