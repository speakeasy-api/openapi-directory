<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetDnsDomainNameRecordsRequest
{
    /**
     * Automatically added
     * 
     * @var string $domainNamePathParameter
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=domainName')]
    public string $domainNamePathParameter;
    
    /**
     * The domain name.
     * 
     * @var string $domainNameQueryParameter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=domain_name')]
    public string $domainNameQueryParameter;
    
    /**
     * Filters records matching the record name. This filter only applies to lookups of A, CNAME, TXT, CAA, ALIAS and TLSA records.
     * 
     * @var ?string $recordName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=record_name')]
    public ?string $recordName = null;
    
    /**
     * Filters records for the service. This filter only applies to lookups of SRV records.
     * 
     * @var ?string $service
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=service')]
    public ?string $service = null;
    
    /**
     * The number of items to skip in the resultset.
     * 
     * @var ?int $skip
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=skip')]
    public ?int $skip = null;
    
    /**
     * The number of items to return in the resultset. The returned count can be equal or less than this number.
     * 
     * @var ?int $take
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=take')]
    public ?int $take = null;
    
    /**
     * Filters records matching the type. Most other filters only apply when this filter is specified.
     * 
     * @var ?string $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->domainNamePathParameter = "";
		$this->domainNameQueryParameter = "";
		$this->recordName = null;
		$this->service = null;
		$this->skip = null;
		$this->take = null;
		$this->type = null;
	}
}
