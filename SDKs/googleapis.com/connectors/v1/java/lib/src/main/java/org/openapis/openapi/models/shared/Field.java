/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Field - Metadata of an entity field.
 */
public class Field {
    /**
     * The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalDetails")
    public java.util.Map<String, Object> additionalDetails;
    public Field withAdditionalDetails(java.util.Map<String, Object> additionalDetails) {
        this.additionalDetails = additionalDetails;
        return this;
    }
    
    /**
     * The data type of the Field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataType")
    public FieldDataTypeEnum dataType;
    public Field withDataType(FieldDataTypeEnum dataType) {
        this.dataType = dataType;
        return this;
    }
    
    /**
     * The following field specifies the default value of the Field provided by the external system if a value is not provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultValue")
    public Object defaultValue;
    public Field withDefaultValue(Object defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    /**
     * A brief description of the Field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Field withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Name of the Field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("field")
    public String field;
    public Field withField(String field) {
        this.field = field;
        return this;
    }
    
    /**
     * The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public Boolean key;
    public Field withKey(Boolean key) {
        this.key = key;
        return this;
    }
    
    /**
     * Specifies whether a null value is allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nullable")
    public Boolean nullable;
    public Field withNullable(Boolean nullable) {
        this.nullable = nullable;
        return this;
    }
    
    /**
     * Specifies if the Field is readonly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readonly")
    public Boolean readonly;
    public Field withReadonly(Boolean readonly) {
        this.readonly = readonly;
        return this;
    }
    
}
