// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GETPaymentRunDataTransactionElementResponseStatusEnum - The status of the newly generated payment.
//
// **Note:** This field is only available if `type` is `Payment`.
type GETPaymentRunDataTransactionElementResponseStatusEnum string

const (
	GETPaymentRunDataTransactionElementResponseStatusEnumProcessed  GETPaymentRunDataTransactionElementResponseStatusEnum = "Processed"
	GETPaymentRunDataTransactionElementResponseStatusEnumProcessing GETPaymentRunDataTransactionElementResponseStatusEnum = "Processing"
	GETPaymentRunDataTransactionElementResponseStatusEnumError      GETPaymentRunDataTransactionElementResponseStatusEnum = "Error"
)

func (e *GETPaymentRunDataTransactionElementResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processed":
		fallthrough
	case "Processing":
		fallthrough
	case "Error":
		*e = GETPaymentRunDataTransactionElementResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPaymentRunDataTransactionElementResponseStatusEnum: %s", s)
	}
}

// GETPaymentRunDataTransactionElementResponseTypeEnum - The type of the current transaction.
type GETPaymentRunDataTransactionElementResponseTypeEnum string

const (
	GETPaymentRunDataTransactionElementResponseTypeEnumPayment                 GETPaymentRunDataTransactionElementResponseTypeEnum = "Payment"
	GETPaymentRunDataTransactionElementResponseTypeEnumCreditMemo              GETPaymentRunDataTransactionElementResponseTypeEnum = "CreditMemo"
	GETPaymentRunDataTransactionElementResponseTypeEnumUnappliedPayment        GETPaymentRunDataTransactionElementResponseTypeEnum = "UnappliedPayment"
	GETPaymentRunDataTransactionElementResponseTypeEnumCreditBalanceAdjustment GETPaymentRunDataTransactionElementResponseTypeEnum = "CreditBalanceAdjustment"
)

func (e *GETPaymentRunDataTransactionElementResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Payment":
		fallthrough
	case "CreditMemo":
		fallthrough
	case "UnappliedPayment":
		fallthrough
	case "CreditBalanceAdjustment":
		*e = GETPaymentRunDataTransactionElementResponseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPaymentRunDataTransactionElementResponseTypeEnum: %s", s)
	}
}

type GETPaymentRunDataTransactionElementResponse struct {
	// The total amount of the newly generated payment.
	//
	// **Note:** This field is only available if `type` is `Payment`.
	//
	Amount *float64 `json:"amount,omitempty"`
	// The amount applied to the record.
	//
	AppliedAmount *float64 `json:"appliedAmount,omitempty"`
	// The error code of the response.
	//
	// **Note:** This field is only available if `type` is `Payment`.
	//
	ErrorCode *string `json:"errorCode,omitempty"`
	// The detailed information of the error response.
	//
	// **Note:** This field is only available if `type` is `Payment`.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// The ID of the current transaction.
	//
	ID *string `json:"id,omitempty"`
	// The status of the newly generated payment.
	//
	// **Note:** This field is only available if `type` is `Payment`.
	//
	Status *GETPaymentRunDataTransactionElementResponseStatusEnum `json:"status,omitempty"`
	// The type of the current transaction.
	//
	Type *GETPaymentRunDataTransactionElementResponseTypeEnum `json:"type,omitempty"`
}
