/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PlaceOrderFromExistingOrderFormRequestBody extends SpeakeasyBase {
  /**
   * Interest rate to be used in case it applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interestValue" })
  interestValue: number;

  /**
   * True if the shopper opted to receive the newsletter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "optinNewsLetter" })
  optinNewsLetter?: boolean;

  /**
   * ID of the `orderForm` corresponding to the cart from which to place the order. This is the same as the `orderFormId` parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referenceId" })
  referenceId: string;

  /**
   * Reference value of the order for calculating interest if that is the case. Can be equal to the total value and does not separate cents. For example, $24.99 is represented `2499`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referenceValue" })
  referenceValue: number;

  /**
   * `true` if the shopper's data provided during checkout should be saved for future reference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savePersonalData" })
  savePersonalData?: boolean;

  /**
   * Total value of the order without separating cents. For example, $24.99 is represented `2499`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class PlaceOrderFromExistingOrderFormRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PlaceOrderFromExistingOrderFormRequestBody;

  /**
   * ID of the `orderForm` corresponding to the cart from which to place the order.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=orderFormId",
  })
  orderFormId: string;
}

export class PlaceOrderFromExistingOrderFormResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  placeOrderFromExistingOrderForm200ApplicationJSONObject?: Record<string, any>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
