"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagFilter:
    r"""Model that query for counting of images whose suggested tags match given tags and their probability are greater than or equal to the given threshold."""
    
    tag_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagIds'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'tagIds' }})
    r"""Existing TagIds in project to get suggested tags count for."""  
    threshold: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threshold'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'threshold' }})
    r"""Confidence threshold to filter suggested tags on."""  
    