/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetApiCatalogSystemPubProductsOffersProductIdRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Product unique number identifier.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=productId",
  })
  productId: string;
}

/**
 * General information of the main image of the SKU.
 */
export class GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONMainImage extends SpeakeasyBase {
  /**
   * Unique identifier of the association of the Image to the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImageId" })
  imageId: string;

  /**
   * Image Label.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImageLabel" })
  imageLabel: string;

  /**
   * Image file path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImagePath" })
  imagePath: string;

  /**
   * Image HTML tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImageTag" })
  imageTag: string;

  /**
   * General text of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImageText" })
  imageText: string;

  /**
   * If the image is the main image of the SKU or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsMain" })
  isMain: boolean;

  /**
   * If the image has zoom applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsZoomSize" })
  isZoomSize: boolean;

  /**
   * Time that the image was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastModified" })
  lastModified: string;
}

export class GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffersOffersPerSalesChannel extends SpeakeasyBase {
  /**
   * SKU available quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AvailableQuantity" })
  availableQuantity: number;

  /**
   * If the SKU is available or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAvailable" })
  isAvailable: boolean;

  /**
   * SKU list price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ListPrice" })
  listPrice: number;

  /**
   * SKU price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Price" })
  price: number;

  /**
   * SKU precie without discount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PriceWithoutDiscount" })
  priceWithoutDiscount: number;

  /**
   * SKU trade policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SaleChannel" })
  saleChannel: number;
}

export class GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffers extends SpeakeasyBase {
  /**
   * Trade policy that the SKU in contained.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AvailableSalesChannels" })
  availableSalesChannels: string;

  /**
   * Offers per trade policy.
   */
  @SpeakeasyMetadata({
    elemType:
      GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffersOffersPerSalesChannel,
  })
  @Expose({ name: "OffersPerSalesChannel" })
  @Type(
    () =>
      GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffersOffersPerSalesChannel
  )
  offersPerSalesChannel: GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffersOffersPerSalesChannel[];

  /**
   * Seller ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerId" })
  sellerId: string;

  /**
   * ID of the association of the SKU with the seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerSkuId" })
  sellerSkuId: string;
}

export class GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSON extends SpeakeasyBase {
  /**
   * SKU unique identification code (barcode), accepts up to 13 numerical characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EanId" })
  eanId: string;

  /**
   * If the SKU is active or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsActive" })
  isActive: boolean;

  /**
   * Time that the offer was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastModified" })
  lastModified: string;

  /**
   * General information of the main image of the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MainImage" })
  @Type(
    () =>
      GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONMainImage
  )
  mainImage: GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONMainImage;

  /**
   * SKU name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  /**
   * SKU complete name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NameComplete" })
  nameComplete: string;

  /**
   * AKA Commertial Condition.
   */
  @SpeakeasyMetadata({
    elemType:
      GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffers,
  })
  @Expose({ name: "Offers" })
  @Type(
    () => GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffers
  )
  offers: GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSONOffers[];

  /**
   * Product ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId: string;

  /**
   * Unique reference code used internally for organizational purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RefId" })
  refId: string;

  /**
   * SKU ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SkuId" })
  skuId: string;
}

export class GetApiCatalogSystemPubProductsOffersProductIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({
    elemType: GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSON,
  })
  getApiCatalogSystemPubProductsOffersProductId200ApplicationJSONObjects?: GetApiCatalogSystemPubProductsOffersProductId200ApplicationJSON[];
}
