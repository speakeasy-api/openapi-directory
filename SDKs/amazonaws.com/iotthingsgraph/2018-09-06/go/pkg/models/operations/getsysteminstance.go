// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSystemInstanceXAmzTargetEnum
type GetSystemInstanceXAmzTargetEnum string

const (
	GetSystemInstanceXAmzTargetEnumIotThingsGraphFrontEndServiceGetSystemInstance GetSystemInstanceXAmzTargetEnum = "IotThingsGraphFrontEndService.GetSystemInstance"
)

func (e *GetSystemInstanceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IotThingsGraphFrontEndService.GetSystemInstance":
		*e = GetSystemInstanceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSystemInstanceXAmzTargetEnum: %s", s)
	}
}

type GetSystemInstanceRequest struct {
	GetSystemInstanceRequest shared.GetSystemInstanceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               GetSystemInstanceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetSystemInstanceResponse struct {
	ContentType string
	// Success
	GetSystemInstanceResponse *shared.GetSystemInstanceResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
