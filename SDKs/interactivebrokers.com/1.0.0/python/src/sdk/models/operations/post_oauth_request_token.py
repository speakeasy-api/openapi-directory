"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostOauthRequestTokenRequestBody:
    r"""OAuth Parameters"""
    
    oauth_callback: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_callback'), 'exclude': lambda f: f is None }})
    r"""An absolute URL to which IB will redirect the user. This URL is provided by the consumer during registration. This parameter must be set to 'oob'."""  
    oauth_consumer_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_consumer_key'), 'exclude': lambda f: f is None }})
    r"""The 25-character hexadecimal string that was obtained from Interactive Brokers during the OAuth consumer registration process."""  
    oauth_nonce: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_nonce'), 'exclude': lambda f: f is None }})
    r"""A random string uniquely generated for each request."""  
    oauth_signature: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_signature'), 'exclude': lambda f: f is None }})
    r"""The signature for the request generated using the method specified in the oauth_signature_method parameter. See section 9 of the OAuth v1.0a specification for more details on signing requests."""  
    oauth_signature_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_signature_method'), 'exclude': lambda f: f is None }})
    r"""The signature method used to sign the request. Currently only 'RSA-SHA256' is supported."""  
    oauth_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_timestamp'), 'exclude': lambda f: f is None }})
    r"""Timestamp expressed in seconds since 1/1/1970 00:00:00 GMT. Must be a positive integer and greater than or equal to any timestamp used in previous requests."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostOauthRequestToken200ApplicationJSON:
    r"""OAuth token"""
    
    oauth_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_token'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostOauthRequestTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_oauth_request_token_200_application_json_object: Optional[PostOauthRequestToken200ApplicationJSON] = dataclasses.field(default=None)
    r"""OAuth token"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    