/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ImageWatermarkRequestBody extends SpeakeasyBase {
  /**
   * The image background color in hexadecimal notation (e.g. #0000ff). For PNG output the special value of 'transparent' can also be used. For JPG output the default is black (#000000)
   */
  @SpeakeasyMetadata({ data: "form, name=bg-color" })
  bgColor?: string;

  /**
   * The output image format, can be either png or jpg
   */
  @SpeakeasyMetadata({ data: "form, name=format" })
  format?: string;

  /**
   * If set resize the resulting image to this height (in px)
   */
  @SpeakeasyMetadata({ data: "form, name=height" })
  height?: number;

  /**
   * The URL or Base64 encoded Data URL for the source image. You can also upload an image file directly using multipart/form-data
   */
  @SpeakeasyMetadata({ data: "form, name=image-url" })
  imageUrl: string;

  /**
   * The opacity of the watermark (0 to 100)
   */
  @SpeakeasyMetadata({ data: "form, name=opacity" })
  opacity?: number;

  /**
   * The position of the watermark image, possible values are: <br>center, top-left, top-center, top-right, bottom-left, bottom-center, bottom-right
   */
  @SpeakeasyMetadata({ data: "form, name=position" })
  position?: string;

  /**
   * The resize mode to use, we support 3 main resizing modes: <ul> <li><b>scale</b><br>Resize to within the width and height specified while preserving aspect ratio. In this mode the width or height will be automatically adjusted to fit the aspect ratio</li> <li><b>pad</b><br>Resize to exactly the width and height specified while preserving aspect ratio and pad any space left over. Any padded space will be filled in with the 'bg-color' value</li> <li><b>crop</b><br>Resize to exactly the width and height specified while preserving aspect ratio and crop any space which fall outside the area. The cropping window is centered on the original image</li> </ul>
   */
  @SpeakeasyMetadata({ data: "form, name=resize-mode" })
  resizeMode?: string;

  /**
   * The URL or Base64 encoded Data URL for the watermark image. You can also upload an image file directly using multipart/form-data
   */
  @SpeakeasyMetadata({ data: "form, name=watermark-url" })
  watermarkUrl: string;

  /**
   * If set resize the resulting image to this width (in px)
   */
  @SpeakeasyMetadata({ data: "form, name=width" })
  width?: number;
}

export class ImageWatermarkResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  imageWatermark200ApplicationJSONBinaryString?: Uint8Array;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
