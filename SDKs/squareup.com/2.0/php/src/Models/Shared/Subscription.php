<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Subscription - Represents a customer subscription to a subscription plan.
 * 
 * For an overview of the `Subscription` type, see
 * [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Subscription
{
    /**
     * The subscription cancellation date, in YYYY-MM-DD format (for
     * 
     * example, 2013-01-15). On this date, the subscription status changes
     * to `CANCELED` and the subscription billing stops.
     * If you don't set this field, the subscription plan dictates if and
     * when subscription ends.
     * 
     * You cannot update this field, you can only clear it.
     * 
     * @var ?string $canceledDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('canceled_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $canceledDate = null;
    
    /**
     * The ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) [card](https://developer.squareup.com/reference/square_2021-08-18/objects/Card)
     * 
     * that is charged for the subscription.
     * 
     * @var ?string $cardId
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardId = null;
    
    /**
     * The date up to which the customer is invoiced for the
     * 
     * subscription, in YYYY-MM-DD format (for example, 2013-01-15).
     * 
     * After the invoice is sent for a given billing period,
     * this date will be the last day of the billing period.
     * For example,
     * suppose for the month of May a customer gets an invoice
     * (or charged the card) on May 1. For the monthly billing scenario,
     * this date is then set to May 31.
     * 
     * @var ?string $chargedThroughDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('charged_through_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chargedThroughDate = null;
    
    /**
     * The timestamp when the subscription was created, in RFC 3339 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The ID of the associated [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) profile.
     * 
     * @var ?string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
    /**
     * The Square-assigned ID of the subscription.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The IDs of the [invoices](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice) created for the
     * 
     * subscription, listed in order when the invoices were created
     * (oldest invoices appear first).
     * 
     * @var ?array<string> $invoiceIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoice_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $invoiceIds = null;
    
    /**
     * The ID of the location associated with the subscription.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * The ID of the associated [subscription plan](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogSubscriptionPlan).
     * 
     * @var ?string $planId
     */
	#[\JMS\Serializer\Annotation\SerializedName('plan_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $planId = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $priceOverrideMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('price_override_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $priceOverrideMoney = null;
    
    /**
     * The start date of the subscription, in YYYY-MM-DD format (for example,
     * 
     * 2013-01-15).
     * 
     * @var ?string $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startDate = null;
    
    /**
     * The current status of the subscription.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The tax amount applied when billing the subscription. The
     * 
     * percentage is expressed in decimal form, using a `'.'` as the decimal
     * separator and without a `'%'` sign. For example, a value of `7.5`
     * corresponds to 7.5%.
     * 
     * @var ?string $taxPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_percentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxPercentage = null;
    
    /**
     * Timezone that will be used in date calculations for the subscription.
     * 
     * Defaults to the timezone of the location based on `location_id`.
     * Format: the IANA Timezone Database identifier for the location timezone (for example, `America/Los_Angeles`).
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * The version of the object. When updating an object, the version
     * 
     * supplied must match the version in the database, otherwise the write will
     * be rejected as conflicting.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->canceledDate = null;
		$this->cardId = null;
		$this->chargedThroughDate = null;
		$this->createdAt = null;
		$this->customerId = null;
		$this->id = null;
		$this->invoiceIds = null;
		$this->locationId = null;
		$this->planId = null;
		$this->priceOverrideMoney = null;
		$this->startDate = null;
		$this->status = null;
		$this->taxPercentage = null;
		$this->timezone = null;
		$this->version = null;
	}
}
