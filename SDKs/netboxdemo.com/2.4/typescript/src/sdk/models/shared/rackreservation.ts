/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedRack } from "./nestedrack";
import { NestedTenant } from "./nestedtenant";
import { NestedUser } from "./nesteduser";
import { Expose, Transform, Type } from "class-transformer";

export class RackReservation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rack" })
  @Type(() => NestedRack)
  rack: NestedRack;

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NestedUser)
  user: NestedUser;
}
