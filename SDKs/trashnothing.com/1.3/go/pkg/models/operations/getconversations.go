// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetConversationsRequest struct {
	// Used to filter messases by category.  Must be set to one of the following three categories: inbox, archived, blocked
	//
	Category *string `queryParam:"style=form,explode=true,name=category"`
	// Client device pixel ratio used to determine thumbnail size (default 1.0).
	DevicePixelRatio *float64 `queryParam:"style=form,explode=true,name=device_pixel_ratio"`
	// If set to 1, the num_unread field in the response will be set to the count of the total number of conversations that have unread messages. <br /><br /> This is useful for showing users the total number of unread messages that they have in their inbox. Calculating the count will slow the request down a bit so setting this should be avoided for requests where it's not needed (eg. requesting archived or blocked conversations or requests that are just paging through older conversations).
	//
	IncludeNumUnread *int64 `queryParam:"style=form,explode=true,name=include_num_unread"`
	// The number of recent messages to return with each conversation. Additional messages can be retrieved using get conversation messages endpoint.
	//
	NumMessages *int64 `queryParam:"style=form,explode=true,name=num_messages"`
	// The page of conversations to return.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of conversations to return per page (must be >= 1 and <= 30).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
}

// GetConversations200ApplicationJSON - The conversations and paging data.
type GetConversations200ApplicationJSON struct {
	Conversations []shared.Conversation `json:"conversations,omitempty"`
	// If the include_num_unread parameter is set to 1, this will be set to the total number of conversations that have unread messages matching the query parameters of the request.  If the include_num_unread parameter is set to 0, this will be null.
	//
	NumUnread *int64 `json:"num_unread,omitempty"`
	Page      *int64 `json:"page,omitempty"`
	PerPage   *int64 `json:"per_page,omitempty"`
}

type GetConversationsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The conversations and paging data.
	GetConversations200ApplicationJSONObject *GetConversations200ApplicationJSON
}
