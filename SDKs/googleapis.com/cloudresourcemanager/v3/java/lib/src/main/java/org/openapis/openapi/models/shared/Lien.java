/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Lien - A Lien represents an encumbrance on the actions that can be performed on a resource.
 */
public class Lien {
    /**
     * The creation time of this Lien.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Lien withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A system-generated unique identifier for this Lien. Example: `liens/1234abcd`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Lien withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String origin;

    public Lien withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;

    public Lien withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public Lien withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictions")
    public String[] restrictions;

    public Lien withRestrictions(String[] restrictions) {
        this.restrictions = restrictions;
        return this;
    }
    
    public Lien(){}
}
