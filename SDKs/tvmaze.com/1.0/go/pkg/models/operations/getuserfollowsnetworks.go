// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUserFollowsNetworksEmbedEnum - Embed full network info
type GetUserFollowsNetworksEmbedEnum string

const (
	GetUserFollowsNetworksEmbedEnumNetwork GetUserFollowsNetworksEmbedEnum = "network"
)

func (e GetUserFollowsNetworksEmbedEnum) ToPointer() *GetUserFollowsNetworksEmbedEnum {
	return &e
}

func (e *GetUserFollowsNetworksEmbedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "network":
		*e = GetUserFollowsNetworksEmbedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserFollowsNetworksEmbedEnum: %v", v)
	}
}

type GetUserFollowsNetworksRequest struct {
	// Embed full network info
	Embed *GetUserFollowsNetworksEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
}

type GetUserFollowsNetworksResponse struct {
	ContentType string
	// An array of followed networks
	NetworkFollows []shared.NetworkFollow
	StatusCode     int
	RawResponse    *http.Response
}
