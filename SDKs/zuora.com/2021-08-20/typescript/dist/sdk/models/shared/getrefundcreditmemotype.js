"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETRefundCreditMemoType = exports.GETRefundCreditMemoTypeTypeEnum = exports.GETRefundCreditMemoTypeStatusEnum = exports.GETRefundCreditMemoTypeMethodTypeEnum = exports.GETRefundCreditMemoTypeGatewayStateEnum = exports.GETRefundCreditMemoTypeFinanceInformation = exports.GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Whether the refund was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum;
(function (GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum) {
    GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum["Processing"] = "Processing";
    GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum["Yes"] = "Yes";
    GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum["No"] = "No";
    GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum["Error"] = "Error";
    GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum["Ignore"] = "Ignore";
})(GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum = exports.GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum || (exports.GETRefundCreditMemoTypeFinanceInformationTransferredToAccountingEnum = {}));
/**
 * Container for the finance information related to the refund.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoTypeFinanceInformation = /** @class */ (function (_super) {
    __extends(GETRefundCreditMemoTypeFinanceInformation, _super);
    function GETRefundCreditMemoTypeFinanceInformation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCode" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoTypeFinanceInformation.prototype, "bankAccountAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCodeType" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoTypeFinanceInformation.prototype, "bankAccountAccountingCodeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredToAccounting" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoTypeFinanceInformation.prototype, "transferredToAccounting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCode" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoTypeFinanceInformation.prototype, "unappliedPaymentAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCodeType" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoTypeFinanceInformation.prototype, "unappliedPaymentAccountingCodeType", void 0);
    return GETRefundCreditMemoTypeFinanceInformation;
}(utils_1.SpeakeasyBase));
exports.GETRefundCreditMemoTypeFinanceInformation = GETRefundCreditMemoTypeFinanceInformation;
/**
 * The status of the refund in the gateway.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoTypeGatewayStateEnum;
(function (GETRefundCreditMemoTypeGatewayStateEnum) {
    GETRefundCreditMemoTypeGatewayStateEnum["MarkedForSubmission"] = "MarkedForSubmission";
    GETRefundCreditMemoTypeGatewayStateEnum["Submitted"] = "Submitted";
    GETRefundCreditMemoTypeGatewayStateEnum["Settled"] = "Settled";
    GETRefundCreditMemoTypeGatewayStateEnum["NotSubmitted"] = "NotSubmitted";
    GETRefundCreditMemoTypeGatewayStateEnum["FailedToSettle"] = "FailedToSettle";
})(GETRefundCreditMemoTypeGatewayStateEnum = exports.GETRefundCreditMemoTypeGatewayStateEnum || (exports.GETRefundCreditMemoTypeGatewayStateEnum = {}));
/**
 * How an external refund was issued to a customer.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoTypeMethodTypeEnum;
(function (GETRefundCreditMemoTypeMethodTypeEnum) {
    GETRefundCreditMemoTypeMethodTypeEnum["Ach"] = "ACH";
    GETRefundCreditMemoTypeMethodTypeEnum["Cash"] = "Cash";
    GETRefundCreditMemoTypeMethodTypeEnum["Check"] = "Check";
    GETRefundCreditMemoTypeMethodTypeEnum["CreditCard"] = "CreditCard";
    GETRefundCreditMemoTypeMethodTypeEnum["PayPal"] = "PayPal";
    GETRefundCreditMemoTypeMethodTypeEnum["WireTransfer"] = "WireTransfer";
    GETRefundCreditMemoTypeMethodTypeEnum["DebitCard"] = "DebitCard";
    GETRefundCreditMemoTypeMethodTypeEnum["CreditCardReferenceTransaction"] = "CreditCardReferenceTransaction";
    GETRefundCreditMemoTypeMethodTypeEnum["BankTransfer"] = "BankTransfer";
    GETRefundCreditMemoTypeMethodTypeEnum["Other"] = "Other";
})(GETRefundCreditMemoTypeMethodTypeEnum = exports.GETRefundCreditMemoTypeMethodTypeEnum || (exports.GETRefundCreditMemoTypeMethodTypeEnum = {}));
/**
 * The status of the refund.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoTypeStatusEnum;
(function (GETRefundCreditMemoTypeStatusEnum) {
    GETRefundCreditMemoTypeStatusEnum["Processed"] = "Processed";
    GETRefundCreditMemoTypeStatusEnum["Canceled"] = "Canceled";
    GETRefundCreditMemoTypeStatusEnum["Error"] = "Error";
    GETRefundCreditMemoTypeStatusEnum["Processing"] = "Processing";
})(GETRefundCreditMemoTypeStatusEnum = exports.GETRefundCreditMemoTypeStatusEnum || (exports.GETRefundCreditMemoTypeStatusEnum = {}));
/**
 * The type of the refund.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoTypeTypeEnum;
(function (GETRefundCreditMemoTypeTypeEnum) {
    GETRefundCreditMemoTypeTypeEnum["External"] = "External";
    GETRefundCreditMemoTypeTypeEnum["Electronic"] = "Electronic";
})(GETRefundCreditMemoTypeTypeEnum = exports.GETRefundCreditMemoTypeTypeEnum || (exports.GETRefundCreditMemoTypeTypeEnum = {}));
/**
 * Container for custom fields of a Refund object.
 *
 * @remarks
 *
 */
var GETRefundCreditMemoType = /** @class */ (function (_super) {
    __extends(GETRefundCreditMemoType, _super);
    function GETRefundCreditMemoType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationId__NS" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "integrationIdNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationStatus__NS" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "integrationStatusNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Origin__NS" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "originNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SyncDate__NS" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "syncDateNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SynctoNetSuite__NS" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "synctoNetSuiteNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], GETRefundCreditMemoType.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancelledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "cancelledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdById" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "createdById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "createdDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditMemoId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "creditMemoId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "financeInformation" }),
        (0, class_transformer_1.Type)(function () { return GETRefundCreditMemoTypeFinanceInformation; }),
        __metadata("design:type", GETRefundCreditMemoTypeFinanceInformation)
    ], GETRefundCreditMemoType.prototype, "financeInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "gatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayResponse" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "gatewayResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayResponseCode" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "gatewayResponseCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayState" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "gatewayState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "markedForSubmissionOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "markedForSubmissionOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "methodType" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "methodType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "paymentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "paymentMethodId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodSnapshotId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "paymentMethodSnapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reasonCode" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "reasonCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "referenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "refundDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "refundDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "refundTransactionTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "refundTransactionTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondRefundReferenceId" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "secondRefundReferenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "settledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "settledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptor" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "softDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptorPhone" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "softDescriptorPhone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submittedOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "submittedOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], GETRefundCreditMemoType.prototype, "success", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedById" }),
        __metadata("design:type", String)
    ], GETRefundCreditMemoType.prototype, "updatedById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETRefundCreditMemoType.prototype, "updatedDate", void 0);
    return GETRefundCreditMemoType;
}(utils_1.SpeakeasyBase));
exports.GETRefundCreditMemoType = GETRefundCreditMemoType;
