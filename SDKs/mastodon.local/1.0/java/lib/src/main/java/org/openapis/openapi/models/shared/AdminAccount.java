/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AdminAccount - Admin-level information about a given account.
 * https://docs.joinmastodon.org/entities/admin-account/
 */
public class AdminAccount {
    /**
     * Represents a user of Mastodon and their associated profile.
     * https://docs.joinmastodon.org/entities/account/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public Account account;

    public AdminAccount withAccount(Account account) {
        this.account = account;
        return this;
    }
    
    /**
     * Whether the account is currently approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approved")
    public Boolean approved;

    public AdminAccount withApproved(Boolean approved) {
        this.approved = approved;
        return this;
    }
    
    /**
     * Whether the account has confirmed their email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmed")
    public Boolean confirmed;

    public AdminAccount withConfirmed(Boolean confirmed) {
        this.confirmed = confirmed;
        return this;
    }
    
    /**
     * When the account was first discovered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public AdminAccount withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The ID of the application that created this account. Cast from an integer, but not guaranteed to be a number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by_application_id")
    public String createdByApplicationId;

    public AdminAccount withCreatedByApplicationId(String createdByApplicationId) {
        this.createdByApplicationId = createdByApplicationId;
        return this;
    }
    
    /**
     * Whether the account is currently disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;

    public AdminAccount withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * The email address associated with the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public AdminAccount withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The ID of the account in the database. Cast from an integer, but not guaranteed to be a number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AdminAccount withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Invite request text ???
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invite_request")
    public String inviteRequest;

    public AdminAccount withInviteRequest(String inviteRequest) {
        this.inviteRequest = inviteRequest;
        return this;
    }
    
    /**
     * The ID of the account that invited this user. Cast from an integer, but not guaranteed to be a number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invited_by_account_id")
    public String invitedByAccountId;

    public AdminAccount withInvitedByAccountId(String invitedByAccountId) {
        this.invitedByAccountId = invitedByAccountId;
        return this;
    }
    
    /**
     * The IP address last used to login to this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;

    public AdminAccount withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * The locale of the account. ISO 639 Part 1 two-letter language code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public String locale;

    public AdminAccount withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * The current role of the account. Enumerable oneOf.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public String role;

    public AdminAccount withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * Whether the account is currently silenced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("silenced")
    public Boolean silenced;

    public AdminAccount withSilenced(Boolean silenced) {
        this.silenced = silenced;
        return this;
    }
    
    /**
     * Whether the account is currently suspended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspended")
    public Boolean suspended;

    public AdminAccount withSuspended(Boolean suspended) {
        this.suspended = suspended;
        return this;
    }
    
    /**
     * The username of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public AdminAccount withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public AdminAccount(){}
}
