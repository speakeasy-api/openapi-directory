/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateMemberRequestBody - Create a Member in invite state 
 */
public class CreateMemberRequestBody {
    /**
     * Invite or join a member to a conversation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public org.openapis.openapi.models.shared.MemberActionEnum action;

    public CreateMemberRequestBody withAction(org.openapis.openapi.models.shared.MemberActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`
     */
    @JsonProperty("channel")
    public org.openapis.openapi.models.shared.Channel channel;

    public CreateMemberRequestBody withChannel(org.openapis.openapi.models.shared.Channel channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Knocker ID. A knocker is a pre-member of a conversation who does not exist yet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("knocking_id")
    public String knockingId;

    public CreateMemberRequestBody withKnockingId(String knockingId) {
        this.knockingId = knockingId;
        return this;
    }
    
    /**
     * Media Object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media")
    public java.util.Map<String, Object> media;

    public CreateMemberRequestBody withMedia(java.util.Map<String, Object> media) {
        this.media = media;
        return this;
    }
    
    /**
     * Member ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("member_id")
    public String memberId;

    public CreateMemberRequestBody withMemberId(String memberId) {
        this.memberId = memberId;
        return this;
    }
    
    /**
     * Member ID of the member that sends the invitation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("member_id_inviting")
    public String memberIdInviting;

    public CreateMemberRequestBody withMemberIdInviting(String memberIdInviting) {
        this.memberIdInviting = memberIdInviting;
        return this;
    }
    
    /**
     * User ID
     */
    @JsonProperty("user_id")
    public String userId;

    public CreateMemberRequestBody withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public CreateMemberRequestBody(@JsonProperty("channel") org.openapis.openapi.models.shared.Channel channel, @JsonProperty("user_id") String userId) {
        this.channel = channel;
        this.userId = userId;
  }
}
