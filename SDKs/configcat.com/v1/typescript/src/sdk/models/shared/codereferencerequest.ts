/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FlagReference } from "./flagreference";
import { Expose, Type } from "class-transformer";

export class CodeReferenceRequest extends SpeakeasyBase {
  /**
   * The currently active branches of the repository. Each previously uploaded report that belongs to a non-reported active branch is being deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activeBranches" })
  activeBranches?: string[];

  /**
   * The source control branch on where the scan was performed. (Source of the branch selector on the ConfigCat Dashboard)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "branch" })
  branch: string;

  /**
   * The related commit's hash. (Appears on the ConfigCat Dashboard)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitHash" })
  commitHash?: string;

  /**
   * The related commit's URL. (Appears on the ConfigCat Dashboard)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitUrl" })
  commitUrl?: string;

  /**
   * The Config's identifier the scanning was performed against.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configId" })
  configId: string;

  /**
   * The actual code reference collection.
   */
  @SpeakeasyMetadata({ elemType: FlagReference })
  @Expose({ name: "flagReferences" })
  @Type(() => FlagReference)
  flagReferences?: FlagReference[];

  /**
   * The source control repository that contains the scanned code. (Source of the repository selector on the ConfigCat Dashboard)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository: string;

  /**
   * The scanning tool's name. (Appears on the ConfigCat Dashboard)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploader" })
  uploader?: string;
}
