// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum string

const (
	PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnumConfidential PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum = "confidential"
	PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnumRegular      PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum = "regular"
	PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnumPublic       PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum = "public"
)

func (e PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum) ToPointer() *PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum {
	return &e
}

func (e *PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum: %v", v)
	}
}

// PatchSpacesSpaceIDFoldersIDRequestBody - Folder to modify (except Name, Class,ModificationDate and ArchivalDate)
type PatchSpacesSpaceIDFoldersIDRequestBody struct {
	About    *string                                          `json:"About,omitempty"`
	Home     *bool                                            `json:"Home,omitempty"`
	Keywords []string                                         `json:"Keywords,omitempty"`
	Level    *PatchSpacesSpaceIDFoldersIDRequestBodyLevelEnum `json:"Level,omitempty"`
}

type PatchSpacesSpaceIDFoldersIDRequest struct {
	// Folder to modify (except Name, Class,ModificationDate and ArchivalDate)
	RequestBody PatchSpacesSpaceIDFoldersIDRequestBody `request:"mediaType=application/json"`
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
