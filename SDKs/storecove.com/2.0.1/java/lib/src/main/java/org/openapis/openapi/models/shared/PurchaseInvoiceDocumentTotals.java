/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PurchaseInvoiceDocumentTotals {
    /**
     * The total invoice amount payable including tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payable")public Double payable;
    public PurchaseInvoiceDocumentTotals withPayable(Double payable) {
        this.payable = payable;
        return this;
    }
    
    /**
     * The amount already paid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prepaid")public Double prepaid;
    public PurchaseInvoiceDocumentTotals withPrepaid(Double prepaid) {
        this.prepaid = prepaid;
        return this;
    }
    
    /**
     * The difference between the payable amount and the total invoice amount including tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rounding")public Double rounding;
    public PurchaseInvoiceDocumentTotals withRounding(Double rounding) {
        this.rounding = rounding;
        return this;
    }
    
    /**
     * The total invoice amount, including tax. This is equal to the sum of the invoice_lines (amount_excluding_tax + tax.amount) and the allowances and charges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")public Double total;
    public PurchaseInvoiceDocumentTotals withTotal(Double total) {
        this.total = total;
        return this;
    }
    
}
