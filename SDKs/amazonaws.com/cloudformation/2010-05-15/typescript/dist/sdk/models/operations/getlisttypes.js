"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETListTypesResponse = exports.GETListTypesRequest = exports.GETListTypesVisibilityEnum = exports.GETListTypesVersionEnum = exports.GETListTypesTypeEnum = exports.GETListTypesProvisioningTypeEnum = exports.GETListTypesFilters = exports.GETListTypesDeprecatedStatusEnum = exports.GETListTypesActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var GETListTypesActionEnum;
(function (GETListTypesActionEnum) {
    GETListTypesActionEnum["ListTypes"] = "ListTypes";
})(GETListTypesActionEnum = exports.GETListTypesActionEnum || (exports.GETListTypesActionEnum = {}));
/**
 * <p>The deprecation status of the extension that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The extension is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The extension has been deregistered and can no longer be used in CloudFormation operations.</p> </li> </ul>
 */
var GETListTypesDeprecatedStatusEnum;
(function (GETListTypesDeprecatedStatusEnum) {
    GETListTypesDeprecatedStatusEnum["Live"] = "LIVE";
    GETListTypesDeprecatedStatusEnum["Deprecated"] = "DEPRECATED";
})(GETListTypesDeprecatedStatusEnum = exports.GETListTypesDeprecatedStatusEnum || (exports.GETListTypesDeprecatedStatusEnum = {}));
/**
 * Filter criteria to use in determining which extensions to return.
 */
var GETListTypesFilters = /** @class */ (function (_super) {
    __extends(GETListTypesFilters, _super);
    function GETListTypesFilters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Category" }),
        __metadata("design:type", String)
    ], GETListTypesFilters.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=PublisherId" }),
        __metadata("design:type", String)
    ], GETListTypesFilters.prototype, "publisherId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=TypeNamePrefix" }),
        __metadata("design:type", String)
    ], GETListTypesFilters.prototype, "typeNamePrefix", void 0);
    return GETListTypesFilters;
}(utils_1.SpeakeasyBase));
exports.GETListTypesFilters = GETListTypesFilters;
/**
 * <p>For resource types, the provisioning behavior of the resource type. CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The resource type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The resource type doesn't include an update handler, so the type can't be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The resource type doesn't include create, read, and delete handlers, and therefore can't actually be provisioned.</p> </li> </ul> <p>The default is <code>FULLY_MUTABLE</code>.</p>
 */
var GETListTypesProvisioningTypeEnum;
(function (GETListTypesProvisioningTypeEnum) {
    GETListTypesProvisioningTypeEnum["NonProvisionable"] = "NON_PROVISIONABLE";
    GETListTypesProvisioningTypeEnum["Immutable"] = "IMMUTABLE";
    GETListTypesProvisioningTypeEnum["FullyMutable"] = "FULLY_MUTABLE";
})(GETListTypesProvisioningTypeEnum = exports.GETListTypesProvisioningTypeEnum || (exports.GETListTypesProvisioningTypeEnum = {}));
/**
 * The type of extension.
 */
var GETListTypesTypeEnum;
(function (GETListTypesTypeEnum) {
    GETListTypesTypeEnum["Resource"] = "RESOURCE";
    GETListTypesTypeEnum["Module"] = "MODULE";
    GETListTypesTypeEnum["Hook"] = "HOOK";
})(GETListTypesTypeEnum = exports.GETListTypesTypeEnum || (exports.GETListTypesTypeEnum = {}));
var GETListTypesVersionEnum;
(function (GETListTypesVersionEnum) {
    GETListTypesVersionEnum["TwoThousandAndTen0515"] = "2010-05-15";
})(GETListTypesVersionEnum = exports.GETListTypesVersionEnum || (exports.GETListTypesVersionEnum = {}));
/**
 * <p>The scope at which the extensions are visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: Extensions that are visible and usable within this account and region. This includes:</p> <ul> <li> <p>Private extensions you have registered in this account and region.</p> </li> <li> <p>Public extensions that you have activated in this account and region.</p> </li> </ul> </li> <li> <p> <code>PUBLIC</code>: Extensions that are publicly visible and available to be activated within any Amazon Web Services account. This includes extensions from Amazon Web Services, in addition to third-party publishers.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p>
 */
var GETListTypesVisibilityEnum;
(function (GETListTypesVisibilityEnum) {
    GETListTypesVisibilityEnum["Public"] = "PUBLIC";
    GETListTypesVisibilityEnum["Private"] = "PRIVATE";
})(GETListTypesVisibilityEnum = exports.GETListTypesVisibilityEnum || (exports.GETListTypesVisibilityEnum = {}));
var GETListTypesRequest = /** @class */ (function (_super) {
    __extends(GETListTypesRequest, _super);
    function GETListTypesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DeprecatedStatus",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "deprecatedStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Filters",
        }),
        __metadata("design:type", GETListTypesFilters)
    ], GETListTypesRequest.prototype, "filters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MaxResults",
        }),
        __metadata("design:type", Number)
    ], GETListTypesRequest.prototype, "maxResults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=NextToken",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "nextToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ProvisioningType",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "provisioningType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=Type" }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Visibility",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "visibility", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETListTypesRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETListTypesRequest;
}(utils_1.SpeakeasyBase));
exports.GETListTypesRequest = GETListTypesRequest;
var GETListTypesResponse = /** @class */ (function (_super) {
    __extends(GETListTypesResponse, _super);
    function GETListTypesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETListTypesResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETListTypesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETListTypesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETListTypesResponse.prototype, "rawResponse", void 0);
    return GETListTypesResponse;
}(utils_1.SpeakeasyBase));
exports.GETListTypesResponse = GETListTypesResponse;
