// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CLMLanguageCodeEnum string

const (
	CLMLanguageCodeEnumEnUs CLMLanguageCodeEnum = "en-US"
	CLMLanguageCodeEnumHiIn CLMLanguageCodeEnum = "hi-IN"
	CLMLanguageCodeEnumEsUs CLMLanguageCodeEnum = "es-US"
	CLMLanguageCodeEnumEnGb CLMLanguageCodeEnum = "en-GB"
	CLMLanguageCodeEnumEnAu CLMLanguageCodeEnum = "en-AU"
	CLMLanguageCodeEnumDeDe CLMLanguageCodeEnum = "de-DE"
	CLMLanguageCodeEnumJaJp CLMLanguageCodeEnum = "ja-JP"
)

func (e CLMLanguageCodeEnum) ToPointer() *CLMLanguageCodeEnum {
	return &e
}

func (e *CLMLanguageCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en-US":
		fallthrough
	case "hi-IN":
		fallthrough
	case "es-US":
		fallthrough
	case "en-GB":
		fallthrough
	case "en-AU":
		fallthrough
	case "de-DE":
		fallthrough
	case "ja-JP":
		*e = CLMLanguageCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CLMLanguageCodeEnum: %v", v)
	}
}
