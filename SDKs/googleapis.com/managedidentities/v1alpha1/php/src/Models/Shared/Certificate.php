<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Certificate - Certificate used to configure LDAPS.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Certificate
{
    /**
     * The certificate expire time.
     * 
     * @var ?string $expireTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expireTime = null;
    
    /**
     * Certificate used to configure LDAPS.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Certificate $issuingCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuingCertificate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Certificate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Certificate $issuingCertificate = null;
    
    /**
     * The certificate subject.
     * 
     * @var ?string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subject = null;
    
    /**
     * The additional hostnames for the domain.
     * 
     * @var ?array<string> $subjectAlternativeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectAlternativeName')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subjectAlternativeName = null;
    
    /**
     * The certificate thumbprint which uniquely identifies the certificate.
     * 
     * @var ?string $thumbprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $thumbprint = null;
    
	public function __construct()
	{
		$this->expireTime = null;
		$this->issuingCertificate = null;
		$this->subject = null;
		$this->subjectAlternativeName = null;
		$this->thumbprint = null;
	}
}
