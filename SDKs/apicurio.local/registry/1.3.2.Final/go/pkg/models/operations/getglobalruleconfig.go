// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetGlobalRuleConfigRuleEnum - The unique name/type of a rule.
type GetGlobalRuleConfigRuleEnum string

const (
	GetGlobalRuleConfigRuleEnumValidity      GetGlobalRuleConfigRuleEnum = "VALIDITY"
	GetGlobalRuleConfigRuleEnumCompatibility GetGlobalRuleConfigRuleEnum = "COMPATIBILITY"
)

func (e *GetGlobalRuleConfigRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALIDITY":
		fallthrough
	case "COMPATIBILITY":
		*e = GetGlobalRuleConfigRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGlobalRuleConfigRuleEnum: %s", s)
	}
}

type GetGlobalRuleConfigRequest struct {
	// The unique name/type of a rule.
	Rule GetGlobalRuleConfigRuleEnum `pathParam:"style=simple,explode=false,name=rule"`
}

type GetGlobalRuleConfigResponse struct {
	ContentType string
	// Common response for all operations that can return a `404` error.
	Error *shared.Error
	// The global rule's configuration.
	Rule        *shared.Rule
	StatusCode  int
	RawResponse *http.Response
}
