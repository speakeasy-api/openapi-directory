/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAnalyticsAdminV1betaAccessFilterExpression - Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
 */
public class GoogleAnalyticsAdminV1betaAccessFilterExpression {
    /**
     * An expression to filter dimension or metric values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessFilter")
    public GoogleAnalyticsAdminV1betaAccessFilter accessFilter;
    public GoogleAnalyticsAdminV1betaAccessFilterExpression withAccessFilter(GoogleAnalyticsAdminV1betaAccessFilter accessFilter) {
        this.accessFilter = accessFilter;
        return this;
    }
    
    /**
     * A list of filter expressions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("andGroup")
    public GoogleAnalyticsAdminV1betaAccessFilterExpressionList andGroup;
    public GoogleAnalyticsAdminV1betaAccessFilterExpression withAndGroup(GoogleAnalyticsAdminV1betaAccessFilterExpressionList andGroup) {
        this.andGroup = andGroup;
        return this;
    }
    
    /**
     * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notExpression")
    public GoogleAnalyticsAdminV1betaAccessFilterExpression notExpression;
    public GoogleAnalyticsAdminV1betaAccessFilterExpression withNotExpression(GoogleAnalyticsAdminV1betaAccessFilterExpression notExpression) {
        this.notExpression = notExpression;
        return this;
    }
    
    /**
     * A list of filter expressions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orGroup")
    public GoogleAnalyticsAdminV1betaAccessFilterExpressionList orGroup;
    public GoogleAnalyticsAdminV1betaAccessFilterExpression withOrGroup(GoogleAnalyticsAdminV1betaAccessFilterExpressionList orGroup) {
        this.orGroup = orGroup;
        return this;
    }
    
}
