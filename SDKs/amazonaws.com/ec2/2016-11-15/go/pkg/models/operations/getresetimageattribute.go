// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResetImageAttributeActionEnum
type GETResetImageAttributeActionEnum string

const (
	GETResetImageAttributeActionEnumResetImageAttribute GETResetImageAttributeActionEnum = "ResetImageAttribute"
)

func (e *GETResetImageAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ResetImageAttribute":
		*e = GETResetImageAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetImageAttributeActionEnum: %s", s)
	}
}

// GETResetImageAttributeAttributeEnum - The attribute to reset (currently you can only reset the launch permission attribute).
type GETResetImageAttributeAttributeEnum string

const (
	GETResetImageAttributeAttributeEnumLaunchPermission GETResetImageAttributeAttributeEnum = "launchPermission"
)

func (e *GETResetImageAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "launchPermission":
		*e = GETResetImageAttributeAttributeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetImageAttributeAttributeEnum: %s", s)
	}
}

// GETResetImageAttributeVersionEnum
type GETResetImageAttributeVersionEnum string

const (
	GETResetImageAttributeVersionEnumTwoThousandAndSixteen1115 GETResetImageAttributeVersionEnum = "2016-11-15"
)

func (e *GETResetImageAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETResetImageAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetImageAttributeVersionEnum: %s", s)
	}
}

type GETResetImageAttributeQueryParams struct {
	Action GETResetImageAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The attribute to reset (currently you can only reset the launch permission attribute).
	Attribute GETResetImageAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the AMI.
	ImageID string                            `queryParam:"style=form,explode=true,name=ImageId"`
	Version GETResetImageAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETResetImageAttributeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResetImageAttributeRequest struct {
	QueryParams GETResetImageAttributeQueryParams
	Headers     GETResetImageAttributeHeaders
}

type GETResetImageAttributeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
