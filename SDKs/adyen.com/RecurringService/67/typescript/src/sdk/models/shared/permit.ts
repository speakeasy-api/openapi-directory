/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PermitRestriction } from "./permitrestriction";
import { Expose, Transform, Type } from "class-transformer";

export class Permit extends SpeakeasyBase {
  /**
   * Partner ID (when using the permit-per-partner token sharing model).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partnerId" })
  partnerId?: string;

  /**
   * The profile to apply to this permit (when using the shared permits model).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileReference" })
  profileReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "restriction" })
  @Type(() => PermitRestriction)
  restriction?: PermitRestriction;

  /**
   * The key to link permit requests to permit results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultKey" })
  resultKey?: string;

  /**
   * The expiry date for this permit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validTillDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validTillDate?: Date;
}
