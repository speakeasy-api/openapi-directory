/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeValueList } from "./attributevaluelist";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A conditional statement with which to compare a value, after a timestamp, before a timestamp, or equal to a string or integer. If multiple conditions are specified, the conditionals become an <code>AND</code>ed statement. If multiple values are specified for a conditional, the values are <code>OR</code>d.
 */
export class Condition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "after" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  after?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "before" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  before?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "equals" })
  @Type(() => AttributeValueList)
  equals?: AttributeValueList;
}
