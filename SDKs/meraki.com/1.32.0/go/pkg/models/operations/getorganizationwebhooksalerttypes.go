// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOrganizationWebhooksAlertTypesProductTypeEnum - Filter sample alerts to a specific product type
type GetOrganizationWebhooksAlertTypesProductTypeEnum string

const (
	GetOrganizationWebhooksAlertTypesProductTypeEnumAppliance       GetOrganizationWebhooksAlertTypesProductTypeEnum = "appliance"
	GetOrganizationWebhooksAlertTypesProductTypeEnumCamera          GetOrganizationWebhooksAlertTypesProductTypeEnum = "camera"
	GetOrganizationWebhooksAlertTypesProductTypeEnumCellularGateway GetOrganizationWebhooksAlertTypesProductTypeEnum = "cellularGateway"
	GetOrganizationWebhooksAlertTypesProductTypeEnumHealth          GetOrganizationWebhooksAlertTypesProductTypeEnum = "health"
	GetOrganizationWebhooksAlertTypesProductTypeEnumPlatform        GetOrganizationWebhooksAlertTypesProductTypeEnum = "platform"
	GetOrganizationWebhooksAlertTypesProductTypeEnumSensor          GetOrganizationWebhooksAlertTypesProductTypeEnum = "sensor"
	GetOrganizationWebhooksAlertTypesProductTypeEnumSm              GetOrganizationWebhooksAlertTypesProductTypeEnum = "sm"
	GetOrganizationWebhooksAlertTypesProductTypeEnumSwitch          GetOrganizationWebhooksAlertTypesProductTypeEnum = "switch"
	GetOrganizationWebhooksAlertTypesProductTypeEnumWireless        GetOrganizationWebhooksAlertTypesProductTypeEnum = "wireless"
)

func (e GetOrganizationWebhooksAlertTypesProductTypeEnum) ToPointer() *GetOrganizationWebhooksAlertTypesProductTypeEnum {
	return &e
}

func (e *GetOrganizationWebhooksAlertTypesProductTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "appliance":
		fallthrough
	case "camera":
		fallthrough
	case "cellularGateway":
		fallthrough
	case "health":
		fallthrough
	case "platform":
		fallthrough
	case "sensor":
		fallthrough
	case "sm":
		fallthrough
	case "switch":
		fallthrough
	case "wireless":
		*e = GetOrganizationWebhooksAlertTypesProductTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationWebhooksAlertTypesProductTypeEnum: %v", v)
	}
}

type GetOrganizationWebhooksAlertTypesRequest struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
	// Filter sample alerts to a specific product type
	ProductType *GetOrganizationWebhooksAlertTypesProductTypeEnum `queryParam:"style=form,explode=true,name=productType"`
}

type GetOrganizationWebhooksAlertTypesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationWebhooksAlertTypes200ApplicationJSONObjects []map[string]interface{}
}
