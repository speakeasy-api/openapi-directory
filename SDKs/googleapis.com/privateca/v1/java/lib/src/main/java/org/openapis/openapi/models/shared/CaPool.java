/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CaPool - A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the trust anchor.
 */
public class CaPool {
    /**
     * Defines controls over all certificate issuance within a CaPool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuancePolicy")
    public IssuancePolicy issuancePolicy;
    public CaPool withIssuancePolicy(IssuancePolicy issuancePolicy) {
        this.issuancePolicy = issuancePolicy;
        return this;
    }
    
    /**
     * Optional. Labels with user-defined metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public CaPool withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The resource name for this CaPool in the format `projects/* /locations/* /caPools/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CaPool withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Options relating to the publication of each CertificateAuthority's CA certificate and CRLs and their inclusion as extensions in issued Certificates. The options set here apply to certificates issued by any CertificateAuthority in the CaPool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publishingOptions")
    public PublishingOptions publishingOptions;
    public CaPool withPublishingOptions(PublishingOptions publishingOptions) {
        this.publishingOptions = publishingOptions;
        return this;
    }
    
    /**
     * Required. Immutable. The Tier of this CaPool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tier")
    public CaPoolTierEnum tier;
    public CaPool withTier(CaPoolTierEnum tier) {
        this.tier = tier;
        return this;
    }
    
}
