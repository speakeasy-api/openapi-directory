/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class KeyLogsRequest extends SpeakeasyBase {
  /**
   * An end date/time in the form of a UNIX Timestamp in milliseconds, e.g. `1418556452651`. If no end time is provided, the current time will be used.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=end" })
  end?: number;

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=key" })
  key: string;

  /**
   * Sublicensed keys only. This will restrict the analysed dataset to a specific licensee.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=licensee",
  })
  licensee?: string;

  /**
   * An start date/time in the form of a UNIX Timestamp in milliseconds, e.g. `1418556452651`. If no start time is provided, the start time will be assigned to a time 21 days prior to the end time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=start",
  })
  start?: number;
}

export class KeyLogsResponse extends SpeakeasyBase {
  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  badRequestResponse?: shared.BadRequestResponse;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  keyLogs200TextCsvString?: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
