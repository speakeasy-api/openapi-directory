/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK
 */
export class TokenResponse extends SpeakeasyBase {
  /**
   * The generated token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken?: string;

  /**
   * The number of seconds until the token expires.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_in" })
  expiresIn?: number;

  /**
   * A globally unique identifier for the token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jti" })
  jti?: string;

  /**
   * A space-delimited list of scopes that the token can be used to access.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * The type of token that was generated, i.e., `bearer`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token_type" })
  tokenType?: string;
}
