"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StateHistoryStateEnum(str, Enum):
    r"""The workflow pipeline stage."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    CREATED = 'CREATED'
    TURNED_IN = 'TURNED_IN'
    RETURNED = 'RETURNED'
    RECLAIMED_BY_STUDENT = 'RECLAIMED_BY_STUDENT'
    STUDENT_EDITED_AFTER_TURN_IN = 'STUDENT_EDITED_AFTER_TURN_IN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StateHistory:
    r"""The history of each state this submission has been in."""
    
    actor_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actorUserId'), 'exclude': lambda f: f is None }})
    r"""The teacher or student who made the change."""  
    state: Optional[StateHistoryStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The workflow pipeline stage."""  
    state_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateTimestamp'), 'exclude': lambda f: f is None }})
    r"""When the submission entered this state."""  
    