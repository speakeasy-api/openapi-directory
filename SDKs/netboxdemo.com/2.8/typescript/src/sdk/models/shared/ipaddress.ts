/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IPAddressInterface } from "./ipaddressinterface";
import { NestedIPAddress } from "./nestedipaddress";
import { NestedTenant } from "./nestedtenant";
import { NestedVRF } from "./nestedvrf";
import { Expose, Transform, Type } from "class-transformer";

export enum IPAddressFamilyLabelEnum {
  IPv4 = "IPv4",
  IPv6 = "IPv6",
}

export enum IPAddressFamilyValueEnum {
  Four = "4",
  Six = "6",
}

export class IPAddressFamily extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: IPAddressFamilyLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: IPAddressFamilyValueEnum;
}

export enum IPAddressRoleLabelEnum {
  Loopback = "Loopback",
  Secondary = "Secondary",
  Anycast = "Anycast",
  Vip = "VIP",
  Vrrp = "VRRP",
  Hsrp = "HSRP",
  Glbp = "GLBP",
  Carp = "CARP",
}

export enum IPAddressRoleValueEnum {
  Loopback = "loopback",
  Secondary = "secondary",
  Anycast = "anycast",
  Vip = "vip",
  Vrrp = "vrrp",
  Hsrp = "hsrp",
  Glbp = "glbp",
  Carp = "carp",
}

export class IPAddressRole extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: IPAddressRoleLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: IPAddressRoleValueEnum;
}

export enum IPAddressStatusLabelEnum {
  Active = "Active",
  Reserved = "Reserved",
  Deprecated = "Deprecated",
  Dhcp = "DHCP",
}

export enum IPAddressStatusValueEnum {
  Active = "active",
  Reserved = "reserved",
  Deprecated = "deprecated",
  Dhcp = "dhcp",
}

export class IPAddressStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: IPAddressStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: IPAddressStatusValueEnum;
}

export class IPAddress extends SpeakeasyBase {
  /**
   * IPv4 or IPv6 address (with mask)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Hostname or FQDN (not case-sensitive)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dns_name" })
  dnsName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "family" })
  @Type(() => IPAddressFamily)
  family?: IPAddressFamily;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "interface" })
  @Type(() => IPAddressInterface)
  interface?: IPAddressInterface;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "nat_inside" })
  @Type(() => NestedIPAddress)
  natInside?: NestedIPAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "nat_outside" })
  @Type(() => NestedIPAddress)
  natOutside?: NestedIPAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => IPAddressRole)
  role?: IPAddressRole;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => IPAddressStatus)
  status?: IPAddressStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "vrf" })
  @Type(() => NestedVRF)
  vrf?: NestedVRF;
}
