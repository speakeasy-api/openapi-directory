/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class AdsensehostAssociationsessionsStartSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export enum AdsensehostAssociationsessionsStartProductCodeEnum {
  Afc = "AFC",
  Afg = "AFG",
  Afmc = "AFMC",
  Afs = "AFS",
  Afv = "AFV",
}

export class AdsensehostAssociationsessionsStartRequest extends SpeakeasyBase {
  /**
   * Data format for the response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * The URL to redirect the user to once association is completed. It receives a token parameter that can then be used to retrieve the associated account.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callbackUrl",
  })
  callbackUrl?: string;

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Products to associate with the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=productCode",
  })
  productCode: AdsensehostAssociationsessionsStartProductCodeEnum[];

  /**
   * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * Deprecated. Please use quotaUser instead.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userIp",
  })
  userIp?: string;

  /**
   * The preferred locale of the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userLocale",
  })
  userLocale?: string;

  /**
   * The locale of the user's hosted website.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=websiteLocale",
  })
  websiteLocale?: string;

  /**
   * The URL of the user's hosted website.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=websiteUrl",
  })
  websiteUrl: string;
}

export class AdsensehostAssociationsessionsStartResponse extends SpeakeasyBase {
  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  associationSession?: shared.AssociationSession;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
