/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ReportSignInSignOutActivitiesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ReportSignInSignOutActivitiesRequest extends SpeakeasyBase {
  /**
   * Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from?: Date;

  /**
   * Next page token is used to paginate through large result sets
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records to be returned within a single API call
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * End date up to which you would like to view the activity logs report.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to?: Date;
}

export class ReportSignInSignOutActivities200ApplicationXMLActivityLogs extends SpeakeasyBase {
  /**
   * The client interface type using which the activity was performed.
   */
  @SpeakeasyMetadata()
  clientType?: string;

  /**
   * Email address of the user used for the activity.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * The IP address of the user's device.
   */
  @SpeakeasyMetadata()
  ipAddress?: string;

  /**
   * Time during which the activity occurred.
   */
  @SpeakeasyMetadata()
  time?: Date;

  /**
   * The type of activity: <br>`Sign in`: Sign in activity by user.<br>`Sign out`: Sign out activity by user.
   */
  @SpeakeasyMetadata()
  type?: string;

  /**
   * Zoom client version of the user.
   */
  @SpeakeasyMetadata()
  version?: string;
}

/**
 * Report object
 */
export class ReportSignInSignOutActivities200ApplicationXML extends SpeakeasyBase {
  /**
   * Array of activity logs.
   */
  @SpeakeasyMetadata({
    elemType: ReportSignInSignOutActivities200ApplicationXMLActivityLogs,
  })
  activityLogs?: ReportSignInSignOutActivities200ApplicationXMLActivityLogs[];

  /**
   * Start date from which you want the activity logs report to be generated.
   */
  @SpeakeasyMetadata()
  from?: string;

  /**
   * Next page token is used to paginate through large result sets.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: string;

  /**
   * End date until which you want the activity logs report to be generated
   */
  @SpeakeasyMetadata()
  to?: string;
}

export class ReportSignInSignOutActivities200ApplicationJSONActivityLogs extends SpeakeasyBase {
  /**
   * The client interface type using which the activity was performed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_type" })
  clientType?: string;

  /**
   * Email address of the user used for the activity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The IP address of the user's device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip_address" })
  ipAddress?: string;

  /**
   * Time during which the activity occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * The type of activity: <br>`Sign in`: Sign in activity by user.<br>`Sign out`: Sign out activity by user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Zoom client version of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

/**
 * Report object
 */
export class ReportSignInSignOutActivities200ApplicationJSON extends SpeakeasyBase {
  /**
   * Array of activity logs.
   */
  @SpeakeasyMetadata({
    elemType: ReportSignInSignOutActivities200ApplicationJSONActivityLogs,
  })
  @Expose({ name: "activity_logs" })
  @Type(() => ReportSignInSignOutActivities200ApplicationJSONActivityLogs)
  activityLogs?: ReportSignInSignOutActivities200ApplicationJSONActivityLogs[];

  /**
   * Start date from which you want the activity logs report to be generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * Next page token is used to paginate through large result sets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: string;

  /**
   * End date until which you want the activity logs report to be generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;
}

export class ReportSignInSignOutActivitiesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Success
   */
  @SpeakeasyMetadata()
  reportSignInSignOutActivities200ApplicationJSONObject?: ReportSignInSignOutActivities200ApplicationJSON;
}
