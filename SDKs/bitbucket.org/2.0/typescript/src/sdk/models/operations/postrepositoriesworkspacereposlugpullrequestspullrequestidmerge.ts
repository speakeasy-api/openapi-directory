/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIdMergeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey?: string;

  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;
}

export class PostRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIdMergeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: Record<string, any>;

  /**
   * Default value is false.
   *
   * @remarks
   *
   *
   * When set to true, runs merge asynchronously and
   * immediately returns a 202 with polling link to
   * the task-status API in the Location header.
   *
   *
   * When set to false, runs merge and waits for it to
   * complete, returning 200 when it succeeds. If the
   * duration of the merge exceeds a timeout threshold,
   * the API returns a 202 with polling link to the
   * task-status API in the Location header.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=async" })
  async?: boolean;

  /**
   * The id of the pull request.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pull_request_id",
  })
  pullRequestId: number;

  /**
   * This can either be the repository slug or the UUID of the repository,
   *
   * @remarks
   * surrounded by curly-braces, for example: `{repository UUID}`.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo_slug",
  })
  repoSlug: string;

  /**
   * This can either be the workspace ID (slug) or the workspace UUID
   *
   * @remarks
   * surrounded by curly-braces, for example: `{workspace UUID}`.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=workspace",
  })
  workspace: string;
}

export class PostRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIdMergeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * If the merge took too long and timed out.
   *
   * @remarks
   * In this case the caller should retry the request later
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * The pull request object.
   */
  @SpeakeasyMetadata()
  pullrequest?: Record<string, any>;
}
