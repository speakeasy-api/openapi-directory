// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PolicyScopeEnumEnum - Scope of a policy.
type PolicyScopeEnumEnum string

const (
	PolicyScopeEnumEnumPolicyScopeUnknown PolicyScopeEnumEnum = "POLICY_SCOPE_UNKNOWN"
	PolicyScopeEnumEnumNode               PolicyScopeEnumEnum = "NODE"
	PolicyScopeEnumEnumCluster            PolicyScopeEnumEnum = "CLUSTER"
	PolicyScopeEnumEnumChassis            PolicyScopeEnumEnum = "CHASSIS"
)

func (e PolicyScopeEnumEnum) ToPointer() *PolicyScopeEnumEnum {
	return &e
}

func (e *PolicyScopeEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POLICY_SCOPE_UNKNOWN":
		fallthrough
	case "NODE":
		fallthrough
	case "CLUSTER":
		fallthrough
	case "CHASSIS":
		*e = PolicyScopeEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyScopeEnumEnum: %v", v)
	}
}
