// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PollVotingStatusEnum string

const (
	PollVotingStatusEnumOpen   PollVotingStatusEnum = "open"
	PollVotingStatusEnumClosed PollVotingStatusEnum = "closed"
)

func (e *PollVotingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "open":
		fallthrough
	case "closed":
		*e = PollVotingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PollVotingStatusEnum: %s", s)
	}
}

// Poll - Represent a Poll attached to a Tweet
type Poll struct {
	DurationMinutes *int64    `json:"duration_minutes,omitempty"`
	EndDatetime     time.Time `json:"end_datetime"`
	// Unique identifier of this poll.
	ID           string               `json:"id"`
	Options      []PollOption         `json:"options"`
	VotingStatus PollVotingStatusEnum `json:"voting_status"`
}
