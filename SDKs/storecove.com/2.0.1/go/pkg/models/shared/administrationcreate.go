// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AdministrationCreatePackageVersionEnum - The version of the package.
type AdministrationCreatePackageVersionEnum string

const (
	AdministrationCreatePackageVersionEnumPeppolBisV3 AdministrationCreatePackageVersionEnum = "peppol_bis_v3"
)

func (e *AdministrationCreatePackageVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "peppol_bis_v3":
		*e = AdministrationCreatePackageVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdministrationCreatePackageVersionEnum: %s", s)
	}
}

// AdministrationCreatePackagingEnum - How to package the purchase invoice.
type AdministrationCreatePackagingEnum string

const (
	AdministrationCreatePackagingEnumUbl AdministrationCreatePackagingEnum = "ubl"
)

func (e *AdministrationCreatePackagingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ubl":
		*e = AdministrationCreatePackagingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdministrationCreatePackagingEnum: %s", s)
	}
}

// AdministrationCreate - Administration to create
type AdministrationCreate struct {
	// The email address to send the received document to
	Email *string `json:"email,omitempty"`
	// The LegalEntity the Administration belongs to.
	LegalEntityID *int64 `json:"legal_entity_id,omitempty"`
	// The version of the package.
	PackageVersion *AdministrationCreatePackageVersionEnum `json:"package_version,omitempty"`
	// How to package the purchase invoice.
	Packaging *AdministrationCreatePackagingEnum `json:"packaging,omitempty"`
	// The id of the SenderEmailIdentity. If not provided, the Storecove default sender will be used
	SenderEmailIdentityID *int64 `json:"sender_email_identity_id,omitempty"`
}
