/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RepositoryConfigurationsList200ApplicationJSON {
    /**
     * The external user id from the repository provider. Required for GitLab.com repositories
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_user_id")
    public String externalUserId;
    public RepositoryConfigurationsList200ApplicationJSON withExternalUserId(String externalUserId) {
        this.externalUserId = externalUserId;
        return this;
    }
    
    /**
     * Repository configuration identifier
     */
    @JsonProperty("id")
    public String id;
    public RepositoryConfigurationsList200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The GitHub App Installation id. Required for repositories connected from GitHub App
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("installation_id")
    public String installationId;
    public RepositoryConfigurationsList200ApplicationJSON withInstallationId(String installationId) {
        this.installationId = installationId;
        return this;
    }
    
    /**
     * The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repo_id")
    public String repoId;
    public RepositoryConfigurationsList200ApplicationJSON withRepoId(String repoId) {
        this.repoId = repoId;
        return this;
    }
    
    /**
     * The repository's git url, must be a HTTPS URL
     */
    @JsonProperty("repo_url")
    public String repoUrl;
    public RepositoryConfigurationsList200ApplicationJSON withRepoUrl(String repoUrl) {
        this.repoUrl = repoUrl;
        return this;
    }
    
    /**
     * The id of the service connection (private). Required for GitLab self-hosted repositories
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_connection_id")
    public String serviceConnectionId;
    public RepositoryConfigurationsList200ApplicationJSON withServiceConnectionId(String serviceConnectionId) {
        this.serviceConnectionId = serviceConnectionId;
        return this;
    }
    
    /**
     * State of the configuration
     */
    @JsonProperty("state")
    public RepositoryConfigurationsList200ApplicationJSONStateEnum state;
    public RepositoryConfigurationsList200ApplicationJSON withState(RepositoryConfigurationsList200ApplicationJSONStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Type of repository
     */
    @JsonProperty("type")
    public String type;
    public RepositoryConfigurationsList200ApplicationJSON withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Email of the user who linked the repository
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_email")
    public String userEmail;
    public RepositoryConfigurationsList200ApplicationJSON withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
}
