// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TimePeriodResponsePeriodEnum - The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.
type TimePeriodResponsePeriodEnum string

const (
	TimePeriodResponsePeriodEnumFy TimePeriodResponsePeriodEnum = "FY"
	TimePeriodResponsePeriodEnumH1 TimePeriodResponsePeriodEnum = "H1"
	TimePeriodResponsePeriodEnumH2 TimePeriodResponsePeriodEnum = "H2"
	TimePeriodResponsePeriodEnumQ1 TimePeriodResponsePeriodEnum = "Q1"
	TimePeriodResponsePeriodEnumQ2 TimePeriodResponsePeriodEnum = "Q2"
	TimePeriodResponsePeriodEnumQ3 TimePeriodResponsePeriodEnum = "Q3"
	TimePeriodResponsePeriodEnumQ4 TimePeriodResponsePeriodEnum = "Q4"
)

func (e *TimePeriodResponsePeriodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FY":
		fallthrough
	case "H1":
		fallthrough
	case "H2":
		fallthrough
	case "Q1":
		fallthrough
	case "Q2":
		fallthrough
	case "Q3":
		fallthrough
	case "Q4":
		*e = TimePeriodResponsePeriodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimePeriodResponsePeriodEnum: %s", s)
	}
}

// TimePeriodResponse - A generic Asana Resource, containing a globally unique identifier.
type TimePeriodResponse struct {
	// The localized end date of the time period in `YYYY-MM-DD` format.
	EndOn *string `json:"end_on,omitempty"`
	// Globally unique identifier of the resource, as a string.
	Gid    *string            `json:"gid,omitempty"`
	Parent *TimePeriodCompact `json:"parent,omitempty"`
	// The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.
	Period *TimePeriodResponsePeriodEnum `json:"period,omitempty"`
	// The base type of this resource.
	ResourceType *string `json:"resource_type,omitempty"`
	// The localized start date of the time period in `YYYY-MM-DD` format.
	StartOn *string `json:"start_on,omitempty"`
}
