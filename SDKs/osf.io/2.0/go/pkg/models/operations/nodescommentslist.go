// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type NodesCommentsListPathParams struct {
	// The unique identifier of the node.
	NodeID string `pathParam:"style=simple,explode=false,name=node_id"`
}

type NodesCommentsListRequest struct {
	PathParams NodesCommentsListPathParams
}

// NodesCommentsListCommentAttributes - The properties of the comment entity.
type NodesCommentsListCommentAttributes struct {
	// Whether or not the current user has permission to edit this comment
	CanEdit *bool
	// The content of the comment.
	Content *string
	// The time at which the comment was created, as an iso8601 formatted timestamp.
	DateCreated *time.Time
	// The time at which the comment was last modified, as an iso8601 formatted timestamp.
	DateModified *time.Time
	// Whether or not the comment is deleted.
	Deleted *bool
	// Whether or not the comment has replies.
	HasChildren *bool
	// Whether or not the comment the current user reported this as spam.
	HasReport *bool
	// Whether or not the comment is flagged or confirmed spam.
	IsAbuse *bool
	// Whether or not an admin checked the legitimacy of this comment.
	IsHam *bool
	// Whether or not the comment has been edited.
	Modified *bool
	// The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.
	Page *string
}

// NodesCommentsListCommentLinks - URLs to alternative representations of the comment entity.
type NodesCommentsListCommentLinks struct {
	// A link to the detail page for the comment.
	Self *string
}

// NodesCommentsListCommentRelationships - URLs to other entities or entity collections that have a relationship to the comment entity.
type NodesCommentsListCommentRelationships struct {
	// A relationship to the node the comment is on.
	Node *string
	// A relationship to the replies to the comment.
	Replies *string
	// A relationship to the reports connected to the comment.
	Reports *string
	// A relationship to the target of the comment.
	Target *string
	// A relationship to the user who created the comment.
	User *string
}

type NodesCommentsListComment struct {
	// The properties of the comment entity.
	Attributes *NodesCommentsListCommentAttributes
	// The identifier of the comment entity.
	ID string
	// URLs to alternative representations of the comment entity.
	Links *NodesCommentsListCommentLinks
	// URLs to other entities or entity collections that have a relationship to the comment entity.
	Relationships *NodesCommentsListCommentRelationships
	// The type identifier of the comment entity (`comments`).
	Type *string
}

type NodesCommentsListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
