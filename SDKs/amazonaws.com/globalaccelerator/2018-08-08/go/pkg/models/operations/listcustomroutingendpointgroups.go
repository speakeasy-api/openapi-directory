// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListCustomRoutingEndpointGroupsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListCustomRoutingEndpointGroupsXAmzTargetEnum
type ListCustomRoutingEndpointGroupsXAmzTargetEnum string

const (
	ListCustomRoutingEndpointGroupsXAmzTargetEnumGlobalAcceleratorV20180706ListCustomRoutingEndpointGroups ListCustomRoutingEndpointGroupsXAmzTargetEnum = "GlobalAccelerator_V20180706.ListCustomRoutingEndpointGroups"
)

func (e *ListCustomRoutingEndpointGroupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GlobalAccelerator_V20180706.ListCustomRoutingEndpointGroups":
		*e = ListCustomRoutingEndpointGroupsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCustomRoutingEndpointGroupsXAmzTargetEnum: %s", s)
	}
}

type ListCustomRoutingEndpointGroupsHeaders struct {
	XAmzAlgorithm     *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListCustomRoutingEndpointGroupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListCustomRoutingEndpointGroupsRequest struct {
	QueryParams ListCustomRoutingEndpointGroupsQueryParams
	Headers     ListCustomRoutingEndpointGroupsHeaders
	Request     shared.ListCustomRoutingEndpointGroupsRequest `request:"mediaType=application/json"`
}

type ListCustomRoutingEndpointGroupsResponse struct {
	ContentType string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListCustomRoutingEndpointGroupsResponse *shared.ListCustomRoutingEndpointGroupsResponse
	// ListenerNotFoundException
	ListenerNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
