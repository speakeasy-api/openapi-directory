// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type DefaultResponseDTOOfGymDTOResultType string

const (
	DefaultResponseDTOOfGymDTOResultTypeGymDTO DefaultResponseDTOOfGymDTOResultType = "GymDTO"
)

type DefaultResponseDTOOfGymDTOResult struct {
	GymDTO *GymDTO

	Type DefaultResponseDTOOfGymDTOResultType
}

func CreateDefaultResponseDTOOfGymDTOResultGymDTO(gymDTO GymDTO) DefaultResponseDTOOfGymDTOResult {
	typ := DefaultResponseDTOOfGymDTOResultTypeGymDTO

	return DefaultResponseDTOOfGymDTOResult{
		GymDTO: &gymDTO,
		Type:   typ,
	}
}

func (u *DefaultResponseDTOOfGymDTOResult) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	gymDTO := new(GymDTO)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&gymDTO); err == nil {
		u.GymDTO = gymDTO
		u.Type = DefaultResponseDTOOfGymDTOResultTypeGymDTO
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DefaultResponseDTOOfGymDTOResult) MarshalJSON() ([]byte, error) {
	if u.GymDTO != nil {
		return json.Marshal(u.GymDTO)
	}

	return nil, nil
}

// DefaultResponseDTOOfGymDTO - The DefaultResponseDTO Class.
// Contains fields of DefaultResponse DTO in application.
type DefaultResponseDTOOfGymDTO struct {
	IsError           *bool                             `json:"isError,omitempty"`
	Message           *string                           `json:"message,omitempty"`
	ResponseException interface{}                       `json:"responseException,omitempty"`
	Result            *DefaultResponseDTOOfGymDTOResult `json:"result,omitempty"`
}
