// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetParametersByPathXAmzTargetEnum
type GetParametersByPathXAmzTargetEnum string

const (
	GetParametersByPathXAmzTargetEnumAmazonSsmGetParametersByPath GetParametersByPathXAmzTargetEnum = "AmazonSSM.GetParametersByPath"
)

func (e GetParametersByPathXAmzTargetEnum) ToPointer() *GetParametersByPathXAmzTargetEnum {
	return &e
}

func (e *GetParametersByPathXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.GetParametersByPath":
		*e = GetParametersByPathXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetParametersByPathXAmzTargetEnum: %v", v)
	}
}

type GetParametersByPathRequest struct {
	GetParametersByPathRequest shared.GetParametersByPathRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                           `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetParametersByPathXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetParametersByPathResponse struct {
	ContentType string
	// Success
	GetParametersByPathResult *shared.GetParametersByPathResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidFilterKey
	InvalidFilterKey interface{}
	// InvalidFilterOption
	InvalidFilterOption interface{}
	// InvalidFilterValue
	InvalidFilterValue interface{}
	// InvalidKeyId
	InvalidKeyID interface{}
	// InvalidNextToken
	InvalidNextToken interface{}
	StatusCode       int
	RawResponse      *http.Response
}
