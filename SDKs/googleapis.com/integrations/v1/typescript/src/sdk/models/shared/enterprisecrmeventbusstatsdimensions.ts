/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Whether to include or exclude the enums matching the regex.
 */
export enum EnterpriseCrmEventbusStatsDimensionsEnumFilterTypeEnum {
  DefaultInclusive = "DEFAULT_INCLUSIVE",
  Exclusive = "EXCLUSIVE",
}

export enum EnterpriseCrmEventbusStatsDimensionsRetryAttemptEnum {
  Unspecified = "UNSPECIFIED",
  Final = "FINAL",
  Retryable = "RETRYABLE",
  Canceled = "CANCELED",
}

export class EnterpriseCrmEventbusStatsDimensions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Whether to include or exclude the enums matching the regex.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enumFilterType" })
  enumFilterType?: EnterpriseCrmEventbusStatsDimensionsEnumFilterTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorEnumString" })
  errorEnumString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "retryAttempt" })
  retryAttempt?: EnterpriseCrmEventbusStatsDimensionsRetryAttemptEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "taskName" })
  taskName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taskNumber" })
  taskNumber?: string;

  /**
   * Stats have been or will be aggregated on set fields for any semantically-meaningful combination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerId" })
  triggerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "warningEnumString" })
  warningEnumString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowId" })
  workflowId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowName" })
  workflowName?: string;
}
