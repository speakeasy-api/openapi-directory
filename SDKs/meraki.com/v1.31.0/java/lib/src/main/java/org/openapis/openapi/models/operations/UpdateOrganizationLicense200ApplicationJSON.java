/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateOrganizationLicense200ApplicationJSON - Successful operation
 */
public class UpdateOrganizationLicense200ApplicationJSON {
    /**
     * The date the license started burning
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activationDate")
    public String activationDate;
    public UpdateOrganizationLicense200ApplicationJSON withActivationDate(String activationDate) {
        this.activationDate = activationDate;
        return this;
    }
    
    /**
     * The date the license was claimed into the organization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("claimDate")
    public String claimDate;
    public UpdateOrganizationLicense200ApplicationJSON withClaimDate(String claimDate) {
        this.claimDate = claimDate;
        return this;
    }
    
    /**
     * Serial number of the device the license is assigned to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceSerial")
    public String deviceSerial;
    public UpdateOrganizationLicense200ApplicationJSON withDeviceSerial(String deviceSerial) {
        this.deviceSerial = deviceSerial;
        return this;
    }
    
    /**
     * The duration of the individual license
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("durationInDays")
    public Long durationInDays;
    public UpdateOrganizationLicense200ApplicationJSON withDurationInDays(Long durationInDays) {
        this.durationInDays = durationInDays;
        return this;
    }
    
    /**
     * The date the license will expire
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationDate")
    public String expirationDate;
    public UpdateOrganizationLicense200ApplicationJSON withExpirationDate(String expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    /**
     * The id of the head license this license is queued behind. If there is no head license, it returns nil.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headLicenseId")
    public String headLicenseId;
    public UpdateOrganizationLicense200ApplicationJSON withHeadLicenseId(String headLicenseId) {
        this.headLicenseId = headLicenseId;
        return this;
    }
    
    /**
     * License ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public UpdateOrganizationLicense200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * License key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseKey")
    public String licenseKey;
    public UpdateOrganizationLicense200ApplicationJSON withLicenseKey(String licenseKey) {
        this.licenseKey = licenseKey;
        return this;
    }
    
    /**
     * License type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseType")
    public String licenseType;
    public UpdateOrganizationLicense200ApplicationJSON withLicenseType(String licenseType) {
        this.licenseType = licenseType;
        return this;
    }
    
    /**
     * ID of the network the license is assigned to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkId")
    public String networkId;
    public UpdateOrganizationLicense200ApplicationJSON withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }
    
    /**
     * Order number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderNumber")
    public String orderNumber;
    public UpdateOrganizationLicense200ApplicationJSON withOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        return this;
    }
    
    /**
     * DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permanentlyQueuedLicenses")
    public UpdateOrganizationLicense200ApplicationJSONPermanentlyQueuedLicenses[] permanentlyQueuedLicenses;
    public UpdateOrganizationLicense200ApplicationJSON withPermanentlyQueuedLicenses(UpdateOrganizationLicense200ApplicationJSONPermanentlyQueuedLicenses[] permanentlyQueuedLicenses) {
        this.permanentlyQueuedLicenses = permanentlyQueuedLicenses;
        return this;
    }
    
    /**
     * The number of seats of the license. Only applicable to SM licenses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seatCount")
    public Long seatCount;
    public UpdateOrganizationLicense200ApplicationJSON withSeatCount(Long seatCount) {
        this.seatCount = seatCount;
        return this;
    }
    
    /**
     * The state of the license. All queued licenses have a status of `recentlyQueued`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public UpdateOrganizationLicense200ApplicationJSONStateEnum state;
    public UpdateOrganizationLicense200ApplicationJSON withState(UpdateOrganizationLicense200ApplicationJSONStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The duration of the license plus all permanently queued licenses associated with it
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalDurationInDays")
    public Long totalDurationInDays;
    public UpdateOrganizationLicense200ApplicationJSON withTotalDurationInDays(Long totalDurationInDays) {
        this.totalDurationInDays = totalDurationInDays;
        return this;
    }
    
}
