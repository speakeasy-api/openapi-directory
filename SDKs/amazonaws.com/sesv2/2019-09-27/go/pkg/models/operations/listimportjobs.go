// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListImportJobsRequestBodyImportDestinationTypeEnum - The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.
type ListImportJobsRequestBodyImportDestinationTypeEnum string

const (
	ListImportJobsRequestBodyImportDestinationTypeEnumSuppressionList ListImportJobsRequestBodyImportDestinationTypeEnum = "SUPPRESSION_LIST"
	ListImportJobsRequestBodyImportDestinationTypeEnumContactList     ListImportJobsRequestBodyImportDestinationTypeEnum = "CONTACT_LIST"
)

func (e *ListImportJobsRequestBodyImportDestinationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUPPRESSION_LIST":
		fallthrough
	case "CONTACT_LIST":
		*e = ListImportJobsRequestBodyImportDestinationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListImportJobsRequestBodyImportDestinationTypeEnum: %s", s)
	}
}

type ListImportJobsRequestBody struct {
	// The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.
	ImportDestinationType *ListImportJobsRequestBodyImportDestinationTypeEnum `json:"ImportDestinationType,omitempty"`
}

type ListImportJobsRequest struct {
	// A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// Maximum number of import jobs to return at once. Use this parameter to paginate results. If additional import jobs exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional addresses.
	PageSize          *int64                    `queryParam:"style=form,explode=true,name=PageSize"`
	RequestBody       ListImportJobsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListImportJobsResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	ListImportJobsResponse *shared.ListImportJobsResponse
	StatusCode             int
	RawResponse            *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
