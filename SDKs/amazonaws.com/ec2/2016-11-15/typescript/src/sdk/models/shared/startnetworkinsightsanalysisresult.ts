/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Describes an potential intermediate component of a feasible path.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisAlternatePathHints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  componentArn?: string;

  @SpeakeasyMetadata()
  componentId?: string;
}

/**
 * The network ACL.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsPortRanges,
  })
  portRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroups,
  })
  securityGroups?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanationsVpnGateway;
}

/**
 * The range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsLoadBalancers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * Describes the rule options for a stateful rule group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions,
  })
  ruleOptions?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions[];
}

/**
 * Describes the type of a stateful rule group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupTypePairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata()
  ruleGroupType?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * The VPC endpoint service.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsVpcEndpointService extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an additional detail for a path analysis. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html">Reachability Analyzer additional detail codes</a>.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalDetailType?: string;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsComponent;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsLoadBalancers,
  })
  loadBalancers?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsLoadBalancers[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs,
  })
  ruleGroupRuleOptionsPairs?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupTypePairs,
  })
  ruleGroupTypePairs?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleGroupTypePairs[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleOptions,
  })
  ruleOptions?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsRuleOptions[];

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  vpcEndpointService?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetailsVpcEndpointService;
}

/**
 * The resource to which the path component is attached.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network ACL.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsPortRanges,
  })
  portRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroups,
  })
  securityGroups?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanationsVpnGateway;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The inbound header.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeaderSourcePortRanges[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The outbound header.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeaderSourcePortRanges[];
}

/**
 * The route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The port range.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * The source VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route in a transit gateway route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  aclRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAclRule;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetails,
  })
  additionalDetails?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAdditionalDetails[];

  @SpeakeasyMetadata()
  attachedTo?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsAttachedTo;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsComponent;

  @SpeakeasyMetadata()
  destinationVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsDestinationVpc;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsElasticLoadBalancerListener;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanations,
  })
  explanations?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsExplanations[];

  @SpeakeasyMetadata()
  firewallStatefulRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsFirewallStatelessRule;

  @SpeakeasyMetadata()
  inboundHeader?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsInboundHeader;

  @SpeakeasyMetadata()
  outboundHeader?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsOutboundHeader;

  @SpeakeasyMetadata()
  routeTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroupRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSecurityGroupRule;

  @SpeakeasyMetadata()
  sequenceNumber?: number;

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  sourceVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSourceVpc;

  @SpeakeasyMetadata()
  subnet?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsSubnet;

  @SpeakeasyMetadata()
  transitGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponentsVpc;
}

/**
 * The range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsLoadBalancers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * Describes the rule options for a stateful rule group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions,
  })
  ruleOptions?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions[];
}

/**
 * Describes the type of a stateful rule group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupTypePairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata()
  ruleGroupType?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * The VPC endpoint service.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsVpcEndpointService extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an additional detail for a path analysis. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html">Reachability Analyzer additional detail codes</a>.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalDetailType?: string;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsComponent;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsLoadBalancers,
  })
  loadBalancers?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsLoadBalancers[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs,
  })
  ruleGroupRuleOptionsPairs?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupTypePairs,
  })
  ruleGroupTypePairs?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleGroupTypePairs[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleOptions,
  })
  ruleOptions?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsRuleOptions[];

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  vpcEndpointService?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetailsVpcEndpointService;
}

/**
 * The resource to which the path component is attached.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network ACL.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsPortRanges,
  })
  portRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroups,
  })
  securityGroups?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanationsVpnGateway;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The inbound header.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeaderSourcePortRanges[];
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The outbound header.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeaderSourcePortRanges[];
}

/**
 * The route table route.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The port range.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * The source VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route in a transit gateway route table.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  aclRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAclRule;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetails,
  })
  additionalDetails?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAdditionalDetails[];

  @SpeakeasyMetadata()
  attachedTo?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsAttachedTo;

  @SpeakeasyMetadata()
  component?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsComponent;

  @SpeakeasyMetadata()
  destinationVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsDestinationVpc;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsElasticLoadBalancerListener;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanations,
  })
  explanations?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsExplanations[];

  @SpeakeasyMetadata()
  firewallStatefulRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsFirewallStatelessRule;

  @SpeakeasyMetadata()
  inboundHeader?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsInboundHeader;

  @SpeakeasyMetadata()
  outboundHeader?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsOutboundHeader;

  @SpeakeasyMetadata()
  routeTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroupRule?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSecurityGroupRule;

  @SpeakeasyMetadata()
  sequenceNumber?: number;

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  sourceVpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSourceVpc;

  @SpeakeasyMetadata()
  subnet?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsSubnet;

  @SpeakeasyMetadata()
  transitGateway?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponentsVpc;
}

/**
 * The status of the network insights analysis.
 */
export enum StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisStatusEnum {
  Running = "running",
  Succeeded = "succeeded",
  Failed = "failed",
}

/**
 * Describes a tag.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the network insights analysis.
 */
export class StartNetworkInsightsAnalysisResultNetworkInsightsAnalysis extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalAccounts?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisAlternatePathHints,
  })
  alternatePathHints?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisAlternatePathHints[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanations,
  })
  explanations?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisExplanations[];

  @SpeakeasyMetadata()
  filterInArns?: string[];

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponents,
  })
  forwardPathComponents?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisForwardPathComponents[];

  @SpeakeasyMetadata()
  networkInsightsAnalysisArn?: string;

  @SpeakeasyMetadata()
  networkInsightsAnalysisId?: string;

  @SpeakeasyMetadata()
  networkInsightsPathId?: string;

  @SpeakeasyMetadata()
  networkPathFound?: boolean;

  @SpeakeasyMetadata({
    elemType:
      StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponents,
  })
  returnPathComponents?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisReturnPathComponents[];

  @SpeakeasyMetadata()
  startDate?: Date;

  @SpeakeasyMetadata()
  status?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisStatusEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata()
  suggestedAccounts?: string[];

  @SpeakeasyMetadata({
    elemType: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisTags,
  })
  tags?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysisTags[];

  @SpeakeasyMetadata()
  warningMessage?: string;
}

/**
 * Success
 */
export class StartNetworkInsightsAnalysisResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  networkInsightsAnalysis?: StartNetworkInsightsAnalysisResultNetworkInsightsAnalysis;
}
