/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LifecycleEvent } from "./lifecycleevent";
import { TargetLabelEnum } from "./targetlabelenum";
import { TargetStatusEnum } from "./targetstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  A target Amazon EC2 or on-premises instance during a deployment that uses the EC2/On-premises compute platform.
 */
export class InstanceTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deploymentId" })
  deploymentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceLabel" })
  instanceLabel?: TargetLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata({ elemType: LifecycleEvent })
  @Expose({ name: "lifecycleEvents" })
  @Type(() => LifecycleEvent)
  lifecycleEvents?: LifecycleEvent[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TargetStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "targetArn" })
  targetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetId" })
  targetId?: string;
}
