/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.
 */
export class AggregateClassificationMetrics extends SpeakeasyBase {
  /**
   * Accuracy is the fraction of predictions given the correct label. For multiclass this is a micro-averaged metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accuracy" })
  accuracy?: number;

  /**
   * The F1 score is an average of recall and precision. For multiclass this is a macro-averaged metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "f1Score" })
  f1Score?: number;

  /**
   * Logarithmic Loss. For multiclass this is a macro-averaged metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logLoss" })
  logLoss?: number;

  /**
   * Precision is the fraction of actual positive predictions that had positive actual labels. For multiclass this is a macro-averaged metric treating each class as a binary classifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "precision" })
  precision?: number;

  /**
   * Recall is the fraction of actual positive labels that were given a positive prediction. For multiclass this is a macro-averaged metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recall" })
  recall?: number;

  /**
   * Area Under a ROC Curve. For multiclass this is a macro-averaged metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rocAuc" })
  rocAuc?: number;

  /**
   * Threshold at which the metrics are computed. For binary classification models this is the positive class threshold. For multi-class classfication models this is the confidence threshold.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "threshold" })
  threshold?: number;
}
