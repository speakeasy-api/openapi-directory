/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LastTerm } from "./lastterm";
import { RenewalTerm } from "./renewalterm";
import { Expose, Type } from "class-transformer";

export enum CreateOrderTermsAndConditionsRenewalSettingEnum {
  RenewWithSpecificTerm = "RENEW_WITH_SPECIFIC_TERM",
  RenewToEvergreen = "RENEW_TO_EVERGREEN",
}

/**
 * Information about an order action of type `TermsAndConditions`.
 *
 * @remarks
 *
 */
export class CreateOrderTermsAndConditions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "autoRenew" })
  autoRenew?: boolean;

  /**
   * The length of the period for the current subscription term.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastTerm" })
  @Type(() => LastTerm)
  lastTerm?: LastTerm;

  @SpeakeasyMetadata()
  @Expose({ name: "renewalSetting" })
  renewalSetting?: CreateOrderTermsAndConditionsRenewalSettingEnum;

  @SpeakeasyMetadata({ elemType: RenewalTerm })
  @Expose({ name: "renewalTerms" })
  @Type(() => RenewalTerm)
  renewalTerms?: RenewalTerm[];
}
