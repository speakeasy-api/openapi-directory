/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum VirtualTariffTypeEnum {
  Battery = "Battery",
  Solar = "Solar",
  Normal = "Normal",
}

export class VirtualTariff extends SpeakeasyBase {
  /**
   * Says how many of the active power is used in this tariff. This is calculated from the last meter values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Factor" })
  factor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: VirtualTariffTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Unit" })
  unit?: string;

  /**
   * The Counter Value of this tariff
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: number;
}
