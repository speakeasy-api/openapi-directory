// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type WebhooksListSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type WebhooksListRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// WebhooksListDefaultApplicationJSONCodeEnum - The status code return by the API. It can be 400 or 404 or 409 or 500.
type WebhooksListDefaultApplicationJSONCodeEnum int64

const (
	WebhooksListDefaultApplicationJSONCodeEnumFourHundred        WebhooksListDefaultApplicationJSONCodeEnum = 400
	WebhooksListDefaultApplicationJSONCodeEnumFourHundredAndFour WebhooksListDefaultApplicationJSONCodeEnum = 404
	WebhooksListDefaultApplicationJSONCodeEnumFourHundredAndNine WebhooksListDefaultApplicationJSONCodeEnum = 409
	WebhooksListDefaultApplicationJSONCodeEnumFiveHundred        WebhooksListDefaultApplicationJSONCodeEnum = 500
)

func (e WebhooksListDefaultApplicationJSONCodeEnum) ToPointer() *WebhooksListDefaultApplicationJSONCodeEnum {
	return &e
}

func (e *WebhooksListDefaultApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		fallthrough
	case 404:
		fallthrough
	case 409:
		fallthrough
	case 500:
		*e = WebhooksListDefaultApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhooksListDefaultApplicationJSONCodeEnum: %v", v)
	}
}

// WebhooksListDefaultApplicationJSON - Generic result for any alerting API operation
type WebhooksListDefaultApplicationJSON struct {
	// The status code return by the API. It can be 400 or 404 or 409 or 500.
	Code WebhooksListDefaultApplicationJSONCodeEnum `json:"code"`
	// The reason for the request failed
	Message *string `json:"message,omitempty"`
	// Unique request identifier for tracking
	RequestID string `json:"request_id"`
}

// WebhooksList200ApplicationJSONValuesEventTypesEnum - Alerting EventTypes enum
type WebhooksList200ApplicationJSONValuesEventTypesEnum string

const (
	WebhooksList200ApplicationJSONValuesEventTypesEnumNewCrashGroupCreated WebhooksList200ApplicationJSONValuesEventTypesEnum = "newCrashGroupCreated"
	WebhooksList200ApplicationJSONValuesEventTypesEnumNewAppReleased       WebhooksList200ApplicationJSONValuesEventTypesEnum = "newAppReleased"
)

func (e WebhooksList200ApplicationJSONValuesEventTypesEnum) ToPointer() *WebhooksList200ApplicationJSONValuesEventTypesEnum {
	return &e
}

func (e *WebhooksList200ApplicationJSONValuesEventTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "newCrashGroupCreated":
		fallthrough
	case "newAppReleased":
		*e = WebhooksList200ApplicationJSONValuesEventTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhooksList200ApplicationJSONValuesEventTypesEnum: %v", v)
	}
}

// WebhooksList200ApplicationJSONValues - Alerting webhook
type WebhooksList200ApplicationJSONValues struct {
	// Allows eanble/disable webhook
	Enabled *bool `json:"enabled,omitempty"`
	// Event types enabled for webhook
	EventTypes []WebhooksList200ApplicationJSONValuesEventTypesEnum `json:"event_types"`
	// The unique id (UUID) of the webhook
	ID *string `json:"id,omitempty"`
	// display name of the webhook
	Name string `json:"name"`
	// target url of the webhook
	URL string `json:"url"`
}

// WebhooksList200ApplicationJSON - List of alerting webhooks wrapped as operation result
type WebhooksList200ApplicationJSON struct {
	Values []WebhooksList200ApplicationJSONValues `json:"values"`
}

type WebhooksListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	WebhooksList200ApplicationJSONObject *WebhooksList200ApplicationJSON
	// Error code with reason
	WebhooksListDefaultApplicationJSONObject *WebhooksListDefaultApplicationJSON
}
