"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import metricstatistic_enum as shared_metricstatistic_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetECSServiceRecommendationProjectedMetricsRequest:
    
    end_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    period: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('period') }})  
    service_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceArn') }})  
    start_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    stat: shared_metricstatistic_enum.MetricStatisticEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stat') }})  
    