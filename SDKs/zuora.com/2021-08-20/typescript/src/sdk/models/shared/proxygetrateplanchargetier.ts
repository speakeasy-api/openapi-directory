/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ProxyGetRatePlanChargeTier extends SpeakeasyBase {
  /**
   * The ID of the Zuora user who created the RatePlanChargeTier object. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   *  The date when the RatePlanChargeTier object was created.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   *  The end number of a range of units for the tier.
   *
   * @remarks
   * **Character limit**: 16 **Values**: any positive decimal value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EndingUnit" })
  endingUnit?: number;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   *  The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the change model is tiered pricing.
   *
   * @remarks
   * **Character limit**: 16 **Values**: any positive decimal value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Price" })
  price?: number;

  /**
   *  Indicates if the price is a flat fee or is per unit.
   *
   * @remarks
   * **Character limit**: 8 **Values**: `Flat Fee`, `Per Unit`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PriceFormat" })
  priceFormat?: string;

  /**
   *  The ID of the subscription or amendment rate plan charge associated with this tier. You can't create an unassociated tier.
   *
   * @remarks
   * **Character limit**: 32 **Values**: inherited from `RatePlanCharge.Id`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RatePlanChargeId" })
  ratePlanChargeId?: string;

  /**
   *  The start number of a range of units for the tier.
   *
   * @remarks
   * **Character limit**: 16 **Values**: any positive decimal value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartingUnit" })
  startingUnit?: number;

  /**
   *  A unique number that identifies the tier that the price applies to.
   *
   * @remarks
   * **Character limit**: 20 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tier" })
  tier?: number;

  /**
   * The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   *  The date when the object was last updated.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
