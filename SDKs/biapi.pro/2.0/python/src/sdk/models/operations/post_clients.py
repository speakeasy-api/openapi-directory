"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import client as shared_client
from typing import Optional


@dataclasses.dataclass
class PostClientsRequestBody:
    
    config: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'config' }})
    r"""custom config about the client"""  
    generate_keys: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'generate_keys' }})
    r"""if True, generate a rsa pair of keys so the client can be used to generate jwt user tokens (default: False)"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""name of client"""  
    redirect_uris: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'redirect_uris' }})
    r"""list of allowed redirect uris"""  
    

@dataclasses.dataclass
class PostClientsRequest:
    
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    request_body: Optional[PostClientsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class PostClientsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    client: Optional[shared_client.Client] = dataclasses.field(default=None)
    r"""Successful POST on Client resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    