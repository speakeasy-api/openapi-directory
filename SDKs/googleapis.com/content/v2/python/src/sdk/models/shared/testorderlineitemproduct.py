"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderlineitemproductfee as shared_orderlineitemproductfee
from ..shared import orderlineitemproductvariantattribute as shared_orderlineitemproductvariantattribute
from ..shared import price as shared_price
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestOrderLineItemProduct:
    
    brand: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brand'), 'exclude': lambda f: f is None }})
    r"""Required. Brand of the item."""  
    channel: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Acceptable values are: - \\"`online`\\" """  
    condition: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""Required. Condition or state of the item. Acceptable values are: - \\"`new`\\" """  
    content_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentLanguage'), 'exclude': lambda f: f is None }})
    r"""Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \\"`en`\\" - \\"`fr`\\" """  
    fees: Optional[list[shared_orderlineitemproductfee.OrderLineItemProductFee]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fees'), 'exclude': lambda f: f is None }})
    r"""Fees for the item. Optional."""  
    gtin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gtin'), 'exclude': lambda f: f is None }})
    r"""Global Trade Item Number (GTIN) of the item. Optional."""  
    image_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageLink'), 'exclude': lambda f: f is None }})
    r"""Required. URL of an image of the item."""  
    item_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemGroupId'), 'exclude': lambda f: f is None }})
    r"""Shared identifier for all variants of the same product. Optional."""  
    mpn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mpn'), 'exclude': lambda f: f is None }})
    r"""Manufacturer Part Number (MPN) of the item. Optional."""  
    offer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerId'), 'exclude': lambda f: f is None }})
    r"""Required. An identifier of the item."""  
    price: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})  
    target_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetCountry'), 'exclude': lambda f: f is None }})
    r"""Required. The CLDR territory // code of the target country of the product."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Required. The title of the product."""  
    variant_attributes: Optional[list[shared_orderlineitemproductvariantattribute.OrderLineItemProductVariantAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variantAttributes'), 'exclude': lambda f: f is None }})
    r"""Variant attributes for the item. Optional."""  
    