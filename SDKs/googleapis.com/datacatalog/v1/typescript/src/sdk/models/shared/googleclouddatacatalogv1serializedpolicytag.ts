/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * A nested protocol buffer that represents a policy tag and all its descendants.
 */
export class GoogleCloudDatacatalogV1SerializedPolicyTag extends SpeakeasyBase {
  /**
   * Children of the policy tag, if any.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDatacatalogV1SerializedPolicyTag })
  @Expose({ name: "childPolicyTags" })
  @Type(() => GoogleCloudDatacatalogV1SerializedPolicyTag)
  childPolicyTags?: GoogleCloudDatacatalogV1SerializedPolicyTag[];

  /**
   * Description of the serialized policy tag. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Required. Display name of the policy tag. At most 200 bytes when encoded in UTF-8.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Resource name of the policy tag. This field is ignored when calling `ImportTaxonomies`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policyTag" })
  policyTag?: string;
}
