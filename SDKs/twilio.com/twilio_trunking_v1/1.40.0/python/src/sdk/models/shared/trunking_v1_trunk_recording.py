"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import recording_enum_recording_mode_enum as shared_recording_enum_recording_mode_enum
from ..shared import recording_enum_recording_trim_enum as shared_recording_enum_recording_trim_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrunkingV1TrunkRecording:
    r"""OK"""
    
    mode: Optional[shared_recording_enum_recording_mode_enum.RecordingEnumRecordingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode'), 'exclude': lambda f: f is None }})  
    trim: Optional[shared_recording_enum_recording_trim_enum.RecordingEnumRecordingTrimEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim'), 'exclude': lambda f: f is None }})  
    