// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CloudflareWorkerRuleResponseRuleTypeEnum string

const (
	CloudflareWorkerRuleResponseRuleTypeEnumHTTPCloudflareWorker CloudflareWorkerRuleResponseRuleTypeEnum = "http/cloudflare-worker"
)

func (e CloudflareWorkerRuleResponseRuleTypeEnum) ToPointer() *CloudflareWorkerRuleResponseRuleTypeEnum {
	return &e
}

func (e *CloudflareWorkerRuleResponseRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "http/cloudflare-worker":
		*e = CloudflareWorkerRuleResponseRuleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudflareWorkerRuleResponseRuleTypeEnum: %v", v)
	}
}

type CloudflareWorkerRuleResponseTargetHeaders struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

type CloudflareWorkerRuleResponseTarget struct {
	Headers      []CloudflareWorkerRuleResponseTargetHeaders `json:"headers,omitempty"`
	SigningKeyID *string                                     `json:"signingKeyId,omitempty"`
	URL          string                                      `json:"url"`
}

type CloudflareWorkerRuleResponse struct {
	Links       map[string]interface{}                   `json:"_links,omitempty"`
	AppID       *string                                  `json:"appId,omitempty"`
	Created     *float64                                 `json:"created,omitempty"`
	ID          *string                                  `json:"id,omitempty"`
	Modified    *float64                                 `json:"modified,omitempty"`
	RequestMode string                                   `json:"requestMode"`
	RuleType    CloudflareWorkerRuleResponseRuleTypeEnum `json:"ruleType"`
	Source      RuleSource                               `json:"source"`
	Status      *string                                  `json:"status,omitempty"`
	Target      CloudflareWorkerRuleResponseTarget       `json:"target"`
	Version     *string                                  `json:"version,omitempty"`
}
