/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ModelVersion - Travel Impact Model version. For more information about the model versioning see https://github.com/google/travel-impact-model/#versioning.
 */
public class ModelVersion {
    /**
     * Dated versions: Model datasets are recreated with refreshed input data but no change to the algorithms regularly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dated")
    public String dated;
    public ModelVersion withDated(String dated) {
        this.dated = dated;
        return this;
    }
    
    /**
     * Major versions: Major changes to methodology (e.g. adding new data sources to the model that lead to major output changes). Such changes will be infrequent and announced well in advance. Might involve API version changes, which will respect guidelines in https://cloud.google.com/endpoints/docs/openapi/versioning-an-api#backwards-incompatible
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("major")
    public Integer major;
    public ModelVersion withMajor(Integer major) {
        this.major = major;
        return this;
    }
    
    /**
     * Minor versions: Changes to the model that, while being consistent across schema versions, change the model parameters or implementation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minor")
    public Integer minor;
    public ModelVersion withMinor(Integer minor) {
        this.minor = minor;
        return this;
    }
    
    /**
     * Patch versions: Implementation changes meant to address bugs or inaccuracies in the model implementation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patch")
    public Integer patch;
    public ModelVersion withPatch(Integer patch) {
        this.patch = patch;
        return this;
    }
    
}
