/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AclRule - Successful response
 */
public class AclRule {
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public AclRule withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Identifier of the Access Control List (ACL) rule. See Sharing calendars.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AclRule withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Type of the resource ("calendar#aclRule").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public AclRule withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The role assigned to the scope. Possible values are:  
     * - "none" - Provides no access. 
     * - "freeBusyReader" - Provides read access to free/busy information. 
     * - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
     * - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. 
     * - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public String role;
    public AclRule withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * The extent to which calendar access is granted by this ACL rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public AclRuleScope scope;
    public AclRule withScope(AclRuleScope scope) {
        this.scope = scope;
        return this;
    }
    
}
