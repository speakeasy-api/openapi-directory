// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateReplicationTaskXAmzTargetEnum
type CreateReplicationTaskXAmzTargetEnum string

const (
	CreateReplicationTaskXAmzTargetEnumAmazonDmSv20160101CreateReplicationTask CreateReplicationTaskXAmzTargetEnum = "AmazonDMSv20160101.CreateReplicationTask"
)

func (e *CreateReplicationTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonDMSv20160101.CreateReplicationTask":
		*e = CreateReplicationTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReplicationTaskXAmzTargetEnum: %s", s)
	}
}

type CreateReplicationTaskRequest struct {
	CreateReplicationTaskMessage shared.CreateReplicationTaskMessage `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   CreateReplicationTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateReplicationTaskResponse struct {
	// AccessDeniedFault
	AccessDeniedFault interface{}
	ContentType       string
	// Success
	CreateReplicationTaskResponse *shared.CreateReplicationTaskResponse
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	// KMSKeyNotAccessibleFault
	KMSKeyNotAccessibleFault interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceAlreadyExistsFault
	ResourceAlreadyExistsFault interface{}
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	// ResourceQuotaExceededFault
	ResourceQuotaExceededFault interface{}
}
