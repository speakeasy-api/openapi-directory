/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WaveHealthStatusEnum } from "./wavehealthstatusenum";
import { WaveProgressStatusEnum } from "./waveprogressstatusenum";
import { Expose } from "class-transformer";

/**
 * Wave aggregated status.
 */
export class WaveAggregatedStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "healthStatus" })
  healthStatus?: WaveHealthStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateDateTime" })
  lastUpdateDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "progressStatus" })
  progressStatus?: WaveProgressStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "replicationStartedDateTime" })
  replicationStartedDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalApplications" })
  totalApplications?: number;
}
