/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LinksSigningBasket - A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the
 * response depend on the dynamical decisions of the ASPSP when processing the request.
 * 
 * Remark: All links can be relative or full links, to be decided by the ASPSP.
 * Type of links admitted in this response, (further links might be added for ASPSP defined
 * extensions):
 * 
 *   * 'scaRedirect':
 *     In case of an SCA Redirect Approach, the ASPSP is transmitting the link to
 *     which to redirect the PSU browser.
 *   * 'scaOAuth':
 *     In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of
 *     the Authorisation Server can be retrieved. The configuration follows the
 *     OAuth 2.0 Authorisation Server Metadata specification.
 *   * 'startAuthorisation':
 *     In case, where an explicit start of the transaction authorisation is needed,
 *     but no more data needs to be updated (no authentication method to be selected,
 *     no PSU identification nor PSU authentication data to be uploaded).
 *   * 'startAuthorisationWithPsuIdentification':
 *     The link to the authorisation end-point, where the authorisation sub-resource
 *     has to be generated while uploading the PSU identification data.
 *   * 'startAuthorisationWithPsuAuthentication':
 *     The link to the authorisation end-point, where the authorisation sub-resource
 *     has to be generated while uploading the PSU authentication data.
 *   * 'startAuthorisationWithEncryptedPsuAuthentication':
 *     The link to the authorisation end-point, where the authorisation sub-resource has
 *     to be generated while uploading the encrypted PSU authentication data.
 *   * 'startAuthorisationWithAuthenticationMethodSelection':
 *     The link to the authorisation end-point, where the authorisation sub-resource
 *     has to be generated while selecting the authentication method.
 *     This link is contained under exactly the same conditions as the data element 'scaMethods'
 *   * 'startAuthorisationWithTransactionAuthorisation':
 *     The link to the authorisation end-point, where the authorisation sub-resource
 *     has to be generated while authorising the transaction e.g. by uploading an
 *     OTP received by SMS.
 *   * 'self':
 *     The link to the payment initiation resource created by this request.
 *     This link can be used to retrieve the resource data.
 *   * 'status':
 *     The link to retrieve the transaction status of the payment initiation.
 *   * 'scaStatus':
 *     The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
 *     This link is only contained, if an authorisation sub-resource has been already created.
 * 
 */
public class LinksSigningBasket {
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaOAuth")
    public HrefType scaOAuth;
    public LinksSigningBasket withScaOAuth(HrefType scaOAuth) {
        this.scaOAuth = scaOAuth;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaRedirect")
    public HrefType scaRedirect;
    public LinksSigningBasket withScaRedirect(HrefType scaRedirect) {
        this.scaRedirect = scaRedirect;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaStatus")
    public HrefType scaStatus;
    public LinksSigningBasket withScaStatus(HrefType scaStatus) {
        this.scaStatus = scaStatus;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    public HrefType self;
    public LinksSigningBasket withSelf(HrefType self) {
        this.self = self;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAuthorisation")
    public HrefType startAuthorisation;
    public LinksSigningBasket withStartAuthorisation(HrefType startAuthorisation) {
        this.startAuthorisation = startAuthorisation;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAuthorisationWithAuthenticationMethodSelection")
    public HrefType startAuthorisationWithAuthenticationMethodSelection;
    public LinksSigningBasket withStartAuthorisationWithAuthenticationMethodSelection(HrefType startAuthorisationWithAuthenticationMethodSelection) {
        this.startAuthorisationWithAuthenticationMethodSelection = startAuthorisationWithAuthenticationMethodSelection;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAuthorisationWithEncryptedPsuAuthentication")
    public HrefType startAuthorisationWithEncryptedPsuAuthentication;
    public LinksSigningBasket withStartAuthorisationWithEncryptedPsuAuthentication(HrefType startAuthorisationWithEncryptedPsuAuthentication) {
        this.startAuthorisationWithEncryptedPsuAuthentication = startAuthorisationWithEncryptedPsuAuthentication;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAuthorisationWithPsuAuthentication")
    public HrefType startAuthorisationWithPsuAuthentication;
    public LinksSigningBasket withStartAuthorisationWithPsuAuthentication(HrefType startAuthorisationWithPsuAuthentication) {
        this.startAuthorisationWithPsuAuthentication = startAuthorisationWithPsuAuthentication;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAuthorisationWithPsuIdentification")
    public HrefType startAuthorisationWithPsuIdentification;
    public LinksSigningBasket withStartAuthorisationWithPsuIdentification(HrefType startAuthorisationWithPsuIdentification) {
        this.startAuthorisationWithPsuIdentification = startAuthorisationWithPsuIdentification;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAuthorisationWithTransactionAuthorisation")
    public HrefType startAuthorisationWithTransactionAuthorisation;
    public LinksSigningBasket withStartAuthorisationWithTransactionAuthorisation(HrefType startAuthorisationWithTransactionAuthorisation) {
        this.startAuthorisationWithTransactionAuthorisation = startAuthorisationWithTransactionAuthorisation;
        return this;
    }
    
    /**
     * Link to a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public HrefType status;
    public LinksSigningBasket withStatus(HrefType status) {
        this.status = status;
        return this;
    }
    
}
