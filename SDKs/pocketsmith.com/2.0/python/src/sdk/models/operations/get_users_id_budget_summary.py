"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import budgetanalysispackage as shared_budgetanalysispackage
from ..shared import error as shared_error
from enum import Enum
from typing import Optional

class GetUsersIDBudgetSummaryPeriodEnum(str, Enum):
    r"""The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible."""
    WEEKS = 'weeks'
    MONTHS = 'months'
    YEARS = 'years'
    EVENT = 'event'


@dataclasses.dataclass
class GetUsersIDBudgetSummaryRequest:
    
    end_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""The date to stop analysing the budget from. This will be bumped out to make full periods as necessary."""  
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the user."""  
    interval: int = dataclasses.field(metadata={'query_param': { 'field_name': 'interval', 'style': 'form', 'explode': True }})
    r"""The period interval, e.g. if the interval is 2 and the period is weeks, the budget will be analysed fortnightly."""  
    period: GetUsersIDBudgetSummaryPeriodEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'period', 'style': 'form', 'explode': True }})
    r"""The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible."""  
    start_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""The date to start analysing the budget from. This will be bumped out to make full periods as necessary."""  
    

@dataclasses.dataclass
class GetUsersIDBudgetSummaryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    budget_analysis_packages: Optional[list[shared_budgetanalysispackage.BudgetAnalysisPackage]] = dataclasses.field(default=None)
    r"""Success"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    