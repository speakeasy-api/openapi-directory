"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldmetadata as shared_fieldmetadata
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MiscKeywordTypeEnum(str, Enum):
    r"""The miscellaneous keyword type."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    OUTLOOK_BILLING_INFORMATION = 'OUTLOOK_BILLING_INFORMATION'
    OUTLOOK_DIRECTORY_SERVER = 'OUTLOOK_DIRECTORY_SERVER'
    OUTLOOK_KEYWORD = 'OUTLOOK_KEYWORD'
    OUTLOOK_MILEAGE = 'OUTLOOK_MILEAGE'
    OUTLOOK_PRIORITY = 'OUTLOOK_PRIORITY'
    OUTLOOK_SENSITIVITY = 'OUTLOOK_SENSITIVITY'
    OUTLOOK_SUBJECT = 'OUTLOOK_SUBJECT'
    OUTLOOK_USER = 'OUTLOOK_USER'
    HOME = 'HOME'
    WORK = 'WORK'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MiscKeyword:
    r"""A person's miscellaneous keyword."""
    
    formatted_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formattedType'), 'exclude': lambda f: f is None }})
    r"""Output only. The type of the miscellaneous keyword translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."""  
    metadata: Optional[shared_fieldmetadata.FieldMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata about a field."""  
    type: Optional[MiscKeywordTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The miscellaneous keyword type."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value of the miscellaneous keyword."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MiscKeywordInput:
    r"""A person's miscellaneous keyword."""
    
    metadata: Optional[shared_fieldmetadata.FieldMetadataInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata about a field."""  
    type: Optional[MiscKeywordTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The miscellaneous keyword type."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value of the miscellaneous keyword."""  
    