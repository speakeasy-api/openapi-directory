"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AuxiliaryMessageSeverityEnum(str, Enum):
    r"""Message severity"""
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    SEVERITY_INFO = 'SEVERITY_INFO'
    SEVERITY_WARNING = 'SEVERITY_WARNING'
    SEVERITY_ERROR = 'SEVERITY_ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuxiliaryMessage:
    r"""Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\\"Given printer is invalid or no longer supported.\\"}"""
    
    auxiliary_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auxiliaryMessage'), 'exclude': lambda f: f is None }})
    r"""Human readable message in English. Example: \\"Given printer is invalid or no longer supported.\\" """  
    field_mask: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldMask'), 'exclude': lambda f: f is None }})
    r"""Field that this message concerns."""  
    severity: Optional[AuxiliaryMessageSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity'), 'exclude': lambda f: f is None }})
    r"""Message severity"""  
    