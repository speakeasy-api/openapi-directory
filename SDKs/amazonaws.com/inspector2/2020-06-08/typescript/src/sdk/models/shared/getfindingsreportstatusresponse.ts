/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Destination } from "./destination";
import { ExternalReportStatusEnum } from "./externalreportstatusenum";
import { FilterCriteria } from "./filtercriteria";
import { ReportingErrorCodeEnum } from "./reportingerrorcodeenum";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class GetFindingsReportStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  @Type(() => Destination)
  destination?: Destination;

  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: ReportingErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filterCriteria" })
  @Type(() => FilterCriteria)
  filterCriteria?: FilterCriteria;

  @SpeakeasyMetadata()
  @Expose({ name: "reportId" })
  reportId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ExternalReportStatusEnum;
}
