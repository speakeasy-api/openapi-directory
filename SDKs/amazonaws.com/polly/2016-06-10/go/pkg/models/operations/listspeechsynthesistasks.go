// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListSpeechSynthesisTasksStatusEnum - Status of the speech synthesis tasks returned in a List operation
type ListSpeechSynthesisTasksStatusEnum string

const (
	ListSpeechSynthesisTasksStatusEnumScheduled  ListSpeechSynthesisTasksStatusEnum = "scheduled"
	ListSpeechSynthesisTasksStatusEnumInProgress ListSpeechSynthesisTasksStatusEnum = "inProgress"
	ListSpeechSynthesisTasksStatusEnumCompleted  ListSpeechSynthesisTasksStatusEnum = "completed"
	ListSpeechSynthesisTasksStatusEnumFailed     ListSpeechSynthesisTasksStatusEnum = "failed"
)

func (e ListSpeechSynthesisTasksStatusEnum) ToPointer() *ListSpeechSynthesisTasksStatusEnum {
	return &e
}

func (e *ListSpeechSynthesisTasksStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "scheduled":
		fallthrough
	case "inProgress":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = ListSpeechSynthesisTasksStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSpeechSynthesisTasksStatusEnum: %v", v)
	}
}

type ListSpeechSynthesisTasksRequest struct {
	// Maximum number of speech synthesis tasks returned in a List operation.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// The pagination token to use in the next request to continue the listing of speech synthesis tasks.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// Status of the speech synthesis tasks returned in a List operation
	Status            *ListSpeechSynthesisTasksStatusEnum `queryParam:"style=form,explode=true,name=Status"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListSpeechSynthesisTasksResponse struct {
	ContentType string
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListSpeechSynthesisTasksOutput *shared.ListSpeechSynthesisTasksOutput
	StatusCode                     int
	RawResponse                    *http.Response
	// ServiceFailureException
	ServiceFailureException interface{}
}
