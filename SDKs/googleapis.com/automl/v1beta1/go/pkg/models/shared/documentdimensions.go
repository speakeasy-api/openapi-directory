// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DocumentDimensionsUnitEnum - Unit of the dimension.
type DocumentDimensionsUnitEnum string

const (
	DocumentDimensionsUnitEnumDocumentDimensionUnitUnspecified DocumentDimensionsUnitEnum = "DOCUMENT_DIMENSION_UNIT_UNSPECIFIED"
	DocumentDimensionsUnitEnumInch                             DocumentDimensionsUnitEnum = "INCH"
	DocumentDimensionsUnitEnumCentimeter                       DocumentDimensionsUnitEnum = "CENTIMETER"
	DocumentDimensionsUnitEnumPoint                            DocumentDimensionsUnitEnum = "POINT"
)

func (e DocumentDimensionsUnitEnum) ToPointer() *DocumentDimensionsUnitEnum {
	return &e
}

func (e *DocumentDimensionsUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOCUMENT_DIMENSION_UNIT_UNSPECIFIED":
		fallthrough
	case "INCH":
		fallthrough
	case "CENTIMETER":
		fallthrough
	case "POINT":
		*e = DocumentDimensionsUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentDimensionsUnitEnum: %v", v)
	}
}

// DocumentDimensions - Message that describes dimension of a document.
type DocumentDimensions struct {
	// Height value of the document, works together with the unit.
	Height *float32 `json:"height,omitempty"`
	// Unit of the dimension.
	Unit *DocumentDimensionsUnitEnum `json:"unit,omitempty"`
	// Width value of the document, works together with the unit.
	Width *float32 `json:"width,omitempty"`
}
