<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETExecutePolicyRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETExecutePolicyActionEnum $action;
    
    /**
     * The name of the Auto Scaling group.
     * 
     * @var ?string $autoScalingGroupName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AutoScalingGroupName')]
    public ?string $autoScalingGroupName = null;
    
    /**
     * <p>The breach threshold for the alarm.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
     * 
     * @var ?float $breachThreshold
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=BreachThreshold')]
    public ?float $breachThreshold = null;
    
    /**
     * <p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
     * 
     * @var ?bool $honorCooldown
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=HonorCooldown')]
    public ?bool $honorCooldown = null;
    
    /**
     * <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
     * 
     * @var ?float $metricValue
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=MetricValue')]
    public ?float $metricValue = null;
    
    /**
     * The name or ARN of the policy.
     * 
     * @var string $policyName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PolicyName')]
    public string $policyName;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETExecutePolicyVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETExecutePolicyActionEnum::EXECUTE_POLICY;
		$this->autoScalingGroupName = null;
		$this->breachThreshold = null;
		$this->honorCooldown = null;
		$this->metricValue = null;
		$this->policyName = "";
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETExecutePolicyVersionEnum::TWO_THOUSAND_AND_ELEVEN0101;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
