/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServerInfoRepresentation - success
 */
public class ServerInfoRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("builtinProtocolMappers")
    public java.util.Map<String, Object> builtinProtocolMappers;
    public ServerInfoRepresentation withBuiltinProtocolMappers(java.util.Map<String, Object> builtinProtocolMappers) {
        this.builtinProtocolMappers = builtinProtocolMappers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientImporters")
    public java.util.Map<String, Object>[] clientImporters;
    public ServerInfoRepresentation withClientImporters(java.util.Map<String, Object>[] clientImporters) {
        this.clientImporters = clientImporters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientInstallations")
    public java.util.Map<String, Object> clientInstallations;
    public ServerInfoRepresentation withClientInstallations(java.util.Map<String, Object> clientInstallations) {
        this.clientInstallations = clientInstallations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("componentTypes")
    public java.util.Map<String, Object> componentTypes;
    public ServerInfoRepresentation withComponentTypes(java.util.Map<String, Object> componentTypes) {
        this.componentTypes = componentTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enums")
    public java.util.Map<String, Object> enums;
    public ServerInfoRepresentation withEnums(java.util.Map<String, Object> enums) {
        this.enums = enums;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityProviders")
    public java.util.Map<String, Object>[] identityProviders;
    public ServerInfoRepresentation withIdentityProviders(java.util.Map<String, Object>[] identityProviders) {
        this.identityProviders = identityProviders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryInfo")
    public MemoryInfoRepresentation memoryInfo;
    public ServerInfoRepresentation withMemoryInfo(MemoryInfoRepresentation memoryInfo) {
        this.memoryInfo = memoryInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passwordPolicies")
    public PasswordPolicyTypeRepresentation[] passwordPolicies;
    public ServerInfoRepresentation withPasswordPolicies(PasswordPolicyTypeRepresentation[] passwordPolicies) {
        this.passwordPolicies = passwordPolicies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileInfo")
    public ProfileInfoRepresentation profileInfo;
    public ServerInfoRepresentation withProfileInfo(ProfileInfoRepresentation profileInfo) {
        this.profileInfo = profileInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocolMapperTypes")
    public java.util.Map<String, Object> protocolMapperTypes;
    public ServerInfoRepresentation withProtocolMapperTypes(java.util.Map<String, Object> protocolMapperTypes) {
        this.protocolMapperTypes = protocolMapperTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("providers")
    public java.util.Map<String, Object> providers;
    public ServerInfoRepresentation withProviders(java.util.Map<String, Object> providers) {
        this.providers = providers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("socialProviders")
    public java.util.Map<String, Object>[] socialProviders;
    public ServerInfoRepresentation withSocialProviders(java.util.Map<String, Object>[] socialProviders) {
        this.socialProviders = socialProviders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemInfo")
    public SystemInfoRepresentation systemInfo;
    public ServerInfoRepresentation withSystemInfo(SystemInfoRepresentation systemInfo) {
        this.systemInfo = systemInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("themes")
    public java.util.Map<String, Object> themes;
    public ServerInfoRepresentation withThemes(java.util.Map<String, Object> themes) {
        this.themes = themes;
        return this;
    }
    
}
