// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteDirectoryXAmzTargetEnum
type DeleteDirectoryXAmzTargetEnum string

const (
	DeleteDirectoryXAmzTargetEnumDirectoryService20150416DeleteDirectory DeleteDirectoryXAmzTargetEnum = "DirectoryService_20150416.DeleteDirectory"
)

func (e *DeleteDirectoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.DeleteDirectory":
		*e = DeleteDirectoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteDirectoryXAmzTargetEnum: %s", s)
	}
}

type DeleteDirectoryRequest struct {
	DeleteDirectoryRequest shared.DeleteDirectoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DeleteDirectoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteDirectoryResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DeleteDirectoryResult *shared.DeleteDirectoryResult
	// EntityDoesNotExistException
	EntityDoesNotExistException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceException
	ServiceException interface{}
}
