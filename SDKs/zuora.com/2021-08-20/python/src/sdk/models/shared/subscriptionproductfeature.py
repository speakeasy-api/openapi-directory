"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionProductFeature:
    r"""Container for custom fields of a Subscription Product Feature object."""
    
    feature_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureId') }})
    r"""Internal Zuora ID of the feature.
    
    
    **Character limit**: 32
    
    
    **Values**:
    """  
    created_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedById'), 'exclude': lambda f: f is None }})  
    created_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time when the product feature was added to the subscription.
    
    
    **Character limit**: 29
    
    
    **Values**:
    """  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Description of the subscription product feature.
    
    
    **Character limit**: 500
    
    
    **Values**:
    """  
    feature_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureCode'), 'exclude': lambda f: f is None }})
    r"""Unique code of the feature.
    
    
    **Character limit**: 255
    
    
    **Values**:
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""Name of the feature.
    
    
    **Character limit**: 255
    
    
    **Values**:
    """  
    rate_plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RatePlanId'), 'exclude': lambda f: f is None }})
    r"""Id of the product rate plan to which the feature belongs.
    
    
    **Character limit**: 32
    
    
    **Values**:
    """  
    updated_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedById'), 'exclude': lambda f: f is None }})
    r"""Internal Zuora ID of the user who last updated the subscription product feature.
    
    
    **Character limit**: 32
    
    
    **Values**:
    """  
    updated_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time when the subscription product feature was last updated.
    
    
    **Character limit**: 29
    
    
    **Values**:
    """  
    