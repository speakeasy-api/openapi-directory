/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Emoji } from "./emoji";
import { Field } from "./field";
import { Source } from "./source";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a user of Mastodon and their associated profile.
 *
 * @see {@link https://docs.joinmastodon.org/entities/account/}
 */
export class Account extends SpeakeasyBase {
  /**
   * The Webfinger account URI. Equal to `username` for local users, or `username@domain` for
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acct" })
  acct?: string;

  /**
   * An image icon that is shown next to statuses and in the profile. The format is URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  avatar?: string;

  /**
   * A static version of the avatar. Equal to `avatar` if its value is a static image; different if `avatar` is an animated GIF. The format is URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_static" })
  avatarStatic?: string;

  /**
   * A presentational flag. Indicates that the account may perform automated actions, may not be monitored, or identifies as a robot.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bot" })
  bot?: boolean;

  /**
   * When the account was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Whether the account has opted into discovery features such as the profile directory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discoverable" })
  discoverable?: boolean;

  /**
   * The profile's display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Custom emoji entities to be used when rendering the profile. If none, an empty array will be returned.
   */
  @SpeakeasyMetadata({ elemType: Emoji })
  @Expose({ name: "emojis" })
  @Type(() => Emoji)
  emojis?: Emoji[];

  /**
   * Additional metadata attached to a profile as name-value pairs.
   */
  @SpeakeasyMetadata({ elemType: Field })
  @Expose({ name: "fields" })
  @Type(() => Field)
  fields?: Field[];

  /**
   * The reported followers of this profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followers_count" })
  followersCount?: number;

  /**
   * The reported follows of this profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "following_count" })
  followingCount?: number;

  /**
   * An image banner that is shown above the profile and in profile cards. The format is URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  header?: string;

  /**
   * A static version of the header. Equal to `header` if its value is a static image; different if `header` is an animated GIF. The format is URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "header_static" })
  headerStatic?: string;

  /**
   * The account id `header`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * When the most recent status was posted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_status_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastStatusAt?: Date;

  /**
   * Whether the account manually approves follow requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locked" })
  locked?: boolean;

  /**
   * Represents a user of Mastodon and their associated profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "moved" })
  @Type(() => Account)
  moved?: Account;

  /**
   * When a timed mute will expire, if applicable. ISO 8601 Datetime.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mute_expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  muteExpiresAt?: Date;

  /**
   * The profile's bio / description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * Represents display or publishing preferences of user's own account. Returned as an additional entity when verifying and updated credentials, as an attribute of Account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => Source)
  source?: Source;

  /**
   * How many statuses are attached to this account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statuses_count" })
  statusesCount?: number;

  /**
   * An extra entity returned when an account is suspended.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suspended" })
  suspended?: boolean;

  /**
   * The location of the user's profile page. (HTTPS URL)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The username of the account, not including domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
