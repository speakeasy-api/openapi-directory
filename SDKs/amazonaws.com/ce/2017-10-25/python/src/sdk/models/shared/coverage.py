"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import coveragecost as shared_coveragecost
from ..shared import coveragehours as shared_coveragehours
from ..shared import coveragenormalizedunits as shared_coveragenormalizedunits
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Coverage:
    r"""The amount of instance usage that a reservation covered."""
    
    coverage_cost: Optional[shared_coveragecost.CoverageCost] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoverageCost'), 'exclude': lambda f: f is None }})  
    coverage_hours: Optional[shared_coveragehours.CoverageHours] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoverageHours'), 'exclude': lambda f: f is None }})  
    coverage_normalized_units: Optional[shared_coveragenormalizedunits.CoverageNormalizedUnits] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoverageNormalizedUnits'), 'exclude': lambda f: f is None }})  
    