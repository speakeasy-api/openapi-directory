/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ParticipantFeedbackQueryParams {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=next_page_token")
    public String nextPageToken;
    public ParticipantFeedbackQueryParams withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of records returned within a single API call.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Long pageSize;
    public ParticipantFeedbackQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:&lt;br&gt; &lt;br&gt;`past` - Meeting that already occurred in the specified date range.&lt;br&gt;`pastOne` - Past meetings that were attended by only one user. &lt;br&gt;`live` - Live meetings.&lt;br&gt;&lt;br&gt;
     * 
     * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public ParticipantFeedbackTypeEnum type;
    public ParticipantFeedbackQueryParams withType(ParticipantFeedbackTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
