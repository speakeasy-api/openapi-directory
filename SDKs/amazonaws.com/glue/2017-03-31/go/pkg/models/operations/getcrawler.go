// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCrawlerXAmzTargetEnum
type GetCrawlerXAmzTargetEnum string

const (
	GetCrawlerXAmzTargetEnumAwsGlueGetCrawler GetCrawlerXAmzTargetEnum = "AWSGlue.GetCrawler"
)

func (e GetCrawlerXAmzTargetEnum) ToPointer() *GetCrawlerXAmzTargetEnum {
	return &e
}

func (e *GetCrawlerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.GetCrawler":
		*e = GetCrawlerXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCrawlerXAmzTargetEnum: %v", v)
	}
}

type GetCrawlerRequest struct {
	GetCrawlerRequest shared.GetCrawlerRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetCrawlerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetCrawlerResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetCrawlerResponse *shared.GetCrawlerResponse
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
