// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum - The payer responsibility.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum string

const (
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnumServiceOwner DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum = "ServiceOwner"
)

func (e *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ServiceOwner":
		*e = DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum: %s", s)
	}
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum - <p>The verification state of the VPC endpoint service.</p> <p>&gt;Consumers of the endpoint service can use the private name only when the state is <code>verified</code>.</p>
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum string

const (
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnumPendingVerification DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum = "pendingVerification"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnumVerified            DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum = "verified"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnumFailed              DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum = "failed"
)

func (e *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pendingVerification":
		fallthrough
	case "verified":
		fallthrough
	case "failed":
		*e = DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum: %s", s)
	}
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfiguration - Information about the endpoint service private DNS name configuration.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfiguration struct {
	Name  *string
	State *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfigurationStateEnum
	Type  *string
	Value *string
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum - The service state.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum string

const (
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnumPending   DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum = "Pending"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnumAvailable DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum = "Available"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnumDeleting  DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum = "Deleting"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnumDeleted   DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum = "Deleted"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnumFailed    DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum = "Failed"
)

func (e *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Available":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "Failed":
		*e = DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum: %s", s)
	}
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum - The type of service.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum string

const (
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnumInterface           DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum = "Interface"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnumGateway             DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum = "Gateway"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnumGatewayLoadBalancer DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum = "GatewayLoadBalancer"
)

func (e *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Interface":
		fallthrough
	case "Gateway":
		fallthrough
	case "GatewayLoadBalancer":
		*e = DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum: %s", s)
	}
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceType - Describes the type of service for a VPC endpoint.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceType struct {
	ServiceType *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceTypeServiceTypeEnum
}

type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum string

const (
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnumIpv4 DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum = "ipv4"
	DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnumIpv6 DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum = "ipv6"
)

func (e *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum: %s", s)
	}
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsTags - Describes a tag.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsTags struct {
	Key   *string
	Value *string
}

// DescribeVpcEndpointServiceConfigurationsResultServiceConfigurations - Describes a service configuration for a VPC endpoint service.
type DescribeVpcEndpointServiceConfigurationsResultServiceConfigurations struct {
	AcceptanceRequired          *bool
	AvailabilityZones           []string
	BaseEndpointDNSNames        []string
	GatewayLoadBalancerArns     []string
	ManagesVpcEndpoints         *bool
	NetworkLoadBalancerArns     []string
	PayerResponsibility         *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPayerResponsibilityEnum
	PrivateDNSName              *string
	PrivateDNSNameConfiguration *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsPrivateDNSNameConfiguration
	ServiceID                   *string
	ServiceName                 *string
	ServiceState                *DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceStateEnum
	ServiceType                 []DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsServiceType
	SupportedIPAddressTypes     []DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsSupportedIPAddressTypesEnum
	Tags                        []DescribeVpcEndpointServiceConfigurationsResultServiceConfigurationsTags
}

// DescribeVpcEndpointServiceConfigurationsResult - Success
type DescribeVpcEndpointServiceConfigurationsResult struct {
	NextToken             *string
	ServiceConfigurations []DescribeVpcEndpointServiceConfigurationsResultServiceConfigurations
}
