// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListCoverageQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListCoverageHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListCoverageRequestBodyFilterCriteria - A structure that identifies filter criteria for <code>GetCoverageStatistics</code>.
type ListCoverageRequestBodyFilterCriteria struct {
	AccountID             []shared.CoverageStringFilter `json:"accountId,omitempty"`
	Ec2InstanceTags       []shared.CoverageMapFilter    `json:"ec2InstanceTags,omitempty"`
	EcrImageTags          []shared.CoverageStringFilter `json:"ecrImageTags,omitempty"`
	EcrRepositoryName     []shared.CoverageStringFilter `json:"ecrRepositoryName,omitempty"`
	LambdaFunctionName    []shared.CoverageStringFilter `json:"lambdaFunctionName,omitempty"`
	LambdaFunctionRuntime []shared.CoverageStringFilter `json:"lambdaFunctionRuntime,omitempty"`
	LambdaFunctionTags    []shared.CoverageMapFilter    `json:"lambdaFunctionTags,omitempty"`
	ResourceID            []shared.CoverageStringFilter `json:"resourceId,omitempty"`
	ResourceType          []shared.CoverageStringFilter `json:"resourceType,omitempty"`
	ScanStatusCode        []shared.CoverageStringFilter `json:"scanStatusCode,omitempty"`
	ScanStatusReason      []shared.CoverageStringFilter `json:"scanStatusReason,omitempty"`
	ScanType              []shared.CoverageStringFilter `json:"scanType,omitempty"`
}

type ListCoverageRequestBody struct {
	// A structure that identifies filter criteria for <code>GetCoverageStatistics</code>.
	FilterCriteria *ListCoverageRequestBodyFilterCriteria `json:"filterCriteria,omitempty"`
	// The maximum number of results to return in the response.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListCoverageRequest struct {
	QueryParams ListCoverageQueryParams
	Headers     ListCoverageHeaders
	Request     ListCoverageRequestBody `request:"mediaType=application/json"`
}

type ListCoverageResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListCoverageResponse *shared.ListCoverageResponse
	StatusCode           int
	RawResponse          *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
