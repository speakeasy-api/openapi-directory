import * as operations from "./models/operations";
import * as shared from "./models/shared";
import { AxiosInstance, AxiosRequestConfig } from "axios";
export declare class Me {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    _language: string;
    _sdkVersion: string;
    _genVersion: string;
    constructor(defaultClient: AxiosInstance, securityClient: AxiosInstance, serverURL: string, language: string, sdkVersion: string, genVersion: string);
    /**
     * Create api credentials
     *
     * @remarks
     * Creates an API credentials for the CallFire API. This endpoint requires full CallFire account credentials to be used, authenticated using Basic Authentication. At the moment user provides only the name for the credentials. The generated credentials can be used to access any CallFire APIs. For authentication use account credentials.
     */
    createApiCredential(req: shared.ApiCredentialInput, security: operations.CreateApiCredentialSecurity, config?: AxiosRequestConfig): Promise<operations.CreateApiCredentialResponse>;
    /**
     * Delete api credentials
     *
     * @remarks
     * Deletes a specified API credential. Currently, removes the ability to access the API. Only ACCOUNT_HOLDER can invoke this API. For authentication use account credentials.
     */
    deleteApiCredential(req: operations.DeleteApiCredentialRequest, security: operations.DeleteApiCredentialSecurity, config?: AxiosRequestConfig): Promise<operations.DeleteApiCredentialResponse>;
    /**
     * Disable specified API credentials
     *
     * @remarks
     * Disables a specified API credential. Currently, removes the ability to access the API. Only ACCOUNT_HOLDER can invoke this API. For authentication use account credentials.
     */
    disableApiCredentials(req: operations.DisableApiCredentialsRequest, security: operations.DisableApiCredentialsSecurity, config?: AxiosRequestConfig): Promise<operations.DisableApiCredentialsResponse>;
    /**
     * Enable specified API credentials
     *
     * @remarks
     * Enables a specified API credential. Currently, adds the ability to access the API. Only ACCOUNT_HOLDER can invoke this API. For authentication use account credentials.
     */
    enableApiCredentials(req: operations.EnableApiCredentialsRequest, security: operations.EnableApiCredentialsSecurity, config?: AxiosRequestConfig): Promise<operations.EnableApiCredentialsResponse>;
    /**
     * Find api credentials
     *
     * @remarks
     * Searches for all credentials generated by user. Returns a paged list of the API credentials. Only ACCOUNT_HOLDER can invoke this API. For authentication use account credentials.
     */
    findApiCredentials(req: operations.FindApiCredentialsRequest, security: operations.FindApiCredentialsSecurity, config?: AxiosRequestConfig): Promise<operations.FindApiCredentialsResponse>;
    /**
     * Find account details
     *
     * @remarks
     * Searches for the user account details. Details include name, email, and basic account permissions. For authentication use api credentials.
     */
    getAccount(req: operations.GetAccountRequest, security: operations.GetAccountSecurity, config?: AxiosRequestConfig): Promise<operations.GetAccountResponse>;
    /**
     * Find a specific api credential
     *
     * @remarks
     * Returns an API credential instance for a given api credential id. Only ACCOUNT_HOLDER can invoke this API. For authentication use account credentials.
     */
    getApiCredential(req: operations.GetApiCredentialRequest, security: operations.GetApiCredentialSecurity, config?: AxiosRequestConfig): Promise<operations.GetApiCredentialResponse>;
    /**
     * Find plan usage
     *
     * @remarks
     * Searches for the data of a billing plan usage for the user. Returns the data of a billing plan usage for the current month. For authentication use api credentials.
     */
    getBillingPlanUsage(config?: AxiosRequestConfig): Promise<operations.GetBillingPlanUsageResponse>;
    /**
     * Find caller ids
     *
     * @remarks
     * Returns a list of verified caller ids. If the number is not shown in the list, then it is not verified. In this case sending of a verification code is required. For authentication use api credentials.
     */
    getCallerIds(config?: AxiosRequestConfig): Promise<operations.GetCallerIdsResponse>;
    /**
     * Find credit usage
     *
     * @remarks
     * Find credit usage for the user. Returns credits usage for time period specified or if unspecified then total for all time. For authentication use api credentials.
     */
    getCreditUsage(req: operations.GetCreditUsageRequest, security: operations.GetCreditUsageSecurity, config?: AxiosRequestConfig): Promise<operations.GetCreditUsageResponse>;
    /**
     * Create a caller id
     *
     * @remarks
     * Generates and sends a verification code to the phone number provided in the path. The verification code is delivered via a phone call. This code needs to be submitted to the verify caller id API endpoint to complete verification. For authentication use api credentials.
     */
    sendVerificationCodeToCallerId(req: operations.SendVerificationCodeToCallerIdRequest, security: operations.SendVerificationCodeToCallerIdSecurity, config?: AxiosRequestConfig): Promise<operations.SendVerificationCodeToCallerIdResponse>;
    /**
     * Verify a caller id
     *
     * @remarks
     * With the verification code received from the Create caller id endpoint, a call to this endpoint is required to finish verification. For authentication use api credentials.
     */
    verifyCallerId(req: operations.VerifyCallerIdRequest, security: operations.VerifyCallerIdSecurity, config?: AxiosRequestConfig): Promise<operations.VerifyCallerIdResponse>;
}
