"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountTaxTaxRule:
    r"""Tax calculation rule to apply in a state or province (USA only)."""
    
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Country code in which tax is applicable."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationId'), 'exclude': lambda f: f is None }})
    r"""Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID)."""  
    rate_percent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ratePercent'), 'exclude': lambda f: f is None }})
    r"""Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative."""  
    shipping_taxed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingTaxed'), 'exclude': lambda f: f is None }})
    r"""If true, shipping charges are also taxed."""  
    use_global_rate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useGlobalRate'), 'exclude': lambda f: f is None }})
    r"""Whether the tax rate is taken from a global tax table or specified explicitly."""  
    