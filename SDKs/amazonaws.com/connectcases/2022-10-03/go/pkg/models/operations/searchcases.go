// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SearchCasesPathParams struct {
	// The unique identifier of the Cases domain.
	DomainID string `pathParam:"style=simple,explode=false,name=domainId"`
}

type SearchCasesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type SearchCasesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// SearchCasesRequestBodyFilter - A filter for cases. Only one value can be provided.
type SearchCasesRequestBodyFilter struct {
	AndAll []shared.CaseFilter `json:"andAll,omitempty"`
	Field  *shared.FieldFilter `json:"field,omitempty"`
	// A filter for cases. Only one value can be provided.
	Not *shared.CaseFilter `json:"not,omitempty"`
}

type SearchCasesRequestBody struct {
	// The list of field identifiers to be returned as part of the response.
	Fields []shared.FieldIdentifier `json:"fields,omitempty"`
	// A filter for cases. Only one value can be provided.
	Filter *SearchCasesRequestBodyFilter `json:"filter,omitempty"`
	// The maximum number of cases to return. The current maximum supported value is 25. This is also the default value when no other value is provided.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
	NextToken *string `json:"nextToken,omitempty"`
	// A word or phrase used to perform a quick search.
	SearchTerm *string `json:"searchTerm,omitempty"`
	// A list of sorts where each sort specifies a field and their sort order to be applied to the results.
	Sorts []shared.Sort `json:"sorts,omitempty"`
}

type SearchCasesRequest struct {
	PathParams  SearchCasesPathParams
	QueryParams SearchCasesQueryParams
	Headers     SearchCasesHeaders
	Request     SearchCasesRequestBody `request:"mediaType=application/json"`
}

type SearchCasesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	SearchCasesResponse *shared.SearchCasesResponse
	StatusCode          int
	RawResponse         *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
