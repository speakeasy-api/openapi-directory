"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SendDebugCaptureRequestDataFormatEnum(str, Enum):
    r"""Format for the data field above (id=5)."""
    DATA_FORMAT_UNSPECIFIED = 'DATA_FORMAT_UNSPECIFIED'
    RAW = 'RAW'
    JSON = 'JSON'
    ZLIB = 'ZLIB'
    BROTLI = 'BROTLI'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SendDebugCaptureRequest:
    r"""Request to send encoded debug information. Next ID: 8"""
    
    component_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentId'), 'exclude': lambda f: f is None }})
    r"""The internal component id for which debug information is sent."""  
    data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})
    r"""The encoded debug information."""  
    data_format: Optional[SendDebugCaptureRequestDataFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataFormat'), 'exclude': lambda f: f is None }})
    r"""Format for the data field above (id=5)."""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id."""  
    worker_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workerId'), 'exclude': lambda f: f is None }})
    r"""The worker id, i.e., VM hostname."""  
    