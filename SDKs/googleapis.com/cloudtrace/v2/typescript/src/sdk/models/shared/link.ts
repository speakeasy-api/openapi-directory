/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attributes } from "./attributes";
import { Expose, Type } from "class-transformer";

/**
 * The relationship of the current span relative to the linked span.
 */
export enum LinkTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  ChildLinkedSpan = "CHILD_LINKED_SPAN",
  ParentLinkedSpan = "PARENT_LINKED_SPAN",
}

/**
 * A pointer from the current span to another span in the same trace or in a different trace. For example, this can be used in batching operations, where a single batch handler processes multiple requests from different traces or when the handler receives a request from a different project.
 */
export class Link extends SpeakeasyBase {
  /**
   * A set of attributes as key-value pairs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => Attributes)
  attributes?: Attributes;

  /**
   * The `[SPAN_ID]` for a span within a trace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spanId" })
  spanId?: string;

  /**
   * The `[TRACE_ID]` for a trace within a project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "traceId" })
  traceId?: string;

  /**
   * The relationship of the current span relative to the linked span.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: LinkTypeEnum;
}
