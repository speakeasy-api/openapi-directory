<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ContentTypeInfo - # gdata.* are outside protos with mising documentation
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ContentTypeInfo
{
    /**
     * # gdata.* are outside protos with mising documentation
     * 
     * @var ?string $bestGuess
     */
	#[\JMS\Serializer\Annotation\SerializedName('bestGuess')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bestGuess = null;
    
    /**
     * # gdata.* are outside protos with mising documentation
     * 
     * @var ?string $fromBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromBytes = null;
    
    /**
     * # gdata.* are outside protos with mising documentation
     * 
     * @var ?string $fromFileName
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromFileName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromFileName = null;
    
    /**
     * # gdata.* are outside protos with mising documentation
     * 
     * @var ?string $fromHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromHeader')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromHeader = null;
    
    /**
     * # gdata.* are outside protos with mising documentation
     * 
     * @var ?string $fromUrlPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromUrlPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromUrlPath = null;
    
	public function __construct()
	{
		$this->bestGuess = null;
		$this->fromBytes = null;
		$this->fromFileName = null;
		$this->fromHeader = null;
		$this->fromUrlPath = null;
	}
}
