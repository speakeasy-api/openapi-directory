/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TransactionRuleInfo {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Amount amount;
    public TransactionRuleInfo withAmount(Amount amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balancePlatformId")
    public String balancePlatformId;
    public TransactionRuleInfo withBalancePlatformId(String balancePlatformId) {
        this.balancePlatformId = balancePlatformId;
        return this;
    }
    
    /**
     * List of countries to which the rule applies. For example: **["NL","US"]**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countries")
    public String[] countries;
    public TransactionRuleInfo withCountries(String[] countries) {
        this.countries = countries;
        return this;
    }
    
    /**
     * Your description for the transaction rule, maximum 300 characters.
     */
    @JsonProperty("description")
    public String description;
    public TransactionRuleInfo withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.
     * 
     * If not provided, the rule will be evaluated until the rule status is set to **inactive**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDate")
    public String endDate;
    public TransactionRuleInfo withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * List of point-of-sale entry modes to which the rule applies.
     * 
     * Possible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **token**, **server**, **barcode**, **ocr**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entryModes")
    public TransactionRuleInfoEntryModesEnum[] entryModes;
    public TransactionRuleInfo withEntryModes(TransactionRuleInfoEntryModesEnum[] entryModes) {
        this.entryModes = entryModes;
        return this;
    }
    
    @JsonProperty("interval")
    public TransactionRuleInterval interval;
    public TransactionRuleInfo withInterval(TransactionRuleInterval interval) {
        this.interval = interval;
        return this;
    }
    
    /**
     * The maximum number of transactions that a payment instrument can be used for in the period specified in the `interval.type`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTransactions")
    public Integer maxTransactions;
    public TransactionRuleInfo withMaxTransactions(Integer maxTransactions) {
        this.maxTransactions = maxTransactions;
        return this;
    }
    
    /**
     * List of Merchant Category Codes (MCCs) to which the rule applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mccs")
    public String[] mccs;
    public TransactionRuleInfo withMccs(String[] mccs) {
        this.mccs = mccs;
        return this;
    }
    
    /**
     * The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstrumentGroups__resParam_id) to which the rule applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentInstrumentGroupId")
    public String paymentInstrumentGroupId;
    public TransactionRuleInfo withPaymentInstrumentGroupId(String paymentInstrumentGroupId) {
        this.paymentInstrumentGroupId = paymentInstrumentGroupId;
        return this;
    }
    
    /**
     * The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments__resParam_id) to which the rule applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentInstrumentId")
    public String paymentInstrumentId;
    public TransactionRuleInfo withPaymentInstrumentId(String paymentInstrumentId) {
        this.paymentInstrumentId = paymentInstrumentId;
        return this;
    }
    
    /**
     * List of processing types to which the rule applies.
     * 
     * Possible values: **atmWithdraw**, **pos**, **ecommerce**, **moto**, **recurring**, **balanceInquiry**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingTypes")
    public TransactionRuleInfoProcessingTypesEnum[] processingTypes;
    public TransactionRuleInfo withProcessingTypes(TransactionRuleInfoProcessingTypesEnum[] processingTypes) {
        this.processingTypes = processingTypes;
        return this;
    }
    
    /**
     * Your reference for the transaction rule, maximum 150 characters.
     */
    @JsonProperty("reference")
    public String reference;
    public TransactionRuleInfo withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.
     * 
     * If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. 
     * 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startDate")
    public String startDate;
    public TransactionRuleInfo withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created 
     * with an **active** status. 
     * 
     * Possible values: **active**, **inactive**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public TransactionRuleInfoStatusEnum status;
    public TransactionRuleInfo withStatus(TransactionRuleInfoStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Type of conditions provided in the rule.
     * 
     * Possible values:
     *   * **allowList**: The rule provides categories (such as country and MCC) where payments must be allowed.
     *  * **blockList**: The rule provides categories (such as country and MCC) where payments must be blocked.
     *  * **maxUsage**: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.
     *  * **velocity**: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.
     * 
     */
    @JsonProperty("type")
    public TransactionRuleInfoTypeEnum type;
    public TransactionRuleInfo withType(TransactionRuleInfoTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
