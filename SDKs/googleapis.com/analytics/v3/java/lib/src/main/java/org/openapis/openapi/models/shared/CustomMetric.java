/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CustomMetric - JSON template for Analytics Custom Metric.
 */
public class CustomMetric {
    /**
     * Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public CustomMetric withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Boolean indicating whether the custom metric is active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public CustomMetric withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Time the custom metric was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public CustomMetric withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Custom metric ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CustomMetric withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Index of the custom metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Integer index;

    public CustomMetric withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    /**
     * Kind value for a custom metric. Set to "analytics#customMetric". It is a read-only field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public CustomMetric withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Max value of custom metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_value")
    public String maxValue;

    public CustomMetric withMaxValue(String maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * Min value of custom metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("min_value")
    public String minValue;

    public CustomMetric withMinValue(String minValue) {
        this.minValue = minValue;
        return this;
    }
    
    /**
     * Name of the custom metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CustomMetric withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Parent link for the custom metric. Points to the property to which the custom metric belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentLink")
    public CustomMetricParentLink parentLink;

    public CustomMetric withParentLink(CustomMetricParentLink parentLink) {
        this.parentLink = parentLink;
        return this;
    }
    
    /**
     * Scope of the custom metric: HIT or PRODUCT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;

    public CustomMetric withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * Link for the custom metric
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public CustomMetric withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * Data type of custom metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public CustomMetric withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Time the custom metric was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public CustomMetric withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    /**
     * Property ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webPropertyId")
    public String webPropertyId;

    public CustomMetric withWebPropertyId(String webPropertyId) {
        this.webPropertyId = webPropertyId;
        return this;
    }
    
    public CustomMetric(){}
}
