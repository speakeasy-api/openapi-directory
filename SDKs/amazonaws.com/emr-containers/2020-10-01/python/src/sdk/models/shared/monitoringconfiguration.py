"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudwatchmonitoringconfiguration as shared_cloudwatchmonitoringconfiguration
from ..shared import persistentappui_enum as shared_persistentappui_enum
from ..shared import s3monitoringconfiguration as shared_s3monitoringconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoringConfiguration:
    r"""Configuration setting for monitoring."""
    
    cloud_watch_monitoring_configuration: Optional[shared_cloudwatchmonitoringconfiguration.CloudWatchMonitoringConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudWatchMonitoringConfiguration'), 'exclude': lambda f: f is None }})  
    persistent_app_ui: Optional[shared_persistentappui_enum.PersistentAppUIEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('persistentAppUI'), 'exclude': lambda f: f is None }})  
    s3_monitoring_configuration: Optional[shared_s3monitoringconfiguration.S3MonitoringConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3MonitoringConfiguration'), 'exclude': lambda f: f is None }})  
    