// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDownloadDBLogFilePortionActionEnum
type GETDownloadDBLogFilePortionActionEnum string

const (
	GETDownloadDBLogFilePortionActionEnumDownloadDbLogFilePortion GETDownloadDBLogFilePortionActionEnum = "DownloadDBLogFilePortion"
)

func (e GETDownloadDBLogFilePortionActionEnum) ToPointer() *GETDownloadDBLogFilePortionActionEnum {
	return &e
}

func (e *GETDownloadDBLogFilePortionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DownloadDBLogFilePortion":
		*e = GETDownloadDBLogFilePortionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDownloadDBLogFilePortionActionEnum: %v", v)
	}
}

// GETDownloadDBLogFilePortionVersionEnum
type GETDownloadDBLogFilePortionVersionEnum string

const (
	GETDownloadDBLogFilePortionVersionEnumTwoThousandAndThirteen0212 GETDownloadDBLogFilePortionVersionEnum = "2013-02-12"
)

func (e GETDownloadDBLogFilePortionVersionEnum) ToPointer() *GETDownloadDBLogFilePortionVersionEnum {
	return &e
}

func (e *GETDownloadDBLogFilePortionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-02-12":
		*e = GETDownloadDBLogFilePortionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDownloadDBLogFilePortionVersionEnum: %v", v)
	}
}

type GETDownloadDBLogFilePortionRequest struct {
	Action               GETDownloadDBLogFilePortionActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBInstanceIdentifier string                                 `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	LogFileName          string                                 `queryParam:"style=form,explode=true,name=LogFileName"`
	Marker               *string                                `queryParam:"style=form,explode=true,name=Marker"`
	NumberOfLines        *int64                                 `queryParam:"style=form,explode=true,name=NumberOfLines"`
	Version              GETDownloadDBLogFilePortionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm        *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDownloadDBLogFilePortionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
