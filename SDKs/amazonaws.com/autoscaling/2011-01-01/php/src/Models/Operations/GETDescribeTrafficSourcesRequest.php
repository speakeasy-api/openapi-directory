<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETDescribeTrafficSourcesRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETDescribeTrafficSourcesActionEnum $action;
    
    /**
     * The name of the Auto Scaling group.
     * 
     * @var string $autoScalingGroupName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AutoScalingGroupName')]
    public string $autoScalingGroupName;
    
    /**
     * The maximum number of items to return with this call. The maximum value is <code>50</code>.
     * 
     * @var ?int $maxRecords
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=MaxRecords')]
    public ?int $maxRecords = null;
    
    /**
     * The token for the next set of items to return. (You received this token from a previous call.)
     * 
     * @var ?string $nextToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NextToken')]
    public ?string $nextToken = null;
    
    /**
     * <p>The traffic source type that you want to describe.</p> <p>The following lists the valid values:</p> <ul> <li> <p> <code>elb</code> if the traffic source is a Classic Load Balancer.</p> </li> <li> <p> <code>elbv2</code> if the traffic source is a Application Load Balancer, Gateway Load Balancer, or Network Load Balancer.</p> </li> <li> <p> <code>vpc-lattice</code> if the traffic source is VPC Lattice.</p> </li> </ul>
     * 
     * @var ?string $trafficSourceType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TrafficSourceType')]
    public ?string $trafficSourceType = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETDescribeTrafficSourcesVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETDescribeTrafficSourcesActionEnum::DESCRIBE_TRAFFIC_SOURCES;
		$this->autoScalingGroupName = "";
		$this->maxRecords = null;
		$this->nextToken = null;
		$this->trafficSourceType = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETDescribeTrafficSourcesVersionEnum::TWO_THOUSAND_AND_ELEVEN0101;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
