"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import track as shared_track
from typing import Optional


@dataclasses.dataclass
class GetTracksTrackIDSecurity:
    
    client_id: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'query', 'field_name': 'client_id' }})  
    

@dataclasses.dataclass
class GetTracksTrackIDRequest:
    
    track_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'track_id', 'style': 'simple', 'explode': False }})
    r"""SoundCloud Track id"""  
    secret_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'secret_token', 'style': 'form', 'explode': True }})
    r"""A secret token to fetch private playlists/tracks"""  
    

@dataclasses.dataclass
class GetTracksTrackIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    track: Optional[shared_track.Track] = dataclasses.field(default=None)
    r"""Success"""  
    