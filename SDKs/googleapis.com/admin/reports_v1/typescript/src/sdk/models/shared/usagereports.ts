/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UsageReport } from "./usagereport";
import { Expose, Type } from "class-transformer";

export class UsageReportsWarningsData extends SpeakeasyBase {
  /**
   * Key associated with a key-value pair to give detailed information on the warning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Value associated with a key-value pair to give detailed information on the warning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class UsageReportsWarnings extends SpeakeasyBase {
  /**
   * Machine readable code or warning type. The warning code value is `200`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Key-value pairs to give detailed information on the warning.
   */
  @SpeakeasyMetadata({ elemType: UsageReportsWarningsData })
  @Expose({ name: "data" })
  @Type(() => UsageReportsWarningsData)
  data?: UsageReportsWarningsData[];

  /**
   * The human readable messages for a warning are: - Data is not available warning - Sorry, data for date yyyy-mm-dd for application "`application name`" is not available. - Partial data is available warning - Data for date yyyy-mm-dd for application "`application name`" is not available right now, please try again after a few hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

/**
 * Successful response
 */
export class UsageReports extends SpeakeasyBase {
  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The type of API resource. For a usage report, the value is `admin#reports#usageReports`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Various application parameter records.
   */
  @SpeakeasyMetadata({ elemType: UsageReport })
  @Expose({ name: "usageReports" })
  @Type(() => UsageReport)
  usageReports?: UsageReport[];

  /**
   * Warnings, if any.
   */
  @SpeakeasyMetadata({ elemType: UsageReportsWarnings })
  @Expose({ name: "warnings" })
  @Type(() => UsageReportsWarnings)
  warnings?: UsageReportsWarnings[];
}
