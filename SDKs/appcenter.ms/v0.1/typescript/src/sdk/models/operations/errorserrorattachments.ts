/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ErrorsErrorAttachmentsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class ErrorsErrorAttachmentsRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The id of the error
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=errorId",
  })
  errorId: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum ErrorsErrorAttachmentsDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class ErrorsErrorAttachmentsDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ErrorsErrorAttachmentsDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class ErrorsErrorAttachmentsDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorsErrorAttachmentsDefaultApplicationJSONError)
  error: ErrorsErrorAttachmentsDefaultApplicationJSONError;
}

export class ErrorsErrorAttachments200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appId" })
  appId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "attachmentId" })
  attachmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "blobLocation" })
  blobLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contentType" })
  contentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "crashId" })
  crashId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  fileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;
}

export class ErrorsErrorAttachmentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * List of error attachments.
   */
  @SpeakeasyMetadata({ elemType: ErrorsErrorAttachments200ApplicationJSON })
  errorsErrorAttachments200ApplicationJSONObjects?: ErrorsErrorAttachments200ApplicationJSON[];

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  errorsErrorAttachmentsDefaultApplicationJSONObject?: ErrorsErrorAttachmentsDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
