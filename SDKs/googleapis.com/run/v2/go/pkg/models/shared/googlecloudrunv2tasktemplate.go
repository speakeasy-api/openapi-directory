// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum - The execution environment being used to host this Task.
type GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum string

const (
	GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnumExecutionEnvironmentUnspecified GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum = "EXECUTION_ENVIRONMENT_UNSPECIFIED"
	GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnumExecutionEnvironmentGen1        GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum = "EXECUTION_ENVIRONMENT_GEN1"
	GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnumExecutionEnvironmentGen2        GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum = "EXECUTION_ENVIRONMENT_GEN2"
)

func (e GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum) ToPointer() *GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum {
	return &e
}

func (e *GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXECUTION_ENVIRONMENT_UNSPECIFIED":
		fallthrough
	case "EXECUTION_ENVIRONMENT_GEN1":
		fallthrough
	case "EXECUTION_ENVIRONMENT_GEN2":
		*e = GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum: %v", v)
	}
}

// GoogleCloudRunV2TaskTemplate - TaskTemplate describes the data a task should have when created from a template.
type GoogleCloudRunV2TaskTemplate struct {
	// Holds the single container that defines the unit of execution for this task.
	Containers []GoogleCloudRunV2Container `json:"containers,omitempty"`
	// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
	EncryptionKey *string `json:"encryptionKey,omitempty"`
	// The execution environment being used to host this Task.
	ExecutionEnvironment *GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum `json:"executionEnvironment,omitempty"`
	// Number of retries allowed per Task, before marking this Task failed. Defaults to 3.
	MaxRetries *int `json:"maxRetries,omitempty"`
	// Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout. Defaults to 600 seconds.
	Timeout *string `json:"timeout,omitempty"`
	// A list of Volumes to make available to containers.
	Volumes []GoogleCloudRunV2Volume `json:"volumes,omitempty"`
	// VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc
	VpcAccess *GoogleCloudRunV2VpcAccess `json:"vpcAccess,omitempty"`
}
