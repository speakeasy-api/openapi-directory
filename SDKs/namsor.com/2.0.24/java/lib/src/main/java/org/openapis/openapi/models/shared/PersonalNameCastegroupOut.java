/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersonalNameCastegroupOut - Caste group-coded names
 */
public class PersonalNameCastegroupOut {
    /**
     * Most likely caste group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("castegroup")
    public String castegroup;
    public PersonalNameCastegroupOut withCastegroup(String castegroup) {
        this.castegroup = castegroup;
        return this;
    }
    
    /**
     * Second best alternative : caste group 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("castegroupAlt")
    public String castegroupAlt;
    public PersonalNameCastegroupOut withCastegroupAlt(String castegroupAlt) {
        this.castegroupAlt = castegroupAlt;
        return this;
    }
    
    /**
     * List caste group (top 10)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("castegroupTop")
    public String[] castegroupTop;
    public PersonalNameCastegroupOut withCastegroupTop(String[] castegroupTop) {
        this.castegroupTop = castegroupTop;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public PersonalNameCastegroupOut withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The input name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PersonalNameCastegroupOut withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("probabilityAltCalibrated")
    public Double probabilityAltCalibrated;
    public PersonalNameCastegroupOut withProbabilityAltCalibrated(Double probabilityAltCalibrated) {
        this.probabilityAltCalibrated = probabilityAltCalibrated;
        return this;
    }
    
    /**
     * The calibrated probability for country to have been guessed correctly. -1 = still calibrating. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("probabilityCalibrated")
    public Double probabilityCalibrated;
    public PersonalNameCastegroupOut withProbabilityCalibrated(Double probabilityCalibrated) {
        this.probabilityCalibrated = probabilityCalibrated;
        return this;
    }
    
    /**
     * Higher score is better, but score is not normalized. Use calibratedProbability if available. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Double score;
    public PersonalNameCastegroupOut withScore(Double score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("script")
    public String script;
    public PersonalNameCastegroupOut withScript(String script) {
        this.script = script;
        return this;
    }
    
}
