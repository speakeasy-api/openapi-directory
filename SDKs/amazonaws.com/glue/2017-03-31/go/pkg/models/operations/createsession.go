// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateSessionXAmzTargetEnum
type CreateSessionXAmzTargetEnum string

const (
	CreateSessionXAmzTargetEnumAwsGlueCreateSession CreateSessionXAmzTargetEnum = "AWSGlue.CreateSession"
)

func (e *CreateSessionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.CreateSession":
		*e = CreateSessionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateSessionXAmzTargetEnum: %s", s)
	}
}

type CreateSessionRequest struct {
	CreateSessionRequest shared.CreateSessionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           CreateSessionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateSessionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// Success
	CreateSessionResponse *shared.CreateSessionResponse
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
	// ValidationException
	ValidationException interface{}
}
