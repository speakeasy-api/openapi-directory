// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JobTypeDTORelationToLanguageEnum string

const (
	JobTypeDTORelationToLanguageEnumLanguageCombinationRelated JobTypeDTORelationToLanguageEnum = "LANGUAGE_COMBINATION_RELATED"
	JobTypeDTORelationToLanguageEnumSourceLanguageRelatedOnly  JobTypeDTORelationToLanguageEnum = "SOURCE_LANGUAGE_RELATED_ONLY"
	JobTypeDTORelationToLanguageEnumTargetLanguageRelatedOnly  JobTypeDTORelationToLanguageEnum = "TARGET_LANGUAGE_RELATED_ONLY"
	JobTypeDTORelationToLanguageEnumLanguageIndependent        JobTypeDTORelationToLanguageEnum = "LANGUAGE_INDEPENDENT"
)

func (e *JobTypeDTORelationToLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LANGUAGE_COMBINATION_RELATED":
		fallthrough
	case "SOURCE_LANGUAGE_RELATED_ONLY":
		fallthrough
	case "TARGET_LANGUAGE_RELATED_ONLY":
		fallthrough
	case "LANGUAGE_INDEPENDENT":
		*e = JobTypeDTORelationToLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobTypeDTORelationToLanguageEnum: %s", s)
	}
}

type JobTypeDTO struct {
	// should this value be available on the XTRF selection lists
	Active             *bool   `json:"active,omitempty"`
	CalculationUnitIds []int64 `json:"calculationUnitIds,omitempty"`
	// should this value be set by default in XTRF selection lists
	Default     *bool `json:"default,omitempty"`
	FilesNeeded *bool `json:"filesNeeded,omitempty"`
	// internal identifier
	ID *int64 `json:"id,omitempty"`
	// localised name (formatted in the current user's locale)
	Name *string `json:"name,omitempty"`
	// should this value be available on the top of XTRF selection lists, in the Preferred section
	Preferred                           *bool                             `json:"preferred,omitempty"`
	ProvidedByClient                    *bool                             `json:"providedByClient,omitempty"`
	RelationToLanguage                  *JobTypeDTORelationToLanguageEnum `json:"relationToLanguage,omitempty"`
	VendorProductivity                  *float64                          `json:"vendorProductivity,omitempty"`
	VendorProductivityCalculationUnitID *int64                            `json:"vendorProductivityCalculationUnitId,omitempty"`
}
