"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sort_order1_enum as shared_sort_order1_enum
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetChargeStationsRequest:
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'active', 'style': 'form', 'explode': True }})
    r"""Chargestations that have been activated/deactivated by the admin"""  
    created_at_dollar_gte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdAt[$gte]', 'style': 'form', 'explode': True }})
    r"""Date as ISO String"""  
    created_at_dollar_lte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdAt[$lte]', 'style': 'form', 'explode': True }})
    r"""Date as ISO String"""  
    include_evses: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_evses', 'style': 'form', 'explode': True }})
    r"""Populate evses"""  
    include_location: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_location', 'style': 'form', 'explode': True }})
    r"""Populate location"""  
    include_organization: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_organization', 'style': 'form', 'explode': True }})
    r"""Populate organization"""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'location', 'style': 'form', 'explode': True }})
    r"""Filter by Location Id"""  
    online: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'online', 'style': 'form', 'explode': True }})
    r"""Filter by Online Status"""  
    organization: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'organization', 'style': 'form', 'explode': True }})
    r"""Filter by Org. Id"""  
    paginate_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paginate_enabled', 'style': 'form', 'explode': True }})
    r"""Enable pagination"""  
    paginate_limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paginate_limit', 'style': 'form', 'explode': True }})
    r"""Number of results per page"""  
    paginate_page: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paginate_page', 'style': 'form', 'explode': True }})
    r"""The queried page index"""  
    public: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'public', 'style': 'form', 'explode': True }})
    r"""Chargestations that are public"""  
    sort_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_by', 'style': 'form', 'explode': True }})
    r"""Sort data by this key"""  
    sort_order: Optional[shared_sort_order1_enum.SortOrder1Enum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_order', 'style': 'form', 'explode': True }})
    r"""asc to sort ascending (default is desc - descending)"""  
    updated_at_dollar_gte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'updatedAt[$gte]', 'style': 'form', 'explode': True }})
    r"""Date as ISO String"""  
    updated_at_dollar_lte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'updatedAt[$lte]', 'style': 'form', 'explode': True }})
    r"""Date as ISO String"""  
    

@dataclasses.dataclass
class GetChargeStationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    