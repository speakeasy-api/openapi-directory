// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StorageVirtualMachineLifecycleEnum string

const (
	StorageVirtualMachineLifecycleEnumCreated       StorageVirtualMachineLifecycleEnum = "CREATED"
	StorageVirtualMachineLifecycleEnumCreating      StorageVirtualMachineLifecycleEnum = "CREATING"
	StorageVirtualMachineLifecycleEnumDeleting      StorageVirtualMachineLifecycleEnum = "DELETING"
	StorageVirtualMachineLifecycleEnumFailed        StorageVirtualMachineLifecycleEnum = "FAILED"
	StorageVirtualMachineLifecycleEnumMisconfigured StorageVirtualMachineLifecycleEnum = "MISCONFIGURED"
	StorageVirtualMachineLifecycleEnumPending       StorageVirtualMachineLifecycleEnum = "PENDING"
)

func (e *StorageVirtualMachineLifecycleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATED":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "MISCONFIGURED":
		fallthrough
	case "PENDING":
		*e = StorageVirtualMachineLifecycleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageVirtualMachineLifecycleEnum: %s", s)
	}
}
