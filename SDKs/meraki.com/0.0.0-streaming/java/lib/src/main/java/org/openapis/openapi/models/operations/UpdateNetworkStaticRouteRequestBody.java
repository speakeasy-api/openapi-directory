/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNetworkStaticRouteRequestBody {
    /**
     * The enabled state of the static route
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public UpdateNetworkStaticRouteRequestBody withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixedIpAssignments")
    public java.util.Map<String, Object> fixedIpAssignments;
    public UpdateNetworkStaticRouteRequestBody withFixedIpAssignments(java.util.Map<String, Object> fixedIpAssignments) {
        this.fixedIpAssignments = fixedIpAssignments;
        return this;
    }
    
    /**
     * The gateway IP (next hop) of the static route
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatewayIp")
    public String gatewayIp;
    public UpdateNetworkStaticRouteRequestBody withGatewayIp(String gatewayIp) {
        this.gatewayIp = gatewayIp;
        return this;
    }
    
    /**
     * The name of the static route
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UpdateNetworkStaticRouteRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The DHCP reserved IP ranges on the static route
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservedIpRanges")
    public UpdateNetworkStaticRouteRequestBodyReservedIpRanges[] reservedIpRanges;
    public UpdateNetworkStaticRouteRequestBody withReservedIpRanges(UpdateNetworkStaticRouteRequestBodyReservedIpRanges[] reservedIpRanges) {
        this.reservedIpRanges = reservedIpRanges;
        return this;
    }
    
    /**
     * The subnet of the static route
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnet")
    public String subnet;
    public UpdateNetworkStaticRouteRequestBody withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }
    
}
