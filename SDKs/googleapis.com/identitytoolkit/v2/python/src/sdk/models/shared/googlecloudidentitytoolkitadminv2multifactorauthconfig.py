"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudidentitytoolkitadminv2providerconfig as shared_googlecloudidentitytoolkitadminv2providerconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum(str, Enum):
    PROVIDER_UNSPECIFIED = 'PROVIDER_UNSPECIFIED'
    PHONE_SMS = 'PHONE_SMS'

class GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum(str, Enum):
    r"""Whether MultiFactor Authentication has been enabled for this project."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    MANDATORY = 'MANDATORY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig:
    r"""Options related to MultiFactor Authentication for the project."""
    
    enabled_providers: Optional[list[GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabledProviders'), 'exclude': lambda f: f is None }})
    r"""A list of usable second factors for this project."""  
    provider_configs: Optional[list[shared_googlecloudidentitytoolkitadminv2providerconfig.GoogleCloudIdentitytoolkitAdminV2ProviderConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('providerConfigs'), 'exclude': lambda f: f is None }})
    r"""A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field."""  
    state: Optional[GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Whether MultiFactor Authentication has been enabled for this project."""  
    