"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import patchcompliancedatastate_enum as shared_patchcompliancedatastate_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchComplianceData:
    r"""Information about the state of a patch on a particular managed node as it relates to the patch baseline used to patch the node."""
    
    classification: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Classification') }})  
    installed_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstalledTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    kb_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KBId') }})  
    severity: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Severity') }})  
    state: shared_patchcompliancedatastate_enum.PatchComplianceDataStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('State') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title') }})  
    cve_ids: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CVEIds'), 'exclude': lambda f: f is None }})  
    