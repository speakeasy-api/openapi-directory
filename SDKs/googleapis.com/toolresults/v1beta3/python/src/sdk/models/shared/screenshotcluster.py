"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import screen as shared_screen
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScreenshotCluster:
    r"""Successful response"""
    
    activity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activity'), 'exclude': lambda f: f is None }})
    r"""A string that describes the activity of every screen in the cluster."""  
    cluster_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterId'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for the cluster. @OutputOnly"""  
    key_screen: Optional[shared_screen.Screen] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyScreen'), 'exclude': lambda f: f is None }})  
    screens: Optional[list[shared_screen.Screen]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screens'), 'exclude': lambda f: f is None }})
    r"""Full list of screens."""  
    