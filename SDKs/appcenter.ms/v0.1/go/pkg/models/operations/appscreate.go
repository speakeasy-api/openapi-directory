// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AppsCreateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// AppsCreateRequestBodyOsEnum - The OS the app will be running on
type AppsCreateRequestBodyOsEnum string

const (
	AppsCreateRequestBodyOsEnumAndroid AppsCreateRequestBodyOsEnum = "Android"
	AppsCreateRequestBodyOsEnumIOs     AppsCreateRequestBodyOsEnum = "iOS"
	AppsCreateRequestBodyOsEnumMacOs   AppsCreateRequestBodyOsEnum = "macOS"
	AppsCreateRequestBodyOsEnumTizen   AppsCreateRequestBodyOsEnum = "Tizen"
	AppsCreateRequestBodyOsEnumTvOs    AppsCreateRequestBodyOsEnum = "tvOS"
	AppsCreateRequestBodyOsEnumWindows AppsCreateRequestBodyOsEnum = "Windows"
	AppsCreateRequestBodyOsEnumLinux   AppsCreateRequestBodyOsEnum = "Linux"
	AppsCreateRequestBodyOsEnumCustom  AppsCreateRequestBodyOsEnum = "Custom"
)

func (e *AppsCreateRequestBodyOsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Android":
		fallthrough
	case "iOS":
		fallthrough
	case "macOS":
		fallthrough
	case "Tizen":
		fallthrough
	case "tvOS":
		fallthrough
	case "Windows":
		fallthrough
	case "Linux":
		fallthrough
	case "Custom":
		*e = AppsCreateRequestBodyOsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreateRequestBodyOsEnum: %s", s)
	}
}

// AppsCreateRequestBodyPlatformEnum - The platform of the app
type AppsCreateRequestBodyPlatformEnum string

const (
	AppsCreateRequestBodyPlatformEnumJava            AppsCreateRequestBodyPlatformEnum = "Java"
	AppsCreateRequestBodyPlatformEnumObjectiveCSwift AppsCreateRequestBodyPlatformEnum = "Objective-C-Swift"
	AppsCreateRequestBodyPlatformEnumUwp             AppsCreateRequestBodyPlatformEnum = "UWP"
	AppsCreateRequestBodyPlatformEnumCordova         AppsCreateRequestBodyPlatformEnum = "Cordova"
	AppsCreateRequestBodyPlatformEnumReactNative     AppsCreateRequestBodyPlatformEnum = "React-Native"
	AppsCreateRequestBodyPlatformEnumXamarin         AppsCreateRequestBodyPlatformEnum = "Xamarin"
	AppsCreateRequestBodyPlatformEnumUnity           AppsCreateRequestBodyPlatformEnum = "Unity"
	AppsCreateRequestBodyPlatformEnumElectron        AppsCreateRequestBodyPlatformEnum = "Electron"
	AppsCreateRequestBodyPlatformEnumWpf             AppsCreateRequestBodyPlatformEnum = "WPF"
	AppsCreateRequestBodyPlatformEnumWinForms        AppsCreateRequestBodyPlatformEnum = "WinForms"
	AppsCreateRequestBodyPlatformEnumCustom          AppsCreateRequestBodyPlatformEnum = "Custom"
)

func (e *AppsCreateRequestBodyPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Java":
		fallthrough
	case "Objective-C-Swift":
		fallthrough
	case "UWP":
		fallthrough
	case "Cordova":
		fallthrough
	case "React-Native":
		fallthrough
	case "Xamarin":
		fallthrough
	case "Unity":
		fallthrough
	case "Electron":
		fallthrough
	case "WPF":
		fallthrough
	case "WinForms":
		fallthrough
	case "Custom":
		*e = AppsCreateRequestBodyPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreateRequestBodyPlatformEnum: %s", s)
	}
}

// AppsCreateRequestBody - The data for the app
type AppsCreateRequestBody struct {
	// A short text describing the app
	Description *string `json:"description,omitempty"`
	// The descriptive name of the app. This can contain any characters
	DisplayName string `json:"display_name"`
	// The name of the app used in URLs
	Name *string `json:"name,omitempty"`
	// The OS the app will be running on
	Os AppsCreateRequestBodyOsEnum `json:"os"`
	// The platform of the app
	Platform AppsCreateRequestBodyPlatformEnum `json:"platform"`
	// A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
	ReleaseType *string `json:"release_type,omitempty"`
}

type AppsCreateDefaultApplicationJSONErrorCodeEnum string

const (
	AppsCreateDefaultApplicationJSONErrorCodeEnumBadRequest          AppsCreateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AppsCreateDefaultApplicationJSONErrorCodeEnumConflict            AppsCreateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AppsCreateDefaultApplicationJSONErrorCodeEnumNotAcceptable       AppsCreateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppsCreateDefaultApplicationJSONErrorCodeEnumNotFound            AppsCreateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AppsCreateDefaultApplicationJSONErrorCodeEnumInternalServerError AppsCreateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AppsCreateDefaultApplicationJSONErrorCodeEnumUnauthorized        AppsCreateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AppsCreateDefaultApplicationJSONErrorCodeEnumTooManyRequests     AppsCreateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppsCreateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppsCreateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppsCreateDefaultApplicationJSONError struct {
	Code    AppsCreateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                        `json:"message"`
}

// AppsCreateDefaultApplicationJSON - Error
type AppsCreateDefaultApplicationJSON struct {
	Error AppsCreateDefaultApplicationJSONError `json:"error"`
}

type AppsCreate201ApplicationJSONAzureSubscription struct {
	// If the subscription can be used for billing
	IsBillable *bool `json:"is_billable,omitempty"`
	// If the subscription is used for billing
	IsBilling *bool `json:"is_billing,omitempty"`
	// If the subscription is internal Microsoft subscription
	IsMicrosoftInternal *bool `json:"is_microsoft_internal,omitempty"`
	// The azure subscription id
	SubscriptionID string `json:"subscription_id"`
	// The name of the azure subscription
	SubscriptionName string `json:"subscription_name"`
	// The tenant id of the azure subscription belongs to
	TenantID string `json:"tenant_id"`
}

type AppsCreate201ApplicationJSONMemberPermissionsEnum string

const (
	AppsCreate201ApplicationJSONMemberPermissionsEnumManager   AppsCreate201ApplicationJSONMemberPermissionsEnum = "manager"
	AppsCreate201ApplicationJSONMemberPermissionsEnumDeveloper AppsCreate201ApplicationJSONMemberPermissionsEnum = "developer"
	AppsCreate201ApplicationJSONMemberPermissionsEnumViewer    AppsCreate201ApplicationJSONMemberPermissionsEnum = "viewer"
	AppsCreate201ApplicationJSONMemberPermissionsEnumTester    AppsCreate201ApplicationJSONMemberPermissionsEnum = "tester"
)

func (e *AppsCreate201ApplicationJSONMemberPermissionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manager":
		fallthrough
	case "developer":
		fallthrough
	case "viewer":
		fallthrough
	case "tester":
		*e = AppsCreate201ApplicationJSONMemberPermissionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreate201ApplicationJSONMemberPermissionsEnum: %s", s)
	}
}

// AppsCreate201ApplicationJSONOriginEnum - The creation origin of this app
type AppsCreate201ApplicationJSONOriginEnum string

const (
	AppsCreate201ApplicationJSONOriginEnumAppcenter AppsCreate201ApplicationJSONOriginEnum = "appcenter"
	AppsCreate201ApplicationJSONOriginEnumHockeyapp AppsCreate201ApplicationJSONOriginEnum = "hockeyapp"
	AppsCreate201ApplicationJSONOriginEnumCodepush  AppsCreate201ApplicationJSONOriginEnum = "codepush"
)

func (e *AppsCreate201ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		fallthrough
	case "codepush":
		*e = AppsCreate201ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreate201ApplicationJSONOriginEnum: %s", s)
	}
}

// AppsCreate201ApplicationJSONOsEnum - The OS the app will be running on
type AppsCreate201ApplicationJSONOsEnum string

const (
	AppsCreate201ApplicationJSONOsEnumAndroid AppsCreate201ApplicationJSONOsEnum = "Android"
	AppsCreate201ApplicationJSONOsEnumIOs     AppsCreate201ApplicationJSONOsEnum = "iOS"
	AppsCreate201ApplicationJSONOsEnumMacOs   AppsCreate201ApplicationJSONOsEnum = "macOS"
	AppsCreate201ApplicationJSONOsEnumTizen   AppsCreate201ApplicationJSONOsEnum = "Tizen"
	AppsCreate201ApplicationJSONOsEnumTvOs    AppsCreate201ApplicationJSONOsEnum = "tvOS"
	AppsCreate201ApplicationJSONOsEnumWindows AppsCreate201ApplicationJSONOsEnum = "Windows"
	AppsCreate201ApplicationJSONOsEnumLinux   AppsCreate201ApplicationJSONOsEnum = "Linux"
	AppsCreate201ApplicationJSONOsEnumCustom  AppsCreate201ApplicationJSONOsEnum = "Custom"
)

func (e *AppsCreate201ApplicationJSONOsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Android":
		fallthrough
	case "iOS":
		fallthrough
	case "macOS":
		fallthrough
	case "Tizen":
		fallthrough
	case "tvOS":
		fallthrough
	case "Windows":
		fallthrough
	case "Linux":
		fallthrough
	case "Custom":
		*e = AppsCreate201ApplicationJSONOsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreate201ApplicationJSONOsEnum: %s", s)
	}
}

// AppsCreate201ApplicationJSONOwnerTypeEnum - The owner type. Can either be 'org' or 'user'
type AppsCreate201ApplicationJSONOwnerTypeEnum string

const (
	AppsCreate201ApplicationJSONOwnerTypeEnumOrg  AppsCreate201ApplicationJSONOwnerTypeEnum = "org"
	AppsCreate201ApplicationJSONOwnerTypeEnumUser AppsCreate201ApplicationJSONOwnerTypeEnum = "user"
)

func (e *AppsCreate201ApplicationJSONOwnerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "org":
		fallthrough
	case "user":
		*e = AppsCreate201ApplicationJSONOwnerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreate201ApplicationJSONOwnerTypeEnum: %s", s)
	}
}

// AppsCreate201ApplicationJSONOwner - The information about the app's owner
type AppsCreate201ApplicationJSONOwner struct {
	// The avatar URL of the owner
	AvatarURL *string `json:"avatar_url,omitempty"`
	// The owner's display name
	DisplayName string `json:"display_name"`
	// The owner's email address
	Email *string `json:"email,omitempty"`
	// The unique id (UUID) of the owner
	ID string `json:"id"`
	// The unique name that used to identify the owner
	Name string `json:"name"`
	// The owner type. Can either be 'org' or 'user'
	Type AppsCreate201ApplicationJSONOwnerTypeEnum `json:"type"`
}

// AppsCreate201ApplicationJSONPlatformEnum - The platform of the app
type AppsCreate201ApplicationJSONPlatformEnum string

const (
	AppsCreate201ApplicationJSONPlatformEnumJava            AppsCreate201ApplicationJSONPlatformEnum = "Java"
	AppsCreate201ApplicationJSONPlatformEnumObjectiveCSwift AppsCreate201ApplicationJSONPlatformEnum = "Objective-C-Swift"
	AppsCreate201ApplicationJSONPlatformEnumUwp             AppsCreate201ApplicationJSONPlatformEnum = "UWP"
	AppsCreate201ApplicationJSONPlatformEnumCordova         AppsCreate201ApplicationJSONPlatformEnum = "Cordova"
	AppsCreate201ApplicationJSONPlatformEnumReactNative     AppsCreate201ApplicationJSONPlatformEnum = "React-Native"
	AppsCreate201ApplicationJSONPlatformEnumUnity           AppsCreate201ApplicationJSONPlatformEnum = "Unity"
	AppsCreate201ApplicationJSONPlatformEnumElectron        AppsCreate201ApplicationJSONPlatformEnum = "Electron"
	AppsCreate201ApplicationJSONPlatformEnumXamarin         AppsCreate201ApplicationJSONPlatformEnum = "Xamarin"
	AppsCreate201ApplicationJSONPlatformEnumWpf             AppsCreate201ApplicationJSONPlatformEnum = "WPF"
	AppsCreate201ApplicationJSONPlatformEnumWinForms        AppsCreate201ApplicationJSONPlatformEnum = "WinForms"
	AppsCreate201ApplicationJSONPlatformEnumUnknown         AppsCreate201ApplicationJSONPlatformEnum = "Unknown"
	AppsCreate201ApplicationJSONPlatformEnumCustom          AppsCreate201ApplicationJSONPlatformEnum = "Custom"
)

func (e *AppsCreate201ApplicationJSONPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Java":
		fallthrough
	case "Objective-C-Swift":
		fallthrough
	case "UWP":
		fallthrough
	case "Cordova":
		fallthrough
	case "React-Native":
		fallthrough
	case "Unity":
		fallthrough
	case "Electron":
		fallthrough
	case "Xamarin":
		fallthrough
	case "WPF":
		fallthrough
	case "WinForms":
		fallthrough
	case "Unknown":
		fallthrough
	case "Custom":
		*e = AppsCreate201ApplicationJSONPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsCreate201ApplicationJSONPlatformEnum: %s", s)
	}
}

// AppsCreate201ApplicationJSON - Success
type AppsCreate201ApplicationJSON struct {
	// A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
	AppSecret         string                                         `json:"app_secret"`
	AzureSubscription *AppsCreate201ApplicationJSONAzureSubscription `json:"azure_subscription,omitempty"`
	// The created date of this app
	CreatedAt *string `json:"created_at,omitempty"`
	// The description of the app
	Description *string `json:"description,omitempty"`
	// The display name of the app
	DisplayName string `json:"display_name"`
	// The string representation of the source of the app's icon
	IconSource *string `json:"icon_source,omitempty"`
	// The string representation of the URL pointing to the app's icon
	IconURL *string `json:"icon_url,omitempty"`
	// The unique ID (UUID) of the app
	ID string `json:"id"`
	// The permissions of the calling user
	MemberPermissions []AppsCreate201ApplicationJSONMemberPermissionsEnum `json:"member_permissions,omitempty"`
	// The name of the app used in URLs
	Name string `json:"name"`
	// The creation origin of this app
	Origin AppsCreate201ApplicationJSONOriginEnum `json:"origin"`
	// The OS the app will be running on
	Os AppsCreate201ApplicationJSONOsEnum `json:"os"`
	// The information about the app's owner
	Owner AppsCreate201ApplicationJSONOwner `json:"owner"`
	// The platform of the app
	Platform AppsCreate201ApplicationJSONPlatformEnum `json:"platform"`
	// A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
	ReleaseType *string `json:"release_type,omitempty"`
	// The last updated date of this app
	UpdatedAt *string `json:"updated_at,omitempty"`
}

type AppsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	AppsCreate201ApplicationJSONObject *AppsCreate201ApplicationJSON
	// Error
	AppsCreateDefaultApplicationJSONObject *AppsCreateDefaultApplicationJSON
}
