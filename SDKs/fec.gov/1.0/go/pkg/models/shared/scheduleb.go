// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
	"time"
)

type ScheduleB struct {
	AmendmentIndicator         *string `json:"amendment_indicator,omitempty"`
	AmendmentIndicatorDesc     *string `json:"amendment_indicator_desc,omitempty"`
	BackReferenceScheduleID    *string `json:"back_reference_schedule_id,omitempty"`
	BackReferenceTransactionID *string `json:"back_reference_transaction_id,omitempty"`
	BeneficiaryCommitteeName   *string `json:"beneficiary_committee_name,omitempty"`
	CandidateFirstName         *string `json:"candidate_first_name,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	//
	CandidateID         *string `json:"candidate_id,omitempty"`
	CandidateLastName   *string `json:"candidate_last_name,omitempty"`
	CandidateMiddleName *string `json:"candidate_middle_name,omitempty"`
	// Name of candidate running for office
	CandidateName              *string           `json:"candidate_name,omitempty"`
	CandidateOffice            *string           `json:"candidate_office,omitempty"`
	CandidateOfficeDescription *string           `json:"candidate_office_description,omitempty"`
	CandidateOfficeDistrict    *string           `json:"candidate_office_district,omitempty"`
	CandidateOfficeState       *string           `json:"candidate_office_state,omitempty"`
	CandidateOfficeStateFull   *string           `json:"candidate_office_state_full,omitempty"`
	CandidatePrefix            *string           `json:"candidate_prefix,omitempty"`
	CandidateSuffix            *string           `json:"candidate_suffix,omitempty"`
	CategoryCode               *string           `json:"category_code,omitempty"`
	CategoryCodeFull           *string           `json:"category_code_full,omitempty"`
	CommDt                     *types.Date       `json:"comm_dt,omitempty"`
	Committee                  *CommitteeHistory `json:"committee,omitempty"`
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID                        *string           `json:"committee_id,omitempty"`
	ConduitCommitteeCity               *string           `json:"conduit_committee_city,omitempty"`
	ConduitCommitteeName               *string           `json:"conduit_committee_name,omitempty"`
	ConduitCommitteeState              *string           `json:"conduit_committee_state,omitempty"`
	ConduitCommitteeStreet1            *string           `json:"conduit_committee_street1,omitempty"`
	ConduitCommitteeStreet2            *string           `json:"conduit_committee_street2,omitempty"`
	ConduitCommitteeZip                *int              `json:"conduit_committee_zip,omitempty"`
	DisbursementAmount                 *float64          `json:"disbursement_amount,omitempty"`
	DisbursementDate                   *types.Date       `json:"disbursement_date,omitempty"`
	DisbursementDescription            *string           `json:"disbursement_description,omitempty"`
	DisbursementPurposeCategory        *string           `json:"disbursement_purpose_category,omitempty"`
	DisbursementType                   *string           `json:"disbursement_type,omitempty"`
	DisbursementTypeDescription        *string           `json:"disbursement_type_description,omitempty"`
	ElectionType                       *string           `json:"election_type,omitempty"`
	ElectionTypeFull                   *string           `json:"election_type_full,omitempty"`
	EntityType                         *string           `json:"entity_type,omitempty"`
	EntityTypeDesc                     *string           `json:"entity_type_desc,omitempty"`
	FecElectionTypeDesc                *string           `json:"fec_election_type_desc,omitempty"`
	FecElectionYear                    *string           `json:"fec_election_year,omitempty"`
	FileNumber                         *int              `json:"file_number,omitempty"`
	FilingForm                         *string           `json:"filing_form,omitempty"`
	ImageNumber                        *string           `json:"image_number,omitempty"`
	LineNumber                         *string           `json:"line_number,omitempty"`
	LineNumberLabel                    *string           `json:"line_number_label,omitempty"`
	LinkID                             *int              `json:"link_id,omitempty"`
	LoadDate                           *time.Time        `json:"load_date,omitempty"`
	MemoCode                           *string           `json:"memo_code,omitempty"`
	MemoCodeFull                       *string           `json:"memo_code_full,omitempty"`
	MemoText                           *string           `json:"memo_text,omitempty"`
	MemoedSubtotal                     *bool             `json:"memoed_subtotal,omitempty"`
	NationalCommitteeNonfederalAccount *string           `json:"national_committee_nonfederal_account,omitempty"`
	OriginalSubID                      *string           `json:"original_sub_id,omitempty"`
	PayeeEmployer                      *string           `json:"payee_employer,omitempty"`
	PayeeFirstName                     *string           `json:"payee_first_name,omitempty"`
	PayeeLastName                      *string           `json:"payee_last_name,omitempty"`
	PayeeMiddleName                    *string           `json:"payee_middle_name,omitempty"`
	PayeeOccupation                    *string           `json:"payee_occupation,omitempty"`
	PayeePrefix                        *string           `json:"payee_prefix,omitempty"`
	PayeeSuffix                        *string           `json:"payee_suffix,omitempty"`
	PdfURL                             *string           `json:"pdf_url,omitempty"`
	RecipientCity                      *string           `json:"recipient_city,omitempty"`
	RecipientCommittee                 *CommitteeHistory `json:"recipient_committee,omitempty"`
	RecipientCommitteeID               *string           `json:"recipient_committee_id,omitempty"`
	RecipientName                      *string           `json:"recipient_name,omitempty"`
	RecipientState                     *string           `json:"recipient_state,omitempty"`
	RecipientZip                       *string           `json:"recipient_zip,omitempty"`
	RefDispExcessFlg                   *string           `json:"ref_disp_excess_flg,omitempty"`
	// Name of report where the underlying data comes from:
	//     - 10D Pre-Election
	//     - 10G Pre-General
	//     - 10P Pre-Primary
	//     - 10R Pre-Run-Off
	//     - 10S Pre-Special
	//     - 12C Pre-Convention
	//     - 12G Pre-General
	//     - 12P Pre-Primary
	//     - 12R Pre-Run-Off
	//     - 12S Pre-Special
	//     - 30D Post-Election
	//     - 30G Post-General
	//     - 30P Post-Primary
	//     - 30R Post-Run-Off
	//     - 30S Post-Special
	//     - 60D Post-Convention
	//     - M1  January Monthly
	//     - M10 October Monthly
	//     - M11 November Monthly
	//     - M12 December Monthly
	//     - M2  February Monthly
	//     - M3  March Monthly
	//     - M4  April Monthly
	//     - M5  May Monthly
	//     - M6  June Monthly
	//     - M7  July Monthly
	//     - M8  August Monthly
	//     - M9  September Monthly
	//     - MY  Mid-Year Report
	//     - Q1  April Quarterly
	//     - Q2  July Quarterly
	//     - Q3  October Quarterly
	//     - TER Termination Report
	//     - YE  Year-End
	//     - ADJ COMP ADJUST AMEND
	//     - CA  COMPREHENSIVE AMEND
	//     - 90S Post Inaugural Supplement
	//     - 90D Post Inaugural
	//     - 48  48 Hour Notification
	//     - 24  24 Hour Notification
	//     - M7S July Monthly/Semi-Annual
	//     - MSA Monthly Semi-Annual (MY)
	//     - MYS Monthly Year End/Semi-Annual
	//     - Q2S July Quarterly/Semi-Annual
	//     - QSA Quarterly Semi-Annual (MY)
	//     - QYS Quarterly Year End/Semi-Annual
	//     - QYE Quarterly Semi-Annual (YE)
	//     - QMS Quarterly Mid-Year/ Semi-Annual
	//     - MSY Monthly Semi-Annual (YE)
	//
	ReportType *string `json:"report_type,omitempty"`
	// Forms with coverage date -
	//     year from the coverage ending date.
	// Forms without coverage date -
	//     year from the receipt date.
	//
	ReportYear                  *int     `json:"report_year,omitempty"`
	ScheduleType                *string  `json:"schedule_type,omitempty"`
	ScheduleTypeFull            *string  `json:"schedule_type_full,omitempty"`
	SemiAnnualBundledRefund     *float64 `json:"semi_annual_bundled_refund,omitempty"`
	SpenderCommitteeDesignation *string  `json:"spender_committee_designation,omitempty"`
	SpenderCommitteeOrgType     *string  `json:"spender_committee_org_type,omitempty"`
	SpenderCommitteeType        *string  `json:"spender_committee_type,omitempty"`
	SubID                       *string  `json:"sub_id,omitempty"`
	TransactionID               *string  `json:"transaction_id,omitempty"`
	// This is a two-year period that is derived from the year a transaction took place in the
	// Itemized Schedule A and Schedule B tables. In cases where we have the date of the transaction
	// (contribution_receipt_date in schedules/schedule_a, disbursement_date in schedules/schedule_b)
	// the two_year_transaction_period is named after the ending, even-numbered year. If we do not
	// have the date  of the transaction, we fall back to using the report year (report_year in both
	// tables) instead,  making the same cycle adjustment as necessary. If no transaction year is
	// specified, the results default to the most current cycle.
	//
	TwoYearTransactionPeriod   *int    `json:"two_year_transaction_period,omitempty"`
	UnusedRecipientCommitteeID *string `json:"unused_recipient_committee_id,omitempty"`
}
