// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateExclusionsPreviewXAmzTargetEnum
type CreateExclusionsPreviewXAmzTargetEnum string

const (
	CreateExclusionsPreviewXAmzTargetEnumInspectorServiceCreateExclusionsPreview CreateExclusionsPreviewXAmzTargetEnum = "InspectorService.CreateExclusionsPreview"
)

func (e CreateExclusionsPreviewXAmzTargetEnum) ToPointer() *CreateExclusionsPreviewXAmzTargetEnum {
	return &e
}

func (e *CreateExclusionsPreviewXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InspectorService.CreateExclusionsPreview":
		*e = CreateExclusionsPreviewXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateExclusionsPreviewXAmzTargetEnum: %v", v)
	}
}

type CreateExclusionsPreviewRequest struct {
	CreateExclusionsPreviewRequest shared.CreateExclusionsPreviewRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     CreateExclusionsPreviewXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateExclusionsPreviewResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateExclusionsPreviewResponse *shared.CreateExclusionsPreviewResponse
	// InternalException
	InternalException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// NoSuchEntityException
	NoSuchEntityException interface{}
	// PreviewGenerationInProgressException
	PreviewGenerationInProgressException interface{}
	// ServiceTemporarilyUnavailableException
	ServiceTemporarilyUnavailableException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
}
