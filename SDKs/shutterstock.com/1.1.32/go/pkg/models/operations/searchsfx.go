// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type SearchSFXSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// SearchSFXSortEnum - Sort by
type SearchSFXSortEnum string

const (
	SearchSFXSortEnumPopular   SearchSFXSortEnum = "popular"
	SearchSFXSortEnumNewest    SearchSFXSortEnum = "newest"
	SearchSFXSortEnumRelevance SearchSFXSortEnum = "relevance"
	SearchSFXSortEnumRandom    SearchSFXSortEnum = "random"
	SearchSFXSortEnumOldest    SearchSFXSortEnum = "oldest"
)

func (e SearchSFXSortEnum) ToPointer() *SearchSFXSortEnum {
	return &e
}

func (e *SearchSFXSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "popular":
		fallthrough
	case "newest":
		fallthrough
	case "relevance":
		fallthrough
	case "random":
		fallthrough
	case "oldest":
		*e = SearchSFXSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchSFXSortEnum: %v", v)
	}
}

// SearchSFXViewEnum - Amount of detail to render in the response
type SearchSFXViewEnum string

const (
	SearchSFXViewEnumMinimal SearchSFXViewEnum = "minimal"
	SearchSFXViewEnumFull    SearchSFXViewEnum = "full"
)

func (e SearchSFXViewEnum) ToPointer() *SearchSFXViewEnum {
	return &e
}

func (e *SearchSFXViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "minimal":
		fallthrough
	case "full":
		*e = SearchSFXViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchSFXViewEnum: %v", v)
	}
}

type SearchSFXRequest struct {
	// Show sound effects added on the specified date
	AddedDate *types.Date `queryParam:"style=form,explode=true,name=added_date"`
	// Show sound effects added before the specified date
	AddedDateEnd *types.Date `queryParam:"style=form,explode=true,name=added_date_end"`
	// Show sound effects added on or after the specified date
	AddedDateStart *types.Date `queryParam:"style=form,explode=true,name=added_date_start"`
	// Show sound effects with the specified duration in seconds
	Duration *int64 `queryParam:"style=form,explode=true,name=duration"`
	// Show sound effects with the specified duration or longer in seconds
	DurationFrom *int64 `queryParam:"style=form,explode=true,name=duration_from"`
	// Show sound effects with the specified duration or shorter in seconds
	DurationTo *int64 `queryParam:"style=form,explode=true,name=duration_to"`
	// Set query and result language (uses Accept-Language header if not set)
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// One or more search terms separated by spaces
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Enable or disable safe search
	Safe *bool `queryParam:"style=form,explode=true,name=safe"`
	// Sort by
	Sort *SearchSFXSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Amount of detail to render in the response
	View *SearchSFXViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type SearchSFXResponse struct {
	ContentType string
	// OK
	SFXSearchResults *shared.SFXSearchResults
	StatusCode       int
	RawResponse      *http.Response
}
