<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RoboStartingIntent - Message for specifying the start activities to crawl.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RoboStartingIntent
{
    /**
     * Specifies an intent that starts the main launcher activity.
     * 
     * @var ?array<string, mixed> $launcherActivity
     */
	#[\JMS\Serializer\Annotation\SerializedName('launcherActivity')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $launcherActivity = null;
    
    /**
     * A starting intent specified by an action, uri, and categories.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StartActivityIntent $startActivity
     */
	#[\JMS\Serializer\Annotation\SerializedName('startActivity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StartActivityIntent')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartActivityIntent $startActivity = null;
    
    /**
     * Timeout in seconds for each intent.
     * 
     * @var ?string $timeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeout = null;
    
	public function __construct()
	{
		$this->launcherActivity = null;
		$this->startActivity = null;
		$this->timeout = null;
	}
}
