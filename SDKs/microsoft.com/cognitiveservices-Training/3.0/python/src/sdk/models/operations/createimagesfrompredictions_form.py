"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from ..shared import imagecreatesummary as shared_imagecreatesummary
from ..shared import imageidcreatebatch as shared_imageidcreatebatch
from typing import Optional


@dataclasses.dataclass
class CreateImagesFromPredictionsFormRequest:
    
    image_id_create_batch: shared_imageidcreatebatch.ImageIDCreateBatch = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})
    r"""Image and tag ids. Limited to 64 images and 20 tags per batch."""  
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    training_key: str = dataclasses.field(metadata={'header': { 'field_name': 'Training-Key', 'style': 'simple', 'explode': False }})
    r"""API key."""  
    

@dataclasses.dataclass
class CreateImagesFromPredictionsFormResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    image_create_summary: Optional[shared_imagecreatesummary.ImageCreateSummary] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    