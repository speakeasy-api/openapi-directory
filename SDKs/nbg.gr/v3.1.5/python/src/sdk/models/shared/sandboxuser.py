"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sandboxbankaccount as shared_sandboxbankaccount
from ..shared import sandboxcard as shared_sandboxcard
from ..shared import sandboxretrycacheentry as shared_sandboxretrycacheentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SandboxUser:
    r"""User data"""
    
    accounts: Optional[list[shared_sandboxbankaccount.SandboxBankAccount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounts'), 'exclude': lambda f: f is None }})
    r"""List of accounts"""  
    cards: Optional[list[shared_sandboxcard.SandboxCard]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cards'), 'exclude': lambda f: f is None }})
    r"""List of cards"""  
    retry_cache_entries: Optional[list[shared_sandboxretrycacheentry.SandboxRetryCacheEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retryCacheEntries'), 'exclude': lambda f: f is None }})
    r"""Retry cache entries"""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})
    r"""Connected user id"""  
    