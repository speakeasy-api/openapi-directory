// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResolverQueryLogConfigAssociationErrorEnum string

const (
	ResolverQueryLogConfigAssociationErrorEnumNone                 ResolverQueryLogConfigAssociationErrorEnum = "NONE"
	ResolverQueryLogConfigAssociationErrorEnumDestinationNotFound  ResolverQueryLogConfigAssociationErrorEnum = "DESTINATION_NOT_FOUND"
	ResolverQueryLogConfigAssociationErrorEnumAccessDenied         ResolverQueryLogConfigAssociationErrorEnum = "ACCESS_DENIED"
	ResolverQueryLogConfigAssociationErrorEnumInternalServiceError ResolverQueryLogConfigAssociationErrorEnum = "INTERNAL_SERVICE_ERROR"
)

func (e ResolverQueryLogConfigAssociationErrorEnum) ToPointer() *ResolverQueryLogConfigAssociationErrorEnum {
	return &e
}

func (e *ResolverQueryLogConfigAssociationErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "DESTINATION_NOT_FOUND":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "INTERNAL_SERVICE_ERROR":
		*e = ResolverQueryLogConfigAssociationErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResolverQueryLogConfigAssociationErrorEnum: %v", v)
	}
}
