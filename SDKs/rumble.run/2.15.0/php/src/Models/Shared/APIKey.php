<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * APIKey - key details
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class APIKey
{
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('counter')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $counter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdBy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('inactive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inactive = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_used_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lastUsedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_used_ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastUsedIp = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_used_ua')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastUsedUa = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('organization_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organizationId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $token = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usage_limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $usageLimit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usage_today')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $usageToday = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->comment = null;
		$this->counter = null;
		$this->createdAt = null;
		$this->createdBy = null;
		$this->id = "";
		$this->inactive = null;
		$this->lastUsedAt = null;
		$this->lastUsedIp = null;
		$this->lastUsedUa = null;
		$this->organizationId = null;
		$this->token = null;
		$this->type = null;
		$this->usageLimit = null;
		$this->usageToday = null;
	}
}
