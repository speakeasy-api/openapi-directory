// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GeneratePartialYaraRuleRequestBodyFile struct {
	Content []byte `multipartForm:"content"`
	File    string `multipartForm:"name=file"`
}

type GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum string

const (
	GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnumTrue  GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum = "true"
	GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnumFalse GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum = "false"
)

func (e *GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		fallthrough
	case "false":
		*e = GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum: %s", s)
	}
}

type GeneratePartialYaraRuleRequestBody struct {
	// file
	File                GeneratePartialYaraRuleRequestBodyFile                     `multipartForm:"file"`
	IsUnpackingRequired *GeneratePartialYaraRuleRequestBodyIsUnpackingRequiredEnum `multipartForm:"name=is_unpacking_required"`
	MinimumStringLength *string                                                    `multipartForm:"name=minimum_string_length"`
	StringsToIgnore     []string                                                   `multipartForm:"name=strings_to_ignore"`
}

// GeneratePartialYaraRule200Wildcard - Yara rules
type GeneratePartialYaraRule200Wildcard struct {
	Rule *shared.Yara
}

type GeneratePartialYaraRuleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
