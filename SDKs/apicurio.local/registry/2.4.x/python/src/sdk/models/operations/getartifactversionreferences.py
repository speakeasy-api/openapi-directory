"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import artifactreference as shared_artifactreference
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class GetArtifactVersionReferencesRequest:
    
    artifact_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'artifactId', 'style': 'simple', 'explode': False }})
    r"""The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier."""  
    group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'groupId', 'style': 'simple', 'explode': False }})
    r"""The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts."""  
    version: str = dataclasses.field(metadata={'path_param': { 'field_name': 'version', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of a specific version of the artifact content."""  
    

@dataclasses.dataclass
class GetArtifactVersionReferencesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    artifact_references: Optional[list[shared_artifactreference.ArtifactReference]] = dataclasses.field(default=None)
    r"""List of all the artifact references for this artifact."""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Common response for all operations that can return a `404` error."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    