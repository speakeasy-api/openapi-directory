// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartTransactionRequestBodyTransactionTypeEnum - Indicates whether this transaction should be read only or read and write. Writes made using a read-only transaction ID will be rejected. Read-only transactions do not need to be committed.
type StartTransactionRequestBodyTransactionTypeEnum string

const (
	StartTransactionRequestBodyTransactionTypeEnumReadAndWrite StartTransactionRequestBodyTransactionTypeEnum = "READ_AND_WRITE"
	StartTransactionRequestBodyTransactionTypeEnumReadOnly     StartTransactionRequestBodyTransactionTypeEnum = "READ_ONLY"
)

func (e *StartTransactionRequestBodyTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "READ_AND_WRITE":
		fallthrough
	case "READ_ONLY":
		*e = StartTransactionRequestBodyTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartTransactionRequestBodyTransactionTypeEnum: %s", s)
	}
}

type StartTransactionRequestBody struct {
	// Indicates whether this transaction should be read only or read and write. Writes made using a read-only transaction ID will be rejected. Read-only transactions do not need to be committed.
	TransactionType *StartTransactionRequestBodyTransactionTypeEnum `json:"TransactionType,omitempty"`
}

type StartTransactionRequest struct {
	RequestBody       StartTransactionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartTransactionResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	StartTransactionResponse *shared.StartTransactionResponse
	StatusCode               int
	RawResponse              *http.Response
}
