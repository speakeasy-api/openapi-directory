/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * RequisitionRequest - RequisitionSerializer.
 */
public class RequisitionRequest {
    /**
     * option to enable account selection view for the end user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_selection")
    @SpeakeasyMetadata("form:name=account_selection multipartForm:name=account_selection")
    public Boolean accountSelection;

    public RequisitionRequest withAccountSelection(Boolean accountSelection) {
        this.accountSelection = accountSelection;
        return this;
    }
    
    /**
     * EUA associated with this requisition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("agreement")
    @SpeakeasyMetadata("form:name=agreement multipartForm:name=agreement")
    public String agreement;

    public RequisitionRequest withAgreement(String agreement) {
        this.agreement = agreement;
        return this;
    }
    
    /**
     * an Institution ID for this Requisition
     */
    @JsonProperty("institution_id")
    @SpeakeasyMetadata("form:name=institution_id multipartForm:name=institution_id")
    public String institutionId;

    public RequisitionRequest withInstitutionId(String institutionId) {
        this.institutionId = institutionId;
        return this;
    }
    
    /**
     * redirect URL to your application after end-user authorization with ASPSP
     */
    @JsonProperty("redirect")
    @SpeakeasyMetadata("form:name=redirect multipartForm:name=redirect")
    public String redirect;

    public RequisitionRequest withRedirect(String redirect) {
        this.redirect = redirect;
        return this;
    }
    
    /**
     * enable redirect back to the client after account list received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirect_immediate")
    @SpeakeasyMetadata("form:name=redirect_immediate multipartForm:name=redirect_immediate")
    public Boolean redirectImmediate;

    public RequisitionRequest withRedirectImmediate(Boolean redirectImmediate) {
        this.redirectImmediate = redirectImmediate;
        return this;
    }
    
    /**
     * additional ID to identify the end user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    @SpeakeasyMetadata("form:name=reference multipartForm:name=reference")
    public String reference;

    public RequisitionRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * optional SSN field to verify ownership of the account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssn")
    @SpeakeasyMetadata("form:name=ssn multipartForm:name=ssn")
    public String ssn;

    public RequisitionRequest withSsn(String ssn) {
        this.ssn = ssn;
        return this;
    }
    
    /**
     * A two-letter country code (ISO 639-1)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_language")
    @SpeakeasyMetadata("form:name=user_language multipartForm:name=user_language")
    public String userLanguage;

    public RequisitionRequest withUserLanguage(String userLanguage) {
        this.userLanguage = userLanguage;
        return this;
    }
    
    public RequisitionRequest(@JsonProperty("institution_id") String institutionId, @JsonProperty("redirect") String redirect) {
        this.institutionId = institutionId;
        this.redirect = redirect;
  }
}
