/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Card } from "./card";
import { CardPaymentTimeline } from "./cardpaymenttimeline";
import { DeviceDetails } from "./devicedetails";
import { ErrorT } from "./error";
import { Expose, Type } from "class-transformer";

/**
 * Reflects the current status of a card payment. Contains only non-confidential information.
 */
export class CardPaymentDetails extends SpeakeasyBase {
  /**
   * For EMV payments, the cryptogram generated for the payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "application_cryptogram" })
  applicationCryptogram?: string;

  /**
   * For EMV payments, the application ID identifies the EMV application used for the payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "application_identifier" })
  applicationIdentifier?: string;

  /**
   * For EMV payments, the human-readable name of the EMV application used for the payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "application_name" })
  applicationName?: string;

  /**
   * The status code returned by the card issuer that describes the payment's
   *
   * @remarks
   * authorization status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auth_result_code" })
  authResultCode?: string;

  /**
   * The status code returned from the Address Verification System (AVS) check. The code can be
   *
   * @remarks
   * `AVS_ACCEPTED`, `AVS_REJECTED`, or `AVS_NOT_CHECKED`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avs_status" })
  avsStatus?: string;

  /**
   * Represents the payment details of a card to be used for payments. These
   *
   * @remarks
   * details are determined by the payment token generated by Web Payments SDK.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => Card)
  card?: Card;

  /**
   * The timeline for card payments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card_payment_timeline" })
  @Type(() => CardPaymentTimeline)
  cardPaymentTimeline?: CardPaymentTimeline;

  /**
   * The status code returned from the Card Verification Value (CVV) check. The code can be
   *
   * @remarks
   * `CVV_ACCEPTED`, `CVV_REJECTED`, or `CVV_NOT_CHECKED`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cvv_status" })
  cvvStatus?: string;

  /**
   * Details about the device that took the payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_details" })
  @Type(() => DeviceDetails)
  deviceDetails?: DeviceDetails;

  /**
   * The method used to enter the card's details for the payment. The method can be
   *
   * @remarks
   * `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entry_method" })
  entryMethod?: string;

  /**
   * Information about errors encountered during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * Whether the card must be physically present for the payment to
   *
   * @remarks
   * be refunded.  If set to `true`, the card must be present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refund_requires_card_presence" })
  refundRequiresCardPresence?: boolean;

  /**
   * The statement description sent to the card networks.
   *
   * @remarks
   *
   * Note: The actual statement description varies and is likely to be truncated and appended with
   * additional information on a per issuer basis.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statement_description" })
  statementDescription?: string;

  /**
   * The card payment's current state. The state can be AUTHORIZED, CAPTURED, VOIDED, or
   *
   * @remarks
   * FAILED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * For EMV payments, the method used to verify the cardholder's identity. The method can be
   *
   * @remarks
   * `PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verification_method" })
  verificationMethod?: string;

  /**
   * For EMV payments, the results of the cardholder verification. The result can be
   *
   * @remarks
   * `SUCCESS`, `FAILURE`, or `UNKNOWN`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verification_results" })
  verificationResults?: string;
}
