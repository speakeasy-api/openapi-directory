// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ModifySettingPathParams struct {
	// Id of the setting to set
	SettingID string `pathParam:"style=simple,explode=false,name=settingId"`
}

type ModifySettingRequestBody struct {
	// New value of the setting
	Value *string `json:"value,omitempty"`
}

type ModifySettingRequest struct {
	PathParams ModifySettingPathParams
	Request    ModifySettingRequestBody `request:"mediaType=application/json"`
}

// ModifySetting200ApplicationJSONActionEnum - The id of the action
type ModifySetting200ApplicationJSONActionEnum string

const (
	ModifySetting200ApplicationJSONActionEnumModifySetting ModifySetting200ApplicationJSONActionEnum = "modifySetting"
)

func (e *ModifySetting200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "modifySetting":
		*e = ModifySetting200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifySetting200ApplicationJSONActionEnum: %s", s)
	}
}

// ModifySetting200ApplicationJSONData - Information about the setting
type ModifySetting200ApplicationJSONData struct {
	// Id and value of the property
	SettingID *string `json:"settingId,omitempty"`
}

// ModifySetting200ApplicationJSONResultEnum - Result of the request
type ModifySetting200ApplicationJSONResultEnum string

const (
	ModifySetting200ApplicationJSONResultEnumSuccess ModifySetting200ApplicationJSONResultEnum = "success"
	ModifySetting200ApplicationJSONResultEnumError   ModifySetting200ApplicationJSONResultEnum = "error"
)

func (e *ModifySetting200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ModifySetting200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifySetting200ApplicationJSONResultEnum: %s", s)
	}
}

// ModifySetting200ApplicationJSON - Settings
type ModifySetting200ApplicationJSON struct {
	// The id of the action
	Action ModifySetting200ApplicationJSONActionEnum `json:"action"`
	// Information about the setting
	Data ModifySetting200ApplicationJSONData `json:"data"`
	// Id of the setting
	ID string `json:"id"`
	// Result of the request
	Result ModifySetting200ApplicationJSONResultEnum `json:"result"`
}

type ModifySettingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Settings
	ModifySetting200ApplicationJSONObject *ModifySetting200ApplicationJSON
}
