// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeEventCategoriesActionEnum
type GETDescribeEventCategoriesActionEnum string

const (
	GETDescribeEventCategoriesActionEnumDescribeEventCategories GETDescribeEventCategoriesActionEnum = "DescribeEventCategories"
)

func (e *GETDescribeEventCategoriesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeEventCategories":
		*e = GETDescribeEventCategoriesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventCategoriesActionEnum: %s", s)
	}
}

// GETDescribeEventCategoriesVersionEnum
type GETDescribeEventCategoriesVersionEnum string

const (
	GETDescribeEventCategoriesVersionEnumTwoThousandAndThirteen0110 GETDescribeEventCategoriesVersionEnum = "2013-01-10"
)

func (e *GETDescribeEventCategoriesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-10":
		*e = GETDescribeEventCategoriesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventCategoriesVersionEnum: %s", s)
	}
}

type GETDescribeEventCategoriesRequest struct {
	Action            GETDescribeEventCategoriesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	SourceType        *string                               `queryParam:"style=form,explode=true,name=SourceType"`
	Version           GETDescribeEventCategoriesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEventCategoriesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
