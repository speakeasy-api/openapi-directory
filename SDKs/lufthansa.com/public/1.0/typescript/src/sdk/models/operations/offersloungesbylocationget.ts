/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class OffersLoungesByLocationGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  auth: string;
}

export class OffersLoungesByLocationGetRequest extends SpeakeasyBase {
  /**
   * http header: application/json or application/xml (Acceptable values are: "application/json", "application/xml")
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Cabin class: 'M', 'E', 'C', 'F' (Acceptable values are: "", "M", "E", "C", "F")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cabinClass",
  })
  cabinClass?: string;

  /**
   * Language code.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lang" })
  lang?: string;

  /**
   * 3-leter IATA airport or city code (e.g. 'ZRH')
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=location",
  })
  location: string;

  /**
   * Frequent flyer level ('FTL', 'SGC', 'SEN', 'HON') (Acceptable values are: "", "FTL", "SGC", "SEN", "HON")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tierCode",
  })
  tierCode?: string;
}

export class OffersLoungesByLocationGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  offersLoungesByLocationGet200ApplicationJSONObject?: Record<string, any>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
