/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateTableRequestInput - Request message for google.bigtable.admin.v2.BigtableTableAdmin.CreateTable
 */
public class CreateTableRequestInput {
    /**
     * The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `["a", "apple", "custom", "customer_1", "customer_2",` `"other", "zz"]` * initial_split_keys := `["apple", "customer_1", "customer_2", "other"]` * Key assignment: - Tablet 1 `[, apple) =&gt; {"a"}.` - Tablet 2 `[apple, customer_1) =&gt; {"apple", "custom"}.` - Tablet 3 `[customer_1, customer_2) =&gt; {"customer_1"}.` - Tablet 4 `[customer_2, other) =&gt; {"customer_2"}.` - Tablet 5 `[other, ) =&gt; {"other", "zz"}.`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialSplits")
    public Split[] initialSplits;

    public CreateTableRequestInput withInitialSplits(Split[] initialSplits) {
        this.initialSplits = initialSplits;
        return this;
    }
    
    /**
     * A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("table")
    public TableInput table;

    public CreateTableRequestInput withTable(TableInput table) {
        this.table = table;
        return this;
    }
    
    /**
     * Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableId")
    public String tableId;

    public CreateTableRequestInput withTableId(String tableId) {
        this.tableId = tableId;
        return this;
    }
    
    public CreateTableRequestInput(){}
}
