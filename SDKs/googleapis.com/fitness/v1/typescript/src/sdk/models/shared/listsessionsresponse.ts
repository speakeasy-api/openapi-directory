/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Session } from "./session";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class ListSessionsResponse extends SpeakeasyBase {
  /**
   * If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.
   */
  @SpeakeasyMetadata({ elemType: Session })
  @Expose({ name: "deletedSession" })
  @Type(() => Session)
  deletedSession?: Session[];

  /**
   * Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasMoreData" })
  hasMoreData?: boolean;

  /**
   * The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Sessions with an end time that is between startTime and endTime of the request.
   */
  @SpeakeasyMetadata({ elemType: Session })
  @Expose({ name: "session" })
  @Type(() => Session)
  session?: Session[];
}
