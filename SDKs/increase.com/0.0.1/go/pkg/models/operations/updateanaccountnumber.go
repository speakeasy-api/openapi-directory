// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateAnAccountNumberRequest struct {
	AccountNumberID                 string                                 `pathParam:"style=simple,explode=false,name=account_number_id"`
	UpdateAnAccountNumberParameters shared.UpdateAnAccountNumberParameters `request:"mediaType=application/json"`
}

type UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum = 429
)

func (e UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON13TypeEnumRateLimitedError UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON13 struct {
	Detail     string                                                  `json:"detail"`
	RetryAfter *int64                                                  `json:"retry_after,omitempty"`
	Status     UpdateAnAccountNumberDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                  `json:"title"`
	Type       UpdateAnAccountNumberDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON12StatusEnumFourHundredAndThree UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum = 403
)

func (e UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON12TypeEnumPrivateFeatureError UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON12 struct {
	Detail string                                                  `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON11StatusEnumFourHundredAndFour UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum = 404
)

func (e UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON11TypeEnumObjectNotFoundError UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON11 struct {
	Detail string                                                  `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON10StatusEnumFourHundred UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum = 400
)

func (e UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON10TypeEnumMalformedRequestError UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON10 struct {
	Detail string                                                  `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON9StatusEnumFourHundred UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum = 400
)

func (e UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON9TypeEnumInvalidParametersError UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                               `json:"errors"`
	Status UpdateAnAccountNumberDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON8StatusEnumFourHundredAndNine UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum = 409
)

func (e UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON8TypeEnumInvalidOperationError UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON8 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON7StatusEnumFourHundredAndOne UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum = 401
)

func (e UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON7TypeEnumInvalidAPIKeyError UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON7 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON6StatusEnumFiveHundred UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum = 500
)

func (e UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON6TypeEnumInternalServerError UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON6 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON5StatusEnumFourHundredAndThree UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum = 403
)

func (e UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON5TypeEnumInsufficientPermissionsError UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON5 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum = 422
)

func (e UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON4 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON3StatusEnumFourHundredAndNine UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum = 409
)

func (e UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON3TypeEnumIdempotencyConflictError UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON3 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON2StatusEnumFourHundredAndThree UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum = 403
)

func (e UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON2TypeEnumEnvironmentMismatchError UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON2 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum int64

const (
	UpdateAnAccountNumberDefaultApplicationJSON1StatusEnumFourHundredAndFour UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum = 404
)

func (e UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum string

const (
	UpdateAnAccountNumberDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum) ToPointer() *UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type UpdateAnAccountNumberDefaultApplicationJSON1 struct {
	Detail string                                                 `json:"detail"`
	Status UpdateAnAccountNumberDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   UpdateAnAccountNumberDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type UpdateAnAccountNumberResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Number
	AccountNumber *shared.AccountNumber
	// Error
	Error interface{}
}
