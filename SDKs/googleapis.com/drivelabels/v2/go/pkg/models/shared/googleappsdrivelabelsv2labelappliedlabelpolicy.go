// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum - Indicates how the applied label and field values should be copied when a Drive item is copied.
type GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum string

const (
	GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnumCopyModeUnspecified GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum = "COPY_MODE_UNSPECIFIED"
	GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnumDoNotCopy           GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum = "DO_NOT_COPY"
	GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnumAlwaysCopy          GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum = "ALWAYS_COPY"
	GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnumCopyAppliable       GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum = "COPY_APPLIABLE"
)

func (e GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum) ToPointer() *GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum {
	return &e
}

func (e *GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COPY_MODE_UNSPECIFIED":
		fallthrough
	case "DO_NOT_COPY":
		fallthrough
	case "ALWAYS_COPY":
		fallthrough
	case "COPY_APPLIABLE":
		*e = GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum: %v", v)
	}
}

// GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy - Behavior of this label when it's applied to Drive items.
type GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy struct {
	// Indicates how the applied label and field values should be copied when a Drive item is copied.
	CopyMode *GoogleAppsDriveLabelsV2LabelAppliedLabelPolicyCopyModeEnum `json:"copyMode,omitempty"`
}
