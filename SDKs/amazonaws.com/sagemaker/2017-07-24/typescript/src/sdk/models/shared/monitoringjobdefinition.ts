/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonitoringAppSpecification } from "./monitoringappspecification";
import { MonitoringBaselineConfig } from "./monitoringbaselineconfig";
import { MonitoringInput } from "./monitoringinput";
import { MonitoringOutputConfig } from "./monitoringoutputconfig";
import { MonitoringResources } from "./monitoringresources";
import { MonitoringStoppingCondition } from "./monitoringstoppingcondition";
import { NetworkConfig } from "./networkconfig";
import { Expose, Type } from "class-transformer";

/**
 * Defines the monitoring job.
 */
export class MonitoringJobDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BaselineConfig" })
  @Type(() => MonitoringBaselineConfig)
  baselineConfig?: MonitoringBaselineConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringAppSpecification" })
  @Type(() => MonitoringAppSpecification)
  monitoringAppSpecification: MonitoringAppSpecification;

  @SpeakeasyMetadata({ elemType: MonitoringInput })
  @Expose({ name: "MonitoringInputs" })
  @Type(() => MonitoringInput)
  monitoringInputs: MonitoringInput[];

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringOutputConfig" })
  @Type(() => MonitoringOutputConfig)
  monitoringOutputConfig: MonitoringOutputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringResources" })
  @Type(() => MonitoringResources)
  monitoringResources: MonitoringResources;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkConfig" })
  @Type(() => NetworkConfig)
  networkConfig?: NetworkConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StoppingCondition" })
  @Type(() => MonitoringStoppingCondition)
  stoppingCondition?: MonitoringStoppingCondition;
}
