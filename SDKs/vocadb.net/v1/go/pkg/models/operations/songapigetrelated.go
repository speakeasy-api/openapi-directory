// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SongAPIGetRelatedPathParams struct {
	// Song whose related songs are to be queried.
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// SongAPIGetRelatedFieldsEnum - Optional song fields.
type SongAPIGetRelatedFieldsEnum string

const (
	SongAPIGetRelatedFieldsEnumNone            SongAPIGetRelatedFieldsEnum = "None"
	SongAPIGetRelatedFieldsEnumAdditionalNames SongAPIGetRelatedFieldsEnum = "AdditionalNames"
	SongAPIGetRelatedFieldsEnumAlbums          SongAPIGetRelatedFieldsEnum = "Albums"
	SongAPIGetRelatedFieldsEnumArtists         SongAPIGetRelatedFieldsEnum = "Artists"
	SongAPIGetRelatedFieldsEnumLyrics          SongAPIGetRelatedFieldsEnum = "Lyrics"
	SongAPIGetRelatedFieldsEnumMainPicture     SongAPIGetRelatedFieldsEnum = "MainPicture"
	SongAPIGetRelatedFieldsEnumNames           SongAPIGetRelatedFieldsEnum = "Names"
	SongAPIGetRelatedFieldsEnumPVs             SongAPIGetRelatedFieldsEnum = "PVs"
	SongAPIGetRelatedFieldsEnumReleaseEvent    SongAPIGetRelatedFieldsEnum = "ReleaseEvent"
	SongAPIGetRelatedFieldsEnumTags            SongAPIGetRelatedFieldsEnum = "Tags"
	SongAPIGetRelatedFieldsEnumThumbURL        SongAPIGetRelatedFieldsEnum = "ThumbUrl"
	SongAPIGetRelatedFieldsEnumWebLinks        SongAPIGetRelatedFieldsEnum = "WebLinks"
)

func (e *SongAPIGetRelatedFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Albums":
		fallthrough
	case "Artists":
		fallthrough
	case "Lyrics":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "ThumbUrl":
		fallthrough
	case "WebLinks":
		*e = SongAPIGetRelatedFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetRelatedFieldsEnum: %s", s)
	}
}

// SongAPIGetRelatedLangEnum - Content language preference.
type SongAPIGetRelatedLangEnum string

const (
	SongAPIGetRelatedLangEnumDefault  SongAPIGetRelatedLangEnum = "Default"
	SongAPIGetRelatedLangEnumJapanese SongAPIGetRelatedLangEnum = "Japanese"
	SongAPIGetRelatedLangEnumRomaji   SongAPIGetRelatedLangEnum = "Romaji"
	SongAPIGetRelatedLangEnumEnglish  SongAPIGetRelatedLangEnum = "English"
)

func (e *SongAPIGetRelatedLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = SongAPIGetRelatedLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetRelatedLangEnum: %s", s)
	}
}

type SongAPIGetRelatedQueryParams struct {
	// Optional song fields.
	Fields *SongAPIGetRelatedFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference.
	Lang *SongAPIGetRelatedLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type SongAPIGetRelatedRequest struct {
	PathParams  SongAPIGetRelatedPathParams
	QueryParams SongAPIGetRelatedQueryParams
}

type SongAPIGetRelatedResponse struct {
	Body        []byte
	ContentType string
	// OK
	RelatedSongsContract *shared.RelatedSongsContract
	StatusCode           int
	RawResponse          *http.Response
}
