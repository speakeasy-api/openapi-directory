"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevokeSecurityGroupEgressRequest = exports.RevokeSecurityGroupEgressRequestIpPermissions = exports.RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs = exports.RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds = exports.RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges = exports.RevokeSecurityGroupEgressRequestIpPermissionsIpRanges = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Describes an IPv4 range.
 */
var RevokeSecurityGroupEgressRequestIpPermissionsIpRanges = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressRequestIpPermissionsIpRanges, _super);
    function RevokeSecurityGroupEgressRequestIpPermissionsIpRanges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsIpRanges.prototype, "cidrIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsIpRanges.prototype, "description", void 0);
    return RevokeSecurityGroupEgressRequestIpPermissionsIpRanges;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressRequestIpPermissionsIpRanges = RevokeSecurityGroupEgressRequestIpPermissionsIpRanges;
/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
var RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges, _super);
    function RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges.prototype, "cidrIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges.prototype, "description", void 0);
    return RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges = RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges;
/**
 * Describes a prefix list ID.
 */
var RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds, _super);
    function RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds.prototype, "prefixListId", void 0);
    return RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds = RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds;
/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
var RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs, _super);
    function RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "peeringStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "userId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "vpcId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs.prototype, "vpcPeeringConnectionId", void 0);
    return RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs = RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs;
/**
 * Describes a set of permissions for a security group rule.
 */
var RevokeSecurityGroupEgressRequestIpPermissions = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressRequestIpPermissions, _super);
    function RevokeSecurityGroupEgressRequestIpPermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "ipProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressRequestIpPermissionsIpRanges,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "ipRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressRequestIpPermissionsIpv6Ranges,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "ipv6Ranges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressRequestIpPermissionsPrefixListIds,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "prefixListIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "toPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressRequestIpPermissionsUserIdGroupPairs,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressRequestIpPermissions.prototype, "userIdGroupPairs", void 0);
    return RevokeSecurityGroupEgressRequestIpPermissions;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressRequestIpPermissions = RevokeSecurityGroupEgressRequestIpPermissions;
var RevokeSecurityGroupEgressRequest = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressRequest, _super);
    function RevokeSecurityGroupEgressRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequest.prototype, "cidrIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RevokeSecurityGroupEgressRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupEgressRequest.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequest.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressRequestIpPermissions,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressRequest.prototype, "ipPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequest.prototype, "ipProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressRequest.prototype, "securityGroupRuleIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequest.prototype, "sourceSecurityGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressRequest.prototype, "sourceSecurityGroupOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupEgressRequest.prototype, "toPort", void 0);
    return RevokeSecurityGroupEgressRequest;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressRequest = RevokeSecurityGroupEgressRequest;
