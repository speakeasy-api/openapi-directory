/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BeezUPCommonColumnDataTypeEnum } from "./beezupcommoncolumndatatypeenum";
import { BeezUPCommonColumnImportanceEnum } from "./beezupcommoncolumnimportanceenum";
import { Expose } from "class-transformer";

/**
 * Describe a BeezUP column
 */
export class BeezUPColumnConfiguration extends SpeakeasyBase {
  /**
   * The BeezUP column name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beezUPColumnName" })
  beezUPColumnName: string;

  /**
   * If the size of the value is greater than the limit we can truncate the value instead of failing...
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canBeTruncated" })
  canBeTruncated?: boolean;

  /**
   * Data type of the column, will be used for parsing and for consolidation proces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnDataType" })
  columnDataType?: BeezUPCommonColumnDataTypeEnum;

  /**
   * Importance of the column
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnImportance" })
  columnImportance: BeezUPCommonColumnImportanceEnum;

  /**
   * Describe the BeezUP column
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Indicate the display group name where the column must be putted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayGroupName" })
  displayGroupName: string;

  /**
   * /!\ ONLY AVAILABLE ON CATALOG COLUMN NOT ON CUSTOM COLUMNS!!
   *
   * @remarks
   * If true, an error happen at the second occurence of the same value for this column
   * This information will be used during the importation process and later for mapping proposal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique" })
  unique?: boolean;
}
