// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublicKeyCertificateFormatEnum - The certificate format.
type PublicKeyCertificateFormatEnum string

const (
	PublicKeyCertificateFormatEnumUnspecifiedPublicKeyCertificateFormat PublicKeyCertificateFormatEnum = "UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT"
	PublicKeyCertificateFormatEnumX509CertificatePem                    PublicKeyCertificateFormatEnum = "X509_CERTIFICATE_PEM"
)

func (e PublicKeyCertificateFormatEnum) ToPointer() *PublicKeyCertificateFormatEnum {
	return &e
}

func (e *PublicKeyCertificateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT":
		fallthrough
	case "X509_CERTIFICATE_PEM":
		*e = PublicKeyCertificateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublicKeyCertificateFormatEnum: %v", v)
	}
}

// PublicKeyCertificate - A public key certificate format and data.
type PublicKeyCertificate struct {
	// The certificate data.
	Certificate *string `json:"certificate,omitempty"`
	// The certificate format.
	Format *PublicKeyCertificateFormatEnum `json:"format,omitempty"`
	// Details of an X.509 certificate. For informational purposes only.
	X509Details *X509CertificateDetails `json:"x509Details,omitempty"`
}
