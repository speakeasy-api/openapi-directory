// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImageFailureCodeEnum string

const (
	ImageFailureCodeEnumInvalidImageDigest            ImageFailureCodeEnum = "InvalidImageDigest"
	ImageFailureCodeEnumInvalidImageTag               ImageFailureCodeEnum = "InvalidImageTag"
	ImageFailureCodeEnumImageTagDoesNotMatchDigest    ImageFailureCodeEnum = "ImageTagDoesNotMatchDigest"
	ImageFailureCodeEnumImageNotFound                 ImageFailureCodeEnum = "ImageNotFound"
	ImageFailureCodeEnumMissingDigestAndTag           ImageFailureCodeEnum = "MissingDigestAndTag"
	ImageFailureCodeEnumImageReferencedByManifestList ImageFailureCodeEnum = "ImageReferencedByManifestList"
	ImageFailureCodeEnumKmsError                      ImageFailureCodeEnum = "KmsError"
)

func (e ImageFailureCodeEnum) ToPointer() *ImageFailureCodeEnum {
	return &e
}

func (e *ImageFailureCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InvalidImageDigest":
		fallthrough
	case "InvalidImageTag":
		fallthrough
	case "ImageTagDoesNotMatchDigest":
		fallthrough
	case "ImageNotFound":
		fallthrough
	case "MissingDigestAndTag":
		fallthrough
	case "ImageReferencedByManifestList":
		fallthrough
	case "KmsError":
		*e = ImageFailureCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageFailureCodeEnum: %v", v)
	}
}
