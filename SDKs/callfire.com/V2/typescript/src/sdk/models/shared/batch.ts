/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A status of batch (NEW, VALIDATING, ERRORS, SOURCE_ERROR, ACTIVE). NEW - batch is queued for validation; VALIDATING - batch is currently validating; ERRORS - batch is processed, some validation errors occurred; SOURCE_ERROR - if contact source is contact list in CallFire system and it has an error; ACTIVE - batch is processed and ready
 */
export enum BatchStatusEnum {
  New = "NEW",
  Validating = "VALIDATING",
  Errors = "ERRORS",
  SourceError = "SOURCE_ERROR",
  Active = "ACTIVE",
}

/**
 * A batch represents a group of contacts which can be dialed or texted via call/text broadcast
 */
export class Batch extends SpeakeasyBase {
  /**
   * An id of broadcast which batch belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "broadcastId" })
  broadcastId?: number;

  /**
   * A date and time when batch was created, formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created?: number;

  /**
   * An enabled batch. If batch is disabled its contacts remain undialed/untexted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * A id of a batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * A batch name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A number of contacts remaining undialed/untexted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remaining" })
  remaining?: number;

  /**
   * A total number of contacts in batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  /**
   * A status of batch (NEW, VALIDATING, ERRORS, SOURCE_ERROR, ACTIVE). NEW - batch is queued for validation; VALIDATING - batch is currently validating; ERRORS - batch is processed, some validation errors occurred; SOURCE_ERROR - if contact source is contact list in CallFire system and it has an error; ACTIVE - batch is processed and ready
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: BatchStatusEnum;
}

/**
 * A batch represents a group of contacts which can be dialed or texted via call/text broadcast
 */
export class BatchInput extends SpeakeasyBase {
  /**
   * An id of broadcast which batch belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "broadcastId" })
  broadcastId?: number;

  /**
   * An enabled batch. If batch is disabled its contacts remain undialed/untexted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * A id of a batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * A batch name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A status of batch (NEW, VALIDATING, ERRORS, SOURCE_ERROR, ACTIVE). NEW - batch is queued for validation; VALIDATING - batch is currently validating; ERRORS - batch is processed, some validation errors occurred; SOURCE_ERROR - if contact source is contact list in CallFire system and it has an error; ACTIVE - batch is processed and ready
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: BatchStatusEnum;
}
