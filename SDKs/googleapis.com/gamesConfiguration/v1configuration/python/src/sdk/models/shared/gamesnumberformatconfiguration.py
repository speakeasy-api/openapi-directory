"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gamesnumberaffixconfiguration as shared_gamesnumberaffixconfiguration
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GamesNumberFormatConfigurationNumberFormatTypeEnum(str, Enum):
    r"""The formatting for the number."""
    NUMBER_FORMAT_TYPE_UNSPECIFIED = 'NUMBER_FORMAT_TYPE_UNSPECIFIED'
    NUMERIC = 'NUMERIC'
    TIME_DURATION = 'TIME_DURATION'
    CURRENCY = 'CURRENCY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GamesNumberFormatConfiguration:
    r"""A number format resource."""
    
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""The curreny code string. Only used for CURRENCY format type."""  
    number_format_type: Optional[GamesNumberFormatConfigurationNumberFormatTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberFormatType'), 'exclude': lambda f: f is None }})
    r"""The formatting for the number."""  
    num_decimal_places: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numDecimalPlaces'), 'exclude': lambda f: f is None }})
    r"""The number of decimal places for number. Only used for NUMERIC format type."""  
    suffix: Optional[shared_gamesnumberaffixconfiguration.GamesNumberAffixConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suffix'), 'exclude': lambda f: f is None }})
    r"""A number affix resource."""  
    