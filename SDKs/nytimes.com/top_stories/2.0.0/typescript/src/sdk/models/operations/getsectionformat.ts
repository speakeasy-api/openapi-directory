/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * if this is JSONP or JSON
 */
export enum GetSectionFormatFormatEnum {
  Json = "json",
  Jsonp = "jsonp",
}

/**
 * The section the story appears in.
 */
export enum GetSectionFormatSectionEnum {
  Home = "home",
  Opinion = "opinion",
  World = "world",
  National = "national",
  Politics = "politics",
  Upshot = "upshot",
  Nyregion = "nyregion",
  Business = "business",
  Technology = "technology",
  Science = "science",
  Health = "health",
  Sports = "sports",
  Arts = "arts",
  Books = "books",
  Movies = "movies",
  Theater = "theater",
  Sundayreview = "sundayreview",
  Fashion = "fashion",
  Tmagazine = "tmagazine",
  Food = "food",
  Travel = "travel",
  Magazine = "magazine",
  Realestate = "realestate",
  Automobiles = "automobiles",
  Obituaries = "obituaries",
  Insider = "insider",
}

export class GetSectionFormatRequest extends SpeakeasyBase {
  /**
   * The name of the function the API call results will be passed to. Required when using JSONP. This parameter has only one valid value per section. The format is {section_name}TopStoriesCallback.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * if this is JSONP or JSON
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: GetSectionFormatFormatEnum;

  /**
   * The section the story appears in.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=section",
  })
  section: GetSectionFormatSectionEnum;
}

/**
 * An array of articles
 */
export class GetSectionFormat200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Article })
  @Expose({ name: "results" })
  @Type(() => shared.Article)
  results?: shared.Article[];
}

export class GetSectionFormatResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of articles
   */
  @SpeakeasyMetadata()
  getSectionFormat200ApplicationJSONObject?: GetSectionFormat200ApplicationJSON;
}
