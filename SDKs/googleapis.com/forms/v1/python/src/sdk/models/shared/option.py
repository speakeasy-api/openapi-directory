"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import image as shared_image
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OptionGoToActionEnum(str, Enum):
    r"""Section navigation type."""
    GO_TO_ACTION_UNSPECIFIED = 'GO_TO_ACTION_UNSPECIFIED'
    NEXT_SECTION = 'NEXT_SECTION'
    RESTART_FORM = 'RESTART_FORM'
    SUBMIT_FORM = 'SUBMIT_FORM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Option:
    r"""An option for a Choice question."""
    
    go_to_action: Optional[OptionGoToActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goToAction'), 'exclude': lambda f: f is None }})
    r"""Section navigation type."""  
    go_to_section_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goToSectionId'), 'exclude': lambda f: f is None }})
    r"""Item ID of section header to go to."""  
    image: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Data representing an image."""  
    is_other: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isOther'), 'exclude': lambda f: f is None }})
    r"""Whether the option is \\"other\\". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Required. The choice as presented to the user."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OptionInput:
    r"""An option for a Choice question."""
    
    go_to_action: Optional[OptionGoToActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goToAction'), 'exclude': lambda f: f is None }})
    r"""Section navigation type."""  
    go_to_section_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goToSectionId'), 'exclude': lambda f: f is None }})
    r"""Item ID of section header to go to."""  
    image: Optional[shared_image.ImageInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Data representing an image."""  
    is_other: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isOther'), 'exclude': lambda f: f is None }})
    r"""Whether the option is \\"other\\". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Required. The choice as presented to the user."""  
    