<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VolumeGroupPatch - Properties to update for this Volume Group.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VolumeGroupPatch
{
    /**
     * The ID of the SLA Domain policy to assign to the Volume Group.
     * 
     * @var ?string $configuredSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $configuredSlaDomainId = null;
    
    /**
     * Determines whether the next snapshot of the Volume Group is a full. After the snapshot has completed, this parameter will be reset to the default false value.
     * 
     * @var ?bool $forceFull
     */
	#[\JMS\Serializer\Annotation\SerializedName('forceFull')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $forceFull = null;
    
    /**
     * Indicates whether backup, archival, and replicated is paused for this Volume Group.
     * 
     * @var ?bool $isPaused
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPaused')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPaused = null;
    
    /**
     * The unique ID of each volume included in the Volume Group.
     * 
     * @var ?array<string> $volumeIdsIncludedInSnapshots
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeIdsIncludedInSnapshots')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $volumeIdsIncludedInSnapshots = null;
    
	public function __construct()
	{
		$this->configuredSlaDomainId = null;
		$this->forceFull = null;
		$this->isPaused = null;
		$this->volumeIdsIncludedInSnapshots = null;
	}
}
