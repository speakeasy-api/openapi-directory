<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorization - A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorization
{
    /**
     * The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationCurrencyEnum>')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationCurrencyEnum $currency;
    
    /**
     * If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.
     * 
     * @var string $digitalWalletTokenId
     */
	#[\JMS\Serializer\Annotation\SerializedName('digital_wallet_token_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $digitalWalletTokenId;
    
    /**
     * The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
     * 
     * @var string $merchantAcceptorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_acceptor_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAcceptorId;
    
    /**
     * The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.
     * 
     * @var string $merchantCategoryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_category_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCategoryCode;
    
    /**
     * The city the merchant resides in.
     * 
     * @var string $merchantCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCity;
    
    /**
     * The country the merchant resides in.
     * 
     * @var string $merchantCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCountry;
    
    /**
     * The merchant descriptor of the merchant the card is transacting with.
     * 
     * @var string $merchantDescriptor
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_descriptor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantDescriptor;
    
    /**
     * The payment network used to process this card authorization
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkEnum $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkEnum>')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkEnum $network;
    
    /**
     * Fields specific to the `network`
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkDetails $networkDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('network_details')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkDetails')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkDetails $networkDetails;
    
    /**
     * The identifier of the Real-Time Decision sent to approve or decline this transaction.
     * 
     * @var string $realTimeDecisionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('real_time_decision_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $realTimeDecisionId;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->currency = \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationCurrencyEnum::CAD;
		$this->digitalWalletTokenId = "";
		$this->merchantAcceptorId = "";
		$this->merchantCategoryCode = "";
		$this->merchantCity = "";
		$this->merchantCountry = "";
		$this->merchantDescriptor = "";
		$this->network = \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkEnum::VISA;
		$this->networkDetails = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorizationNetworkDetails();
		$this->realTimeDecisionId = "";
	}
}
