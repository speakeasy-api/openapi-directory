/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateWorkspaceRequestBody {
    /**
     * Specifies whether the workspace can access Amazon Web Services resources in this Amazon Web Services account only, or whether it can also access Amazon Web Services resources in other accounts in the same organization. If you specify &lt;code&gt;ORGANIZATION&lt;/code&gt;, you must specify which organizational units the workspace can access in the &lt;code&gt;workspaceOrganizationalUnits&lt;/code&gt; parameter.
     */
    @JsonProperty("accountAccessType")
    public CreateWorkspaceRequestBodyAccountAccessTypeEnum accountAccessType;
    public CreateWorkspaceRequestBody withAccountAccessType(CreateWorkspaceRequestBodyAccountAccessTypeEnum accountAccessType) {
        this.accountAccessType = accountAccessType;
        return this;
    }
    
    /**
     * Specifies whether this workspace uses SAML 2.0, IAM Identity Center (successor to Single Sign-On), or both to authenticate users for using the Grafana console within a workspace. For more information, see &lt;a href="https://docs.aws.amazon.com/grafana/latest/userguide/authentication-in-AMG.html"&gt;User authentication in Amazon Managed Grafana&lt;/a&gt;.
     */
    @JsonProperty("authenticationProviders")
    public org.openapis.openapi.models.shared.AuthenticationProviderTypesEnum[] authenticationProviders;
    public CreateWorkspaceRequestBody withAuthenticationProviders(org.openapis.openapi.models.shared.AuthenticationProviderTypesEnum[] authenticationProviders) {
        this.authenticationProviders = authenticationProviders;
        return this;
    }
    
    /**
     * A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public CreateWorkspaceRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The configuration string for the workspace that you create. For more information about the format and configuration options available, see &lt;a href="https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html"&gt;Working in your Grafana workspace&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public String configuration;
    public CreateWorkspaceRequestBody withConfiguration(String configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * &lt;p&gt;The configuration settings for in-bound network access to your workspace.&lt;/p&gt; &lt;p&gt;When this is configured, only listed IP addresses and VPC endpoints will be able to access your workspace. Standard Grafana authentication and authorization will still be required.&lt;/p&gt; &lt;p&gt;If this is not configured, or is removed, then all IP addresses and VPC endpoints will be allowed. Standard Grafana authentication and authorization will still be required.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkAccessControl")
    public CreateWorkspaceRequestBodyNetworkAccessControl networkAccessControl;
    public CreateWorkspaceRequestBody withNetworkAccessControl(CreateWorkspaceRequestBodyNetworkAccessControl networkAccessControl) {
        this.networkAccessControl = networkAccessControl;
        return this;
    }
    
    /**
     * The name of an IAM role that already exists to use with Organizations to access Amazon Web Services data sources and notification channels in other accounts in an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationRoleName")
    public String organizationRoleName;
    public CreateWorkspaceRequestBody withOrganizationRoleName(String organizationRoleName) {
        this.organizationRoleName = organizationRoleName;
        return this;
    }
    
    /**
     * &lt;p&gt;When creating a workspace through the Amazon Web Services API, CLI or Amazon Web Services CloudFormation, you must manage IAM roles and provision the permissions that the workspace needs to use Amazon Web Services data sources and notification channels.&lt;/p&gt; &lt;p&gt;You must also specify a &lt;code&gt;workspaceRoleArn&lt;/code&gt; for a role that you will manage for the workspace to use when accessing those datasources and notification channels.&lt;/p&gt; &lt;p&gt;The ability for Amazon Managed Grafana to create and update IAM roles on behalf of the user is supported only in the Amazon Managed Grafana console, where this value may be set to &lt;code&gt;SERVICE_MANAGED&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Use only the &lt;code&gt;CUSTOMER_MANAGED&lt;/code&gt; permission type when creating a workspace with the API, CLI or Amazon Web Services CloudFormation. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html"&gt;Amazon Managed Grafana permissions and policies for Amazon Web Services data sources and notification channels&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonProperty("permissionType")
    public CreateWorkspaceRequestBodyPermissionTypeEnum permissionType;
    public CreateWorkspaceRequestBody withPermissionType(CreateWorkspaceRequestBodyPermissionTypeEnum permissionType) {
        this.permissionType = permissionType;
        return this;
    }
    
    /**
     * The name of the CloudFormation stack set to use to generate IAM roles to be used for this workspace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stackSetName")
    public String stackSetName;
    public CreateWorkspaceRequestBody withStackSetName(String stackSetName) {
        this.stackSetName = stackSetName;
        return this;
    }
    
    /**
     * The list of tags associated with the workspace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public CreateWorkspaceRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * &lt;p&gt;The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Provided &lt;code&gt;securityGroupIds&lt;/code&gt; and &lt;code&gt;subnetIds&lt;/code&gt; must be part of the same VPC.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcConfiguration")
    public CreateWorkspaceRequestBodyVpcConfiguration vpcConfiguration;
    public CreateWorkspaceRequestBody withVpcConfiguration(CreateWorkspaceRequestBodyVpcConfiguration vpcConfiguration) {
        this.vpcConfiguration = vpcConfiguration;
        return this;
    }
    
    /**
     * This parameter is for internal use only, and should not be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceDataSources")
    public org.openapis.openapi.models.shared.DataSourceTypeEnum[] workspaceDataSources;
    public CreateWorkspaceRequestBody withWorkspaceDataSources(org.openapis.openapi.models.shared.DataSourceTypeEnum[] workspaceDataSources) {
        this.workspaceDataSources = workspaceDataSources;
        return this;
    }
    
    /**
     * &lt;p&gt;A description for the workspace. This is used only to help you identify this workspace.&lt;/p&gt; &lt;p&gt;Pattern: &lt;code&gt;^[\\p{L}\\p{Z}\\p{N}\\p{P}]{0,2048}$&lt;/code&gt; &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceDescription")
    public String workspaceDescription;
    public CreateWorkspaceRequestBody withWorkspaceDescription(String workspaceDescription) {
        this.workspaceDescription = workspaceDescription;
        return this;
    }
    
    /**
     * The name for the workspace. It does not have to be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceName")
    public String workspaceName;
    public CreateWorkspaceRequestBody withWorkspaceName(String workspaceName) {
        this.workspaceName = workspaceName;
        return this;
    }
    
    /**
     * Specify the Amazon Web Services notification channels that you plan to use in this workspace. Specifying these data sources here enables Amazon Managed Grafana to create IAM roles and permissions that allow Amazon Managed Grafana to use these channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceNotificationDestinations")
    public org.openapis.openapi.models.shared.NotificationDestinationTypeEnum[] workspaceNotificationDestinations;
    public CreateWorkspaceRequestBody withWorkspaceNotificationDestinations(org.openapis.openapi.models.shared.NotificationDestinationTypeEnum[] workspaceNotificationDestinations) {
        this.workspaceNotificationDestinations = workspaceNotificationDestinations;
        return this;
    }
    
    /**
     * Specifies the organizational units that this workspace is allowed to use data sources from, if this workspace is in an account that is part of an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceOrganizationalUnits")
    public String[] workspaceOrganizationalUnits;
    public CreateWorkspaceRequestBody withWorkspaceOrganizationalUnits(String[] workspaceOrganizationalUnits) {
        this.workspaceOrganizationalUnits = workspaceOrganizationalUnits;
        return this;
    }
    
    /**
     * Specified the IAM role that grants permissions to the Amazon Web Services resources that the workspace will view data from, including both data sources and notification channels. You are responsible for managing the permissions for this role as new data sources or notification channels are added. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceRoleArn")
    public String workspaceRoleArn;
    public CreateWorkspaceRequestBody withWorkspaceRoleArn(String workspaceRoleArn) {
        this.workspaceRoleArn = workspaceRoleArn;
        return this;
    }
    
}
