/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InMemoryUser } from "./inmemoryuser";
import { Expose, Type } from "class-transformer";

/**
 * Settings to authenticate users using the in memory user store
 */
export class InMemoryAuthModuleConfig extends SpeakeasyBase {
  /**
   * Description of the config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc: string;

  /**
   * Unique id of the config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Name of the config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Max age of the session
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sessionMaxAge" })
  sessionMaxAge: string;

  /**
   * Type of settings. value is basic
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  /**
   * List of users
   */
  @SpeakeasyMetadata({ elemType: InMemoryUser })
  @Expose({ name: "users" })
  @Type(() => InMemoryUser)
  users: InMemoryUser[];
}
