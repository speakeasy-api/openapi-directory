/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AdvancedSeasonStatDefense {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drives")
    public Long drives;

    public AdvancedSeasonStatDefense withDrives(Long drives) {
        this.drives = drives;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("explosiveness")
    public Double explosiveness;

    public AdvancedSeasonStatDefense withExplosiveness(Double explosiveness) {
        this.explosiveness = explosiveness;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldPosition")
    public AdvancedSeasonStatDefenseFieldPosition fieldPosition;

    public AdvancedSeasonStatDefense withFieldPosition(AdvancedSeasonStatDefenseFieldPosition fieldPosition) {
        this.fieldPosition = fieldPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("havoc")
    public AdvancedSeasonStatDefenseHavoc havoc;

    public AdvancedSeasonStatDefense withHavoc(AdvancedSeasonStatDefenseHavoc havoc) {
        this.havoc = havoc;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineYards")
    public Double lineYards;

    public AdvancedSeasonStatDefense withLineYards(Double lineYards) {
        this.lineYards = lineYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineYardsTotal")
    public Double lineYardsTotal;

    public AdvancedSeasonStatDefense withLineYardsTotal(Double lineYardsTotal) {
        this.lineYardsTotal = lineYardsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openFieldYards")
    public Double openFieldYards;

    public AdvancedSeasonStatDefense withOpenFieldYards(Double openFieldYards) {
        this.openFieldYards = openFieldYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openFieldYardsTotal")
    public Long openFieldYardsTotal;

    public AdvancedSeasonStatDefense withOpenFieldYardsTotal(Long openFieldYardsTotal) {
        this.openFieldYardsTotal = openFieldYardsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passingDowns")
    public AdvancedSeasonStatDefensePassingDowns passingDowns;

    public AdvancedSeasonStatDefense withPassingDowns(AdvancedSeasonStatDefensePassingDowns passingDowns) {
        this.passingDowns = passingDowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passingPlays")
    public AdvancedSeasonStatDefensePassingPlays passingPlays;

    public AdvancedSeasonStatDefense withPassingPlays(AdvancedSeasonStatDefensePassingPlays passingPlays) {
        this.passingPlays = passingPlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plays")
    public Long plays;

    public AdvancedSeasonStatDefense withPlays(Long plays) {
        this.plays = plays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pointsPerOpportunity")
    public Double pointsPerOpportunity;

    public AdvancedSeasonStatDefense withPointsPerOpportunity(Double pointsPerOpportunity) {
        this.pointsPerOpportunity = pointsPerOpportunity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerSuccess")
    public Double powerSuccess;

    public AdvancedSeasonStatDefense withPowerSuccess(Double powerSuccess) {
        this.powerSuccess = powerSuccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ppa")
    public Double ppa;

    public AdvancedSeasonStatDefense withPpa(Double ppa) {
        this.ppa = ppa;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rushingPlays")
    public AdvancedSeasonStatDefenseRushingPlays rushingPlays;

    public AdvancedSeasonStatDefense withRushingPlays(AdvancedSeasonStatDefenseRushingPlays rushingPlays) {
        this.rushingPlays = rushingPlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondLevelYards")
    public Double secondLevelYards;

    public AdvancedSeasonStatDefense withSecondLevelYards(Double secondLevelYards) {
        this.secondLevelYards = secondLevelYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondLevelYardsTotal")
    public Long secondLevelYardsTotal;

    public AdvancedSeasonStatDefense withSecondLevelYardsTotal(Long secondLevelYardsTotal) {
        this.secondLevelYardsTotal = secondLevelYardsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standardDowns")
    public AdvancedSeasonStatDefenseStandardDowns standardDowns;

    public AdvancedSeasonStatDefense withStandardDowns(AdvancedSeasonStatDefenseStandardDowns standardDowns) {
        this.standardDowns = standardDowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stuffRate")
    public Double stuffRate;

    public AdvancedSeasonStatDefense withStuffRate(Double stuffRate) {
        this.stuffRate = stuffRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("successRate")
    public Double successRate;

    public AdvancedSeasonStatDefense withSuccessRate(Double successRate) {
        this.successRate = successRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalOpportunies")
    public Long totalOpportunies;

    public AdvancedSeasonStatDefense withTotalOpportunies(Long totalOpportunies) {
        this.totalOpportunies = totalOpportunies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPPA")
    public Double totalPPA;

    public AdvancedSeasonStatDefense withTotalPPA(Double totalPPA) {
        this.totalPPA = totalPPA;
        return this;
    }
    
    public AdvancedSeasonStatDefense(){}
}
