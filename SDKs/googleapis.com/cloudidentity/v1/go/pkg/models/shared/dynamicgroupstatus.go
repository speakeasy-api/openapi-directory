// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DynamicGroupStatusStatusEnum - Status of the dynamic group.
type DynamicGroupStatusStatusEnum string

const (
	DynamicGroupStatusStatusEnumStatusUnspecified   DynamicGroupStatusStatusEnum = "STATUS_UNSPECIFIED"
	DynamicGroupStatusStatusEnumUpToDate            DynamicGroupStatusStatusEnum = "UP_TO_DATE"
	DynamicGroupStatusStatusEnumUpdatingMemberships DynamicGroupStatusStatusEnum = "UPDATING_MEMBERSHIPS"
	DynamicGroupStatusStatusEnumInvalidQuery        DynamicGroupStatusStatusEnum = "INVALID_QUERY"
)

func (e DynamicGroupStatusStatusEnum) ToPointer() *DynamicGroupStatusStatusEnum {
	return &e
}

func (e *DynamicGroupStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "UP_TO_DATE":
		fallthrough
	case "UPDATING_MEMBERSHIPS":
		fallthrough
	case "INVALID_QUERY":
		*e = DynamicGroupStatusStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DynamicGroupStatusStatusEnum: %v", v)
	}
}

// DynamicGroupStatus - The current status of a dynamic group along with timestamp.
type DynamicGroupStatus struct {
	// Status of the dynamic group.
	Status *DynamicGroupStatusStatusEnum `json:"status,omitempty"`
	// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
	StatusTime *string `json:"statusTime,omitempty"`
}
