/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GuestPolicy - An OS Config resource representing a guest configuration policy. These policies represent the desired state for VM instance guest environments including packages to install or remove, package repository configurations, and software to install.
 */
public class GuestPolicy {
    /**
     * An assignment represents the group or groups of VM instances that the policy applies to. If an assignment is empty, it applies to all VM instances. Otherwise, the targeted VM instances must meet all the criteria specified. So if both labels and zones are specified, the policy applies to VM instances with those labels and in those zones.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignment")
    public Assignment assignment;

    public GuestPolicy withAssignment(Assignment assignment) {
        this.assignment = assignment;
        return this;
    }
    
    /**
     * Output only. Time this guest policy was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public GuestPolicy withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Description of the guest policy. Length of the description is limited to 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GuestPolicy withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The etag for this guest policy. If this is provided on update, it must match the server's etag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GuestPolicy withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Required. Unique name of the resource in this project using one of the following forms: `projects/{project_number}/guestPolicies/{guest_policy_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GuestPolicy withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A list of package repositories to configure on the VM instance. This is done before any other configs are applied so they can use these repos. Package repositories are only configured if the corresponding package manager(s) are available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageRepositories")
    public PackageRepository[] packageRepositories;

    public GuestPolicy withPackageRepositories(PackageRepository[] packageRepositories) {
        this.packageRepositories = packageRepositories;
        return this;
    }
    
    /**
     * The software packages to be managed by this policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packages")
    public Package[] packages;

    public GuestPolicy withPackages(Package[] packages) {
        this.packages = packages;
        return this;
    }
    
    /**
     * A list of Recipes to install on the VM instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recipes")
    public SoftwareRecipe[] recipes;

    public GuestPolicy withRecipes(SoftwareRecipe[] recipes) {
        this.recipes = recipes;
        return this;
    }
    
    /**
     * Output only. Last time this guest policy was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public GuestPolicy withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public GuestPolicy(){}
}
