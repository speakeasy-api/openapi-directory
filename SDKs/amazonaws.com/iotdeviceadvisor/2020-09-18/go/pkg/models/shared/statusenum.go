// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusEnum string

const (
	StatusEnumPass             StatusEnum = "PASS"
	StatusEnumFail             StatusEnum = "FAIL"
	StatusEnumCanceled         StatusEnum = "CANCELED"
	StatusEnumPending          StatusEnum = "PENDING"
	StatusEnumRunning          StatusEnum = "RUNNING"
	StatusEnumStopping         StatusEnum = "STOPPING"
	StatusEnumStopped          StatusEnum = "STOPPED"
	StatusEnumPassWithWarnings StatusEnum = "PASS_WITH_WARNINGS"
	StatusEnumError            StatusEnum = "ERROR"
)

func (e *StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PASS":
		fallthrough
	case "FAIL":
		fallthrough
	case "CANCELED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "PASS_WITH_WARNINGS":
		fallthrough
	case "ERROR":
		*e = StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusEnum: %s", s)
	}
}
