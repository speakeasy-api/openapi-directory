"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import meta as shared_meta
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetResourcesMediaIDYoutubeMetaDataJSONRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The id of the video to show meta data for."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetResourcesMediaIDYoutubeMetaDataJSON200ApplicationJSON:
    r"""Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'."""
    
    callback: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callback'), 'exclude': lambda f: f is None }})  
    meta: Optional[shared_meta.Meta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})  
    results: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetResourcesMediaIDYoutubeMetaDataJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_resources_media_id_youtube_meta_data_json_200_application_json_object: Optional[GetResourcesMediaIDYoutubeMetaDataJSON200ApplicationJSON] = dataclasses.field(default=None)
    r"""Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    