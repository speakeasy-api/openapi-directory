// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeModelQualityJobDefinitionXAmzTargetEnum
type DescribeModelQualityJobDefinitionXAmzTargetEnum string

const (
	DescribeModelQualityJobDefinitionXAmzTargetEnumSageMakerDescribeModelQualityJobDefinition DescribeModelQualityJobDefinitionXAmzTargetEnum = "SageMaker.DescribeModelQualityJobDefinition"
)

func (e DescribeModelQualityJobDefinitionXAmzTargetEnum) ToPointer() *DescribeModelQualityJobDefinitionXAmzTargetEnum {
	return &e
}

func (e *DescribeModelQualityJobDefinitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.DescribeModelQualityJobDefinition":
		*e = DescribeModelQualityJobDefinitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeModelQualityJobDefinitionXAmzTargetEnum: %v", v)
	}
}

type DescribeModelQualityJobDefinitionRequest struct {
	DescribeModelQualityJobDefinitionRequest shared.DescribeModelQualityJobDefinitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                           *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                 *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                        *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                               DescribeModelQualityJobDefinitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeModelQualityJobDefinitionResponse struct {
	ContentType string
	// Success
	DescribeModelQualityJobDefinitionResponse *shared.DescribeModelQualityJobDefinitionResponse
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
