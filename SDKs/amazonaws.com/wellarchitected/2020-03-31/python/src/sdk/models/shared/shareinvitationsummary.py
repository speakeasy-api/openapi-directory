"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import permissiontype_enum as shared_permissiontype_enum
from ..shared import shareresourcetype_enum as shared_shareresourcetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShareInvitationSummary:
    r"""A share invitation summary return object."""
    
    lens_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LensArn'), 'exclude': lambda f: f is None }})  
    lens_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LensName'), 'exclude': lambda f: f is None }})
    r"""The full name of the lens."""  
    permission_type: Optional[shared_permissiontype_enum.PermissionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PermissionType'), 'exclude': lambda f: f is None }})
    r"""Permission granted on a workload share."""  
    shared_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SharedBy'), 'exclude': lambda f: f is None }})
    r"""An Amazon Web Services account ID."""  
    shared_with: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SharedWith'), 'exclude': lambda f: f is None }})
    r"""The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload is shared."""  
    share_invitation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShareInvitationId'), 'exclude': lambda f: f is None }})  
    share_resource_type: Optional[shared_shareresourcetype_enum.ShareResourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShareResourceType'), 'exclude': lambda f: f is None }})  
    workload_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkloadId'), 'exclude': lambda f: f is None }})
    r"""The ID assigned to the workload. This ID is unique within an Amazon Web Services Region."""  
    workload_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkloadName'), 'exclude': lambda f: f is None }})
    r"""<p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>"""  
    