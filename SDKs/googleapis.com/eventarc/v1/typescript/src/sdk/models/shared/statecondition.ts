/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The canonical code of the condition.
 */
export enum StateConditionCodeEnum {
  Ok = "OK",
  Cancelled = "CANCELLED",
  Unknown = "UNKNOWN",
  InvalidArgument = "INVALID_ARGUMENT",
  DeadlineExceeded = "DEADLINE_EXCEEDED",
  NotFound = "NOT_FOUND",
  AlreadyExists = "ALREADY_EXISTS",
  PermissionDenied = "PERMISSION_DENIED",
  Unauthenticated = "UNAUTHENTICATED",
  ResourceExhausted = "RESOURCE_EXHAUSTED",
  FailedPrecondition = "FAILED_PRECONDITION",
  Aborted = "ABORTED",
  OutOfRange = "OUT_OF_RANGE",
  Unimplemented = "UNIMPLEMENTED",
  Internal = "INTERNAL",
  Unavailable = "UNAVAILABLE",
  DataLoss = "DATA_LOSS",
}

/**
 * A condition that is part of the trigger state computation.
 */
export class StateCondition extends SpeakeasyBase {
  /**
   * The canonical code of the condition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: StateConditionCodeEnum;

  /**
   * Human-readable message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}
