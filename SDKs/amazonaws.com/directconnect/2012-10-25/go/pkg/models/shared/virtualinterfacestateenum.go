// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VirtualInterfaceStateEnum string

const (
	VirtualInterfaceStateEnumConfirming VirtualInterfaceStateEnum = "confirming"
	VirtualInterfaceStateEnumVerifying  VirtualInterfaceStateEnum = "verifying"
	VirtualInterfaceStateEnumPending    VirtualInterfaceStateEnum = "pending"
	VirtualInterfaceStateEnumAvailable  VirtualInterfaceStateEnum = "available"
	VirtualInterfaceStateEnumDown       VirtualInterfaceStateEnum = "down"
	VirtualInterfaceStateEnumDeleting   VirtualInterfaceStateEnum = "deleting"
	VirtualInterfaceStateEnumDeleted    VirtualInterfaceStateEnum = "deleted"
	VirtualInterfaceStateEnumRejected   VirtualInterfaceStateEnum = "rejected"
	VirtualInterfaceStateEnumUnknown    VirtualInterfaceStateEnum = "unknown"
)

func (e *VirtualInterfaceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confirming":
		fallthrough
	case "verifying":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "down":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "rejected":
		fallthrough
	case "unknown":
		*e = VirtualInterfaceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualInterfaceStateEnum: %s", s)
	}
}
