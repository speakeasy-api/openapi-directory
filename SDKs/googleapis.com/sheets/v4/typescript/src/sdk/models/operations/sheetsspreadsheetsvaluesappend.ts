/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SheetsSpreadsheetsValuesAppendSecurityOption1 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesAppendSecurityOption2 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesAppendSecurityOption3 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesAppendSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, option=true" })
  option1?: SheetsSpreadsheetsValuesAppendSecurityOption1;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option2?: SheetsSpreadsheetsValuesAppendSecurityOption2;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option3?: SheetsSpreadsheetsValuesAppendSecurityOption3;
}

/**
 * How the input data should be inserted.
 */
export enum SheetsSpreadsheetsValuesAppendInsertDataOptionEnum {
  Overwrite = "OVERWRITE",
  InsertRows = "INSERT_ROWS",
}

/**
 * Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
 */
export enum SheetsSpreadsheetsValuesAppendResponseDateTimeRenderOptionEnum {
  SerialNumber = "SERIAL_NUMBER",
  FormattedString = "FORMATTED_STRING",
}

/**
 * Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
 */
export enum SheetsSpreadsheetsValuesAppendResponseValueRenderOptionEnum {
  FormattedValue = "FORMATTED_VALUE",
  UnformattedValue = "UNFORMATTED_VALUE",
  Formula = "FORMULA",
}

/**
 * How the input data should be interpreted.
 */
export enum SheetsSpreadsheetsValuesAppendValueInputOptionEnum {
  InputValueOptionUnspecified = "INPUT_VALUE_OPTION_UNSPECIFIED",
  Raw = "RAW",
  UserEntered = "USER_ENTERED",
}

export class SheetsSpreadsheetsValuesAppendRequest extends SpeakeasyBase {
  /**
   * V1 error format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$.xgafv",
  })
  dollarXgafv?: shared.XgafvEnum;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  valueRange?: shared.ValueRange;

  /**
   * OAuth access token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=access_token",
  })
  accessToken?: string;

  /**
   * Data format for response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * JSONP
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * Determines if the update response should include the values of the cells that were appended. By default, responses do not include the updated values.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=includeValuesInResponse",
  })
  includeValuesInResponse?: boolean;

  /**
   * How the input data should be inserted.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=insertDataOption",
  })
  insertDataOption?: SheetsSpreadsheetsValuesAppendInsertDataOptionEnum;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * The [A1 notation](/sheets/api/guides/concepts#cell) of a range to search for a logical table of data. Values are appended after the last row of the table.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=range",
  })
  range: string;

  /**
   * Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=responseDateTimeRenderOption",
  })
  responseDateTimeRenderOption?: SheetsSpreadsheetsValuesAppendResponseDateTimeRenderOptionEnum;

  /**
   * Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=responseValueRenderOption",
  })
  responseValueRenderOption?: SheetsSpreadsheetsValuesAppendResponseValueRenderOptionEnum;

  /**
   * The ID of the spreadsheet to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spreadsheetId",
  })
  spreadsheetId: string;

  /**
   * Legacy upload protocol for media (e.g. "media", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=uploadType",
  })
  uploadType?: string;

  /**
   * Upload protocol for media (e.g. "raw", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=upload_protocol",
  })
  uploadProtocol?: string;

  /**
   * How the input data should be interpreted.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=valueInputOption",
  })
  valueInputOption?: SheetsSpreadsheetsValuesAppendValueInputOptionEnum;
}

export class SheetsSpreadsheetsValuesAppendResponse extends SpeakeasyBase {
  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  appendValuesResponse?: shared.AppendValuesResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
