/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * S3Location - Contains information about the location in Amazon S3 where the select job results are stored.
 */
public class S3Location {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessControlList")
    public Grant[] accessControlList;

    public S3Location withAccessControlList(Grant[] accessControlList) {
        this.accessControlList = accessControlList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BucketName")
    public String bucketName;

    public S3Location withBucketName(String bucketName) {
        this.bucketName = bucketName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CannedACL")
    public CannedACLEnum cannedACL;

    public S3Location withCannedACL(CannedACLEnum cannedACL) {
        this.cannedACL = cannedACL;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Encryption")
    public Encryption encryption;

    public S3Location withEncryption(Encryption encryption) {
        this.encryption = encryption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Prefix")
    public String prefix;

    public S3Location withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageClass")
    public StorageClassEnum storageClass;

    public S3Location withStorageClass(StorageClassEnum storageClass) {
        this.storageClass = storageClass;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tagging")
    public java.util.Map<String, String> tagging;

    public S3Location withTagging(java.util.Map<String, String> tagging) {
        this.tagging = tagging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserMetadata")
    public java.util.Map<String, String> userMetadata;

    public S3Location withUserMetadata(java.util.Map<String, String> userMetadata) {
        this.userMetadata = userMetadata;
        return this;
    }
    
    public S3Location(){}
}
