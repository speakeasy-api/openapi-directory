/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * ViewerCertificate - &lt;p&gt;A complex type that determines the distribution\u2019s SSL/TLS configuration for communicating with viewers.&lt;/p&gt; &lt;p&gt;If the distribution doesn\u2019t use &lt;code&gt;Aliases&lt;/code&gt; (also known as alternate domain names or CNAMEs)\u2014that is, if the distribution uses the CloudFront domain name such as &lt;code&gt;d111111abcdef8.cloudfront.net&lt;/code&gt;\u2014set &lt;code&gt;CloudFrontDefaultCertificate&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and leave all other fields empty.&lt;/p&gt; &lt;p&gt;If the distribution uses &lt;code&gt;Aliases&lt;/code&gt; (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Which viewers the distribution accepts HTTPS connections from: only viewers that support &lt;a href="https://en.wikipedia.org/wiki/Server_Name_Indication"&gt;server name indication (SNI)&lt;/a&gt; (recommended), or all viewers including those that don\u2019t support SNI.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;To accept HTTPS connections from only viewers that support SNI, set &lt;code&gt;SSLSupportMethod&lt;/code&gt; to &lt;code&gt;sni-only&lt;/code&gt;. This is recommended. Most browsers and clients support SNI. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To accept HTTPS connections from all viewers, including those that don\u2019t support SNI, set &lt;code&gt;SSLSupportMethod&lt;/code&gt; to &lt;code&gt;vip&lt;/code&gt;. This is not recommended, and results in additional monthly charges from CloudFront. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for &lt;code&gt;MinimumProtocolVersion&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy"&gt;Security Policy&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The location of the SSL/TLS certificate, &lt;a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html"&gt;AWS Certificate Manager (ACM)&lt;/a&gt; (recommended) or &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html"&gt;AWS Identity and Access Management (AWS IAM)&lt;/a&gt;. You specify the location by setting a value in one of the following fields (not both):&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ACMCertificateArn&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IAMCertificateId&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use &lt;code&gt;ViewerProtocolPolicy&lt;/code&gt; in the &lt;code&gt;CacheBehavior&lt;/code&gt; or &lt;code&gt;DefaultCacheBehavior&lt;/code&gt;. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use &lt;code&gt;CustomOriginConfig&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html"&gt;Using HTTPS with CloudFront&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html"&gt; Using Alternate Domain Names and HTTPS&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class ViewerCertificate {
    
    public String acmCertificateArn;
    public ViewerCertificate withACMCertificateArn(String acmCertificateArn) {
        this.acmCertificateArn = acmCertificateArn;
        return this;
    }
    
    
    public String certificate;
    public ViewerCertificate withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }
    
    
    public ViewerCertificateCertificateSourceEnum certificateSource;
    public ViewerCertificate withCertificateSource(ViewerCertificateCertificateSourceEnum certificateSource) {
        this.certificateSource = certificateSource;
        return this;
    }
    
    
    public Boolean cloudFrontDefaultCertificate;
    public ViewerCertificate withCloudFrontDefaultCertificate(Boolean cloudFrontDefaultCertificate) {
        this.cloudFrontDefaultCertificate = cloudFrontDefaultCertificate;
        return this;
    }
    
    
    public String iamCertificateId;
    public ViewerCertificate withIAMCertificateId(String iamCertificateId) {
        this.iamCertificateId = iamCertificateId;
        return this;
    }
    
    
    public MinimumProtocolVersionEnum minimumProtocolVersion;
    public ViewerCertificate withMinimumProtocolVersion(MinimumProtocolVersionEnum minimumProtocolVersion) {
        this.minimumProtocolVersion = minimumProtocolVersion;
        return this;
    }
    
    
    public SSLSupportMethodEnum sslSupportMethod;
    public ViewerCertificate withSSLSupportMethod(SSLSupportMethodEnum sslSupportMethod) {
        this.sslSupportMethod = sslSupportMethod;
        return this;
    }
    
}
