"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AccountPlansRequest:
    
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""The account ID."""  
    
class AccountPlans200ApplicationXMLPlanAudioStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPlanAudio:
    r"""Additional audio conferencing <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\\">plan type.</a>"""
    
    callout_countries: Optional[str] = dataclasses.field(default=None)
    r"""Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \\"ID\\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."""  
    ddi_numbers: Optional[int] = dataclasses.field(default=None)
    r"""Dedicated dial-In numbers."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    premium_countries: Optional[str] = dataclasses.field(default=None)
    r"""Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the \\"ID\\" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPlanAudioStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    tollfree_countries: Optional[str] = dataclasses.field(default=None)
    r"""Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the \\"ID\\" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Additional audio conferencing <a href=\\"/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPlanBaseStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPlanBase:
    
    hosts: Optional[int] = dataclasses.field(default=None)
    r"""Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPlanBaseStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Account base <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPlanLargeMeeting:
    r"""Account plan object."""
    
    hosts: Optional[int] = dataclasses.field(default=None)
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPhonePlanPlanBase:
    r"""Additional phone base plans."""
    
    callout_countries: Optional[str] = dataclasses.field(default=None)
    r"""Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \\"ID\\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Additional phone base <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPhonePlanPlanCalling:
    
    hosts: Optional[int] = dataclasses.field(default=None)  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Additional phone calling <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPhonePlanPlanNumber:
    
    hosts: Optional[int] = dataclasses.field(default=None)  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Additional phone number <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\\">plan type.</a>"""  
    

@dataclasses.dataclass
class AccountPlans200ApplicationXMLPhonePlan:
    r"""Phone Plan Object"""
    
    plan_base: Optional[AccountPlans200ApplicationXMLPhonePlanPlanBase] = dataclasses.field(default=None)
    r"""Additional phone base plans."""  
    plan_calling: Optional[list[AccountPlans200ApplicationXMLPhonePlanPlanCalling]] = dataclasses.field(default=None)
    r"""Additional phone calling plans."""  
    plan_number: Optional[list[AccountPlans200ApplicationXMLPhonePlanPlanNumber]] = dataclasses.field(default=None)
    r"""Additional phone number plans."""  
    
class AccountPlans200ApplicationXMLPlanRecordingStatusEnum(str, Enum):
    r"""Status of additional Cloud Recording plan."""
    ACTIVE = 'Active'
    CANCELLED = 'Cancelled'

class AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPlanRoomConnector:
    
    hosts: Optional[int] = dataclasses.field(default=None)
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPlanWebinarStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPlanWebinar:
    r"""Account plan object."""
    
    hosts: Optional[int] = dataclasses.field(default=None)
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPlanWebinarStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclasses.dataclass
class AccountPlans200ApplicationXMLPlanZoomRooms:
    
    hosts: Optional[int] = dataclasses.field(default=None)
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum] = dataclasses.field(default=None)
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    

@dataclasses.dataclass
class AccountPlans200ApplicationXML:
    r"""**HTTP Status Code:**`200`<br>
    Account's plans returned.
    """
    
    plan_audio: Optional[AccountPlans200ApplicationXMLPlanAudio] = dataclasses.field(default=None)
    r"""Additional audio conferencing <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\\">plan type.</a>"""  
    plan_base: Optional[AccountPlans200ApplicationXMLPlanBase] = dataclasses.field(default=None)  
    plan_large_meeting: Optional[list[AccountPlans200ApplicationXMLPlanLargeMeeting]] = dataclasses.field(default=None)  
    plan_phone: Optional[AccountPlans200ApplicationXMLPhonePlan] = dataclasses.field(default=None)
    r"""Phone Plan Object"""  
    plan_recording: Optional[str] = dataclasses.field(default=None)
    r"""Additional Cloud Recording plan."""  
    plan_recording_next_invoice_date: Optional[str] = dataclasses.field(default=None)
    r"""Next invoice date of Additional Cloud Recording plan."""  
    plan_recording_service_effective_date: Optional[str] = dataclasses.field(default=None)
    r"""Plan start date of Additional Cloud Recording plan."""  
    plan_recording_status: Optional[AccountPlans200ApplicationXMLPlanRecordingStatusEnum] = dataclasses.field(default=None)
    r"""Status of additional Cloud Recording plan."""  
    plan_room_connector: Optional[AccountPlans200ApplicationXMLPlanRoomConnector] = dataclasses.field(default=None)  
    plan_webinar: Optional[list[AccountPlans200ApplicationXMLPlanWebinar]] = dataclasses.field(default=None)  
    plan_zoom_rooms: Optional[AccountPlans200ApplicationXMLPlanZoomRooms] = dataclasses.field(default=None)  
    
class AccountPlans200ApplicationJSONPlanAudioStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPlanAudio:
    r"""Additional audio conferencing <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\\">plan type.</a>"""
    
    callout_countries: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callout_countries'), 'exclude': lambda f: f is None }})
    r"""Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \\"ID\\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."""  
    ddi_numbers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ddi_numbers'), 'exclude': lambda f: f is None }})
    r"""Dedicated dial-In numbers."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    premium_countries: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('premium_countries'), 'exclude': lambda f: f is None }})
    r"""Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the \\"ID\\" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPlanAudioStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    tollfree_countries: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tollfree_countries'), 'exclude': lambda f: f is None }})
    r"""Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the \\"ID\\" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Additional audio conferencing <a href=\\"/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPlanBaseStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPlanBase:
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})
    r"""Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPlanBaseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Account base <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPlanLargeMeeting:
    r"""Account plan object."""
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPhonePlanPlanBase:
    r"""Additional phone base plans."""
    
    callout_countries: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callout_countries'), 'exclude': lambda f: f is None }})
    r"""Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the \\"ID\\" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Additional phone base <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPhonePlanPlanCalling:
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Additional phone calling <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPhonePlanPlanNumber:
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Additional phone number <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans\\">plan type.</a>"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPhonePlan:
    r"""Phone Plan Object"""
    
    plan_base: Optional[AccountPlans200ApplicationJSONPhonePlanPlanBase] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_base'), 'exclude': lambda f: f is None }})
    r"""Additional phone base plans."""  
    plan_calling: Optional[list[AccountPlans200ApplicationJSONPhonePlanPlanCalling]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_calling'), 'exclude': lambda f: f is None }})
    r"""Additional phone calling plans."""  
    plan_number: Optional[list[AccountPlans200ApplicationJSONPhonePlanPlanNumber]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_number'), 'exclude': lambda f: f is None }})
    r"""Additional phone number plans."""  
    
class AccountPlans200ApplicationJSONPlanRecordingStatusEnum(str, Enum):
    r"""Status of additional Cloud Recording plan."""
    ACTIVE = 'Active'
    CANCELLED = 'Cancelled'

class AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPlanRoomConnector:
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPlanWebinarStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPlanWebinar:
    r"""Account plan object."""
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPlanWebinarStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    
class AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum(str, Enum):
    r"""Status of the plan."""
    ACTIVE = 'active'
    CANCEL = 'cancel'
    EXPIRED = 'expired'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSONPlanZoomRooms:
    
    hosts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hosts'), 'exclude': lambda f: f is None }})
    r"""Account plan number of hosts."""  
    next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date for the plan."""  
    service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Date at which the plan became effective on the account."""  
    status: Optional[AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the plan."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Account <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans\\">plan type.</a>"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountPlans200ApplicationJSON:
    r"""**HTTP Status Code:**`200`<br>
    Account's plans returned.
    """
    
    plan_audio: Optional[AccountPlans200ApplicationJSONPlanAudio] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_audio'), 'exclude': lambda f: f is None }})
    r"""Additional audio conferencing <a href=\\"https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans\\">plan type.</a>"""  
    plan_base: Optional[AccountPlans200ApplicationJSONPlanBase] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_base'), 'exclude': lambda f: f is None }})  
    plan_large_meeting: Optional[list[AccountPlans200ApplicationJSONPlanLargeMeeting]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_large_meeting'), 'exclude': lambda f: f is None }})  
    plan_phone: Optional[AccountPlans200ApplicationJSONPhonePlan] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_phone'), 'exclude': lambda f: f is None }})
    r"""Phone Plan Object"""  
    plan_recording: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_recording'), 'exclude': lambda f: f is None }})
    r"""Additional Cloud Recording plan."""  
    plan_recording_next_invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_recording_next_invoice_date'), 'exclude': lambda f: f is None }})
    r"""Next invoice date of Additional Cloud Recording plan."""  
    plan_recording_service_effective_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_recording_service_effective_date'), 'exclude': lambda f: f is None }})
    r"""Plan start date of Additional Cloud Recording plan."""  
    plan_recording_status: Optional[AccountPlans200ApplicationJSONPlanRecordingStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_recording_status'), 'exclude': lambda f: f is None }})
    r"""Status of additional Cloud Recording plan."""  
    plan_room_connector: Optional[AccountPlans200ApplicationJSONPlanRoomConnector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_room_connector'), 'exclude': lambda f: f is None }})  
    plan_webinar: Optional[list[AccountPlans200ApplicationJSONPlanWebinar]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_webinar'), 'exclude': lambda f: f is None }})  
    plan_zoom_rooms: Optional[AccountPlans200ApplicationJSONPlanZoomRooms] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_zoom_rooms'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class AccountPlansResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    account_plans_200_application_json_object: Optional[AccountPlans200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:**`200`<br>
    Account's plans returned.
    """  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    