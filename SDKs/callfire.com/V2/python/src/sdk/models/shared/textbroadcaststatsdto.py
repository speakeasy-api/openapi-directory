"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextBroadcastStatsDto:
    r"""~"""
    
    billed_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billedAmount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    do_not_text_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doNotTextCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    error_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    recieved_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recievedCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    remaining_outbound_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remainingOutboundCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    sent_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sentCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    too_big_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tooBigCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    total_outbound_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalOutboundCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    unsent_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unsentCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    