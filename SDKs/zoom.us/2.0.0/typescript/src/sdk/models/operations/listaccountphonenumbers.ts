/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListAccountPhoneNumbersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * The type of assignee to whom the number is assigned. The value can be one of the following:<br>
 *
 * @remarks
 * `user`<br> `callQueue`<br> `autoReceptionist`<br>
 * `commonAreaPhone`
 */
export enum ListAccountPhoneNumbersExtensionTypeEnum {
  User = "user",
  CallQueue = "callQueue",
  AutoReceptionist = "autoReceptionist",
  CommonAreaPhone = "commonAreaPhone",
}

/**
 * The type of phone number. The value can be either `toll` or `tollfree`.
 */
export enum ListAccountPhoneNumbersNumberTypeEnum {
  Toll = "toll",
  Tollfree = "tollfree",
}

/**
 * Query response by number assignment. The value can be one of the following:
 *
 * @remarks
 * <br>
 * `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
 * `all`: Include both assigned and unassigned numbers in the response.<br>
 * `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
 */
export enum ListAccountPhoneNumbersTypeEnum {
  Assigned = "assigned",
  Unassigned = "unassigned",
  All = "all",
}

export class ListAccountPhoneNumbersRequest extends SpeakeasyBase {
  /**
   * The type of assignee to whom the number is assigned. The value can be one of the following:<br>
   *
   * @remarks
   * `user`<br> `callQueue`<br> `autoReceptionist`<br>
   * `commonAreaPhone`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=extension_type",
  })
  extensionType?: ListAccountPhoneNumbersExtensionTypeEnum;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The type of phone number. The value can be either `toll` or `tollfree`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=number_type",
  })
  numberType?: ListAccountPhoneNumbersNumberTypeEnum;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Include or exclude pending numbers in the response. The value can be either `true` or `false`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pending_numbers",
  })
  pendingNumbers?: boolean;

  /**
   * Unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=site_id",
  })
  siteId?: string;

  /**
   * Query response by number assignment. The value can be one of the following:
   *
   * @remarks
   * <br>
   * `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
   * `all`: Include both assigned and unassigned numbers in the response.<br>
   * `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: ListAccountPhoneNumbersTypeEnum;
}

/**
 * Indicates who the phone number belongs to.<br>
 *
 * @remarks
 * `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
 * `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
 */
export enum ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum {
  User = "user",
  CallQueue = "callQueue",
  AutoReceptionist = "autoReceptionist",
  CommonAreaPhone = "commonAreaPhone",
}

export class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssignee extends SpeakeasyBase {
  /**
   * Extension number of the Phone.
   */
  @SpeakeasyMetadata()
  extensionNumber?: number;

  /**
   * Unique Identifier of the user to whom the number has been assigned.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the user to whom the number has been assigned.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Indicates who the phone number belongs to.<br>
   *
   * @remarks
   * `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
   * `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
   */
  @SpeakeasyMetadata()
  type?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum;
}

/**
 * Displayed when the `type` request parameter is `byoc`.
 */
export class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier extends SpeakeasyBase {
  /**
   * The carrier code.
   */
  @SpeakeasyMetadata()
  code?: string;

  /**
   * Name of the carrier to which the phone number is assigned.
   */
  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The type of number. Values can be one of the following:<br>
 *
 * @remarks
 * `toll`, `tollfree`
 */
export enum ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum {
  Toll = "toll",
  Tollfree = "tollfree",
}

/**
 * Displayed when the `type` request parameter is `byoc`.
 */
export class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup extends SpeakeasyBase {
  /**
   * The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the SIP group for which the phone number is assigned.
   */
  @SpeakeasyMetadata()
  name?: string;
}

export class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSite extends SpeakeasyBase {
  /**
   * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the site where the phone number is assigned.
   */
  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Source of phone number.
 */
export enum ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum {
  Internal = "internal",
  External = "external",
}

/**
 * Status of the number.
 */
export enum ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum {
  Pending = "pending",
  Available = "available",
}

export class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  assignee?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssignee;

  /**
   * The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
   */
  @SpeakeasyMetadata()
  capability?: string[];

  /**
   * Displayed when the `type` request parameter is `byoc`.
   */
  @SpeakeasyMetadata()
  carrier?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier;

  /**
   * The display name for the phone number.
   */
  @SpeakeasyMetadata()
  displayName?: string;

  /**
   * Unique Identifier of the Phone Number.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Location (city, state and country) where the Phone number is assigned.
   */
  @SpeakeasyMetadata()
  location?: string;

  /**
   * Phone number in E164 format.
   */
  @SpeakeasyMetadata()
  number?: string;

  /**
   * The type of number. Values can be one of the following:<br>
   *
   * @remarks
   * `toll`, `tollfree`
   */
  @SpeakeasyMetadata()
  numberType?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum;

  /**
   * Displayed when the `type` request parameter is `byoc`.
   */
  @SpeakeasyMetadata()
  sipGroup?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup;

  @SpeakeasyMetadata()
  site?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSite;

  /**
   * Source of phone number.
   */
  @SpeakeasyMetadata()
  source?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum;

  /**
   * Status of the number.
   */
  @SpeakeasyMetadata()
  status?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Phone numbers listed successfully.
 */
export class ListAccountPhoneNumbers200ApplicationXML extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers,
  })
  phoneNumbers?: ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers[];

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Indicates who the phone number belongs to.<br>
 *
 * @remarks
 * `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
 * `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
 */
export enum ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum {
  User = "user",
  CallQueue = "callQueue",
  AutoReceptionist = "autoReceptionist",
  CommonAreaPhone = "commonAreaPhone",
}

export class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee extends SpeakeasyBase {
  /**
   * Extension number of the Phone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: number;

  /**
   * Unique Identifier of the user to whom the number has been assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the user to whom the number has been assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Indicates who the phone number belongs to.<br>
   *
   * @remarks
   * `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
   * `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum;
}

/**
 * Displayed when the `type` request parameter is `byoc`.
 */
export class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier extends SpeakeasyBase {
  /**
   * The carrier code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Name of the carrier to which the phone number is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The type of number. Values can be one of the following:<br>
 *
 * @remarks
 * `toll`, `tollfree`
 */
export enum ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum {
  Toll = "toll",
  Tollfree = "tollfree",
}

/**
 * Displayed when the `type` request parameter is `byoc`.
 */
export class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup extends SpeakeasyBase {
  /**
   * The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the SIP group for which the phone number is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite extends SpeakeasyBase {
  /**
   * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the site where the phone number is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Source of phone number.
 */
export enum ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum {
  Internal = "internal",
  External = "external",
}

/**
 * Status of the number.
 */
export enum ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum {
  Pending = "pending",
  Available = "available",
}

export class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assignee" })
  @Type(() => ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee)
  assignee?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee;

  /**
   * The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capability" })
  capability?: string[];

  /**
   * Displayed when the `type` request parameter is `byoc`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier" })
  @Type(() => ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier)
  carrier?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier;

  /**
   * The display name for the phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Unique Identifier of the Phone Number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Location (city, state and country) where the Phone number is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * Phone number in E164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * The type of number. Values can be one of the following:<br>
   *
   * @remarks
   * `toll`, `tollfree`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number_type" })
  numberType?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum;

  /**
   * Displayed when the `type` request parameter is `byoc`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sip_group" })
  @Type(() => ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup)
  sipGroup?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite)
  site?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite;

  /**
   * Source of phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum;

  /**
   * Status of the number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Phone numbers listed successfully.
 */
export class ListAccountPhoneNumbers200ApplicationJSON extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers,
  })
  @Expose({ name: "phone_numbers" })
  @Type(() => ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers)
  phoneNumbers?: ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers[];

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListAccountPhoneNumbersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Phone numbers listed successfully.
   */
  @SpeakeasyMetadata()
  listAccountPhoneNumbers200ApplicationJSONObject?: ListAccountPhoneNumbers200ApplicationJSON;
}
