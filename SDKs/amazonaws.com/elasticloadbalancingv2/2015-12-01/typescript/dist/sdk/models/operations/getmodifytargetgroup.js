"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETModifyTargetGroupResponse = exports.GETModifyTargetGroupRequest = exports.GETModifyTargetGroupVersionEnum = exports.GETModifyTargetGroupMatcher = exports.GETModifyTargetGroupHealthCheckProtocolEnum = exports.GETModifyTargetGroupActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETModifyTargetGroupActionEnum;
(function (GETModifyTargetGroupActionEnum) {
    GETModifyTargetGroupActionEnum["ModifyTargetGroup"] = "ModifyTargetGroup";
})(GETModifyTargetGroupActionEnum = exports.GETModifyTargetGroupActionEnum || (exports.GETModifyTargetGroupActionEnum = {}));
/**
 * The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers and Gateway Load Balancers, the default is TCP. The TCP protocol is not supported for health checks if the protocol of the target group is HTTP or HTTPS. It is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health checks.
 */
var GETModifyTargetGroupHealthCheckProtocolEnum;
(function (GETModifyTargetGroupHealthCheckProtocolEnum) {
    GETModifyTargetGroupHealthCheckProtocolEnum["Http"] = "HTTP";
    GETModifyTargetGroupHealthCheckProtocolEnum["Https"] = "HTTPS";
    GETModifyTargetGroupHealthCheckProtocolEnum["Tcp"] = "TCP";
    GETModifyTargetGroupHealthCheckProtocolEnum["Tls"] = "TLS";
    GETModifyTargetGroupHealthCheckProtocolEnum["Udp"] = "UDP";
    GETModifyTargetGroupHealthCheckProtocolEnum["TcpUdp"] = "TCP_UDP";
    GETModifyTargetGroupHealthCheckProtocolEnum["Geneve"] = "GENEVE";
})(GETModifyTargetGroupHealthCheckProtocolEnum = exports.GETModifyTargetGroupHealthCheckProtocolEnum || (exports.GETModifyTargetGroupHealthCheckProtocolEnum = {}));
/**
 * The codes to use when checking for a successful response from a target. If the protocol version is gRPC, these are gRPC codes. Otherwise, these are HTTP codes.
 */
var GETModifyTargetGroupMatcher = /** @class */ (function (_super) {
    __extends(GETModifyTargetGroupMatcher, _super);
    function GETModifyTargetGroupMatcher() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=GrpcCode" }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupMatcher.prototype, "grpcCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=HttpCode" }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupMatcher.prototype, "httpCode", void 0);
    return GETModifyTargetGroupMatcher;
}(utils_1.SpeakeasyBase));
exports.GETModifyTargetGroupMatcher = GETModifyTargetGroupMatcher;
var GETModifyTargetGroupVersionEnum;
(function (GETModifyTargetGroupVersionEnum) {
    GETModifyTargetGroupVersionEnum["TwoThousandAndFifteen1201"] = "2015-12-01";
})(GETModifyTargetGroupVersionEnum = exports.GETModifyTargetGroupVersionEnum || (exports.GETModifyTargetGroupVersionEnum = {}));
var GETModifyTargetGroupRequest = /** @class */ (function (_super) {
    __extends(GETModifyTargetGroupRequest, _super);
    function GETModifyTargetGroupRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthCheckEnabled",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyTargetGroupRequest.prototype, "healthCheckEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthCheckIntervalSeconds",
        }),
        __metadata("design:type", Number)
    ], GETModifyTargetGroupRequest.prototype, "healthCheckIntervalSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthCheckPath",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "healthCheckPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthCheckPort",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "healthCheckPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthCheckProtocol",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "healthCheckProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthCheckTimeoutSeconds",
        }),
        __metadata("design:type", Number)
    ], GETModifyTargetGroupRequest.prototype, "healthCheckTimeoutSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HealthyThresholdCount",
        }),
        __metadata("design:type", Number)
    ], GETModifyTargetGroupRequest.prototype, "healthyThresholdCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Matcher",
        }),
        __metadata("design:type", GETModifyTargetGroupMatcher)
    ], GETModifyTargetGroupRequest.prototype, "matcher", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=TargetGroupArn",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "targetGroupArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=UnhealthyThresholdCount",
        }),
        __metadata("design:type", Number)
    ], GETModifyTargetGroupRequest.prototype, "unhealthyThresholdCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETModifyTargetGroupRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETModifyTargetGroupRequest;
}(utils_1.SpeakeasyBase));
exports.GETModifyTargetGroupRequest = GETModifyTargetGroupRequest;
var GETModifyTargetGroupResponse = /** @class */ (function (_super) {
    __extends(GETModifyTargetGroupResponse, _super);
    function GETModifyTargetGroupResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETModifyTargetGroupResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETModifyTargetGroupResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETModifyTargetGroupResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETModifyTargetGroupResponse.prototype, "rawResponse", void 0);
    return GETModifyTargetGroupResponse;
}(utils_1.SpeakeasyBase));
exports.GETModifyTargetGroupResponse = GETModifyTargetGroupResponse;
