// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyVolumeAttributeActionEnum
type GETModifyVolumeAttributeActionEnum string

const (
	GETModifyVolumeAttributeActionEnumModifyVolumeAttribute GETModifyVolumeAttributeActionEnum = "ModifyVolumeAttribute"
)

func (e GETModifyVolumeAttributeActionEnum) ToPointer() *GETModifyVolumeAttributeActionEnum {
	return &e
}

func (e *GETModifyVolumeAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyVolumeAttribute":
		*e = GETModifyVolumeAttributeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVolumeAttributeActionEnum: %v", v)
	}
}

// GETModifyVolumeAttributeAutoEnableIo - Describes a value for a resource attribute that is a Boolean value.
type GETModifyVolumeAttributeAutoEnableIo struct {
	Value *bool `queryParam:"name=Value"`
}

// GETModifyVolumeAttributeVersionEnum
type GETModifyVolumeAttributeVersionEnum string

const (
	GETModifyVolumeAttributeVersionEnumTwoThousandAndSixteen1115 GETModifyVolumeAttributeVersionEnum = "2016-11-15"
)

func (e GETModifyVolumeAttributeVersionEnum) ToPointer() *GETModifyVolumeAttributeVersionEnum {
	return &e
}

func (e *GETModifyVolumeAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETModifyVolumeAttributeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVolumeAttributeVersionEnum: %v", v)
	}
}

type GETModifyVolumeAttributeRequest struct {
	Action GETModifyVolumeAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Indicates whether the volume should be auto-enabled for I/O operations.
	AutoEnableIO *GETModifyVolumeAttributeAutoEnableIo `queryParam:"style=form,explode=true,name=AutoEnableIO"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun  *bool                               `queryParam:"style=form,explode=true,name=DryRun"`
	Version GETModifyVolumeAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the volume.
	VolumeID          string  `queryParam:"style=form,explode=true,name=VolumeId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyVolumeAttributeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
