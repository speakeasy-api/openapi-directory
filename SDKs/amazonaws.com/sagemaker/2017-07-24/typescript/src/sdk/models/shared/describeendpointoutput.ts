/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AsyncInferenceConfig } from "./asyncinferenceconfig";
import { DataCaptureConfigSummary } from "./datacaptureconfigsummary";
import { DeploymentConfig } from "./deploymentconfig";
import { EndpointStatusEnum } from "./endpointstatusenum";
import { ExplainerConfig } from "./explainerconfig";
import { PendingDeploymentSummary } from "./pendingdeploymentsummary";
import { ProductionVariantSummary } from "./productionvariantsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeEndpointOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AsyncInferenceConfig" })
  @Type(() => AsyncInferenceConfig)
  asyncInferenceConfig?: AsyncInferenceConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  /**
   * The currently active data capture configuration used by your Endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DataCaptureConfig" })
  @Type(() => DataCaptureConfigSummary)
  dataCaptureConfig?: DataCaptureConfigSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointArn" })
  endpointArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointConfigName" })
  endpointConfigName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointName" })
  endpointName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointStatus" })
  endpointStatus: EndpointStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplainerConfig" })
  @Type(() => ExplainerConfig)
  explainerConfig?: ExplainerConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastDeploymentConfig" })
  @Type(() => DeploymentConfig)
  lastDeploymentConfig?: DeploymentConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "PendingDeploymentSummary" })
  @Type(() => PendingDeploymentSummary)
  pendingDeploymentSummary?: PendingDeploymentSummary;

  @SpeakeasyMetadata({ elemType: ProductionVariantSummary })
  @Expose({ name: "ProductionVariants" })
  @Type(() => ProductionVariantSummary)
  productionVariants?: ProductionVariantSummary[];

  @SpeakeasyMetadata({ elemType: ProductionVariantSummary })
  @Expose({ name: "ShadowProductionVariants" })
  @Type(() => ProductionVariantSummary)
  shadowProductionVariants?: ProductionVariantSummary[];
}
