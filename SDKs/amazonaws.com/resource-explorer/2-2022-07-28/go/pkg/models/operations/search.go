// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SearchRequestBody struct {
	// <p>The maximum number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value appropriate to the operation. If additional items exist beyond those included in the current response, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results.</p> <note> <p>An API operation can return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p> </note>
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
	NextToken *string `json:"NextToken,omitempty"`
	// <p>A string that includes keywords and filters that specify the resources that you want to include in the results.</p> <p>For the complete syntax supported by the <code>QueryString</code> parameter, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html">Search query syntax reference for Resource Explorer</a>.</p> <p>The search is completely case insensitive. You can specify an empty string to return all results up to the limit of 1,000 total results.</p> <note> <p>The operation can return only the first 1,000 results. If the resource you want is not included, then use a different value for <code>QueryString</code> to refine the results.</p> </note>
	QueryString string `json:"QueryString"`
	// Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view to use for the query. If you don't specify a value for this parameter, then the operation automatically uses the default view for the Amazon Web Services Region in which you called this operation. If the Region either doesn't have a default view or if you don't have permission to use the default view, then the operation fails with a <code>401 Unauthorized</code> exception.
	ViewArn *string `json:"ViewArn,omitempty"`
}

type SearchRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string           `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       SearchRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type SearchResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	SearchOutput *shared.SearchOutput
	StatusCode   int
	RawResponse  *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
	// ValidationException
	ValidationException interface{}
}
