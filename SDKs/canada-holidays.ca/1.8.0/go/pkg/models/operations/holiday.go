// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type HolidayPathParams struct {
	// Primary key for a holiday
	HolidayID int64 `pathParam:"style=simple,explode=false,name=holidayId"`
}

// HolidayOptionalEnum - A boolean parameter. If false or 0 (default), will return provinces for which this is a legislated holiday. If true or 1, will return provinces which optionally celebrate this holiday.
type HolidayOptionalEnum string

const (
	HolidayOptionalEnumOne   HolidayOptionalEnum = "1"
	HolidayOptionalEnumZero  HolidayOptionalEnum = "0"
	HolidayOptionalEnumTrue  HolidayOptionalEnum = "true"
	HolidayOptionalEnumFalse HolidayOptionalEnum = "false"
)

func (e *HolidayOptionalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		fallthrough
	case "true":
		fallthrough
	case "false":
		*e = HolidayOptionalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidayOptionalEnum: %s", s)
	}
}

type HolidayQueryParams struct {
	// A boolean parameter. If false or 0 (default), will return provinces for which this is a legislated holiday. If true or 1, will return provinces which optionally celebrate this holiday.
	Optional *HolidayOptionalEnum `queryParam:"style=form,explode=true,name=optional"`
	// A calendar year
	Year *int64 `queryParam:"style=form,explode=true,name=year"`
}

type HolidayRequest struct {
	PathParams  HolidayPathParams
	QueryParams HolidayQueryParams
}

// Holiday400ApplicationJSON - Bad Request
type Holiday400ApplicationJSON struct {
	Error *shared.Error `json:"error,omitempty"`
}

// Holiday200ApplicationJSON - OK
type Holiday200ApplicationJSON struct {
	// A Canadian holiday. Includes a name, the literal date of the holiday, the observed date of the holiday (ie, accommodating for weekends), and a list of regions that observe this holiday.
	Holiday *shared.Holiday `json:"holiday,omitempty"`
}

type HolidayResponse struct {
	ContentType string
	// OK
	Holiday200ApplicationJSONObject *Holiday200ApplicationJSON
	// Bad Request
	Holiday400ApplicationJSONObject *Holiday400ApplicationJSON
	StatusCode                      int
	RawResponse                     *http.Response
}
