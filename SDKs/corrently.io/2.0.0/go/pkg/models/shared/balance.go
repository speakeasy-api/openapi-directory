// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BalanceVariationEnum - Type of subbalance (sub account)
type BalanceVariationEnum string

const (
	BalanceVariationEnumGsb        BalanceVariationEnum = "gsb"
	BalanceVariationEnumErzeugung  BalanceVariationEnum = "erzeugung"
	BalanceVariationEnumEigenstrom BalanceVariationEnum = "eigenstrom"
	BalanceVariationEnumCo2        BalanceVariationEnum = "co2"
	BalanceVariationEnumBaeume     BalanceVariationEnum = "baeume"
)

func (e BalanceVariationEnum) ToPointer() *BalanceVariationEnum {
	return &e
}

func (e *BalanceVariationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "gsb":
		fallthrough
	case "erzeugung":
		fallthrough
	case "eigenstrom":
		fallthrough
	case "co2":
		fallthrough
	case "baeume":
		*e = BalanceVariationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BalanceVariationEnum: %v", v)
	}
}

type Balance struct {
	// Sum owned - sum due by account
	Balance *int64 `json:"balance,omitempty"`
	// Sum owned by account
	Haben *int64 `json:"haben,omitempty"`
	// Sum due by account
	Soll *int64         `json:"soll,omitempty"`
	Txs  []Transactions `json:"txs,omitempty"`
	// Type of subbalance (sub account)
	Variation *BalanceVariationEnum `json:"variation,omitempty"`
}
