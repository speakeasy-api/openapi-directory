// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type EvaluateRebalanceSecurity struct {
	APISecretKey shared.SchemeAPISecretKey `security:"scheme,type=apiKey,subtype=header"`
}

type EvaluateRebalanceHeaders struct {
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// EvaluateRebalanceSwitchInstructionRequestTypeEnum - Rebalance request triggering type. This describe the types of elements included in the values field
type EvaluateRebalanceSwitchInstructionRequestTypeEnum string

const (
	EvaluateRebalanceSwitchInstructionRequestTypeEnumPot       EvaluateRebalanceSwitchInstructionRequestTypeEnum = "pot"
	EvaluateRebalanceSwitchInstructionRequestTypeEnumInvestor  EvaluateRebalanceSwitchInstructionRequestTypeEnum = "investor"
	EvaluateRebalanceSwitchInstructionRequestTypeEnumPortfolio EvaluateRebalanceSwitchInstructionRequestTypeEnum = "portfolio"
)

func (e *EvaluateRebalanceSwitchInstructionRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pot":
		fallthrough
	case "investor":
		fallthrough
	case "portfolio":
		*e = EvaluateRebalanceSwitchInstructionRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EvaluateRebalanceSwitchInstructionRequestTypeEnum: %s", s)
	}
}

// EvaluateRebalanceSwitchInstructionRequest - Definition of Switch instruction
type EvaluateRebalanceSwitchInstructionRequest struct {
	// Unique request id to ensure idempotency. (eg: UUID)
	RequestID string `json:"request_id"`
	// Rebalance request triggering type. This describe the types of elements included in the values field
	Type EvaluateRebalanceSwitchInstructionRequestTypeEnum `json:"type"`
	// List of unique Ids from the mentioned type to trigger the rebalance process
	Values []string `json:"values"`
}

type EvaluateRebalanceRequest struct {
	Headers  EvaluateRebalanceHeaders
	Request  *EvaluateRebalanceSwitchInstructionRequest `request:"mediaType=application/json"`
	Security EvaluateRebalanceSecurity
}

// EvaluateRebalance500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type EvaluateRebalance500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// EvaluateRebalance429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type EvaluateRebalance429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// EvaluateRebalance409ApplicationJSONStatusEnum - Current status of the original request
type EvaluateRebalance409ApplicationJSONStatusEnum string

const (
	EvaluateRebalance409ApplicationJSONStatusEnumProcessing EvaluateRebalance409ApplicationJSONStatusEnum = "PROCESSING"
	EvaluateRebalance409ApplicationJSONStatusEnumComplete   EvaluateRebalance409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e *EvaluateRebalance409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = EvaluateRebalance409ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EvaluateRebalance409ApplicationJSONStatusEnum: %s", s)
	}
}

// EvaluateRebalance409ApplicationJSON - Duplicate request
type EvaluateRebalance409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status EvaluateRebalance409ApplicationJSONStatusEnum `json:"status"`
}

// EvaluateRebalance404ApplicationJSON - The specified resource was not found
type EvaluateRebalance404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// EvaluateRebalance403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type EvaluateRebalance403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// EvaluateRebalance401ApplicationJSON - You do not have permissions to access this resource.
type EvaluateRebalance401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// EvaluateRebalance400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type EvaluateRebalance400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum - Status of whether a pot is capable of rebalance or not
type EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum string

const (
	EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnumEligible            EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum = "eligible"
	EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnumIneligible          EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum = "ineligible"
	EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnumNoPortfolioAttached EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum = "no_portfolio_attached"
	EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnumNegativeHoldings    EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum = "negative_holdings"
	EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnumNoHoldings          EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum = "no_holdings"
)

func (e *EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "eligible":
		fallthrough
	case "ineligible":
		fallthrough
	case "no_portfolio_attached":
		fallthrough
	case "negative_holdings":
		fallthrough
	case "no_holdings":
		*e = EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum: %s", s)
	}
}

// EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest - Each individual pot details on the rebalance request
type EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest struct {
	// Unique ID of the Investors attached to the pot
	InvestorID string `json:"investor_id"`
	// Portfolio deviation for the pot
	PortfolioDeviation *string `json:"portfolio_deviation,omitempty"`
	// Unique ID of the portfolio attached to the pot
	PortfolioTemplateID *string `json:"portfolio_template_id,omitempty"`
	// Identifier of pot evaluated for rebalance
	PotID string `json:"pot_id"`
	// Status of whether a pot is capable of rebalance or not
	RebalanceEligibilityStatus EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum `json:"rebalance_eligibility_status"`
}

// EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPot - contains array for pot details
type EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPot struct {
	EvaluationResponse []EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest `json:"evaluation_response"`
}

type EvaluateRebalanceResponse struct {
	ContentType string
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	EvaluateRebalance400ApplicationJSONObject *EvaluateRebalance400ApplicationJSON
	// You do not have permissions to access this resource.
	EvaluateRebalance401ApplicationJSONObject *EvaluateRebalance401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	EvaluateRebalance403ApplicationJSONObject *EvaluateRebalance403ApplicationJSON
	// The specified resource was not found
	EvaluateRebalance404ApplicationJSONObject *EvaluateRebalance404ApplicationJSON
	// Duplicate request
	EvaluateRebalance409ApplicationJSONObject *EvaluateRebalance409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	EvaluateRebalance429ApplicationJSONObject *EvaluateRebalance429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	EvaluateRebalance500ApplicationJSONObject *EvaluateRebalance500ApplicationJSON
	StatusCode                                int
	RawResponse                               *http.Response
	// success
	ThisIsTheReturnObjectWithEvaluationPerPot *EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPot
}
