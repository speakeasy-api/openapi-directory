"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import remediationactiontype_enum as shared_remediationactiontype_enum
from ..shared import securitygroupruledescription as shared_securitygroupruledescription
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SecurityGroupRemediationAction:
    r"""Remediation option for the rule specified in the <code>ViolationTarget</code>."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    is_default_action: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDefaultAction'), 'exclude': lambda f: f is None }})  
    remediation_action_type: Optional[shared_remediationactiontype_enum.RemediationActionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RemediationActionType'), 'exclude': lambda f: f is None }})  
    remediation_result: Optional[shared_securitygroupruledescription.SecurityGroupRuleDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RemediationResult'), 'exclude': lambda f: f is None }})  
    