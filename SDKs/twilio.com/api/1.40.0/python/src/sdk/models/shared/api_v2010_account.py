"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import account_enum_status_enum as shared_account_enum_status_enum
from ..shared import account_enum_type_enum as shared_account_enum_type_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIV2010Account:
    r"""Created"""
    
    auth_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_token'), 'exclude': lambda f: f is None }})
    r"""The authorization token for this account. This token should be kept a secret, so no sharing."""  
    date_created: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_created'), 'exclude': lambda f: f is None }})
    r"""The date that this account was created, in GMT in RFC 2822 format"""  
    date_updated: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_updated'), 'exclude': lambda f: f is None }})
    r"""The date that this account was last updated, in GMT in RFC 2822 format."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friendly_name'), 'exclude': lambda f: f is None }})
    r"""A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address."""  
    owner_account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner_account_sid'), 'exclude': lambda f: f is None }})
    r"""The unique 34 character id that represents the parent of this account. The OwnerAccountSid of a parent account is it's own sid."""  
    sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sid'), 'exclude': lambda f: f is None }})
    r"""A 34 character string that uniquely identifies this resource."""  
    status: Optional[shared_account_enum_status_enum.AccountEnumStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    subresource_uris: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subresource_uris'), 'exclude': lambda f: f is None }})
    r"""A Map of various subresources available for the given Account Instance"""  
    type: Optional[shared_account_enum_type_enum.AccountEnumTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""The URI for this resource, relative to `https://api.twilio.com`"""  
    