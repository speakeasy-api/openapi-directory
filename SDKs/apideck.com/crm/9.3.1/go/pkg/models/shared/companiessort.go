// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CompaniesSortByEnum - The field on which to sort the Companies
type CompaniesSortByEnum string

const (
	CompaniesSortByEnumCreatedAt CompaniesSortByEnum = "created_at"
	CompaniesSortByEnumUpdatedAt CompaniesSortByEnum = "updated_at"
	CompaniesSortByEnumName      CompaniesSortByEnum = "name"
)

func (e CompaniesSortByEnum) ToPointer() *CompaniesSortByEnum {
	return &e
}

func (e *CompaniesSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "updated_at":
		fallthrough
	case "name":
		*e = CompaniesSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompaniesSortByEnum: %v", v)
	}
}

// CompaniesSort - Apply sorting
type CompaniesSort struct {
	// The field on which to sort the Companies
	By *CompaniesSortByEnum `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirectionEnum `queryParam:"name=direction"`
}
