/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Optional. The order for displaying results. Valid values: <code>Ascending</code> and <code>Descending</code>.
 */
export enum ListHumanLoopsSortOrderEnum {
  Ascending = "Ascending",
  Descending = "Descending",
}

export class ListHumanLoopsRequest extends SpeakeasyBase {
  /**
   * (Optional) The timestamp of the date when you want the human loops to begin in ISO 8601 format. For example, <code>2020-02-24</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CreationTimeAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  creationTimeAfter?: Date;

  /**
   * (Optional) The timestamp of the date before which you want the human loops to begin in ISO 8601 format. For example, <code>2020-02-24</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CreationTimeBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  creationTimeBefore?: Date;

  /**
   * The Amazon Resource Name (ARN) of a flow definition.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FlowDefinitionArn",
  })
  flowDefinitionArn: string;

  /**
   * The total number of items to return. If the total number of available items is more than the value specified in <code>MaxResults</code>, then a <code>NextToken</code> is returned in the output. You can use this token to display the next page of results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: number;

  /**
   * A token to display the next page of results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  /**
   * Optional. The order for displaying results. Valid values: <code>Ascending</code> and <code>Descending</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortOrder",
  })
  sortOrder?: ListHumanLoopsSortOrderEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListHumanLoopsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listHumanLoopsResponse?: shared.ListHumanLoopsResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
