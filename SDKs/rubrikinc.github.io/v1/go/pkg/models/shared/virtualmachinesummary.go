// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// VirtualMachineSummarySLAAssignmentEnum - The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
type VirtualMachineSummarySLAAssignmentEnum string

const (
	VirtualMachineSummarySLAAssignmentEnumDerived    VirtualMachineSummarySLAAssignmentEnum = "Derived"
	VirtualMachineSummarySLAAssignmentEnumDirect     VirtualMachineSummarySLAAssignmentEnum = "Direct"
	VirtualMachineSummarySLAAssignmentEnumUnassigned VirtualMachineSummarySLAAssignmentEnum = "Unassigned"
)

func (e VirtualMachineSummarySLAAssignmentEnum) ToPointer() *VirtualMachineSummarySLAAssignmentEnum {
	return &e
}

func (e *VirtualMachineSummarySLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = VirtualMachineSummarySLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMachineSummarySLAAssignmentEnum: %v", v)
	}
}

// VirtualMachineSummarySnapshotConsistencyMandateEnum - Consistency level mandated for this VM or empty string for none.
type VirtualMachineSummarySnapshotConsistencyMandateEnum string

const (
	VirtualMachineSummarySnapshotConsistencyMandateEnumUnknown              VirtualMachineSummarySnapshotConsistencyMandateEnum = "UNKNOWN"
	VirtualMachineSummarySnapshotConsistencyMandateEnumInconsistent         VirtualMachineSummarySnapshotConsistencyMandateEnum = "INCONSISTENT"
	VirtualMachineSummarySnapshotConsistencyMandateEnumCrashConsistent      VirtualMachineSummarySnapshotConsistencyMandateEnum = "CRASH_CONSISTENT"
	VirtualMachineSummarySnapshotConsistencyMandateEnumFileSystemConsistent VirtualMachineSummarySnapshotConsistencyMandateEnum = "FILE_SYSTEM_CONSISTENT"
	VirtualMachineSummarySnapshotConsistencyMandateEnumVssConsistent        VirtualMachineSummarySnapshotConsistencyMandateEnum = "VSS_CONSISTENT"
	VirtualMachineSummarySnapshotConsistencyMandateEnumAppConsistent        VirtualMachineSummarySnapshotConsistencyMandateEnum = "APP_CONSISTENT"
)

func (e VirtualMachineSummarySnapshotConsistencyMandateEnum) ToPointer() *VirtualMachineSummarySnapshotConsistencyMandateEnum {
	return &e
}

func (e *VirtualMachineSummarySnapshotConsistencyMandateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "INCONSISTENT":
		fallthrough
	case "CRASH_CONSISTENT":
		fallthrough
	case "FILE_SYSTEM_CONSISTENT":
		fallthrough
	case "VSS_CONSISTENT":
		fallthrough
	case "APP_CONSISTENT":
		*e = VirtualMachineSummarySnapshotConsistencyMandateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMachineSummarySnapshotConsistencyMandateEnum: %v", v)
	}
}

type VirtualMachineSummary struct {
	AgentStatus            *AgentStatus            `json:"agentStatus,omitempty"`
	CloudInstantiationSpec *CloudInstantiationSpec `json:"cloudInstantiationSpec,omitempty"`
	ClusterName            *string                 `json:"clusterName,omitempty"`
	// The ID of the SLA Domain configured directly on the Rubrik object.
	ConfiguredSLADomainID string `json:"configuredSlaDomainId"`
	// The name of the SLA Domain configured directly on the Rubrik object.
	ConfiguredSLADomainName string `json:"configuredSlaDomainName"`
	// Specifies whether the SLA Domain is used for protection or retention.
	ConfiguredSLADomainType *ConfiguredSLATypeEnum `json:"configuredSlaDomainType,omitempty"`
	// The ID of the SLA Domain that controls the protection of the Rubrik object.
	EffectiveSLADomainID string `json:"effectiveSlaDomainId"`
	// The name of the SLA Domain that controls the protection of the Rubrik object.
	EffectiveSLADomainName string `json:"effectiveSlaDomainName"`
	// Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
	EffectiveSLADomainPolarisManagedID *string `json:"effectiveSlaDomainPolarisManagedId,omitempty"`
	// The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
	EffectiveSLASourceObjectID *string `json:"effectiveSlaSourceObjectId,omitempty"`
	// The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
	EffectiveSLASourceObjectName *string `json:"effectiveSlaSourceObjectName,omitempty"`
	// Brief info of all the objects in the folder path to this VM.
	FolderPath []VMPathPoint `json:"folderPath"`
	// Status of authentication with a specific virtual machine using guest credentials. Possible values are: SUCCESSFUL, PENDING, or FAILED.
	GuestCredentialAuthorizationStatus string  `json:"guestCredentialAuthorizationStatus"`
	GuestOsName                        *string `json:"guestOsName,omitempty"`
	HostID                             *string `json:"hostId,omitempty"`
	HostName                           *string `json:"hostName,omitempty"`
	// The ID of the Rubrik object.
	ID string `json:"id"`
	// Brief info of all the objects in the infrastructure path to this VM.
	InfraPath []VMPathPoint `json:"infraPath"`
	IPAddress string        `json:"ipAddress"`
	// Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
	IsConfiguredSLADomainRetentionLocked *bool `json:"isConfiguredSlaDomainRetentionLocked,omitempty"`
	// Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
	IsEffectiveSLADomainRetentionLocked *bool  `json:"isEffectiveSlaDomainRetentionLocked,omitempty"`
	IsRelic                             bool   `json:"isRelic"`
	IsReplicationEnabled                bool   `json:"isReplicationEnabled"`
	Moid                                string `json:"moid"`
	// The name of the Rubrik object.
	Name          string         `json:"name"`
	ParentAppInfo *ParentAppInfo `json:"parentAppInfo,omitempty"`
	// The power status of VM(ON,OFF,SLEEP etc.).
	PowerStatus *string `json:"powerStatus,omitempty"`
	// The ID of the cluster that manages the Rubrik object.
	PrimaryClusterID string     `json:"primaryClusterId"`
	ProtectionDate   *time.Time `json:"protectionDate,omitempty"`
	// The ID of the SLA Domain whose retention policy is in use.
	RetentionSLADomainID *string `json:"retentionSlaDomainId,omitempty"`
	// The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
	SLAAssignment VirtualMachineSummarySLAAssignmentEnum `json:"slaAssignment"`
	// The UTC time when the SLA Domain was last updated.
	SLALastUpdateTime *time.Time `json:"slaLastUpdateTime,omitempty"`
	// Consistency level mandated for this VM or empty string for none.
	SnapshotConsistencyMandate VirtualMachineSummarySnapshotConsistencyMandateEnum `json:"snapshotConsistencyMandate"`
	ToolsInstalled             *bool                                               `json:"toolsInstalled,omitempty"`
	VcenterID                  *string                                             `json:"vcenterId,omitempty"`
	VmwareToolsInstalled       bool                                                `json:"vmwareToolsInstalled"`
}
