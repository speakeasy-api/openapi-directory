"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import target as shared_target
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Canary:
    r"""The configuration of the canary mode for a service descriptor"""
    
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Use canary mode for this service"""  
    root: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('root') }})
    r"""Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar"""  
    targets: list[shared_target.Target] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targets') }})
    r"""The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures"""  
    traffic: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('traffic') }})
    r"""Ratio of traffic that will be sent to canary targets."""  
    