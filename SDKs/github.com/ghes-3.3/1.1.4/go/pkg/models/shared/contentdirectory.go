// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContentDirectoryLinks struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

type ContentDirectoryTypeEnum string

const (
	ContentDirectoryTypeEnumDir       ContentDirectoryTypeEnum = "dir"
	ContentDirectoryTypeEnumFile      ContentDirectoryTypeEnum = "file"
	ContentDirectoryTypeEnumSubmodule ContentDirectoryTypeEnum = "submodule"
	ContentDirectoryTypeEnumSymlink   ContentDirectoryTypeEnum = "symlink"
)

func (e ContentDirectoryTypeEnum) ToPointer() *ContentDirectoryTypeEnum {
	return &e
}

func (e *ContentDirectoryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dir":
		fallthrough
	case "file":
		fallthrough
	case "submodule":
		fallthrough
	case "symlink":
		*e = ContentDirectoryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentDirectoryTypeEnum: %v", v)
	}
}

type ContentDirectory struct {
	Links       ContentDirectoryLinks    `json:"_links"`
	Content     *string                  `json:"content,omitempty"`
	DownloadURL string                   `json:"download_url"`
	GitURL      string                   `json:"git_url"`
	HTMLURL     string                   `json:"html_url"`
	Name        string                   `json:"name"`
	Path        string                   `json:"path"`
	Sha         string                   `json:"sha"`
	Size        int64                    `json:"size"`
	Type        ContentDirectoryTypeEnum `json:"type"`
	URL         string                   `json:"url"`
}
