// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GamesByDateFormatEnum - Desired response format. Valid entries are <code>xml</code> or <code>json</code>.
type GamesByDateFormatEnum string

const (
	GamesByDateFormatEnumXML  GamesByDateFormatEnum = "XML"
	GamesByDateFormatEnumJSON GamesByDateFormatEnum = "JSON"
)

func (e GamesByDateFormatEnum) ToPointer() *GamesByDateFormatEnum {
	return &e
}

func (e *GamesByDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = GamesByDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GamesByDateFormatEnum: %v", v)
	}
}

type GamesByDateRequest struct {
	//           The date of the game(s).
	//           <br>Examples: <code>2016-SEP-01</code>, <code>2017-SEP-10</code>.
	//
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>xml</code> or <code>json</code>.
	Format GamesByDateFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type GamesByDateResponse struct {
	ContentType string
	Games       []shared.Game
	StatusCode  int
	RawResponse *http.Response
}
