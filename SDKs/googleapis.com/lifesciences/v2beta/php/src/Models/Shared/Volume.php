<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Volume - Carries information about storage that can be attached to a VM. Specify either `Volume` or `Disk`, but not both.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Volume
{
    /**
     * Configuration for an existing disk to be attached to the VM.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExistingDisk $existingDisk
     */
	#[\JMS\Serializer\Annotation\SerializedName('existingDisk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExistingDisk')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExistingDisk $existingDisk = null;
    
    /**
     * Configuration for an `NFSMount` to be attached to the VM.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NFSMount $nfsMount
     */
	#[\JMS\Serializer\Annotation\SerializedName('nfsMount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NFSMount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NFSMount $nfsMount = null;
    
    /**
     * Configuration for a persistent disk to be attached to the VM. See https://cloud.google.com/compute/docs/disks/performance for more information about disk type, size, and performance considerations.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersistentDisk $persistentDisk
     */
	#[\JMS\Serializer\Annotation\SerializedName('persistentDisk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersistentDisk')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersistentDisk $persistentDisk = null;
    
    /**
     * A user-supplied name for the volume. Used when mounting the volume into `Actions`. The name must contain only upper and lowercase alphanumeric characters and hyphens and cannot start with a hyphen.
     * 
     * @var ?string $volume
     */
	#[\JMS\Serializer\Annotation\SerializedName('volume')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $volume = null;
    
	public function __construct()
	{
		$this->existingDisk = null;
		$this->nfsMount = null;
		$this->persistentDisk = null;
		$this->volume = null;
	}
}
