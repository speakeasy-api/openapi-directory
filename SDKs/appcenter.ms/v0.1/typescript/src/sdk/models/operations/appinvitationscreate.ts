/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AppInvitationsCreateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The user's role
 */
export enum AppInvitationsCreateRequestBodyRoleEnum {
  Admin = "admin",
  Collaborator = "collaborator",
  Member = "member",
}

/**
 * The email of the user to invite
 */
export class AppInvitationsCreateRequestBody extends SpeakeasyBase {
  /**
   * The user's role
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: AppInvitationsCreateRequestBodyRoleEnum;

  /**
   * The user's email address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_email" })
  userEmail: string;
}

export class AppInvitationsCreateRequest extends SpeakeasyBase {
  /**
   * The email of the user to invite
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: AppInvitationsCreateRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AppInvitationsCreateDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class AppInvitationsCreateDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AppInvitationsCreateDefaultApplicationJSONError)
  error: AppInvitationsCreateDefaultApplicationJSONError;
}

export class AppInvitationsCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  appInvitationsCreateDefaultApplicationJSONObject?: AppInvitationsCreateDefaultApplicationJSON;
}
