<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetConsumerV1ServicesRequest
{
    /**
     * Search All Locations, default is false
     * 
     * @var ?bool $allLocations
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=allLocations')]
    public ?bool $allLocations = null;
    
    /**
     * Filter by default service, default is false
     * 
     * @var ?bool $defaultService
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=defaultService')]
    public ?bool $defaultService = null;
    
    /**
     * Page limit default 20, max 100
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * id of business location, defaults to primary business location
     * 
     * @var ?string $locationId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=locationId')]
    public ?string $locationId = null;
    
    /**
     * Filter by Name, supports Partial name search
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * Starting row of page, default 0
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Filter by scope, Company, Location or All, default is All
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServicesScopeEnum $scope
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=scope')]
    public ?\OpenAPI\OpenAPI\Models\Shared\ServicesScopeEnum $scope = null;
    
    /**
     * Filter by groupId
     * 
     * @var ?int $serviceGroupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=serviceGroupId')]
    public ?int $serviceGroupId = null;
    
    /**
     * Filter by ServiceId, using this parameter would ignore all other parameters
     * 
     * @var ?string $serviceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=serviceId')]
    public ?string $serviceId = null;
    
    /**
     * Sort results in Descending Order, default true
     * 
     * @var ?bool $sortDescending
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sortDescending')]
    public ?bool $sortDescending = null;
    
    /**
     * Sort results using Natural Sort or Sorted alphabetically by Service Names, default is natural
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceSortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sortOrder')]
    public ?\OpenAPI\OpenAPI\Models\Shared\ServiceSortOrderEnum $sortOrder = null;
    
	public function __construct()
	{
		$this->allLocations = null;
		$this->defaultService = null;
		$this->limit = null;
		$this->locationId = null;
		$this->name = null;
		$this->offset = null;
		$this->scope = null;
		$this->serviceGroupId = null;
		$this->serviceId = null;
		$this->sortDescending = null;
		$this->sortOrder = null;
	}
}
