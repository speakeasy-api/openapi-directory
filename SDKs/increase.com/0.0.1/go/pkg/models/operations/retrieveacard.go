// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveACardRequest struct {
	CardID string `pathParam:"style=simple,explode=false,name=card_id"`
}

type RetrieveACardDefaultApplicationJSON13StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveACardDefaultApplicationJSON13StatusEnum = 429
)

func (e RetrieveACardDefaultApplicationJSON13StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RetrieveACardDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON13TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveACardDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RetrieveACardDefaultApplicationJSON13TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RetrieveACardDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON13 struct {
	Detail     string                                          `json:"detail"`
	RetryAfter *int64                                          `json:"retry_after,omitempty"`
	Status     RetrieveACardDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                          `json:"title"`
	Type       RetrieveACardDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON12StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveACardDefaultApplicationJSON12StatusEnum = 403
)

func (e RetrieveACardDefaultApplicationJSON12StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveACardDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON12TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveACardDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RetrieveACardDefaultApplicationJSON12TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RetrieveACardDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON12 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON11StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveACardDefaultApplicationJSON11StatusEnum = 404
)

func (e RetrieveACardDefaultApplicationJSON11StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveACardDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON11TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveACardDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RetrieveACardDefaultApplicationJSON11TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RetrieveACardDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON11 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON10StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON10StatusEnumFourHundred RetrieveACardDefaultApplicationJSON10StatusEnum = 400
)

func (e RetrieveACardDefaultApplicationJSON10StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveACardDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON10TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveACardDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RetrieveACardDefaultApplicationJSON10TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RetrieveACardDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON10 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON9StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON9StatusEnumFourHundred RetrieveACardDefaultApplicationJSON9StatusEnum = 400
)

func (e RetrieveACardDefaultApplicationJSON9StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveACardDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON9TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveACardDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RetrieveACardDefaultApplicationJSON9TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RetrieveACardDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                       `json:"errors"`
	Status RetrieveACardDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON8StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveACardDefaultApplicationJSON8StatusEnum = 409
)

func (e RetrieveACardDefaultApplicationJSON8StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveACardDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON8TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveACardDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RetrieveACardDefaultApplicationJSON8TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RetrieveACardDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON8 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON7StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveACardDefaultApplicationJSON7StatusEnum = 401
)

func (e RetrieveACardDefaultApplicationJSON7StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RetrieveACardDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON7TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveACardDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RetrieveACardDefaultApplicationJSON7TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RetrieveACardDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON7 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON6StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON6StatusEnumFiveHundred RetrieveACardDefaultApplicationJSON6StatusEnum = 500
)

func (e RetrieveACardDefaultApplicationJSON6StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RetrieveACardDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON6TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON6TypeEnumInternalServerError RetrieveACardDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RetrieveACardDefaultApplicationJSON6TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RetrieveACardDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON6 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON5StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveACardDefaultApplicationJSON5StatusEnum = 403
)

func (e RetrieveACardDefaultApplicationJSON5StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveACardDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON5TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveACardDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RetrieveACardDefaultApplicationJSON5TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RetrieveACardDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON5 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON4StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveACardDefaultApplicationJSON4StatusEnum = 422
)

func (e RetrieveACardDefaultApplicationJSON4StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RetrieveACardDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON4TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveACardDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RetrieveACardDefaultApplicationJSON4TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RetrieveACardDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON4 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON3StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveACardDefaultApplicationJSON3StatusEnum = 409
)

func (e RetrieveACardDefaultApplicationJSON3StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveACardDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON3TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveACardDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RetrieveACardDefaultApplicationJSON3TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RetrieveACardDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON3 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON2StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveACardDefaultApplicationJSON2StatusEnum = 403
)

func (e RetrieveACardDefaultApplicationJSON2StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveACardDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON2TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveACardDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RetrieveACardDefaultApplicationJSON2TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RetrieveACardDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON2 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveACardDefaultApplicationJSON1StatusEnum int64

const (
	RetrieveACardDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveACardDefaultApplicationJSON1StatusEnum = 404
)

func (e RetrieveACardDefaultApplicationJSON1StatusEnum) ToPointer() *RetrieveACardDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveACardDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON1TypeEnum string

const (
	RetrieveACardDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveACardDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RetrieveACardDefaultApplicationJSON1TypeEnum) ToPointer() *RetrieveACardDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RetrieveACardDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RetrieveACardDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveACardDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RetrieveACardDefaultApplicationJSON1 struct {
	Detail string                                         `json:"detail"`
	Status RetrieveACardDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   RetrieveACardDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveACardResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card
	Card *shared.Card
	// Error
	Error interface{}
}
