"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from typing import Optional


@dataclasses.dataclass
class DeleteImagesRequest:
    
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    all_images: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'allImages', 'style': 'form', 'explode': True }})
    r"""Flag to specify delete all images, specify this flag or a list of images. Using this flag will return a 202 response to indicate the images are being deleted."""  
    all_iterations: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'allIterations', 'style': 'form', 'explode': True }})
    r"""Removes these images from all iterations, not just the current workspace. Using this flag will return a 202 response to indicate the images are being deleted."""  
    image_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'imageIds', 'style': 'form', 'explode': False }})
    r"""Ids of the images to be deleted. Limited to 256 images per batch."""  
    

@dataclasses.dataclass
class DeleteImagesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    