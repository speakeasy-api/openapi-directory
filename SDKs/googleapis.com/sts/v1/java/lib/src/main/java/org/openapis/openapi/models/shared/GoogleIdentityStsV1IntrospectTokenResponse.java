/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleIdentityStsV1IntrospectTokenResponse - Response message for IntrospectToken.
 */
public class GoogleIdentityStsV1IntrospectTokenResponse {
    /**
     * A boolean value that indicates whether the provided access token is currently active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public GoogleIdentityStsV1IntrospectTokenResponse withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * The client identifier for the OAuth 2.0 client that requested the provided token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public GoogleIdentityStsV1IntrospectTokenResponse withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The expiration timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token will expire.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exp")
    public String exp;

    public GoogleIdentityStsV1IntrospectTokenResponse withExp(String exp) {
        this.exp = exp;
        return this;
    }
    
    /**
     * The issued timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token was originally issued.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iat")
    public String iat;

    public GoogleIdentityStsV1IntrospectTokenResponse withIat(String iat) {
        this.iat = iat;
        return this;
    }
    
    /**
     * The issuer of the provided token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iss")
    public String iss;

    public GoogleIdentityStsV1IntrospectTokenResponse withIss(String iss) {
        this.iss = iss;
        return this;
    }
    
    /**
     * A list of scopes associated with the provided token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;

    public GoogleIdentityStsV1IntrospectTokenResponse withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * The unique user ID associated with the provided token. For Google Accounts, this value is based on the Google Account's user ID. For federated identities, this value is based on the identity pool ID and the value of the mapped `google.subject` attribute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sub")
    public String sub;

    public GoogleIdentityStsV1IntrospectTokenResponse withSub(String sub) {
        this.sub = sub;
        return this;
    }
    
    /**
     * The human-readable identifier for the token principal subject. For example, if the provided token is associated with a workload identity pool, this field contains a value in the following format: `principal://iam.googleapis.com/projects//locations/global/workloadIdentityPools//subject/`. If the provided token is associated with a workforce pool, this field contains a value in the following format: `principal://iam.googleapis.com/locations/global/workforcePools//subject/`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public GoogleIdentityStsV1IntrospectTokenResponse withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public GoogleIdentityStsV1IntrospectTokenResponse(){}
}
