<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FileLabels - A group of labels for the file.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FileLabels
{
    /**
     * Deprecated.
     * 
     * @var ?bool $hidden
     */
	#[\JMS\Serializer\Annotation\SerializedName('hidden')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hidden = null;
    
    /**
     * Whether the file has been modified by this user.
     * 
     * @var ?bool $modified
     */
	#[\JMS\Serializer\Annotation\SerializedName('modified')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $modified = null;
    
    /**
     * Deprecated - use copyRequiresWriterPermission instead.
     * 
     * @var ?bool $restricted
     */
	#[\JMS\Serializer\Annotation\SerializedName('restricted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $restricted = null;
    
    /**
     * Whether this file is starred by the user.
     * 
     * @var ?bool $starred
     */
	#[\JMS\Serializer\Annotation\SerializedName('starred')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $starred = null;
    
    /**
     * Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file. The trashed item is excluded from all files.list responses returned for any user who does not own the file. However, all users with access to the file can see the trashed item metadata in an API response. All users with access can copy, download, export, and share the file.
     * 
     * @var ?bool $trashed
     */
	#[\JMS\Serializer\Annotation\SerializedName('trashed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $trashed = null;
    
    /**
     * Whether this file has been viewed by this user.
     * 
     * @var ?bool $viewed
     */
	#[\JMS\Serializer\Annotation\SerializedName('viewed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $viewed = null;
    
	public function __construct()
	{
		$this->hidden = null;
		$this->modified = null;
		$this->restricted = null;
		$this->starred = null;
		$this->trashed = null;
		$this->viewed = null;
	}
}
