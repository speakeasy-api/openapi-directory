/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateSimServerList = ["https://wireless.twilio.com"] as const;

export class UpdateSimSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method we should use to call `callback_url`. Can be: `POST` or `GET`. The default is `POST`.
 */
export enum UpdateSimUpdateSimRequestCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `commands_callback_url`. Can be: `POST` or `GET`. The default is `POST`.
 */
export enum UpdateSimUpdateSimRequestCommandsCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`. Default is `POST`.
 */
export enum UpdateSimUpdateSimRequestSmsFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`. Default is `POST`.
 */
export enum UpdateSimUpdateSimRequestSmsMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * Deprecated.
 */
export enum UpdateSimUpdateSimRequestVoiceFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * Deprecated.
 */
export enum UpdateSimUpdateSimRequestVoiceMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class UpdateSimUpdateSimRequest extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the Sim resource should belong. The Account SID can only be that of the requesting Account or that of a [Subaccount](https://www.twilio.com/docs/iam/api/subaccounts) of the requesting Account. Only valid when the Sim resource's status is `new`. For more information, see the [Move SIMs between Subaccounts documentation](https://www.twilio.com/docs/wireless/api/sim-resource#move-sims-between-subaccounts).
   */
  @SpeakeasyMetadata({ data: "form, name=AccountSid" })
  accountSid?: string;

  /**
   * The HTTP method we should use to call `callback_url`. Can be: `POST` or `GET`. The default is `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackMethod" })
  callbackMethod?: UpdateSimUpdateSimRequestCallbackMethodEnum;

  /**
   * The URL we should call using the `callback_url` when the SIM has finished updating. When the SIM transitions from `new` to `ready` or from any status to `deactivated`, we call this URL when the status changes to an intermediate status (`ready` or `deactivated`) and again when the status changes to its final status (`active` or `canceled`).
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  /**
   * The HTTP method we should use to call `commands_callback_url`. Can be: `POST` or `GET`. The default is `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=CommandsCallbackMethod" })
  commandsCallbackMethod?: UpdateSimUpdateSimRequestCommandsCallbackMethodEnum;

  /**
   * The URL we should call using the `commands_callback_method` when the SIM sends a [Command](https://www.twilio.com/docs/wireless/api/command-resource). Your server should respond with an HTTP status code in the 200 range; any response body is ignored.
   */
  @SpeakeasyMetadata({ data: "form, name=CommandsCallbackUrl" })
  commandsCallbackUrl?: string;

  /**
   * A descriptive string that you create to describe the Sim resource. It does not need to be unique.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * The SID or unique name of the [RatePlan resource](https://www.twilio.com/docs/wireless/api/rateplan-resource) to which the Sim resource should be assigned.
   */
  @SpeakeasyMetadata({ data: "form, name=RatePlan" })
  ratePlan?: string;

  @SpeakeasyMetadata({ data: "form, name=ResetStatus" })
  resetStatus?: shared.SimEnumResetStatusEnum;

  /**
   * The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`. Default is `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsFallbackMethod" })
  smsFallbackMethod?: UpdateSimUpdateSimRequestSmsFallbackMethodEnum;

  /**
   * The URL we should call using the `sms_fallback_method` when an error occurs while retrieving or executing the TwiML requested from `sms_url`.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsFallbackUrl" })
  smsFallbackUrl?: string;

  /**
   * The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`. Default is `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsMethod" })
  smsMethod?: UpdateSimUpdateSimRequestSmsMethodEnum;

  /**
   * The URL we should call using the `sms_method` when the SIM-connected device sends an SMS message that is not a [Command](https://www.twilio.com/docs/wireless/api/command-resource).
   */
  @SpeakeasyMetadata({ data: "form, name=SmsUrl" })
  smsUrl?: string;

  @SpeakeasyMetadata({ data: "form, name=Status" })
  status?: shared.SimEnumStatusEnum;

  /**
   * An application-defined string that uniquely identifies the resource. It can be used in place of the `sid` in the URL path to address the resource.
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackMethod" })
  voiceFallbackMethod?: UpdateSimUpdateSimRequestVoiceFallbackMethodEnum;

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackUrl" })
  voiceFallbackUrl?: string;

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceMethod" })
  voiceMethod?: UpdateSimUpdateSimRequestVoiceMethodEnum;

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceUrl" })
  voiceUrl?: string;
}

export class UpdateSimRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateSimUpdateSimRequest;

  /**
   * The SID or the `unique_name` of the Sim resource to update.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateSimResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  wirelessV1Sim?: shared.WirelessV1Sim;
}
