/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Source - Represents display or publishing preferences of user's own account. Returned as an additional entity when verifying and updated credentials, as an attribute of Account.
 * https://docs.joinmastodon.org/entities/source/
 */
public class Source {
    /**
     * Metadata about the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public Field[] fields;
    public Source withFields(Field[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The number of pending follow requests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("follow_requests_count")
    public Long followRequestsCount;
    public Source withFollowRequestsCount(Long followRequestsCount) {
        this.followRequestsCount = followRequestsCount;
        return this;
    }
    
    /**
     * The default posting language for new statuses, ISO 639-1 language two-letter code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public Source withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Profile bio
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;
    public Source withNote(String note) {
        this.note = note;
        return this;
    }
    
    /**
     * The default post privacy to be used for new statuses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privacy")
    public SourcePrivacyEnum privacy;
    public Source withPrivacy(SourcePrivacyEnum privacy) {
        this.privacy = privacy;
        return this;
    }
    
    /**
     * Whether new statuses should be marked sensitive by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sensitive")
    public Boolean sensitive;
    public Source withSensitive(Boolean sensitive) {
        this.sensitive = sensitive;
        return this;
    }
    
}
