/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Common characters to not transform when masking. Useful to avoid removing punctuation.
 */
export enum GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreEnum {
  CommonCharsToIgnoreUnspecified = "COMMON_CHARS_TO_IGNORE_UNSPECIFIED",
  Numeric = "NUMERIC",
  AlphaUpperCase = "ALPHA_UPPER_CASE",
  AlphaLowerCase = "ALPHA_LOWER_CASE",
  Punctuation = "PUNCTUATION",
  Whitespace = "WHITESPACE",
}

/**
 * Characters to skip when doing deidentification of a value. These will be left alone and skipped.
 */
export class GooglePrivacyDlpV2CharsToIgnore extends SpeakeasyBase {
  /**
   * Characters to not transform when masking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "charactersToSkip" })
  charactersToSkip?: string;

  /**
   * Common characters to not transform when masking. Useful to avoid removing punctuation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commonCharactersToIgnore" })
  commonCharactersToIgnore?: GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreEnum;
}
