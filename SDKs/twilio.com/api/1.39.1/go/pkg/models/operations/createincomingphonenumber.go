// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateIncomingPhoneNumberServerList = []string{
	"https://api.twilio.com",
}

type CreateIncomingPhoneNumberSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateIncomingPhoneNumberPathParams struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
	AccountSid string `pathParam:"style=simple,explode=false,name=AccountSid"`
}

// CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum - The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
type CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum string

const (
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnumHead   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum = "HEAD"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnumGet    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum = "GET"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnumPost   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum = "POST"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnumPatch  CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum = "PATCH"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnumPut    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum = "PUT"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnumDelete CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum = "DELETE"
)

func (e *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum: %s", s)
	}
}

// CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum - The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.
type CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum string

const (
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnumHead   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum = "HEAD"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnumGet    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum = "GET"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnumPost   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum = "POST"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnumPatch  CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum = "PATCH"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnumPut    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum = "PUT"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnumDelete CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum = "DELETE"
)

func (e *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum: %s", s)
	}
}

// CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum - The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.
type CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum string

const (
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnumHead   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum = "HEAD"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnumGet    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum = "GET"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnumPost   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum = "POST"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnumPatch  CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum = "PATCH"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnumPut    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum = "PUT"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnumDelete CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum = "DELETE"
)

func (e *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum: %s", s)
	}
}

// CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum - The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
type CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum string

const (
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnumHead   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum = "HEAD"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnumGet    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum = "GET"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnumPost   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum = "POST"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnumPatch  CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum = "PATCH"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnumPut    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum = "PUT"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnumDelete CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum = "DELETE"
)

func (e *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum: %s", s)
	}
}

// CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum - The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.
type CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum string

const (
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnumHead   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum = "HEAD"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnumGet    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum = "GET"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnumPost   CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum = "POST"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnumPatch  CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum = "PATCH"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnumPut    CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum = "PUT"
	CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnumDelete CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum = "DELETE"
)

func (e *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum: %s", s)
	}
}

type CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequest struct {
	// The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
	AddressSid *string `form:"name=AddressSid"`
	// The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
	APIVersion *string `form:"name=ApiVersion"`
	// The desired area code for your new incoming phone number. Can be any three-digit, US or Canada area code. We will provision an available phone number within this area code for you. **You must provide an `area_code` or a `phone_number`.** (US and Canada only).
	AreaCode *string `form:"name=AreaCode"`
	// The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
	BundleSid *string `form:"name=BundleSid"`
	// The SID of the emergency address configuration to use for emergency calling from the new phone number.
	EmergencyAddressSid *string                                            `form:"name=EmergencyAddressSid"`
	EmergencyStatus     *shared.IncomingPhoneNumberEnumEmergencyStatusEnum `form:"name=EmergencyStatus"`
	// A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the new phone number.
	FriendlyName *string `form:"name=FriendlyName"`
	// The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
	IdentitySid *string `form:"name=IdentitySid"`
	// The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
	PhoneNumber *string `form:"name=PhoneNumber"`
	// The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
	SmsApplicationSid *string `form:"name=SmsApplicationSid"`
	// The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
	SmsFallbackMethod *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsFallbackMethodEnum `form:"name=SmsFallbackMethod"`
	// The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
	SmsFallbackURL *string `form:"name=SmsFallbackUrl"`
	// The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.
	SmsMethod *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestSmsMethodEnum `form:"name=SmsMethod"`
	// The URL we should call when the new phone number receives an incoming SMS message.
	SmsURL *string `form:"name=SmsUrl"`
	// The URL we should call using the `status_callback_method` to send status information to your application.
	StatusCallback *string `form:"name=StatusCallback"`
	// The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.
	StatusCallbackMethod *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestStatusCallbackMethodEnum `form:"name=StatusCallbackMethod"`
	// The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
	TrunkSid *string `form:"name=TrunkSid"`
	// The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
	VoiceApplicationSid *string `form:"name=VoiceApplicationSid"`
	// Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
	VoiceCallerIDLookup *bool `form:"name=VoiceCallerIdLookup"`
	// The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
	VoiceFallbackMethod *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceFallbackMethodEnum `form:"name=VoiceFallbackMethod"`
	// The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
	VoiceFallbackURL *string `form:"name=VoiceFallbackUrl"`
	// The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.
	VoiceMethod      *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequestVoiceMethodEnum `form:"name=VoiceMethod"`
	VoiceReceiveMode *shared.IncomingPhoneNumberEnumVoiceReceiveModeEnum                       `form:"name=VoiceReceiveMode"`
	// The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
	VoiceURL *string `form:"name=VoiceUrl"`
}

type CreateIncomingPhoneNumberRequest struct {
	PathParams CreateIncomingPhoneNumberPathParams
	Request    *CreateIncomingPhoneNumberCreateIncomingPhoneNumberRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   CreateIncomingPhoneNumberSecurity
	ServerURL  *string
}

type CreateIncomingPhoneNumberResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	APIV2010AccountIncomingPhoneNumber *shared.APIV2010AccountIncomingPhoneNumber
}
