"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import runner_groups_enterprise as shared_runner_groups_enterprise
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBodyVisibilityEnum(str, Enum):
    r"""Visibility of a runner group. You can select all organizations or select individual organization."""
    SELECTED = 'selected'
    ALL = 'all'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBody:
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the runner group."""  
    allows_public_repositories: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allows_public_repositories'), 'exclude': lambda f: f is None }})
    r"""Whether the runner group can be used by `public` repositories."""  
    restricted_to_workflows: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restricted_to_workflows'), 'exclude': lambda f: f is None }})
    r"""If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array."""  
    runners: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('runners'), 'exclude': lambda f: f is None }})
    r"""List of runner IDs to add to the runner group."""  
    selected_organization_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected_organization_ids'), 'exclude': lambda f: f is None }})
    r"""List of organization IDs that can access the runner group."""  
    selected_workflows: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected_workflows'), 'exclude': lambda f: f is None }})
    r"""List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`."""  
    visibility: Optional[EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBodyVisibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility'), 'exclude': lambda f: f is None }})
    r"""Visibility of a runner group. You can select all organizations or select individual organization."""  
    

@dataclasses.dataclass
class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequest:
    
    enterprise: str = dataclasses.field(metadata={'path_param': { 'field_name': 'enterprise', 'style': 'simple', 'explode': False }})
    r"""The slug version of the enterprise name. You can also substitute this value with the enterprise id."""  
    request_body: EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    runner_groups_enterprise: Optional[shared_runner_groups_enterprise.RunnerGroupsEnterprise] = dataclasses.field(default=None)
    r"""Response"""  
    