"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ContributionDetailsContributionRuleTypeEnum(str, Enum):
    r"""The type of contribution rule"""
    FIXED_DOLLAR = 'fixed_dollar'
    PERCENT = 'percent'

class ContributionDetailsContributionSourceEnum(str, Enum):
    r"""The source of the contribution, either employee_amount or employer_amount"""
    EMPLOYEE_AMOUNT = 'employee_amount'
    EMPLOYER_AMOUNT = 'employer_amount'

class ContributionDetailsContributionTargetEnum(str, Enum):
    r"""Where this particular contribution rule is applied, either employee or dependents"""
    DEPENDENTS = 'dependents'
    EMPLOYEE = 'employee'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContributionDetails:
    
    contribution_rule: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contribution_rule') }})
    r"""The contribution rule"""  
    contribution_rule_type: ContributionDetailsContributionRuleTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contribution_rule_type') }})
    r"""The type of contribution rule"""  
    contribution_source: ContributionDetailsContributionSourceEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contribution_source') }})
    r"""The source of the contribution, either employee_amount or employer_amount"""  
    contribution_target: ContributionDetailsContributionTargetEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contribution_target') }})
    r"""Where this particular contribution rule is applied, either employee or dependents"""  
    