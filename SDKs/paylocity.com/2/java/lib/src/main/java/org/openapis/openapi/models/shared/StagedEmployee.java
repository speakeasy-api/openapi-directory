/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StagedEmployee - The staged employee model
 */
public class StagedEmployee {
    /**
     * Add up to 19 direct deposit accounts in addition to the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with information provided on the request. GET API will not return direct deposit data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalDirectDeposit")
    public StagedEmployeeAdditionalDirectDeposit[] additionalDirectDeposit;
    public StagedEmployee withAdditionalDirectDeposit(StagedEmployeeAdditionalDirectDeposit[] additionalDirectDeposit) {
        this.additionalDirectDeposit = additionalDirectDeposit;
        return this;
    }
    
    /**
     * Add setup values used for employee benefits integration, insurance plan settings, and ACA reporting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("benefitSetup")
    public StagedEmployeeBenefitSetup[] benefitSetup;
    public StagedEmployee withBenefitSetup(StagedEmployeeBenefitSetup[] benefitSetup) {
        this.benefitSetup = benefitSetup;
        return this;
    }
    
    /**
     * Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("birthDate")
    public String birthDate;
    public StagedEmployee withBirthDate(String birthDate) {
        this.birthDate = birthDate;
        return this;
    }
    
    /**
     * Up to 8 custom fields of boolean (checkbox) type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customBooleanFields")
    public StagedEmployeeCustomBooleanFields[] customBooleanFields;
    public StagedEmployee withCustomBooleanFields(StagedEmployeeCustomBooleanFields[] customBooleanFields) {
        this.customBooleanFields = customBooleanFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of the date type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDateFields")
    public StagedEmployeeCustomDateFields[] customDateFields;
    public StagedEmployee withCustomDateFields(StagedEmployeeCustomDateFields[] customDateFields) {
        this.customDateFields = customDateFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of the dropdown type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDropDownFields")
    public StagedEmployeeCustomDropDownFields[] customDropDownFields;
    public StagedEmployee withCustomDropDownFields(StagedEmployeeCustomDropDownFields[] customDropDownFields) {
        this.customDropDownFields = customDropDownFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of numeric type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customNumberFields")
    public StagedEmployeeCustomNumberFields[] customNumberFields;
    public StagedEmployee withCustomNumberFields(StagedEmployeeCustomNumberFields[] customNumberFields) {
        this.customNumberFields = customNumberFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of text type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customTextFields")
    public StagedEmployeeCustomTextFields[] customTextFields;
    public StagedEmployee withCustomTextFields(StagedEmployeeCustomTextFields[] customTextFields) {
        this.customTextFields = customTextFields;
        return this;
    }
    
    /**
     * Add home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departmentPosition")
    public StagedEmployeeDepartmentPosition[] departmentPosition;
    public StagedEmployee withDepartmentPosition(StagedEmployeeDepartmentPosition[] departmentPosition) {
        this.departmentPosition = departmentPosition;
        return this;
    }
    
    /**
     * Indicates if employee has disability status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabilityDescription")
    public String disabilityDescription;
    public StagedEmployee withDisabilityDescription(String disabilityDescription) {
        this.disabilityDescription = disabilityDescription;
        return this;
    }
    
    /**
     * Leave blank to have Web Pay automatically assign the next available employee ID.&lt;br  /&gt; Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employeeId")
    public String employeeId;
    public StagedEmployee withEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }
    
    /**
     * Employee ethnicity.&lt;br  /&gt; Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethnicity")
    public String ethnicity;
    public StagedEmployee withEthnicity(String ethnicity) {
        this.ethnicity = ethnicity;
        return this;
    }
    
    /**
     * Add federal tax amount type (taxCalculationCode), amount or percentage, filing status, and exemptions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("federalTax")
    public StagedEmployeeFederalTax[] federalTax;
    public StagedEmployee withFederalTax(StagedEmployeeFederalTax[] federalTax) {
        this.federalTax = federalTax;
        return this;
    }
    
    /**
     * Employee first name. &lt;br  /&gt;Max length: 40
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;
    public StagedEmployee withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fitwExemptReason")
    public String fitwExemptReason;
    public StagedEmployee withFitwExemptReason(String fitwExemptReason) {
        this.fitwExemptReason = fitwExemptReason;
        return this;
    }
    
    /**
     * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("futaExemptReason")
    public String futaExemptReason;
    public StagedEmployee withFutaExemptReason(String futaExemptReason) {
        this.futaExemptReason = futaExemptReason;
        return this;
    }
    
    /**
     * Employee gender. Common values *M* (Male), *F* (Female). &lt;br  /&gt;Max length: 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;
    public StagedEmployee withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * Add employee's home address, personal phone numbers, and personal email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homeAddress")
    public StagedEmployeeHomeAddress[] homeAddress;
    public StagedEmployee withHomeAddress(StagedEmployeeHomeAddress[] homeAddress) {
        this.homeAddress = homeAddress;
        return this;
    }
    
    /**
     * Indicates if employee in agriculture or farming.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEmployee943")
    public Boolean isEmployee943;
    public StagedEmployee withIsEmployee943(Boolean isEmployee943) {
        this.isEmployee943 = isEmployee943;
        return this;
    }
    
    /**
     * Indicates if employee is a smoker.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isSmoker")
    public Boolean isSmoker;
    public StagedEmployee withIsSmoker(Boolean isSmoker) {
        this.isSmoker = isSmoker;
        return this;
    }
    
    /**
     * Employee last name. &lt;br  /&gt;Max length: 40
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;
    public StagedEmployee withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Add local tax code, filing status, and exemptions including PA-PSD taxes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localTax")
    public StagedEmployeeLocalTax[] localTax;
    public StagedEmployee withLocalTax(StagedEmployeeLocalTax[] localTax) {
        this.localTax = localTax;
        return this;
    }
    
    /**
     * Add the main direct deposit account. After deposits are made to any additional direct deposit accounts, the remaining net check is deposited in the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with what is provided on the request. GET API will not return direct deposit data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainDirectDeposit")
    public StagedEmployeeMainDirectDeposit[] mainDirectDeposit;
    public StagedEmployee withMainDirectDeposit(StagedEmployeeMainDirectDeposit[] mainDirectDeposit) {
        this.mainDirectDeposit = mainDirectDeposit;
        return this;
    }
    
    /**
     * Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. &lt;br  /&gt;Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maritalStatus")
    public String maritalStatus;
    public StagedEmployee withMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
        return this;
    }
    
    /**
     * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("medExemptReason")
    public String medExemptReason;
    public StagedEmployee withMedExemptReason(String medExemptReason) {
        this.medExemptReason = medExemptReason;
        return this;
    }
    
    /**
     * Employee middle name.&lt;br  /&gt; Max length: 20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middleName")
    public String middleName;
    public StagedEmployee withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    /**
     * Add non-primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, supplemental check (specialCheckCalc), and reciprocity code information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonPrimaryStateTax")
    public StagedEmployeeNonPrimaryStateTax[] nonPrimaryStateTax;
    public StagedEmployee withNonPrimaryStateTax(StagedEmployeeNonPrimaryStateTax[] nonPrimaryStateTax) {
        this.nonPrimaryStateTax = nonPrimaryStateTax;
        return this;
    }
    
    /**
     * Employee preferred display name.&lt;br  /&gt; Max length: 20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredName")
    public String preferredName;
    public StagedEmployee withPreferredName(String preferredName) {
        this.preferredName = preferredName;
        return this;
    }
    
    /**
     * Add hourly or salary pay rate, effective date, and pay frequency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryPayRate")
    public StagedEmployeePrimaryPayRate[] primaryPayRate;
    public StagedEmployee withPrimaryPayRate(StagedEmployeePrimaryPayRate[] primaryPayRate) {
        this.primaryPayRate = primaryPayRate;
        return this;
    }
    
    /**
     * Add primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, and supplemental check (specialCheckCalc) information. Only one primary state is allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryStateTax")
    public StagedEmployeePrimaryStateTax[] primaryStateTax;
    public StagedEmployee withPrimaryStateTax(StagedEmployeePrimaryStateTax[] primaryStateTax) {
        this.primaryStateTax = primaryStateTax;
        return this;
    }
    
    /**
     * Prior last name if applicable.&lt;br  /&gt;Max length: 40
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priorLastName")
    public String priorLastName;
    public StagedEmployee withPriorLastName(String priorLastName) {
        this.priorLastName = priorLastName;
        return this;
    }
    
    /**
     * Employee preferred salutation. &lt;br  /&gt;Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salutation")
    public String salutation;
    public StagedEmployee withSalutation(String salutation) {
        this.salutation = salutation;
        return this;
    }
    
    /**
     * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sitwExemptReason")
    public String sitwExemptReason;
    public StagedEmployee withSitwExemptReason(String sitwExemptReason) {
        this.sitwExemptReason = sitwExemptReason;
        return this;
    }
    
    /**
     * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssExemptReason")
    public String ssExemptReason;
    public StagedEmployee withSsExemptReason(String ssExemptReason) {
        this.ssExemptReason = ssExemptReason;
        return this;
    }
    
    /**
     * Employee social security number. Leave it blank if valid social security number not available. &lt;br  /&gt;Max length: 11
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssn")
    public String ssn;
    public StagedEmployee withSsn(String ssn) {
        this.ssn = ssn;
        return this;
    }
    
    /**
     * Add employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public StagedEmployeeStatus[] status;
    public StagedEmployee withStatus(StagedEmployeeStatus[] status) {
        this.status = status;
        return this;
    }
    
    /**
     * Employee name suffix. Common values are *Jr, Sr, II*.&lt;br  /&gt;Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suffix")
    public String suffix;
    public StagedEmployee withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
    
    /**
     * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suiExemptReason")
    public String suiExemptReason;
    public StagedEmployee withSuiExemptReason(String suiExemptReason) {
        this.suiExemptReason = suiExemptReason;
        return this;
    }
    
    /**
     * Employee SUI (State Unemployment Insurance) state. &lt;br  /&gt;Max length: 2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suiState")
    public String suiState;
    public StagedEmployee withSuiState(String suiState) {
        this.suiState = suiState;
        return this;
    }
    
    /**
     * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). &lt;br  /&gt;Max length: 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxDistributionCode1099R")
    public String taxDistributionCode1099R;
    public StagedEmployee withTaxDistributionCode1099R(String taxDistributionCode1099R) {
        this.taxDistributionCode1099R = taxDistributionCode1099R;
        return this;
    }
    
    /**
     * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. &lt;br  /&gt;Max length: 15
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxForm")
    public String taxForm;
    public StagedEmployee withTaxForm(String taxForm) {
        this.taxForm = taxForm;
        return this;
    }
    
    /**
     * Indicates if employee is a veteran.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("veteranDescription")
    public String veteranDescription;
    public StagedEmployee withVeteranDescription(String veteranDescription) {
        this.veteranDescription = veteranDescription;
        return this;
    }
    
    /**
     * Add Web Time badge number and charge rate and synchronize Web Pay and Web Time employee data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webTime")
    public StagedEmployeeWebTime webTime;
    public StagedEmployee withWebTime(StagedEmployeeWebTime webTime) {
        this.webTime = webTime;
        return this;
    }
    
    /**
     * Add employee's work address, phone numbers, and email. Work Location drop down field is not included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workAddress")
    public StagedEmployeeWorkAddress[] workAddress;
    public StagedEmployee withWorkAddress(StagedEmployeeWorkAddress[] workAddress) {
        this.workAddress = workAddress;
        return this;
    }
    
    /**
     * Add I-9 work authorization information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workEligibility")
    public StagedEmployeeWorkEligibility[] workEligibility;
    public StagedEmployee withWorkEligibility(StagedEmployeeWorkEligibility[] workEligibility) {
        this.workEligibility = workEligibility;
        return this;
    }
    
}
