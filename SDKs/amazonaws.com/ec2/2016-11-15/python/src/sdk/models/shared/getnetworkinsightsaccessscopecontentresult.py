"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum(str, Enum):
    TCP = 'tcp'
    UDP = 'udp'


@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement:
    r"""The packet header statement."""
    
    destination_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    destination_ports: Optional[list[str]] = dataclasses.field(default=None)  
    destination_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    protocols: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum]] = dataclasses.field(default=None)  
    source_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    source_ports: Optional[list[str]] = dataclasses.field(default=None)  
    source_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement:
    r"""The resource statement."""
    
    resources: Optional[list[str]] = dataclasses.field(default=None)  
    resource_types: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestination:
    r"""The destination."""
    
    packet_header_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement] = dataclasses.field(default=None)  
    resource_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement] = dataclasses.field(default=None)  
    
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum(str, Enum):
    TCP = 'tcp'
    UDP = 'udp'


@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement:
    r"""The packet header statement."""
    
    destination_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    destination_ports: Optional[list[str]] = dataclasses.field(default=None)  
    destination_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    protocols: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum]] = dataclasses.field(default=None)  
    source_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    source_ports: Optional[list[str]] = dataclasses.field(default=None)  
    source_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement:
    r"""The resource statement."""
    
    resources: Optional[list[str]] = dataclasses.field(default=None)  
    resource_types: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSource:
    r"""The source."""
    
    packet_header_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement] = dataclasses.field(default=None)  
    resource_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement:
    r"""The resource statement."""
    
    resources: Optional[list[str]] = dataclasses.field(default=None)  
    resource_types: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResources:
    r"""Describes a through resource statement."""
    
    resource_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePaths:
    r"""Describes a path."""
    
    destination: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestination] = dataclasses.field(default=None)  
    source: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSource] = dataclasses.field(default=None)  
    through_resources: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResources]] = dataclasses.field(default=None)  
    
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum(str, Enum):
    TCP = 'tcp'
    UDP = 'udp'


@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement:
    r"""The packet header statement."""
    
    destination_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    destination_ports: Optional[list[str]] = dataclasses.field(default=None)  
    destination_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    protocols: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum]] = dataclasses.field(default=None)  
    source_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    source_ports: Optional[list[str]] = dataclasses.field(default=None)  
    source_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement:
    r"""The resource statement."""
    
    resources: Optional[list[str]] = dataclasses.field(default=None)  
    resource_types: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestination:
    r"""The destination."""
    
    packet_header_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement] = dataclasses.field(default=None)  
    resource_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement] = dataclasses.field(default=None)  
    
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum(str, Enum):
    TCP = 'tcp'
    UDP = 'udp'


@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement:
    r"""The packet header statement."""
    
    destination_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    destination_ports: Optional[list[str]] = dataclasses.field(default=None)  
    destination_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    protocols: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum]] = dataclasses.field(default=None)  
    source_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    source_ports: Optional[list[str]] = dataclasses.field(default=None)  
    source_prefix_lists: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement:
    r"""The resource statement."""
    
    resources: Optional[list[str]] = dataclasses.field(default=None)  
    resource_types: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSource:
    r"""The source."""
    
    packet_header_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement] = dataclasses.field(default=None)  
    resource_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement:
    r"""The resource statement."""
    
    resources: Optional[list[str]] = dataclasses.field(default=None)  
    resource_types: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResources:
    r"""Describes a through resource statement."""
    
    resource_statement: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPaths:
    r"""Describes a path."""
    
    destination: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestination] = dataclasses.field(default=None)  
    source: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSource] = dataclasses.field(default=None)  
    through_resources: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResources]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContent:
    r"""The Network Access Scope content."""
    
    exclude_paths: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePaths]] = dataclasses.field(default=None)  
    match_paths: Optional[list[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPaths]] = dataclasses.field(default=None)  
    network_insights_access_scope_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeContentResult:
    r"""Success"""
    
    network_insights_access_scope_content: Optional[GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContent] = dataclasses.field(default=None)  
    