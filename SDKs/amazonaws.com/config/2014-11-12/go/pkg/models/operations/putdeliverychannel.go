// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutDeliveryChannelXAmzTargetEnum
type PutDeliveryChannelXAmzTargetEnum string

const (
	PutDeliveryChannelXAmzTargetEnumStarlingDoveServicePutDeliveryChannel PutDeliveryChannelXAmzTargetEnum = "StarlingDoveService.PutDeliveryChannel"
)

func (e *PutDeliveryChannelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StarlingDoveService.PutDeliveryChannel":
		*e = PutDeliveryChannelXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutDeliveryChannelXAmzTargetEnum: %s", s)
	}
}

type PutDeliveryChannelRequest struct {
	PutDeliveryChannelRequest shared.PutDeliveryChannelRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                PutDeliveryChannelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutDeliveryChannelResponse struct {
	ContentType string
	// InsufficientDeliveryPolicyException
	InsufficientDeliveryPolicyException interface{}
	// InvalidDeliveryChannelNameException
	InvalidDeliveryChannelNameException interface{}
	// InvalidS3KeyPrefixException
	InvalidS3KeyPrefixException interface{}
	// InvalidS3KmsKeyArnException
	InvalidS3KmsKeyArnException interface{}
	// InvalidSNSTopicARNException
	InvalidSNSTopicARNException interface{}
	// MaxNumberOfDeliveryChannelsExceededException
	MaxNumberOfDeliveryChannelsExceededException interface{}
	// NoAvailableConfigurationRecorderException
	NoAvailableConfigurationRecorderException interface{}
	// NoSuchBucketException
	NoSuchBucketException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
