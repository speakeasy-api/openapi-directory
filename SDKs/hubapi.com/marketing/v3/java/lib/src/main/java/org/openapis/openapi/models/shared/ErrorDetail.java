/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ErrorDetail {
    /**
     * The status code associated with the error detail
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;

    public ErrorDetail withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * Context about the error condition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public java.util.Map<String, String[]> context;

    public ErrorDetail withContext(java.util.Map<String, String[]> context) {
        this.context = context;
        return this;
    }
    
    /**
     * The name of the field or parameter in which the error was found.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("in")
    public String in;

    public ErrorDetail withIn(String in) {
        this.in = in;
        return this;
    }
    
    /**
     * A human readable message describing the error along with remediation steps where appropriate
     */
    @JsonProperty("message")
    public String message;

    public ErrorDetail withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * A specific category that contains more specific detail about the error
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subCategory")
    public String subCategory;

    public ErrorDetail withSubCategory(String subCategory) {
        this.subCategory = subCategory;
        return this;
    }
    
    public ErrorDetail(@JsonProperty("message") String message) {
        this.message = message;
  }
}
