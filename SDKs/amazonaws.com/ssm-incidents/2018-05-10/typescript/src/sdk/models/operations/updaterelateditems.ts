/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Details about the related item you're adding.
 */
export class UpdateRelatedItemsRequestBodyRelatedItemsUpdate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "itemToAdd" })
  @Type(() => shared.RelatedItem)
  itemToAdd?: shared.RelatedItem;

  @SpeakeasyMetadata()
  @Expose({ name: "itemToRemove" })
  @Type(() => shared.ItemIdentifier)
  itemToRemove?: shared.ItemIdentifier;
}

export class UpdateRelatedItemsRequestBody extends SpeakeasyBase {
  /**
   * A token that ensures that a client calls the operation only once with the specified details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientToken" })
  clientToken?: string;

  /**
   * The Amazon Resource Name (ARN) of the incident record that contains the related items that you update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "incidentRecordArn" })
  incidentRecordArn: string;

  /**
   * Details about the related item you're adding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relatedItemsUpdate" })
  @Type(() => UpdateRelatedItemsRequestBodyRelatedItemsUpdate)
  relatedItemsUpdate: UpdateRelatedItemsRequestBodyRelatedItemsUpdate;
}

export class UpdateRelatedItemsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateRelatedItemsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateRelatedItemsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateRelatedItemsOutput?: Record<string, any>;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
