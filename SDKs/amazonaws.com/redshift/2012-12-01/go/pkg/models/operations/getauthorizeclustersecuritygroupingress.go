// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAuthorizeClusterSecurityGroupIngressActionEnum
type GETAuthorizeClusterSecurityGroupIngressActionEnum string

const (
	GETAuthorizeClusterSecurityGroupIngressActionEnumAuthorizeClusterSecurityGroupIngress GETAuthorizeClusterSecurityGroupIngressActionEnum = "AuthorizeClusterSecurityGroupIngress"
)

func (e GETAuthorizeClusterSecurityGroupIngressActionEnum) ToPointer() *GETAuthorizeClusterSecurityGroupIngressActionEnum {
	return &e
}

func (e *GETAuthorizeClusterSecurityGroupIngressActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AuthorizeClusterSecurityGroupIngress":
		*e = GETAuthorizeClusterSecurityGroupIngressActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAuthorizeClusterSecurityGroupIngressActionEnum: %v", v)
	}
}

// GETAuthorizeClusterSecurityGroupIngressVersionEnum
type GETAuthorizeClusterSecurityGroupIngressVersionEnum string

const (
	GETAuthorizeClusterSecurityGroupIngressVersionEnumTwoThousandAndTwelve1201 GETAuthorizeClusterSecurityGroupIngressVersionEnum = "2012-12-01"
)

func (e GETAuthorizeClusterSecurityGroupIngressVersionEnum) ToPointer() *GETAuthorizeClusterSecurityGroupIngressVersionEnum {
	return &e
}

func (e *GETAuthorizeClusterSecurityGroupIngressVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETAuthorizeClusterSecurityGroupIngressVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAuthorizeClusterSecurityGroupIngressVersionEnum: %v", v)
	}
}

type GETAuthorizeClusterSecurityGroupIngressRequest struct {
	Action GETAuthorizeClusterSecurityGroupIngressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The IP range to be added the Amazon Redshift security group.
	Cidrip *string `queryParam:"style=form,explode=true,name=CIDRIP"`
	// The name of the security group to which the ingress rule is added.
	ClusterSecurityGroupName string `queryParam:"style=form,explode=true,name=ClusterSecurityGroupName"`
	// The EC2 security group to be added the Amazon Redshift security group.
	Ec2SecurityGroupName *string `queryParam:"style=form,explode=true,name=EC2SecurityGroupName"`
	// <p>The Amazon Web Services account number of the owner of the security group specified by the <i>EC2SecurityGroupName</i> parameter. The Amazon Web Services Access Key ID is not an acceptable value. </p> <p>Example: <code>111122223333</code> </p>
	Ec2SecurityGroupOwnerID *string                                            `queryParam:"style=form,explode=true,name=EC2SecurityGroupOwnerId"`
	Version                 GETAuthorizeClusterSecurityGroupIngressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm           *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAuthorizeClusterSecurityGroupIngressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
