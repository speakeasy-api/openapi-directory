"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import user as shared_user
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetUsersRequest:
    
    assignment: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'assignment', 'style': 'form', 'explode': True }})
    r"""Restrict results to the users who have contributed to this assignment."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""Restrict results to the users who have submitted a contribution with a public location located within this country."""  
    linked_profile: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'linkedProfile', 'style': 'form', 'explode': True }})
    r"""Restrict results to the users who a linked profile of this type."""  
    minimum_contributions: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minimumContributions', 'style': 'form', 'explode': True }})
    r"""Restrict results to the users who have submitted at least this many contributions."""  
    owned_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ownedBy', 'style': 'form', 'explode': True }})
    r"""Restrict results to the users who are owned by of this owner."""  
    submitted_after: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'submittedAfter', 'style': 'form', 'explode': True }})
    r"""Limit results to users who have submitted at least one contribution after this date time."""  
    submitted_before: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'submittedBefore', 'style': 'form', 'explode': True }})
    r"""Limit results to users who have submitted at least one contribution before this date time."""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""Restrict results to the user with this username."""  
    

@dataclasses.dataclass
class GetUsersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    users: Optional[list[shared_user.User]] = dataclasses.field(default=None)
    r"""A list of users"""  
    