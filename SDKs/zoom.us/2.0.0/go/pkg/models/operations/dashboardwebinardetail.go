// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type DashboardWebinarDetailSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type DashboardWebinarDetailPathParams struct {
	// The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
	//
	// If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
	WebinarID string `pathParam:"style=simple,explode=false,name=webinarId"`
}

// DashboardWebinarDetailTypeEnum - The webinar type.
type DashboardWebinarDetailTypeEnum string

const (
	DashboardWebinarDetailTypeEnumPast DashboardWebinarDetailTypeEnum = "past"
	DashboardWebinarDetailTypeEnumLive DashboardWebinarDetailTypeEnum = "live"
)

func (e *DashboardWebinarDetailTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "past":
		fallthrough
	case "live":
		*e = DashboardWebinarDetailTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DashboardWebinarDetailTypeEnum: %s", s)
	}
}

type DashboardWebinarDetailQueryParams struct {
	// The webinar type.
	Type *DashboardWebinarDetailTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type DashboardWebinarDetailRequest struct {
	PathParams  DashboardWebinarDetailPathParams
	QueryParams DashboardWebinarDetailQueryParams
	Security    DashboardWebinarDetailSecurity
}

type DashboardWebinarDetailWebinarMetricsCustomKeys struct {
	// Custom key associated with the Webinar.
	Key *string `json:"key,omitempty"`
	// Value of the custom key associated with the Webinar.
	Value *string `json:"value,omitempty"`
}

// DashboardWebinarDetailWebinarMetrics - Webinar metric details.
type DashboardWebinarDetailWebinarMetrics struct {
	// Custom keys and values assigned to the Webinar.
	CustomKeys []DashboardWebinarDetailWebinarMetricsCustomKeys `json:"custom_keys,omitempty"`
	// Department of the host.
	Dept *string `json:"dept,omitempty"`
	// Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
	Duration *string `json:"duration,omitempty"`
	// User email.
	Email *string `json:"email,omitempty"`
	// Webinar end time.
	EndTime *time.Time `json:"end_time,omitempty"`
	// Indicates whether or not TSP was used for the Webinar.
	Has3rdPartyAudio *bool `json:"has_3rd_party_audio,omitempty"`
	// Indicates whether or not PSTN was used for the Webinar.
	HasPstn *bool `json:"has_pstn,omitempty"`
	// Indicates whether or not recording was used for the Webinar.
	HasRecording *bool `json:"has_recording,omitempty"`
	// Indicates whether or not screen sharing was used for the Webinar.
	HasScreenShare *bool `json:"has_screen_share,omitempty"`
	// Indicates whether or not SIP was used for the Webinar.
	HasSip *bool `json:"has_sip,omitempty"`
	// Indicates whether or not video was used for the Webinar.
	HasVideo *bool `json:"has_video,omitempty"`
	// Indicates whether or not VoIP was used for the Webinar.
	HasVoip *bool `json:"has_voip,omitempty"`
	// User display name.
	Host *string `json:"host,omitempty"`
	// Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
	ID *int64 `json:"id,omitempty"`
	// Webinar participant count.
	Participants *int64 `json:"participants,omitempty"`
	// Webinar start time.
	StartTime *time.Time `json:"start_time,omitempty"`
	// Webinar topic.
	Topic *string `json:"topic,omitempty"`
	// User type.
	UserType *string `json:"user_type,omitempty"`
	// Webinar UUID.
	UUID *string `json:"uuid,omitempty"`
}

type DashboardWebinarDetailResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Webinar details returned.<br>
	// Only available for paid accounts that have enabled the Dashboard feature.
	WebinarMetrics *DashboardWebinarDetailWebinarMetrics
}
