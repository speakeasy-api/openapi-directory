// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListExportsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListExportsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListExportsRequestBodySortBy - Provides information about sorting a list of exports.
type ListExportsRequestBodySortBy struct {
	Attribute *shared.ExportSortAttributeEnum `json:"attribute,omitempty"`
	Order     *shared.SortOrderEnum           `json:"order,omitempty"`
}

type ListExportsRequestBody struct {
	// The unique identifier that Amazon Lex assigned to the bot.
	BotID *string `json:"botId,omitempty"`
	// The version of the bot to list exports for.
	BotVersion *string `json:"botVersion,omitempty"`
	// Provides the specification of a filter used to limit the exports in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
	Filters []shared.ExportFilter `json:"filters,omitempty"`
	// Specifies the resources that should be exported. If you don't specify a resource type in the <code>filters</code> parameter, both bot locales and custom vocabularies are exported.
	LocaleID *string `json:"localeId,omitempty"`
	// The maximum number of exports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// <p>If the response from the <code>ListExports</code> operation contains more results that specified in the <code>maxResults</code> parameter, a token is returned in the response. </p> <p>Use the returned token in the <code>nextToken</code> parameter of a <code>ListExports</code> request to return the next page of results. For a complete set of results, call the <code>ListExports</code> operation until the <code>nextToken</code> returned in the response is null.</p>
	NextToken *string `json:"nextToken,omitempty"`
	// Provides information about sorting a list of exports.
	SortBy *ListExportsRequestBodySortBy `json:"sortBy,omitempty"`
}

type ListExportsRequest struct {
	QueryParams ListExportsQueryParams
	Headers     ListExportsHeaders
	Request     ListExportsRequestBody `request:"mediaType=application/json"`
}

type ListExportsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListExportsResponse *shared.ListExportsResponse
	StatusCode          int
	RawResponse         *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
