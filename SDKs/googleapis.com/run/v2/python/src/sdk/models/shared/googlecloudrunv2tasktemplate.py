"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrunv2container as shared_googlecloudrunv2container
from ..shared import googlecloudrunv2volume as shared_googlecloudrunv2volume
from ..shared import googlecloudrunv2vpcaccess as shared_googlecloudrunv2vpcaccess
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum(str, Enum):
    r"""The execution environment being used to host this Task."""
    EXECUTION_ENVIRONMENT_UNSPECIFIED = 'EXECUTION_ENVIRONMENT_UNSPECIFIED'
    EXECUTION_ENVIRONMENT_GEN1 = 'EXECUTION_ENVIRONMENT_GEN1'
    EXECUTION_ENVIRONMENT_GEN2 = 'EXECUTION_ENVIRONMENT_GEN2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRunV2TaskTemplate:
    r"""TaskTemplate describes the data a task should have when created from a template."""
    
    containers: Optional[list[shared_googlecloudrunv2container.GoogleCloudRunV2Container]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containers'), 'exclude': lambda f: f is None }})
    r"""Holds the single container that defines the unit of execution for this task."""  
    encryption_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryptionKey'), 'exclude': lambda f: f is None }})
    r"""A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek"""  
    execution_environment: Optional[GoogleCloudRunV2TaskTemplateExecutionEnvironmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionEnvironment'), 'exclude': lambda f: f is None }})
    r"""The execution environment being used to host this Task."""  
    max_retries: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxRetries'), 'exclude': lambda f: f is None }})
    r"""Number of retries allowed per Task, before marking this Task failed. Defaults to 3."""  
    service_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceAccount'), 'exclude': lambda f: f is None }})
    r"""Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account."""  
    timeout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeout'), 'exclude': lambda f: f is None }})
    r"""Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout. Defaults to 600 seconds."""  
    volumes: Optional[list[shared_googlecloudrunv2volume.GoogleCloudRunV2Volume]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumes'), 'exclude': lambda f: f is None }})
    r"""A list of Volumes to make available to containers."""  
    vpc_access: Optional[shared_googlecloudrunv2vpcaccess.GoogleCloudRunV2VpcAccess] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vpcAccess'), 'exclude': lambda f: f is None }})
    r"""VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc"""  
    