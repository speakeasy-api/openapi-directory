/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransferCreateRequest - Defines the request schema for `/transfer/create`
 */
public class TransferCreateRequest {
    /**
     * The Plaid `access_token` for the account that will be debited or credited. Required if not using `payment_profile_token`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_token")
    public String accessToken;

    public TransferCreateRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    public String accountId;

    public TransferCreateRequest withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ach_class")
    public TransferCreateRequestACHClassEnum achClass;

    public TransferCreateRequest withAchClass(TransferCreateRequestACHClassEnum achClass) {
        this.achClass = achClass;
        return this;
    }
    
    /**
     * The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public String amount;

    public TransferCreateRequest withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Plaid\u2019s unique identifier for a transfer authorization. This parameter also serves the purpose of acting as an idempotency identifier.
     */
    @JsonProperty("authorization_id")
    public String authorizationId;

    public TransferCreateRequest withAuthorizationId(String authorizationId) {
        this.authorizationId = authorizationId;
        return this;
    }
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public TransferCreateRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The transfer description. Maximum of 10 characters. If reprocessing a returned transfer, please note that the `description` field must be `"Retry"` to indicate that it's a retry of a previously returned transfer. You may retry a transfer up to 2 times, within 180 days of creating the original transfer. Only transfers that were returned with code `R01` or `R09` may be retried. For a full listing of ACH return codes, see [Transfer errors](https://plaid.com/docs/errors/transfer/#ach-return-codes).
     */
    @JsonProperty("description")
    public String description;

    public TransferCreateRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Deprecated. `authorization_id` is now used as idempotency instead.
     * 
     * A random key provided by the client, per unique transfer. Maximum of 50 characters.
     * 
     * The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single transfer is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idempotency_key")
    public String idempotencyKey;

    public TransferCreateRequest withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    /**
     * The currency of the transfer amount. The default value is "USD".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iso_currency_code")
    public String isoCurrencyCode;

    public TransferCreateRequest withIsoCurrencyCode(String isoCurrencyCode) {
        this.isoCurrencyCode = isoCurrencyCode;
        return this;
    }
    
    /**
     * The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
     * The JSON values must be Strings (no nested JSON objects allowed)
     * Only ASCII characters may be used
     * Maximum of 50 key/value pairs
     * Maximum key length of 40 characters
     * Maximum value length of 500 characters
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public TransferCreateRequest withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public TransferCreateRequestTransferNetworkEnum network;

    public TransferCreateRequest withNetwork(TransferCreateRequestTransferNetworkEnum network) {
        this.network = network;
        return this;
    }
    
    /**
     * Plaid\u2019s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified. Otherwise, this field should be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origination_account_id")
    public String originationAccountId;

    public TransferCreateRequest withOriginationAccountId(String originationAccountId) {
        this.originationAccountId = originationAccountId;
        return this;
    }
    
    /**
     * The payment profile token associated with the Payment Profile that will be debited or credited. Required if not using `access_token`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_profile_token")
    public String paymentProfileToken;

    public TransferCreateRequest withPaymentProfileToken(String paymentProfileToken) {
        this.paymentProfileToken = paymentProfileToken;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public TransferCreateRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public TransferCreateRequestTransferTypeEnum type;

    public TransferCreateRequest withType(TransferCreateRequestTransferTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The legal name and other information for the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;

    public TransferCreateRequest withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
    public TransferCreateRequest(@JsonProperty("authorization_id") String authorizationId, @JsonProperty("description") String description) {
        this.authorizationId = authorizationId;
        this.description = description;
  }
}
