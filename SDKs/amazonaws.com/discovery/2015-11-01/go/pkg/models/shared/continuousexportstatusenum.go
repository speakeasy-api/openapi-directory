// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContinuousExportStatusEnum string

const (
	ContinuousExportStatusEnumStartInProgress ContinuousExportStatusEnum = "START_IN_PROGRESS"
	ContinuousExportStatusEnumStartFailed     ContinuousExportStatusEnum = "START_FAILED"
	ContinuousExportStatusEnumActive          ContinuousExportStatusEnum = "ACTIVE"
	ContinuousExportStatusEnumError           ContinuousExportStatusEnum = "ERROR"
	ContinuousExportStatusEnumStopInProgress  ContinuousExportStatusEnum = "STOP_IN_PROGRESS"
	ContinuousExportStatusEnumStopFailed      ContinuousExportStatusEnum = "STOP_FAILED"
	ContinuousExportStatusEnumInactive        ContinuousExportStatusEnum = "INACTIVE"
)

func (e *ContinuousExportStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "START_IN_PROGRESS":
		fallthrough
	case "START_FAILED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ERROR":
		fallthrough
	case "STOP_IN_PROGRESS":
		fallthrough
	case "STOP_FAILED":
		fallthrough
	case "INACTIVE":
		*e = ContinuousExportStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContinuousExportStatusEnum: %s", s)
	}
}
