// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserChannelEnumChannelStatusEnum string

const (
	UserChannelEnumChannelStatusEnumJoined           UserChannelEnumChannelStatusEnum = "joined"
	UserChannelEnumChannelStatusEnumInvited          UserChannelEnumChannelStatusEnum = "invited"
	UserChannelEnumChannelStatusEnumNotParticipating UserChannelEnumChannelStatusEnum = "not_participating"
)

func (e UserChannelEnumChannelStatusEnum) ToPointer() *UserChannelEnumChannelStatusEnum {
	return &e
}

func (e *UserChannelEnumChannelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "joined":
		fallthrough
	case "invited":
		fallthrough
	case "not_participating":
		*e = UserChannelEnumChannelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserChannelEnumChannelStatusEnum: %v", v)
	}
}
