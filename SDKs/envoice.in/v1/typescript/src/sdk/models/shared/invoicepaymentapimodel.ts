/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Type of payment
 */
export enum InvoicePaymentApiModelTypeEnum {
  Other = "Other",
  Paypal = "Paypal",
  Stripe = "Stripe",
  Payoneer = "Payoneer",
  Bank = "Bank",
  Cash = "Cash",
  Cheque = "Cheque",
  Ach = "Ach",
  Sepa = "Sepa",
  Square = "Square",
  KlikAndPay = "KlikAndPay",
  Razorpay = "Razorpay",
  Wepay = "Wepay",
  Halkbank = "Halkbank",
  TwoCheckout = "TwoCheckout",
  PaymentWall = "PaymentWall",
  BamboraEU = "BamboraEU",
  BamboraNA = "BamboraNA",
  Nlb = "Nlb",
  AuthorizeNet = "AuthorizeNet",
  Braintree = "Braintree",
}

export class InvoicePaymentApiModel extends SpeakeasyBase {
  /**
   * Total amount of the payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  /**
   * Id of invoice payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  /**
   * Indicate if the payment is automatic or manual
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAutomatic" })
  isAutomatic?: boolean;

  /**
   * Internal payment note
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Note" })
  note?: string;

  /**
   * When the payment was done by the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaidOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  paidOn?: Date;

  /**
   * Id of the payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReferenceId" })
  referenceId?: string;

  /**
   * Type of payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: InvoicePaymentApiModelTypeEnum;
}
