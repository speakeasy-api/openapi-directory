// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum - Optional. Indicates whether the entity type can be automatically expanded.
type GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum string

const (
	GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnumAutoExpansionModeUnspecified GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum = "AUTO_EXPANSION_MODE_UNSPECIFIED"
	GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnumAutoExpansionModeDefault     GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum = "AUTO_EXPANSION_MODE_DEFAULT"
)

func (e *GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AUTO_EXPANSION_MODE_UNSPECIFIED":
		fallthrough
	case "AUTO_EXPANSION_MODE_DEFAULT":
		*e = GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum: %s", s)
	}
}

// GoogleCloudDialogflowV2beta1EntityTypeKindEnum - Required. Indicates the kind of entity type.
type GoogleCloudDialogflowV2beta1EntityTypeKindEnum string

const (
	GoogleCloudDialogflowV2beta1EntityTypeKindEnumKindUnspecified GoogleCloudDialogflowV2beta1EntityTypeKindEnum = "KIND_UNSPECIFIED"
	GoogleCloudDialogflowV2beta1EntityTypeKindEnumKindMap         GoogleCloudDialogflowV2beta1EntityTypeKindEnum = "KIND_MAP"
	GoogleCloudDialogflowV2beta1EntityTypeKindEnumKindList        GoogleCloudDialogflowV2beta1EntityTypeKindEnum = "KIND_LIST"
	GoogleCloudDialogflowV2beta1EntityTypeKindEnumKindRegexp      GoogleCloudDialogflowV2beta1EntityTypeKindEnum = "KIND_REGEXP"
)

func (e *GoogleCloudDialogflowV2beta1EntityTypeKindEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KIND_UNSPECIFIED":
		fallthrough
	case "KIND_MAP":
		fallthrough
	case "KIND_LIST":
		fallthrough
	case "KIND_REGEXP":
		*e = GoogleCloudDialogflowV2beta1EntityTypeKindEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2beta1EntityTypeKindEnum: %s", s)
	}
}

// GoogleCloudDialogflowV2beta1EntityType - Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
type GoogleCloudDialogflowV2beta1EntityType struct {
	// Optional. Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode *GoogleCloudDialogflowV2beta1EntityTypeAutoExpansionModeEnum `json:"autoExpansionMode,omitempty"`
	// Required. The name of the entity type.
	DisplayName *string `json:"displayName,omitempty"`
	// Optional. Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `json:"enableFuzzyExtraction,omitempty"`
	// Optional. The collection of entity entries associated with the entity type.
	Entities []GoogleCloudDialogflowV2beta1EntityTypeEntity `json:"entities,omitempty"`
	// Required. Indicates the kind of entity type.
	Kind *GoogleCloudDialogflowV2beta1EntityTypeKindEnum `json:"kind,omitempty"`
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
	Name *string `json:"name,omitempty"`
}
