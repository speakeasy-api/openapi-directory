/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TrafficTarget - TrafficTarget holds a single entry of the routing table for a Route.
 */
public class TrafficTarget {
    /**
     * [Deprecated] Not supported in Cloud Run. It must be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configurationName")
    public String configurationName;

    public TrafficTarget withConfigurationName(String configurationName) {
        this.configurationName = configurationName;
        return this;
    }
    
    /**
     * Uses the "status.latestReadyRevisionName" of the Service to determine the traffic target. When it changes, traffic will automatically migrate from the prior "latest ready" revision to the new one. This field must be false if RevisionName is set. This field defaults to true otherwise. If the field is set to true on Status, this means that the Revision was resolved from the Service's latest ready revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestRevision")
    public Boolean latestRevision;

    public TrafficTarget withLatestRevision(Boolean latestRevision) {
        this.latestRevision = latestRevision;
        return this;
    }
    
    /**
     * Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percent")
    public Integer percent;

    public TrafficTarget withPercent(Integer percent) {
        this.percent = percent;
        return this;
    }
    
    /**
     * Points this traffic target to a specific Revision. This field is mutually exclusive with latest_revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionName")
    public String revisionName;

    public TrafficTarget withRevisionName(String revisionName) {
        this.revisionName = revisionName;
        return this;
    }
    
    /**
     * Tag is used to expose a dedicated url for referencing this target exclusively.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag")
    public String tag;

    public TrafficTarget withTag(String tag) {
        this.tag = tag;
        return this;
    }
    
    /**
     * Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. https://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public TrafficTarget withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public TrafficTarget(){}
}
