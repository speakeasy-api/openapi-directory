// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WebDataExemptionReasonEnum - The reason why the web data was not provided. Possible value: **noOnlinePresence**.
type WebDataExemptionReasonEnum string

const (
	WebDataExemptionReasonEnumNoOnlinePresence WebDataExemptionReasonEnum = "noOnlinePresence"
)

func (e *WebDataExemptionReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "noOnlinePresence":
		*e = WebDataExemptionReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebDataExemptionReasonEnum: %s", s)
	}
}

type WebDataExemption struct {
	// The reason why the web data was not provided. Possible value: **noOnlinePresence**.
	Reason *WebDataExemptionReasonEnum `json:"reason,omitempty"`
}
