<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PostCustomObjectDefinitionsRequestDefinitionRelationships
{
    /**
     * The cardinality of the relationship from this object to another object.
     * 
     * 
     * Only the `manyToOne` cardinality can be used when creating relationships.  A relationship with `oneToMany` cardinality is created implicitly when a `manyToOne` relationship is created.
     * 
     * A custom object definition can have a maximum of 2 `manyToOne` relationships.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum $cardinality
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardinality')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum $cardinality = null;
    
    /**
     * Field mappings in the form of `<this-object-field-name>`: `<other-object-field-name>`. Usually the `<other-object-field-name>` can only be the `Id` field of the related object. Two exceptions are Subscription Name and Rate Plan Charge Number as both of them are unique.
     * 
     * 
     * 
     * @var array<string, string> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $fields;
    
    /**
     * The namespace where the related object is located
     * 
     * @var string $namespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('namespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $namespace;
    
    /**
     * The API name of the related object
     * 
     * @var string $object
     */
	#[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $object;
    
    /**
     * Specifies contraints to apply to custom object records.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints $recordConstraints
     */
	#[\JMS\Serializer\Annotation\SerializedName('recordConstraints')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints $recordConstraints = null;
    
	public function __construct()
	{
		$this->cardinality = null;
		$this->fields = [];
		$this->namespace = "";
		$this->object = "";
		$this->recordConstraints = null;
	}
}
