"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DNSRuleGroupPriorityConflictViolation:
    r"""A rule group that Firewall Manager tried to associate with a VPC has the same priority as a rule group that's already associated."""
    
    conflicting_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConflictingPolicyId'), 'exclude': lambda f: f is None }})  
    conflicting_priority: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConflictingPriority'), 'exclude': lambda f: f is None }})  
    unavailable_priorities: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnavailablePriorities'), 'exclude': lambda f: f is None }})  
    violation_target: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ViolationTarget'), 'exclude': lambda f: f is None }})  
    violation_target_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ViolationTargetDescription'), 'exclude': lambda f: f is None }})  
    