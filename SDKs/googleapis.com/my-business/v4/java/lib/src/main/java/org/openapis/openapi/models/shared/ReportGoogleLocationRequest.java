/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportGoogleLocationRequest - Request message for reporting a GoogleLocation.
 */
public class ReportGoogleLocationRequest {
    /**
     * Optional. The resource name of the location group that this Google Location is being reported for, in the format `accounts/{account_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationGroupName")
    public String locationGroupName;

    public ReportGoogleLocationRequest withLocationGroupName(String locationGroupName) {
        this.locationGroupName = locationGroupName;
        return this;
    }
    
    /**
     * The reason for which the user is reporting this location when the issue is with the location itself.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportReasonBadLocation")
    public ReportGoogleLocationRequestReportReasonBadLocationEnum reportReasonBadLocation;

    public ReportGoogleLocationRequest withReportReasonBadLocation(ReportGoogleLocationRequestReportReasonBadLocationEnum reportReasonBadLocation) {
        this.reportReasonBadLocation = reportReasonBadLocation;
        return this;
    }
    
    /**
     * The reason for which the user is reporting this location when the issue is with the recommendation. This report is useful if the location has been recommended to the Business Profile account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportReasonBadRecommendation")
    public ReportGoogleLocationRequestReportReasonBadRecommendationEnum reportReasonBadRecommendation;

    public ReportGoogleLocationRequest withReportReasonBadRecommendation(ReportGoogleLocationRequestReportReasonBadRecommendationEnum reportReasonBadRecommendation) {
        this.reportReasonBadRecommendation = reportReasonBadRecommendation;
        return this;
    }
    
    /**
     * Optional. A text entry for elaborating on the reason for which the user is reporting this location. The maximum length is 512 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportReasonElaboration")
    public String reportReasonElaboration;

    public ReportGoogleLocationRequest withReportReasonElaboration(String reportReasonElaboration) {
        this.reportReasonElaboration = reportReasonElaboration;
        return this;
    }
    
    /**
     * Optional. The BCP 47 code of language used in `report_reason_elaboration`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportReasonLanguageCode")
    public String reportReasonLanguageCode;

    public ReportGoogleLocationRequest withReportReasonLanguageCode(String reportReasonLanguageCode) {
        this.reportReasonLanguageCode = reportReasonLanguageCode;
        return this;
    }
    
    public ReportGoogleLocationRequest(){}
}
