// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// InstallToRemoteAccessSessionXAmzTargetEnum
type InstallToRemoteAccessSessionXAmzTargetEnum string

const (
	InstallToRemoteAccessSessionXAmzTargetEnumDeviceFarm20150623InstallToRemoteAccessSession InstallToRemoteAccessSessionXAmzTargetEnum = "DeviceFarm_20150623.InstallToRemoteAccessSession"
)

func (e InstallToRemoteAccessSessionXAmzTargetEnum) ToPointer() *InstallToRemoteAccessSessionXAmzTargetEnum {
	return &e
}

func (e *InstallToRemoteAccessSessionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.InstallToRemoteAccessSession":
		*e = InstallToRemoteAccessSessionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstallToRemoteAccessSessionXAmzTargetEnum: %v", v)
	}
}

type InstallToRemoteAccessSessionRequest struct {
	InstallToRemoteAccessSessionRequest shared.InstallToRemoteAccessSessionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          InstallToRemoteAccessSessionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type InstallToRemoteAccessSessionResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// Success
	InstallToRemoteAccessSessionResult *shared.InstallToRemoteAccessSessionResult
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceAccountException
	ServiceAccountException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
