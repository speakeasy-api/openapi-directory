<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Projects 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetResponse
     */
	public function resourcesettingsProjectsSettingsGet(
        \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudResourcesettingsV1Setting = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudResourcesettingsV1Setting', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists all the settings that are available on the Cloud resource `parent`.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListResponse
     */
	public function resourcesettingsProjectsSettingsList(
        \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{parent}/settings', \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudResourcesettingsV1ListSettingsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudResourcesettingsV1ListSettingsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchResponse
     */
	public function resourcesettingsProjectsSettingsPatch(
        \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "googleCloudResourcesettingsV1Setting", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ResourcesettingsProjectsSettingsPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudResourcesettingsV1Setting = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudResourcesettingsV1Setting', 'json');
            }
        }

        return $response;
    }
}