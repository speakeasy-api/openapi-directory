// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSiteAddressPathParams struct {
	//  The ID or the Amazon Resource Name (ARN) of the site.
	SiteID string `pathParam:"style=simple,explode=false,name=SiteId"`
}

// GetSiteAddressAddressTypeEnum - The type of the address you request.
type GetSiteAddressAddressTypeEnum string

const (
	GetSiteAddressAddressTypeEnumShippingAddress  GetSiteAddressAddressTypeEnum = "SHIPPING_ADDRESS"
	GetSiteAddressAddressTypeEnumOperatingAddress GetSiteAddressAddressTypeEnum = "OPERATING_ADDRESS"
)

func (e *GetSiteAddressAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SHIPPING_ADDRESS":
		fallthrough
	case "OPERATING_ADDRESS":
		*e = GetSiteAddressAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSiteAddressAddressTypeEnum: %s", s)
	}
}

type GetSiteAddressQueryParams struct {
	// The type of the address you request.
	AddressType GetSiteAddressAddressTypeEnum `queryParam:"style=form,explode=true,name=AddressType"`
}

type GetSiteAddressHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetSiteAddressRequest struct {
	PathParams  GetSiteAddressPathParams
	QueryParams GetSiteAddressQueryParams
	Headers     GetSiteAddressHeaders
}

type GetSiteAddressResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetSiteAddressOutput *shared.GetSiteAddressOutput
	// InternalServerException
	InternalServerException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ValidationException
	ValidationException interface{}
}
