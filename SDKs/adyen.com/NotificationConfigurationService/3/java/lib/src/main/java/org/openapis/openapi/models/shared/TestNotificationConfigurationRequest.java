/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TestNotificationConfigurationRequest {
    /**
     * The event types to test.  If left blank, then all of the configured event types will be tested.
     * &gt;Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypes")
    public TestNotificationConfigurationRequestEventTypesEnum[] eventTypes;

    public TestNotificationConfigurationRequest withEventTypes(TestNotificationConfigurationRequestEventTypesEnum[] eventTypes) {
        this.eventTypes = eventTypes;
        return this;
    }
    
    /**
     * The ID of the notification subscription configuration to be tested.
     */
    @JsonProperty("notificationId")
    public Long notificationId;

    public TestNotificationConfigurationRequest withNotificationId(Long notificationId) {
        this.notificationId = notificationId;
        return this;
    }
    
    public TestNotificationConfigurationRequest(@JsonProperty("notificationId") Long notificationId) {
        this.notificationId = notificationId;
  }
}
