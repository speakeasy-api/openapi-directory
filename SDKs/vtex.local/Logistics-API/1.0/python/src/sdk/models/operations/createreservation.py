"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservationCreateReservationRequestDeliveryItemOptionItemDimension:
    
    height: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height') }})  
    length: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('length') }})  
    weight: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight') }})  
    width: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservationCreateReservationRequestDeliveryItemOptionItem:
    
    additional_handling_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalHandlingTime') }})  
    dimension: CreateReservationCreateReservationRequestDeliveryItemOptionItemDimension = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension') }})  
    group_item_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupItemId') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    kit_item: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kitItem') }})  
    price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})  
    quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservationCreateReservationRequestDeliveryItemOptionLocationInStore:
    
    is_checked_in: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsCheckedIn') }})  
    store_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreId') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservationCreateReservationRequestDeliveryItemOptionLocation:
    
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    in_store: CreateReservationCreateReservationRequestDeliveryItemOptionLocationInStore = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inStore') }})  
    zip_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipCode') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservationCreateReservationRequestDeliveryItemOption:
    
    aditional_time_blocked_days: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aditionalTimeBlockedDays') }})  
    delivery_windows: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryWindows') }})  
    dock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockId') }})  
    dock_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockTime') }})  
    item: CreateReservationCreateReservationRequestDeliveryItemOptionItem = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item') }})  
    list_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice') }})  
    location: CreateReservationCreateReservationRequestDeliveryItemOptionLocation = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})  
    promotional_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promotionalPrice') }})  
    sla_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slaType') }})  
    sla_type_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slaTypeName') }})  
    time_to_dock_plus_dock_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeToDockPlusDockTime') }})  
    total_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalTime') }})  
    transit_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitTime') }})  
    ware_house_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wareHouseId') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservationCreateReservationRequest:
    
    autorization_expiration_ttl: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autorizationExpirationTTL') }})  
    delivery_item_options: list[CreateReservationCreateReservationRequestDeliveryItemOption] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryItemOptions') }})  
    lock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lockId') }})  
    sales_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannel') }})  
    

@dataclasses.dataclass
class CreateReservationRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    request_body: CreateReservationCreateReservationRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservation200ApplicationJSONSLARequestItem1Dimension1:
    
    height: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height') }})  
    length: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('length') }})  
    max_sum_dimension: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSumDimension') }})  
    weight: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight') }})  
    width: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservation200ApplicationJSONSLARequestItem1:
    
    additional_handling_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalHandlingTime') }})  
    dimension: CreateReservation200ApplicationJSONSLARequestItem1Dimension1 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension') }})  
    group_item_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupItemId') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    kit_item: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kitItem') }})  
    modal: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modal') }})  
    price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})  
    quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})  
    unlimited_quantity: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unlimitedQuantity') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservation200ApplicationJSONSLARequestLocation1InStore1:
    
    is_checked_in: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsCheckedIn') }})  
    store_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreId') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservation200ApplicationJSONSLARequestLocation1:
    
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    delivery_point_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryPointId') }})  
    in_store: CreateReservation200ApplicationJSONSLARequestLocation1InStore1 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inStore') }})  
    point: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('point') }})  
    zip_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipCode') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservation200ApplicationJSONSLARequest:
    
    delivery_windows: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryWindows') }})  
    dock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockId') }})  
    dock_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockTime') }})  
    freight_table_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freightTableId') }})  
    freight_table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freightTableName') }})  
    item: CreateReservation200ApplicationJSONSLARequestItem1 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item') }})  
    list_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice') }})  
    location: CreateReservation200ApplicationJSONSLARequestLocation1 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})  
    pickup_store_info: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupStoreInfo') }})  
    promotional_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promotionalPrice') }})  
    sla_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slaType') }})  
    sla_type_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slaTypeName') }})  
    time_to_dock_plus_dock_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeToDockPlusDockTime') }})  
    total_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalTime') }})  
    transit_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitTime') }})  
    ware_house_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wareHouseId') }})  
    wms_end_point: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wmsEndPoint') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateReservation200ApplicationJSON:
    r"""OK"""
    
    authorized_date_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthorizedDateUtc') }})  
    canceled_date_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CanceledDateUtc') }})  
    confirmed_date_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfirmedDateUtc') }})  
    errors: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Errors') }})  
    is_sucess: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsSucess') }})  
    last_update_date_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastUpdateDateUtc') }})  
    lock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LockId') }})  
    maximum_confirmation_date_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumConfirmationDateUtc') }})  
    pickup_point_item_options: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PickupPointItemOptions') }})  
    reservation_date_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReservationDateUtc') }})  
    sales_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SalesChannel') }})  
    sla_request: list[CreateReservation200ApplicationJSONSLARequest] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SlaRequest') }})  
    status: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})  
    

@dataclasses.dataclass
class CreateReservationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_reservation_200_application_json_object: Optional[CreateReservation200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    