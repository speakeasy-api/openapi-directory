// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetDatalakeStatusQueryParams struct {
	// Pagination limit
	MaxAccountResults *string `queryParam:"style=form,explode=true,name=maxAccountResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetDatalakeStatusHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetDatalakeStatusRequestBody struct {
	// The Amazon Web Services account ID for which a static snapshot of the current Amazon Web Services Region, including enabled accounts and log sources, is retrieved.
	AccountSet []string `json:"accountSet,omitempty"`
	// The maximum limit of accounts for which the static snapshot of the current Region, including enabled accounts and log sources, is retrieved.
	MaxAccountResults *int64 `json:"maxAccountResults,omitempty"`
	// <p>Lists if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged. </p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
	NextToken *string `json:"nextToken,omitempty"`
}

type GetDatalakeStatusRequest struct {
	QueryParams GetDatalakeStatusQueryParams
	Headers     GetDatalakeStatusHeaders
	Request     GetDatalakeStatusRequestBody `request:"mediaType=application/json"`
}

type GetDatalakeStatusResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountNotFoundException
	AccountNotFoundException interface{}
	ContentType              string
	// Success
	GetDatalakeStatusResponse *shared.GetDatalakeStatusResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ValidationException
	ValidationException interface{}
}
