/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateApplicationRequestBodyKeys extends SpeakeasyBase {
  /**
   * Public key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_key" })
  publicKey?: string;
}

/**
 * Application privacy config
 */
export class UpdateApplicationRequestBodyPrivacy extends SpeakeasyBase {
  /**
   * If set to `true`, Vonage may store and use your content and data for the improvement of Vonage's AI based services and technologies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "improve_ai" })
  improveAi?: boolean;
}

export class UpdateApplicationRequestBody extends SpeakeasyBase {
  /**
   * Your application can use multiple products. This contains the configuration for each product. This replaces the application `type` from version 1 of the Application API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capabilities" })
  @Type(() => shared.Capabilities)
  capabilities?: shared.Capabilities;

  @SpeakeasyMetadata()
  @Expose({ name: "keys" })
  @Type(() => UpdateApplicationRequestBodyKeys)
  keys?: UpdateApplicationRequestBodyKeys;

  /**
   * Application Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Application privacy config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  @Type(() => UpdateApplicationRequestBodyPrivacy)
  privacy?: UpdateApplicationRequestBodyPrivacy;
}

export class UpdateApplicationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateApplicationRequestBody;

  /**
   * The ID of the application
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * Unsupported Content Type Header
 */
export class UpdateApplication415ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Instance ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Invalid Accept Header
 */
export class UpdateApplication406ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Instance ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Invalid Request Method
 */
export class UpdateApplication405ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Instance ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Resource Not Found
 */
export class UpdateApplication404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Instance ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Credential is missing or invalid
 */
export class UpdateApplication401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Instance ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class UpdateApplication400ApplicationJSONInvalidParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

/**
 * Invalid Request
 */
export class UpdateApplication400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Instance ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  @SpeakeasyMetadata({
    elemType: UpdateApplication400ApplicationJSONInvalidParameters,
  })
  @Expose({ name: "invalid_parameters" })
  @Type(() => UpdateApplication400ApplicationJSONInvalidParameters)
  invalidParameters?: UpdateApplication400ApplicationJSONInvalidParameters[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class UpdateApplication200ApplicationJSONKeys extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "private_key" })
  privateKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "public_key" })
  publicKey?: string;
}

/**
 * Application privacy config
 */
export class UpdateApplication200ApplicationJSONPrivacy extends SpeakeasyBase {
  /**
   * If set to `true`, Vonage may store and use your content and data for the improvement of Vonage's AI based services and technologies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "improve_ai" })
  improveAi?: boolean;
}

/**
 * Success
 */
export class UpdateApplication200ApplicationJSON extends SpeakeasyBase {
  /**
   * Your application can use multiple products. This contains the configuration for each product. This replaces the application `type` from version 1 of the Application API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capabilities" })
  @Type(() => shared.Capabilities)
  capabilities?: shared.Capabilities;

  /**
   * The application's ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keys" })
  @Type(() => UpdateApplication200ApplicationJSONKeys)
  keys?: UpdateApplication200ApplicationJSONKeys;

  /**
   * Friendly identifier for your application. This is not unique
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Application privacy config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  @Type(() => UpdateApplication200ApplicationJSONPrivacy)
  privacy?: UpdateApplication200ApplicationJSONPrivacy;
}

export class UpdateApplicationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateApplication200ApplicationJSONObject?: UpdateApplication200ApplicationJSON;

  /**
   * Invalid Request
   */
  @SpeakeasyMetadata()
  updateApplication400ApplicationJSONObject?: UpdateApplication400ApplicationJSON;

  /**
   * Credential is missing or invalid
   */
  @SpeakeasyMetadata()
  updateApplication401ApplicationJSONObject?: UpdateApplication401ApplicationJSON;

  /**
   * Resource Not Found
   */
  @SpeakeasyMetadata()
  updateApplication404ApplicationJSONObject?: UpdateApplication404ApplicationJSON;

  /**
   * Invalid Request Method
   */
  @SpeakeasyMetadata()
  updateApplication405ApplicationJSONObject?: UpdateApplication405ApplicationJSON;

  /**
   * Invalid Accept Header
   */
  @SpeakeasyMetadata()
  updateApplication406ApplicationJSONObject?: UpdateApplication406ApplicationJSON;

  /**
   * Unsupported Content Type Header
   */
  @SpeakeasyMetadata()
  updateApplication415ApplicationJSONObject?: UpdateApplication415ApplicationJSON;
}
