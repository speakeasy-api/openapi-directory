<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Spoke - A Spoke is an abstraction of a network attachment being attached to a Hub. A Spoke can be underlying a VPN tunnel, a VLAN (interconnect) attachment, a Router appliance, etc.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Spoke
{
    /**
     * The time when the Spoke was created.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Short description of the spoke resource
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The resource URL of the hub resource that the spoke is attached to
     * 
     * @var ?string $hub
     */
	#[\JMS\Serializer\Annotation\SerializedName('hub')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hub = null;
    
    /**
     * User-defined labels.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * The URIs of linked interconnect attachment resources
     * 
     * @var ?array<string> $linkedInterconnectAttachments
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedInterconnectAttachments')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $linkedInterconnectAttachments = null;
    
    /**
     * The URIs of linked Router appliance resources
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RouterApplianceInstance> $linkedRouterApplianceInstances
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedRouterApplianceInstances')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RouterApplianceInstance>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $linkedRouterApplianceInstances = null;
    
    /**
     * The URIs of linked VPN tunnel resources
     * 
     * @var ?array<string> $linkedVpnTunnels
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedVpnTunnels')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $linkedVpnTunnels = null;
    
    /**
     * Immutable. The name of a Spoke resource.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. The current lifecycle state of this Hub.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SpokeStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SpokeStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SpokeStateEnum $state = null;
    
    /**
     * Output only. Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
     * @var ?string $uniqueId
     */
	#[\JMS\Serializer\Annotation\SerializedName('uniqueId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uniqueId = null;
    
    /**
     * The time when the Spoke was updated.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
	public function __construct()
	{
		$this->createTime = null;
		$this->description = null;
		$this->hub = null;
		$this->labels = null;
		$this->linkedInterconnectAttachments = null;
		$this->linkedRouterApplianceInstances = null;
		$this->linkedVpnTunnels = null;
		$this->name = null;
		$this->state = null;
		$this->uniqueId = null;
		$this->updateTime = null;
	}
}
