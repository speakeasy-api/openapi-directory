/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImpersonationRoleTypeEnum } from "./impersonationroletypeenum";
import { ImpersonationRule } from "./impersonationrule";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetImpersonationRoleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DateCreated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DateModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateModified?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImpersonationRoleId" })
  impersonationRoleId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: ImpersonationRule })
  @Expose({ name: "Rules" })
  @Type(() => ImpersonationRule)
  rules?: ImpersonationRule[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: ImpersonationRoleTypeEnum;
}
