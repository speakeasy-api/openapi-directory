/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class SearchResultTextMatchesMatches extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "indices" })
  indices?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;
}

export class SearchResultTextMatches extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fragment" })
  fragment?: string;

  @SpeakeasyMetadata({ elemType: SearchResultTextMatchesMatches })
  @Expose({ name: "matches" })
  @Type(() => SearchResultTextMatchesMatches)
  matches?: SearchResultTextMatchesMatches[];

  @SpeakeasyMetadata()
  @Expose({ name: "object_type" })
  objectType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "object_url" })
  objectUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "property" })
  property?: string;
}
