/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SourcePosition } from "./sourceposition";
import { Expose, Type } from "class-transformer";

/**
 * Store the position and access outcome for an expression visited in rules.
 */
export class VisitedExpression extends SpeakeasyBase {
  /**
   * Position in the `Source` content including its line, column number, and an index of the `File` in the `Source` message. Used for debug purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourcePosition" })
  @Type(() => SourcePosition)
  sourcePosition?: SourcePosition;

  /**
   * The evaluated value for the visited expression, e.g. true/false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: any;
}
