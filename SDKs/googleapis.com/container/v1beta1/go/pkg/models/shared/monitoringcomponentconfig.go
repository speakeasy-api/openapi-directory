// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MonitoringComponentConfigEnableComponentsEnum string

const (
	MonitoringComponentConfigEnableComponentsEnumComponentUnspecified MonitoringComponentConfigEnableComponentsEnum = "COMPONENT_UNSPECIFIED"
	MonitoringComponentConfigEnableComponentsEnumSystemComponents     MonitoringComponentConfigEnableComponentsEnum = "SYSTEM_COMPONENTS"
	MonitoringComponentConfigEnableComponentsEnumWorkloads            MonitoringComponentConfigEnableComponentsEnum = "WORKLOADS"
	MonitoringComponentConfigEnableComponentsEnumApiserver            MonitoringComponentConfigEnableComponentsEnum = "APISERVER"
	MonitoringComponentConfigEnableComponentsEnumScheduler            MonitoringComponentConfigEnableComponentsEnum = "SCHEDULER"
	MonitoringComponentConfigEnableComponentsEnumControllerManager    MonitoringComponentConfigEnableComponentsEnum = "CONTROLLER_MANAGER"
)

func (e *MonitoringComponentConfigEnableComponentsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPONENT_UNSPECIFIED":
		fallthrough
	case "SYSTEM_COMPONENTS":
		fallthrough
	case "WORKLOADS":
		fallthrough
	case "APISERVER":
		fallthrough
	case "SCHEDULER":
		fallthrough
	case "CONTROLLER_MANAGER":
		*e = MonitoringComponentConfigEnableComponentsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitoringComponentConfigEnableComponentsEnum: %s", s)
	}
}

// MonitoringComponentConfig - MonitoringComponentConfig is cluster monitoring component configuration.
type MonitoringComponentConfig struct {
	// Select components to collect metrics. An empty set would disable all monitoring.
	EnableComponents []MonitoringComponentConfigEnableComponentsEnum `json:"enableComponents,omitempty"`
}
