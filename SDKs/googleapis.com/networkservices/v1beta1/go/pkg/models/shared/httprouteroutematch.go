// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// HTTPRouteRouteMatch - RouteMatch defines specifications used to match requests. If multiple match types are set, this RouteMatch will match if ALL type of matches are matched.
type HTTPRouteRouteMatch struct {
	// The HTTP request path value should exactly match this value. Only one of full_path_match, prefix_match, or regex_match should be used.
	FullPathMatch *string `json:"fullPathMatch,omitempty"`
	// Specifies a list of HTTP request headers to match against. ALL of the supplied headers must be matched.
	Headers []HTTPRouteHeaderMatch `json:"headers,omitempty"`
	// Specifies if prefix_match and full_path_match matches are case sensitive. The default value is false.
	IgnoreCase *bool `json:"ignoreCase,omitempty"`
	// The HTTP request path value must begin with specified prefix_match. prefix_match must begin with a /. Only one of full_path_match, prefix_match, or regex_match should be used.
	PrefixMatch *string `json:"prefixMatch,omitempty"`
	// Specifies a list of query parameters to match against. ALL of the query parameters must be matched.
	QueryParameters []HTTPRouteQueryParameterMatch `json:"queryParameters,omitempty"`
	// The HTTP request path value must satisfy the regular expression specified by regex_match after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of full_path_match, prefix_match, or regex_match should be used.
	RegexMatch *string `json:"regexMatch,omitempty"`
}
