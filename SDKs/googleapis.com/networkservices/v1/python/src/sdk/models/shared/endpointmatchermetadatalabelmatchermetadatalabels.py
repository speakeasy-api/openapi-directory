"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndpointMatcherMetadataLabelMatcherMetadataLabels:
    r"""Defines a name-pair value for a single label."""
    
    label_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelName'), 'exclude': lambda f: f is None }})
    r"""Required. Label name presented as key in xDS Node Metadata."""  
    label_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelValue'), 'exclude': lambda f: f is None }})
    r"""Required. Label value presented as value corresponding to the above key, in xDS Node Metadata."""  
    