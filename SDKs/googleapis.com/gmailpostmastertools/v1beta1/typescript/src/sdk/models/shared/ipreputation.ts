/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The reputation category this IP reputation represents.
 */
export enum IpReputationReputationEnum {
  ReputationCategoryUnspecified = "REPUTATION_CATEGORY_UNSPECIFIED",
  High = "HIGH",
  Medium = "MEDIUM",
  Low = "LOW",
  Bad = "BAD",
}

/**
 * IP Reputation information for a set of IPs in a specific reputation category.
 */
export class IpReputation extends SpeakeasyBase {
  /**
   * Total number of unique IPs in this reputation category. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipCount" })
  ipCount?: string;

  /**
   * Total number of unique IPs in this reputation category. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/). Deprecated to be complied with ApiLinter for Quantities. Use ip_count instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numIps" })
  numIps?: string;

  /**
   * The reputation category this IP reputation represents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reputation" })
  reputation?: IpReputationReputationEnum;

  /**
   * A sample of IPs in this reputation category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sampleIps" })
  sampleIps?: string[];
}
