// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateAccountHolderResponseLegalEntityEnum - The legal entity of the account holder.
type UpdateAccountHolderResponseLegalEntityEnum string

const (
	UpdateAccountHolderResponseLegalEntityEnumBusiness      UpdateAccountHolderResponseLegalEntityEnum = "Business"
	UpdateAccountHolderResponseLegalEntityEnumIndividual    UpdateAccountHolderResponseLegalEntityEnum = "Individual"
	UpdateAccountHolderResponseLegalEntityEnumNonProfit     UpdateAccountHolderResponseLegalEntityEnum = "NonProfit"
	UpdateAccountHolderResponseLegalEntityEnumPartnership   UpdateAccountHolderResponseLegalEntityEnum = "Partnership"
	UpdateAccountHolderResponseLegalEntityEnumPublicCompany UpdateAccountHolderResponseLegalEntityEnum = "PublicCompany"
)

func (e *UpdateAccountHolderResponseLegalEntityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Business":
		fallthrough
	case "Individual":
		fallthrough
	case "NonProfit":
		fallthrough
	case "Partnership":
		fallthrough
	case "PublicCompany":
		*e = UpdateAccountHolderResponseLegalEntityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountHolderResponseLegalEntityEnum: %s", s)
	}
}

// UpdateAccountHolderResponse - OK - the request has succeeded.
type UpdateAccountHolderResponse struct {
	// The code of the account holder.
	AccountHolderCode    *string               `json:"accountHolderCode,omitempty"`
	AccountHolderDetails *AccountHolderDetails `json:"accountHolderDetails,omitempty"`
	AccountHolderStatus  *AccountHolderStatus  `json:"accountHolderStatus,omitempty"`
	// The description of the account holder.
	Description *string `json:"description,omitempty"`
	// in case the account holder has not been updated, contains account holder fields, that did not pass the validation.
	InvalidFields []ErrorFieldType `json:"invalidFields,omitempty"`
	// The legal entity of the account holder.
	LegalEntity *UpdateAccountHolderResponseLegalEntityEnum `json:"legalEntity,omitempty"`
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.
	PrimaryCurrency *string `json:"primaryCurrency,omitempty"`
	// The reference of a request. Can be used to uniquely identify the request.
	PspReference *string `json:"pspReference,omitempty"`
	// The result code.
	ResultCode   *string                `json:"resultCode,omitempty"`
	Verification *KYCVerificationResult `json:"verification,omitempty"`
	// The identifier of the profile that applies to this entity.
	VerificationProfile *string `json:"verificationProfile,omitempty"`
}
