"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NetworkPolicyProviderEnum(str, Enum):
    r"""The selected network policy provider."""
    PROVIDER_UNSPECIFIED = 'PROVIDER_UNSPECIFIED'
    CALICO = 'CALICO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkPolicy:
    r"""Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/"""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Whether network policy is enabled on the cluster."""  
    provider: Optional[NetworkPolicyProviderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider'), 'exclude': lambda f: f is None }})
    r"""The selected network policy provider."""  
    