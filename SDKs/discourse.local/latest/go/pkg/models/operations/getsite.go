// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetSite200ApplicationJSONArchetypes struct {
	ID      string        `json:"id"`
	Name    string        `json:"name"`
	Options []interface{} `json:"options"`
}

type GetSite200ApplicationJSONCategoriesRequiredTagGroups struct {
	MinCount int64  `json:"min_count"`
	Name     string `json:"name"`
}

type GetSite200ApplicationJSONCategories struct {
	AllowGlobalTags              bool                                                   `json:"allow_global_tags"`
	AllowedTagGroups             []interface{}                                          `json:"allowed_tag_groups"`
	AllowedTags                  []interface{}                                          `json:"allowed_tags"`
	CanEdit                      bool                                                   `json:"can_edit"`
	Color                        string                                                 `json:"color"`
	CustomFields                 map[string]interface{}                                 `json:"custom_fields,omitempty"`
	DefaultListFilter            string                                                 `json:"default_list_filter"`
	DefaultTopPeriod             string                                                 `json:"default_top_period"`
	DefaultView                  string                                                 `json:"default_view"`
	Description                  *string                                                `json:"description,omitempty"`
	DescriptionExcerpt           *string                                                `json:"description_excerpt,omitempty"`
	DescriptionText              *string                                                `json:"description_text,omitempty"`
	FormTemplateIds              []interface{}                                          `json:"form_template_ids,omitempty"`
	HasChildren                  bool                                                   `json:"has_children"`
	ID                           int64                                                  `json:"id"`
	MinimumRequiredTags          int64                                                  `json:"minimum_required_tags"`
	Name                         string                                                 `json:"name"`
	NavigateToFirstPostAfterRead bool                                                   `json:"navigate_to_first_post_after_read"`
	NotificationLevel            int64                                                  `json:"notification_level"`
	NumFeaturedTopics            int64                                                  `json:"num_featured_topics"`
	ParentCategoryID             *int64                                                 `json:"parent_category_id,omitempty"`
	Permission                   int64                                                  `json:"permission"`
	Position                     int64                                                  `json:"position"`
	PostCount                    int64                                                  `json:"post_count"`
	ReadOnlyBanner               string                                                 `json:"read_only_banner"`
	ReadRestricted               bool                                                   `json:"read_restricted"`
	RequiredTagGroups            []GetSite200ApplicationJSONCategoriesRequiredTagGroups `json:"required_tag_groups"`
	ShowSubcategoryList          bool                                                   `json:"show_subcategory_list"`
	Slug                         string                                                 `json:"slug"`
	SortAscending                string                                                 `json:"sort_ascending"`
	SortOrder                    string                                                 `json:"sort_order"`
	SubcategoryListStyle         string                                                 `json:"subcategory_list_style"`
	TextColor                    string                                                 `json:"text_color"`
	TopicCount                   int64                                                  `json:"topic_count"`
	TopicTemplate                string                                                 `json:"topic_template"`
	TopicURL                     string                                                 `json:"topic_url"`
	UploadedBackground           string                                                 `json:"uploaded_background"`
	UploadedLogo                 string                                                 `json:"uploaded_logo"`
	UploadedLogoDark             string                                                 `json:"uploaded_logo_dark"`
}

type GetSite200ApplicationJSONGroups struct {
	FlairBgColor string `json:"flair_bg_color"`
	FlairColor   string `json:"flair_color"`
	FlairURL     string `json:"flair_url"`
	ID           int64  `json:"id"`
	Name         string `json:"name"`
}

type GetSite200ApplicationJSONNotificationTypes struct {
	Assigned                      *int64 `json:"assigned,omitempty"`
	BookmarkReminder              int64  `json:"bookmark_reminder"`
	ChatGroupMention              int64  `json:"chat_group_mention"`
	ChatInvitation                int64  `json:"chat_invitation"`
	ChatMention                   int64  `json:"chat_mention"`
	ChatMessage                   int64  `json:"chat_message"`
	ChatQuoted                    *int64 `json:"chat_quoted,omitempty"`
	CirclesActivity               *int64 `json:"circles_activity,omitempty"`
	CodeReviewCommitApproved      int64  `json:"code_review_commit_approved"`
	Custom                        int64  `json:"custom"`
	Edited                        int64  `json:"edited"`
	EventInvitation               int64  `json:"event_invitation"`
	EventReminder                 int64  `json:"event_reminder"`
	Following                     *int64 `json:"following,omitempty"`
	FollowingCreatedTopic         *int64 `json:"following_created_topic,omitempty"`
	FollowingReplied              *int64 `json:"following_replied,omitempty"`
	GrantedBadge                  int64  `json:"granted_badge"`
	GroupMentioned                int64  `json:"group_mentioned"`
	GroupMessageSummary           int64  `json:"group_message_summary"`
	InvitedToPrivateMessage       int64  `json:"invited_to_private_message"`
	InvitedToTopic                int64  `json:"invited_to_topic"`
	InviteeAccepted               int64  `json:"invitee_accepted"`
	Liked                         int64  `json:"liked"`
	LikedConsolidated             int64  `json:"liked_consolidated"`
	Linked                        int64  `json:"linked"`
	MembershipRequestAccepted     int64  `json:"membership_request_accepted"`
	MembershipRequestConsolidated int64  `json:"membership_request_consolidated"`
	Mentioned                     int64  `json:"mentioned"`
	MovedPost                     int64  `json:"moved_post"`
	NewFeatures                   *int64 `json:"new_features,omitempty"`
	PostApproved                  int64  `json:"post_approved"`
	Posted                        int64  `json:"posted"`
	PrivateMessage                int64  `json:"private_message"`
	QuestionAnswerUserCommented   *int64 `json:"question_answer_user_commented,omitempty"`
	Quoted                        int64  `json:"quoted"`
	Reaction                      int64  `json:"reaction"`
	Replied                       int64  `json:"replied"`
	TopicReminder                 int64  `json:"topic_reminder"`
	VotesReleased                 int64  `json:"votes_released"`
	WatchingCategoryOrTag         int64  `json:"watching_category_or_tag"`
	WatchingFirstPost             int64  `json:"watching_first_post"`
}

type GetSite200ApplicationJSONPostActionTypes struct {
	Description      string `json:"description"`
	ID               int64  `json:"id"`
	IsCustomFlag     bool   `json:"is_custom_flag"`
	IsFlag           bool   `json:"is_flag"`
	Name             string `json:"name"`
	NameKey          string `json:"name_key"`
	ShortDescription string `json:"short_description"`
}

type GetSite200ApplicationJSONPostTypes struct {
	ModeratorAction int64 `json:"moderator_action"`
	Regular         int64 `json:"regular"`
	SmallAction     int64 `json:"small_action"`
	Whisper         int64 `json:"whisper"`
}

type GetSite200ApplicationJSONTopicFlagTypes struct {
	Description      string `json:"description"`
	ID               int64  `json:"id"`
	IsCustomFlag     bool   `json:"is_custom_flag"`
	IsFlag           bool   `json:"is_flag"`
	Name             string `json:"name"`
	NameKey          string `json:"name_key"`
	ShortDescription string `json:"short_description"`
}

type GetSite200ApplicationJSONTrustLevels struct {
	Basic   int64 `json:"basic"`
	Leader  int64 `json:"leader"`
	Member  int64 `json:"member"`
	Newuser int64 `json:"newuser"`
	Regular int64 `json:"regular"`
}

type GetSite200ApplicationJSONUserColorSchemes struct {
	ID     int64  `json:"id"`
	IsDark bool   `json:"is_dark"`
	Name   string `json:"name"`
}

type GetSite200ApplicationJSONUserThemes struct {
	ColorSchemeID int64  `json:"color_scheme_id"`
	Default       bool   `json:"default"`
	Name          string `json:"name"`
	ThemeID       int64  `json:"theme_id"`
}

// GetSite200ApplicationJSON - success response
type GetSite200ApplicationJSON struct {
	AnonymousTopMenuItems               []interface{}                               `json:"anonymous_top_menu_items"`
	Archetypes                          []GetSite200ApplicationJSONArchetypes       `json:"archetypes"`
	AuthProviders                       []interface{}                               `json:"auth_providers"`
	CanAssociateGroups                  *bool                                       `json:"can_associate_groups,omitempty"`
	CanCreateTag                        bool                                        `json:"can_create_tag"`
	CanTagPms                           bool                                        `json:"can_tag_pms"`
	CanTagTopics                        bool                                        `json:"can_tag_topics"`
	Categories                          []GetSite200ApplicationJSONCategories       `json:"categories"`
	CensoredRegexp                      []map[string]interface{}                    `json:"censored_regexp"`
	CustomEmojiTranslation              map[string]interface{}                      `json:"custom_emoji_translation"`
	DefaultArchetype                    string                                      `json:"default_archetype"`
	DefaultDarkColorScheme              map[string]interface{}                      `json:"default_dark_color_scheme"`
	DeniedEmojis                        []interface{}                               `json:"denied_emojis,omitempty"`
	DisplayedAboutPluginStatGroups      []interface{}                               `json:"displayed_about_plugin_stat_groups,omitempty"`
	Filters                             []interface{}                               `json:"filters"`
	Groups                              []GetSite200ApplicationJSONGroups           `json:"groups"`
	HashtagConfigurations               map[string]interface{}                      `json:"hashtag_configurations,omitempty"`
	HashtagIcons                        []interface{}                               `json:"hashtag_icons,omitempty"`
	MarkdownAdditionalOptions           map[string]interface{}                      `json:"markdown_additional_options,omitempty"`
	NotificationTypes                   GetSite200ApplicationJSONNotificationTypes  `json:"notification_types"`
	Periods                             []interface{}                               `json:"periods"`
	PostActionTypes                     []GetSite200ApplicationJSONPostActionTypes  `json:"post_action_types"`
	PostTypes                           GetSite200ApplicationJSONPostTypes          `json:"post_types"`
	ShowWelcomeTopicBanner              *bool                                       `json:"show_welcome_topic_banner,omitempty"`
	TagsFilterRegexp                    string                                      `json:"tags_filter_regexp"`
	TopMenuItems                        []interface{}                               `json:"top_menu_items"`
	TopTags                             []interface{}                               `json:"top_tags"`
	TopicFeaturedLinkAllowedCategoryIds []interface{}                               `json:"topic_featured_link_allowed_category_ids"`
	TopicFlagTypes                      []GetSite200ApplicationJSONTopicFlagTypes   `json:"topic_flag_types"`
	TrustLevels                         GetSite200ApplicationJSONTrustLevels        `json:"trust_levels"`
	UncategorizedCategoryID             int64                                       `json:"uncategorized_category_id"`
	UserColorSchemes                    []GetSite200ApplicationJSONUserColorSchemes `json:"user_color_schemes"`
	UserFieldMaxLength                  int64                                       `json:"user_field_max_length"`
	UserFields                          []interface{}                               `json:"user_fields"`
	UserThemes                          []GetSite200ApplicationJSONUserThemes       `json:"user_themes"`
	WatchedWordsLink                    string                                      `json:"watched_words_link"`
	WatchedWordsReplace                 string                                      `json:"watched_words_replace"`
	WhispersAllowedGroupsNames          []interface{}                               `json:"whispers_allowed_groups_names,omitempty"`
	WizardRequired                      *bool                                       `json:"wizard_required,omitempty"`
}

type GetSiteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	GetSite200ApplicationJSONObject *GetSite200ApplicationJSON
}
