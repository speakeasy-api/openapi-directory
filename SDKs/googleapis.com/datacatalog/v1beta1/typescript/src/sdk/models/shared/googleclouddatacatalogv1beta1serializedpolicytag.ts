/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Message representing one policy tag when exported as a nested proto.
 */
export class GoogleCloudDatacatalogV1beta1SerializedPolicyTag extends SpeakeasyBase {
  /**
   * Children of the policy tag if any.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDatacatalogV1beta1SerializedPolicyTag,
  })
  @Expose({ name: "childPolicyTags" })
  @Type(() => GoogleCloudDatacatalogV1beta1SerializedPolicyTag)
  childPolicyTags?: GoogleCloudDatacatalogV1beta1SerializedPolicyTag[];

  /**
   * Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Resource name of the policy tag. This field will be ignored when calling ImportTaxonomies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policyTag" })
  policyTag?: string;
}
