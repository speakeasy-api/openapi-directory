/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum FourHundredAndOneUNAUTHORIZEDCodeEnum {
  Unauthorized = "UNAUTHORIZED",
}

export enum FourHundredAndOneUNAUTHORIZEDMessageEnum {
  InvalidAPIKey = "Invalid API key",
}

/**
 * Unauthorized
 */
export class FourHundredAndOneUNAUTHORIZED extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: FourHundredAndOneUNAUTHORIZEDCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: FourHundredAndOneUNAUTHORIZEDMessageEnum;

  /**
   * Timestamp of the request
   *
   * @remarks
   *
   *   * e.g.: `2019-09-17T03:20:45.737043Z`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * Tracking identifier for this error response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingId" })
  trackingId?: string;
}
