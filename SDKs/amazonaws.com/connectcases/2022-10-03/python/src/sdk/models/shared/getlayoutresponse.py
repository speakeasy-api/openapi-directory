"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import layoutcontent as shared_layoutcontent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLayoutResponse:
    r"""Success"""
    
    content: shared_layoutcontent.LayoutContent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content') }})  
    layout_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layoutArn') }})  
    layout_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layoutId') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    