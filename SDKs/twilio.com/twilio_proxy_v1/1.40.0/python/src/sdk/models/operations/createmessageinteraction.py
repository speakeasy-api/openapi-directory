"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import proxy_v1_service_session_participant_message_interaction as shared_proxy_v1_service_session_participant_message_interaction
from typing import Optional

CREATE_MESSAGE_INTERACTION_SERVERS = [
	"https://proxy.twilio.com",
]


@dataclasses.dataclass
class CreateMessageInteractionSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateMessageInteractionCreateMessageInteractionRequest:
    
    body: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Body' }})
    r"""The message to send to the participant"""  
    media_url: Optional[list[str]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'MediaUrl' }})
    r"""Reserved. Not currently supported."""  
    

@dataclasses.dataclass
class CreateMessageInteractionRequest:
    
    participant_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ParticipantSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Participant](https://www.twilio.com/docs/proxy/api/participant) resource."""  
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) resource."""  
    session_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'SessionSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) resource."""  
    request_body: Optional[CreateMessageInteractionCreateMessageInteractionRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateMessageInteractionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    proxy_v1_service_session_participant_message_interaction: Optional[shared_proxy_v1_service_session_participant_message_interaction.ProxyV1ServiceSessionParticipantMessageInteraction] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    