// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetStatusEnum string

const (
	TargetStatusEnumPending     TargetStatusEnum = "PENDING"
	TargetStatusEnumActive      TargetStatusEnum = "ACTIVE"
	TargetStatusEnumUnreachable TargetStatusEnum = "UNREACHABLE"
	TargetStatusEnumInactive    TargetStatusEnum = "INACTIVE"
	TargetStatusEnumDeactivated TargetStatusEnum = "DEACTIVATED"
)

func (e TargetStatusEnum) ToPointer() *TargetStatusEnum {
	return &e
}

func (e *TargetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "UNREACHABLE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "DEACTIVATED":
		*e = TargetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetStatusEnum: %v", v)
	}
}
