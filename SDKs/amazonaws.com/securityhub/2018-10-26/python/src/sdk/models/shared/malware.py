import dataclasses
from typing import Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from ..shared import malwarestate_enum as shared_malwarestate_enum
from ..shared import malwaretype_enum as shared_malwaretype_enum


@dataclass_json
@dataclasses.dataclass
class Malware:
    r"""Malware
    A list of malware related to a finding.
    """
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('Name') }})
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('Path') }})
    state: Optional[shared_malwarestate_enum.MalwareStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('State') }})
    type: Optional[shared_malwaretype_enum.MalwareTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('Type') }})
    
