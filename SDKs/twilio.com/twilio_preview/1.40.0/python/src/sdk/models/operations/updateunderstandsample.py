"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import preview_understand_assistant_task_sample as shared_preview_understand_assistant_task_sample
from typing import Optional

UPDATE_UNDERSTAND_SAMPLE_SERVERS = [
	"https://preview.twilio.com",
]


@dataclasses.dataclass
class UpdateUnderstandSampleSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateUnderstandSampleUpdateUnderstandSampleRequest:
    
    language: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Language' }})
    r"""An ISO language-country string of the sample."""  
    source_channel: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SourceChannel' }})
    r"""The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null"""  
    tagged_text: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'TaggedText' }})
    r"""The text example of how end-users may express this task. The sample may contain Field tag blocks."""  
    

@dataclasses.dataclass
class UpdateUnderstandSampleRequest:
    
    assistant_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AssistantSid', 'style': 'simple', 'explode': False }})
    r"""The unique ID of the Assistant."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""A 34 character string that uniquely identifies this resource."""  
    task_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'TaskSid', 'style': 'simple', 'explode': False }})
    r"""The unique ID of the Task associated with this Sample."""  
    request_body: Optional[UpdateUnderstandSampleUpdateUnderstandSampleRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateUnderstandSampleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preview_understand_assistant_task_sample: Optional[shared_preview_understand_assistant_task_sample.PreviewUnderstandAssistantTaskSample] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    