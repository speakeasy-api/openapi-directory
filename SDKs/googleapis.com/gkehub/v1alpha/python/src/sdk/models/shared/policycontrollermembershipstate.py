"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import policycontrolleronclusterstate as shared_policycontrolleronclusterstate
from ..shared import policycontrollerpolicycontentstate as shared_policycontrollerpolicycontentstate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PolicyControllerMembershipStateStateEnum(str, Enum):
    r"""The overall Policy Controller lifecycle state observed by the Hub Feature controller."""
    LIFECYCLE_STATE_UNSPECIFIED = 'LIFECYCLE_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLING = 'INSTALLING'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    DECOMMISSIONING = 'DECOMMISSIONING'
    CLUSTER_ERROR = 'CLUSTER_ERROR'
    HUB_ERROR = 'HUB_ERROR'
    SUSPENDED = 'SUSPENDED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PolicyControllerMembershipState:
    r"""**Policy Controller**: State for a single cluster."""
    
    component_states: Optional[dict[str, shared_policycontrolleronclusterstate.PolicyControllerOnClusterState]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentStates'), 'exclude': lambda f: f is None }})
    r"""Currently these include (also serving as map keys): 1. \\"admission\\" 2. \\"audit\\" 3. \\"mutation\\" """  
    content_states: Optional[dict[str, shared_policycontrolleronclusterstate.PolicyControllerOnClusterState]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentStates'), 'exclude': lambda f: f is None }})
    r"""The state of the template library and any bundles included in the chosen version of the manifest TODO (b/271878194): Remove this"""  
    policy_content_state: Optional[shared_policycontrollerpolicycontentstate.PolicyControllerPolicyContentState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyContentState'), 'exclude': lambda f: f is None }})
    r"""The state of the policy controller policy content"""  
    state: Optional[PolicyControllerMembershipStateStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The overall Policy Controller lifecycle state observed by the Hub Feature controller."""  
    