// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScalableDimensionEnum string

const (
	ScalableDimensionEnumAutoscalingAutoScalingGroupDesiredCapacity ScalableDimensionEnum = "autoscaling:autoScalingGroup:DesiredCapacity"
	ScalableDimensionEnumEcsServiceDesiredCount                     ScalableDimensionEnum = "ecs:service:DesiredCount"
	ScalableDimensionEnumEc2SpotFleetRequestTargetCapacity          ScalableDimensionEnum = "ec2:spot-fleet-request:TargetCapacity"
	ScalableDimensionEnumRdsClusterReadReplicaCount                 ScalableDimensionEnum = "rds:cluster:ReadReplicaCount"
	ScalableDimensionEnumDynamodbTableReadCapacityUnits             ScalableDimensionEnum = "dynamodb:table:ReadCapacityUnits"
	ScalableDimensionEnumDynamodbTableWriteCapacityUnits            ScalableDimensionEnum = "dynamodb:table:WriteCapacityUnits"
	ScalableDimensionEnumDynamodbIndexReadCapacityUnits             ScalableDimensionEnum = "dynamodb:index:ReadCapacityUnits"
	ScalableDimensionEnumDynamodbIndexWriteCapacityUnits            ScalableDimensionEnum = "dynamodb:index:WriteCapacityUnits"
)

func (e *ScalableDimensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "autoscaling:autoScalingGroup:DesiredCapacity":
		fallthrough
	case "ecs:service:DesiredCount":
		fallthrough
	case "ec2:spot-fleet-request:TargetCapacity":
		fallthrough
	case "rds:cluster:ReadReplicaCount":
		fallthrough
	case "dynamodb:table:ReadCapacityUnits":
		fallthrough
	case "dynamodb:table:WriteCapacityUnits":
		fallthrough
	case "dynamodb:index:ReadCapacityUnits":
		fallthrough
	case "dynamodb:index:WriteCapacityUnits":
		*e = ScalableDimensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScalableDimensionEnum: %s", s)
	}
}
