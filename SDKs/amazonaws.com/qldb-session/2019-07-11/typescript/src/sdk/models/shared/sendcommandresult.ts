/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AbortTransactionResult } from "./aborttransactionresult";
import { CommitTransactionResult } from "./committransactionresult";
import { EndSessionResult } from "./endsessionresult";
import { ExecuteStatementResult } from "./executestatementresult";
import { FetchPageResult } from "./fetchpageresult";
import { StartSessionResult } from "./startsessionresult";
import { StartTransactionResult } from "./starttransactionresult";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class SendCommandResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AbortTransaction" })
  @Type(() => AbortTransactionResult)
  abortTransaction?: AbortTransactionResult;

  @SpeakeasyMetadata()
  @Expose({ name: "CommitTransaction" })
  @Type(() => CommitTransactionResult)
  commitTransaction?: CommitTransactionResult;

  @SpeakeasyMetadata()
  @Expose({ name: "EndSession" })
  @Type(() => EndSessionResult)
  endSession?: EndSessionResult;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecuteStatement" })
  @Type(() => ExecuteStatementResult)
  executeStatement?: ExecuteStatementResult;

  @SpeakeasyMetadata()
  @Expose({ name: "FetchPage" })
  @Type(() => FetchPageResult)
  fetchPage?: FetchPageResult;

  @SpeakeasyMetadata()
  @Expose({ name: "StartSession" })
  @Type(() => StartSessionResult)
  startSession?: StartSessionResult;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTransaction" })
  @Type(() => StartTransactionResult)
  startTransaction?: StartTransactionResult;
}
