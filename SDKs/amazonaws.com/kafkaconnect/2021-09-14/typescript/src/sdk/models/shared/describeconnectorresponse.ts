/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapacityDescription } from "./capacitydescription";
import { ConnectorStateEnum } from "./connectorstateenum";
import { KafkaClusterClientAuthenticationDescription } from "./kafkaclusterclientauthenticationdescription";
import { KafkaClusterDescription } from "./kafkaclusterdescription";
import { KafkaClusterEncryptionInTransitDescription } from "./kafkaclusterencryptionintransitdescription";
import { LogDeliveryDescription } from "./logdeliverydescription";
import { PluginDescription } from "./plugindescription";
import { StateDescription } from "./statedescription";
import { WorkerConfigurationDescription } from "./workerconfigurationdescription";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeConnectorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "capacity" })
  @Type(() => CapacityDescription)
  capacity?: CapacityDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorArn" })
  connectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorConfiguration" })
  connectorConfiguration?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorDescription" })
  connectorDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorName" })
  connectorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorState" })
  connectorState?: ConnectorStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  currentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kafkaCluster" })
  @Type(() => KafkaClusterDescription)
  kafkaCluster?: KafkaClusterDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "kafkaClusterClientAuthentication" })
  @Type(() => KafkaClusterClientAuthenticationDescription)
  kafkaClusterClientAuthentication?: KafkaClusterClientAuthenticationDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "kafkaClusterEncryptionInTransit" })
  @Type(() => KafkaClusterEncryptionInTransitDescription)
  kafkaClusterEncryptionInTransit?: KafkaClusterEncryptionInTransitDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "kafkaConnectVersion" })
  kafkaConnectVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logDelivery" })
  @Type(() => LogDeliveryDescription)
  logDelivery?: LogDeliveryDescription;

  @SpeakeasyMetadata({ elemType: PluginDescription })
  @Expose({ name: "plugins" })
  @Type(() => PluginDescription)
  plugins?: PluginDescription[];

  @SpeakeasyMetadata()
  @Expose({ name: "serviceExecutionRoleArn" })
  serviceExecutionRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stateDescription" })
  @Type(() => StateDescription)
  stateDescription?: StateDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "workerConfiguration" })
  @Type(() => WorkerConfigurationDescription)
  workerConfiguration?: WorkerConfigurationDescription;
}
