/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstanceAssociationOutputUrl } from "./instanceassociationoutputurl";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Status information about the association.
 */
export class InstanceAssociationStatusInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationName" })
  associationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationVersion" })
  associationVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DetailedStatus" })
  detailedStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorCode" })
  errorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionSummary" })
  executionSummary?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceId" })
  instanceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputUrl" })
  @Type(() => InstanceAssociationOutputUrl)
  outputUrl?: InstanceAssociationOutputUrl;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;
}
