/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReplicatingStep } from "./replicatingstep";
import { Expose, Type } from "class-transformer";

/**
 * CycleStep holds information about a step progress.
 */
export class CycleStep extends SpeakeasyBase {
  /**
   * The time the cycle step has ended.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * InitializingReplicationStep contains specific step details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "initializingReplication" })
  initializingReplication?: Record<string, any>;

  /**
   * PostProcessingStep contains specific step details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postProcessing" })
  postProcessing?: Record<string, any>;

  /**
   * ReplicatingStep contains specific step details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replicating" })
  @Type(() => ReplicatingStep)
  replicating?: ReplicatingStep;

  /**
   * The time the cycle step has started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;
}
