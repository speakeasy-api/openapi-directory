"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2beta1agentassistantfeedback as shared_googleclouddialogflowv2beta1agentassistantfeedback
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowV2beta1AnswerFeedbackCorrectnessLevelEnum(str, Enum):
    r"""The correctness level of the specific answer."""
    CORRECTNESS_LEVEL_UNSPECIFIED = 'CORRECTNESS_LEVEL_UNSPECIFIED'
    NOT_CORRECT = 'NOT_CORRECT'
    PARTIALLY_CORRECT = 'PARTIALLY_CORRECT'
    FULLY_CORRECT = 'FULLY_CORRECT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2beta1AnswerFeedback:
    r"""Represents feedback the customer has about the quality & correctness of a certain answer in a conversation."""
    
    agent_assistant_detail_feedback: Optional[shared_googleclouddialogflowv2beta1agentassistantfeedback.GoogleCloudDialogflowV2beta1AgentAssistantFeedback] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agentAssistantDetailFeedback'), 'exclude': lambda f: f is None }})
    r"""Detail feedback of Agent Assistant result."""  
    clicked: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clicked'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the answer/item was clicked by the human agent or not. Default to false."""  
    click_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clickTime'), 'exclude': lambda f: f is None }})
    r"""Time when the answer/item was clicked."""  
    correctness_level: Optional[GoogleCloudDialogflowV2beta1AnswerFeedbackCorrectnessLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('correctnessLevel'), 'exclude': lambda f: f is None }})
    r"""The correctness level of the specific answer."""  
    displayed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayed'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false."""  
    display_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayTime'), 'exclude': lambda f: f is None }})
    r"""Time when the answer/item was displayed."""  
    