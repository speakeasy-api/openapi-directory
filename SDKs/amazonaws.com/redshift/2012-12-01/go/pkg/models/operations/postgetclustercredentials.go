// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetClusterCredentialsActionEnum
type POSTGetClusterCredentialsActionEnum string

const (
	POSTGetClusterCredentialsActionEnumGetClusterCredentials POSTGetClusterCredentialsActionEnum = "GetClusterCredentials"
)

func (e POSTGetClusterCredentialsActionEnum) ToPointer() *POSTGetClusterCredentialsActionEnum {
	return &e
}

func (e *POSTGetClusterCredentialsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetClusterCredentials":
		*e = POSTGetClusterCredentialsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetClusterCredentialsActionEnum: %v", v)
	}
}

// POSTGetClusterCredentialsVersionEnum
type POSTGetClusterCredentialsVersionEnum string

const (
	POSTGetClusterCredentialsVersionEnumTwoThousandAndTwelve1201 POSTGetClusterCredentialsVersionEnum = "2012-12-01"
)

func (e POSTGetClusterCredentialsVersionEnum) ToPointer() *POSTGetClusterCredentialsVersionEnum {
	return &e
}

func (e *POSTGetClusterCredentialsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = POSTGetClusterCredentialsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetClusterCredentialsVersionEnum: %v", v)
	}
}

type POSTGetClusterCredentialsRequest struct {
	Action            POSTGetClusterCredentialsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                               `request:"mediaType=text/xml"`
	Version           POSTGetClusterCredentialsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetClusterCredentialsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
