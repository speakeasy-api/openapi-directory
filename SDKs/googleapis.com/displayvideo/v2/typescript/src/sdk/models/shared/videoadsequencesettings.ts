/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VideoAdSequenceStep } from "./videoadsequencestep";
import { Expose, Type } from "class-transformer";

/**
 * The minimum time interval before the same user sees this sequence again.
 */
export enum VideoAdSequenceSettingsMinimumDurationEnum {
  VideoAdSequenceMinimumDurationUnspecified = "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_UNSPECIFIED",
  VideoAdSequenceMinimumDurationWeek = "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_WEEK",
  VideoAdSequenceMinimumDurationMonth = "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_MONTH",
}

/**
 * Settings related to VideoAdSequence.
 */
export class VideoAdSequenceSettings extends SpeakeasyBase {
  /**
   * The minimum time interval before the same user sees this sequence again.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumDuration" })
  minimumDuration?: VideoAdSequenceSettingsMinimumDurationEnum;

  /**
   * The steps of which the sequence consists.
   */
  @SpeakeasyMetadata({ elemType: VideoAdSequenceStep })
  @Expose({ name: "steps" })
  @Type(() => VideoAdSequenceStep)
  steps?: VideoAdSequenceStep[];
}
