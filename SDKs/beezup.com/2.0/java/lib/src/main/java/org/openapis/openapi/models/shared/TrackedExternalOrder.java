/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class TrackedExternalOrder {
    /**
     * The currency code &lt;a href="https://en.wikipedia.org/wiki/ISO_4217"&gt;(ISO 4217)&lt;/a&gt;
     * 
     */
    @JsonProperty("currencyCode")
    public String currencyCode;

    public TrackedExternalOrder withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * The merchant order identifier
     */
    @JsonProperty("merchantOrderId")
    public String merchantOrderId;

    public TrackedExternalOrder withMerchantOrderId(String merchantOrderId) {
        this.merchantOrderId = merchantOrderId;
        return this;
    }
    
    /**
     * Indicate if the payment of this external order has been validated or not
     */
    @JsonProperty("paymentValidated")
    public Boolean paymentValidated;

    public TrackedExternalOrder withPaymentValidated(Boolean paymentValidated) {
        this.paymentValidated = paymentValidated;
        return this;
    }
    
    /**
     * Can be null. The product list included in the external order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("products")
    public TrackedExternalOrderProduct[] products;

    public TrackedExternalOrder withProducts(TrackedExternalOrderProduct[] products) {
        this.products = products;
        return this;
    }
    
    /**
     * The total amount of the external order
     */
    @JsonProperty("totalAmount")
    public Double totalAmount;

    public TrackedExternalOrder withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * The utc date of the external order
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("utcDate")
    public OffsetDateTime utcDate;

    public TrackedExternalOrder withUtcDate(OffsetDateTime utcDate) {
        this.utcDate = utcDate;
        return this;
    }
    
    /**
     * Can be null. The visitor identifier of the external order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visitorId")
    public String visitorId;

    public TrackedExternalOrder withVisitorId(String visitorId) {
        this.visitorId = visitorId;
        return this;
    }
    
    public TrackedExternalOrder(@JsonProperty("currencyCode") String currencyCode, @JsonProperty("merchantOrderId") String merchantOrderId, @JsonProperty("paymentValidated") Boolean paymentValidated, @JsonProperty("totalAmount") Double totalAmount, @JsonProperty("utcDate") OffsetDateTime utcDate) {
        this.currencyCode = currencyCode;
        this.merchantOrderId = merchantOrderId;
        this.paymentValidated = paymentValidated;
        this.totalAmount = totalAmount;
        this.utcDate = utcDate;
  }
}
