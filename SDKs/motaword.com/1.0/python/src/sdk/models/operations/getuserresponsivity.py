"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import responsivitylist as shared_responsivitylist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetUserResponsivitySecurity:
    
    mwo_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetUserResponsivityPeriodEnum(str, Enum):
    r"""Period for calcualtion."""
    MONTHLY = 'monthly'
    WEEKLY = 'weekly'


@dataclasses.dataclass
class GetUserResponsivityRequest:
    
    user_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""User ID"""  
    period: Optional[GetUserResponsivityPeriodEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'period', 'style': 'form', 'explode': True }})
    r"""Period for calcualtion."""  
    

@dataclasses.dataclass
class GetUserResponsivityResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""VendorNotFound - this is not a vendor user account"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    responsivity_list: Optional[shared_responsivitylist.ResponsivityList] = dataclasses.field(default=None)
    r"""Vendor responsivity stats"""  
    