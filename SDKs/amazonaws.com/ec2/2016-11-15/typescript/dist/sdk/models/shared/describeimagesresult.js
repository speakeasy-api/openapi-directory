"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeImagesResult = exports.DescribeImagesResultImages = exports.DescribeImagesResultImagesVirtualizationTypeEnum = exports.DescribeImagesResultImagesTpmSupportEnum = exports.DescribeImagesResultImagesTags = exports.DescribeImagesResultImagesStateReason = exports.DescribeImagesResultImagesStateEnum = exports.DescribeImagesResultImagesRootDeviceTypeEnum = exports.DescribeImagesResultImagesProductCodes = exports.DescribeImagesResultImagesProductCodesProductCodeTypeEnum = exports.DescribeImagesResultImagesPlatformEnum = exports.DescribeImagesResultImagesImdsSupportEnum = exports.DescribeImagesResultImagesImageTypeEnum = exports.DescribeImagesResultImagesHypervisorEnum = exports.DescribeImagesResultImagesBootModeEnum = exports.DescribeImagesResultImagesBlockDeviceMappings = exports.DescribeImagesResultImagesBlockDeviceMappingsEbs = exports.DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum = exports.DescribeImagesResultImagesArchitectureEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The architecture of the image.
 */
var DescribeImagesResultImagesArchitectureEnum;
(function (DescribeImagesResultImagesArchitectureEnum) {
    DescribeImagesResultImagesArchitectureEnum["I386"] = "i386";
    DescribeImagesResultImagesArchitectureEnum["X8664"] = "x86_64";
    DescribeImagesResultImagesArchitectureEnum["Arm64"] = "arm64";
    DescribeImagesResultImagesArchitectureEnum["X8664Mac"] = "x86_64_mac";
    DescribeImagesResultImagesArchitectureEnum["Arm64Mac"] = "arm64_mac";
})(DescribeImagesResultImagesArchitectureEnum = exports.DescribeImagesResultImagesArchitectureEnum || (exports.DescribeImagesResultImagesArchitectureEnum = {}));
/**
 * The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports.
 */
var DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum;
(function (DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum) {
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["Standard"] = "standard";
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["Io1"] = "io1";
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["Io2"] = "io2";
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["Gp2"] = "gp2";
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["Sc1"] = "sc1";
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["St1"] = "st1";
    DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum["Gp3"] = "gp3";
})(DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum = exports.DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum || (exports.DescribeImagesResultImagesBlockDeviceMappingsEbsVolumeTypeEnum = {}));
/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
var DescribeImagesResultImagesBlockDeviceMappingsEbs = /** @class */ (function (_super) {
    __extends(DescribeImagesResultImagesBlockDeviceMappingsEbs, _super);
    function DescribeImagesResultImagesBlockDeviceMappingsEbs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "encrypted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "iops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "kmsKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "outpostArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "snapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "throughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "volumeSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappingsEbs.prototype, "volumeType", void 0);
    return DescribeImagesResultImagesBlockDeviceMappingsEbs;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResultImagesBlockDeviceMappingsEbs = DescribeImagesResultImagesBlockDeviceMappingsEbs;
/**
 * Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
 */
var DescribeImagesResultImagesBlockDeviceMappings = /** @class */ (function (_super) {
    __extends(DescribeImagesResultImagesBlockDeviceMappings, _super);
    function DescribeImagesResultImagesBlockDeviceMappings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappings.prototype, "deviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeImagesResultImagesBlockDeviceMappingsEbs)
    ], DescribeImagesResultImagesBlockDeviceMappings.prototype, "ebs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappings.prototype, "noDevice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesBlockDeviceMappings.prototype, "virtualName", void 0);
    return DescribeImagesResultImagesBlockDeviceMappings;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResultImagesBlockDeviceMappings = DescribeImagesResultImagesBlockDeviceMappings;
/**
 * The boot mode of the image. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon EC2 User Guide</i>.
 */
var DescribeImagesResultImagesBootModeEnum;
(function (DescribeImagesResultImagesBootModeEnum) {
    DescribeImagesResultImagesBootModeEnum["LegacyBios"] = "legacy-bios";
    DescribeImagesResultImagesBootModeEnum["Uefi"] = "uefi";
    DescribeImagesResultImagesBootModeEnum["UefiPreferred"] = "uefi-preferred";
})(DescribeImagesResultImagesBootModeEnum = exports.DescribeImagesResultImagesBootModeEnum || (exports.DescribeImagesResultImagesBootModeEnum = {}));
/**
 * The hypervisor type of the image.
 */
var DescribeImagesResultImagesHypervisorEnum;
(function (DescribeImagesResultImagesHypervisorEnum) {
    DescribeImagesResultImagesHypervisorEnum["Ovm"] = "ovm";
    DescribeImagesResultImagesHypervisorEnum["Xen"] = "xen";
})(DescribeImagesResultImagesHypervisorEnum = exports.DescribeImagesResultImagesHypervisorEnum || (exports.DescribeImagesResultImagesHypervisorEnum = {}));
/**
 * The type of image.
 */
var DescribeImagesResultImagesImageTypeEnum;
(function (DescribeImagesResultImagesImageTypeEnum) {
    DescribeImagesResultImagesImageTypeEnum["Machine"] = "machine";
    DescribeImagesResultImagesImageTypeEnum["Kernel"] = "kernel";
    DescribeImagesResultImagesImageTypeEnum["Ramdisk"] = "ramdisk";
})(DescribeImagesResultImagesImageTypeEnum = exports.DescribeImagesResultImagesImageTypeEnum || (exports.DescribeImagesResultImagesImageTypeEnum = {}));
/**
 * If <code>v2.0</code>, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have <code>HttpTokens</code> automatically set to <code>required</code> so that, by default, the instance requires that IMDSv2 is used when requesting instance metadata. In addition, <code>HttpPutResponseHopLimit</code> is set to <code>2</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration">Configure the AMI</a> in the <i>Amazon EC2 User Guide</i>.
 */
var DescribeImagesResultImagesImdsSupportEnum;
(function (DescribeImagesResultImagesImdsSupportEnum) {
    DescribeImagesResultImagesImdsSupportEnum["V20"] = "v2.0";
})(DescribeImagesResultImagesImdsSupportEnum = exports.DescribeImagesResultImagesImdsSupportEnum || (exports.DescribeImagesResultImagesImdsSupportEnum = {}));
/**
 * This value is set to <code>windows</code> for Windows AMIs; otherwise, it is blank.
 */
var DescribeImagesResultImagesPlatformEnum;
(function (DescribeImagesResultImagesPlatformEnum) {
    DescribeImagesResultImagesPlatformEnum["Windows"] = "Windows";
})(DescribeImagesResultImagesPlatformEnum = exports.DescribeImagesResultImagesPlatformEnum || (exports.DescribeImagesResultImagesPlatformEnum = {}));
/**
 * The type of product code.
 */
var DescribeImagesResultImagesProductCodesProductCodeTypeEnum;
(function (DescribeImagesResultImagesProductCodesProductCodeTypeEnum) {
    DescribeImagesResultImagesProductCodesProductCodeTypeEnum["Devpay"] = "devpay";
    DescribeImagesResultImagesProductCodesProductCodeTypeEnum["Marketplace"] = "marketplace";
})(DescribeImagesResultImagesProductCodesProductCodeTypeEnum = exports.DescribeImagesResultImagesProductCodesProductCodeTypeEnum || (exports.DescribeImagesResultImagesProductCodesProductCodeTypeEnum = {}));
/**
 * Describes a product code.
 */
var DescribeImagesResultImagesProductCodes = /** @class */ (function (_super) {
    __extends(DescribeImagesResultImagesProductCodes, _super);
    function DescribeImagesResultImagesProductCodes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesProductCodes.prototype, "productCodeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesProductCodes.prototype, "productCodeType", void 0);
    return DescribeImagesResultImagesProductCodes;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResultImagesProductCodes = DescribeImagesResultImagesProductCodes;
/**
 * The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.
 */
var DescribeImagesResultImagesRootDeviceTypeEnum;
(function (DescribeImagesResultImagesRootDeviceTypeEnum) {
    DescribeImagesResultImagesRootDeviceTypeEnum["Ebs"] = "ebs";
    DescribeImagesResultImagesRootDeviceTypeEnum["InstanceStore"] = "instance-store";
})(DescribeImagesResultImagesRootDeviceTypeEnum = exports.DescribeImagesResultImagesRootDeviceTypeEnum || (exports.DescribeImagesResultImagesRootDeviceTypeEnum = {}));
/**
 * The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.
 */
var DescribeImagesResultImagesStateEnum;
(function (DescribeImagesResultImagesStateEnum) {
    DescribeImagesResultImagesStateEnum["Pending"] = "pending";
    DescribeImagesResultImagesStateEnum["Available"] = "available";
    DescribeImagesResultImagesStateEnum["Invalid"] = "invalid";
    DescribeImagesResultImagesStateEnum["Deregistered"] = "deregistered";
    DescribeImagesResultImagesStateEnum["Transient"] = "transient";
    DescribeImagesResultImagesStateEnum["Failed"] = "failed";
    DescribeImagesResultImagesStateEnum["Error"] = "error";
})(DescribeImagesResultImagesStateEnum = exports.DescribeImagesResultImagesStateEnum || (exports.DescribeImagesResultImagesStateEnum = {}));
/**
 * The reason for the state change.
 */
var DescribeImagesResultImagesStateReason = /** @class */ (function (_super) {
    __extends(DescribeImagesResultImagesStateReason, _super);
    function DescribeImagesResultImagesStateReason() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesStateReason.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesStateReason.prototype, "message", void 0);
    return DescribeImagesResultImagesStateReason;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResultImagesStateReason = DescribeImagesResultImagesStateReason;
/**
 * Describes a tag.
 */
var DescribeImagesResultImagesTags = /** @class */ (function (_super) {
    __extends(DescribeImagesResultImagesTags, _super);
    function DescribeImagesResultImagesTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImagesTags.prototype, "value", void 0);
    return DescribeImagesResultImagesTags;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResultImagesTags = DescribeImagesResultImagesTags;
/**
 * If the image is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html">NitroTPM</a> in the <i>Amazon EC2 User Guide</i>.
 */
var DescribeImagesResultImagesTpmSupportEnum;
(function (DescribeImagesResultImagesTpmSupportEnum) {
    DescribeImagesResultImagesTpmSupportEnum["V20"] = "v2.0";
})(DescribeImagesResultImagesTpmSupportEnum = exports.DescribeImagesResultImagesTpmSupportEnum || (exports.DescribeImagesResultImagesTpmSupportEnum = {}));
/**
 * The type of virtualization of the AMI.
 */
var DescribeImagesResultImagesVirtualizationTypeEnum;
(function (DescribeImagesResultImagesVirtualizationTypeEnum) {
    DescribeImagesResultImagesVirtualizationTypeEnum["Hvm"] = "hvm";
    DescribeImagesResultImagesVirtualizationTypeEnum["Paravirtual"] = "paravirtual";
})(DescribeImagesResultImagesVirtualizationTypeEnum = exports.DescribeImagesResultImagesVirtualizationTypeEnum || (exports.DescribeImagesResultImagesVirtualizationTypeEnum = {}));
/**
 * Describes an image.
 */
var DescribeImagesResultImages = /** @class */ (function (_super) {
    __extends(DescribeImagesResultImages, _super);
    function DescribeImagesResultImages() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "architecture", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeImagesResultImagesBlockDeviceMappings,
        }),
        __metadata("design:type", Array)
    ], DescribeImagesResultImages.prototype, "blockDeviceMappings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "bootMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "creationDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "deprecationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeImagesResultImages.prototype, "enaSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "hypervisor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "imageId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "imageLocation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "imageOwnerAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "imageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "imdsSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "kernelId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "platform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "platformDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeImagesResultImagesProductCodes }),
        __metadata("design:type", Array)
    ], DescribeImagesResultImages.prototype, "productCodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeImagesResultImages.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "ramdiskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "rootDeviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "rootDeviceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "sriovNetSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeImagesResultImagesStateReason)
    ], DescribeImagesResultImages.prototype, "stateReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeImagesResultImagesTags }),
        __metadata("design:type", Array)
    ], DescribeImagesResultImages.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "tpmSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "usageOperation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResultImages.prototype, "virtualizationType", void 0);
    return DescribeImagesResultImages;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResultImages = DescribeImagesResultImages;
/**
 * Success
 */
var DescribeImagesResult = /** @class */ (function (_super) {
    __extends(DescribeImagesResult, _super);
    function DescribeImagesResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeImagesResultImages }),
        __metadata("design:type", Array)
    ], DescribeImagesResult.prototype, "images", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeImagesResult.prototype, "nextToken", void 0);
    return DescribeImagesResult;
}(utils_1.SpeakeasyBase));
exports.DescribeImagesResult = DescribeImagesResult;
