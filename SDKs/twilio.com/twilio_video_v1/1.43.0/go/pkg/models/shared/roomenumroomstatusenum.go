// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RoomEnumRoomStatusEnum - Read only the rooms with this status. Can be: `in-progress` (default) or `completed`
type RoomEnumRoomStatusEnum string

const (
	RoomEnumRoomStatusEnumInProgress RoomEnumRoomStatusEnum = "in-progress"
	RoomEnumRoomStatusEnumCompleted  RoomEnumRoomStatusEnum = "completed"
	RoomEnumRoomStatusEnumFailed     RoomEnumRoomStatusEnum = "failed"
)

func (e RoomEnumRoomStatusEnum) ToPointer() *RoomEnumRoomStatusEnum {
	return &e
}

func (e *RoomEnumRoomStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in-progress":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = RoomEnumRoomStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RoomEnumRoomStatusEnum: %v", v)
	}
}
