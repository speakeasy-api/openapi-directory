"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .account import Account
from .cisco_sntc import CiscoSNTC
from .export import Export
from .organization import Organization
from .public import Public
from .servicenow import ServiceNow
from .splunk import Splunk

SERVERS = [
    "https://console.rumble.run/api/v1.0",
    r"""Rumble Console"""
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""<p><b><i>Rumble Network Discovery is now runZero. <a href=\\"https://www.runzero.com/blog/introducing-runzero/\\">Read the announcement</a></i></b>.</p> <p>This API is frozen and no longer being updated as of version 2.15.0.</p> <p>See our latest API documentation at <a href=\\"https://app.swaggerhub.com/apis-docs/runZero/runZero\\">swaggerhub.com/apis-docs/runZero/runZero</a>.</p>"""
    account: Account
    cisco_sntc: CiscoSNTC
    export: Export
    r"""Requires Export Token or Organization Key"""
    organization: Organization
    r"""Requires Organization Key"""
    public: Public
    r"""Unauthenticated"""
    service_now: ServiceNow
    splunk: Splunk

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.account = Account(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cisco_sntc = CiscoSNTC(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.export = Export(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.organization = Organization(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.public = Public(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.service_now = ServiceNow(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.splunk = Splunk(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    