<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - # Introduction
 * 
 * We have prepared a set of APIs for quick start to integrate telematics SDK that powers mobile telematics inside 3rd party mobile applications.
 * 
 * * [CONTACT US](https://telematicssdk.com)
 * * [SANDBOX](https://userdatahub.com)
 * * [DEV.PORTAL](https://docs.telematicssdk.com)
 * * [DEMO APP](https://raxeltelematics.com/telematics-app)
 * 
 * 
 * # Overview
 * Datamotion provides telematics infrastructure for mobile applications. 
 * 
 * Telematics SDK turns any smartphone into telematics data gathering device to collect Location, driving and behavior data. API services unlocks power of your mobile application
 * 
 * There are 3 groups of methods:
 * * 1 - user management
 * * 2 - statistics for mobile app
 * * 3 - statistics for back-end(s)
 * 
 * in certain cases you will need SNS or any other notification services. read more [here](https://docs.telematicssdk.com/platform-features/sns)
 * # Possible architecture
 * 
 * There are three common schemes that are used by our clients. These schemes can be combined
 * * Collect, Process, Store (required: 1&2)
 * * Collect, Process (required: 1& sns)
 * * Collect (required 1&sns)
 * 
 * 
 * ## Collect, Process, Store
 * ![Collect, Process, Store](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection%2C+processing%2C+storage)
 * 
 * ## Collect, Process
 * ![Collect, Process](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+and+processing)
 * 
 * ## Collect
 * ![Collect](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+only)
 * 
 * ***
 * ![Telematic sdk](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Github/transportation_small.png)
 * 
 * # Common use-cases:
 * * Safe and efficient driving
 * * Usage-based insurance
 * * Safe driving assessment
 * * Driver assessment
 * * Trip log
 * * Geo-analysis
 * * Accident monitoring
 * * Driving engagements
 * * Location based services
 * * Realtime Tracking
 * and beyond
 * 
 * # How to start
 * * Register a [SANDBOX ACCOUNT](https://userdatahub.com)
 * * Get [CREDENTIALS](https://docs.userdatahub.com/sandbox/credentials) 
 * * Follow the guide from [DEVELOPER POERTAL](https://docs.telematicssdk.com)
 * 
 * # Authentication
 * To create a user on datamotion platform, you require to use InstanceID and InstanceKEY. You can get it in Datahub -> management -> user-service credentials
 * 
 * Once you create a user, you will get Device token, JWT token and refresh token. then, you will use it for APIs
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
		'https://api.telematicssdk.com',
		'https://mobilesdk.telematicssdk.com',
	];
  	
    /**
     * # Introduction
     * 
     * These API services designed to use it inside a mobile applications to get statistics data and services directly from telematics platform and show it in the app
     * 
     * # Scheme
     * ![API statistics](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/API+statistics+integration.png)
     * 
     * @var TwoForMobileAppOptional $$twoForMobileAppOptional
     */
	public TwoForMobileAppOptional $twoForMobileAppOptional;
	
	public Two1UserStatisticsOptional $two1UserStatisticsOptional;
	
	public Two2UserTripsOptional $two2UserTripsOptional;
	
	public Two4UserSafeScoringOptional $two4UserSafeScoringOptional;
	
    /**
     * # Introduction
     * 
     * The methods are required to have an admin authentication.
     * 
     * # How to get admin credentials
     * Please create admin credentials in [Datahub](https://userdatahub.com) and use method v1/Auth/Login (1. User management)
     * 
     * # Scheme
     * ![Admin statistics integration](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/admin+statistics+integration.png)
     * 
     * @var ThreeForBackEndOptional $$threeForBackEndOptional
     */
	public ThreeForBackEndOptional $threeForBackEndOptional;
	
	public ConsolidatedSafeScoring $consolidatedSafeScoring;
	
	public ConsolidatedStatistics $consolidatedStatistics;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->twoForMobileAppOptional = new TwoForMobileAppOptional(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->two1UserStatisticsOptional = new Two1UserStatisticsOptional(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->two2UserTripsOptional = new Two2UserTripsOptional(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->two4UserSafeScoringOptional = new Two4UserSafeScoringOptional(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->threeForBackEndOptional = new ThreeForBackEndOptional(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->consolidatedSafeScoring = new ConsolidatedSafeScoring(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->consolidatedStatistics = new ConsolidatedStatistics(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}