/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamSeason {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistedTackles")
    public Double assistedTackles;

    public TeamSeason withAssistedTackles(Double assistedTackles) {
        this.assistedTackles = assistedTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferenceLosses")
    public Long conferenceLosses;

    public TeamSeason withConferenceLosses(Long conferenceLosses) {
        this.conferenceLosses = conferenceLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferencePointsAgainst")
    public Long conferencePointsAgainst;

    public TeamSeason withConferencePointsAgainst(Long conferencePointsAgainst) {
        this.conferencePointsAgainst = conferencePointsAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferencePointsFor")
    public Long conferencePointsFor;

    public TeamSeason withConferencePointsFor(Long conferencePointsFor) {
        this.conferencePointsFor = conferencePointsFor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferenceRank")
    public Long conferenceRank;

    public TeamSeason withConferenceRank(Long conferenceRank) {
        this.conferenceRank = conferenceRank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferenceWins")
    public Long conferenceWins;

    public TeamSeason withConferenceWins(Long conferenceWins) {
        this.conferenceWins = conferenceWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Created")
    public String created;

    public TeamSeason withCreated(String created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DivisionRank")
    public Long divisionRank;

    public TeamSeason withDivisionRank(Long divisionRank) {
        this.divisionRank = divisionRank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtraPointsAttempted")
    public Double extraPointsAttempted;

    public TeamSeason withExtraPointsAttempted(Double extraPointsAttempted) {
        this.extraPointsAttempted = extraPointsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtraPointsMade")
    public Double extraPointsMade;

    public TeamSeason withExtraPointsMade(Double extraPointsMade) {
        this.extraPointsMade = extraPointsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;

    public TeamSeason withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalPercentage")
    public Double fieldGoalPercentage;

    public TeamSeason withFieldGoalPercentage(Double fieldGoalPercentage) {
        this.fieldGoalPercentage = fieldGoalPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsAttempted")
    public Double fieldGoalsAttempted;

    public TeamSeason withFieldGoalsAttempted(Double fieldGoalsAttempted) {
        this.fieldGoalsAttempted = fieldGoalsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsLongestMade")
    public Double fieldGoalsLongestMade;

    public TeamSeason withFieldGoalsLongestMade(Double fieldGoalsLongestMade) {
        this.fieldGoalsLongestMade = fieldGoalsLongestMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsMade")
    public Double fieldGoalsMade;

    public TeamSeason withFieldGoalsMade(Double fieldGoalsMade) {
        this.fieldGoalsMade = fieldGoalsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirstDowns")
    public Long firstDowns;

    public TeamSeason withFirstDowns(Long firstDowns) {
        this.firstDowns = firstDowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FourthDownAttempts")
    public Long fourthDownAttempts;

    public TeamSeason withFourthDownAttempts(Long fourthDownAttempts) {
        this.fourthDownAttempts = fourthDownAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FourthDownConversions")
    public Long fourthDownConversions;

    public TeamSeason withFourthDownConversions(Long fourthDownConversions) {
        this.fourthDownConversions = fourthDownConversions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumbleReturnTouchdowns")
    public Double fumbleReturnTouchdowns;

    public TeamSeason withFumbleReturnTouchdowns(Double fumbleReturnTouchdowns) {
        this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Fumbles")
    public Double fumbles;

    public TeamSeason withFumbles(Double fumbles) {
        this.fumbles = fumbles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesLost")
    public Double fumblesLost;

    public TeamSeason withFumblesLost(Double fumblesLost) {
        this.fumblesLost = fumblesLost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesRecovered")
    public Double fumblesRecovered;

    public TeamSeason withFumblesRecovered(Double fumblesRecovered) {
        this.fumblesRecovered = fumblesRecovered;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;

    public TeamSeason withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;

    public TeamSeason withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeLosses")
    public Long homeLosses;

    public TeamSeason withHomeLosses(Long homeLosses) {
        this.homeLosses = homeLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeWins")
    public Long homeWins;

    public TeamSeason withHomeWins(Long homeWins) {
        this.homeWins = homeWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnTouchdowns")
    public Double interceptionReturnTouchdowns;

    public TeamSeason withInterceptionReturnTouchdowns(Double interceptionReturnTouchdowns) {
        this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnYards")
    public Double interceptionReturnYards;

    public TeamSeason withInterceptionReturnYards(Double interceptionReturnYards) {
        this.interceptionReturnYards = interceptionReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Interceptions")
    public Double interceptions;

    public TeamSeason withInterceptions(Double interceptions) {
        this.interceptions = interceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnLong")
    public Double kickReturnLong;

    public TeamSeason withKickReturnLong(Double kickReturnLong) {
        this.kickReturnLong = kickReturnLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnTouchdowns")
    public Double kickReturnTouchdowns;

    public TeamSeason withKickReturnTouchdowns(Double kickReturnTouchdowns) {
        this.kickReturnTouchdowns = kickReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnYards")
    public Double kickReturnYards;

    public TeamSeason withKickReturnYards(Double kickReturnYards) {
        this.kickReturnYards = kickReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnYardsPerAttempt")
    public Double kickReturnYardsPerAttempt;

    public TeamSeason withKickReturnYardsPerAttempt(Double kickReturnYardsPerAttempt) {
        this.kickReturnYardsPerAttempt = kickReturnYardsPerAttempt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturns")
    public Double kickReturns;

    public TeamSeason withKickReturns(Double kickReturns) {
        this.kickReturns = kickReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Losses")
    public Long losses;

    public TeamSeason withLosses(Long losses) {
        this.losses = losses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public TeamSeason withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentScore")
    public Long opponentScore;

    public TeamSeason withOpponentScore(Long opponentScore) {
        this.opponentScore = opponentScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassesDefended")
    public Double passesDefended;

    public TeamSeason withPassesDefended(Double passesDefended) {
        this.passesDefended = passesDefended;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingAttempts")
    public Double passingAttempts;

    public TeamSeason withPassingAttempts(Double passingAttempts) {
        this.passingAttempts = passingAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingCompletionPercentage")
    public Double passingCompletionPercentage;

    public TeamSeason withPassingCompletionPercentage(Double passingCompletionPercentage) {
        this.passingCompletionPercentage = passingCompletionPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingCompletions")
    public Double passingCompletions;

    public TeamSeason withPassingCompletions(Double passingCompletions) {
        this.passingCompletions = passingCompletions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingInterceptions")
    public Double passingInterceptions;

    public TeamSeason withPassingInterceptions(Double passingInterceptions) {
        this.passingInterceptions = passingInterceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingRating")
    public Double passingRating;

    public TeamSeason withPassingRating(Double passingRating) {
        this.passingRating = passingRating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingTouchdowns")
    public Double passingTouchdowns;

    public TeamSeason withPassingTouchdowns(Double passingTouchdowns) {
        this.passingTouchdowns = passingTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingYards")
    public Double passingYards;

    public TeamSeason withPassingYards(Double passingYards) {
        this.passingYards = passingYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingYardsPerAttempt")
    public Double passingYardsPerAttempt;

    public TeamSeason withPassingYardsPerAttempt(Double passingYardsPerAttempt) {
        this.passingYardsPerAttempt = passingYardsPerAttempt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingYardsPerCompletion")
    public Double passingYardsPerCompletion;

    public TeamSeason withPassingYardsPerCompletion(Double passingYardsPerCompletion) {
        this.passingYardsPerCompletion = passingYardsPerCompletion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Penalties")
    public Long penalties;

    public TeamSeason withPenalties(Long penalties) {
        this.penalties = penalties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyYards")
    public Long penaltyYards;

    public TeamSeason withPenaltyYards(Long penaltyYards) {
        this.penaltyYards = penaltyYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointsAgainst")
    public Long pointsAgainst;

    public TeamSeason withPointsAgainst(Long pointsAgainst) {
        this.pointsAgainst = pointsAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointsFor")
    public Long pointsFor;

    public TeamSeason withPointsFor(Long pointsFor) {
        this.pointsFor = pointsFor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntAverage")
    public Double puntAverage;

    public TeamSeason withPuntAverage(Double puntAverage) {
        this.puntAverage = puntAverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntLong")
    public Double puntLong;

    public TeamSeason withPuntLong(Double puntLong) {
        this.puntLong = puntLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnLong")
    public Double puntReturnLong;

    public TeamSeason withPuntReturnLong(Double puntReturnLong) {
        this.puntReturnLong = puntReturnLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnTouchdowns")
    public Double puntReturnTouchdowns;

    public TeamSeason withPuntReturnTouchdowns(Double puntReturnTouchdowns) {
        this.puntReturnTouchdowns = puntReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnYards")
    public Double puntReturnYards;

    public TeamSeason withPuntReturnYards(Double puntReturnYards) {
        this.puntReturnYards = puntReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnYardsPerAttempt")
    public Double puntReturnYardsPerAttempt;

    public TeamSeason withPuntReturnYardsPerAttempt(Double puntReturnYardsPerAttempt) {
        this.puntReturnYardsPerAttempt = puntReturnYardsPerAttempt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturns")
    public Double puntReturns;

    public TeamSeason withPuntReturns(Double puntReturns) {
        this.puntReturns = puntReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntYards")
    public Double puntYards;

    public TeamSeason withPuntYards(Double puntYards) {
        this.puntYards = puntYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Punts")
    public Double punts;

    public TeamSeason withPunts(Double punts) {
        this.punts = punts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterbackHurries")
    public Double quarterbackHurries;

    public TeamSeason withQuarterbackHurries(Double quarterbackHurries) {
        this.quarterbackHurries = quarterbackHurries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingLong")
    public Double receivingLong;

    public TeamSeason withReceivingLong(Double receivingLong) {
        this.receivingLong = receivingLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingTouchdowns")
    public Double receivingTouchdowns;

    public TeamSeason withReceivingTouchdowns(Double receivingTouchdowns) {
        this.receivingTouchdowns = receivingTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingYards")
    public Double receivingYards;

    public TeamSeason withReceivingYards(Double receivingYards) {
        this.receivingYards = receivingYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingYardsPerReception")
    public Double receivingYardsPerReception;

    public TeamSeason withReceivingYardsPerReception(Double receivingYardsPerReception) {
        this.receivingYardsPerReception = receivingYardsPerReception;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Receptions")
    public Double receptions;

    public TeamSeason withReceptions(Double receptions) {
        this.receptions = receptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoadLosses")
    public Long roadLosses;

    public TeamSeason withRoadLosses(Long roadLosses) {
        this.roadLosses = roadLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoadWins")
    public Long roadWins;

    public TeamSeason withRoadWins(Long roadWins) {
        this.roadWins = roadWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingAttempts")
    public Double rushingAttempts;

    public TeamSeason withRushingAttempts(Double rushingAttempts) {
        this.rushingAttempts = rushingAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingLong")
    public Double rushingLong;

    public TeamSeason withRushingLong(Double rushingLong) {
        this.rushingLong = rushingLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingTouchdowns")
    public Double rushingTouchdowns;

    public TeamSeason withRushingTouchdowns(Double rushingTouchdowns) {
        this.rushingTouchdowns = rushingTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingYards")
    public Double rushingYards;

    public TeamSeason withRushingYards(Double rushingYards) {
        this.rushingYards = rushingYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingYardsPerAttempt")
    public Double rushingYardsPerAttempt;

    public TeamSeason withRushingYardsPerAttempt(Double rushingYardsPerAttempt) {
        this.rushingYardsPerAttempt = rushingYardsPerAttempt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sacks")
    public Double sacks;

    public TeamSeason withSacks(Double sacks) {
        this.sacks = sacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Long score;

    public TeamSeason withScore(Long score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public TeamSeason withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public TeamSeason withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SoloTackles")
    public Double soloTackles;

    public TeamSeason withSoloTackles(Double soloTackles) {
        this.soloTackles = soloTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatID")
    public Long statID;

    public TeamSeason withStatID(Long statID) {
        this.statID = statID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Streak")
    public Long streak;

    public TeamSeason withStreak(Long streak) {
        this.streak = streak;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TacklesForLoss")
    public Double tacklesForLoss;

    public TeamSeason withTacklesForLoss(Double tacklesForLoss) {
        this.tacklesForLoss = tacklesForLoss;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public TeamSeason withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;

    public TeamSeason withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThirdDownAttempts")
    public Long thirdDownAttempts;

    public TeamSeason withThirdDownAttempts(Long thirdDownAttempts) {
        this.thirdDownAttempts = thirdDownAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThirdDownConversions")
    public Long thirdDownConversions;

    public TeamSeason withThirdDownConversions(Long thirdDownConversions) {
        this.thirdDownConversions = thirdDownConversions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeOfPossessionMinutes")
    public Long timeOfPossessionMinutes;

    public TeamSeason withTimeOfPossessionMinutes(Long timeOfPossessionMinutes) {
        this.timeOfPossessionMinutes = timeOfPossessionMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeOfPossessionSeconds")
    public Long timeOfPossessionSeconds;

    public TeamSeason withTimeOfPossessionSeconds(Long timeOfPossessionSeconds) {
        this.timeOfPossessionSeconds = timeOfPossessionSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public TeamSeason withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Wins")
    public Long wins;

    public TeamSeason withWins(Long wins) {
        this.wins = wins;
        return this;
    }
    
    public TeamSeason(){}
}
