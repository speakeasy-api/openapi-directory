/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Container for custom fields of an Invoice Adjustment object.
 *
 * @remarks
 *
 */
export class ProxyCreateInvoiceAdjustment extends SpeakeasyBase {
  /**
   *  The ID of the account that owns the invoice.
   *
   * @remarks
   * **Character limit**: 32 **Values**: inherited from Account.ID for the invoice owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  /**
   * The accounting code for the invoice adjustment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountingCode" })
  accountingCode?: string;

  /**
   *  The date when the invoice adjustment is applied. This date must be the same as the invoice's date or later.
   *
   * @remarks
   * **Character limit**: 29 **Values**: Leave null to automatically generate the current date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AdjustmentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  adjustmentDate?: Date;

  /**
   *  A unique string to identify an individual invoice adjustment.
   *
   * @remarks
   * **Character limit**: 255 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AdjustmentNumber" })
  adjustmentNumber?: string;

  /**
   *  The amount of the invoice adjustment.
   *
   * @remarks
   * **Character limit**: 16 **Values**: a valid currency amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount: number;

  /**
   *  Use this field to record comments about the invoice adjustment.
   *
   * @remarks
   * **Character limit**: 255 **Values**: a string of 255 characters or fewer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Comments" })
  comments?: string;

  /**
   *  The name of the account that owns the associated invoice.
   *
   * @remarks
   * **Character limit**: 50 **Values**: inherited from Account.Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerName" })
  customerName?: string;

  /**
   *  The unique account number of the customer's account.
   *
   * @remarks
   * **Character limit**: 70 **Values**: inherited from Account.AccountNumber
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerNumber" })
  customerNumber?: string;

  /**
   *  The amount that changes the balance of the associated invoice.
   *
   * @remarks
   * **Character limit**: 16 **Values**: automatically calculated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImpactAmount" })
  impactAmount?: number;

  /**
   *  The ID of the invoice associated with the adjustment. This field is only required if you don't specify a value for the `InvoiceNumber` field.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a valid invoice ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceId" })
  invoiceId?: string;

  /**
   *  The unique identification number for the associated invoice. This field is only required if you don't specify a value for the `InvoiceId` field.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a valid invoice number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceNumber" })
  invoiceNumber?: string;

  /**
   *  A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
   *
   * @remarks
   * **Character limit**: 32 **V****alues**: a valid reason code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReasonCode" })
  reasonCode?: string;

  /**
   *  A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.
   *
   * @remarks
   * **Character limit**: 100 **Values**: a string of 100 characters or fewer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReferenceId" })
  referenceId?: string;

  /**
   *  The status of the invoice adjustment. This field is only required in the Query call, but is automatically generated in other calls.
   *
   * @remarks
   * **Character limit**: 9 **Values**: `Canceled`, `Processed`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;

  /**
   *  Indicates whether the adjustment credits or debits the invoice amount.
   *
   * @remarks
   * **Character limit**: 6 **Values**: `Credit`, `Charge`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: string;
}
