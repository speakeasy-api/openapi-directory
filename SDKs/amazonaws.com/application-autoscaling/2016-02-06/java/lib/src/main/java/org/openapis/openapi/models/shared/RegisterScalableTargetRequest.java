/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RegisterScalableTargetRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCapacity")
    public Long maxCapacity;

    public RegisterScalableTargetRequest withMaxCapacity(Long maxCapacity) {
        this.maxCapacity = maxCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinCapacity")
    public Long minCapacity;

    public RegisterScalableTargetRequest withMinCapacity(Long minCapacity) {
        this.minCapacity = minCapacity;
        return this;
    }
    
    @JsonProperty("ResourceId")
    public String resourceId;

    public RegisterScalableTargetRequest withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoleARN")
    public String roleARN;

    public RegisterScalableTargetRequest withRoleARN(String roleARN) {
        this.roleARN = roleARN;
        return this;
    }
    
    @JsonProperty("ScalableDimension")
    public ScalableDimensionEnum scalableDimension;

    public RegisterScalableTargetRequest withScalableDimension(ScalableDimensionEnum scalableDimension) {
        this.scalableDimension = scalableDimension;
        return this;
    }
    
    @JsonProperty("ServiceNamespace")
    public ServiceNamespaceEnum serviceNamespace;

    public RegisterScalableTargetRequest withServiceNamespace(ServiceNamespaceEnum serviceNamespace) {
        this.serviceNamespace = serviceNamespace;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SuspendedState")
    public SuspendedState suspendedState;

    public RegisterScalableTargetRequest withSuspendedState(SuspendedState suspendedState) {
        this.suspendedState = suspendedState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;

    public RegisterScalableTargetRequest withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public RegisterScalableTargetRequest(@JsonProperty("ResourceId") String resourceId, @JsonProperty("ScalableDimension") ScalableDimensionEnum scalableDimension, @JsonProperty("ServiceNamespace") ServiceNamespaceEnum serviceNamespace) {
        this.resourceId = resourceId;
        this.scalableDimension = scalableDimension;
        this.serviceNamespace = serviceNamespace;
  }
}
