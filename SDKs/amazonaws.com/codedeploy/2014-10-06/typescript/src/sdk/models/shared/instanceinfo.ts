/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an on-premises instance.
 */
export class InstanceInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deregisterTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deregisterTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "iamSessionArn" })
  iamSessionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iamUserArn" })
  iamUserArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceArn" })
  instanceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceName" })
  instanceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "registerTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registerTime?: Date;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
