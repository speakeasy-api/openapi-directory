/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ReportUsersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.
 */
export enum ReportUsersTypeEnum {
  Active = "active",
  Inactive = "inactive",
}

export class ReportUsersRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The page number of the current page in the returned records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_number",
  })
  pageNumber?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;

  /**
   * Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: ReportUsersTypeEnum;
}

/**
 * Custom attribute(s) that have been assigned to the user.
 */
export class ReportUsers200ApplicationXMLUsersCustomAttributes extends SpeakeasyBase {
  /**
   * Identifier for the custom attribute.
   */
  @SpeakeasyMetadata()
  key?: string;

  /**
   * Name of the custom attribute.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Value of the custom attribute.
   */
  @SpeakeasyMetadata()
  value?: string;
}

export class ReportUsers200ApplicationXMLUsers extends SpeakeasyBase {
  /**
   * Custom attribute(s) that have been assigned to the user.
   */
  @SpeakeasyMetadata()
  customAttributes?: ReportUsers200ApplicationXMLUsersCustomAttributes;

  /**
   * User department.
   */
  @SpeakeasyMetadata()
  dept?: string;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * User ID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Number of meeting minutes for user.
   */
  @SpeakeasyMetadata()
  meetingMinutes?: number;

  /**
   * Number of meetings for user.
   */
  @SpeakeasyMetadata()
  meetings?: number;

  /**
   * Number of participants in meetings for user.
   */
  @SpeakeasyMetadata()
  participants?: number;

  /**
   * User type.
   */
  @SpeakeasyMetadata()
  type?: number;

  /**
   * User display name.
   */
  @SpeakeasyMetadata()
  userName?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Active or inactive hosts report returned.<br>
 * This is only available for paid account: {accountId}.
 */
export class ReportUsers200ApplicationXML extends SpeakeasyBase {
  /**
   * Start date for this report.
   */
  @SpeakeasyMetadata()
  from?: Date;

  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The page number of the current results.
   */
  @SpeakeasyMetadata()
  pageNumber?: number;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * End date for this report.
   */
  @SpeakeasyMetadata()
  to?: Date;

  /**
   * Number of meeting minutes for this range.
   */
  @SpeakeasyMetadata()
  totalMeetingMinutes?: number;

  /**
   * Number of meetings for this range.
   */
  @SpeakeasyMetadata()
  totalMeetings?: number;

  /**
   * Number of participants for this range.
   */
  @SpeakeasyMetadata()
  totalParticipants?: number;

  /**
   * The total number of all the records available across pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;

  /**
   * Array of user objects.
   */
  @SpeakeasyMetadata({ elemType: ReportUsers200ApplicationXMLUsers })
  users?: ReportUsers200ApplicationXMLUsers[];
}

/**
 * Custom attribute(s) that have been assigned to the user.
 */
export class ReportUsers200ApplicationJSONUsersCustomAttributes extends SpeakeasyBase {
  /**
   * Identifier for the custom attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Name of the custom attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Value of the custom attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class ReportUsers200ApplicationJSONUsers extends SpeakeasyBase {
  /**
   * Custom attribute(s) that have been assigned to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_attributes" })
  @Type(() => ReportUsers200ApplicationJSONUsersCustomAttributes)
  customAttributes?: ReportUsers200ApplicationJSONUsersCustomAttributes;

  /**
   * User department.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dept" })
  dept?: string;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * User ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Number of meeting minutes for user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meeting_minutes" })
  meetingMinutes?: number;

  /**
   * Number of meetings for user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meetings" })
  meetings?: number;

  /**
   * Number of participants in meetings for user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participants" })
  participants?: number;

  /**
   * User type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: number;

  /**
   * User display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Active or inactive hosts report returned.<br>
 * This is only available for paid account: {accountId}.
 */
export class ReportUsers200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date for this report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The page number of the current results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber?: number;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * End date for this report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;

  /**
   * Number of meeting minutes for this range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_meeting_minutes" })
  totalMeetingMinutes?: number;

  /**
   * Number of meetings for this range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_meetings" })
  totalMeetings?: number;

  /**
   * Number of participants for this range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_participants" })
  totalParticipants?: number;

  /**
   * The total number of all the records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;

  /**
   * Array of user objects.
   */
  @SpeakeasyMetadata({ elemType: ReportUsers200ApplicationJSONUsers })
  @Expose({ name: "users" })
  @Type(() => ReportUsers200ApplicationJSONUsers)
  users?: ReportUsers200ApplicationJSONUsers[];
}

export class ReportUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Active or inactive hosts report returned.<br>
   * This is only available for paid account: {accountId}.
   */
  @SpeakeasyMetadata()
  reportUsers200ApplicationJSONObject?: ReportUsers200ApplicationJSON;
}
