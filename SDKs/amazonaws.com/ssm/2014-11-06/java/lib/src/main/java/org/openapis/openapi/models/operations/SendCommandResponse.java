/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class SendCommandResponse {
    
    public String contentType;

    public SendCommandResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DuplicateInstanceId
     */
    
    public Object duplicateInstanceId;

    public SendCommandResponse withDuplicateInstanceId(Object duplicateInstanceId) {
        this.duplicateInstanceId = duplicateInstanceId;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;

    public SendCommandResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * InvalidDocument
     */
    
    public Object invalidDocument;

    public SendCommandResponse withInvalidDocument(Object invalidDocument) {
        this.invalidDocument = invalidDocument;
        return this;
    }
    
    /**
     * InvalidDocumentVersion
     */
    
    public Object invalidDocumentVersion;

    public SendCommandResponse withInvalidDocumentVersion(Object invalidDocumentVersion) {
        this.invalidDocumentVersion = invalidDocumentVersion;
        return this;
    }
    
    /**
     * InvalidInstanceId
     */
    
    public Object invalidInstanceId;

    public SendCommandResponse withInvalidInstanceId(Object invalidInstanceId) {
        this.invalidInstanceId = invalidInstanceId;
        return this;
    }
    
    /**
     * InvalidNotificationConfig
     */
    
    public Object invalidNotificationConfig;

    public SendCommandResponse withInvalidNotificationConfig(Object invalidNotificationConfig) {
        this.invalidNotificationConfig = invalidNotificationConfig;
        return this;
    }
    
    /**
     * InvalidOutputFolder
     */
    
    public Object invalidOutputFolder;

    public SendCommandResponse withInvalidOutputFolder(Object invalidOutputFolder) {
        this.invalidOutputFolder = invalidOutputFolder;
        return this;
    }
    
    /**
     * InvalidParameters
     */
    
    public Object invalidParameters;

    public SendCommandResponse withInvalidParameters(Object invalidParameters) {
        this.invalidParameters = invalidParameters;
        return this;
    }
    
    /**
     * InvalidRole
     */
    
    public Object invalidRole;

    public SendCommandResponse withInvalidRole(Object invalidRole) {
        this.invalidRole = invalidRole;
        return this;
    }
    
    /**
     * MaxDocumentSizeExceeded
     */
    
    public Object maxDocumentSizeExceeded;

    public SendCommandResponse withMaxDocumentSizeExceeded(Object maxDocumentSizeExceeded) {
        this.maxDocumentSizeExceeded = maxDocumentSizeExceeded;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.SendCommandResult sendCommandResult;

    public SendCommandResponse withSendCommandResult(org.openapis.openapi.models.shared.SendCommandResult sendCommandResult) {
        this.sendCommandResult = sendCommandResult;
        return this;
    }
    
    
    public Integer statusCode;

    public SendCommandResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public SendCommandResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedPlatformType
     */
    
    public Object unsupportedPlatformType;

    public SendCommandResponse withUnsupportedPlatformType(Object unsupportedPlatformType) {
        this.unsupportedPlatformType = unsupportedPlatformType;
        return this;
    }
    
    public SendCommandResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
