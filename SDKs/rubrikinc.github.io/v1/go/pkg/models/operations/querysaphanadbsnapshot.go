// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// QuerySapHanaDbSnapshotBackupTypeEnum - Filter snapshots to those of a particular backup type.
type QuerySapHanaDbSnapshotBackupTypeEnum string

const (
	QuerySapHanaDbSnapshotBackupTypeEnumFull        QuerySapHanaDbSnapshotBackupTypeEnum = "FULL"
	QuerySapHanaDbSnapshotBackupTypeEnumIncremental QuerySapHanaDbSnapshotBackupTypeEnum = "INCREMENTAL"
)

func (e QuerySapHanaDbSnapshotBackupTypeEnum) ToPointer() *QuerySapHanaDbSnapshotBackupTypeEnum {
	return &e
}

func (e *QuerySapHanaDbSnapshotBackupTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FULL":
		fallthrough
	case "INCREMENTAL":
		*e = QuerySapHanaDbSnapshotBackupTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QuerySapHanaDbSnapshotBackupTypeEnum: %v", v)
	}
}

type QuerySapHanaDbSnapshotRequest struct {
	// Filter snapshots to those taken on or after this time. The date-time string should be in ISO8601 format, such as "2016-01-01T01:23:45.678".
	AfterTime *time.Time `queryParam:"style=form,explode=true,name=after_time"`
	// Filter snapshots to those of a particular backup type.
	BackupType *QuerySapHanaDbSnapshotBackupTypeEnum `queryParam:"style=form,explode=true,name=backup_type"`
	// Filter snapshots to those taken before or on this time. The date-time string should be in ISO8601 format, such as "2016-01-01T01:23:45.678".
	BeforeTime *time.Time `queryParam:"style=form,explode=true,name=before_time"`
	// ID assigned to a SAP HANA database object.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type QuerySapHanaDbSnapshotResponse struct {
	ContentType string
	// Returns summary information for all snapshots.
	SapHanaDatabaseSnapshotSummaryListResponse *shared.SapHanaDatabaseSnapshotSummaryListResponse
	StatusCode                                 int
	RawResponse                                *http.Response
}
