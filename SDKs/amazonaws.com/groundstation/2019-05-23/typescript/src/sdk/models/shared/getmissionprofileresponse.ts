/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KmsKey } from "./kmskey";
import { Expose, Type } from "class-transformer";

/**
 * <p/>
 */
export class GetMissionProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contactPostPassDurationSeconds" })
  contactPostPassDurationSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "contactPrePassDurationSeconds" })
  contactPrePassDurationSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "dataflowEdges" })
  dataflowEdges?: string[][];

  @SpeakeasyMetadata()
  @Expose({ name: "minimumViableContactDurationSeconds" })
  minimumViableContactDurationSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "missionProfileArn" })
  missionProfileArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "missionProfileId" })
  missionProfileId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "streamsKmsKey" })
  @Type(() => KmsKey)
  streamsKmsKey?: KmsKey;

  @SpeakeasyMetadata()
  @Expose({ name: "streamsKmsRole" })
  streamsKmsRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "trackingConfigArn" })
  trackingConfigArn?: string;
}
