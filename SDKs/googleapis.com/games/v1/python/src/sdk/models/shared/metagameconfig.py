"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import playerlevel as shared_playerlevel
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetagameConfig:
    r"""The metagame config resource"""
    
    current_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentVersion'), 'exclude': lambda f: f is None }})
    r"""Current version of the metagame configuration data. When this data is updated, the version number will be increased by one."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`."""  
    player_levels: Optional[list[shared_playerlevel.PlayerLevel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playerLevels'), 'exclude': lambda f: f is None }})
    r"""The list of player levels."""  
    