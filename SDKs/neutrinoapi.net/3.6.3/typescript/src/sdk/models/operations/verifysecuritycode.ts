/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class VerifySecurityCodeRequest extends SpeakeasyBase {
  /**
   * If set then enable additional brute-force protection by limiting the number of attempts by the supplied value. This can be set to any unique identifier you would like to limit by, for example a hash of the users email, phone number or IP address. Requests to this API will be ignored after approximately 10 failed verification attempts
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=limit-by",
  })
  limitBy?: string;

  /**
   * The security code to verify
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=security-code",
  })
  securityCode: string;
}

export class VerifySecurityCodeResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  verifySecurityCodeResponse?: shared.VerifySecurityCodeResponse;
}
