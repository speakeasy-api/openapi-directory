/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SinkEnumSinkTypeEnum } from "./sinkenumsinktypeenum";
import { SinkEnumStatusEnum } from "./sinkenumstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class EventsV1Sink extends SpeakeasyBase {
  /**
   * The date that this Sink was created, given in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date that this Sink was updated, given in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * A human readable description for the Sink
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Contains a dictionary of URL links to nested resources of this Sink.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * A 34 character string that uniquely identifies this Sink.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The information required for Twilio to connect to the provided Sink encoded as JSON.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sink_configuration" })
  sinkConfiguration?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "sink_type" })
  sinkType?: SinkEnumSinkTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: SinkEnumStatusEnum;

  /**
   * The URL of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
