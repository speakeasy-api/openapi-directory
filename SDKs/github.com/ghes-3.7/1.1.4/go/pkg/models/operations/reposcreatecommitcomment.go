// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposCreateCommitCommentPathParams struct {
	// The SHA of the commit.
	CommitSha string `pathParam:"style=simple,explode=false,name=commit_sha"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposCreateCommitCommentRequestBody struct {
	// The contents of the comment.
	Body string `json:"body"`
	// **Deprecated**. Use **position** parameter instead. Line number in the file to comment on.
	Line *int64 `json:"line,omitempty"`
	// Relative path of the file to comment on.
	Path *string `json:"path,omitempty"`
	// Line index in the diff to comment on.
	Position *int64 `json:"position,omitempty"`
}

type ReposCreateCommitCommentRequest struct {
	PathParams ReposCreateCommitCommentPathParams
	Request    ReposCreateCommitCommentRequestBody `request:"mediaType=application/json"`
}

type ReposCreateCommitCommentResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// Response
	CommitComment *shared.CommitComment
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
