/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DeleteMountTargetResponse {
    /**
     * BadRequest
     */
    
    public Object badRequest;

    public DeleteMountTargetResponse withBadRequest(Object badRequest) {
        this.badRequest = badRequest;
        return this;
    }
    
    
    public String contentType;

    public DeleteMountTargetResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DependencyTimeout
     */
    
    public Object dependencyTimeout;

    public DeleteMountTargetResponse withDependencyTimeout(Object dependencyTimeout) {
        this.dependencyTimeout = dependencyTimeout;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;

    public DeleteMountTargetResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * MountTargetNotFound
     */
    
    public Object mountTargetNotFound;

    public DeleteMountTargetResponse withMountTargetNotFound(Object mountTargetNotFound) {
        this.mountTargetNotFound = mountTargetNotFound;
        return this;
    }
    
    
    public Integer statusCode;

    public DeleteMountTargetResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DeleteMountTargetResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public DeleteMountTargetResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
