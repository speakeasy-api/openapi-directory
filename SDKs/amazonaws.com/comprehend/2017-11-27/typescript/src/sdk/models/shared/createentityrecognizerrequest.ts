/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityRecognizerInputDataConfig } from "./entityrecognizerinputdataconfig";
import { LanguageCodeEnum } from "./languagecodeenum";
import { Tag } from "./tag";
import { VpcConfig } from "./vpcconfig";
import { Expose, Type } from "class-transformer";

export class CreateEntityRecognizerRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataAccessRoleArn" })
  dataAccessRoleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataConfig" })
  @Type(() => EntityRecognizerInputDataConfig)
  inputDataConfig: EntityRecognizerInputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "LanguageCode" })
  languageCode: LanguageCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelKmsKeyId" })
  modelKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPolicy" })
  modelPolicy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecognizerName" })
  recognizerName: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VersionName" })
  versionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VolumeKmsKeyId" })
  volumeKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfig" })
  @Type(() => VpcConfig)
  vpcConfig?: VpcConfig;
}
