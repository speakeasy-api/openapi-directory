/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RouterApplianceInstance } from "./routerapplianceinstance";
import { Expose, Type } from "class-transformer";

/**
 * A Spoke is an abstraction of a network attachment being attached to a Hub. A Spoke can be underlying a VPN tunnel, a VLAN (interconnect) attachment, a Router appliance, etc.
 */
export class SpokeInput extends SpeakeasyBase {
  /**
   * The time when the Spoke was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Short description of the spoke resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The resource URL of the hub resource that the spoke is attached to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hub" })
  hub?: string;

  /**
   * User-defined labels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The URIs of linked interconnect attachment resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedInterconnectAttachments" })
  linkedInterconnectAttachments?: string[];

  /**
   * The URIs of linked Router appliance resources
   */
  @SpeakeasyMetadata({ elemType: RouterApplianceInstance })
  @Expose({ name: "linkedRouterApplianceInstances" })
  @Type(() => RouterApplianceInstance)
  linkedRouterApplianceInstances?: RouterApplianceInstance[];

  /**
   * The URIs of linked VPN tunnel resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedVpnTunnels" })
  linkedVpnTunnels?: string[];

  /**
   * Immutable. The name of a Spoke resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The time when the Spoke was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * Output only. The current lifecycle state of this Hub.
 */
export enum SpokeStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Active = "ACTIVE",
  Deleting = "DELETING",
  Updating = "UPDATING",
}

/**
 * A Spoke is an abstraction of a network attachment being attached to a Hub. A Spoke can be underlying a VPN tunnel, a VLAN (interconnect) attachment, a Router appliance, etc.
 */
export class Spoke extends SpeakeasyBase {
  /**
   * The time when the Spoke was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Short description of the spoke resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The resource URL of the hub resource that the spoke is attached to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hub" })
  hub?: string;

  /**
   * User-defined labels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The URIs of linked interconnect attachment resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedInterconnectAttachments" })
  linkedInterconnectAttachments?: string[];

  /**
   * The URIs of linked Router appliance resources
   */
  @SpeakeasyMetadata({ elemType: RouterApplianceInstance })
  @Expose({ name: "linkedRouterApplianceInstances" })
  @Type(() => RouterApplianceInstance)
  linkedRouterApplianceInstances?: RouterApplianceInstance[];

  /**
   * The URIs of linked VPN tunnel resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedVpnTunnels" })
  linkedVpnTunnels?: string[];

  /**
   * Immutable. The name of a Spoke resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The current lifecycle state of this Hub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: SpokeStateEnum;

  /**
   * Output only. Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uniqueId" })
  uniqueId?: string;

  /**
   * The time when the Spoke was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
