// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum - The type of the scope.
type DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum string

const (
	DeleteIpamScopeResultIpamScopeIpamScopeTypeEnumPublic  DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum = "public"
	DeleteIpamScopeResultIpamScopeIpamScopeTypeEnumPrivate DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum = "private"
)

func (e DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum) ToPointer() *DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum {
	return &e
}

func (e *DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "private":
		*e = DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum: %v", v)
	}
}

// DeleteIpamScopeResultIpamScopeStateEnum - The state of the IPAM scope.
type DeleteIpamScopeResultIpamScopeStateEnum string

const (
	DeleteIpamScopeResultIpamScopeStateEnumCreateInProgress  DeleteIpamScopeResultIpamScopeStateEnum = "create-in-progress"
	DeleteIpamScopeResultIpamScopeStateEnumCreateComplete    DeleteIpamScopeResultIpamScopeStateEnum = "create-complete"
	DeleteIpamScopeResultIpamScopeStateEnumCreateFailed      DeleteIpamScopeResultIpamScopeStateEnum = "create-failed"
	DeleteIpamScopeResultIpamScopeStateEnumModifyInProgress  DeleteIpamScopeResultIpamScopeStateEnum = "modify-in-progress"
	DeleteIpamScopeResultIpamScopeStateEnumModifyComplete    DeleteIpamScopeResultIpamScopeStateEnum = "modify-complete"
	DeleteIpamScopeResultIpamScopeStateEnumModifyFailed      DeleteIpamScopeResultIpamScopeStateEnum = "modify-failed"
	DeleteIpamScopeResultIpamScopeStateEnumDeleteInProgress  DeleteIpamScopeResultIpamScopeStateEnum = "delete-in-progress"
	DeleteIpamScopeResultIpamScopeStateEnumDeleteComplete    DeleteIpamScopeResultIpamScopeStateEnum = "delete-complete"
	DeleteIpamScopeResultIpamScopeStateEnumDeleteFailed      DeleteIpamScopeResultIpamScopeStateEnum = "delete-failed"
	DeleteIpamScopeResultIpamScopeStateEnumIsolateInProgress DeleteIpamScopeResultIpamScopeStateEnum = "isolate-in-progress"
	DeleteIpamScopeResultIpamScopeStateEnumIsolateComplete   DeleteIpamScopeResultIpamScopeStateEnum = "isolate-complete"
	DeleteIpamScopeResultIpamScopeStateEnumRestoreInProgress DeleteIpamScopeResultIpamScopeStateEnum = "restore-in-progress"
)

func (e DeleteIpamScopeResultIpamScopeStateEnum) ToPointer() *DeleteIpamScopeResultIpamScopeStateEnum {
	return &e
}

func (e *DeleteIpamScopeResultIpamScopeStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "create-in-progress":
		fallthrough
	case "create-complete":
		fallthrough
	case "create-failed":
		fallthrough
	case "modify-in-progress":
		fallthrough
	case "modify-complete":
		fallthrough
	case "modify-failed":
		fallthrough
	case "delete-in-progress":
		fallthrough
	case "delete-complete":
		fallthrough
	case "delete-failed":
		fallthrough
	case "isolate-in-progress":
		fallthrough
	case "isolate-complete":
		fallthrough
	case "restore-in-progress":
		*e = DeleteIpamScopeResultIpamScopeStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamScopeResultIpamScopeStateEnum: %v", v)
	}
}

// DeleteIpamScopeResultIpamScopeTags - Describes a tag.
type DeleteIpamScopeResultIpamScopeTags struct {
	Key   *string
	Value *string
}

// DeleteIpamScopeResultIpamScope - Information about the results of the deletion.
type DeleteIpamScopeResultIpamScope struct {
	Description   *string
	IpamArn       *string
	IpamRegion    *string
	IpamScopeArn  *string
	IpamScopeID   *string
	IpamScopeType *DeleteIpamScopeResultIpamScopeIpamScopeTypeEnum
	IsDefault     *bool
	OwnerID       *string
	PoolCount     *int64
	State         *DeleteIpamScopeResultIpamScopeStateEnum
	Tags          []DeleteIpamScopeResultIpamScopeTags
}

// DeleteIpamScopeResult - Success
type DeleteIpamScopeResult struct {
	IpamScope *DeleteIpamScopeResultIpamScope
}
