/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Spot - An audio spot for insertion.
 */
public class Spot {
    /**
     * The date the spot was created. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;

    public Spot withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The length (duration) of the spot in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Integer duration;

    public Spot withDuration(Integer duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * The name of the audio content file. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;

    public Spot withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * The size of the audio content file in bytes. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileSize")
    public Long fileSize;

    public Spot withFileSize(Long fileSize) {
        this.fileSize = fileSize;
        return this;
    }
    
    /**
     * The unique ID of the spot. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Spot withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The date the spot was last modified/updated. Automatically updated on any write operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModifiedDate")
    public OffsetDateTime lastModifiedDate;

    public Spot withLastModifiedDate(OffsetDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
        return this;
    }
    
    /**
     * The date the spot audio file was uploaded. Automatically updated on upload.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUploadedDate")
    public OffsetDateTime lastUploadedDate;

    public Spot withLastUploadedDate(OffsetDateTime lastUploadedDate) {
        this.lastUploadedDate = lastUploadedDate;
        return this;
    }
    
    /**
     * The unique name of the spot
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Spot withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Miscellaneous notes about the spot
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public Spot withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The original name of the audio content file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalFileName")
    public String originalFileName;

    public Spot withOriginalFileName(String originalFileName) {
        this.originalFileName = originalFileName;
        return this;
    }
    
    public Spot(){}
}
