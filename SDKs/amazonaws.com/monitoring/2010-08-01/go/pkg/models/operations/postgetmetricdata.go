// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetMetricDataActionEnum
type POSTGetMetricDataActionEnum string

const (
	POSTGetMetricDataActionEnumGetMetricData POSTGetMetricDataActionEnum = "GetMetricData"
)

func (e POSTGetMetricDataActionEnum) ToPointer() *POSTGetMetricDataActionEnum {
	return &e
}

func (e *POSTGetMetricDataActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetMetricData":
		*e = POSTGetMetricDataActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetMetricDataActionEnum: %v", v)
	}
}

// POSTGetMetricDataVersionEnum
type POSTGetMetricDataVersionEnum string

const (
	POSTGetMetricDataVersionEnumTwoThousandAndTen0801 POSTGetMetricDataVersionEnum = "2010-08-01"
)

func (e POSTGetMetricDataVersionEnum) ToPointer() *POSTGetMetricDataVersionEnum {
	return &e
}

func (e *POSTGetMetricDataVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = POSTGetMetricDataVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetMetricDataVersionEnum: %v", v)
	}
}

type POSTGetMetricDataRequest struct {
	Action POSTGetMetricDataActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxDatapoints *string `queryParam:"style=form,explode=true,name=MaxDatapoints"`
	// Pagination token
	NextToken         *string                      `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                       `request:"mediaType=text/xml"`
	Version           POSTGetMetricDataVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetMetricDataResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
