"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import calllogshalresponse as shared_calllogshalresponse
from ..shared import validationerrorsresponse as shared_validationerrorsresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetCallLogsSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class GetCallLogsDirectionEnum(str, Enum):
    r"""Filter by call direction."""
    INBOUND = 'Inbound'
    OUTBOUND = 'Outbound'


@dataclasses.dataclass
class GetCallLogsRequest:
    
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'account_id', 'style': 'simple', 'explode': False }})
    r"""The Vonage Business Cloud account ID"""  
    page: float = dataclasses.field(metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Current page number"""  
    page_size: float = dataclasses.field(metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""Number of records per page"""  
    start_gte: str = dataclasses.field(metadata={'query_param': { 'field_name': 'start:gte', 'style': 'form', 'explode': True }})
    r"""Filter records by start date (greater equal or equal to)"""  
    start_lte: str = dataclasses.field(metadata={'query_param': { 'field_name': 'start:lte', 'style': 'form', 'explode': True }})
    r"""Filter records by start date (less equal or equal to)"""  
    destination_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'destination_user', 'style': 'form', 'explode': True }})
    r"""Filter by destination user"""  
    direction: Optional[GetCallLogsDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""Filter by call direction."""  
    end_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end:gte', 'style': 'form', 'explode': True }})
    r"""Filter records by end date (greater equal or equal to)"""  
    end_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end:lte', 'style': 'form', 'explode': True }})
    r"""Filter records by end date (less equal or equal to)"""  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Filter by source number"""  
    source_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'source_user', 'style': 'form', 'explode': True }})
    r"""Filter by source user"""  
    to: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""Filter by called number"""  
    

@dataclasses.dataclass
class GetCallLogsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    call_logs_hal_response: Optional[shared_calllogshalresponse.CallLogsHalResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    validation_errors_response: Optional[shared_validationerrorsresponse.ValidationErrorsResponse] = dataclasses.field(default=None)
    r"""Invalid parameters given"""  
    