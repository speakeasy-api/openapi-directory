// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum - Replication type to which to update source server.
type UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum string

const (
	UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnumAgentBased       UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum = "AGENT_BASED"
	UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnumSnapshotShipping UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum = "SNAPSHOT_SHIPPING"
)

func (e *UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AGENT_BASED":
		fallthrough
	case "SNAPSHOT_SHIPPING":
		*e = UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum: %s", s)
	}
}

type UpdateSourceServerReplicationTypeRequestBody struct {
	// Replication type to which to update source server.
	ReplicationType UpdateSourceServerReplicationTypeRequestBodyReplicationTypeEnum `json:"replicationType"`
	// ID of source server on which to update replication type.
	SourceServerID string `json:"sourceServerID"`
}

type UpdateSourceServerReplicationTypeRequest struct {
	RequestBody       UpdateSourceServerReplicationTypeRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateSourceServerReplicationTypeResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	SourceServer *shared.SourceServer
	StatusCode   int
	RawResponse  *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
