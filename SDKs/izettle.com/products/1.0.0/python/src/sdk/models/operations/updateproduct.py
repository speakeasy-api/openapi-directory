"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import fullproductupdaterequest as shared_fullproductupdaterequest
from typing import Optional


@dataclasses.dataclass
class UpdateProductSecurity:
    
    zettle_oauth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class UpdateProductRequest:
    
    full_product_update_request: shared_fullproductupdaterequest.FullProductUpdateRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    organization_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationUuid', 'style': 'simple', 'explode': False }})  
    product_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'productUuid', 'style': 'simple', 'explode': False }})  
    if_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-Match', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class UpdateProductResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Invalid request body"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    