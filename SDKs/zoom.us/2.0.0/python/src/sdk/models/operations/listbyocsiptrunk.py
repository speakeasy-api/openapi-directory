"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListBYOCSIPTrunkSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListBYOCSIPTrunkRequest:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    

@dataclasses.dataclass
class ListBYOCSIPTrunk200ApplicationXMLByocSipTrunk:
    
    carrier: Optional[str] = dataclasses.field(default=None)
    r"""Name of the carrier."""  
    carrier_account: Optional[str] = dataclasses.field(default=None)
    r"""The account associated to the carrier."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""The unique SIP Trunk ID."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""The display name of the SIP Trunk."""  
    region: Optional[str] = dataclasses.field(default=None)
    r"""The region of the carrier."""  
    sbc_label: Optional[str] = dataclasses.field(default=None)
    r"""The Session Border Controller (SBC) routing label."""  
    

@dataclasses.dataclass
class ListBYOCSIPTrunk200ApplicationXML:
    r"""**HTTP Status Codes**: `200`<br>
    OK.
    """
    
    byoc_sip_trunk: Optional[list[ListBYOCSIPTrunk200ApplicationXMLByocSipTrunk]] = dataclasses.field(default=None)  
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is **15 minutes**."""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""The number of records returned within a single API call. The default is **30**, and the maximum is **100**."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListBYOCSIPTrunk200ApplicationJSONByocSipTrunk:
    
    carrier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier'), 'exclude': lambda f: f is None }})
    r"""Name of the carrier."""  
    carrier_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_account'), 'exclude': lambda f: f is None }})
    r"""The account associated to the carrier."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique SIP Trunk ID."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The display name of the SIP Trunk."""  
    region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""The region of the carrier."""  
    sbc_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sbc_label'), 'exclude': lambda f: f is None }})
    r"""The Session Border Controller (SBC) routing label."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListBYOCSIPTrunk200ApplicationJSON:
    r"""**HTTP Status Codes**: `200`<br>
    OK.
    """
    
    byoc_sip_trunk: Optional[list[ListBYOCSIPTrunk200ApplicationJSONByocSipTrunk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('byoc_sip_trunk'), 'exclude': lambda f: f is None }})  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is **15 minutes**."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned within a single API call. The default is **30**, and the maximum is **100**."""  
    

@dataclasses.dataclass
class ListBYOCSIPTrunkResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_byocsip_trunk_200_application_json_object: Optional[ListBYOCSIPTrunk200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Codes**: `200`<br>
    OK.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    