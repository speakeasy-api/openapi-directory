/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BankAccount } from "./bankaccount";
import { EmployeeStatusEnum } from "./employeestatusenum";
import { HomeAddress } from "./homeaddress";
import { LeaveBalance } from "./leavebalance";
import { LeaveLine } from "./leaveline";
import { OpeningBalances } from "./openingbalances";
import { PayTemplate } from "./paytemplate";
import { SuperMembership } from "./supermembership";
import { TaxDeclaration, TaxDeclarationInput } from "./taxdeclaration";
import { ValidationError } from "./validationerror";
import { Expose, Type } from "class-transformer";

/**
 * The employee’s gender. See Employee Gender
 */
export enum EmployeeGenderEnum {
  N = "N",
  M = "M",
  F = "F",
  I = "I",
}

export class EmployeeInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: BankAccount })
  @Expose({ name: "BankAccounts" })
  @Type(() => BankAccount)
  bankAccounts?: BankAccount[];

  /**
   * Employees classification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Classification" })
  classification?: string;

  /**
   * Date of birth of the employee (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DateOfBirth" })
  dateOfBirth: string;

  /**
   * The email address for the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Email" })
  email?: string;

  /**
   * The Employee Group allows you to report on payroll expenses and liabilities for each group of employees
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeGroupName" })
  employeeGroupName?: string;

  /**
   * Xero unique identifier for an Employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeID" })
  employeeID?: string;

  /**
   * First name of employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FirstName" })
  firstName: string;

  /**
   * The employee’s gender. See Employee Gender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Gender" })
  gender?: EmployeeGenderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "HomeAddress" })
  @Type(() => HomeAddress)
  homeAddress?: HomeAddress;

  /**
   * Authorised to approve other employees' leave requests
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAuthorisedToApproveLeave" })
  isAuthorisedToApproveLeave?: boolean;

  /**
   * Authorised to approve timesheets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAuthorisedToApproveTimesheets" })
  isAuthorisedToApproveTimesheets?: boolean;

  /**
   * JobTitle of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "JobTitle" })
  jobTitle?: string;

  /**
   * Last name of employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastName" })
  lastName: string;

  @SpeakeasyMetadata({ elemType: LeaveBalance })
  @Expose({ name: "LeaveBalances" })
  @Type(() => LeaveBalance)
  leaveBalances?: LeaveBalance[];

  @SpeakeasyMetadata({ elemType: LeaveLine })
  @Expose({ name: "LeaveLines" })
  @Type(() => LeaveLine)
  leaveLines?: LeaveLine[];

  /**
   * Middle name(s) of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MiddleNames" })
  middleNames?: string;

  /**
   * Employee mobile number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Mobile" })
  mobile?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpeningBalances" })
  @Type(() => OpeningBalances)
  openingBalances?: OpeningBalances;

  /**
   * Xero unique identifier for earnings rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OrdinaryEarningsRateID" })
  ordinaryEarningsRateID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PayTemplate" })
  @Type(() => PayTemplate)
  payTemplate?: PayTemplate;

  /**
   * Xero unique identifier for payroll calendar for the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayrollCalendarID" })
  payrollCalendarID?: string;

  /**
   * Employee phone number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Phone" })
  phone?: string;

  /**
   * Start date for an employee (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;

  /**
   * Employee Status Types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: EmployeeStatusEnum;

  @SpeakeasyMetadata({ elemType: SuperMembership })
  @Expose({ name: "SuperMemberships" })
  @Type(() => SuperMembership)
  superMemberships?: SuperMembership[];

  @SpeakeasyMetadata()
  @Expose({ name: "TaxDeclaration" })
  @Type(() => TaxDeclarationInput)
  taxDeclaration?: TaxDeclarationInput;

  /**
   * Employee Termination Date (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TerminationDate" })
  terminationDate?: string;

  /**
   * Title of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;

  /**
   * Employee’s twitter name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TwitterUserName" })
  twitterUserName?: string;

  /**
   * Displays array of validation error messages from the API
   */
  @SpeakeasyMetadata({ elemType: ValidationError })
  @Expose({ name: "ValidationErrors" })
  @Type(() => ValidationError)
  validationErrors?: ValidationError[];
}

export class Employee extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: BankAccount })
  @Expose({ name: "BankAccounts" })
  @Type(() => BankAccount)
  bankAccounts?: BankAccount[];

  /**
   * Employees classification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Classification" })
  classification?: string;

  /**
   * Date of birth of the employee (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DateOfBirth" })
  dateOfBirth: string;

  /**
   * The email address for the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Email" })
  email?: string;

  /**
   * The Employee Group allows you to report on payroll expenses and liabilities for each group of employees
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeGroupName" })
  employeeGroupName?: string;

  /**
   * Xero unique identifier for an Employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeID" })
  employeeID?: string;

  /**
   * First name of employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FirstName" })
  firstName: string;

  /**
   * The employee’s gender. See Employee Gender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Gender" })
  gender?: EmployeeGenderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "HomeAddress" })
  @Type(() => HomeAddress)
  homeAddress?: HomeAddress;

  /**
   * Authorised to approve other employees' leave requests
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAuthorisedToApproveLeave" })
  isAuthorisedToApproveLeave?: boolean;

  /**
   * Authorised to approve timesheets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAuthorisedToApproveTimesheets" })
  isAuthorisedToApproveTimesheets?: boolean;

  /**
   * JobTitle of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "JobTitle" })
  jobTitle?: string;

  /**
   * Last name of employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastName" })
  lastName: string;

  @SpeakeasyMetadata({ elemType: LeaveBalance })
  @Expose({ name: "LeaveBalances" })
  @Type(() => LeaveBalance)
  leaveBalances?: LeaveBalance[];

  @SpeakeasyMetadata({ elemType: LeaveLine })
  @Expose({ name: "LeaveLines" })
  @Type(() => LeaveLine)
  leaveLines?: LeaveLine[];

  /**
   * Middle name(s) of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MiddleNames" })
  middleNames?: string;

  /**
   * Employee mobile number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Mobile" })
  mobile?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpeningBalances" })
  @Type(() => OpeningBalances)
  openingBalances?: OpeningBalances;

  /**
   * Xero unique identifier for earnings rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OrdinaryEarningsRateID" })
  ordinaryEarningsRateID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PayTemplate" })
  @Type(() => PayTemplate)
  payTemplate?: PayTemplate;

  /**
   * Xero unique identifier for payroll calendar for the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayrollCalendarID" })
  payrollCalendarID?: string;

  /**
   * Employee phone number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Phone" })
  phone?: string;

  /**
   * Start date for an employee (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;

  /**
   * Employee Status Types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: EmployeeStatusEnum;

  @SpeakeasyMetadata({ elemType: SuperMembership })
  @Expose({ name: "SuperMemberships" })
  @Type(() => SuperMembership)
  superMemberships?: SuperMembership[];

  @SpeakeasyMetadata()
  @Expose({ name: "TaxDeclaration" })
  @Type(() => TaxDeclaration)
  taxDeclaration?: TaxDeclaration;

  /**
   * Employee Termination Date (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TerminationDate" })
  terminationDate?: string;

  /**
   * Title of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;

  /**
   * Employee’s twitter name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TwitterUserName" })
  twitterUserName?: string;

  /**
   * Last modified timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDateUTC" })
  updatedDateUTC?: string;

  /**
   * Displays array of validation error messages from the API
   */
  @SpeakeasyMetadata({ elemType: ValidationError })
  @Expose({ name: "ValidationErrors" })
  @Type(() => ValidationError)
  validationErrors?: ValidationError[];
}
