// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RequestAllSystemRescueKeyPairsXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type RequestAllSystemRescueKeyPairsXSdsDateFormatEnum string

const (
	RequestAllSystemRescueKeyPairsXSdsDateFormatEnumUtc    RequestAllSystemRescueKeyPairsXSdsDateFormatEnum = "UTC"
	RequestAllSystemRescueKeyPairsXSdsDateFormatEnumLocal  RequestAllSystemRescueKeyPairsXSdsDateFormatEnum = "LOCAL"
	RequestAllSystemRescueKeyPairsXSdsDateFormatEnumOffset RequestAllSystemRescueKeyPairsXSdsDateFormatEnum = "OFFSET"
	RequestAllSystemRescueKeyPairsXSdsDateFormatEnumEpoch  RequestAllSystemRescueKeyPairsXSdsDateFormatEnum = "EPOCH"
	RequestAllSystemRescueKeyPairsXSdsDateFormatEnumLeet   RequestAllSystemRescueKeyPairsXSdsDateFormatEnum = "LEET"
)

func (e RequestAllSystemRescueKeyPairsXSdsDateFormatEnum) ToPointer() *RequestAllSystemRescueKeyPairsXSdsDateFormatEnum {
	return &e
}

func (e *RequestAllSystemRescueKeyPairsXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = RequestAllSystemRescueKeyPairsXSdsDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAllSystemRescueKeyPairsXSdsDateFormatEnum: %v", v)
	}
}

type RequestAllSystemRescueKeyPairsRequest struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *RequestAllSystemRescueKeyPairsXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
}

type RequestAllSystemRescueKeyPairsResponse struct {
	ContentType string
	// Unauthorized
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// OK
	UserKeyPairContainers []shared.UserKeyPairContainer
}
