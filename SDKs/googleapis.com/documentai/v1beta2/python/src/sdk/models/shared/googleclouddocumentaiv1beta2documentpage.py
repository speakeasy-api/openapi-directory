"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1beta2documentpageblock as shared_googleclouddocumentaiv1beta2documentpageblock
from ..shared import googleclouddocumentaiv1beta2documentpagedetectedbarcode as shared_googleclouddocumentaiv1beta2documentpagedetectedbarcode
from ..shared import googleclouddocumentaiv1beta2documentpagedetectedlanguage as shared_googleclouddocumentaiv1beta2documentpagedetectedlanguage
from ..shared import googleclouddocumentaiv1beta2documentpagedimension as shared_googleclouddocumentaiv1beta2documentpagedimension
from ..shared import googleclouddocumentaiv1beta2documentpageformfield as shared_googleclouddocumentaiv1beta2documentpageformfield
from ..shared import googleclouddocumentaiv1beta2documentpageimage as shared_googleclouddocumentaiv1beta2documentpageimage
from ..shared import googleclouddocumentaiv1beta2documentpageimagequalityscores as shared_googleclouddocumentaiv1beta2documentpageimagequalityscores
from ..shared import googleclouddocumentaiv1beta2documentpagelayout as shared_googleclouddocumentaiv1beta2documentpagelayout
from ..shared import googleclouddocumentaiv1beta2documentpageline as shared_googleclouddocumentaiv1beta2documentpageline
from ..shared import googleclouddocumentaiv1beta2documentpagematrix as shared_googleclouddocumentaiv1beta2documentpagematrix
from ..shared import googleclouddocumentaiv1beta2documentpageparagraph as shared_googleclouddocumentaiv1beta2documentpageparagraph
from ..shared import googleclouddocumentaiv1beta2documentpagesymbol as shared_googleclouddocumentaiv1beta2documentpagesymbol
from ..shared import googleclouddocumentaiv1beta2documentpagetable as shared_googleclouddocumentaiv1beta2documentpagetable
from ..shared import googleclouddocumentaiv1beta2documentpagetoken as shared_googleclouddocumentaiv1beta2documentpagetoken
from ..shared import googleclouddocumentaiv1beta2documentpagevisualelement as shared_googleclouddocumentaiv1beta2documentpagevisualelement
from ..shared import googleclouddocumentaiv1beta2documentprovenance as shared_googleclouddocumentaiv1beta2documentprovenance
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1beta2DocumentPage:
    r"""A page in a Document."""
    
    blocks: Optional[list[shared_googleclouddocumentaiv1beta2documentpageblock.GoogleCloudDocumentaiV1beta2DocumentPageBlock]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blocks'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."""  
    detected_barcodes: Optional[list[shared_googleclouddocumentaiv1beta2documentpagedetectedbarcode.GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectedBarcodes'), 'exclude': lambda f: f is None }})
    r"""A list of detected barcodes."""  
    detected_languages: Optional[list[shared_googleclouddocumentaiv1beta2documentpagedetectedlanguage.GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectedLanguages'), 'exclude': lambda f: f is None }})
    r"""A list of detected languages together with confidence."""  
    dimension: Optional[shared_googleclouddocumentaiv1beta2documentpagedimension.GoogleCloudDocumentaiV1beta2DocumentPageDimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension'), 'exclude': lambda f: f is None }})
    r"""Dimension for the page."""  
    form_fields: Optional[list[shared_googleclouddocumentaiv1beta2documentpageformfield.GoogleCloudDocumentaiV1beta2DocumentPageFormField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formFields'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected form fields on the page."""  
    image: Optional[shared_googleclouddocumentaiv1beta2documentpageimage.GoogleCloudDocumentaiV1beta2DocumentPageImage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Rendered image contents for this page."""  
    image_quality_scores: Optional[shared_googleclouddocumentaiv1beta2documentpageimagequalityscores.GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageQualityScores'), 'exclude': lambda f: f is None }})
    r"""Image Quality Scores for the page image"""  
    layout: Optional[shared_googleclouddocumentaiv1beta2documentpagelayout.GoogleCloudDocumentaiV1beta2DocumentPageLayout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layout'), 'exclude': lambda f: f is None }})
    r"""Visual element describing a layout unit on a page."""  
    lines: Optional[list[shared_googleclouddocumentaiv1beta2documentpageline.GoogleCloudDocumentaiV1beta2DocumentPageLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lines'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageNumber'), 'exclude': lambda f: f is None }})
    r"""1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."""  
    paragraphs: Optional[list[shared_googleclouddocumentaiv1beta2documentpageparagraph.GoogleCloudDocumentaiV1beta2DocumentPageParagraph]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraphs'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."""  
    provenance: Optional[shared_googleclouddocumentaiv1beta2documentprovenance.GoogleCloudDocumentaiV1beta2DocumentProvenance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provenance'), 'exclude': lambda f: f is None }})
    r"""Structure to identify provenance relationships between annotations in different revisions."""  
    symbols: Optional[list[shared_googleclouddocumentaiv1beta2documentpagesymbol.GoogleCloudDocumentaiV1beta2DocumentPageSymbol]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbols'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected symbols on the page."""  
    tables: Optional[list[shared_googleclouddocumentaiv1beta2documentpagetable.GoogleCloudDocumentaiV1beta2DocumentPageTable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tables'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected tables on the page."""  
    tokens: Optional[list[shared_googleclouddocumentaiv1beta2documentpagetoken.GoogleCloudDocumentaiV1beta2DocumentPageToken]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokens'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected tokens on the page."""  
    transforms: Optional[list[shared_googleclouddocumentaiv1beta2documentpagematrix.GoogleCloudDocumentaiV1beta2DocumentPageMatrix]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transforms'), 'exclude': lambda f: f is None }})
    r"""Transformation matrices that were applied to the original document image to produce Page.image."""  
    visual_elements: Optional[list[shared_googleclouddocumentaiv1beta2documentpagevisualelement.GoogleCloudDocumentaiV1beta2DocumentPageVisualElement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visualElements'), 'exclude': lambda f: f is None }})
    r"""A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."""  
    