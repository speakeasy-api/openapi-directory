/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetFindingStatisticsRequestBody {
    /**
     * Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("findingCriteria")
    public GetFindingStatisticsRequestBodyFindingCriteria findingCriteria;

    public GetFindingStatisticsRequestBody withFindingCriteria(GetFindingStatisticsRequestBodyFindingCriteria findingCriteria) {
        this.findingCriteria = findingCriteria;
        return this;
    }
    
    /**
     * &lt;p&gt;The finding property to use to group the query results. Valid values are:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;p&gt;classificationDetails.jobId - The unique identifier for the classification job that produced the finding.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;severity.description - The severity level of the finding, such as High or Medium.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
     */
    @JsonProperty("groupBy")
    public GetFindingStatisticsRequestBodyGroupByEnum groupBy;

    public GetFindingStatisticsRequestBody withGroupBy(GetFindingStatisticsRequestBodyGroupByEnum groupBy) {
        this.groupBy = groupBy;
        return this;
    }
    
    /**
     * The maximum number of items to include in each page of the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public GetFindingStatisticsRequestBody withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * Specifies criteria for sorting the results of a query that retrieves aggregated statistical data about findings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortCriteria")
    public GetFindingStatisticsRequestBodySortCriteria sortCriteria;

    public GetFindingStatisticsRequestBody withSortCriteria(GetFindingStatisticsRequestBodySortCriteria sortCriteria) {
        this.sortCriteria = sortCriteria;
        return this;
    }
    
    public GetFindingStatisticsRequestBody(@JsonProperty("groupBy") GetFindingStatisticsRequestBodyGroupByEnum groupBy) {
        this.groupBy = groupBy;
  }
}
