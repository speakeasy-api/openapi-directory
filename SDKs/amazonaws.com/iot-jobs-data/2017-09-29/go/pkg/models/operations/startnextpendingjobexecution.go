// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartNextPendingJobExecutionPathParams struct {
	// The name of the thing associated with the device.
	ThingName string `pathParam:"style=simple,explode=false,name=thingName"`
}

type StartNextPendingJobExecutionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartNextPendingJobExecutionRequestBody struct {
	// A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.
	StatusDetails map[string]string `json:"statusDetails,omitempty"`
	// Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).
	StepTimeoutInMinutes *int64 `json:"stepTimeoutInMinutes,omitempty"`
}

type StartNextPendingJobExecutionRequest struct {
	PathParams StartNextPendingJobExecutionPathParams
	Headers    StartNextPendingJobExecutionHeaders
	Request    StartNextPendingJobExecutionRequestBody `request:"mediaType=application/json"`
}

type StartNextPendingJobExecutionResponse struct {
	// CertificateValidationException
	CertificateValidationException interface{}
	ContentType                    string
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// Success
	StartNextPendingJobExecutionResponse *shared.StartNextPendingJobExecutionResponse
	StatusCode                           int
	RawResponse                          *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
