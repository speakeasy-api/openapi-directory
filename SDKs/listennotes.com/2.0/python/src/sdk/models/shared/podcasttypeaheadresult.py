"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PodcastTypeaheadResult:
    
    explicit_content: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explicit_content'), 'exclude': lambda f: f is None }})
    r"""Whether this podcast contains explicit language."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Podcast id, which can be used to further fetch detailed podcast metadata via `GET /podcasts/{id}`."""  
    image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's
    a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**,
    low resolution image (300x300).
    """  
    publisher_highlighted: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisher_highlighted'), 'exclude': lambda f: f is None }})
    r"""Highlighted segment of this podcast's publisher name."""  
    publisher_original: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisher_original'), 'exclude': lambda f: f is None }})
    r"""Plain text of this podcast's publisher name."""  
    thumbnail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnail'), 'exclude': lambda f: f is None }})
    r"""Thumbnail image url for this podcast's artwork (300x300)."""  
    title_highlighted: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title_highlighted'), 'exclude': lambda f: f is None }})
    r"""Highlighted segment of podcast name."""  
    title_original: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title_original'), 'exclude': lambda f: f is None }})
    r"""Plain text of podcast name."""  
    