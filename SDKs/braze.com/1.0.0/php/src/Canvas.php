<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Canvas 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Canvas Data Analytics Summary
     * 
     * This endpoint allows you to export rollups of time series data for a Canvas, providing a concise summary of a Canvas' results.
     * 
     * ### Components Used
     * - [Canvas Identifier](https://www.braze.com/docs/api/identifier_types/)
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *   "data": {
     *     "name": (string) Canvas name,
     *     "total_stats": {
     *       "revenue": (float),
     *       "conversions": (int),
     *       "conversions_by_entry_time": (int),
     *       "entries": (int)
     *     },
     *     "variant_stats": (optional) {
     *       "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
     *         "name": (string) name of variant,
     *         "revenue": (float),
     *         "conversions": (int),
     *         "entries": (int)
     *       },
     *       ... (more variants)
     *     },
     *     "step_stats": (optional) {
     *       "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
     *         "name": (string) name of step,
     *         "revenue": (float),
     *         "conversions": (int),
     *         "conversions_by_entry_time": (int),
     *         "messages": {
     *           "android_push": (name of channel) [
     *             {
     *               "sent": (int),
     *               "opens": (int),
     *               "influenced_opens": (int),
     *               "bounces": (int)
     *               ... (more stats for channel)
     *             }
     *           ],
     *           ... (more channels)
     *         }
     *       },
     *       ... (more steps)
     *     }
     *   },
     *   "message": (required, string) the status of the export, returns 'success' when completed without errors
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CanvasDataAnalyticsSummaryRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\CanvasDataAnalyticsSummaryResponse
     */
	public function canvasDataAnalyticsSummary(
        \OpenAPI\OpenAPI\Models\Operations\CanvasDataAnalyticsSummaryRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\CanvasDataAnalyticsSummaryResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/canvas/data_summary');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CanvasDataAnalyticsSummaryRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CanvasDataAnalyticsSummaryResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Canvas Data Series Analytics
     * 
     * This endpoint allows you to export time series data for a Canvas.
     * 
     * ### Components Used
     * - [Canvas Identifier](https://www.braze.com/docs/api/identifier_types/)
     * 
     * ## Response
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *   "data": {
     *     "name": (string) Canvas name,
     *     "stats": [
     *       {
     *         "time": (string) date as ISO 8601 date,
     *         "total_stats": {
     *           "revenue": (float),
     *           "conversions": (int),
     *           "conversions_by_entry_time": (int),
     *           "entries": (int)
     *         },
     *         "variant_stats": (optional) {
     *           "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
     *             "name": (string) name of variant,
     *             "revenue": (int),
     *             "conversions": (int),
     *             "conversions_by_entry_time": (int),
     *             "entries": (int)
     *           },
     *           ... (more variants)
     *         },
     *         "step_stats": (optional) {
     *           "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
     *             "name": (string) name of step,
     *             "revenue": (float),
     *             "conversions": (int),
     *             "conversions_by_entry_time": (int),
     *             "messages": {
     *               "email": [
     *                 {
     *                   "sent": (int),
     *                   "opens": (int),
     *                   "unique_opens": (int),
     *                   "clicks": (int),
     *                   ... (more stats)
     *                 }
     *               ],
     *               ... (more channels)
     *             }
     *           },
     *           ... (more steps)
     *         }
     *       },
     *       ... (more stats by time)
     *     ]
     *   },
     *   "message": (required, string) the status of the export, returns 'success' when completed without errors
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CanvasDataSeriesAnalyticsRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\CanvasDataSeriesAnalyticsResponse
     */
	public function canvasDataSeriesAnalytics(
        \OpenAPI\OpenAPI\Models\Operations\CanvasDataSeriesAnalyticsRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\CanvasDataSeriesAnalyticsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/canvas/data_series');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CanvasDataSeriesAnalyticsRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CanvasDataSeriesAnalyticsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Canvas Details
     * 
     * This endpoint allows you to export metadata about a Canvas, such as its name, when it was created, its current status, and more.
     * 
     * ### Components Used
     * - [Canvas Identifier](https://www.braze.com/docs/api/identifier_types/)
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *   "created_at": (string) date created as ISO 8601 date,
     *   "updated_at": (string) date updated as ISO 8601 date,
     *   "name": (string) Canvas name,
     *   "description": (string) Canvas description,
     *   "archived": (boolean) whether this Canvas is archived,
     *   "draft": (boolean) whether this Canvas is a draft,
     *   "schedule_type": (string) type of scheduling action,
     *   "first_entry": (string) date of first entry as ISO 8601 date,
     *   "last_entry": (string) date of last entry as ISO 8601 date,
     *   "channels": (array of strings) step channels used with Canvas,
     *   "variants": [
     *     {
     *       "name": (string) name of variant,
     *       "id": (string) API identifier of the variant,
     *       "first_step_ids": (array of strings) API identifiers for first steps in variant,
     *       "first_step_id": (string) API identifier of first step in variant (deprecated in November 2017, only included if the variant has only one first step)
     *     },
     *     ... (more variations)
     *   ],
     *   "tags": (array of strings) tag names associated with the Canvas,
     *   "steps": [
     *     {
     *       "name": (string) name of step,
     *       "id": (string) API identifier of the step,
     *       "next_step_ids": (array of strings) API identifiers of steps following step,
     *       "channels": (array of strings) channels used in step,
     *       "messages": {
     *           "message_variation_id": (string) {  // <=This is the actual id
     *               "channel": (string) channel type of the message (eg., "email"),
     *               ... channel-specific fields for this message, see Campaign Details Endpoint API Response for example message responses ...
     *           }
     *       }
     *     },
     *     ... (more steps)
     *   ],
     *   "message": (required, string) the status of the export, returns 'success' when completed without errors
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CanvasDetailsRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\CanvasDetailsResponse
     */
	public function canvasDetails(
        \OpenAPI\OpenAPI\Models\Operations\CanvasDetailsRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\CanvasDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/canvas/details');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CanvasDetailsRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CanvasDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Canvas List
     * 
     * This endpoint allows you to export a list of Canvases, including the name, Canvas API Identifier and associated Tags. The Canvases are returned in groups of 100 sorted by time of creation (oldest to newest by default).
     * 
     * > Archived Canvases will not be included in the API response unless the `include_archived` field is specified. Canvases that are stopped but not archived, however, will be returned by default.
     * 
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *   "canvases" : [
     *   	{
     *   		"id" : (string) Canvas API Identifier,
     *   		"last_edited": (ISO 8601 string) the last edited time for the message,
     *   		"name" : (string) Canvas name,
     *   		"tags" : (array) tag names associated with the Canvas,
     *   	},
     *     ... (more Canvases)
     *   ],
     *   "message": (required, string) the status of the export, returns 'success' when completed without errors
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CanvasListRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\CanvasListResponse
     */
	public function canvasList(
        \OpenAPI\OpenAPI\Models\Operations\CanvasListRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\CanvasListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/canvas/list');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CanvasListRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CanvasListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
}