/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Optional. Type of reservation to consume
 */
export enum ReservationAffinityConsumeReservationTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  NoReservation = "NO_RESERVATION",
  AnyReservation = "ANY_RESERVATION",
  SpecificReservation = "SPECIFIC_RESERVATION",
}

/**
 * Reservation Affinity for consuming Zonal reservation.
 */
export class ReservationAffinity extends SpeakeasyBase {
  /**
   * Optional. Type of reservation to consume
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumeReservationType" })
  consumeReservationType?: ReservationAffinityConsumeReservationTypeEnum;

  /**
   * Optional. Corresponds to the label key of reservation resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Optional. Corresponds to the label values of reservation resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values?: string[];
}
