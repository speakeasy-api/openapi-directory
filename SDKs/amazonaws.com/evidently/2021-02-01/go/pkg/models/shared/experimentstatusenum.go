// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExperimentStatusEnum string

const (
	ExperimentStatusEnumCreated   ExperimentStatusEnum = "CREATED"
	ExperimentStatusEnumUpdating  ExperimentStatusEnum = "UPDATING"
	ExperimentStatusEnumRunning   ExperimentStatusEnum = "RUNNING"
	ExperimentStatusEnumCompleted ExperimentStatusEnum = "COMPLETED"
	ExperimentStatusEnumCancelled ExperimentStatusEnum = "CANCELLED"
)

func (e ExperimentStatusEnum) ToPointer() *ExperimentStatusEnum {
	return &e
}

func (e *ExperimentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		*e = ExperimentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExperimentStatusEnum: %v", v)
	}
}
