"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetAPICatalogSystemPubFacetsCategoryCategoryIDRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    category_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'categoryId', 'style': 'simple', 'explode': False }})
    r"""Category unique number identifier."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': '_from', 'style': 'form', 'explode': True }})
    r"""Starter page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page."""  
    to: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': '_to', 'style': 'form', 'explode': True }})
    r"""Finisher page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAPICatalogSystemPubFacetsCategoryCategoryID200ApplicationJSON:
    r"""Object with name and ID of the category's facet."""
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id') }})
    r"""Category's facet ID."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})
    r"""Category's facet name."""  
    

@dataclasses.dataclass
class GetAPICatalogSystemPubFacetsCategoryCategoryIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_api_catalog_system_pub_facets_category_category_id_200_application_json_objects: Optional[list[GetAPICatalogSystemPubFacetsCategoryCategoryID200ApplicationJSON]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    