/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attraction } from "./attraction";
import { Classification } from "./classification";
import { EventDates } from "./eventdates";
import { EventSalesDates } from "./eventsalesdates";
import { Image } from "./image";
import { Location } from "./location";
import { Place } from "./place";
import { PriceRange } from "./pricerange";
import { Promoter } from "./promoter";
import { PublicVisibility } from "./publicvisibility";
import { Source } from "./source";
import { Venue } from "./venue";
import { Expose, Type } from "class-transformer";

/**
 * Type of the entity
 */
export enum EventTypeEnum {
  Event = "event",
  Venue = "venue",
  Attraction = "attraction",
}

/**
 * Event
 */
export class Event extends SpeakeasyBase {
  /**
   * Indicate if the entity is active, inactive entity won't appear in Discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Additional informations of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfos" })
  additionalInfos?: Record<string, string>;

  /**
   * Ordered Attraction related to the event
   */
  @SpeakeasyMetadata({ elemType: Attraction })
  @Expose({ name: "attractions" })
  @Type(() => Attraction)
  attractions?: Attraction[];

  /**
   * Event's classifications
   */
  @SpeakeasyMetadata({ elemType: Classification })
  @Expose({ name: "classifications" })
  @Type(() => Classification)
  classifications?: Classification[];

  /**
   * Event's Dates
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dates" })
  @Type(() => EventDates)
  dates?: EventDates;

  /**
   * Descriptions of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "descriptions" })
  descriptions?: Record<string, string>;

  /**
   * True if the entity is dicoverable in discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discoverable" })
  discoverable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "distance" })
  distance?: number;

  /**
   * Images of the entity
   */
  @SpeakeasyMetadata({ elemType: Image })
  @Expose({ name: "images" })
  @Type(() => Image)
  images?: Image[];

  /**
   * Any information related to the event - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "infos" })
  infos?: Record<string, string>;

  /**
   * Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => Location)
  location?: Location;

  /**
   * Names of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "names" })
  names?: Record<string, string>;

  /**
   * Place
   */
  @SpeakeasyMetadata()
  @Expose({ name: "place" })
  @Type(() => Place)
  place?: Place;

  /**
   * Any notes related to the event - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pleaseNotes" })
  pleaseNotes?: Record<string, string>;

  /**
   * Price ranges of this event
   */
  @SpeakeasyMetadata({ elemType: PriceRange })
  @Expose({ name: "priceRanges" })
  @Type(() => PriceRange)
  priceRanges?: PriceRange[];

  /**
   * Promoter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "promoter" })
  @Type(() => Promoter)
  promoter?: Promoter;

  /**
   * The class defines the public visibility period on the Discovery/Publish API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publicVisibility" })
  @Type(() => PublicVisibility)
  publicVisibility?: PublicVisibility;

  /**
   * References of this entity in an other system. Reference is the exact same entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "references" })
  references?: Record<string, string>;

  /**
   * Relationships on the entity, like if the entity is a duplicate of another one
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  relationships?: Record<string, any>[];

  /**
   * Event's Sales Dates
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sales" })
  @Type(() => EventSalesDates)
  sales?: EventSalesDates;

  /**
   * Source
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => Source)
  source?: Source;

  /**
   * Indicate if this is a test entity, by default test entities won't appear in discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "test" })
  test?: boolean;

  /**
   * Type of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: EventTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units?: string;

  /**
   * URL of a web site detail page of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Venue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "venue" })
  @Type(() => Venue)
  venue?: Venue;

  /**
   * Version of the entity. Version is to avoid updated an entity with an older version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
