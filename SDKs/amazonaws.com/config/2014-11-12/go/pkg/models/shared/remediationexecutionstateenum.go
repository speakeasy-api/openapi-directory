// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RemediationExecutionStateEnum string

const (
	RemediationExecutionStateEnumQueued     RemediationExecutionStateEnum = "QUEUED"
	RemediationExecutionStateEnumInProgress RemediationExecutionStateEnum = "IN_PROGRESS"
	RemediationExecutionStateEnumSucceeded  RemediationExecutionStateEnum = "SUCCEEDED"
	RemediationExecutionStateEnumFailed     RemediationExecutionStateEnum = "FAILED"
)

func (e *RemediationExecutionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUEUED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = RemediationExecutionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RemediationExecutionStateEnum: %s", s)
	}
}
