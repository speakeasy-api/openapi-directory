/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UserSchedulersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class UserSchedulersRequest extends SpeakeasyBase {
  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class UserSchedulersUserSchedulersListSchedulers extends SpeakeasyBase {
  /**
   * Email address of the scheduler.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Unique Identifier (User ID) of the Scheduler.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * PMI of the meeting host in long (int64) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pmi" })
  pmi?: number;
}

/**
 * List of user's schedulers.
 */
export class UserSchedulersUserSchedulersList extends SpeakeasyBase {
  /**
   * List of users for whom the current user can schedule meetings.
   */
  @SpeakeasyMetadata({ elemType: UserSchedulersUserSchedulersListSchedulers })
  @Expose({ name: "schedulers" })
  @Type(() => UserSchedulersUserSchedulersListSchedulers)
  schedulers?: UserSchedulersUserSchedulersListSchedulers[];
}

export class UserSchedulersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user.
   */
  @SpeakeasyMetadata()
  userSchedulersList?: UserSchedulersUserSchedulersList;
}
