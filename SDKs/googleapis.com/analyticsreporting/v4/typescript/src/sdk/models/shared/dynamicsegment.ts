/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentDefinition } from "./segmentdefinition";
import { Expose, Type } from "class-transformer";

/**
 * Dynamic segment definition for defining the segment within the request. A segment can select users, sessions or both.
 */
export class DynamicSegment extends SpeakeasyBase {
  /**
   * The name of the dynamic segment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * SegmentDefinition defines the segment to be a set of SegmentFilters which are combined together with a logical `AND` operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sessionSegment" })
  @Type(() => SegmentDefinition)
  sessionSegment?: SegmentDefinition;

  /**
   * SegmentDefinition defines the segment to be a set of SegmentFilters which are combined together with a logical `AND` operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userSegment" })
  @Type(() => SegmentDefinition)
  userSegment?: SegmentDefinition;
}
