/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigManagementConfigSyncState } from "./configmanagementconfigsyncstate";
import { ConfigManagementHierarchyControllerState } from "./configmanagementhierarchycontrollerstate";
import { ConfigManagementMembershipSpec } from "./configmanagementmembershipspec";
import { ConfigManagementOperatorState } from "./configmanagementoperatorstate";
import { ConfigManagementPolicyControllerState } from "./configmanagementpolicycontrollerstate";
import { Expose, Type } from "class-transformer";

/**
 * **Anthos Config Management**: State for a single cluster.
 */
export class ConfigManagementMembershipState extends SpeakeasyBase {
  /**
   * The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterName" })
  clusterName?: string;

  /**
   * State information for ConfigSync
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configSyncState" })
  @Type(() => ConfigManagementConfigSyncState)
  configSyncState?: ConfigManagementConfigSyncState;

  /**
   * State for Hierarchy Controller
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hierarchyControllerState" })
  @Type(() => ConfigManagementHierarchyControllerState)
  hierarchyControllerState?: ConfigManagementHierarchyControllerState;

  /**
   * **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "membershipSpec" })
  @Type(() => ConfigManagementMembershipSpec)
  membershipSpec?: ConfigManagementMembershipSpec;

  /**
   * State information for an ACM's Operator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operatorState" })
  @Type(() => ConfigManagementOperatorState)
  operatorState?: ConfigManagementOperatorState;

  /**
   * State for PolicyControllerState.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policyControllerState" })
  @Type(() => ConfigManagementPolicyControllerState)
  policyControllerState?: ConfigManagementPolicyControllerState;
}
