<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRules
{
    /**
     * An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)
     * 
     * @var array<string> $allowedIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedIps')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $allowedIps;
    
    /**
     * The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
     * 
     * @var string $lanIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('lanIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lanIp;
    
    /**
     * A port or port ranges that will receive the forwarded traffic from the WAN
     * 
     * @var string $localPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('localPort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $localPort;
    
    /**
     * A descriptive name for the rule
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * TCP or UDP
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesProtocolEnum $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesProtocolEnum>')]
    public UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesProtocolEnum $protocol;
    
    /**
     * A port or port ranges that will be forwarded to the host on the LAN
     * 
     * @var string $publicPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicPort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $publicPort;
    
    /**
     * The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesUplinkEnum $uplink
     */
	#[\JMS\Serializer\Annotation\SerializedName('uplink')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesUplinkEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesUplinkEnum $uplink = null;
    
	public function __construct()
	{
		$this->allowedIps = [];
		$this->lanIp = "";
		$this->localPort = "";
		$this->name = null;
		$this->protocol = \OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceFirewallPortForwardingRulesRequestBodyRulesProtocolEnum::TCP;
		$this->publicPort = "";
		$this->uplink = null;
	}
}
