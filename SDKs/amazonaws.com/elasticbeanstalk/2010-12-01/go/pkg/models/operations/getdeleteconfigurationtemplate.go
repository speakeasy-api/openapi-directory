// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteConfigurationTemplateActionEnum
type GETDeleteConfigurationTemplateActionEnum string

const (
	GETDeleteConfigurationTemplateActionEnumDeleteConfigurationTemplate GETDeleteConfigurationTemplateActionEnum = "DeleteConfigurationTemplate"
)

func (e *GETDeleteConfigurationTemplateActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteConfigurationTemplate":
		*e = GETDeleteConfigurationTemplateActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteConfigurationTemplateActionEnum: %s", s)
	}
}

// GETDeleteConfigurationTemplateVersionEnum
type GETDeleteConfigurationTemplateVersionEnum string

const (
	GETDeleteConfigurationTemplateVersionEnumTwoThousandAndTen1201 GETDeleteConfigurationTemplateVersionEnum = "2010-12-01"
)

func (e *GETDeleteConfigurationTemplateVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETDeleteConfigurationTemplateVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteConfigurationTemplateVersionEnum: %s", s)
	}
}

type GETDeleteConfigurationTemplateRequest struct {
	Action GETDeleteConfigurationTemplateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the application to delete the configuration template from.
	ApplicationName string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// The name of the configuration template to delete.
	TemplateName      string                                    `queryParam:"style=form,explode=true,name=TemplateName"`
	Version           GETDeleteConfigurationTemplateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteConfigurationTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
