"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PodcastMinimum:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Podcast id, which can be used to further fetch detailed podcast metadata via `GET /podcasts/{id}`."""  
    image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's
    a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**,
    low resolution image (300x300).
    """  
    listen_score: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listen_score'), 'exclude': lambda f: f is None }})
    r"""The estimated popularity score of a podcast compared to all other rss-based public podcasts in the world on a scale from 0 to 100.
    If the score is not available, it'll be null. Learn more at listennotes.com/listen-score
    """  
    listen_score_global_rank: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listen_score_global_rank'), 'exclude': lambda f: f is None }})
    r"""The estimated popularity ranking of a podcast compared to all other rss-based public podcasts in the world.
    For example, if the value is 0.5%, then this podcast is one of the top 0.5% most popular shows out of all podcasts globally, ranked by Listen Score.
    If the ranking is not available, it'll be null. Learn more at listennotes.com/listen-score
    """  
    listennotes_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listennotes_url'), 'exclude': lambda f: f is None }})
    r"""The url of this podcast on [ListenNotes.com](https://www.ListenNotes.com)."""  
    publisher: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisher'), 'exclude': lambda f: f is None }})
    r"""Podcast publisher name."""  
    thumbnail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnail'), 'exclude': lambda f: f is None }})
    r"""Thumbnail image url for this podcast's artwork (300x300)."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Podcast name."""  
    