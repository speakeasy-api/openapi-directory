/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Domain verification status:
 *
 * @remarks
 *   * `AWAITING` - Verification pending customer input
 *   * `INVALID` - SAN connected to a cancelled request
 *   * `COMPLETED` - Verification completed
 *   * `FAILED_VERIFICATION` - Verification failed
 *   * `PENDING_POSSIBLE_FRAUD` - Flagged for a system level fraud review
 *   * `VERIFIED_POSSIBLE_FRAUD` - Fraud detection reviewed but verified
 *   * `DROPPED` - SAN dropped from request
 *   * `REVOKED_CERT` - Certificate revoked
 *   * `DROPPED_GOOGLE_SAFE_BROWSING` - SAN dropped from request due to Google Safe Browsing check
 *   * `DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION` - SAN dropped from request due to Certificate Authorization Authority DNS record check
 *
 */
export enum DomainVerificationSummaryStatusEnum {
  Completed = "COMPLETED",
  FailedVerification = "FAILED_VERIFICATION",
  VerifiedPossibleFraud = "VERIFIED_POSSIBLE_FRAUD",
  Dropped = "DROPPED",
  DroppedCertificateAuthorityAuthorization = "DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION",
  DroppedGoogleSafeBrowsing = "DROPPED_GOOGLE_SAFE_BROWSING",
  Invalid = "INVALID",
  Awaiting = "AWAITING",
  PendingPossibleFraud = "PENDING_POSSIBLE_FRAUD",
  RevokedCertificate = "REVOKED_CERTIFICATE",
}

/**
 * Domain verification type:
 *
 * @remarks
 *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN` - Domain verified using domain control verification email sent to admin@<your.domain.com>
 *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR` - Domain verified using domain control verification email sent to administrator@<your.domain.com>
 *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER` - Domain verified using domain control verification email sent to hostmaster@<your.domain.com>
 *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER` - Domain verified using domain control verification email sent to postmaster@<your.domain.com>
 *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER` - Domain verified using domain control verification email sent to webmaster@<your.domain.com>
 *   * `DOMAIN_ACCESS_EMAIL` - Domain verified using a domain access email
 *   * `DOMAIN_ACCESS_LETTER` - Customer completed a domain access letter which was used for domain verification
 *   * `DOMAIN_CONTROL_EMAIL` - Domain verified using HTML file or DNS zone file text value
 *   * `DOMAIN_ZONE_CONTROL` - DNS zone file containing a pre-generated text value used for domain verification
 *   * `MANUAL_DOMAIN_ACCESS_EMAIL` - DAE sent to an email address manually entered by a rep
 *   * `PREVIOUS_DOMAIN_ACCESS_EMAIL` - Customers domain access email for a prior certificate request was used for domain verification
 *   * `REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER` - Representative reviewed a customer provided domain access letter and verified domain
 *   * `REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL` - Representative verified domain using a manual domain zone control check
 *   * `REGISTRATION_AUTHORITY_OVERRIDE` - Representative verified domain using alternative methods
 *   * `REGISTRATION_AUTHORITY_WEBSITE_CONTROL` - Representative verified domain using a manual website control check
 *   * `CUSTOMER_OWNED` - Validated customer account information used for domain control verification
 *   * `WEBSITE_CONTROL` - HTML file in root website directory containing pre-generated value used for domain control verification
 *
 */
export enum DomainVerificationSummaryTypeEnum {
  DomainControlEmail = "DOMAIN_CONTROL_EMAIL",
  AutoGeneratedDomainAccessEmailAdmin = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN",
  AutoGeneratedDomainAccessEmailAdminstrator = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR",
  AutoGeneratedDomainAccessEmailHostMaster = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER",
  AutoGeneratedDomainAccessEmailPostMaster = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER",
  AutoGeneratedDomainAccessEmailWebMaster = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER",
  DomainAccessEmail = "DOMAIN_ACCESS_EMAIL",
  DomainAccessLetter = "DOMAIN_ACCESS_LETTER",
  DomainZoneControl = "DOMAIN_ZONE_CONTROL",
  ManualDomainAccessEmail = "MANUAL_DOMAIN_ACCESS_EMAIL",
  PreviousDomainAccessEmail = "PREVIOUS_DOMAIN_ACCESS_EMAIL",
  RegistrationAuthorityDomainAccessLetter = "REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER",
  RegistrationAuthorityDomainZoneControl = "REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL",
  RegistrationAuthorityOverride = "REGISTRATION_AUTHORITY_OVERRIDE",
  RegistrationAuthorityWebsiteControl = "REGISTRATION_AUTHORITY_WEBSITE_CONTROL",
  CustomerOwned = "CUSTOMER_OWNED",
  WebsiteControl = "WEBSITE_CONTROL",
}

/**
 * Type of domain name used for domain verification
 */
export enum DomainVerificationSummaryUsageEnum {
  CommonName = "COMMON_NAME",
  SubjectAlternativeName = "SUBJECT_ALTERNATIVE_NAME",
}

export class DomainVerificationSummary extends SpeakeasyBase {
  /**
   * Timestamp indicating when the domain verification process was started
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt: string;

  /**
   * DCE verification type token (if DCE verification type).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dceToken" })
  dceToken?: string;

  /**
   * Domain name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain: string;

  /**
   * A unique identifier that can be leveraged for retrieving domain verification related information. Primarily used when troubleshooting a request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainEntityId" })
  domainEntityId: number;

  /**
   * Timestamp indicating when the domain verification process was last updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedAt" })
  modifiedAt: string;

  /**
   * Domain verification status:
   *
   * @remarks
   *   * `AWAITING` - Verification pending customer input
   *   * `INVALID` - SAN connected to a cancelled request
   *   * `COMPLETED` - Verification completed
   *   * `FAILED_VERIFICATION` - Verification failed
   *   * `PENDING_POSSIBLE_FRAUD` - Flagged for a system level fraud review
   *   * `VERIFIED_POSSIBLE_FRAUD` - Fraud detection reviewed but verified
   *   * `DROPPED` - SAN dropped from request
   *   * `REVOKED_CERT` - Certificate revoked
   *   * `DROPPED_GOOGLE_SAFE_BROWSING` - SAN dropped from request due to Google Safe Browsing check
   *   * `DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION` - SAN dropped from request due to Certificate Authorization Authority DNS record check
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: DomainVerificationSummaryStatusEnum;

  /**
   * Domain verification type:
   *
   * @remarks
   *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN` - Domain verified using domain control verification email sent to admin@<your.domain.com>
   *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR` - Domain verified using domain control verification email sent to administrator@<your.domain.com>
   *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER` - Domain verified using domain control verification email sent to hostmaster@<your.domain.com>
   *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER` - Domain verified using domain control verification email sent to postmaster@<your.domain.com>
   *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER` - Domain verified using domain control verification email sent to webmaster@<your.domain.com>
   *   * `DOMAIN_ACCESS_EMAIL` - Domain verified using a domain access email
   *   * `DOMAIN_ACCESS_LETTER` - Customer completed a domain access letter which was used for domain verification
   *   * `DOMAIN_CONTROL_EMAIL` - Domain verified using HTML file or DNS zone file text value
   *   * `DOMAIN_ZONE_CONTROL` - DNS zone file containing a pre-generated text value used for domain verification
   *   * `MANUAL_DOMAIN_ACCESS_EMAIL` - DAE sent to an email address manually entered by a rep
   *   * `PREVIOUS_DOMAIN_ACCESS_EMAIL` - Customers domain access email for a prior certificate request was used for domain verification
   *   * `REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER` - Representative reviewed a customer provided domain access letter and verified domain
   *   * `REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL` - Representative verified domain using a manual domain zone control check
   *   * `REGISTRATION_AUTHORITY_OVERRIDE` - Representative verified domain using alternative methods
   *   * `REGISTRATION_AUTHORITY_WEBSITE_CONTROL` - Representative verified domain using a manual website control check
   *   * `CUSTOMER_OWNED` - Validated customer account information used for domain control verification
   *   * `WEBSITE_CONTROL` - HTML file in root website directory containing pre-generated value used for domain control verification
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: DomainVerificationSummaryTypeEnum;

  /**
   * Type of domain name used for domain verification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage: DomainVerificationSummaryUsageEnum;
}
