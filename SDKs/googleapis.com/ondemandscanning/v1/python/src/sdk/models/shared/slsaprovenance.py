"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import material as shared_material
from ..shared import slsabuilder as shared_slsabuilder
from ..shared import slsametadata as shared_slsametadata
from ..shared import slsarecipe as shared_slsarecipe
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlsaProvenance:
    
    builder: Optional[shared_slsabuilder.SlsaBuilder] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('builder'), 'exclude': lambda f: f is None }})  
    materials: Optional[list[shared_material.Material]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('materials'), 'exclude': lambda f: f is None }})
    r"""The collection of artifacts that influenced the build including sources, dependencies, build tools, base images, and so on. This is considered to be incomplete unless metadata.completeness.materials is true. Unset or null is equivalent to empty."""  
    metadata: Optional[shared_slsametadata.SlsaMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Other properties of the build."""  
    recipe: Optional[shared_slsarecipe.SlsaRecipe] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipe'), 'exclude': lambda f: f is None }})
    r"""Steps taken to build the artifact. For a TaskRun, typically each container corresponds to one step in the recipe."""  
    