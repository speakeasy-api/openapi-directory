<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EventTriggerInput - Describes EventTrigger, used to request events to be sent from another service.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EventTriggerInput
{
    /**
     * Optional. The name of the channel associated with the trigger in `projects/{project}/locations/{location}/channels/{channel}` format. You must provide a channel to receive events from Eventarc SaaS partners.
     * 
     * @var ?string $channel
     */
	#[\JMS\Serializer\Annotation\SerializedName('channel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channel = null;
    
    /**
     * Criteria used to filter events.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EventFilter> $eventFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventFilters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EventFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventFilters = null;
    
    /**
     * Required. The type of event to observe. For example: `google.cloud.audit.log.v1.written` or `google.cloud.pubsub.topic.v1.messagePublished`.
     * 
     * @var ?string $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventType = null;
    
    /**
     * Optional. The name of a Pub/Sub topic in the same project that will be used as the transport topic for the event delivery. Format: `projects/{project}/topics/{topic}`. This is only valid for events of type `google.cloud.pubsub.topic.v1.messagePublished`. The topic provided here will not be deleted at function deletion.
     * 
     * @var ?string $pubsubTopic
     */
	#[\JMS\Serializer\Annotation\SerializedName('pubsubTopic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pubsubTopic = null;
    
    /**
     * Optional. If unset, then defaults to ignoring failures (i.e. not retrying them).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventTriggerRetryPolicyEnum $retryPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryPolicy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventTriggerRetryPolicyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventTriggerRetryPolicyEnum $retryPolicy = null;
    
    /**
     * Optional. The email of the trigger's service account. The service account must have permission to invoke Cloud Run services, the permission is `run.routes.invoke`. If empty, defaults to the Compute Engine default service account: `{project_number}-compute@developer.gserviceaccount.com`.
     * 
     * @var ?string $serviceAccountEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceAccountEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceAccountEmail = null;
    
    /**
     * The region that the trigger will be in. The trigger will only receive events originating in this region. It can be the same region as the function, a different region or multi-region, or the global region. If not provided, defaults to the same region as the function.
     * 
     * @var ?string $triggerRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerRegion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $triggerRegion = null;
    
	public function __construct()
	{
		$this->channel = null;
		$this->eventFilters = null;
		$this->eventType = null;
		$this->pubsubTopic = null;
		$this->retryPolicy = null;
		$this->serviceAccountEmail = null;
		$this->triggerRegion = null;
	}
}
