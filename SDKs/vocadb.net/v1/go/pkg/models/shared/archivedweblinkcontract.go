// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ArchivedWebLinkContractCategoryEnum string

const (
	ArchivedWebLinkContractCategoryEnumOfficial   ArchivedWebLinkContractCategoryEnum = "Official"
	ArchivedWebLinkContractCategoryEnumCommercial ArchivedWebLinkContractCategoryEnum = "Commercial"
	ArchivedWebLinkContractCategoryEnumReference  ArchivedWebLinkContractCategoryEnum = "Reference"
	ArchivedWebLinkContractCategoryEnumOther      ArchivedWebLinkContractCategoryEnum = "Other"
)

func (e *ArchivedWebLinkContractCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Official":
		fallthrough
	case "Commercial":
		fallthrough
	case "Reference":
		fallthrough
	case "Other":
		*e = ArchivedWebLinkContractCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArchivedWebLinkContractCategoryEnum: %s", s)
	}
}

type ArchivedWebLinkContract struct {
	Category    *ArchivedWebLinkContractCategoryEnum `json:"category,omitempty"`
	Description *string                              `json:"description,omitempty"`
	Disabled    *bool                                `json:"disabled,omitempty"`
	URL         *string                              `json:"url,omitempty"`
}
