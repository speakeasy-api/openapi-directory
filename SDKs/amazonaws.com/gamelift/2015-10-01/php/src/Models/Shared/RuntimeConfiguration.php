<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RuntimeConfiguration - <p>A collection of server process configurations that describe the set of processes to run on each instance in a fleet. Server processes run either an executable in a custom game build or a Realtime Servers script. GameLift launches the configured processes, manages their life cycle, and replaces them as needed. Each instance checks regularly for an updated runtime configuration. </p> <p>A GameLift instance is limited to 50 processes running concurrently. To calculate the total number of processes in a runtime configuration, add the values of the <code>ConcurrentExecutions</code> parameter for each server process. Learn more about <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html"> Running Multiple Processes on a Fleet</a>.</p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RuntimeConfiguration
{
	#[\JMS\Serializer\Annotation\SerializedName('GameSessionActivationTimeoutSeconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $gameSessionActivationTimeoutSeconds = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MaxConcurrentGameSessionActivations')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxConcurrentGameSessionActivations = null;
    
    /**
     * $serverProcesses
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ServerProcess> $serverProcesses
     */
	#[\JMS\Serializer\Annotation\SerializedName('ServerProcesses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ServerProcess>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $serverProcesses = null;
    
	public function __construct()
	{
		$this->gameSessionActivationTimeoutSeconds = null;
		$this->maxConcurrentGameSessionActivations = null;
		$this->serverProcesses = null;
	}
}
