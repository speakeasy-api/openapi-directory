/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MediaRecordingEnumFormatEnum } from "./mediarecordingenumformatenum";
import { MediaRecordingEnumStatusEnum } from "./mediarecordingenumstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
 */
export enum MediaV1MediaRecordingStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * OK
 */
export class MediaV1MediaRecording extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaRecording resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * The duration of the MediaRecording in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: MediaRecordingEnumFormatEnum;

  /**
   * The URLs of related resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * The size of the recording media in bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "media_size" })
  mediaSize?: number;

  /**
   * The SID of the MediaProcessor resource which produced the MediaRecording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processor_sid" })
  processorSid?: string;

  /**
   * The dimensions of the video image in pixels expressed as columns (width) and rows (height).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolution" })
  resolution?: string;

  /**
   * The unique string generated to identify the MediaRecording resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The SID of the resource that generated the original media track(s) of the MediaRecording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_sid" })
  sourceSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: MediaRecordingEnumStatusEnum;

  /**
   * The URL to which Twilio will send asynchronous webhook requests for every MediaRecording event. See [Status Callbacks](/docs/live/status-callbacks) for more details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback" })
  statusCallback?: string;

  /**
   * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback_method" })
  statusCallbackMethod?: MediaV1MediaRecordingStatusCallbackMethodEnum;

  /**
   * The absolute URL of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
