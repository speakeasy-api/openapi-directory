"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class HealthCheckRequest:
    
    accept_language: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept-Language', 'style': 'simple', 'explode': False }})
    r"""Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HealthCheck200ApplicationJSON:
    r"""Success"""
    
    all_good: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allGood'), 'exclude': lambda f: f is None }})
    r"""**indicator**: `true` signifies health"""  
    capi_ok: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capiOk'), 'exclude': lambda f: f is None }})
    r"""**indicator**: `true` signifies health"""  
    db_ok: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dbOk'), 'exclude': lambda f: f is None }})
    r"""**indicator**: `true` signifies health"""  
    memcached_ok: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memcachedOk'), 'exclude': lambda f: f is None }})
    r"""**indicator**: `true` signifies health"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""**natural-language description** of any issues regarding the health of the API"""  
    

@dataclasses.dataclass
class HealthCheckResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    health_check_200_application_json_object: Optional[HealthCheck200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    