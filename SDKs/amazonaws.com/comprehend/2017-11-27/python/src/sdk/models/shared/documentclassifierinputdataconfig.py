"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import augmentedmanifestslistitem as shared_augmentedmanifestslistitem
from ..shared import documentclassifierdataformat_enum as shared_documentclassifierdataformat_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentClassifierInputDataConfig:
    r"""<p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a href=\\"https://docs.aws.amazon.com/comprehend/latest/dg/prep-classifier-data.html\\">Preparing training data</a> in the Comprehend Developer Guide. </p>"""
    
    augmented_manifests: Optional[list[shared_augmentedmanifestslistitem.AugmentedManifestsListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AugmentedManifests'), 'exclude': lambda f: f is None }})  
    data_format: Optional[shared_documentclassifierdataformat_enum.DocumentClassifierDataFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataFormat'), 'exclude': lambda f: f is None }})  
    label_delimiter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LabelDelimiter'), 'exclude': lambda f: f is None }})  
    s3_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Uri'), 'exclude': lambda f: f is None }})  
    test_s3_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TestS3Uri'), 'exclude': lambda f: f is None }})  
    