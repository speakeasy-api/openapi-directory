// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateS3ResourcesXAmzTargetEnum
type AssociateS3ResourcesXAmzTargetEnum string

const (
	AssociateS3ResourcesXAmzTargetEnumMacieServiceAssociateS3Resources AssociateS3ResourcesXAmzTargetEnum = "MacieService.AssociateS3Resources"
)

func (e *AssociateS3ResourcesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MacieService.AssociateS3Resources":
		*e = AssociateS3ResourcesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateS3ResourcesXAmzTargetEnum: %s", s)
	}
}

type AssociateS3ResourcesRequest struct {
	AssociateS3ResourcesRequest shared.AssociateS3ResourcesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  AssociateS3ResourcesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateS3ResourcesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	AssociateS3ResourcesResult *shared.AssociateS3ResourcesResult
	ContentType                string
	// InternalException
	InternalException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
