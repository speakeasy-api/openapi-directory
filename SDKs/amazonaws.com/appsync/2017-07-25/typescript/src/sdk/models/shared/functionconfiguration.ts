/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppSyncRuntime } from "./appsyncruntime";
import { SyncConfig } from "./syncconfig";
import { Expose, Type } from "class-transformer";

/**
 * A function is a reusable entity. You can use multiple functions to compose the resolver logic.
 */
export class FunctionConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataSourceName" })
  dataSourceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "functionArn" })
  functionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "functionId" })
  functionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "functionVersion" })
  functionVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "maxBatchSize" })
  maxBatchSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestMappingTemplate" })
  requestMappingTemplate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "responseMappingTemplate" })
  responseMappingTemplate?: string;

  /**
   * Describes a runtime used by an Amazon Web Services AppSync pipeline resolver or Amazon Web Services AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runtime" })
  @Type(() => AppSyncRuntime)
  runtime?: AppSyncRuntime;

  /**
   * <p>Describes a Sync configuration for a resolver.</p> <p>Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syncConfig" })
  @Type(() => SyncConfig)
  syncConfig?: SyncConfig;
}
