/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CheckDeposit - Check Deposits allow you to deposit images of paper checks into your account.
 */
public class CheckDeposit {
    /**
     * The Account the check was deposited into.
     */
    @JsonProperty("account_id")
    public String accountId;
    public CheckDeposit withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
     */
    @JsonProperty("amount")
    public Long amount;
    public CheckDeposit withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The ID for the File containing the image of the back of the check.
     */
    @JsonProperty("back_image_file_id")
    public String backImageFileId;
    public CheckDeposit withBackImageFileId(String backImageFileId) {
        this.backImageFileId = backImageFileId;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CheckDeposit withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.
     */
    @JsonProperty("currency")
    public CheckDepositCurrencyEnum currency;
    public CheckDeposit withCurrency(CheckDepositCurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.
     */
    @JsonProperty("deposit_acceptance")
    public CheckDepositCheckDepositAcceptance depositAcceptance;
    public CheckDeposit withDepositAcceptance(CheckDepositCheckDepositAcceptance depositAcceptance) {
        this.depositAcceptance = depositAcceptance;
        return this;
    }
    
    /**
     * If your deposit is rejected by Increase, this will contain details as to why it was rejected.
     */
    @JsonProperty("deposit_rejection")
    public CheckDepositCheckDepositRejection depositRejection;
    public CheckDeposit withDepositRejection(CheckDepositCheckDepositRejection depositRejection) {
        this.depositRejection = depositRejection;
        return this;
    }
    
    /**
     * If your deposit is returned, this will contain details as to why it was returned.
     */
    @JsonProperty("deposit_return")
    public CheckDepositCheckDepositReturn depositReturn;
    public CheckDeposit withDepositReturn(CheckDepositCheckDepositReturn depositReturn) {
        this.depositReturn = depositReturn;
        return this;
    }
    
    /**
     * The ID for the File containing the image of the front of the check.
     */
    @JsonProperty("front_image_file_id")
    public String frontImageFileId;
    public CheckDeposit withFrontImageFileId(String frontImageFileId) {
        this.frontImageFileId = frontImageFileId;
        return this;
    }
    
    /**
     * The deposit's identifier.
     */
    @JsonProperty("id")
    public String id;
    public CheckDeposit withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The status of the Check Deposit.
     */
    @JsonProperty("status")
    public CheckDepositStatusEnum status;
    public CheckDeposit withStatus(CheckDepositStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The ID for the Transaction created by the deposit.
     */
    @JsonProperty("transaction_id")
    public String transactionId;
    public CheckDeposit withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * A constant representing the object's type. For this resource it will always be `check_deposit`.
     */
    @JsonProperty("type")
    public CheckDepositTypeEnum type;
    public CheckDeposit withType(CheckDepositTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
