/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesSearchMatch } from "./tflapipresentationentitiessearchmatch";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class TflApiPresentationEntitiesSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: number;

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesSearchMatch })
  @Expose({ name: "matches" })
  @Type(() => TflApiPresentationEntitiesSearchMatch)
  matches?: TflApiPresentationEntitiesSearchMatch[];

  @SpeakeasyMetadata()
  @Expose({ name: "maxScore" })
  maxScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  query?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}
