/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Specify only when the termType is 'TERMED'.
 */
export enum InitialTermPeriodTypeEnum {
  Month = "Month",
  Year = "Year",
  Day = "Day",
  Week = "Week",
}

export enum InitialTermTermTypeEnum {
  Termed = "TERMED",
  Evergreen = "EVERGREEN",
}

/**
 * The length of the period for the current subscription term.
 */
export class InitialTerm extends SpeakeasyBase {
  /**
   * Specify only when the termType is 'TERMED'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "period" })
  period?: number;

  /**
   * Specify only when the termType is 'TERMED'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodType" })
  periodType?: InitialTermPeriodTypeEnum;

  /**
   * The start date of the current term.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "termType" })
  termType: InitialTermTermTypeEnum;
}
