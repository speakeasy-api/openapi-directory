"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import kycchecksummary as shared_kycchecksummary
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class KYCCheckStatusDataStatusEnum(str, Enum):
    r"""The status of the check.
    
    Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.
    """
    AWAITING_DATA = 'AWAITING_DATA'
    DATA_PROVIDED = 'DATA_PROVIDED'
    FAILED = 'FAILED'
    INVALID_DATA = 'INVALID_DATA'
    PASSED = 'PASSED'
    PENDING = 'PENDING'
    PENDING_REVIEW = 'PENDING_REVIEW'
    RETRY_LIMIT_REACHED = 'RETRY_LIMIT_REACHED'
    UNCHECKED = 'UNCHECKED'

class KYCCheckStatusDataTypeEnum(str, Enum):
    r"""The type of check.
    
    Possible values:
    
     * **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.
    
     * **COMPANY_VERIFICATION**
    
      * **CARD_VERIFICATION**
    
    * **IDENTITY_VERIFICATION**
    
    * **LEGAL_ARRANGEMENT_VERIFICATION**
    
    * **NONPROFIT_VERIFICATION**
    
     * **PASSPORT_VERIFICATION**
    
    * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.
    
    * **PCI_VERIFICATION**
    """
    BANK_ACCOUNT_VERIFICATION = 'BANK_ACCOUNT_VERIFICATION'
    CARD_VERIFICATION = 'CARD_VERIFICATION'
    COMPANY_VERIFICATION = 'COMPANY_VERIFICATION'
    IDENTITY_VERIFICATION = 'IDENTITY_VERIFICATION'
    LEGAL_ARRANGEMENT_VERIFICATION = 'LEGAL_ARRANGEMENT_VERIFICATION'
    NONPROFIT_VERIFICATION = 'NONPROFIT_VERIFICATION'
    PASSPORT_VERIFICATION = 'PASSPORT_VERIFICATION'
    PAYOUT_METHOD_VERIFICATION = 'PAYOUT_METHOD_VERIFICATION'
    PCI_VERIFICATION = 'PCI_VERIFICATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class KYCCheckStatusData:
    
    status: KYCCheckStatusDataStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the check.
    
    Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.
    """  
    type: KYCCheckStatusDataTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of check.
    
    Possible values:
    
     * **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.
    
     * **COMPANY_VERIFICATION**
    
      * **CARD_VERIFICATION**
    
    * **IDENTITY_VERIFICATION**
    
    * **LEGAL_ARRANGEMENT_VERIFICATION**
    
    * **NONPROFIT_VERIFICATION**
    
     * **PASSPORT_VERIFICATION**
    
    * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.
    
    * **PCI_VERIFICATION**
    """  
    required_fields: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiredFields'), 'exclude': lambda f: f is None }})
    r"""A list of the fields required for execution of the check."""  
    summary: Optional[shared_kycchecksummary.KYCCheckSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summary'), 'exclude': lambda f: f is None }})  
    