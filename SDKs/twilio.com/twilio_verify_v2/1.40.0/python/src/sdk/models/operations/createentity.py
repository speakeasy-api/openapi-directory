"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import verify_v2_service_entity as shared_verify_v2_service_entity
from typing import Optional

CREATE_ENTITY_SERVERS = [
	"https://verify.twilio.com",
]


@dataclasses.dataclass
class CreateEntitySecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateEntityCreateEntityRequest:
    
    identity: str = dataclasses.field(metadata={'form': { 'field_name': 'Identity' }})
    r"""The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters."""  
    

@dataclasses.dataclass
class CreateEntityRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The unique SID identifier of the Service."""  
    request_body: Optional[CreateEntityCreateEntityRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateEntityResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    verify_v2_service_entity: Optional[shared_verify_v2_service_entity.VerifyV2ServiceEntity] = dataclasses.field(default=None)
    r"""Created"""  
    