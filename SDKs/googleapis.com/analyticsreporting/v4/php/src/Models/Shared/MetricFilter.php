<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MetricFilter - MetricFilter specifies the filter on a metric.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MetricFilter
{
    /**
     * The value to compare against.
     * 
     * @var ?string $comparisonValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('comparisonValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comparisonValue = null;
    
    /**
     * The metric that will be filtered on. A metricFilter must contain a metric name. A metric name can be an alias earlier defined as a metric or it can also be a metric expression.
     * 
     * @var ?string $metricName
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $metricName = null;
    
    /**
     * Logical `NOT` operator. If this boolean is set to true, then the matching metric values will be excluded in the report. The default is false.
     * 
     * @var ?bool $not
     */
	#[\JMS\Serializer\Annotation\SerializedName('not')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $not = null;
    
    /**
     * Is the metric `EQUAL`, `LESS_THAN` or `GREATER_THAN` the comparisonValue, the default is `EQUAL`. If the operator is `IS_MISSING`, checks if the metric is missing and would ignore the comparisonValue.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MetricFilterOperatorEnum $operator
     */
	#[\JMS\Serializer\Annotation\SerializedName('operator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MetricFilterOperatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetricFilterOperatorEnum $operator = null;
    
	public function __construct()
	{
		$this->comparisonValue = null;
		$this->metricName = null;
		$this->not = null;
		$this->operator = null;
	}
}
