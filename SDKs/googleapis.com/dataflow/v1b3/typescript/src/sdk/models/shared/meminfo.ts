/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Information about the memory usage of a worker or a container within a worker.
 */
export class MemInfo extends SpeakeasyBase {
  /**
   * Instantenous memory limit in bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentLimitBytes" })
  currentLimitBytes?: string;

  /**
   * Number of Out of Memory (OOM) events recorded since the previous measurement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentOoms" })
  currentOoms?: string;

  /**
   * Instantenous memory (RSS) size in bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentRssBytes" })
  currentRssBytes?: string;

  /**
   * Timestamp of the measurement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * Total memory (RSS) usage since start up in GB * ms.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalGbMs" })
  totalGbMs?: string;
}
