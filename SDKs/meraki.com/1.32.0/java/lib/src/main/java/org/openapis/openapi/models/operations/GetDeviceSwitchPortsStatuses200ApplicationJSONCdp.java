/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetDeviceSwitchPortsStatuses200ApplicationJSONCdp - The Cisco Discovery Protocol (CDP) information of the connected device.
 */
public class GetDeviceSwitchPortsStatuses200ApplicationJSONCdp {
    /**
     * Contains network addresses of both receiving and sending devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Identifies the device type, which indicates the functional capabilities of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capabilities")
    public String capabilities;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withCapabilities(String capabilities) {
        this.capabilities = capabilities;
        return this;
    }
    
    /**
     * Identifies the device name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceId")
    public String deviceId;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    /**
     * The device's management IP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("managementAddress")
    public String managementAddress;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withManagementAddress(String managementAddress) {
        this.managementAddress = managementAddress;
        return this;
    }
    
    /**
     * Indicates, per interface, the assumed VLAN for untagged packets on the interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nativeVlan")
    public Long nativeVlan;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withNativeVlan(Long nativeVlan) {
        this.nativeVlan = nativeVlan;
        return this;
    }
    
    /**
     * Identifies the hardware platform of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public String platform;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withPlatform(String platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * Identifies the port from which the CDP packet was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portId")
    public String portId;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withPortId(String portId) {
        this.portId = portId;
        return this;
    }
    
    /**
     * The system name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemName")
    public String systemName;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withSystemName(String systemName) {
        this.systemName = systemName;
        return this;
    }
    
    /**
     * Contains the device software release information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withVersion(String version) {
        this.version = version;
        return this;
    }
    
    /**
     * Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vtpManagementDomain")
    public String vtpManagementDomain;

    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp withVtpManagementDomain(String vtpManagementDomain) {
        this.vtpManagementDomain = vtpManagementDomain;
        return this;
    }
    
    public GetDeviceSwitchPortsStatuses200ApplicationJSONCdp(){}
}
