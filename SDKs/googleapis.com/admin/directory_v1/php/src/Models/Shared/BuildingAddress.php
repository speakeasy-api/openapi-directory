<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BuildingAddress - Public API: Resources.buildings
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BuildingAddress
{
    /**
     * Unstructured address lines describing the lower levels of an address.
     * 
     * @var ?array<string> $addressLines
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressLines')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addressLines = null;
    
    /**
     * Optional. Highest administrative subdivision which is used for postal addresses of a country or region.
     * 
     * @var ?string $administrativeArea
     */
	#[\JMS\Serializer\Annotation\SerializedName('administrativeArea')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $administrativeArea = null;
    
    /**
     * Optional. BCP-47 language code of the contents of this address (if known).
     * 
     * @var ?string $languageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('languageCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $languageCode = null;
    
    /**
     * Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines.
     * 
     * @var ?string $locality
     */
	#[\JMS\Serializer\Annotation\SerializedName('locality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locality = null;
    
    /**
     * Optional. Postal code of the address.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * Required. CLDR region code of the country/region of the address.
     * 
     * @var ?string $regionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('regionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $regionCode = null;
    
    /**
     * Optional. Sublocality of the address.
     * 
     * @var ?string $sublocality
     */
	#[\JMS\Serializer\Annotation\SerializedName('sublocality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sublocality = null;
    
	public function __construct()
	{
		$this->addressLines = null;
		$this->administrativeArea = null;
		$this->languageCode = null;
		$this->locality = null;
		$this->postalCode = null;
		$this->regionCode = null;
		$this->sublocality = null;
	}
}
