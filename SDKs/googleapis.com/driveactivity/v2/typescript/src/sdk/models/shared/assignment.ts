/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * The sub-type of this event.
 */
export enum AssignmentSubtypeEnum {
  SubtypeUnspecified = "SUBTYPE_UNSPECIFIED",
  Added = "ADDED",
  Deleted = "DELETED",
  ReplyAdded = "REPLY_ADDED",
  ReplyDeleted = "REPLY_DELETED",
  Resolved = "RESOLVED",
  Reopened = "REOPENED",
  Reassigned = "REASSIGNED",
}

/**
 * A comment with an assignment.
 */
export class Assignment extends SpeakeasyBase {
  /**
   * Information about an end user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignedUser" })
  @Type(() => User)
  assignedUser?: User;

  /**
   * The sub-type of this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subtype" })
  subtype?: AssignmentSubtypeEnum;
}
