// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExecutionStatusEnum string

const (
	ExecutionStatusEnumPending                 ExecutionStatusEnum = "Pending"
	ExecutionStatusEnumCompleted               ExecutionStatusEnum = "Completed"
	ExecutionStatusEnumCompletedWithViolations ExecutionStatusEnum = "CompletedWithViolations"
	ExecutionStatusEnumInProgress              ExecutionStatusEnum = "InProgress"
	ExecutionStatusEnumFailed                  ExecutionStatusEnum = "Failed"
	ExecutionStatusEnumStopping                ExecutionStatusEnum = "Stopping"
	ExecutionStatusEnumStopped                 ExecutionStatusEnum = "Stopped"
)

func (e *ExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Completed":
		fallthrough
	case "CompletedWithViolations":
		fallthrough
	case "InProgress":
		fallthrough
	case "Failed":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		*e = ExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStatusEnum: %s", s)
	}
}
