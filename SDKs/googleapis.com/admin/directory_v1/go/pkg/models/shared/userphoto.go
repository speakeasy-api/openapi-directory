// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// UserPhoto - Successful response
type UserPhoto struct {
	// ETag of the resource.
	Etag *string `json:"etag,omitempty"`
	// Height of the photo in pixels.
	Height *int `json:"height,omitempty"`
	// The ID the API uses to uniquely identify the user.
	ID *string `json:"id,omitempty"`
	// The type of the API resource. For Photo resources, this is `admin#directory#user#photo`.
	Kind *string `json:"kind,omitempty"`
	// The MIME type of the photo. Allowed values are `JPEG`, `PNG`, `GIF`, `BMP`, `TIFF`, and web-safe base64 encoding.
	MimeType *string `json:"mimeType,omitempty"`
	// The user photo's upload data in [web-safe Base64](https://en.wikipedia.org/wiki/Base64#URL_applications) format in bytes. This means: * The slash (/) character is replaced with the underscore (_) character. * The plus sign (+) character is replaced with the hyphen (-) character. * The equals sign (=) character is replaced with the asterisk (*). * For padding, the period (.) character is used instead of the RFC-4648 baseURL definition which uses the equals sign (=) for padding. This is done to simplify URL-parsing. * Whatever the size of the photo being uploaded, the API downsizes it to 96x96 pixels.
	PhotoData *string `json:"photoData,omitempty"`
	// The user's primary email address.
	PrimaryEmail *string `json:"primaryEmail,omitempty"`
	// Width of the photo in pixels.
	Width *int `json:"width,omitempty"`
}
