<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Pivot - Describes the visible dimension columns and rows in the report response.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Pivot
{
    /**
     * Dimension names for visible columns in the report response. Including "dateRange" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request.
     * 
     * @var ?array<string> $fieldNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fieldNames = null;
    
    /**
     * The number of unique combinations of dimension values to return in this pivot. The `limit` parameter is required. A `limit` of 10,000 is common for single pivot requests. The product of the `limit` for each `pivot` in a `RunPivotReportRequest` must not exceed 100,000. For example, a two pivot request with `limit: 1000` in each pivot will fail because the product is `1,000,000`.
     * 
     * @var ?string $limit
     */
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $limit = null;
    
    /**
     * Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PivotMetricAggregationsEnum> $metricAggregations
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricAggregations')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\PivotMetricAggregationsEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metricAggregations = null;
    
    /**
     * The row count of the start row. The first row is counted as row 0.
     * 
     * @var ?string $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $offset = null;
    
    /**
     * Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderBy> $orderBys
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderBys')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderBy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $orderBys = null;
    
	public function __construct()
	{
		$this->fieldNames = null;
		$this->limit = null;
		$this->metricAggregations = null;
		$this->offset = null;
		$this->orderBys = null;
	}
}
