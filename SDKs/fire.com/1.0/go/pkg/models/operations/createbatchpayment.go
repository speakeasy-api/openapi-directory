// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CreateBatchPaymentNewBatchTypeEnum - The type of the batch - can be one of the listed 3
type CreateBatchPaymentNewBatchTypeEnum string

const (
	CreateBatchPaymentNewBatchTypeEnumBankTransfer     CreateBatchPaymentNewBatchTypeEnum = "BANK_TRANSFER"
	CreateBatchPaymentNewBatchTypeEnumInternalTransfer CreateBatchPaymentNewBatchTypeEnum = "INTERNAL_TRANSFER"
)

func (e *CreateBatchPaymentNewBatchTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BANK_TRANSFER":
		fallthrough
	case "INTERNAL_TRANSFER":
		*e = CreateBatchPaymentNewBatchTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBatchPaymentNewBatchTypeEnum: %s", s)
	}
}

// CreateBatchPaymentNewBatch - Details of the batch payment
type CreateBatchPaymentNewBatch struct {
	// An optional name you give to the batch at creation time.
	BatchName *string `json:"batchName,omitempty"`
	// An optional POST URL that all events for this batch will be sent to.
	CallBackURL *string `json:"callBackUrl,omitempty"`
	// GBP or EUR
	Currency *string `json:"currency,omitempty"`
	// An optional job number you can give to the batch to help link it to your own system.
	JobNumber *string `json:"jobNumber,omitempty"`
	// The type of the batch - can be one of the listed 3
	Type *CreateBatchPaymentNewBatchTypeEnum `json:"type,omitempty"`
}

type CreateBatchPaymentRequest struct {
	// Details of the batch payment
	Request CreateBatchPaymentNewBatch `request:"mediaType=application/json"`
}

// CreateBatchPaymentNewBatchResponse - Batch created successfully
type CreateBatchPaymentNewBatchResponse struct {
	// A UUID for this item.
	BatchUUID *string `json:"batchUuid,omitempty"`
}

type CreateBatchPaymentResponse struct {
	ContentType string
	// Batch created successfully
	NewBatchResponse *CreateBatchPaymentNewBatchResponse
	StatusCode       int
	RawResponse      *http.Response
}
