/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReturnPolicyOnlineReturnShippingFee } from "./returnpolicyonlinereturnshippingfee";
import { Expose, Type } from "class-transformer";

/**
 * The corresponding return label source.
 */
export enum ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum {
  ReturnLabelSourceUnspecified = "RETURN_LABEL_SOURCE_UNSPECIFIED",
  DownloadAndPrint = "DOWNLOAD_AND_PRINT",
  InTheBox = "IN_THE_BOX",
  CustomerResponsibility = "CUSTOMER_RESPONSIBILITY",
}

/**
 * The return reason category.
 */
export enum ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum {
  ReturnReasonCategoryUnspecified = "RETURN_REASON_CATEGORY_UNSPECIFIED",
  BuyerRemorse = "BUYER_REMORSE",
  ItemDefect = "ITEM_DEFECT",
}

/**
 * The return reason category info wrapper.
 */
export class ReturnPolicyOnlineReturnReasonCategoryInfo extends SpeakeasyBase {
  /**
   * The corresponding return label source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnLabelSource" })
  returnLabelSource?: ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum;

  /**
   * The return reason category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnReasonCategory" })
  returnReasonCategory?: ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum;

  /**
   * The return shipping fee. This can either be a fixed fee or a boolean to indicate that the customer pays the actual shipping cost.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnShippingFee" })
  @Type(() => ReturnPolicyOnlineReturnShippingFee)
  returnShippingFee?: ReturnPolicyOnlineReturnShippingFee;
}
