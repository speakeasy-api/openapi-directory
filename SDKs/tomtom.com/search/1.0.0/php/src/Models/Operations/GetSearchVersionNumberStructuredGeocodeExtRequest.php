<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSearchVersionNumberStructuredGeocodeExtRequest
{
    /**
     * 2 or 3 letter country code (e.g.: FR, ES).
     * 
     * @var string $countryCode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=countryCode')]
    public string $countryCode;
    
    /**
     * The county for the structured address.
     * 
     * @var ?string $countrySecondarySubdivision
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=countrySecondarySubdivision')]
    public ?string $countrySecondarySubdivision = null;
    
    /**
     * The state or province for the structured address.
     * 
     * @var ?string $countrySubdivision
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=countrySubdivision')]
    public ?string $countrySubdivision = null;
    
    /**
     * The named area for the structured address.
     * 
     * @var ?string $countryTertiarySubdivision
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=countryTertiarySubdivision')]
    public ?string $countryTertiarySubdivision = null;
    
    /**
     * The cross street name for the structured address.
     * 
     * @var ?string $crossStreet
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=crossStreet')]
    public ?string $crossStreet = null;
    
    /**
     * Expected response format.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ext')]
    public \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext;
    
    /**
     * Indexes for which extended postal codes should be included in the results. Available indexes are:
     * 
     *   - <b>Addr</b> = Address ranges
     *   - <b>Geo</b> = Geographies
     *   - <b>PAD</b> = Point Addresses
     *   - <b>POI</b> = Points of Interest
     *   - <b>Str</b> = Streets
     *   - <b>XStr</b> = Cross Streets (intersections)
     * 
     * @var ?string $extendedPostalCodesFor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=extendedPostalCodesFor')]
    public ?string $extendedPostalCodesFor = null;
    
    /**
     * Language in which search results should be returned. Should be one of <a href="/search-api/search-api-documentation/supported-languages">supported IETF language tags</a>, case insensitive.
     * 
     * @var ?string $language
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=language')]
    public ?string $language = null;
    
    /**
     * Maximum number of search results that will be returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * The municipality (city/town) for the structured address.
     * 
     * @var ?string $municipality
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=municipality')]
    public ?string $municipality = null;
    
    /**
     * The municipality subdivision (sub/super city) for the structured address.
     * 
     * @var ?string $municipalitySubdivision
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=municipalitySubdivision')]
    public ?string $municipalitySubdivision = null;
    
    /**
     * Starting offset of the returned results within the full result set.
     * 
     * @var ?int $ofs
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ofs')]
    public ?int $ofs = null;
    
    /**
     * The zip code or postal code for the structured address.
     * 
     * @var ?string $postalCode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=postalCode')]
    public ?string $postalCode = null;
    
    /**
     * The street name for the structured address.
     * 
     * @var ?string $streetName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=streetName')]
    public ?string $streetName = null;
    
    /**
     * The street number for the structured address.
     * 
     * @var ?string $streetNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=streetNumber')]
    public ?string $streetNumber = null;
    
    /**
     * Service version number. The current value is 2.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=versionNumber')]
    public \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber;
    
	public function __construct()
	{
		$this->countryCode = "";
		$this->countrySecondarySubdivision = null;
		$this->countrySubdivision = null;
		$this->countryTertiarySubdivision = null;
		$this->crossStreet = null;
		$this->ext = \OpenAPI\OpenAPI\Models\Shared\ExtEnum::JSON;
		$this->extendedPostalCodesFor = null;
		$this->language = null;
		$this->limit = null;
		$this->municipality = null;
		$this->municipalitySubdivision = null;
		$this->ofs = null;
		$this->postalCode = null;
		$this->streetName = null;
		$this->streetNumber = null;
		$this->versionNumber = \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum::TWO;
	}
}
