"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuntimeSoftwareConfig = exports.RuntimeSoftwareConfigInput = exports.RuntimeSoftwareConfigPostStartupScriptBehaviorEnum = void 0;
var utils_1 = require("../../../internal/utils");
var containerimage_1 = require("./containerimage");
var class_transformer_1 = require("class-transformer");
/**
 * Behavior for the post startup script.
 */
var RuntimeSoftwareConfigPostStartupScriptBehaviorEnum;
(function (RuntimeSoftwareConfigPostStartupScriptBehaviorEnum) {
    RuntimeSoftwareConfigPostStartupScriptBehaviorEnum["PostStartupScriptBehaviorUnspecified"] = "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED";
    RuntimeSoftwareConfigPostStartupScriptBehaviorEnum["RunEveryStart"] = "RUN_EVERY_START";
    RuntimeSoftwareConfigPostStartupScriptBehaviorEnum["DownloadAndRunEveryStart"] = "DOWNLOAD_AND_RUN_EVERY_START";
})(RuntimeSoftwareConfigPostStartupScriptBehaviorEnum = exports.RuntimeSoftwareConfigPostStartupScriptBehaviorEnum || (exports.RuntimeSoftwareConfigPostStartupScriptBehaviorEnum = {}));
/**
 * Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
 */
var RuntimeSoftwareConfigInput = /** @class */ (function (_super) {
    __extends(RuntimeSoftwareConfigInput, _super);
    function RuntimeSoftwareConfigInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customGpuDriverPath" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfigInput.prototype, "customGpuDriverPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disableTerminal" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfigInput.prototype, "disableTerminal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enableHealthMonitoring" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfigInput.prototype, "enableHealthMonitoring", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idleShutdown" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfigInput.prototype, "idleShutdown", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idleShutdownTimeout" }),
        __metadata("design:type", Number)
    ], RuntimeSoftwareConfigInput.prototype, "idleShutdownTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "installGpuDriver" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfigInput.prototype, "installGpuDriver", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: containerimage_1.ContainerImage }),
        (0, class_transformer_1.Expose)({ name: "kernels" }),
        (0, class_transformer_1.Type)(function () { return containerimage_1.ContainerImage; }),
        __metadata("design:type", Array)
    ], RuntimeSoftwareConfigInput.prototype, "kernels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mixerDisabled" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfigInput.prototype, "mixerDisabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notebookUpgradeSchedule" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfigInput.prototype, "notebookUpgradeSchedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postStartupScript" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfigInput.prototype, "postStartupScript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postStartupScriptBehavior" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfigInput.prototype, "postStartupScriptBehavior", void 0);
    return RuntimeSoftwareConfigInput;
}(utils_1.SpeakeasyBase));
exports.RuntimeSoftwareConfigInput = RuntimeSoftwareConfigInput;
/**
 * Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
 */
var RuntimeSoftwareConfig = /** @class */ (function (_super) {
    __extends(RuntimeSoftwareConfig, _super);
    function RuntimeSoftwareConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customGpuDriverPath" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfig.prototype, "customGpuDriverPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disableTerminal" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfig.prototype, "disableTerminal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enableHealthMonitoring" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfig.prototype, "enableHealthMonitoring", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idleShutdown" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfig.prototype, "idleShutdown", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idleShutdownTimeout" }),
        __metadata("design:type", Number)
    ], RuntimeSoftwareConfig.prototype, "idleShutdownTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "installGpuDriver" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfig.prototype, "installGpuDriver", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: containerimage_1.ContainerImage }),
        (0, class_transformer_1.Expose)({ name: "kernels" }),
        (0, class_transformer_1.Type)(function () { return containerimage_1.ContainerImage; }),
        __metadata("design:type", Array)
    ], RuntimeSoftwareConfig.prototype, "kernels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mixerDisabled" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfig.prototype, "mixerDisabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notebookUpgradeSchedule" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfig.prototype, "notebookUpgradeSchedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postStartupScript" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfig.prototype, "postStartupScript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postStartupScriptBehavior" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfig.prototype, "postStartupScriptBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "upgradeable" }),
        __metadata("design:type", Boolean)
    ], RuntimeSoftwareConfig.prototype, "upgradeable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        __metadata("design:type", String)
    ], RuntimeSoftwareConfig.prototype, "version", void 0);
    return RuntimeSoftwareConfig;
}(utils_1.SpeakeasyBase));
exports.RuntimeSoftwareConfig = RuntimeSoftwareConfig;
