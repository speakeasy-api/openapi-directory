"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum(str, Enum):
    r"""The payer responsibility."""
    SERVICE_OWNER = 'ServiceOwner'

class CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum(str, Enum):
    r"""<p>The verification state of the VPC endpoint service.</p> <p>&gt;Consumers of the endpoint service can use the private name only when the state is <code>verified</code>.</p>"""
    PENDING_VERIFICATION = 'pendingVerification'
    VERIFIED = 'verified'
    FAILED = 'failed'


@dataclasses.dataclass
class CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfiguration:
    r"""Information about the endpoint service private DNS name configuration."""
    
    name: Optional[str] = dataclasses.field(default=None)  
    state: Optional[CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfigurationStateEnum] = dataclasses.field(default=None)  
    type: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    
class CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum(str, Enum):
    r"""The service state."""
    PENDING = 'Pending'
    AVAILABLE = 'Available'
    DELETING = 'Deleting'
    DELETED = 'Deleted'
    FAILED = 'Failed'

class CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum(str, Enum):
    r"""The type of service."""
    INTERFACE = 'Interface'
    GATEWAY = 'Gateway'
    GATEWAY_LOAD_BALANCER = 'GatewayLoadBalancer'


@dataclasses.dataclass
class CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceType:
    r"""Describes the type of service for a VPC endpoint."""
    
    service_type: Optional[CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceTypeServiceTypeEnum] = dataclasses.field(default=None)  
    
class CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum(str, Enum):
    IPV4 = 'ipv4'
    IPV6 = 'ipv6'


@dataclasses.dataclass
class CreateVpcEndpointServiceConfigurationResultServiceConfigurationTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateVpcEndpointServiceConfigurationResultServiceConfiguration:
    r"""Information about the service configuration."""
    
    acceptance_required: Optional[bool] = dataclasses.field(default=None)  
    availability_zones: Optional[list[str]] = dataclasses.field(default=None)  
    base_endpoint_dns_names: Optional[list[str]] = dataclasses.field(default=None)  
    gateway_load_balancer_arns: Optional[list[str]] = dataclasses.field(default=None)  
    manages_vpc_endpoints: Optional[bool] = dataclasses.field(default=None)  
    network_load_balancer_arns: Optional[list[str]] = dataclasses.field(default=None)  
    payer_responsibility: Optional[CreateVpcEndpointServiceConfigurationResultServiceConfigurationPayerResponsibilityEnum] = dataclasses.field(default=None)  
    private_dns_name: Optional[str] = dataclasses.field(default=None)  
    private_dns_name_configuration: Optional[CreateVpcEndpointServiceConfigurationResultServiceConfigurationPrivateDNSNameConfiguration] = dataclasses.field(default=None)  
    service_id: Optional[str] = dataclasses.field(default=None)  
    service_name: Optional[str] = dataclasses.field(default=None)  
    service_state: Optional[CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceStateEnum] = dataclasses.field(default=None)  
    service_type: Optional[list[CreateVpcEndpointServiceConfigurationResultServiceConfigurationServiceType]] = dataclasses.field(default=None)  
    supported_ip_address_types: Optional[list[CreateVpcEndpointServiceConfigurationResultServiceConfigurationSupportedIPAddressTypesEnum]] = dataclasses.field(default=None)  
    tags: Optional[list[CreateVpcEndpointServiceConfigurationResultServiceConfigurationTags]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateVpcEndpointServiceConfigurationResult:
    r"""Success"""
    
    client_token: Optional[str] = dataclasses.field(default=None)  
    service_configuration: Optional[CreateVpcEndpointServiceConfigurationResultServiceConfiguration] = dataclasses.field(default=None)  
    