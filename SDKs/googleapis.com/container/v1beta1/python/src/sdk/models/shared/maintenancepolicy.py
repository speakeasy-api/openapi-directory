"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import maintenancewindow as shared_maintenancewindow
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MaintenancePolicy:
    r"""MaintenancePolicy defines the maintenance policy to be used for the cluster."""
    
    resource_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceVersion'), 'exclude': lambda f: f is None }})
    r"""A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy."""  
    window: Optional[shared_maintenancewindow.MaintenanceWindow] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('window'), 'exclude': lambda f: f is None }})
    r"""MaintenanceWindow defines the maintenance window to be used for the cluster."""  
    