"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import measurementunit as shared_measurementunit
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderQuantityUnit:
    r"""Contains the measurement unit for a quantity and a precision that
    specifies the number of digits after the decimal point for decimal quantities.
    """
    
    catalog_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalog_version'), 'exclude': lambda f: f is None }})
    r"""The version of the catalog object that this measurement unit references.
    
    This field is set when this is a catalog-backed measurement unit.
    """  
    measurement_unit: Optional[shared_measurementunit.MeasurementUnit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurement_unit'), 'exclude': lambda f: f is None }})
    r"""Represents a unit of measurement to use with a quantity, such as ounces
    or inches. Exactly one of the following fields are required: `custom_unit`,
    `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
    """  
    precision: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('precision'), 'exclude': lambda f: f is None }})
    r"""For non-integer quantities, represents the number of digits after the decimal point that are
    recorded for this quantity.
    
    For example, a precision of 1 allows quantities such as `\"1.0\"` and `\"1.1\"`, but not `\"1.01\"`.
    
    Min: 0. Max: 5.
    """  
    