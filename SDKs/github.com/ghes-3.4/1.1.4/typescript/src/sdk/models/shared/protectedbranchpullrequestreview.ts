/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Integration } from "./integration";
import { SimpleUser } from "./simpleuser";
import { Team } from "./team";
import { Expose, Type } from "class-transformer";

/**
 * Allow specific users, teams, or apps to bypass pull request requirements.
 */
export class ProtectedBranchPullRequestReviewBypassPullRequestAllowances extends SpeakeasyBase {
  /**
   * The list of apps allowed to bypass pull request requirements.
   */
  @SpeakeasyMetadata({ elemType: Integration })
  @Expose({ name: "apps" })
  @Type(() => Integration)
  apps?: Integration[];

  /**
   * The list of teams allowed to bypass pull request requirements.
   */
  @SpeakeasyMetadata({ elemType: Team })
  @Expose({ name: "teams" })
  @Type(() => Team)
  teams?: Team[];

  /**
   * The list of users allowed to bypass pull request requirements.
   */
  @SpeakeasyMetadata({ elemType: SimpleUser })
  @Expose({ name: "users" })
  @Type(() => SimpleUser)
  users?: SimpleUser[];
}

export class ProtectedBranchPullRequestReviewDismissalRestrictions extends SpeakeasyBase {
  /**
   * The list of apps with review dismissal access.
   */
  @SpeakeasyMetadata({ elemType: Integration })
  @Expose({ name: "apps" })
  @Type(() => Integration)
  apps?: Integration[];

  /**
   * The list of teams with review dismissal access.
   */
  @SpeakeasyMetadata({ elemType: Team })
  @Expose({ name: "teams" })
  @Type(() => Team)
  teams?: Team[];

  @SpeakeasyMetadata()
  @Expose({ name: "teams_url" })
  teamsUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The list of users with review dismissal access.
   */
  @SpeakeasyMetadata({ elemType: SimpleUser })
  @Expose({ name: "users" })
  @Type(() => SimpleUser)
  users?: SimpleUser[];

  @SpeakeasyMetadata()
  @Expose({ name: "users_url" })
  usersUrl?: string;
}

/**
 * Protected Branch Pull Request Review
 */
export class ProtectedBranchPullRequestReview extends SpeakeasyBase {
  /**
   * Allow specific users, teams, or apps to bypass pull request requirements.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bypass_pull_request_allowances" })
  @Type(() => ProtectedBranchPullRequestReviewBypassPullRequestAllowances)
  bypassPullRequestAllowances?: ProtectedBranchPullRequestReviewBypassPullRequestAllowances;

  @SpeakeasyMetadata()
  @Expose({ name: "dismiss_stale_reviews" })
  dismissStaleReviews: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "dismissal_restrictions" })
  @Type(() => ProtectedBranchPullRequestReviewDismissalRestrictions)
  dismissalRestrictions?: ProtectedBranchPullRequestReviewDismissalRestrictions;

  @SpeakeasyMetadata()
  @Expose({ name: "require_code_owner_reviews" })
  requireCodeOwnerReviews: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "required_approving_review_count" })
  requiredApprovingReviewCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
