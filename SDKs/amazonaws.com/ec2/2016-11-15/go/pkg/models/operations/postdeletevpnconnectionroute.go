// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteVpnConnectionRouteActionEnum
type POSTDeleteVpnConnectionRouteActionEnum string

const (
	POSTDeleteVpnConnectionRouteActionEnumDeleteVpnConnectionRoute POSTDeleteVpnConnectionRouteActionEnum = "DeleteVpnConnectionRoute"
)

func (e *POSTDeleteVpnConnectionRouteActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteVpnConnectionRoute":
		*e = POSTDeleteVpnConnectionRouteActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteVpnConnectionRouteActionEnum: %s", s)
	}
}

// POSTDeleteVpnConnectionRouteVersionEnum
type POSTDeleteVpnConnectionRouteVersionEnum string

const (
	POSTDeleteVpnConnectionRouteVersionEnumTwoThousandAndSixteen1115 POSTDeleteVpnConnectionRouteVersionEnum = "2016-11-15"
)

func (e *POSTDeleteVpnConnectionRouteVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDeleteVpnConnectionRouteVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteVpnConnectionRouteVersionEnum: %s", s)
	}
}

type POSTDeleteVpnConnectionRouteQueryParams struct {
	Action  POSTDeleteVpnConnectionRouteActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDeleteVpnConnectionRouteVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDeleteVpnConnectionRouteHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteVpnConnectionRouteRequest struct {
	QueryParams POSTDeleteVpnConnectionRouteQueryParams
	Headers     POSTDeleteVpnConnectionRouteHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDeleteVpnConnectionRouteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
