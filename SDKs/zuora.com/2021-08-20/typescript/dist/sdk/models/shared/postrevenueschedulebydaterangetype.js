"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.POSTRevenueScheduleByDateRangeType = exports.POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var postrevenueschedulebydaterangetyperevenueevent_1 = require("./postrevenueschedulebydaterangetyperevenueevent");
var class_transformer_1 = require("class-transformer");
/**
 * How you want to distribute the revenue.
 *
 * @remarks
 *
 *
 * * Daily Distribution: Distributes revenue evenly across each day between the recognitionStart and recognitionEnd dates.
 * * Monthly Distribution (Back Load): Back loads the revenue so you distribute the monthly amount in the partial month in the end only.
 * * Monthly Distribution (Front Load): Front loads the revenue so you distribute the monthly amount in the partial month in the beginning only.
 * * Monthly Distribution (Proration by Days): Splits the revenue amount between the two partial months.
 *
 * **Note:** To use any of the Monthly Distribution options, you must have the "Monthly recognition over time" model enabled in **Settings > Finance > Manage Revenue Recognition Models** in the Zuora UI.
 *
 */
var POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum;
(function (POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum) {
    POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum["DailyDistribution"] = "Daily Distribution";
    POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum["MonthlyDistributionBackLoad"] = "Monthly Distribution (Back Load)";
    POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum["MonthlyDistributionFrontLoad"] = "Monthly Distribution (Front Load)";
    POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum["MonthlyDistributionProrationByDays"] = "Monthly Distribution (Proration by Days)";
})(POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum = exports.POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum || (exports.POSTRevenueScheduleByDateRangeTypeDistributionTypeEnum = {}));
/**
 * Container for custom fields of a Revenue Schedule object.
 *
 * @remarks
 *
 */
var POSTRevenueScheduleByDateRangeType = /** @class */ (function (_super) {
    __extends(POSTRevenueScheduleByDateRangeType, _super);
    function POSTRevenueScheduleByDateRangeType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "distributionType" }),
        __metadata("design:type", String)
    ], POSTRevenueScheduleByDateRangeType.prototype, "distributionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], POSTRevenueScheduleByDateRangeType.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recognitionEnd" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTRevenueScheduleByDateRangeType.prototype, "recognitionEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recognitionStart" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTRevenueScheduleByDateRangeType.prototype, "recognitionStart", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revenueEvent" }),
        (0, class_transformer_1.Type)(function () { return postrevenueschedulebydaterangetyperevenueevent_1.POSTRevenueScheduleByDateRangeTypeRevenueEvent; }),
        __metadata("design:type", postrevenueschedulebydaterangetyperevenueevent_1.POSTRevenueScheduleByDateRangeTypeRevenueEvent)
    ], POSTRevenueScheduleByDateRangeType.prototype, "revenueEvent", void 0);
    return POSTRevenueScheduleByDateRangeType;
}(utils_1.SpeakeasyBase));
exports.POSTRevenueScheduleByDateRangeType = POSTRevenueScheduleByDateRangeType;
