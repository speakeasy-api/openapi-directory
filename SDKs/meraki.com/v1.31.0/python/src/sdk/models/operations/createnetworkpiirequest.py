"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CreateNetworkPiiRequestRequestBodyTypeEnum(str, Enum):
    r"""One of \\"delete\\" or \\"restrict processing\\" """
    DELETE = 'delete'
    RESTRICT_PROCESSING = 'restrict processing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateNetworkPiiRequestRequestBody:
    
    datasets: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datasets'), 'exclude': lambda f: f is None }})
    r"""The datasets related to the provided key that should be deleted. Only applies to \\"delete\\" requests. The value \\"all\\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email of a network user account. Only applies to \\"delete\\" requests."""  
    mac: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mac'), 'exclude': lambda f: f is None }})
    r"""The MAC of a network client device. Applies to both \\"restrict processing\\" and \\"delete\\" requests."""  
    sm_device_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('smDeviceId'), 'exclude': lambda f: f is None }})
    r"""The sm_device_id of a Systems Manager device. The only way to \\"restrict processing\\" or \\"delete\\" a Systems Manager device. Must include \\"device\\" in the dataset for a \\"delete\\" request to destroy the device."""  
    sm_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('smUserId'), 'exclude': lambda f: f is None }})
    r"""The sm_user_id of a Systems Manager user. The only way to \\"restrict processing\\" or \\"delete\\" a Systems Manager user. Must include \\"user\\" in the dataset for a \\"delete\\" request to destroy the user."""  
    type: Optional[CreateNetworkPiiRequestRequestBodyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""One of \\"delete\\" or \\"restrict processing\\" """  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""The username of a network log in. Only applies to \\"delete\\" requests."""  
    

@dataclasses.dataclass
class CreateNetworkPiiRequestRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[CreateNetworkPiiRequestRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class CreateNetworkPiiRequestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_network_pii_request_201_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    