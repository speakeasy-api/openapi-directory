/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsSecretsManagerSecretRotationRules } from "./awssecretsmanagersecretrotationrules";
import { Expose, Type } from "class-transformer";

/**
 * Details about an Secrets Manager secret.
 */
export class AwsSecretsManagerSecretDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Deleted" })
  deleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RotationEnabled" })
  rotationEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "RotationLambdaArn" })
  rotationLambdaArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RotationOccurredWithinFrequency" })
  rotationOccurredWithinFrequency?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "RotationRules" })
  @Type(() => AwsSecretsManagerSecretRotationRules)
  rotationRules?: AwsSecretsManagerSecretRotationRules;
}
