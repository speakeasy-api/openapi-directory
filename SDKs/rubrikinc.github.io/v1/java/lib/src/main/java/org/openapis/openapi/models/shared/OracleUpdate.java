/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OracleUpdate - Properties of the Oracle database object to be updated. object.
 */
public class OracleUpdate {
    /**
     * ID of the SLA domain protecting the specified Oracle object. Log backup jobs are no longer scheduled if the SLA domain indicates the Oracle object is unprotected. The specified SLA domain is not used to configure the protection or retention for this Oracle object. This is a DEPRECATED field, and will be removed in later releases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainIdDeprecated")
    public String configuredSlaDomainIdDeprecated;

    public OracleUpdate withConfiguredSlaDomainIdDeprecated(String configuredSlaDomainIdDeprecated) {
        this.configuredSlaDomainIdDeprecated = configuredSlaDomainIdDeprecated;
        return this;
    }
    
    /**
     * Specifies an interval in hours. For Oracle archived redo log files whose nextTime is before (now - interval), the next log snapshot job will delete them from the host. Set to 0 for inheriting the value from its parent; -1 for immediate deletion; and -2 to skip log deletion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostLogRetentionHours")
    public Integer hostLogRetentionHours;

    public OracleUpdate withHostLogRetentionHours(Integer hostLogRetentionHours) {
        this.hostLogRetentionHours = hostLogRetentionHours;
        return this;
    }
    
    /**
     * Path where the NFS share is mounted on the host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostMount")
    public String hostMount;

    public OracleUpdate withHostMount(String hostMount) {
        this.hostMount = hostMount;
        return this;
    }
    
    /**
     * Specifies an interval in minutes. This interval is the period between successive log backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logBackupFrequencyInMinutes")
    public Integer logBackupFrequencyInMinutes;

    public OracleUpdate withLogBackupFrequencyInMinutes(Integer logBackupFrequencyInMinutes) {
        this.logBackupFrequencyInMinutes = logBackupFrequencyInMinutes;
        return this;
    }
    
    /**
     * Specifies an interval in hours. Log backups are retained for the duration of the interval.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logRetentionHours")
    public Integer logRetentionHours;

    public OracleUpdate withLogRetentionHours(Integer logRetentionHours) {
        this.logRetentionHours = logRetentionHours;
        return this;
    }
    
    /**
     * Specifies an order for the RAC nodes. Automated Oracle backups use the RAC nodes in the specified order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeOrder")
    public OracleNodeOrder[] nodeOrder;

    public OracleUpdate withNodeOrder(OracleNodeOrder[] nodeOrder) {
        this.nodeOrder = nodeOrder;
        return this;
    }
    
    /**
     * Number of channels used to backup the Oracle database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numChannels")
    public Integer numChannels;

    public OracleUpdate withNumChannels(Integer numChannels) {
        this.numChannels = numChannels;
        return this;
    }
    
    public OracleUpdate(){}
}
