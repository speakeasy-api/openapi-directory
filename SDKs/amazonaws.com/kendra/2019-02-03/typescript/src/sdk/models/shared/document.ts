/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContentTypeEnum } from "./contenttypeenum";
import { DocumentAttribute } from "./documentattribute";
import { HierarchicalPrincipal } from "./hierarchicalprincipal";
import { Principal } from "./principal";
import { S3Path } from "./s3path";
import { Expose, Type } from "class-transformer";

/**
 * A document in an index.
 */
export class Document extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccessControlConfigurationId" })
  accessControlConfigurationId?: string;

  @SpeakeasyMetadata({ elemType: Principal })
  @Expose({ name: "AccessControlList" })
  @Type(() => Principal)
  accessControlList?: Principal[];

  @SpeakeasyMetadata({ elemType: DocumentAttribute })
  @Expose({ name: "Attributes" })
  @Type(() => DocumentAttribute)
  attributes?: DocumentAttribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "Blob" })
  blob?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContentType" })
  contentType?: ContentTypeEnum;

  @SpeakeasyMetadata({ elemType: HierarchicalPrincipal })
  @Expose({ name: "HierarchicalAccessControlList" })
  @Type(() => HierarchicalPrincipal)
  hierarchicalAccessControlList?: HierarchicalPrincipal[];

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  /**
   * Information required to find a specific file in an Amazon S3 bucket.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "S3Path" })
  @Type(() => S3Path)
  s3Path?: S3Path;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;
}
