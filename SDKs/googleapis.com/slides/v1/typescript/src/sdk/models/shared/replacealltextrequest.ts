/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SubstringMatchCriteria } from "./substringmatchcriteria";
import { Expose, Type } from "class-transformer";

/**
 * Replaces all instances of text matching a criteria with replace text.
 */
export class ReplaceAllTextRequest extends SpeakeasyBase {
  /**
   * A criteria that matches a specific string of text in a shape or table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containsText" })
  @Type(() => SubstringMatchCriteria)
  containsText?: SubstringMatchCriteria;

  /**
   * If non-empty, limits the matches to page elements only on the given pages. Returns a 400 bad request error if given the page object ID of a notes master, or if a page with that object ID doesn't exist in the presentation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageObjectIds" })
  pageObjectIds?: string[];

  /**
   * The text that will replace the matched text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replaceText" })
  replaceText?: string;
}
