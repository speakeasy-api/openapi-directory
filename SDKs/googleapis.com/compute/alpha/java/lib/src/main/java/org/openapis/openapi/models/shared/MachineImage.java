/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MachineImage - Represents a machine image resource. A machine image is a Compute Engine resource that stores all the configuration, metadata, permissions, and data from one or more disks required to create a Virtual machine (VM) instance. For more information, see Machine images.
 */
public class MachineImage {
    /**
     * [Output Only] The creation timestamp for this machine image in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public MachineImage withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public MachineImage withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Input Only] Whether to attempt an application consistent machine image by informing the OS to prepare for the snapshot process.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guestFlush")
    public Boolean guestFlush;

    public MachineImage withGuestFlush(Boolean guestFlush) {
        this.guestFlush = guestFlush;
        return this;
    }
    
    /**
     * [Output Only] A unique identifier for this machine image. The server defines this identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public MachineImage withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceProperties")
    public InstanceProperties instanceProperties;

    public MachineImage withInstanceProperties(InstanceProperties instanceProperties) {
        this.instanceProperties = instanceProperties;
        return this;
    }
    
    /**
     * [Output Only] The resource type, which is always compute#machineImage for machine image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public MachineImage withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineImageEncryptionKey")
    public CustomerEncryptionKey machineImageEncryptionKey;

    public MachineImage withMachineImageEncryptionKey(CustomerEncryptionKey machineImageEncryptionKey) {
        this.machineImageEncryptionKey = machineImageEncryptionKey;
        return this;
    }
    
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public MachineImage withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;

    public MachineImage withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * An array of Machine Image specific properties for disks attached to the source instance
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("savedDisks")
    public SavedDisk[] savedDisks;

    public MachineImage withSavedDisks(SavedDisk[] savedDisks) {
        this.savedDisks = savedDisks;
        return this;
    }
    
    /**
     * [Output Only] The URL for this machine image. The server defines this URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public MachineImage withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;

    public MachineImage withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * [Input Only] The customer-supplied encryption key of the disks attached to the source instance. Required if the source disk is protected by a customer-supplied encryption key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDiskEncryptionKeys")
    public SourceDiskEncryptionKey[] sourceDiskEncryptionKeys;

    public MachineImage withSourceDiskEncryptionKeys(SourceDiskEncryptionKey[] sourceDiskEncryptionKeys) {
        this.sourceDiskEncryptionKeys = sourceDiskEncryptionKeys;
        return this;
    }
    
    /**
     * The source instance used to create the machine image. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceInstance")
    public String sourceInstance;

    public MachineImage withSourceInstance(String sourceInstance) {
        this.sourceInstance = sourceInstance;
        return this;
    }
    
    /**
     * DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceInstanceProperties")
    public SourceInstanceProperties sourceInstanceProperties;

    public MachineImage withSourceInstanceProperties(SourceInstanceProperties sourceInstanceProperties) {
        this.sourceInstanceProperties = sourceInstanceProperties;
        return this;
    }
    
    /**
     * [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public MachineImageStatusEnum status;

    public MachineImage withStatus(MachineImageStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageLocations")
    public String[] storageLocations;

    public MachineImage withStorageLocations(String[] storageLocations) {
        this.storageLocations = storageLocations;
        return this;
    }
    
    /**
     * [Output Only] Total size of the storage used by the machine image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalStorageBytes")
    public String totalStorageBytes;

    public MachineImage withTotalStorageBytes(String totalStorageBytes) {
        this.totalStorageBytes = totalStorageBytes;
        return this;
    }
    
    public MachineImage(){}
}
