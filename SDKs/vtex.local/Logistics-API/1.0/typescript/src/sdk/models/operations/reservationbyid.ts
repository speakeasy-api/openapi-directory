/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ReservationByIdRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=reservationId",
  })
  reservationId: string;
}

export class ReservationById200ApplicationJSONSlaRequestItem1Dimension1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height: number;

  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxSumDimension" })
  maxSumDimension: number;

  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight: number;

  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width: number;
}

export class ReservationById200ApplicationJSONSlaRequestItem1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additionalHandlingTime" })
  additionalHandlingTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  @Type(() => ReservationById200ApplicationJSONSlaRequestItem1Dimension1)
  dimension: ReservationById200ApplicationJSONSlaRequestItem1Dimension1;

  @SpeakeasyMetadata()
  @Expose({ name: "groupItemId" })
  groupItemId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kitItem" })
  kitItem: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "modal" })
  modal: string;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimitedQuantity" })
  unlimitedQuantity: boolean;
}

export class ReservationById200ApplicationJSONSlaRequestLocation1InStore1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IsCheckedIn" })
  isCheckedIn: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "StoreId" })
  storeId: string;
}

export class ReservationById200ApplicationJSONSlaRequestLocation1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryPointId" })
  deliveryPointId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inStore" })
  @Type(() => ReservationById200ApplicationJSONSlaRequestLocation1InStore1)
  inStore: ReservationById200ApplicationJSONSlaRequestLocation1InStore1;

  @SpeakeasyMetadata()
  @Expose({ name: "point" })
  point: string;

  @SpeakeasyMetadata()
  @Expose({ name: "zipCode" })
  zipCode: string;
}

export class ReservationById200ApplicationJSONSlaRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryWindows" })
  deliveryWindows?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dockTime" })
  dockTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "freightTableId" })
  freightTableId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "freightTableName" })
  freightTableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => ReservationById200ApplicationJSONSlaRequestItem1)
  item?: ReservationById200ApplicationJSONSlaRequestItem1;

  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ReservationById200ApplicationJSONSlaRequestLocation1)
  location?: ReservationById200ApplicationJSONSlaRequestLocation1;

  @SpeakeasyMetadata()
  @Expose({ name: "pickupStoreInfo" })
  pickupStoreInfo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "promotionalPrice" })
  promotionalPrice?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slaType" })
  slaType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slaTypeName" })
  slaTypeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeToDockPlusDockTime" })
  timeToDockPlusDockTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalTime" })
  totalTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transitTime" })
  transitTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wareHouseId" })
  wareHouseId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wmsEndPoint" })
  wmsEndPoint?: string;
}

/**
 * OK
 */
export class ReservationById200ApplicationJSON extends SpeakeasyBase {
  /**
   * Authorized date in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizedDateUtc" })
  authorizedDateUtc?: string;

  /**
   * Canceled date in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CanceledDateUtc" })
  canceledDateUtc?: string;

  /**
   * Confirmed date in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ConfirmedDateUtc" })
  confirmedDateUtc?: string;

  /**
   * Information on errors, if there are any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Errors" })
  errors?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IsSucess" })
  isSucess?: boolean;

  /**
   * Date of the last update in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateDateUtc" })
  lastUpdateDateUtc?: string;

  /**
   * Lock ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LockId" })
  lockId?: string;

  /**
   * Maximum confirmation date in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaximumConfirmationDateUtc" })
  maximumConfirmationDateUtc?: string;

  /**
   * Pickup point item options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PickupPointItemOptions" })
  pickupPointItemOptions?: string;

  /**
   * Reservation date in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReservationDateUtc" })
  reservationDateUtc?: string;

  /**
   * Sales channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SalesChannel" })
  salesChannel?: string;

  /**
   * Information on SLA request.
   */
  @SpeakeasyMetadata({ elemType: ReservationById200ApplicationJSONSlaRequest })
  @Expose({ name: "SlaRequest" })
  @Type(() => ReservationById200ApplicationJSONSlaRequest)
  slaRequest?: ReservationById200ApplicationJSONSlaRequest[];

  /**
   * Reservation status, being:
   * 
   * @remarks
   * 
`0`: `NotCommitted`
   * 
`1`: `Authorized`
   * 
`2`: `Confirmed`
   * 
`3`: `Canceled_AbortedCommitted`
   * 
`4`: `Canceled_AuthorizationExpired`
   * 
`5`: `Canceled_Manually`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: number;
}

export class ReservationByIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  reservationById200ApplicationJSONObject?: ReservationById200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
