/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FreeListingsProgramStatusRegionStatus - Status of program and region.
 */
public class FreeListingsProgramStatusRegionStatus {
    /**
     * Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disapprovalDate")
    public String disapprovalDate;

    public FreeListingsProgramStatusRegionStatus withDisapprovalDate(String disapprovalDate) {
        this.disapprovalDate = disapprovalDate;
        return this;
    }
    
    /**
     * Eligibility status of the standard free listing program.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eligibilityStatus")
    public FreeListingsProgramStatusRegionStatusEligibilityStatusEnum eligibilityStatus;

    public FreeListingsProgramStatusRegionStatus withEligibilityStatus(FreeListingsProgramStatusRegionStatusEligibilityStatusEnum eligibilityStatus) {
        this.eligibilityStatus = eligibilityStatus;
        return this;
    }
    
    /**
     * Issues that must be fixed to be eligible for review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onboardingIssues")
    public String[] onboardingIssues;

    public FreeListingsProgramStatusRegionStatus withOnboardingIssues(String[] onboardingIssues) {
        this.onboardingIssues = onboardingIssues;
        return this;
    }
    
    /**
     * The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionCodes")
    public String[] regionCodes;

    public FreeListingsProgramStatusRegionStatus withRegionCodes(String[] regionCodes) {
        this.regionCodes = regionCodes;
        return this;
    }
    
    /**
     * If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewEligibilityStatus")
    public FreeListingsProgramStatusRegionStatusReviewEligibilityStatusEnum reviewEligibilityStatus;

    public FreeListingsProgramStatusRegionStatus withReviewEligibilityStatus(FreeListingsProgramStatusRegionStatusReviewEligibilityStatusEnum reviewEligibilityStatus) {
        this.reviewEligibilityStatus = reviewEligibilityStatus;
        return this;
    }
    
    /**
     * Review ineligibility reason if account is not eligible for review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewIneligibilityReason")
    public FreeListingsProgramStatusRegionStatusReviewIneligibilityReasonEnum reviewIneligibilityReason;

    public FreeListingsProgramStatusRegionStatus withReviewIneligibilityReason(FreeListingsProgramStatusRegionStatusReviewIneligibilityReasonEnum reviewIneligibilityReason) {
        this.reviewIneligibilityReason = reviewIneligibilityReason;
        return this;
    }
    
    /**
     * Reason a program in a specific region isn\u2019t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewIneligibilityReasonDescription")
    public String reviewIneligibilityReasonDescription;

    public FreeListingsProgramStatusRegionStatus withReviewIneligibilityReasonDescription(String reviewIneligibilityReasonDescription) {
        this.reviewIneligibilityReasonDescription = reviewIneligibilityReasonDescription;
        return this;
    }
    
    /**
     * Additional details for review ineligibility reasons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewIneligibilityReasonDetails")
    public FreeListingsProgramStatusReviewIneligibilityReasonDetails reviewIneligibilityReasonDetails;

    public FreeListingsProgramStatusRegionStatus withReviewIneligibilityReasonDetails(FreeListingsProgramStatusReviewIneligibilityReasonDetails reviewIneligibilityReasonDetails) {
        this.reviewIneligibilityReasonDetails = reviewIneligibilityReasonDetails;
        return this;
    }
    
    /**
     * Issues evaluated in the review process. Fix all issues before requesting a review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewIssues")
    public String[] reviewIssues;

    public FreeListingsProgramStatusRegionStatus withReviewIssues(String[] reviewIssues) {
        this.reviewIssues = reviewIssues;
        return this;
    }
    
    public FreeListingsProgramStatusRegionStatus(){}
}
