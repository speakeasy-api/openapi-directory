// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DatabaseInstanceBackendTypeEnum - The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.
type DatabaseInstanceBackendTypeEnum string

const (
	DatabaseInstanceBackendTypeEnumSQLBackendTypeUnspecified DatabaseInstanceBackendTypeEnum = "SQL_BACKEND_TYPE_UNSPECIFIED"
	DatabaseInstanceBackendTypeEnumFirstGen                  DatabaseInstanceBackendTypeEnum = "FIRST_GEN"
	DatabaseInstanceBackendTypeEnumSecondGen                 DatabaseInstanceBackendTypeEnum = "SECOND_GEN"
	DatabaseInstanceBackendTypeEnumExternal                  DatabaseInstanceBackendTypeEnum = "EXTERNAL"
)

func (e DatabaseInstanceBackendTypeEnum) ToPointer() *DatabaseInstanceBackendTypeEnum {
	return &e
}

func (e *DatabaseInstanceBackendTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SQL_BACKEND_TYPE_UNSPECIFIED":
		fallthrough
	case "FIRST_GEN":
		fallthrough
	case "SECOND_GEN":
		fallthrough
	case "EXTERNAL":
		*e = DatabaseInstanceBackendTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatabaseInstanceBackendTypeEnum: %v", v)
	}
}

// DatabaseInstanceDatabaseVersionEnum - The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
type DatabaseInstanceDatabaseVersionEnum string

const (
	DatabaseInstanceDatabaseVersionEnumSQLDatabaseVersionUnspecified DatabaseInstanceDatabaseVersionEnum = "SQL_DATABASE_VERSION_UNSPECIFIED"
	DatabaseInstanceDatabaseVersionEnumMysql51                       DatabaseInstanceDatabaseVersionEnum = "MYSQL_5_1"
	DatabaseInstanceDatabaseVersionEnumMysql55                       DatabaseInstanceDatabaseVersionEnum = "MYSQL_5_5"
	DatabaseInstanceDatabaseVersionEnumMysql56                       DatabaseInstanceDatabaseVersionEnum = "MYSQL_5_6"
	DatabaseInstanceDatabaseVersionEnumMysql57                       DatabaseInstanceDatabaseVersionEnum = "MYSQL_5_7"
	DatabaseInstanceDatabaseVersionEnumSqlserver2017Standard         DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2017_STANDARD"
	DatabaseInstanceDatabaseVersionEnumSqlserver2017Enterprise       DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2017_ENTERPRISE"
	DatabaseInstanceDatabaseVersionEnumSqlserver2017Express          DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2017_EXPRESS"
	DatabaseInstanceDatabaseVersionEnumSqlserver2017Web              DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2017_WEB"
	DatabaseInstanceDatabaseVersionEnumPostgres96                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_9_6"
	DatabaseInstanceDatabaseVersionEnumPostgres10                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_10"
	DatabaseInstanceDatabaseVersionEnumPostgres11                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_11"
	DatabaseInstanceDatabaseVersionEnumPostgres12                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_12"
	DatabaseInstanceDatabaseVersionEnumPostgres13                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_13"
	DatabaseInstanceDatabaseVersionEnumPostgres14                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_14"
	DatabaseInstanceDatabaseVersionEnumPostgres15                    DatabaseInstanceDatabaseVersionEnum = "POSTGRES_15"
	DatabaseInstanceDatabaseVersionEnumMysql80                       DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0"
	DatabaseInstanceDatabaseVersionEnumMysql8018                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_18"
	DatabaseInstanceDatabaseVersionEnumMysql8026                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_26"
	DatabaseInstanceDatabaseVersionEnumMysql8027                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_27"
	DatabaseInstanceDatabaseVersionEnumMysql8028                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_28"
	DatabaseInstanceDatabaseVersionEnumMysql8029                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_29"
	DatabaseInstanceDatabaseVersionEnumMysql8030                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_30"
	DatabaseInstanceDatabaseVersionEnumMysql8031                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_31"
	DatabaseInstanceDatabaseVersionEnumMysql8032                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_32"
	DatabaseInstanceDatabaseVersionEnumMysql8033                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_33"
	DatabaseInstanceDatabaseVersionEnumMysql8034                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_34"
	DatabaseInstanceDatabaseVersionEnumMysql8035                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_35"
	DatabaseInstanceDatabaseVersionEnumMysql8036                     DatabaseInstanceDatabaseVersionEnum = "MYSQL_8_0_36"
	DatabaseInstanceDatabaseVersionEnumSqlserver2019Standard         DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2019_STANDARD"
	DatabaseInstanceDatabaseVersionEnumSqlserver2019Enterprise       DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2019_ENTERPRISE"
	DatabaseInstanceDatabaseVersionEnumSqlserver2019Express          DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2019_EXPRESS"
	DatabaseInstanceDatabaseVersionEnumSqlserver2019Web              DatabaseInstanceDatabaseVersionEnum = "SQLSERVER_2019_WEB"
)

func (e DatabaseInstanceDatabaseVersionEnum) ToPointer() *DatabaseInstanceDatabaseVersionEnum {
	return &e
}

func (e *DatabaseInstanceDatabaseVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SQL_DATABASE_VERSION_UNSPECIFIED":
		fallthrough
	case "MYSQL_5_1":
		fallthrough
	case "MYSQL_5_5":
		fallthrough
	case "MYSQL_5_6":
		fallthrough
	case "MYSQL_5_7":
		fallthrough
	case "SQLSERVER_2017_STANDARD":
		fallthrough
	case "SQLSERVER_2017_ENTERPRISE":
		fallthrough
	case "SQLSERVER_2017_EXPRESS":
		fallthrough
	case "SQLSERVER_2017_WEB":
		fallthrough
	case "POSTGRES_9_6":
		fallthrough
	case "POSTGRES_10":
		fallthrough
	case "POSTGRES_11":
		fallthrough
	case "POSTGRES_12":
		fallthrough
	case "POSTGRES_13":
		fallthrough
	case "POSTGRES_14":
		fallthrough
	case "POSTGRES_15":
		fallthrough
	case "MYSQL_8_0":
		fallthrough
	case "MYSQL_8_0_18":
		fallthrough
	case "MYSQL_8_0_26":
		fallthrough
	case "MYSQL_8_0_27":
		fallthrough
	case "MYSQL_8_0_28":
		fallthrough
	case "MYSQL_8_0_29":
		fallthrough
	case "MYSQL_8_0_30":
		fallthrough
	case "MYSQL_8_0_31":
		fallthrough
	case "MYSQL_8_0_32":
		fallthrough
	case "MYSQL_8_0_33":
		fallthrough
	case "MYSQL_8_0_34":
		fallthrough
	case "MYSQL_8_0_35":
		fallthrough
	case "MYSQL_8_0_36":
		fallthrough
	case "SQLSERVER_2019_STANDARD":
		fallthrough
	case "SQLSERVER_2019_ENTERPRISE":
		fallthrough
	case "SQLSERVER_2019_EXPRESS":
		fallthrough
	case "SQLSERVER_2019_WEB":
		*e = DatabaseInstanceDatabaseVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatabaseInstanceDatabaseVersionEnum: %v", v)
	}
}

// DatabaseInstanceFailoverReplica - The name and status of the failover replica.
type DatabaseInstanceFailoverReplica struct {
	// The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.
	Available *bool `json:"available,omitempty"`
	// The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID.
	Name *string `json:"name,omitempty"`
}

// DatabaseInstanceInstanceTypeEnum - The instance type.
type DatabaseInstanceInstanceTypeEnum string

const (
	DatabaseInstanceInstanceTypeEnumSQLInstanceTypeUnspecified DatabaseInstanceInstanceTypeEnum = "SQL_INSTANCE_TYPE_UNSPECIFIED"
	DatabaseInstanceInstanceTypeEnumCloudSQLInstance           DatabaseInstanceInstanceTypeEnum = "CLOUD_SQL_INSTANCE"
	DatabaseInstanceInstanceTypeEnumOnPremisesInstance         DatabaseInstanceInstanceTypeEnum = "ON_PREMISES_INSTANCE"
	DatabaseInstanceInstanceTypeEnumReadReplicaInstance        DatabaseInstanceInstanceTypeEnum = "READ_REPLICA_INSTANCE"
)

func (e DatabaseInstanceInstanceTypeEnum) ToPointer() *DatabaseInstanceInstanceTypeEnum {
	return &e
}

func (e *DatabaseInstanceInstanceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SQL_INSTANCE_TYPE_UNSPECIFIED":
		fallthrough
	case "CLOUD_SQL_INSTANCE":
		fallthrough
	case "ON_PREMISES_INSTANCE":
		fallthrough
	case "READ_REPLICA_INSTANCE":
		*e = DatabaseInstanceInstanceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatabaseInstanceInstanceTypeEnum: %v", v)
	}
}

// DatabaseInstanceStateEnum - The current serving state of the Cloud SQL instance.
type DatabaseInstanceStateEnum string

const (
	DatabaseInstanceStateEnumSQLInstanceStateUnspecified DatabaseInstanceStateEnum = "SQL_INSTANCE_STATE_UNSPECIFIED"
	DatabaseInstanceStateEnumRunnable                    DatabaseInstanceStateEnum = "RUNNABLE"
	DatabaseInstanceStateEnumSuspended                   DatabaseInstanceStateEnum = "SUSPENDED"
	DatabaseInstanceStateEnumPendingDelete               DatabaseInstanceStateEnum = "PENDING_DELETE"
	DatabaseInstanceStateEnumPendingCreate               DatabaseInstanceStateEnum = "PENDING_CREATE"
	DatabaseInstanceStateEnumMaintenance                 DatabaseInstanceStateEnum = "MAINTENANCE"
	DatabaseInstanceStateEnumFailed                      DatabaseInstanceStateEnum = "FAILED"
	DatabaseInstanceStateEnumOnlineMaintenance           DatabaseInstanceStateEnum = "ONLINE_MAINTENANCE"
)

func (e DatabaseInstanceStateEnum) ToPointer() *DatabaseInstanceStateEnum {
	return &e
}

func (e *DatabaseInstanceStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SQL_INSTANCE_STATE_UNSPECIFIED":
		fallthrough
	case "RUNNABLE":
		fallthrough
	case "SUSPENDED":
		fallthrough
	case "PENDING_DELETE":
		fallthrough
	case "PENDING_CREATE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "FAILED":
		fallthrough
	case "ONLINE_MAINTENANCE":
		*e = DatabaseInstanceStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatabaseInstanceStateEnum: %v", v)
	}
}

type DatabaseInstanceSuspensionReasonEnum string

const (
	DatabaseInstanceSuspensionReasonEnumSQLSuspensionReasonUnspecified DatabaseInstanceSuspensionReasonEnum = "SQL_SUSPENSION_REASON_UNSPECIFIED"
	DatabaseInstanceSuspensionReasonEnumBillingIssue                   DatabaseInstanceSuspensionReasonEnum = "BILLING_ISSUE"
	DatabaseInstanceSuspensionReasonEnumLegalIssue                     DatabaseInstanceSuspensionReasonEnum = "LEGAL_ISSUE"
	DatabaseInstanceSuspensionReasonEnumOperationalIssue               DatabaseInstanceSuspensionReasonEnum = "OPERATIONAL_ISSUE"
	DatabaseInstanceSuspensionReasonEnumKmsKeyIssue                    DatabaseInstanceSuspensionReasonEnum = "KMS_KEY_ISSUE"
)

func (e DatabaseInstanceSuspensionReasonEnum) ToPointer() *DatabaseInstanceSuspensionReasonEnum {
	return &e
}

func (e *DatabaseInstanceSuspensionReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SQL_SUSPENSION_REASON_UNSPECIFIED":
		fallthrough
	case "BILLING_ISSUE":
		fallthrough
	case "LEGAL_ISSUE":
		fallthrough
	case "OPERATIONAL_ISSUE":
		fallthrough
	case "KMS_KEY_ISSUE":
		*e = DatabaseInstanceSuspensionReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatabaseInstanceSuspensionReasonEnum: %v", v)
	}
}

// DatabaseInstanceInput - A Cloud SQL instance resource.
type DatabaseInstanceInput struct {
	// The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.
	BackendType *DatabaseInstanceBackendTypeEnum `json:"backendType,omitempty"`
	// Connection name of the Cloud SQL instance used in connection strings.
	ConnectionName *string `json:"connectionName,omitempty"`
	// The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.
	CurrentDiskSize *string `json:"currentDiskSize,omitempty"`
	// The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
	DatabaseVersion *DatabaseInstanceDatabaseVersionEnum `json:"databaseVersion,omitempty"`
	// Disk encryption configuration for an instance.
	DiskEncryptionConfiguration *DiskEncryptionConfiguration `json:"diskEncryptionConfiguration,omitempty"`
	// Disk encryption status for an instance.
	DiskEncryptionStatus *DiskEncryptionStatus `json:"diskEncryptionStatus,omitempty"`
	// This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.
	Etag *string `json:"etag,omitempty"`
	// The name and status of the failover replica.
	FailoverReplica *DatabaseInstanceFailoverReplica `json:"failoverReplica,omitempty"`
	// The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.
	GceZone *string `json:"gceZone,omitempty"`
	// The instance type.
	InstanceType *DatabaseInstanceInstanceTypeEnum `json:"instanceType,omitempty"`
	// The assigned IP addresses for the instance.
	IPAddresses []IPMapping `json:"ipAddresses,omitempty"`
	// The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
	Ipv6Address *string `json:"ipv6Address,omitempty"`
	// This is always `sql#instance`.
	Kind *string `json:"kind,omitempty"`
	// The current software version on the instance.
	MaintenanceVersion *string `json:"maintenanceVersion,omitempty"`
	// The name of the instance which will act as primary in the replication setup.
	MasterInstanceName *string `json:"masterInstanceName,omitempty"`
	// The maximum disk size of the instance in bytes.
	MaxDiskSize *string `json:"maxDiskSize,omitempty"`
	// Name of the Cloud SQL instance. This does not include the project ID.
	Name *string `json:"name,omitempty"`
	// On-premises instance configuration.
	OnPremisesConfiguration *OnPremisesConfiguration `json:"onPremisesConfiguration,omitempty"`
	// This message wraps up the information written by out-of-disk detection job.
	OutOfDiskReport *SQLOutOfDiskReport `json:"outOfDiskReport,omitempty"`
	// The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
	Project *string `json:"project,omitempty"`
	// The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.
	Region *string `json:"region,omitempty"`
	// Read-replica configuration for connecting to the primary instance.
	ReplicaConfiguration *ReplicaConfiguration `json:"replicaConfiguration,omitempty"`
	// The replicas of the instance.
	ReplicaNames []string `json:"replicaNames,omitempty"`
	// Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.
	RootPassword *string `json:"rootPassword,omitempty"`
	// The status indicating if instance satisfiesPzs. Reserved for future use.
	SatisfiesPzs *bool `json:"satisfiesPzs,omitempty"`
	// Any scheduled maintenance for this instance.
	ScheduledMaintenance *SQLScheduledMaintenance `json:"scheduledMaintenance,omitempty"`
	// The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.
	SecondaryGceZone *string `json:"secondaryGceZone,omitempty"`
	// The URI of this resource.
	SelfLink *string `json:"selfLink,omitempty"`
	// SslCerts Resource
	ServerCaCert *SslCert `json:"serverCaCert,omitempty"`
	// The service account email address assigned to the instance.\This property is read-only.
	ServiceAccountEmailAddress *string `json:"serviceAccountEmailAddress,omitempty"`
	// Database instance settings.
	Settings *Settings `json:"settings,omitempty"`
	// The current serving state of the Cloud SQL instance.
	State *DatabaseInstanceStateEnum `json:"state,omitempty"`
	// If the instance state is SUSPENDED, the reason for the suspension.
	SuspensionReason []DatabaseInstanceSuspensionReasonEnum `json:"suspensionReason,omitempty"`
}

// DatabaseInstance - A Cloud SQL instance resource.
type DatabaseInstance struct {
	// Output only. List all maintenance versions applicable on the instance
	AvailableMaintenanceVersions []string `json:"availableMaintenanceVersions,omitempty"`
	// The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.
	BackendType *DatabaseInstanceBackendTypeEnum `json:"backendType,omitempty"`
	// Connection name of the Cloud SQL instance used in connection strings.
	ConnectionName *string `json:"connectionName,omitempty"`
	// Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
	CreateTime *string `json:"createTime,omitempty"`
	// The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.
	CurrentDiskSize *string `json:"currentDiskSize,omitempty"`
	// Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.
	DatabaseInstalledVersion *string `json:"databaseInstalledVersion,omitempty"`
	// The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
	DatabaseVersion *DatabaseInstanceDatabaseVersionEnum `json:"databaseVersion,omitempty"`
	// Disk encryption configuration for an instance.
	DiskEncryptionConfiguration *DiskEncryptionConfiguration `json:"diskEncryptionConfiguration,omitempty"`
	// Disk encryption status for an instance.
	DiskEncryptionStatus *DiskEncryptionStatus `json:"diskEncryptionStatus,omitempty"`
	// This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.
	Etag *string `json:"etag,omitempty"`
	// The name and status of the failover replica.
	FailoverReplica *DatabaseInstanceFailoverReplica `json:"failoverReplica,omitempty"`
	// The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.
	GceZone *string `json:"gceZone,omitempty"`
	// The instance type.
	InstanceType *DatabaseInstanceInstanceTypeEnum `json:"instanceType,omitempty"`
	// The assigned IP addresses for the instance.
	IPAddresses []IPMapping `json:"ipAddresses,omitempty"`
	// The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
	Ipv6Address *string `json:"ipv6Address,omitempty"`
	// This is always `sql#instance`.
	Kind *string `json:"kind,omitempty"`
	// The current software version on the instance.
	MaintenanceVersion *string `json:"maintenanceVersion,omitempty"`
	// The name of the instance which will act as primary in the replication setup.
	MasterInstanceName *string `json:"masterInstanceName,omitempty"`
	// The maximum disk size of the instance in bytes.
	MaxDiskSize *string `json:"maxDiskSize,omitempty"`
	// Name of the Cloud SQL instance. This does not include the project ID.
	Name *string `json:"name,omitempty"`
	// On-premises instance configuration.
	OnPremisesConfiguration *OnPremisesConfiguration `json:"onPremisesConfiguration,omitempty"`
	// This message wraps up the information written by out-of-disk detection job.
	OutOfDiskReport *SQLOutOfDiskReport `json:"outOfDiskReport,omitempty"`
	// The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
	Project *string `json:"project,omitempty"`
	// The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.
	Region *string `json:"region,omitempty"`
	// Read-replica configuration for connecting to the primary instance.
	ReplicaConfiguration *ReplicaConfiguration `json:"replicaConfiguration,omitempty"`
	// The replicas of the instance.
	ReplicaNames []string `json:"replicaNames,omitempty"`
	// Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.
	RootPassword *string `json:"rootPassword,omitempty"`
	// The status indicating if instance satisfiesPzs. Reserved for future use.
	SatisfiesPzs *bool `json:"satisfiesPzs,omitempty"`
	// Any scheduled maintenance for this instance.
	ScheduledMaintenance *SQLScheduledMaintenance `json:"scheduledMaintenance,omitempty"`
	// The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.
	SecondaryGceZone *string `json:"secondaryGceZone,omitempty"`
	// The URI of this resource.
	SelfLink *string `json:"selfLink,omitempty"`
	// SslCerts Resource
	ServerCaCert *SslCert `json:"serverCaCert,omitempty"`
	// The service account email address assigned to the instance.\This property is read-only.
	ServiceAccountEmailAddress *string `json:"serviceAccountEmailAddress,omitempty"`
	// Database instance settings.
	Settings *Settings `json:"settings,omitempty"`
	// The current serving state of the Cloud SQL instance.
	State *DatabaseInstanceStateEnum `json:"state,omitempty"`
	// If the instance state is SUSPENDED, the reason for the suspension.
	SuspensionReason []DatabaseInstanceSuspensionReasonEnum `json:"suspensionReason,omitempty"`
}
