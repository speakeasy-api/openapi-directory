/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Snapshot - A Filestore snapshot.
 */
public class Snapshot {
    /**
     * Output only. The time when the snapshot was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Snapshot withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Snapshot withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. The amount of bytes needed to allocate a full copy of the snapshot content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filesystemUsedBytes")
    public String filesystemUsedBytes;

    public Snapshot withFilesystemUsedBytes(String filesystemUsedBytes) {
        this.filesystemUsedBytes = filesystemUsedBytes;
        return this;
    }
    
    /**
     * Resource labels to represent user provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Snapshot withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Snapshot withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The snapshot state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public SnapshotStateEnum state;

    public Snapshot withState(SnapshotStateEnum state) {
        this.state = state;
        return this;
    }
    
    public Snapshot(){}
}
