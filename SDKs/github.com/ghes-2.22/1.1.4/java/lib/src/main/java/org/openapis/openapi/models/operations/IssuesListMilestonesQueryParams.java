/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class IssuesListMilestonesQueryParams {
    /**
     * The direction of the sort. Either `asc` or `desc`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=direction")
    public IssuesListMilestonesDirectionEnum direction;
    public IssuesListMilestonesQueryParams withDirection(IssuesListMilestonesDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Page number of the results to fetch.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public IssuesListMilestonesQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Results per page (max 100)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;
    public IssuesListMilestonesQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * What to sort results by. Either `due_on` or `completeness`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public IssuesListMilestonesSortEnum sort;
    public IssuesListMilestonesQueryParams withSort(IssuesListMilestonesSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The state of the milestone. Either `open`, `closed`, or `all`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=state")
    public IssuesListMilestonesStateEnum state;
    public IssuesListMilestonesQueryParams withState(IssuesListMilestonesStateEnum state) {
        this.state = state;
        return this;
    }
    
}
