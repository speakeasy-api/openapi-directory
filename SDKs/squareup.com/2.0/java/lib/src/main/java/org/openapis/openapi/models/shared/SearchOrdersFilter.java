/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchOrdersFilter - Filtering criteria to use for a `SearchOrders` request. Multiple filters
 * are ANDed together.
 */
public class SearchOrdersFilter {
    /**
     * A filter based on the order `customer_id` and any tender `customer_id`
     * associated with the order. It does not filter based on the
     * [FulfillmentRecipient](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderFulfillmentRecipient) `customer_id`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_filter")
    public SearchOrdersCustomerFilter customerFilter;
    public SearchOrdersFilter withCustomerFilter(SearchOrdersCustomerFilter customerFilter) {
        this.customerFilter = customerFilter;
        return this;
    }
    
    /**
     * Filter for `Order` objects based on whether their `CREATED_AT`,
     * `CLOSED_AT`, or `UPDATED_AT` timestamps fall within a specified time range.
     * You can specify the time range and which timestamp to filter for. You can filter
     * for only one time range at a time.
     * 
     * For each time range, the start time and end time are inclusive. If the end time
     * is absent, it defaults to the time of the first request for the cursor.
     * 
     * __Important:__ If you use the `DateTimeFilter` in a `SearchOrders` query,
     * you must set the `sort_field` in [OrdersSort](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersSort)
     * to the same field you filter for. For example, if you set the `CLOSED_AT` field
     * in `DateTimeFilter`, you must set the `sort_field` in `SearchOrdersSort` to
     * `CLOSED_AT`. Otherwise, `SearchOrders` throws an error.
     * [Learn more about filtering orders by time range.](https://developer.squareup.com/docs/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_time_filter")
    public SearchOrdersDateTimeFilter dateTimeFilter;
    public SearchOrdersFilter withDateTimeFilter(SearchOrdersDateTimeFilter dateTimeFilter) {
        this.dateTimeFilter = dateTimeFilter;
        return this;
    }
    
    /**
     * Filter based on [order fulfillment](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderFulfillment) information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fulfillment_filter")
    public SearchOrdersFulfillmentFilter fulfillmentFilter;
    public SearchOrdersFilter withFulfillmentFilter(SearchOrdersFulfillmentFilter fulfillmentFilter) {
        this.fulfillmentFilter = fulfillmentFilter;
        return this;
    }
    
    /**
     * A filter based on order `source` information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_filter")
    public SearchOrdersSourceFilter sourceFilter;
    public SearchOrdersFilter withSourceFilter(SearchOrdersSourceFilter sourceFilter) {
        this.sourceFilter = sourceFilter;
        return this;
    }
    
    /**
     * Filter by the current order `state`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state_filter")
    public SearchOrdersStateFilter stateFilter;
    public SearchOrdersFilter withStateFilter(SearchOrdersStateFilter stateFilter) {
        this.stateFilter = stateFilter;
        return this;
    }
    
}
