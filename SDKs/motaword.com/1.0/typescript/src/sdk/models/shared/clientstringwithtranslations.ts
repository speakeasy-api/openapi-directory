/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClientStringTranslation } from "./clientstringtranslation";
import { Expose, Transform, Type } from "class-transformer";

export class ClientStringWithTranslations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_changed" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastChanged?: Date;

  @SpeakeasyMetadata({ elemType: ClientStringTranslation })
  @Expose({ name: "translations" })
  @Type(() => ClientStringTranslation)
  translations?: ClientStringTranslation[];
}
