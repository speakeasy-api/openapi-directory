/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Namespace - Namespace represents a namespace across the Fleet
 */
public class Namespace {
    /**
     * Output only. When the namespace was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Namespace withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. When the namespace was deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;
    public Namespace withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Namespace withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. Scope associated with the namespace
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;
    public Namespace withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * NamespaceLifecycleState describes the state of a Namespace resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public NamespaceLifecycleState state;
    public Namespace withState(NamespaceLifecycleState state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;
    public Namespace withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. When the namespace was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Namespace withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
