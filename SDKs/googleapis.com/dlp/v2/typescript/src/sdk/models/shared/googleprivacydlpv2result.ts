/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2HybridInspectStatistics } from "./googleprivacydlpv2hybridinspectstatistics";
import { GooglePrivacyDlpV2InfoTypeStats } from "./googleprivacydlpv2infotypestats";
import { Expose, Type } from "class-transformer";

/**
 * All result fields mentioned below are updated while the job is processing.
 */
export class GooglePrivacyDlpV2Result extends SpeakeasyBase {
  /**
   * Statistics related to processing hybrid inspect requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hybridStats" })
  @Type(() => GooglePrivacyDlpV2HybridInspectStatistics)
  hybridStats?: GooglePrivacyDlpV2HybridInspectStatistics;

  /**
   * Statistics of how many instances of each info type were found during inspect job.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2InfoTypeStats })
  @Expose({ name: "infoTypeStats" })
  @Type(() => GooglePrivacyDlpV2InfoTypeStats)
  infoTypeStats?: GooglePrivacyDlpV2InfoTypeStats[];

  /**
   * Total size in bytes that were processed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processedBytes" })
  processedBytes?: string;

  /**
   * Estimate of the number of bytes to process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalEstimatedBytes" })
  totalEstimatedBytes?: string;
}
