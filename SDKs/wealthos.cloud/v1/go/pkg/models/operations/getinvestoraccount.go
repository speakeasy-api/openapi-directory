// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetinvestorAccountSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

type GetinvestorAccountRequest struct {
	// Unique identifier of the investor account
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// GetinvestorAccount500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type GetinvestorAccount500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetinvestorAccount429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type GetinvestorAccount429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetinvestorAccount409ApplicationJSONStatusEnum - Current status of the original request
type GetinvestorAccount409ApplicationJSONStatusEnum string

const (
	GetinvestorAccount409ApplicationJSONStatusEnumProcessing GetinvestorAccount409ApplicationJSONStatusEnum = "PROCESSING"
	GetinvestorAccount409ApplicationJSONStatusEnumComplete   GetinvestorAccount409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e GetinvestorAccount409ApplicationJSONStatusEnum) ToPointer() *GetinvestorAccount409ApplicationJSONStatusEnum {
	return &e
}

func (e *GetinvestorAccount409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = GetinvestorAccount409ApplicationJSONStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetinvestorAccount409ApplicationJSONStatusEnum: %v", v)
	}
}

// GetinvestorAccount409ApplicationJSON - Duplicate request
type GetinvestorAccount409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status GetinvestorAccount409ApplicationJSONStatusEnum `json:"status"`
}

// GetinvestorAccount404ApplicationJSON - The specified resource was not found
type GetinvestorAccount404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetinvestorAccount403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type GetinvestorAccount403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetinvestorAccount401ApplicationJSON - You do not have permissions to access this resource.
type GetinvestorAccount401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetinvestorAccount400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type GetinvestorAccount400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

type GetinvestorAccount200ApplicationJSONAccountTypeEnum string

const (
	GetinvestorAccount200ApplicationJSONAccountTypeEnumX GetinvestorAccount200ApplicationJSONAccountTypeEnum = "X"
	GetinvestorAccount200ApplicationJSONAccountTypeEnumZ GetinvestorAccount200ApplicationJSONAccountTypeEnum = "Z"
	GetinvestorAccount200ApplicationJSONAccountTypeEnumB GetinvestorAccount200ApplicationJSONAccountTypeEnum = "B"
	GetinvestorAccount200ApplicationJSONAccountTypeEnumG GetinvestorAccount200ApplicationJSONAccountTypeEnum = "G"
)

func (e GetinvestorAccount200ApplicationJSONAccountTypeEnum) ToPointer() *GetinvestorAccount200ApplicationJSONAccountTypeEnum {
	return &e
}

func (e *GetinvestorAccount200ApplicationJSONAccountTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "X":
		fallthrough
	case "Z":
		fallthrough
	case "B":
		fallthrough
	case "G":
		*e = GetinvestorAccount200ApplicationJSONAccountTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetinvestorAccount200ApplicationJSONAccountTypeEnum: %v", v)
	}
}

// GetinvestorAccount200ApplicationJSONStatusEnum - account status
type GetinvestorAccount200ApplicationJSONStatusEnum string

const (
	GetinvestorAccount200ApplicationJSONStatusEnumActive GetinvestorAccount200ApplicationJSONStatusEnum = "active"
)

func (e GetinvestorAccount200ApplicationJSONStatusEnum) ToPointer() *GetinvestorAccount200ApplicationJSONStatusEnum {
	return &e
}

func (e *GetinvestorAccount200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		*e = GetinvestorAccount200ApplicationJSONStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetinvestorAccount200ApplicationJSONStatusEnum: %v", v)
	}
}

// GetinvestorAccount200ApplicationJSON - success
type GetinvestorAccount200ApplicationJSON struct {
	// investor account id
	AccountID   string                                               `json:"account_id"`
	AccountType *GetinvestorAccount200ApplicationJSONAccountTypeEnum `json:"account_type,omitempty"`
	CreatedAt   *time.Time                                           `json:"created_at,omitempty"`
	// does the Account have contributions for the current tax year
	CurrentYearSubscription *bool `json:"current_year_subscription,omitempty"`
	// total contribution by investor for account for the current tax year
	CurrentYearTotalContribution *string `json:"current_year_total_contribution,omitempty"`
	// total contribution by investor for all ISA product types for the current tax year
	CurrentYearTotalIsaContribution *string `json:"current_year_total_isa_contribution,omitempty"`
	// total subscription allowance remaining for investor across all ISA product types for the current tax year
	CurrentYearTotalIsaWithdrawals *string `json:"current_year_total_isa_withdrawals,omitempty"`
	// total withdrawal by investor for account for the current tax year
	CurrentYearTotalWithdrawals *string `json:"current_year_total_withdrawals,omitempty"`
	// the first date the account was opened by the investor
	DateOfAccountActivation *string `json:"date_of_account_activation,omitempty"`
	FinancialProductID      string  `json:"financial_product_id"`
	// date of the first subscription received for the current tax year
	FirstSubscriptionDateForCurrentYear *string `json:"first_subscription_date_for_current_year,omitempty"`
	InvestorID                          string  `json:"investor_id"`
	// total subscription allowance remaining for investor across all ISA product types for the current tax year
	IsaAllowanceRemaining *string `json:"isa_allowance_remaining,omitempty"`
	// Array of pot IDs attached to Investor Account ID
	PotID []string `json:"pot_id"`
	// account status
	Status GetinvestorAccount200ApplicationJSONStatusEnum `json:"status"`
	// Value of holdings across all pots attached to the account ID (including investment products and cash)
	TotalMarketValue *string    `json:"total_market_value,omitempty"`
	UpdatedAt        *time.Time `json:"updated_at,omitempty"`
}

type GetinvestorAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	GetinvestorAccount200ApplicationJSONObject *GetinvestorAccount200ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	GetinvestorAccount400ApplicationJSONObject *GetinvestorAccount400ApplicationJSON
	// You do not have permissions to access this resource.
	GetinvestorAccount401ApplicationJSONObject *GetinvestorAccount401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	GetinvestorAccount403ApplicationJSONObject *GetinvestorAccount403ApplicationJSON
	// The specified resource was not found
	GetinvestorAccount404ApplicationJSONObject *GetinvestorAccount404ApplicationJSON
	// Duplicate request
	GetinvestorAccount409ApplicationJSONObject *GetinvestorAccount409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	GetinvestorAccount429ApplicationJSONObject *GetinvestorAccount429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	GetinvestorAccount500ApplicationJSONObject *GetinvestorAccount500ApplicationJSON
}
