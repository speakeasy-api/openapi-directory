// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EventStatusCodeEnum - The event's status code
type EventStatusCodeEnum string

const (
	EventStatusCodeEnumOnsale      EventStatusCodeEnum = "onsale"
	EventStatusCodeEnumOffsale     EventStatusCodeEnum = "offsale"
	EventStatusCodeEnumCanceled    EventStatusCodeEnum = "canceled"
	EventStatusCodeEnumPostponed   EventStatusCodeEnum = "postponed"
	EventStatusCodeEnumRescheduled EventStatusCodeEnum = "rescheduled"
)

func (e EventStatusCodeEnum) ToPointer() *EventStatusCodeEnum {
	return &e
}

func (e *EventStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "onsale":
		fallthrough
	case "offsale":
		fallthrough
	case "canceled":
		fallthrough
	case "postponed":
		fallthrough
	case "rescheduled":
		*e = EventStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventStatusCodeEnum: %v", v)
	}
}

// EventStatus - Event's Status
type EventStatus struct {
	// The event's status code
	Code *EventStatusCodeEnum `json:"code,omitempty"`
}
