/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateConditionalFormatRuleRequest - Updates a conditional format rule at the given index, or moves a conditional format rule to another index.
 */
public class UpdateConditionalFormatRuleRequest {
    /**
     * The zero-based index of the rule that should be replaced or moved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Integer index;

    public UpdateConditionalFormatRuleRequest withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    /**
     * The zero-based new index the rule should end up at.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newIndex")
    public Integer newIndex;

    public UpdateConditionalFormatRuleRequest withNewIndex(Integer newIndex) {
        this.newIndex = newIndex;
        return this;
    }
    
    /**
     * A rule describing a conditional format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rule")
    public ConditionalFormatRule rule;

    public UpdateConditionalFormatRuleRequest withRule(ConditionalFormatRule rule) {
        this.rule = rule;
        return this;
    }
    
    /**
     * The sheet of the rule to move. Required if new_index is set, unused otherwise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sheetId")
    public Integer sheetId;

    public UpdateConditionalFormatRuleRequest withSheetId(Integer sheetId) {
        this.sheetId = sheetId;
        return this;
    }
    
    public UpdateConditionalFormatRuleRequest(){}
}
