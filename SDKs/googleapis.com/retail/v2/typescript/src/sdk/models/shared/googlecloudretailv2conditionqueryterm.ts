/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Query terms that we want to match on.
 */
export class GoogleCloudRetailV2ConditionQueryTerm extends SpeakeasyBase {
  /**
   * Whether this is supposed to be a full or partial match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullMatch" })
  fullMatch?: boolean;

  /**
   * The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
