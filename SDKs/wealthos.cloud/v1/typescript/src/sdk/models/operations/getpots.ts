/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetPotsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class GetPotsRequest extends SpeakeasyBase {
  /**
   * multiple financial product ids as comma seperated string
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=financial_product_id",
  })
  financialProductId?: string;

  /**
   * Investor Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=investor_id",
  })
  investorId: string;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetPots500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetPots429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The specified resource was not found
 */
export class GetPots404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetPots403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetPots401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class GetPots400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * If not populated, will be defaulted to tenancy currency
 */
export enum GetPots200ApplicationJSONPotsPotCurrencyEnum {
  Gbp = "GBP",
  Cad = "CAD",
  Usd = "USD",
}

export enum GetPots200ApplicationJSONPotsStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class GetPots200ApplicationJSONPots extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_account_reference" })
  custodianAccountReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_client_ref" })
  custodianClientRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_id" })
  custodianId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "financial_product_id" })
  financialProductId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "investor_id" })
  investorId: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_template_id" })
  portfolioTemplateId?: string;

  /**
   * If not populated, will be defaulted to tenancy currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_currency" })
  potCurrency?: GetPots200ApplicationJSONPotsPotCurrencyEnum;

  /**
   * system generated id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pot_name" })
  potName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reference_version" })
  referenceVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "regulator_advisor_id" })
  regulatorAdvisorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: GetPots200ApplicationJSONPotsStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

/**
 * Array of all active investment pots created by the investor
 */
export class GetPots200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetPots200ApplicationJSONPots })
  @Expose({ name: "pots" })
  @Type(() => GetPots200ApplicationJSONPots)
  pots: GetPots200ApplicationJSONPots[];
}

export class GetPotsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  getPots200ApplicationJSONObject?: GetPots200ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  getPots400ApplicationJSONObject?: GetPots400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getPots401ApplicationJSONObject?: GetPots401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getPots403ApplicationJSONObject?: GetPots403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getPots404ApplicationJSONObject?: GetPots404ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getPots429ApplicationJSONObject?: GetPots429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getPots500ApplicationJSONObject?: GetPots500ApplicationJSON;
}
