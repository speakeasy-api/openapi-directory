// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListTargetsForPolicyPathParams struct {
	// The policy name.
	PolicyName string `pathParam:"style=simple,explode=false,name=policyName"`
}

type ListTargetsForPolicyQueryParams struct {
	// A marker used to get the next set of results.
	Marker *string `queryParam:"style=form,explode=true,name=marker"`
	// The maximum number of results to return at one time.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
}

type ListTargetsForPolicyHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListTargetsForPolicyRequest struct {
	PathParams  ListTargetsForPolicyPathParams
	QueryParams ListTargetsForPolicyQueryParams
	Headers     ListTargetsForPolicyHeaders
}

type ListTargetsForPolicyResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	ListTargetsForPolicyResponse *shared.ListTargetsForPolicyResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
