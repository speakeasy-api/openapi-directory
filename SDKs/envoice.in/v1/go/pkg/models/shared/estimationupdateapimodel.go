// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// EstimationUpdateAPIModelStatusEnum - Indicate the status of the estimation (paid/unpaid/overdue)
type EstimationUpdateAPIModelStatusEnum string

const (
	EstimationUpdateAPIModelStatusEnumDraft    EstimationUpdateAPIModelStatusEnum = "Draft"
	EstimationUpdateAPIModelStatusEnumAccepted EstimationUpdateAPIModelStatusEnum = "Accepted"
	EstimationUpdateAPIModelStatusEnumRejected EstimationUpdateAPIModelStatusEnum = "Rejected"
)

func (e EstimationUpdateAPIModelStatusEnum) ToPointer() *EstimationUpdateAPIModelStatusEnum {
	return &e
}

func (e *EstimationUpdateAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Draft":
		fallthrough
	case "Accepted":
		fallthrough
	case "Rejected":
		*e = EstimationUpdateAPIModelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EstimationUpdateAPIModelStatusEnum: %v", v)
	}
}

type EstimationUpdateAPIModel struct {
	// List of estimation attachments
	Attachments []EstimationUpdateAttachmentAPIModel `json:"Attachments,omitempty" form:"name=Attachments,json"`
	// The client to whom this estimation is assigned
	ClientID *int `json:"ClientId,omitempty" form:"name=ClientId"`
	// Indicate from which estimation this estimation has been cloned from
	ClonedFromID *int `json:"ClonedFromId,omitempty" form:"name=ClonedFromId"`
	// Id of the currency for the estimation amounts
	CurrencyID *int `json:"CurrencyId,omitempty" form:"name=CurrencyId"`
	// Indicates when the estimation will be proclamed as due
	ExpiresOn *time.Time `json:"ExpiresOn,omitempty" form:"name=ExpiresOn"`
	// estimation id
	ID *int `json:"Id,omitempty" form:"name=Id"`
	// Indicates when the estimation was issued
	IssuedOn *time.Time `json:"IssuedOn,omitempty" form:"name=IssuedOn"`
	// List of estimation items
	Items []EstimationUpdateItemAPIModel `json:"Items,omitempty" form:"name=Items,json"`
	// Internal note regarding the estimation
	Notes *string `json:"Notes,omitempty" form:"name=Notes"`
	// Unique estimation number
	Number *string `json:"Number,omitempty" form:"name=Number"`
	// List of enabled payment gateways for this estimation
	PaymentGateways []EstimationGatewayAPIModel `json:"PaymentGateways,omitempty" form:"name=PaymentGateways,json"`
	// Unique number generated by the buyer
	PoNumber *string `json:"PoNumber,omitempty" form:"name=PoNumber"`
	// Indicate the status of the estimation (paid/unpaid/overdue)
	Status *EstimationUpdateAPIModelStatusEnum `json:"Status,omitempty" form:"name=Status"`
	// Terms of agreement
	Terms *string `json:"Terms,omitempty" form:"name=Terms"`
}
