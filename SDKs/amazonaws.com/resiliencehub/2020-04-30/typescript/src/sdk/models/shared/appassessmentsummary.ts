/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssessmentInvokerEnum } from "./assessmentinvokerenum";
import { AssessmentStatusEnum } from "./assessmentstatusenum";
import { ComplianceStatusEnum } from "./compliancestatusenum";
import { Cost } from "./cost";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Defines an application assessment summary.
 */
export class AppAssessmentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appArn" })
  appArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "appVersion" })
  appVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentArn" })
  assessmentArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentName" })
  assessmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentStatus" })
  assessmentStatus: AssessmentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "complianceStatus" })
  complianceStatus?: ComplianceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  @Type(() => Cost)
  cost?: Cost;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "invoker" })
  invoker?: AssessmentInvokerEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resiliencyScore" })
  resiliencyScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;
}
