// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FailureInfoErrorCodeEnum - Canonical code for why the update failed to apply.
type FailureInfoErrorCodeEnum string

const (
	FailureInfoErrorCodeEnumOk                 FailureInfoErrorCodeEnum = "OK"
	FailureInfoErrorCodeEnumCancelled          FailureInfoErrorCodeEnum = "CANCELLED"
	FailureInfoErrorCodeEnumUnknown            FailureInfoErrorCodeEnum = "UNKNOWN"
	FailureInfoErrorCodeEnumInvalidArgument    FailureInfoErrorCodeEnum = "INVALID_ARGUMENT"
	FailureInfoErrorCodeEnumDeadlineExceeded   FailureInfoErrorCodeEnum = "DEADLINE_EXCEEDED"
	FailureInfoErrorCodeEnumNotFound           FailureInfoErrorCodeEnum = "NOT_FOUND"
	FailureInfoErrorCodeEnumAlreadyExists      FailureInfoErrorCodeEnum = "ALREADY_EXISTS"
	FailureInfoErrorCodeEnumPermissionDenied   FailureInfoErrorCodeEnum = "PERMISSION_DENIED"
	FailureInfoErrorCodeEnumUnauthenticated    FailureInfoErrorCodeEnum = "UNAUTHENTICATED"
	FailureInfoErrorCodeEnumResourceExhausted  FailureInfoErrorCodeEnum = "RESOURCE_EXHAUSTED"
	FailureInfoErrorCodeEnumFailedPrecondition FailureInfoErrorCodeEnum = "FAILED_PRECONDITION"
	FailureInfoErrorCodeEnumAborted            FailureInfoErrorCodeEnum = "ABORTED"
	FailureInfoErrorCodeEnumOutOfRange         FailureInfoErrorCodeEnum = "OUT_OF_RANGE"
	FailureInfoErrorCodeEnumUnimplemented      FailureInfoErrorCodeEnum = "UNIMPLEMENTED"
	FailureInfoErrorCodeEnumInternal           FailureInfoErrorCodeEnum = "INTERNAL"
	FailureInfoErrorCodeEnumUnavailable        FailureInfoErrorCodeEnum = "UNAVAILABLE"
	FailureInfoErrorCodeEnumDataLoss           FailureInfoErrorCodeEnum = "DATA_LOSS"
)

func (e *FailureInfoErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OK":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "INVALID_ARGUMENT":
		fallthrough
	case "DEADLINE_EXCEEDED":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "ALREADY_EXISTS":
		fallthrough
	case "PERMISSION_DENIED":
		fallthrough
	case "UNAUTHENTICATED":
		fallthrough
	case "RESOURCE_EXHAUSTED":
		fallthrough
	case "FAILED_PRECONDITION":
		fallthrough
	case "ABORTED":
		fallthrough
	case "OUT_OF_RANGE":
		fallthrough
	case "UNIMPLEMENTED":
		fallthrough
	case "INTERNAL":
		fallthrough
	case "UNAVAILABLE":
		fallthrough
	case "DATA_LOSS":
		*e = FailureInfoErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureInfoErrorCodeEnum: %s", s)
	}
}

// FailureInfo - Info about failures
type FailureInfo struct {
	// Canonical code for why the update failed to apply.
	ErrorCode *FailureInfoErrorCodeEnum `json:"errorCode,omitempty"`
	// Failure reason message.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Printer configuration.
	Printer *Printer `json:"printer,omitempty"`
	// Id of a failed printer.
	PrinterID *string `json:"printerId,omitempty"`
}
