<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateALimitParameters
{
    /**
     * The interval for the metric. Required if `metric` is `count` or `volume`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateALimitParametersIntervalEnum $interval
     */
	#[\JMS\Serializer\Annotation\SerializedName('interval')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateALimitParametersIntervalEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateALimitParametersIntervalEnum $interval = null;
    
    /**
     * The metric for the limit.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CreateALimitParametersMetricEnum $metric
     */
	#[\JMS\Serializer\Annotation\SerializedName('metric')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateALimitParametersMetricEnum>')]
    public CreateALimitParametersMetricEnum $metric;
    
    /**
     * The identifier of the Account or Account Number you wish to associate the limit with.
     * 
     * @var string $modelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('model_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $modelId;
    
    /**
     * The value to test the limit against.
     * 
     * @var int $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $value;
    
	public function __construct()
	{
		$this->interval = null;
		$this->metric = \OpenAPI\OpenAPI\Models\Shared\CreateALimitParametersMetricEnum::COUNT;
		$this->modelId = "";
		$this->value = 0;
	}
}
