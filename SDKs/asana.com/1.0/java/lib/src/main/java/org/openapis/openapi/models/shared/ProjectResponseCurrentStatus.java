/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProjectResponseCurrentStatus - *Deprecated: new integrations should prefer the `status_update` resource.*
 * A *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.
 */
public class ProjectResponseCurrentStatus {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public UserCompact author;
    public ProjectResponseCurrentStatus withAuthor(UserCompact author) {
        this.author = author;
        return this;
    }
    
    /**
     * The color associated with the status update.
     */
    @JsonProperty("color")
    public ProjectResponseCurrentStatusColorEnum color;
    public ProjectResponseCurrentStatus withColor(ProjectResponseCurrentStatusColorEnum color) {
        this.color = color;
        return this;
    }
    
    /**
     * The time at which this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public ProjectResponseCurrentStatus withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public UserCompact createdBy;
    public ProjectResponseCurrentStatus withCreatedBy(UserCompact createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;
    public ProjectResponseCurrentStatus withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_text")
    public String htmlText;
    public ProjectResponseCurrentStatus withHtmlText(String htmlText) {
        this.htmlText = htmlText;
        return this;
    }
    
    /**
     * The time at which this project status was last modified.
     * *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modified_at")
    public OffsetDateTime modifiedAt;
    public ProjectResponseCurrentStatus withModifiedAt(OffsetDateTime modifiedAt) {
        this.modifiedAt = modifiedAt;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;
    public ProjectResponseCurrentStatus withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The text content of the status update.
     */
    @JsonProperty("text")
    public String text;
    public ProjectResponseCurrentStatus withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The title of the project status update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public ProjectResponseCurrentStatus withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
