<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NADashboardData
{
    /**
     * Real measured pressure @ time_utc (in mb)
     * 
     * @var ?float $absolutePressure
     */
	#[\JMS\Serializer\Annotation\SerializedName('AbsolutePressure')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $absolutePressure = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('BoilerOff')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $boilerOff = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('BoilerOn')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $boilerOn = null;
    
    /**
     * Last Co2 measured @ time_utc (in ppm)
     * 
     * @var ?float $co2
     */
	#[\JMS\Serializer\Annotation\SerializedName('CO2')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $co2 = null;
    
    /**
     * Direction of the last 5 min highest gust wind
     * 
     * @var ?int $gustAngle
     */
	#[\JMS\Serializer\Annotation\SerializedName('GustAngle')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $gustAngle = null;
    
    /**
     * Speed of the last 5 min highest gust wind
     * 
     * @var ?int $gustStrength
     */
	#[\JMS\Serializer\Annotation\SerializedName('GustStrength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $gustStrength = null;
    
    /**
     * Last humidity measured @ time_utc (in %)
     * 
     * @var ?float $humidity
     */
	#[\JMS\Serializer\Annotation\SerializedName('Humidity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $humidity = null;
    
    /**
     * Last noise measured @ time_utc (in db)
     * 
     * @var ?float $noise
     */
	#[\JMS\Serializer\Annotation\SerializedName('Noise')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $noise = null;
    
    /**
     * Last Sea level pressure measured @ time_utc (in mb)
     * 
     * @var ?float $pressure
     */
	#[\JMS\Serializer\Annotation\SerializedName('Pressure')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $pressure = null;
    
    /**
     * Last rain measured (in mm)
     * 
     * @var ?float $rain
     */
	#[\JMS\Serializer\Annotation\SerializedName('Rain')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $rain = null;
    
    /**
     * Last temperature measure @ time_utc (in °C)
     * 
     * @var ?float $temperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('Temperature')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $temperature = null;
    
    /**
     * Current 5 min average wind direction measured @ time_utc (in °)
     * 
     * @var ?int $windAngle
     */
	#[\JMS\Serializer\Annotation\SerializedName('WindAngle')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $windAngle = null;
    
    /**
     * Current 5 min average wind speed measured @ time_utc (in km/h)
     * 
     * @var ?int $windStrength
     */
	#[\JMS\Serializer\Annotation\SerializedName('WindStrength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $windStrength = null;
    
    /**
     * Timestamp when max temperature was measured
     * 
     * @var ?int $dateMaxTemp
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_max_temp')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dateMaxTemp = null;
    
    /**
     * Timestamp when max wind strength was measured
     * 
     * @var ?int $dateMaxWindStr
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_max_wind_str')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dateMaxWindStr = null;
    
    /**
     * Timestamp when min temperature was measured
     * 
     * @var ?int $dateMinTemp
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_min_temp')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dateMinTemp = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('device_id')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $deviceId = null;
    
    /**
     * Current health index: 0 = Healthy, 1 = Fine, 2 = Fair, 3 = Poor, 4 = Unhealthy
     * 
     * @var ?int $healthIdx
     */
	#[\JMS\Serializer\Annotation\SerializedName('health_idx')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $healthIdx = null;
    
    /**
     * Min temperature of the day (measured @ date_min_temp)
     * 
     * @var ?float $maxTemp
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_temp')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maxTemp = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('max_wind_str')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxWindStr = null;
    
    /**
     * Max temperature of the day (measured @ date_max_temp)
     * 
     * @var ?float $minTemp
     */
	#[\JMS\Serializer\Annotation\SerializedName('min_temp')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $minTemp = null;
    
    /**
     * Pressure evolution trend
     * 
     * @var ?string $pressureTrend
     */
	#[\JMS\Serializer\Annotation\SerializedName('pressure_trend')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pressureTrend = null;
    
    /**
     * Amount of rain in last hour
     * 
     * @var ?float $sumRain1
     */
	#[\JMS\Serializer\Annotation\SerializedName('sum_rain_1')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $sumRain1 = null;
    
    /**
     * Amount of rain today
     * 
     * @var ?float $sumRain24
     */
	#[\JMS\Serializer\Annotation\SerializedName('sum_rain_24')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $sumRain24 = null;
    
    /**
     * Temperature evolution trend
     * 
     * @var ?string $tempTrend
     */
	#[\JMS\Serializer\Annotation\SerializedName('temp_trend')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tempTrend = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('time_utc')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timeUtc = null;
    
	public function __construct()
	{
		$this->absolutePressure = null;
		$this->boilerOff = null;
		$this->boilerOn = null;
		$this->co2 = null;
		$this->gustAngle = null;
		$this->gustStrength = null;
		$this->humidity = null;
		$this->noise = null;
		$this->pressure = null;
		$this->rain = null;
		$this->temperature = null;
		$this->windAngle = null;
		$this->windStrength = null;
		$this->dateMaxTemp = null;
		$this->dateMaxWindStr = null;
		$this->dateMinTemp = null;
		$this->deviceId = null;
		$this->healthIdx = null;
		$this->maxTemp = null;
		$this->maxWindStr = null;
		$this->minTemp = null;
		$this->pressureTrend = null;
		$this->sumRain1 = null;
		$this->sumRain24 = null;
		$this->tempTrend = null;
		$this->timeUtc = null;
	}
}
