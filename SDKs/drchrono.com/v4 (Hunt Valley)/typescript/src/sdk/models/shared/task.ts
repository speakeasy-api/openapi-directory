/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Can be one of `"Appointment"`, `"Patient"`, `"Message"`, `"Document"`, `"Lab order"`
 */
export enum TaskAssociatedTaskItemTypeEnum {
  Patient = "Patient",
  Appointment = "Appointment",
  LabOrder = "Lab order",
  Document = "Document",
  Message = "Message",
  LabDocument = "Lab document",
  LabResult = "Lab result",
  Communication = "Communication",
}

export class TaskAssociatedTaskItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "task" })
  task?: number;

  /**
   * Can be one of `"Appointment"`, `"Patient"`, `"Message"`, `"Document"`, `"Lab order"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: TaskAssociatedTaskItemTypeEnum;

  /**
   * ID of the specified type object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * When the task is due
 */
export class TaskTaskReminder extends SpeakeasyBase {
  /**
   * Due date time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: string;
}

/**
 * Task note object
 */
export class TaskTaskNote extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * ID of `/api/tasks`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task" })
  task?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}

/**
 * Can be one of the following 10(Low), 20(Medium), 30(High), 40(Urgent)
 */
export enum TaskPriorityEnum {
  Ten = "10",
  Twenty = "20",
  Thirty = "30",
  Forty = "40",
}

/**
 * Created
 */
export class Task extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  /**
   * ID of `/api/users/` who assigned the task
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assigned_by" })
  assignedBy?: string;

  /**
   * Either `assignee_user` or `assignee_group` should be set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignee_group" })
  assigneeGroup?: number;

  /**
   * Either `assignee_user` or `assignee_group` should be set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignee_user" })
  assigneeUser?: string;

  /**
   * Associated task items
   */
  @SpeakeasyMetadata({ elemType: TaskAssociatedTaskItem })
  @Expose({ name: "associated_items" })
  @Type(() => TaskAssociatedTaskItem)
  associatedItems?: TaskAssociatedTaskItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * ID of `/api/users` who created the task
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * When the task is due
   */
  @SpeakeasyMetadata()
  @Expose({ name: "due_date" })
  @Type(() => TaskTaskReminder)
  dueDate?: TaskTaskReminder;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Additional notes of the task
   */
  @SpeakeasyMetadata({ elemType: TaskTaskNote })
  @Expose({ name: "notes" })
  @Type(() => TaskTaskNote)
  notes?: TaskTaskNote[];

  /**
   * Can be one of the following 10(Low), 20(Medium), 30(High), 40(Urgent)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: TaskPriorityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
