/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateEventDataStoreResponse {
    /**
     * CloudTrailAccessNotEnabledException
     */
    
    public Object cloudTrailAccessNotEnabledException;

    public CreateEventDataStoreResponse withCloudTrailAccessNotEnabledException(Object cloudTrailAccessNotEnabledException) {
        this.cloudTrailAccessNotEnabledException = cloudTrailAccessNotEnabledException;
        return this;
    }
    
    /**
     * ConflictException
     */
    
    public Object conflictException;

    public CreateEventDataStoreResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;

    public CreateEventDataStoreResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateEventDataStoreResponse createEventDataStoreResponse;

    public CreateEventDataStoreResponse withCreateEventDataStoreResponse(org.openapis.openapi.models.shared.CreateEventDataStoreResponse createEventDataStoreResponse) {
        this.createEventDataStoreResponse = createEventDataStoreResponse;
        return this;
    }
    
    /**
     * EventDataStoreAlreadyExistsException
     */
    
    public Object eventDataStoreAlreadyExistsException;

    public CreateEventDataStoreResponse withEventDataStoreAlreadyExistsException(Object eventDataStoreAlreadyExistsException) {
        this.eventDataStoreAlreadyExistsException = eventDataStoreAlreadyExistsException;
        return this;
    }
    
    /**
     * EventDataStoreMaxLimitExceededException
     */
    
    public Object eventDataStoreMaxLimitExceededException;

    public CreateEventDataStoreResponse withEventDataStoreMaxLimitExceededException(Object eventDataStoreMaxLimitExceededException) {
        this.eventDataStoreMaxLimitExceededException = eventDataStoreMaxLimitExceededException;
        return this;
    }
    
    /**
     * InsufficientDependencyServiceAccessPermissionException
     */
    
    public Object insufficientDependencyServiceAccessPermissionException;

    public CreateEventDataStoreResponse withInsufficientDependencyServiceAccessPermissionException(Object insufficientDependencyServiceAccessPermissionException) {
        this.insufficientDependencyServiceAccessPermissionException = insufficientDependencyServiceAccessPermissionException;
        return this;
    }
    
    /**
     * InsufficientEncryptionPolicyException
     */
    
    public Object insufficientEncryptionPolicyException;

    public CreateEventDataStoreResponse withInsufficientEncryptionPolicyException(Object insufficientEncryptionPolicyException) {
        this.insufficientEncryptionPolicyException = insufficientEncryptionPolicyException;
        return this;
    }
    
    /**
     * InvalidEventSelectorsException
     */
    
    public Object invalidEventSelectorsException;

    public CreateEventDataStoreResponse withInvalidEventSelectorsException(Object invalidEventSelectorsException) {
        this.invalidEventSelectorsException = invalidEventSelectorsException;
        return this;
    }
    
    /**
     * InvalidKmsKeyIdException
     */
    
    public Object invalidKmsKeyIdException;

    public CreateEventDataStoreResponse withInvalidKmsKeyIdException(Object invalidKmsKeyIdException) {
        this.invalidKmsKeyIdException = invalidKmsKeyIdException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public CreateEventDataStoreResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidTagParameterException
     */
    
    public Object invalidTagParameterException;

    public CreateEventDataStoreResponse withInvalidTagParameterException(Object invalidTagParameterException) {
        this.invalidTagParameterException = invalidTagParameterException;
        return this;
    }
    
    /**
     * KmsException
     */
    
    public Object kmsException;

    public CreateEventDataStoreResponse withKmsException(Object kmsException) {
        this.kmsException = kmsException;
        return this;
    }
    
    /**
     * KmsKeyNotFoundException
     */
    
    public Object kmsKeyNotFoundException;

    public CreateEventDataStoreResponse withKmsKeyNotFoundException(Object kmsKeyNotFoundException) {
        this.kmsKeyNotFoundException = kmsKeyNotFoundException;
        return this;
    }
    
    /**
     * NoManagementAccountSLRExistsException
     */
    
    public Object noManagementAccountSLRExistsException;

    public CreateEventDataStoreResponse withNoManagementAccountSLRExistsException(Object noManagementAccountSLRExistsException) {
        this.noManagementAccountSLRExistsException = noManagementAccountSLRExistsException;
        return this;
    }
    
    /**
     * NotOrganizationMasterAccountException
     */
    
    public Object notOrganizationMasterAccountException;

    public CreateEventDataStoreResponse withNotOrganizationMasterAccountException(Object notOrganizationMasterAccountException) {
        this.notOrganizationMasterAccountException = notOrganizationMasterAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public CreateEventDataStoreResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * OrganizationNotInAllFeaturesModeException
     */
    
    public Object organizationNotInAllFeaturesModeException;

    public CreateEventDataStoreResponse withOrganizationNotInAllFeaturesModeException(Object organizationNotInAllFeaturesModeException) {
        this.organizationNotInAllFeaturesModeException = organizationNotInAllFeaturesModeException;
        return this;
    }
    
    /**
     * OrganizationsNotInUseException
     */
    
    public Object organizationsNotInUseException;

    public CreateEventDataStoreResponse withOrganizationsNotInUseException(Object organizationsNotInUseException) {
        this.organizationsNotInUseException = organizationsNotInUseException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateEventDataStoreResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateEventDataStoreResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public CreateEventDataStoreResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public CreateEventDataStoreResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
