"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import callrecord as shared_callrecord
from ..shared import contact as shared_contact
from ..shared import note as shared_note
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CallFinalCallResultEnum(str, Enum):
    r"""Result of a call (LA, AM, BUSY, DNC, XFER, NO_ANS, XFER_LEG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED, SD, POSTPONED, ABANDONED, SKIPPED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""
    LA = 'LA'
    AM = 'AM'
    BUSY = 'BUSY'
    DNC = 'DNC'
    XFER = 'XFER'
    NO_ANS = 'NO_ANS'
    XFER_LEG = 'XFER_LEG'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    CARRIER_ERROR = 'CARRIER_ERROR'
    CARRIER_TEMP_ERROR = 'CARRIER_TEMP_ERROR'
    UNDIALED = 'UNDIALED'
    SD = 'SD'
    POSTPONED = 'POSTPONED'
    ABANDONED = 'ABANDONED'
    SKIPPED = 'SKIPPED'

class CallStateEnum(str, Enum):
    r"""State of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""
    READY = 'READY'
    SELECTED = 'SELECTED'
    CALLBACK = 'CALLBACK'
    FINISHED = 'FINISHED'
    DISABLED = 'DISABLED'
    SKIPPED = 'SKIPPED'
    DNC = 'DNC'
    DUP = 'DUP'
    INVALID = 'INVALID'
    TIMEOUT = 'TIMEOUT'
    PERIOD_LIMIT = 'PERIOD_LIMIT'
    RESTRICTED_NUMBER = 'RESTRICTED_NUMBER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Call:
    r"""Represents a call action sent or received by CallFire platform"""
    
    agent_call: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agentCall'), 'exclude': lambda f: f is None }})
    r"""An internal call to an agent"""  
    attributes: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes'), 'exclude': lambda f: f is None }})
    r"""Map of user-defined string attributes associated with an action"""  
    batch_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchId'), 'exclude': lambda f: f is None }})
    r"""An id of contact batch associated with an action"""  
    campaign_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaignId'), 'exclude': lambda f: f is None }})
    r"""An id of broadcast associated with an action if call is sent as part of call broadcast"""  
    contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact'), 'exclude': lambda f: f is None }})
    r"""Represents a contact in CallFire platform. Contains info about the people you want to contact. It allows you to store a user-defined properties for each contact"""  
    created: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'exclude': lambda f: f is None }})
    r"""The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    final_call_result: Optional[CallFinalCallResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalCallResult'), 'exclude': lambda f: f is None }})
    r"""Result of a call (LA, AM, BUSY, DNC, XFER, NO_ANS, XFER_LEG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED, SD, POSTPONED, ABANDONED, SKIPPED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""  
    from_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fromNumber'), 'exclude': lambda f: f is None }})
    r"""A sender's phone number in E.164 (11-digit) format"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""An id of  an action"""  
    inbound: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inbound'), 'exclude': lambda f: f is None }})
    r"""Is action inbound"""  
    labels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels associated with action or broadcast for this action"""  
    modified: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified'), 'exclude': lambda f: f is None }})
    r"""The time when the given resource was modified, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    notes: Optional[list[shared_note.Note]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Notes of call added by an agent"""  
    records: Optional[list[shared_callrecord.CallRecord]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('records'), 'exclude': lambda f: f is None }})
    r"""List of call records, each record contains call details like originate time, duration, cost, notes made by agents. A single contact may have a multiple phone numbers. In this case if given call was sent as a part of broadcast with configured retry logic then each call record will contain details about attempted phone number"""  
    state: Optional[CallStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""  
    to_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toNumber'), 'exclude': lambda f: f is None }})
    r"""A recipient's phone number in E.164 (11-digit) format"""  
    