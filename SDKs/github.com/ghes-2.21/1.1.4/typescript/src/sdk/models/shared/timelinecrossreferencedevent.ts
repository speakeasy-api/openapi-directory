/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IssueSimple } from "./issuesimple";
import { SimpleUser } from "./simpleuser";
import { Expose, Transform, Type } from "class-transformer";

export class TimelineCrossReferencedEventSource extends SpeakeasyBase {
  /**
   * Issue Simple
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issue" })
  @Type(() => IssueSimple)
  issue?: IssueSimple;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Timeline Cross Referenced Event
 */
export class TimelineCrossReferencedEvent extends SpeakeasyBase {
  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor" })
  @Type(() => SimpleUser)
  actor?: SimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => TimelineCrossReferencedEventSource)
  source: TimelineCrossReferencedEventSource;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
