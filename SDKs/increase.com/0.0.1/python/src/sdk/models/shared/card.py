"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardBillingAddress:
    r"""The Card's billing address."""
    
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})
    r"""The city of the billing address."""  
    line1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line1') }})
    r"""The first line of the billing address."""  
    line2: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line2') }})
    r"""The second line of the billing address."""  
    postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postal_code') }})
    r"""The postal code of the billing address."""  
    state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""The US state of the billing address."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardDigitalWallet:
    r"""The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps."""
    
    card_profile_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_profile_id') }})
    r"""The card profile assigned to this digital card. Card profiles may also be assigned at the program level."""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""An email address that can be used to verify the cardholder via one-time passcode over email."""  
    phone: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone') }})
    r"""A phone number that can be used to verify the cardholder via one-time passcode over SMS."""  
    
class CardStatusEnum(str, Enum):
    r"""This indicates if payments can be made with the card."""
    ACTIVE = 'active'
    DISABLED = 'disabled'
    CANCELED = 'canceled'

class CardTypeEnum(str, Enum):
    r"""A constant representing the object's type. For this resource it will always be `card`."""
    CARD = 'card'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Card:
    r"""Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Accountâ€™s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement."""
    
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id') }})
    r"""The identifier for the account this card belongs to."""  
    billing_address: CardBillingAddress = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billing_address') }})
    r"""The Card's billing address."""  
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""The card's description for display purposes."""  
    digital_wallet: CardDigitalWallet = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digital_wallet') }})
    r"""The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps."""  
    expiration_month: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiration_month') }})
    r"""The month the card expires in M format (e.g., August is 8)."""  
    expiration_year: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiration_year') }})
    r"""The year the card expires in YYYY format (e.g., 2025)."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The card identifier."""  
    last4: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last4') }})
    r"""The last 4 digits of the Card's Primary Account Number."""  
    status: CardStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""This indicates if payments can be made with the card."""  
    type: CardTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""A constant representing the object's type. For this resource it will always be `card`."""  
    