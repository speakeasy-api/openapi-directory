// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersIDBankPathParams struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum string

const (
	PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnumConfidential PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum = "confidential"
	PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnumRegular      PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum = "regular"
	PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnumPublic       PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum = "public"
)

func (e *PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum: %s", s)
	}
}

// PatchSpacesSpaceIDFoldersIDBankRequestBody - Bank to modify (except name, class and archivaldate)
type PatchSpacesSpaceIDFoldersIDBankRequestBody struct {
	About             *string                                              `json:"About,omitempty"`
	Comment           *string                                              `json:"Comment,omitempty"`
	ContractReference *string                                              `json:"ContractReference,omitempty"`
	Designation       *string                                              `json:"Designation,omitempty"`
	End               *string                                              `json:"End,omitempty"`
	Home              *bool                                                `json:"Home,omitempty"`
	Keywords          []string                                             `json:"Keywords,omitempty"`
	Level             *PatchSpacesSpaceIDFoldersIDBankRequestBodyLevelEnum `json:"Level,omitempty"`
	Start             *string                                              `json:"Start,omitempty"`
}

type PatchSpacesSpaceIDFoldersIDBankRequest struct {
	PathParams PatchSpacesSpaceIDFoldersIDBankPathParams
	// Bank to modify (except name, class and archivaldate)
	Request PatchSpacesSpaceIDFoldersIDBankRequestBody `request:"mediaType=application/json"`
}

type PatchSpacesSpaceIDFoldersIDBankResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
