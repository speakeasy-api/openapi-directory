"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import policytype_enum as shared_policytype_enum
from ..shared import scalabledimension_enum as shared_scalabledimension_enum
from ..shared import servicenamespace_enum as shared_servicenamespace_enum
from ..shared import stepscalingpolicyconfiguration as shared_stepscalingpolicyconfiguration
from ..shared import targettrackingscalingpolicyconfiguration as shared_targettrackingscalingpolicyconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutScalingPolicyRequest:
    
    policy_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyName') }})  
    resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceId') }})  
    scalable_dimension: shared_scalabledimension_enum.ScalableDimensionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScalableDimension') }})  
    service_namespace: shared_servicenamespace_enum.ServiceNamespaceEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceNamespace') }})  
    policy_type: Optional[shared_policytype_enum.PolicyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyType'), 'exclude': lambda f: f is None }})  
    step_scaling_policy_configuration: Optional[shared_stepscalingpolicyconfiguration.StepScalingPolicyConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StepScalingPolicyConfiguration'), 'exclude': lambda f: f is None }})  
    target_tracking_scaling_policy_configuration: Optional[shared_targettrackingscalingpolicyconfiguration.TargetTrackingScalingPolicyConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetTrackingScalingPolicyConfiguration'), 'exclude': lambda f: f is None }})  
    