// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MobileFriendlyIssueRuleEnum - Rule violated.
type MobileFriendlyIssueRuleEnum string

const (
	MobileFriendlyIssueRuleEnumMobileFriendlyRuleUnspecified MobileFriendlyIssueRuleEnum = "MOBILE_FRIENDLY_RULE_UNSPECIFIED"
	MobileFriendlyIssueRuleEnumUsesIncompatiblePlugins       MobileFriendlyIssueRuleEnum = "USES_INCOMPATIBLE_PLUGINS"
	MobileFriendlyIssueRuleEnumConfigureViewport             MobileFriendlyIssueRuleEnum = "CONFIGURE_VIEWPORT"
	MobileFriendlyIssueRuleEnumFixedWidthViewport            MobileFriendlyIssueRuleEnum = "FIXED_WIDTH_VIEWPORT"
	MobileFriendlyIssueRuleEnumSizeContentToViewport         MobileFriendlyIssueRuleEnum = "SIZE_CONTENT_TO_VIEWPORT"
	MobileFriendlyIssueRuleEnumUseLegibleFontSizes           MobileFriendlyIssueRuleEnum = "USE_LEGIBLE_FONT_SIZES"
	MobileFriendlyIssueRuleEnumTapTargetsTooClose            MobileFriendlyIssueRuleEnum = "TAP_TARGETS_TOO_CLOSE"
)

func (e MobileFriendlyIssueRuleEnum) ToPointer() *MobileFriendlyIssueRuleEnum {
	return &e
}

func (e *MobileFriendlyIssueRuleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MOBILE_FRIENDLY_RULE_UNSPECIFIED":
		fallthrough
	case "USES_INCOMPATIBLE_PLUGINS":
		fallthrough
	case "CONFIGURE_VIEWPORT":
		fallthrough
	case "FIXED_WIDTH_VIEWPORT":
		fallthrough
	case "SIZE_CONTENT_TO_VIEWPORT":
		fallthrough
	case "USE_LEGIBLE_FONT_SIZES":
		fallthrough
	case "TAP_TARGETS_TOO_CLOSE":
		*e = MobileFriendlyIssueRuleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MobileFriendlyIssueRuleEnum: %v", v)
	}
}

// MobileFriendlyIssue - Mobile-friendly issue.
type MobileFriendlyIssue struct {
	// Rule violated.
	Rule *MobileFriendlyIssueRuleEnum `json:"rule,omitempty"`
}
