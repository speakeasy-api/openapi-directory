"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from ..shared import channelcatalogexportationhistory as shared_channelcatalogexportationhistory
from typing import Optional


@dataclasses.dataclass
class GetChannelCatalogExportationHistoryRequest:
    
    channel_catalog_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'channelCatalogId', 'style': 'simple', 'explode': False }})
    r"""The channel catalog identifier"""  
    page_number: int = dataclasses.field(metadata={'query_param': { 'field_name': 'pageNumber', 'style': 'form', 'explode': True }})
    r"""The page number you want to get"""  
    page_size: int = dataclasses.field(metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""The entry count you want to get"""  
    

@dataclasses.dataclass
class GetChannelCatalogExportationHistoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""ChannelCatalogId not found or not authorized"""  
    channel_catalog_exportation_history: Optional[shared_channelcatalogexportationhistory.ChannelCatalogExportationHistory] = dataclasses.field(default=None)
    r"""Channel catalog exportation history"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    