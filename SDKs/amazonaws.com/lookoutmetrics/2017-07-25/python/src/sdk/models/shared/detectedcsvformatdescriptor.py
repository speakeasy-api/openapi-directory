"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import detectedfield as shared_detectedfield
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetectedCsvFormatDescriptor:
    r"""Properties of an inferred CSV format."""
    
    charset: Optional[shared_detectedfield.DetectedField] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Charset'), 'exclude': lambda f: f is None }})  
    contains_header: Optional[shared_detectedfield.DetectedField] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContainsHeader'), 'exclude': lambda f: f is None }})  
    delimiter: Optional[shared_detectedfield.DetectedField] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Delimiter'), 'exclude': lambda f: f is None }})  
    file_compression: Optional[shared_detectedfield.DetectedField] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileCompression'), 'exclude': lambda f: f is None }})  
    header_list: Optional[shared_detectedfield.DetectedField] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeaderList'), 'exclude': lambda f: f is None }})  
    quote_symbol: Optional[shared_detectedfield.DetectedField] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuoteSymbol'), 'exclude': lambda f: f is None }})  
    