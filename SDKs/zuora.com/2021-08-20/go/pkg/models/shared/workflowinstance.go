// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowInstanceStatusEnum - Describes the current state of this workflow instance:
//   - Queued: The workflow is in queue for being processed.
//   - Processing: The workflow is in process.
type WorkflowInstanceStatusEnum string

const (
	WorkflowInstanceStatusEnumQueued     WorkflowInstanceStatusEnum = "Queued"
	WorkflowInstanceStatusEnumProcessing WorkflowInstanceStatusEnum = "Processing"
)

func (e *WorkflowInstanceStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Queued":
		fallthrough
	case "Processing":
		*e = WorkflowInstanceStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowInstanceStatusEnum: %s", s)
	}
}

// WorkflowInstance - A instance workflow object.
type WorkflowInstance struct {
	// The date and time when the workflow is created, in the `YYYY-MM-DD HH:MM:SS` format.
	//
	CreatedAt *string `json:"createdAt,omitempty"`
	// The unique ID of the workflow.
	//
	ID *int64 `json:"id,omitempty"`
	// The run number of this workflow instance
	//
	Name *string `json:"name,omitempty"`
	// The identifier of the workflow template that is used to create this instance.
	//
	OriginalWorkflowID *int64 `json:"originalWorkflowId,omitempty"`
	// Describes the current state of this workflow instance:
	//   - Queued: The workflow is in queue for being processed.
	//   - Processing: The workflow is in process.
	//
	Status *WorkflowInstanceStatusEnum `json:"status,omitempty"`
	// The date and time the last time when the workflow is updated, in the `YYYY-MM-DD HH:MM:SS` format.
	//
	UpdatedAt *string `json:"updatedAt,omitempty"`
}
