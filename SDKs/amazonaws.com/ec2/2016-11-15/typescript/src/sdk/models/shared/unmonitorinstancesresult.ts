/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
 */
export enum UnmonitorInstancesResultInstanceMonitoringsMonitoringStateEnum {
  Disabled = "disabled",
  Disabling = "disabling",
  Enabled = "enabled",
  Pending = "pending",
}

/**
 * The monitoring for the instance.
 */
export class UnmonitorInstancesResultInstanceMonitoringsMonitoring extends SpeakeasyBase {
  @SpeakeasyMetadata()
  state?: UnmonitorInstancesResultInstanceMonitoringsMonitoringStateEnum;
}

/**
 * Describes the monitoring of an instance.
 */
export class UnmonitorInstancesResultInstanceMonitorings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  monitoring?: UnmonitorInstancesResultInstanceMonitoringsMonitoring;
}

/**
 * Success
 */
export class UnmonitorInstancesResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: UnmonitorInstancesResultInstanceMonitorings })
  instanceMonitorings?: UnmonitorInstancesResultInstanceMonitorings[];
}
