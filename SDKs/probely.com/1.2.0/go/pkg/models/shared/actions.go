// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ActionsActionEnum - Actions are:
// * edit - edit target
// * delete - delete target
// * trial - start a trial with this target
// * plan - select a subscipition plan with this target
// * subscribe - add target to subscribed plan
// * unsubscribe - remove target from subscription
// * archive - archive target
// * activate - unarchive target
type ActionsActionEnum string

const (
	ActionsActionEnumEdit        ActionsActionEnum = "edit"
	ActionsActionEnumDelete      ActionsActionEnum = "delete"
	ActionsActionEnumTrial       ActionsActionEnum = "trial"
	ActionsActionEnumPlan        ActionsActionEnum = "plan"
	ActionsActionEnumSubscribe   ActionsActionEnum = "subscribe"
	ActionsActionEnumUnsubscribe ActionsActionEnum = "unsubscribe"
	ActionsActionEnumArchive     ActionsActionEnum = "archive"
	ActionsActionEnumActivate    ActionsActionEnum = "activate"
)

func (e *ActionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "edit":
		fallthrough
	case "delete":
		fallthrough
	case "trial":
		fallthrough
	case "plan":
		fallthrough
	case "subscribe":
		fallthrough
	case "unsubscribe":
		fallthrough
	case "archive":
		fallthrough
	case "activate":
		*e = ActionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionsActionEnum: %s", s)
	}
}

type Actions struct {
	// Actions are:
	// * edit - edit target
	// * delete - delete target
	// * trial - start a trial with this target
	// * plan - select a subscipition plan with this target
	// * subscribe - add target to subscribed plan
	// * unsubscribe - remove target from subscription
	// * archive - archive target
	// * activate - unarchive target
	//
	Action *ActionsActionEnum `json:"action,omitempty"`
	// Label or the action
	Label *string `json:"label,omitempty"`
}
