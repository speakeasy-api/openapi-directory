"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import binarycolumnstatisticsdata as shared_binarycolumnstatisticsdata
from ..shared import booleancolumnstatisticsdata as shared_booleancolumnstatisticsdata
from ..shared import columnstatisticstype_enum as shared_columnstatisticstype_enum
from ..shared import datecolumnstatisticsdata as shared_datecolumnstatisticsdata
from ..shared import decimalcolumnstatisticsdata as shared_decimalcolumnstatisticsdata
from ..shared import doublecolumnstatisticsdata as shared_doublecolumnstatisticsdata
from ..shared import longcolumnstatisticsdata as shared_longcolumnstatisticsdata
from ..shared import stringcolumnstatisticsdata as shared_stringcolumnstatisticsdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ColumnStatisticsData:
    r"""Contains the individual types of column statistics data. Only one data object should be set and indicated by the <code>Type</code> attribute."""
    
    type: shared_columnstatisticstype_enum.ColumnStatisticsTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    binary_column_statistics_data: Optional[shared_binarycolumnstatisticsdata.BinaryColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BinaryColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    boolean_column_statistics_data: Optional[shared_booleancolumnstatisticsdata.BooleanColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BooleanColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    date_column_statistics_data: Optional[shared_datecolumnstatisticsdata.DateColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DateColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    decimal_column_statistics_data: Optional[shared_decimalcolumnstatisticsdata.DecimalColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DecimalColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    double_column_statistics_data: Optional[shared_doublecolumnstatisticsdata.DoubleColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DoubleColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    long_column_statistics_data: Optional[shared_longcolumnstatisticsdata.LongColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LongColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    string_column_statistics_data: Optional[shared_stringcolumnstatisticsdata.StringColumnStatisticsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StringColumnStatisticsData'), 'exclude': lambda f: f is None }})  
    