"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import card_dispute as shared_card_dispute
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CreateACardDisputeDefaultApplicationJSON13StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_NINE = '429'

class CreateACardDisputeDefaultApplicationJSON13TypeEnum(str, Enum):
    RATE_LIMITED_ERROR = 'rate_limited_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON13:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON13StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON13TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    retry_after: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retry_after'), 'exclude': lambda f: f is None }})  
    
class CreateACardDisputeDefaultApplicationJSON12StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class CreateACardDisputeDefaultApplicationJSON12TypeEnum(str, Enum):
    PRIVATE_FEATURE_ERROR = 'private_feature_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON12:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON12StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON12TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON11StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class CreateACardDisputeDefaultApplicationJSON11TypeEnum(str, Enum):
    OBJECT_NOT_FOUND_ERROR = 'object_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON11:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON11StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON11TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON10StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class CreateACardDisputeDefaultApplicationJSON10TypeEnum(str, Enum):
    MALFORMED_REQUEST_ERROR = 'malformed_request_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON10:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON10StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON10TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON9StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class CreateACardDisputeDefaultApplicationJSON9TypeEnum(str, Enum):
    INVALID_PARAMETERS_ERROR = 'invalid_parameters_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON9:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON9StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON9TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    errors: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""All errors related to parsing the request parameters."""  
    
class CreateACardDisputeDefaultApplicationJSON8StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class CreateACardDisputeDefaultApplicationJSON8TypeEnum(str, Enum):
    INVALID_OPERATION_ERROR = 'invalid_operation_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON8:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON8StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON8TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON7StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_ONE = '401'

class CreateACardDisputeDefaultApplicationJSON7TypeEnum(str, Enum):
    INVALID_API_KEY_ERROR = 'invalid_api_key_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON7:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON7StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON7TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON6StatusEnum(str, Enum):
    FIVE_HUNDRED = '500'

class CreateACardDisputeDefaultApplicationJSON6TypeEnum(str, Enum):
    INTERNAL_SERVER_ERROR = 'internal_server_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON6:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON6StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON6TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON5StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class CreateACardDisputeDefaultApplicationJSON5TypeEnum(str, Enum):
    INSUFFICIENT_PERMISSIONS_ERROR = 'insufficient_permissions_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON5:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON5StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON5TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON4StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_TWO = '422'

class CreateACardDisputeDefaultApplicationJSON4TypeEnum(str, Enum):
    IDEMPOTENCY_UNPROCESSABLE_ERROR = 'idempotency_unprocessable_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON4:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON4StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON4TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON3StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class CreateACardDisputeDefaultApplicationJSON3TypeEnum(str, Enum):
    IDEMPOTENCY_CONFLICT_ERROR = 'idempotency_conflict_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON3:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON3StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON3TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON2StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class CreateACardDisputeDefaultApplicationJSON2TypeEnum(str, Enum):
    ENVIRONMENT_MISMATCH_ERROR = 'environment_mismatch_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON2:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON2StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON2TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class CreateACardDisputeDefaultApplicationJSON1StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class CreateACardDisputeDefaultApplicationJSON1TypeEnum(str, Enum):
    API_METHOD_NOT_FOUND_ERROR = 'api_method_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateACardDisputeDefaultApplicationJSON1:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: CreateACardDisputeDefaultApplicationJSON1StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: CreateACardDisputeDefaultApplicationJSON1TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclasses.dataclass
class CreateACardDisputeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    card_dispute: Optional[shared_card_dispute.CardDispute] = dataclasses.field(default=None)
    r"""Card Dispute"""  
    error: Optional[Any] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    