"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import links_disablechannelcatalogcategorymappinglink as shared_links_disablechannelcatalogcategorymappinglink
from ..shared import links_getchannelcatalogcategorieslink as shared_links_getchannelcatalogcategorieslink
from ..shared import links_reenablechannelcatalogcategorymappinglink as shared_links_reenablechannelcatalogcategorymappinglink
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogCategoryMappingsLinks:
    r"""The action you can do on the category mappings"""
    
    self_: shared_links_getchannelcatalogcategorieslink.LinksGetChannelCatalogCategoriesLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('self') }})  
    disable: Optional[shared_links_disablechannelcatalogcategorymappinglink.LinksDisableChannelCatalogCategoryMappingLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disable'), 'exclude': lambda f: f is None }})  
    reenable: Optional[shared_links_reenablechannelcatalogcategorymappinglink.LinksReenableChannelCatalogCategoryMappingLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reenable'), 'exclude': lambda f: f is None }})  
    