/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AllowedClientInput - Represents an 'access point' for the share.
 */
public class AllowedClientInput {
    /**
     * Allow dev flag. Which controls whether to allow creation of devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowDev")
    public Boolean allowDev;

    public AllowedClientInput withAllowDev(Boolean allowDev) {
        this.allowDev = allowDev;
        return this;
    }
    
    /**
     * Allow the setuid flag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowSuid")
    public Boolean allowSuid;

    public AllowedClientInput withAllowSuid(Boolean allowSuid) {
        this.allowSuid = allowSuid;
        return this;
    }
    
    /**
     * The subnet of IP addresses permitted to access the share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedClientsCidr")
    public String allowedClientsCidr;

    public AllowedClientInput withAllowedClientsCidr(String allowedClientsCidr) {
        this.allowedClientsCidr = allowedClientsCidr;
        return this;
    }
    
    /**
     * Mount permissions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountPermissions")
    public AllowedClientMountPermissionsEnum mountPermissions;

    public AllowedClientInput withMountPermissions(AllowedClientMountPermissionsEnum mountPermissions) {
        this.mountPermissions = mountPermissions;
        return this;
    }
    
    /**
     * The network the access point sits on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public AllowedClientInput withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noRootSquash")
    public Boolean noRootSquash;

    public AllowedClientInput withNoRootSquash(Boolean noRootSquash) {
        this.noRootSquash = noRootSquash;
        return this;
    }
    
    public AllowedClientInput(){}
}
