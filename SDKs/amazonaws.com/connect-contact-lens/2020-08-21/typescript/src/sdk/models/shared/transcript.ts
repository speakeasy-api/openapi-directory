/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IssueDetected } from "./issuedetected";
import { SentimentValueEnum } from "./sentimentvalueenum";
import { Expose, Type } from "class-transformer";

/**
 * A list of messages in the session.
 */
export class Transcript extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BeginOffsetMillis" })
  beginOffsetMillis: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Content" })
  content: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndOffsetMillis" })
  endOffsetMillis: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata({ elemType: IssueDetected })
  @Expose({ name: "IssuesDetected" })
  @Type(() => IssueDetected)
  issuesDetected?: IssueDetected[];

  @SpeakeasyMetadata()
  @Expose({ name: "ParticipantId" })
  participantId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParticipantRole" })
  participantRole: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Sentiment" })
  sentiment: SentimentValueEnum;
}
