"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTimeSeriesSummary:
    r"""Summary of the result of a failed request to write data to a time series."""
    
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""The number of points that failed to be written. Order is not guaranteed."""  
    success_point_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('successPointCount'), 'exclude': lambda f: f is None }})
    r"""The number of points that were successfully written."""  
    total_point_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalPointCount'), 'exclude': lambda f: f is None }})
    r"""The number of points in the request."""  
    