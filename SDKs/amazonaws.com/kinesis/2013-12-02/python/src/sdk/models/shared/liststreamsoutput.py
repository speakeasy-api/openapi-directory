"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import streamsummary as shared_streamsummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListStreamsOutput:
    r"""Represents the output for <code>ListStreams</code>."""
    
    has_more_streams: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HasMoreStreams') }})  
    stream_names: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StreamNames') }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    stream_summaries: Optional[list[shared_streamsummary.StreamSummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StreamSummaries'), 'exclude': lambda f: f is None }})  
    