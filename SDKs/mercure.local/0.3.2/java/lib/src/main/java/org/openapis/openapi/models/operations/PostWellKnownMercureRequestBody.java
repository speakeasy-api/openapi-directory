/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostWellKnownMercureRequestBody {
    /**
     * The content of the new version of this topic.
     */
    @SpeakeasyMetadata("form:name=data")
    public String data;
    public PostWellKnownMercureRequestBody withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * The topic's revision identifier: it will be used as the SSE's `id` property.
     */
    @SpeakeasyMetadata("form:name=id")
    public String id;
    public PostWellKnownMercureRequestBody withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * To mark an update as private. If not provided, this update will be public.
     */
    @SpeakeasyMetadata("form:name=private")
    public Boolean private_;
    public PostWellKnownMercureRequestBody withPrivate(Boolean private_) {
        this.private_ = private_;
        return this;
    }
    
    /**
     * The SSE's `retry` property (the reconnection time).
     */
    @SpeakeasyMetadata("form:name=retry")
    public Long retry;
    public PostWellKnownMercureRequestBody withRetry(Long retry) {
        this.retry = retry;
        return this;
    }
    
    /**
     * IRIs of the updated topic. If this key is present several times, the first occurrence is considered to be the canonical URL of the topic, and other ones are considered to be alternate URLs.
     */
    @SpeakeasyMetadata("form:name=topic")
    public String[] topic;
    public PostWellKnownMercureRequestBody withTopic(String[] topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * The SSE's `event` property (a specific event type).
     */
    @SpeakeasyMetadata("form:name=type")
    public String type;
    public PostWellKnownMercureRequestBody withType(String type) {
        this.type = type;
        return this;
    }
    
}
