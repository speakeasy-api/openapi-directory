<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NetworkConfig - NetworkConfig reports the relative names of network & subnetwork.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NetworkConfig
{
    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkConfigDatapathProviderEnum $datapathProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('datapathProvider')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkConfigDatapathProviderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConfigDatapathProviderEnum $datapathProvider = null;
    
    /**
     * DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DefaultSnatStatus $defaultSnatStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultSnatStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DefaultSnatStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DefaultSnatStatus $defaultSnatStatus = null;
    
    /**
     * DNSConfig contains the desired set of options for configuring clusterDNS.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DNSConfig $dnsConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DNSConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DNSConfig $dnsConfig = null;
    
    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
     * 
     * @var ?bool $enableIntraNodeVisibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableIntraNodeVisibility')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableIntraNodeVisibility = null;
    
    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     * 
     * @var ?bool $enableL4ilbSubsetting
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableL4ilbSubsetting')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableL4ilbSubsetting = null;
    
    /**
     * GatewayAPIConfig contains the desired config of Gateway API on this cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GatewayAPIConfig $gatewayApiConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('gatewayApiConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GatewayAPIConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GatewayAPIConfig $gatewayApiConfig = null;
    
    /**
     * Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network
     * 
     * @var ?string $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $network = null;
    
    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkConfigPrivateIpv6GoogleAccessEnum $privateIpv6GoogleAccess
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateIpv6GoogleAccess')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkConfigPrivateIpv6GoogleAccessEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConfigPrivateIpv6GoogleAccessEnum $privateIpv6GoogleAccess = null;
    
    /**
     * Config to block services with externalIPs field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceExternalIPsConfig $serviceExternalIpsConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceExternalIpsConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ServiceExternalIPsConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceExternalIPsConfig $serviceExternalIpsConfig = null;
    
    /**
     * Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
     * 
     * @var ?string $subnetwork
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnetwork')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnetwork = null;
    
	public function __construct()
	{
		$this->datapathProvider = null;
		$this->defaultSnatStatus = null;
		$this->dnsConfig = null;
		$this->enableIntraNodeVisibility = null;
		$this->enableL4ilbSubsetting = null;
		$this->gatewayApiConfig = null;
		$this->network = null;
		$this->privateIpv6GoogleAccess = null;
		$this->serviceExternalIpsConfig = null;
		$this->subnetwork = null;
	}
}
