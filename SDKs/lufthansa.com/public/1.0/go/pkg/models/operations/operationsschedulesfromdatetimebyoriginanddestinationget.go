// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type OperationsSchedulesFromDateTimeByOriginAndDestinationGetSecurity struct {
	Auth string `security:"scheme,type=oauth2,name=Authorization"`
}

type OperationsSchedulesFromDateTimeByOriginAndDestinationGetRequest struct {
	// http header: application/json or application/xml (Acceptable values are: "application/json", "application/xml")
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Destination airport. 3-letter IATA airport code (e.g. 'FRA')
	Destination string `pathParam:"style=simple,explode=false,name=destination"`
	// Show only direct flights (false=0, true=1). Default is false
	DirectFlights *bool `queryParam:"style=form,explode=true,name=directFlights"`
	// Local departure date and optionally departure time (YYYY-MM-DD or YYYY-MM-DDTHH:mm). When not provided, time is assumed to be 00:01
	FromDateTime string `pathParam:"style=simple,explode=false,name=fromDateTime"`
	// Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// Number of records skipped. Defaults to 0
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// Departure airport. 3-letter IATA airport code (e.g. 'ZRH')
	Origin string `pathParam:"style=simple,explode=false,name=origin"`
}

type OperationsSchedulesFromDateTimeByOriginAndDestinationGetResponse struct {
	ContentType                                                                      string
	OperationsSchedulesFromDateTimeByOriginAndDestinationGet200ApplicationJSONObject map[string]interface{}
	StatusCode                                                                       int
	RawResponse                                                                      *http.Response
}
