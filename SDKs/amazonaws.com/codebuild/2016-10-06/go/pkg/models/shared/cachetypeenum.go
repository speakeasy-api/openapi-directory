// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CacheTypeEnum string

const (
	CacheTypeEnumNoCache CacheTypeEnum = "NO_CACHE"
	CacheTypeEnumS3      CacheTypeEnum = "S3"
	CacheTypeEnumLocal   CacheTypeEnum = "LOCAL"
)

func (e CacheTypeEnum) ToPointer() *CacheTypeEnum {
	return &e
}

func (e *CacheTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NO_CACHE":
		fallthrough
	case "S3":
		fallthrough
	case "LOCAL":
		*e = CacheTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CacheTypeEnum: %v", v)
	}
}
