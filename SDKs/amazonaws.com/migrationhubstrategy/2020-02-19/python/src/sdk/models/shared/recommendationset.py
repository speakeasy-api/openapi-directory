"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import strategy_enum as shared_strategy_enum
from ..shared import targetdestination_enum as shared_targetdestination_enum
from ..shared import transformationtool as shared_transformationtool
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendationSet:
    r"""Contains a recommendation set."""
    
    strategy: Optional[shared_strategy_enum.StrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('strategy'), 'exclude': lambda f: f is None }})  
    target_destination: Optional[shared_targetdestination_enum.TargetDestinationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetDestination'), 'exclude': lambda f: f is None }})  
    transformation_tool: Optional[shared_transformationtool.TransformationTool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transformationTool'), 'exclude': lambda f: f is None }})  
    