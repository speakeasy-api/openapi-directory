"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HTTPRouteCorsPolicy:
    r"""The Specification for allowing client side cross-origin requests."""
    
    allow_credentials: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowCredentials'), 'exclude': lambda f: f is None }})
    r"""In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false."""  
    allow_headers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowHeaders'), 'exclude': lambda f: f is None }})
    r"""Specifies the content for Access-Control-Allow-Headers header."""  
    allow_methods: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowMethods'), 'exclude': lambda f: f is None }})
    r"""Specifies the content for Access-Control-Allow-Methods header."""  
    allow_origin_regexes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowOriginRegexes'), 'exclude': lambda f: f is None }})
    r"""Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax."""  
    allow_origins: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowOrigins'), 'exclude': lambda f: f is None }})
    r"""Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes."""  
    disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disabled'), 'exclude': lambda f: f is None }})
    r"""If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect."""  
    expose_headers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exposeHeaders'), 'exclude': lambda f: f is None }})
    r"""Specifies the content for Access-Control-Expose-Headers header."""  
    max_age: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxAge'), 'exclude': lambda f: f is None }})
    r"""Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header."""  
    