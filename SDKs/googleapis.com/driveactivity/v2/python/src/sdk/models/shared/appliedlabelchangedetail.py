"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldvaluechange as shared_fieldvaluechange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AppliedLabelChangeDetailTypesEnum(str, Enum):
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    LABEL_ADDED = 'LABEL_ADDED'
    LABEL_REMOVED = 'LABEL_REMOVED'
    LABEL_FIELD_VALUE_CHANGED = 'LABEL_FIELD_VALUE_CHANGED'
    LABEL_APPLIED_BY_ITEM_CREATE = 'LABEL_APPLIED_BY_ITEM_CREATE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppliedLabelChangeDetail:
    r"""A change made to a Label on the Target."""
    
    field_changes: Optional[list[shared_fieldvaluechange.FieldValueChange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldChanges'), 'exclude': lambda f: f is None }})
    r"""Field Changes. Only present if `types` contains `LABEL_FIELD_VALUE_CHANGED`."""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""The Label name representing the Label that changed. This name always contains the revision of the Label that was used when this Action occurred. The format is `labels/id@revision`."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The human-readable title of the label that changed."""  
    types: Optional[list[AppliedLabelChangeDetailTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('types'), 'exclude': lambda f: f is None }})
    r"""The types of changes made to the Label on the Target."""  
    