"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filemodetypeenum_enum as shared_filemodetypeenum_enum
from ..shared import sourcefilespecifier as shared_sourcefilespecifier
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutFileEntry:
    r"""Information about a file added or updated as part of a commit."""
    
    file_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filePath') }})  
    file_content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileContent'), 'exclude': lambda f: f is None }})  
    file_mode: Optional[shared_filemodetypeenum_enum.FileModeTypeEnumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileMode'), 'exclude': lambda f: f is None }})  
    source_file: Optional[shared_sourcefilespecifier.SourceFileSpecifier] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceFile'), 'exclude': lambda f: f is None }})  
    