<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InstitutionAccountsSearch - Search Parameters
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InstitutionAccountsSearch
{
    /**
     * filter by email
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * filter by institution_user_id
     * 
     * @var ?string $institutionUserId
     */
	#[\JMS\Serializer\Annotation\SerializedName('institution_user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $institutionUserId = null;
    
    /**
     * Filter by active status
     * 
     * @var ?int $isActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_active')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $isActive = null;
    
    /**
     * Number of results included on a page. Used for pagination with query
     * 
     * @var ?int $limit
     */
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $limit = null;
    
    /**
     * Where to start the listing(the offset of the first result). Used for pagination with limit
     * 
     * @var ?int $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offset = null;
    
    /**
     * Page number. Used for pagination with page_size
     * 
     * @var ?int $page
     */
	#[\JMS\Serializer\Annotation\SerializedName('page')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $page = null;
    
    /**
     * The number of results included on a page. Used for pagination with page
     * 
     * @var ?int $pageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('page_size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pageSize = null;
    
    /**
     * Search term
     * 
     * @var ?string $searchFor
     */
	#[\JMS\Serializer\Annotation\SerializedName('search_for')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $searchFor = null;
    
	public function __construct()
	{
		$this->email = null;
		$this->institutionUserId = null;
		$this->isActive = null;
		$this->limit = null;
		$this->offset = null;
		$this->page = null;
		$this->pageSize = null;
		$this->searchFor = null;
	}
}
