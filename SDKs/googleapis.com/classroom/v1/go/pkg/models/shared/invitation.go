// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvitationRoleEnum - Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
type InvitationRoleEnum string

const (
	InvitationRoleEnumCourseRoleUnspecified InvitationRoleEnum = "COURSE_ROLE_UNSPECIFIED"
	InvitationRoleEnumStudent               InvitationRoleEnum = "STUDENT"
	InvitationRoleEnumTeacher               InvitationRoleEnum = "TEACHER"
	InvitationRoleEnumOwner                 InvitationRoleEnum = "OWNER"
)

func (e InvitationRoleEnum) ToPointer() *InvitationRoleEnum {
	return &e
}

func (e *InvitationRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COURSE_ROLE_UNSPECIFIED":
		fallthrough
	case "STUDENT":
		fallthrough
	case "TEACHER":
		fallthrough
	case "OWNER":
		*e = InvitationRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvitationRoleEnum: %v", v)
	}
}

// Invitation - An invitation to join a course.
type Invitation struct {
	// Identifier of the course to invite the user to.
	CourseID *string `json:"courseId,omitempty"`
	// Identifier assigned by Classroom. Read-only.
	ID *string `json:"id,omitempty"`
	// Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
	Role *InvitationRoleEnum `json:"role,omitempty"`
	// Identifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user
	UserID *string `json:"userId,omitempty"`
}
