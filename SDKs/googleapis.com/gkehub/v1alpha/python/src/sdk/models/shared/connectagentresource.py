"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import typemeta as shared_typemeta
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectAgentResource:
    r"""ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment."""
    
    manifest: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manifest'), 'exclude': lambda f: f is None }})
    r"""YAML manifest of the resource."""  
    type: Optional[shared_typemeta.TypeMeta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest."""  
    