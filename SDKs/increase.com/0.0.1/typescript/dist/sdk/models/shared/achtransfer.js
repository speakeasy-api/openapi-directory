"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AchTransfer = exports.AchTransferTypeEnum = exports.ACHTransferACHTransferSubmission = exports.AchTransferStatusEnum = exports.AchTransferStandardEntryClassCodeEnum = exports.ACHTransferACHTransferReturn = exports.ACHTransferACHTransferReturnReturnReasonCodeEnum = exports.ACHTransferACHNotificationOfChange = exports.AchTransferNetworkEnum = exports.AchTransferFundingEnum = exports.AchTransferCurrencyEnum = exports.AchTransferTransferCancellation = exports.AchTransferTransferApproval = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
 */
var AchTransferTransferApproval = /** @class */ (function (_super) {
    __extends(AchTransferTransferApproval, _super);
    function AchTransferTransferApproval() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approved_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AchTransferTransferApproval.prototype, "approvedAt", void 0);
    return AchTransferTransferApproval;
}(utils_1.SpeakeasyBase));
exports.AchTransferTransferApproval = AchTransferTransferApproval;
/**
 * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
 */
var AchTransferTransferCancellation = /** @class */ (function (_super) {
    __extends(AchTransferTransferCancellation, _super);
    function AchTransferTransferCancellation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canceled_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AchTransferTransferCancellation.prototype, "canceledAt", void 0);
    return AchTransferTransferCancellation;
}(utils_1.SpeakeasyBase));
exports.AchTransferTransferCancellation = AchTransferTransferCancellation;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.
 */
var AchTransferCurrencyEnum;
(function (AchTransferCurrencyEnum) {
    AchTransferCurrencyEnum["Cad"] = "CAD";
    AchTransferCurrencyEnum["Chf"] = "CHF";
    AchTransferCurrencyEnum["Eur"] = "EUR";
    AchTransferCurrencyEnum["Gbp"] = "GBP";
    AchTransferCurrencyEnum["Jpy"] = "JPY";
    AchTransferCurrencyEnum["Usd"] = "USD";
})(AchTransferCurrencyEnum = exports.AchTransferCurrencyEnum || (exports.AchTransferCurrencyEnum = {}));
/**
 * The type of the account to which the transfer will be sent.
 */
var AchTransferFundingEnum;
(function (AchTransferFundingEnum) {
    AchTransferFundingEnum["Checking"] = "checking";
    AchTransferFundingEnum["Savings"] = "savings";
})(AchTransferFundingEnum = exports.AchTransferFundingEnum || (exports.AchTransferFundingEnum = {}));
/**
 * The transfer's network.
 */
var AchTransferNetworkEnum;
(function (AchTransferNetworkEnum) {
    AchTransferNetworkEnum["Ach"] = "ach";
})(AchTransferNetworkEnum = exports.AchTransferNetworkEnum || (exports.AchTransferNetworkEnum = {}));
/**
 * If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.
 */
var ACHTransferACHNotificationOfChange = /** @class */ (function (_super) {
    __extends(ACHTransferACHNotificationOfChange, _super);
    function ACHTransferACHNotificationOfChange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "change_code" }),
        __metadata("design:type", String)
    ], ACHTransferACHNotificationOfChange.prototype, "changeCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "corrected_data" }),
        __metadata("design:type", String)
    ], ACHTransferACHNotificationOfChange.prototype, "correctedData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ACHTransferACHNotificationOfChange.prototype, "createdAt", void 0);
    return ACHTransferACHNotificationOfChange;
}(utils_1.SpeakeasyBase));
exports.ACHTransferACHNotificationOfChange = ACHTransferACHNotificationOfChange;
/**
 * Why the ACH Transfer was returned.
 */
var ACHTransferACHTransferReturnReturnReasonCodeEnum;
(function (ACHTransferACHTransferReturnReturnReasonCodeEnum) {
    ACHTransferACHTransferReturnReturnReasonCodeEnum["InsufficientFund"] = "insufficient_fund";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["NoAccount"] = "no_account";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["AccountClosed"] = "account_closed";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["InvalidAccountNumberStructure"] = "invalid_account_number_structure";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["AccountFrozenEntryReturnedPerOfacInstruction"] = "account_frozen_entry_returned_per_ofac_instruction";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["CreditEntryRefusedByReceiver"] = "credit_entry_refused_by_receiver";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["UnauthorizedDebitToConsumerAccountUsingCorporateSecCode"] = "unauthorized_debit_to_consumer_account_using_corporate_sec_code";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["CorporateCustomerAdvisedNotAuthorized"] = "corporate_customer_advised_not_authorized";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["PaymentStopped"] = "payment_stopped";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["NonTransactionAccount"] = "non_transaction_account";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["UncollectedFunds"] = "uncollected_funds";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["RoutingNumberCheckDigitError"] = "routing_number_check_digit_error";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["CustomerAdvisedUnauthorizedImproperIneligibleOrIncomplete"] = "customer_advised_unauthorized_improper_ineligible_or_incomplete";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["AmountFieldError"] = "amount_field_error";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["AuthorizationRevokedByCustomer"] = "authorization_revoked_by_customer";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["InvalidAchRoutingNumber"] = "invalid_ach_routing_number";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["FileRecordEditCriteria"] = "file_record_edit_criteria";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["EnrInvalidIndividualName"] = "enr_invalid_individual_name";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["ReturnedPerOdfiRequest"] = "returned_per_odfi_request";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["AddendaError"] = "addenda_error";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["LimitedParticipationDfi"] = "limited_participation_dfi";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["IncorrectlyCodedOutboundInternationalPayment"] = "incorrectly_coded_outbound_international_payment";
    ACHTransferACHTransferReturnReturnReasonCodeEnum["Other"] = "other";
})(ACHTransferACHTransferReturnReturnReasonCodeEnum = exports.ACHTransferACHTransferReturnReturnReasonCodeEnum || (exports.ACHTransferACHTransferReturnReturnReasonCodeEnum = {}));
/**
 * If your transfer is returned, this will contain details of the return.
 */
var ACHTransferACHTransferReturn = /** @class */ (function (_super) {
    __extends(ACHTransferACHTransferReturn, _super);
    function ACHTransferACHTransferReturn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ACHTransferACHTransferReturn.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "return_reason_code" }),
        __metadata("design:type", String)
    ], ACHTransferACHTransferReturn.prototype, "returnReasonCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], ACHTransferACHTransferReturn.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], ACHTransferACHTransferReturn.prototype, "transferId", void 0);
    return ACHTransferACHTransferReturn;
}(utils_1.SpeakeasyBase));
exports.ACHTransferACHTransferReturn = ACHTransferACHTransferReturn;
/**
 * The Standard Entry Class (SEC) code to use for the transfer.
 */
var AchTransferStandardEntryClassCodeEnum;
(function (AchTransferStandardEntryClassCodeEnum) {
    AchTransferStandardEntryClassCodeEnum["CorporateCreditOrDebit"] = "corporate_credit_or_debit";
    AchTransferStandardEntryClassCodeEnum["PrearrangedPaymentsAndDeposit"] = "prearranged_payments_and_deposit";
    AchTransferStandardEntryClassCodeEnum["InternetInitiated"] = "internet_initiated";
})(AchTransferStandardEntryClassCodeEnum = exports.AchTransferStandardEntryClassCodeEnum || (exports.AchTransferStandardEntryClassCodeEnum = {}));
/**
 * The lifecycle status of the transfer.
 */
var AchTransferStatusEnum;
(function (AchTransferStatusEnum) {
    AchTransferStatusEnum["PendingApproval"] = "pending_approval";
    AchTransferStatusEnum["Canceled"] = "canceled";
    AchTransferStatusEnum["PendingSubmission"] = "pending_submission";
    AchTransferStatusEnum["Submitted"] = "submitted";
    AchTransferStatusEnum["Returned"] = "returned";
    AchTransferStatusEnum["RequiresAttention"] = "requires_attention";
    AchTransferStatusEnum["Rejected"] = "rejected";
})(AchTransferStatusEnum = exports.AchTransferStatusEnum || (exports.AchTransferStatusEnum = {}));
/**
 * After the transfer is submitted to FedACH, this will contain supplemental details.
 */
var ACHTransferACHTransferSubmission = /** @class */ (function (_super) {
    __extends(ACHTransferACHTransferSubmission, _super);
    function ACHTransferACHTransferSubmission() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submitted_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ACHTransferACHTransferSubmission.prototype, "submittedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trace_number" }),
        __metadata("design:type", String)
    ], ACHTransferACHTransferSubmission.prototype, "traceNumber", void 0);
    return ACHTransferACHTransferSubmission;
}(utils_1.SpeakeasyBase));
exports.ACHTransferACHTransferSubmission = ACHTransferACHTransferSubmission;
/**
 * A constant representing the object's type. For this resource it will always be `ach_transfer`.
 */
var AchTransferTypeEnum;
(function (AchTransferTypeEnum) {
    AchTransferTypeEnum["AchTransfer"] = "ach_transfer";
})(AchTransferTypeEnum = exports.AchTransferTypeEnum || (exports.AchTransferTypeEnum = {}));
/**
 * ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).
 */
var AchTransfer = /** @class */ (function (_super) {
    __extends(AchTransfer, _super);
    function AchTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_number" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "addendum" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "addendum", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], AchTransfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approval" }),
        (0, class_transformer_1.Type)(function () { return AchTransferTransferApproval; }),
        __metadata("design:type", AchTransferTransferApproval)
    ], AchTransfer.prototype, "approval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancellation" }),
        (0, class_transformer_1.Type)(function () { return AchTransferTransferCancellation; }),
        __metadata("design:type", AchTransferTransferCancellation)
    ], AchTransfer.prototype, "cancellation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "company_descriptive_date" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "companyDescriptiveDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "company_discretionary_data" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "companyDiscretionaryData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "company_entry_description" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "companyEntryDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "company_name" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "companyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AchTransfer.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "external_account_id" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "externalAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "funding" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "funding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "individual_id" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "individualId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "individual_name" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "individualName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "network", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notification_of_change" }),
        (0, class_transformer_1.Type)(function () { return ACHTransferACHNotificationOfChange; }),
        __metadata("design:type", ACHTransferACHNotificationOfChange)
    ], AchTransfer.prototype, "notificationOfChange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "return" }),
        (0, class_transformer_1.Type)(function () { return ACHTransferACHTransferReturn; }),
        __metadata("design:type", ACHTransferACHTransferReturn)
    ], AchTransfer.prototype, "return", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routing_number" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "routingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "standard_entry_class_code" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "standardEntryClassCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statement_descriptor" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "statementDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submission" }),
        (0, class_transformer_1.Type)(function () { return ACHTransferACHTransferSubmission; }),
        __metadata("design:type", ACHTransferACHTransferSubmission)
    ], AchTransfer.prototype, "submission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "template_id" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "templateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AchTransfer.prototype, "type", void 0);
    return AchTransfer;
}(utils_1.SpeakeasyBase));
exports.AchTransfer = AchTransfer;
