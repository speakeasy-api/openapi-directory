"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import availablecontexts as shared_availablecontexts
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIKey:
    
    available: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('available') }})
    r"""Determines whether the key can be used by the requesting agent.
    
    Returns false if one of the following conditions are met:
      - Key has no lookups remaining
      - Daily limit has been reached on the key
      - Daily individual limit has been reached
      - Key is not being used via an authorised URL
      - (Sublicensed key only) Key has a valid licensee attached
      - (Sublicensed key only) Key is not being used via an authorised URL specified by licensee
    """  
    context: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context') }})
    r"""Returns current context if it is in the list of available contexts for this key."""  
    contexts: list[shared_availablecontexts.AvailableContexts] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contexts') }})
    r"""A list of available contexts for a key"""  
    