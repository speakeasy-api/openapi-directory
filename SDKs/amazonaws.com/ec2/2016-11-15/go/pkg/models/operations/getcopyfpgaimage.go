// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCopyFpgaImageActionEnum
type GETCopyFpgaImageActionEnum string

const (
	GETCopyFpgaImageActionEnumCopyFpgaImage GETCopyFpgaImageActionEnum = "CopyFpgaImage"
)

func (e *GETCopyFpgaImageActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CopyFpgaImage":
		*e = GETCopyFpgaImageActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCopyFpgaImageActionEnum: %s", s)
	}
}

// GETCopyFpgaImageVersionEnum
type GETCopyFpgaImageVersionEnum string

const (
	GETCopyFpgaImageVersionEnumTwoThousandAndSixteen1115 GETCopyFpgaImageVersionEnum = "2016-11-15"
)

func (e *GETCopyFpgaImageVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETCopyFpgaImageVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCopyFpgaImageVersionEnum: %s", s)
	}
}

type GETCopyFpgaImageQueryParams struct {
	Action GETCopyFpgaImageActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring idempotency</a>.
	ClientToken *string `queryParam:"style=form,explode=true,name=ClientToken"`
	// The description for the new AFI.
	Description *string `queryParam:"style=form,explode=true,name=Description"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The name for the new AFI. The default is the name of the source AFI.
	Name *string `queryParam:"style=form,explode=true,name=Name"`
	// The ID of the source AFI.
	SourceFpgaImageID string `queryParam:"style=form,explode=true,name=SourceFpgaImageId"`
	// The Region that contains the source AFI.
	SourceRegion string                      `queryParam:"style=form,explode=true,name=SourceRegion"`
	Version      GETCopyFpgaImageVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETCopyFpgaImageHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCopyFpgaImageRequest struct {
	QueryParams GETCopyFpgaImageQueryParams
	Headers     GETCopyFpgaImageHeaders
}

type GETCopyFpgaImageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
