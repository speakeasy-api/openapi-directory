// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// MfaSetupStatusMfaTypeEnum - Type of second factor authentication
type MfaSetupStatusMfaTypeEnum string

const (
	MfaSetupStatusMfaTypeEnumTotp      MfaSetupStatusMfaTypeEnum = "TOTP"
	MfaSetupStatusMfaTypeEnumEmergency MfaSetupStatusMfaTypeEnum = "EMERGENCY"
	MfaSetupStatusMfaTypeEnumU2F       MfaSetupStatusMfaTypeEnum = "U2F"
)

func (e MfaSetupStatusMfaTypeEnum) ToPointer() *MfaSetupStatusMfaTypeEnum {
	return &e
}

func (e *MfaSetupStatusMfaTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TOTP":
		fallthrough
	case "EMERGENCY":
		fallthrough
	case "U2F":
		*e = MfaSetupStatusMfaTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MfaSetupStatusMfaTypeEnum: %v", v)
	}
}

// MfaSetupStatus - Contains the save-to-send-out information of a MFA-setup
type MfaSetupStatus struct {
	// Creation date
	CreatedAt time.Time `json:"createdAt"`
	// ID
	ID int64 `json:"id"`
	// Type of second factor authentication
	MfaType MfaSetupStatusMfaTypeEnum `json:"mfaType"`
	// A name to identify the MFA setup by the user. Default is MFA-type followed by a number
	Name string `json:"name"`
}
