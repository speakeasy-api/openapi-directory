"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateGroupIfNotExistsForUsingPOSTResponse = exports.CreateGroupIfNotExistsForUsingPost200ApplicationJSON = exports.CreateGroupIfNotExistsForUsingPost200ApplicationJSONData = exports.CreateGroupIfNotExistsForUsingPost400ApplicationJSON = exports.CreateGroupIfNotExistsForUsingPost401ApplicationJSON = exports.CreateGroupIfNotExistsForUsingPost500ApplicationJSON = exports.CreateGroupIfNotExistsForUsingPOSTRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var CreateGroupIfNotExistsForUsingPOSTRequest = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPOSTRequest, _super);
    function CreateGroupIfNotExistsForUsingPOSTRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=groupMapper",
        }),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPOSTRequest.prototype, "groupMapper", void 0);
    return CreateGroupIfNotExistsForUsingPOSTRequest;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPOSTRequest = CreateGroupIfNotExistsForUsingPOSTRequest;
/**
 * internal api error (code 2)
 */
var CreateGroupIfNotExistsForUsingPost500ApplicationJSON = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPost500ApplicationJSON, _super);
    function CreateGroupIfNotExistsForUsingPost500ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", Number)
    ], CreateGroupIfNotExistsForUsingPost500ApplicationJSON.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data" }),
        __metadata("design:type", Object)
    ], CreateGroupIfNotExistsForUsingPost500ApplicationJSON.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPost500ApplicationJSON.prototype, "message", void 0);
    return CreateGroupIfNotExistsForUsingPost500ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPost500ApplicationJSON = CreateGroupIfNotExistsForUsingPost500ApplicationJSON;
/**
 * no or wrong API key (code 4)
 */
var CreateGroupIfNotExistsForUsingPost401ApplicationJSON = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPost401ApplicationJSON, _super);
    function CreateGroupIfNotExistsForUsingPost401ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", Number)
    ], CreateGroupIfNotExistsForUsingPost401ApplicationJSON.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data" }),
        __metadata("design:type", Object)
    ], CreateGroupIfNotExistsForUsingPost401ApplicationJSON.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPost401ApplicationJSON.prototype, "message", void 0);
    return CreateGroupIfNotExistsForUsingPost401ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPost401ApplicationJSON = CreateGroupIfNotExistsForUsingPost401ApplicationJSON;
/**
 * generic api error (code 1)
 */
var CreateGroupIfNotExistsForUsingPost400ApplicationJSON = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPost400ApplicationJSON, _super);
    function CreateGroupIfNotExistsForUsingPost400ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", Number)
    ], CreateGroupIfNotExistsForUsingPost400ApplicationJSON.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data" }),
        __metadata("design:type", Object)
    ], CreateGroupIfNotExistsForUsingPost400ApplicationJSON.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPost400ApplicationJSON.prototype, "message", void 0);
    return CreateGroupIfNotExistsForUsingPost400ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPost400ApplicationJSON = CreateGroupIfNotExistsForUsingPost400ApplicationJSON;
var CreateGroupIfNotExistsForUsingPost200ApplicationJSONData = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPost200ApplicationJSONData, _super);
    function CreateGroupIfNotExistsForUsingPost200ApplicationJSONData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupID" }),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPost200ApplicationJSONData.prototype, "groupID", void 0);
    return CreateGroupIfNotExistsForUsingPost200ApplicationJSONData;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPost200ApplicationJSONData = CreateGroupIfNotExistsForUsingPost200ApplicationJSONData;
/**
 * ok (code 0)
 */
var CreateGroupIfNotExistsForUsingPost200ApplicationJSON = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPost200ApplicationJSON, _super);
    function CreateGroupIfNotExistsForUsingPost200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", Number)
    ], CreateGroupIfNotExistsForUsingPost200ApplicationJSON.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data" }),
        (0, class_transformer_1.Type)(function () { return CreateGroupIfNotExistsForUsingPost200ApplicationJSONData; }),
        __metadata("design:type", CreateGroupIfNotExistsForUsingPost200ApplicationJSONData)
    ], CreateGroupIfNotExistsForUsingPost200ApplicationJSON.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPost200ApplicationJSON.prototype, "message", void 0);
    return CreateGroupIfNotExistsForUsingPost200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPost200ApplicationJSON = CreateGroupIfNotExistsForUsingPost200ApplicationJSON;
var CreateGroupIfNotExistsForUsingPOSTResponse = /** @class */ (function (_super) {
    __extends(CreateGroupIfNotExistsForUsingPOSTResponse, _super);
    function CreateGroupIfNotExistsForUsingPOSTResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateGroupIfNotExistsForUsingPost200ApplicationJSON)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "createGroupIfNotExistsForUsingPOST200ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateGroupIfNotExistsForUsingPost400ApplicationJSON)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "createGroupIfNotExistsForUsingPOST400ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateGroupIfNotExistsForUsingPost401ApplicationJSON)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "createGroupIfNotExistsForUsingPOST401ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateGroupIfNotExistsForUsingPost500ApplicationJSON)
    ], CreateGroupIfNotExistsForUsingPOSTResponse.prototype, "createGroupIfNotExistsForUsingPOST500ApplicationJSONObject", void 0);
    return CreateGroupIfNotExistsForUsingPOSTResponse;
}(utils_1.SpeakeasyBase));
exports.CreateGroupIfNotExistsForUsingPOSTResponse = CreateGroupIfNotExistsForUsingPOSTResponse;
