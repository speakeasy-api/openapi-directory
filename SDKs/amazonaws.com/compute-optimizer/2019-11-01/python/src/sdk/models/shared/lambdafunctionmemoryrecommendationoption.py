"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lambdafunctionmemoryprojectedmetric as shared_lambdafunctionmemoryprojectedmetric
from ..shared import savingsopportunity as shared_savingsopportunity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LambdaFunctionMemoryRecommendationOption:
    r"""Describes a recommendation option for an Lambda function."""
    
    memory_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memorySize'), 'exclude': lambda f: f is None }})  
    projected_utilization_metrics: Optional[list[shared_lambdafunctionmemoryprojectedmetric.LambdaFunctionMemoryProjectedMetric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectedUtilizationMetrics'), 'exclude': lambda f: f is None }})  
    rank: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rank'), 'exclude': lambda f: f is None }})  
    savings_opportunity: Optional[shared_savingsopportunity.SavingsOpportunity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('savingsOpportunity'), 'exclude': lambda f: f is None }})  
    