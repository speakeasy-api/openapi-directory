"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils

class FileDirectionEnum(str, Enum):
    r"""Whether the File was generated by Increase or by you and sent to Increase."""
    TO_INCREASE = 'to_increase'
    FROM_INCREASE = 'from_increase'

class FilePurposeEnum(str, Enum):
    r"""What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully."""
    CHECK_IMAGE_FRONT = 'check_image_front'
    CHECK_IMAGE_BACK = 'check_image_back'
    FORM_1099_INT = 'form_1099_int'
    FORM_SS_4 = 'form_ss_4'
    IDENTITY_DOCUMENT = 'identity_document'
    INCREASE_STATEMENT = 'increase_statement'
    OTHER = 'other'
    TRUST_FORMATION_DOCUMENT = 'trust_formation_document'
    DIGITAL_WALLET_ARTWORK = 'digital_wallet_artwork'
    DIGITAL_WALLET_APP_ICON = 'digital_wallet_app_icon'
    ENTITY_SUPPLEMENTAL_DOCUMENT = 'entity_supplemental_document'

class FileTypeEnum(str, Enum):
    r"""A constant representing the object's type. For this resource it will always be `file`."""
    FILE = 'file'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class File:
    r"""Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF)."""
    
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The time the File was created."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""A description of the File."""  
    direction: FileDirectionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direction') }})
    r"""Whether the File was generated by Increase or by you and sent to Increase."""  
    download_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url') }})
    r"""A URL from where the File can be downloaded at this point in time. The location of this URL may change over time."""  
    filename: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename') }})
    r"""The filename that was provided upon upload or generated by Increase."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The File's identifier."""  
    purpose: FilePurposeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purpose') }})
    r"""What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully."""  
    type: FileTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""A constant representing the object's type. For this resource it will always be `file`."""  
    