// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RiskValueReadV1ConditionalOn - Array of risk parameters that triggered this question. Only returned by /applications endpoint.
type RiskValueReadV1ConditionalOn struct {
	// Specifies the risk parameter(s) that this question is conditional on.
	RiskParameterID [][]string `json:"risk_parameter_id,omitempty"`
}

// RiskValueReadV1InputTypeEnum - Recommended input type. Only returned by `/applications` endpoint. [Full list of input types](https://www.heraldapi.com/docs/input-types).
type RiskValueReadV1InputTypeEnum string

const (
	RiskValueReadV1InputTypeEnumDate       RiskValueReadV1InputTypeEnum = "date"
	RiskValueReadV1InputTypeEnumNumber     RiskValueReadV1InputTypeEnum = "number"
	RiskValueReadV1InputTypeEnumInteger    RiskValueReadV1InputTypeEnum = "integer"
	RiskValueReadV1InputTypeEnumSelectOne  RiskValueReadV1InputTypeEnum = "select_one"
	RiskValueReadV1InputTypeEnumSelectMany RiskValueReadV1InputTypeEnum = "select_many"
	RiskValueReadV1InputTypeEnumAddress    RiskValueReadV1InputTypeEnum = "address"
	RiskValueReadV1InputTypeEnumClaimEvent RiskValueReadV1InputTypeEnum = "claim_event"
	RiskValueReadV1InputTypeEnumEmail      RiskValueReadV1InputTypeEnum = "email"
	RiskValueReadV1InputTypeEnumPhone      RiskValueReadV1InputTypeEnum = "phone"
	RiskValueReadV1InputTypeEnumYear       RiskValueReadV1InputTypeEnum = "year"
	RiskValueReadV1InputTypeEnumShortText  RiskValueReadV1InputTypeEnum = "short_text"
	RiskValueReadV1InputTypeEnumLongText   RiskValueReadV1InputTypeEnum = "long_text"
	RiskValueReadV1InputTypeEnumWebsite    RiskValueReadV1InputTypeEnum = "website"
	RiskValueReadV1InputTypeEnumFile       RiskValueReadV1InputTypeEnum = "file"
)

func (e RiskValueReadV1InputTypeEnum) ToPointer() *RiskValueReadV1InputTypeEnum {
	return &e
}

func (e *RiskValueReadV1InputTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		fallthrough
	case "number":
		fallthrough
	case "integer":
		fallthrough
	case "select_one":
		fallthrough
	case "select_many":
		fallthrough
	case "address":
		fallthrough
	case "claim_event":
		fallthrough
	case "email":
		fallthrough
	case "phone":
		fallthrough
	case "year":
		fallthrough
	case "short_text":
		fallthrough
	case "long_text":
		fallthrough
	case "website":
		fallthrough
	case "file":
		*e = RiskValueReadV1InputTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskValueReadV1InputTypeEnum: %v", v)
	}
}

type RiskValueReadV1RequiredForEnum string

const (
	RiskValueReadV1RequiredForEnumQuote RiskValueReadV1RequiredForEnum = "quote"
	RiskValueReadV1RequiredForEnumBind  RiskValueReadV1RequiredForEnum = "bind"
	RiskValueReadV1RequiredForEnumNull  RiskValueReadV1RequiredForEnum = "null"
)

func (e RiskValueReadV1RequiredForEnum) ToPointer() *RiskValueReadV1RequiredForEnum {
	return &e
}

func (e *RiskValueReadV1RequiredForEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "quote":
		fallthrough
	case "bind":
		fallthrough
	case "null":
		*e = RiskValueReadV1RequiredForEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskValueReadV1RequiredForEnum: %v", v)
	}
}

// RiskValueReadV1 - Risk values assign specific values to risk parameters.
type RiskValueReadV1 struct {
	// True if the value potentially impacts the relevance of other risk or coverage values. Only returned by `/applications` endpoint. Read more about [conditionality](https://www.heraldapi.com/docs/risk-and-coverage-parameters#affects_conditions).
	AffectsConditions *bool `json:"affects_conditions,omitempty"`
	// Array of "children" coverage values, only required for certain coverage parameters.
	//
	// Objects in the `child_risk_values` array should adhere to the `risk_values` schema. Read more about [parent/child relationships](https://www.heraldapi.com/docs/risk-and-coverage-parameters#parent_child).
	ChildRiskValues []RiskValueReadV1 `json:"child_risk_values,omitempty"`
	// Array of risk parameters that triggered this question. Only returned by /applications endpoint.
	ConditionalOn *RiskValueReadV1ConditionalOn `json:"conditional_on,omitempty"`
	// True if multiple values can be submitted with the same parameter ID. For example, since an application can have more than one location, the associated risk value will have `creates_array: true`. Read more about [`creates_array`](https://www.heraldapi.com/docs/risk-and-coverage-parameters#creates_array).
	CreatesArray *bool `json:"creates_array,omitempty"`
	// Recommended input type. Only returned by `/applications` endpoint. [Full list of input types](https://www.heraldapi.com/docs/input-types).
	InputType *RiskValueReadV1InputTypeEnum `json:"input_type,omitempty"`
	// Unique identifier to distinguish different instances of risk values that have the same `risk_parameter_id`. Only returned by `/applications` for risk and coverage values where `creates_array: true`
	// Read our [guide to using instances](https://www.heraldapi.com/docs/instance).
	Instance *string `json:"instance,omitempty"`
	// Object containing text for the parameter that you can render on a front-end.
	ParameterText *ParameterTextV1 `json:"parameter_text,omitempty"`
	// Array of product IDs the risk parameter is relevant for. Some risk parameters are relevant for all products, but some are unique to a certain product. Only returned by `/applications` endpoint.
	RelevantProducts []string `json:"relevant_products,omitempty"`
	// Specifies fow which operations this value is required.
	RequiredFor []RiskValueReadV1RequiredForEnum `json:"required_for,omitempty"`
	// The ID of the [risk parameter](https://www.heraldapi.com/docs/risk-and-coverage-parameters) for which a value is being provided. A list of all risk parameters are documented in the [appendix](https://www.heraldapi.com/tools-and-resources/the-appendix).
	RiskParameterID *string `json:"risk_parameter_id,omitempty"`
	// [JSON schema](https://json-schema.org/) describing the expected value. Only returned by `/applications` endpoint.
	Schema map[string]interface{} `json:"schema,omitempty"`
	// **Deprecated**: use the `parameter_text` object instead.
	Text *string `json:"text,omitempty"`
	// The value being assigned. Different risk parameters expect different value types. This is specified in the [appendix](https://www.heraldapi.com/tools-and-resources/the-appendix).
	Value interface{} `json:"value,omitempty"`
}
