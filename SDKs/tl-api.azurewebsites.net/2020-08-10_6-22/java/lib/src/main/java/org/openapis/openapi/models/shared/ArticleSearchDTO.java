/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ArticleSearchDTO - The ArticleSearchDTO Class.
 * Contains relevant fields of ArticleSearch DTO by masking actual Article entity's fields in application.
 *             
 */
public class ArticleSearchDTO {
    /**
     * Active Status 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeStatus")
    public Boolean activeStatus;
    public ArticleSearchDTO withActiveStatus(Boolean activeStatus) {
        this.activeStatus = activeStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyForAllGyms")
    public Boolean applyForAllGyms;
    public ArticleSearchDTO withApplyForAllGyms(Boolean applyForAllGyms) {
        this.applyForAllGyms = applyForAllGyms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("articleId")
    public Integer articleId;
    public ArticleSearchDTO withArticleId(Integer articleId) {
        this.articleId = articleId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public ArticleSearchDTO withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdUser")
    public String createdUser;
    public ArticleSearchDTO withCreatedUser(String createdUser) {
        this.createdUser = createdUser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ArticleSearchDTO withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * MeasureUnit 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measureUnit")
    public String measureUnit;
    public ArticleSearchDTO withMeasureUnit(String measureUnit) {
        this.measureUnit = measureUnit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modifiedDate")
    public OffsetDateTime modifiedDate;
    public ArticleSearchDTO withModifiedDate(OffsetDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiedUser")
    public String modifiedUser;
    public ArticleSearchDTO withModifiedUser(String modifiedUser) {
        this.modifiedUser = modifiedUser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ArticleSearchDTO withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Integer number;
    public ArticleSearchDTO withNumber(Integer number) {
        this.number = number;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public ArticleSearchDTO withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Actual Selling price of the article 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellingPrice")
    public Double sellingPrice;
    public ArticleSearchDTO withSellingPrice(Double sellingPrice) {
        this.sellingPrice = sellingPrice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String tags;
    public ArticleSearchDTO withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * total number of recode for particular search 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCount")
    public Integer totalCount;
    public ArticleSearchDTO withTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
    /**
     * article type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public ArticleSearchDTO withType(String type) {
        this.type = type;
        return this;
    }
    
}
