// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesSpaceIDFoldersIDInvoicesJSONSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesSpaceIDFoldersIDInvoicesJSONPathParams struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum string

const (
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumCustomer    PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "customer"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumProvider    PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "provider"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumBank        PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "bank"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumCashWoucher PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "cashWoucher"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumFiscal      PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "fiscal"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumInsurance   PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "insurance"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumSocial      PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "social"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumOther       PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "other"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnumPermanent   PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum = "permanent"
)

func (e *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2Accounting struct {
	AccountedOn *string                                                                   `json:"AccountedOn,omitempty"`
	Workbook    *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2AccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                                   `json:"YearMonth,omitempty"`
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2File struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
	Name             *string `json:"Name,omitempty"`
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum string

const (
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumCommercialInvoice   PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "commercial-invoice"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumCreditNote          PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "credit-note"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumAmendingInvoice     PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "amending-invoice"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumSelfBilling         PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "self-billing"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumCreditSelfBilling   PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "credit-self-billing"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumDownPaymentInvoice  PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "down-payment-invoice"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnumInformationsInvoice PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum = "informations-invoice"
)

func (e *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "commercial-invoice":
		fallthrough
	case "credit-note":
		fallthrough
	case "amending-invoice":
		fallthrough
	case "self-billing":
		fallthrough
	case "credit-self-billing":
		fallthrough
	case "down-payment-invoice":
		fallthrough
	case "informations-invoice":
		*e = PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 struct {
	Accounting  *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2Accounting `json:"Accounting,omitempty"`
	Author      *string                                                       `json:"Author,omitempty"`
	BeforeVAT   *float64                                                      `json:"BeforeVAT,omitempty"`
	Code        *string                                                       `json:"Code,omitempty"`
	Comment     *string                                                       `json:"Comment,omitempty"`
	Date        *string                                                       `json:"Date,omitempty"`
	DueDate     *string                                                       `json:"DueDate,omitempty"`
	File        PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2File        `json:"File"`
	InclVAT     *float64                                                      `json:"InclVAT,omitempty"`
	InvoiceDate *string                                                       `json:"InvoiceDate,omitempty"`
	Number      *string                                                       `json:"Number,omitempty"`
	PaymentDate *string                                                       `json:"PaymentDate,omitempty"`
	Title       string                                                        `json:"Title"`
	Type        *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2TypeEnum   `json:"Type,omitempty"`
	Vat         *float64                                                      `json:"VAT,omitempty"`
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum string

const (
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumCommercialInvoice   PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "commercial-invoice"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumCreditNote          PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "credit-note"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumAmendingInvoice     PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "amending-invoice"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumSelfBilling         PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "self-billing"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumCreditSelfBilling   PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "credit-self-billing"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumDownPaymentInvoice  PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "down-payment-invoice"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnumInformationsInvoice PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum = "informations-invoice"
)

func (e *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "commercial-invoice":
		fallthrough
	case "credit-note":
		fallthrough
	case "amending-invoice":
		fallthrough
	case "self-billing":
		fallthrough
	case "credit-self-billing":
		fallthrough
	case "down-payment-invoice":
		fallthrough
	case "informations-invoice":
		*e = PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 struct {
	BeforeVAT   *float64                                                    `json:"BeforeVAT,omitempty"`
	Date        *string                                                     `json:"Date,omitempty"`
	DocumentID  string                                                      `json:"DocumentId"`
	DueDate     *string                                                     `json:"DueDate,omitempty"`
	InclVAT     *float64                                                    `json:"InclVAT,omitempty"`
	InvoiceDate *string                                                     `json:"InvoiceDate,omitempty"`
	Number      *string                                                     `json:"Number,omitempty"`
	PaymentDate *string                                                     `json:"PaymentDate,omitempty"`
	Type        *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1TypeEnum `json:"Type,omitempty"`
	Vat         *float64                                                    `json:"VAT,omitempty"`
}

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONType string

const (
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONTypePostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONType = "post_/spaces/{spaceId}/folders/{id}/invoices_ApplicationJSON_1"
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONTypePostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONType = "post_/spaces/{spaceId}/folders/{id}/invoices_ApplicationJSON_2"
)

type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON struct {
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1
	PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2

	Type PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONType
}

func CreatePostSpacesSpaceIDFoldersIDInvoicesApplicationJSONPostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1(postSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1) PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON {
	typ := PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONTypePostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1

	return PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON{
		PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1: &postSpacesSpaceIDFoldersIDInvoicesApplicationJSON1,
		Type: typ,
	}
}

func CreatePostSpacesSpaceIDFoldersIDInvoicesApplicationJSONPostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2(postSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2) PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON {
	typ := PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONTypePostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2

	return PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON{
		PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2: &postSpacesSpaceIDFoldersIDInvoicesApplicationJSON2,
		Type: typ,
	}
}

func (u *PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 := new(PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postSpacesSpaceIDFoldersIDInvoicesApplicationJSON1); err == nil {
		u.PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 = postSpacesSpaceIDFoldersIDInvoicesApplicationJSON1
		u.Type = PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONTypePostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1
		return nil
	}

	postSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 := new(PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postSpacesSpaceIDFoldersIDInvoicesApplicationJSON2); err == nil {
		u.PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 = postSpacesSpaceIDFoldersIDInvoicesApplicationJSON2
		u.Type = PostSpacesSpaceIDFoldersIDInvoicesApplicationJSONTypePostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1 != nil {
		return json.Marshal(u.PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON1)
	}

	if u.PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2 != nil {
		return json.Marshal(u.PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON2)
	}

	return nil, nil
}

type PostSpacesSpaceIDFoldersIDInvoicesJSONRequest struct {
	PathParams PostSpacesSpaceIDFoldersIDInvoicesJSONPathParams
	// Invoice to add (either DocumentId, InvoiceDate either (File,Name,Content64Encoded,Title,InvoiceDate) is mandatory)
	Request  PostSpacesSpaceIDFoldersIDInvoicesApplicationJSON `request:"mediaType=application/json"`
	Security PostSpacesSpaceIDFoldersIDInvoicesJSONSecurity
}

// PostSpacesSpaceIDFoldersIDInvoicesJSON201ApplicationJSON - Id of invoice created
type PostSpacesSpaceIDFoldersIDInvoicesJSON201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDFoldersIDInvoicesJSONResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of invoice created
	PostSpacesSpaceIDFoldersIDInvoicesJSON201ApplicationJSONObject *PostSpacesSpaceIDFoldersIDInvoicesJSON201ApplicationJSON
}
