"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import blueinstanceterminationoption as shared_blueinstanceterminationoption
from ..shared import deploymentreadyoption as shared_deploymentreadyoption
from ..shared import greenfleetprovisioningoption as shared_greenfleetprovisioningoption
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BlueGreenDeploymentConfiguration:
    r"""Information about blue/green deployment options for a deployment group."""
    
    deployment_ready_option: Optional[shared_deploymentreadyoption.DeploymentReadyOption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deploymentReadyOption'), 'exclude': lambda f: f is None }})  
    green_fleet_provisioning_option: Optional[shared_greenfleetprovisioningoption.GreenFleetProvisioningOption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('greenFleetProvisioningOption'), 'exclude': lambda f: f is None }})  
    terminate_blue_instances_on_deployment_success: Optional[shared_blueinstanceterminationoption.BlueInstanceTerminationOption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('terminateBlueInstancesOnDeploymentSuccess'), 'exclude': lambda f: f is None }})  
    