<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetTraceSummariesRequestBody
{
    /**
     * The end of the time frame for which to retrieve traces.
     * 
     * @var \DateTime $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $endTime;
    
    /**
     * Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.
     * 
     * @var ?string $filterExpression
     */
	#[\JMS\Serializer\Annotation\SerializedName('FilterExpression')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filterExpression = null;
    
    /**
     * Specify the pagination token returned by a previous request to retrieve the next page of results.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('NextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * Set to <code>true</code> to get summaries for only a subset of available traces.
     * 
     * @var ?bool $sampling
     */
	#[\JMS\Serializer\Annotation\SerializedName('Sampling')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sampling = null;
    
    /**
     * The name and value of a sampling rule to apply to a trace summary.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetTraceSummariesRequestBodySamplingStrategy $samplingStrategy
     */
	#[\JMS\Serializer\Annotation\SerializedName('SamplingStrategy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetTraceSummariesRequestBodySamplingStrategy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetTraceSummariesRequestBodySamplingStrategy $samplingStrategy = null;
    
    /**
     * The start of the time frame for which to retrieve traces.
     * 
     * @var \DateTime $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('StartTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $startTime;
    
    /**
     * A parameter to indicate whether to query trace summaries by TraceId or Event time.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetTraceSummariesRequestBodyTimeRangeTypeEnum $timeRangeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('TimeRangeType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetTraceSummariesRequestBodyTimeRangeTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetTraceSummariesRequestBodyTimeRangeTypeEnum $timeRangeType = null;
    
	public function __construct()
	{
		$this->endTime = new \DateTime();
		$this->filterExpression = null;
		$this->nextToken = null;
		$this->sampling = null;
		$this->samplingStrategy = null;
		$this->startTime = new \DateTime();
		$this->timeRangeType = null;
	}
}
