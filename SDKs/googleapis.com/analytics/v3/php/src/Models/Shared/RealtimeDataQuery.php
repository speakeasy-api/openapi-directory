<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RealtimeDataQuery - Real time data request query parameters.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RealtimeDataQuery
{
    /**
     * List of real time dimensions.
     * 
     * @var ?string $dimensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensions')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dimensions = null;
    
    /**
     * Comma-separated list of dimension or metric filters.
     * 
     * @var ?string $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filters = null;
    
    /**
     * Unique table ID.
     * 
     * @var ?string $ids
     */
	#[\JMS\Serializer\Annotation\SerializedName('ids')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ids = null;
    
    /**
     * Maximum results per page.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('max-results')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * List of real time metrics.
     * 
     * @var ?array<string> $metrics
     */
	#[\JMS\Serializer\Annotation\SerializedName('metrics')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metrics = null;
    
    /**
     * List of dimensions or metrics based on which real time data is sorted.
     * 
     * @var ?array<string> $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sort = null;
    
	public function __construct()
	{
		$this->dimensions = null;
		$this->filters = null;
		$this->ids = null;
		$this->maxResults = null;
		$this->metrics = null;
		$this->sort = null;
	}
}
