/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Default visibility for new posts. Equivalent to [Source#privacy](https://docs.joinmastodon.org/entities/source/#privacy).
 */
export enum PreferencesPostingDefaultVisibilityEnum {
  Public = "public",
  Unlisted = "unlisted",
  Private = "private",
  Direct = "direct",
}

/**
 * Whether media attachments should be automatically displayed or blurred/hidden.
 */
export enum PreferencesReadingExpandMediaEnum {
  Default = "default",
  ShowAll = "show_all",
  HideAll = "hide_all",
}

/**
 * Represents a user's preferences.
 *
 * @see {@link https://docs.joinmastodon.org/entities/preferences/}
 */
export class Preferences extends SpeakeasyBase {
  /**
   * Default language for new posts. Equivalent to [Source#language](https://docs.joinmastodon.org/entities/source/#language). ISO 639-1 language two-letter code, or null
   */
  @SpeakeasyMetadata()
  @Expose({ name: "posting:default:language" })
  postingDefaultLanguage?: string;

  /**
   * Default sensitivity flag for new posts. Equivalent to [Source#sensitive](https://docs.joinmastodon.org/entities/source/#sensitive).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "posting:default:sensitive" })
  postingDefaultSensitive?: boolean;

  /**
   * Default visibility for new posts. Equivalent to [Source#privacy](https://docs.joinmastodon.org/entities/source/#privacy).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "posting:default:visibility" })
  postingDefaultVisibility?: PreferencesPostingDefaultVisibilityEnum;

  /**
   * Whether media attachments should be automatically displayed or blurred/hidden.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reading:expand:media" })
  readingExpandMedia?: PreferencesReadingExpandMediaEnum;

  /**
   * Whether CWs should be expanded by default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reading:expand:spoilers" })
  readingExpandSpoilers?: boolean;
}
