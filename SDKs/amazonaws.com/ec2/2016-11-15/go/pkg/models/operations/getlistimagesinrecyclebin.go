// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListImagesInRecycleBinActionEnum
type GETListImagesInRecycleBinActionEnum string

const (
	GETListImagesInRecycleBinActionEnumListImagesInRecycleBin GETListImagesInRecycleBinActionEnum = "ListImagesInRecycleBin"
)

func (e *GETListImagesInRecycleBinActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListImagesInRecycleBin":
		*e = GETListImagesInRecycleBinActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListImagesInRecycleBinActionEnum: %s", s)
	}
}

// GETListImagesInRecycleBinVersionEnum
type GETListImagesInRecycleBinVersionEnum string

const (
	GETListImagesInRecycleBinVersionEnumTwoThousandAndSixteen1115 GETListImagesInRecycleBinVersionEnum = "2016-11-15"
)

func (e *GETListImagesInRecycleBinVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETListImagesInRecycleBinVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListImagesInRecycleBinVersionEnum: %s", s)
	}
}

type GETListImagesInRecycleBinRequest struct {
	Action GETListImagesInRecycleBinActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The IDs of the AMIs to list. Omit this parameter to list all of the AMIs that are in the Recycle Bin. You can specify up to 20 IDs in a single request.
	ImageID []string `queryParam:"style=form,explode=true,name=ImageId"`
	// The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// The token returned from a previous paginated request. Pagination continues from the end of the items returned by the previous request.
	NextToken         *string                              `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETListImagesInRecycleBinVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListImagesInRecycleBinResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
