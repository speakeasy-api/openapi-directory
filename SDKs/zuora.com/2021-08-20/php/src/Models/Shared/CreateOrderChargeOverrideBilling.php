<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateOrderChargeOverrideBilling - Billing information about the charge.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateOrderChargeOverrideBilling
{
    /**
     * Day of the month that each billing period begins on. Only applicable if the value of the `billCycleType` field is `SpecificDayofMonth`.
     * 
     * 
     * 
     * @var ?int $billCycleDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('billCycleDay')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $billCycleDay = null;
    
    /**
     * Specifies how Zuora determines the day that each billing period begins on.
     * 
     * 
     *   * `DefaultFromCustomer` - Each billing period begins on the bill cycle day of the account that owns the subscription.
     *   * `SpecificDayofMonth` - Use the `billCycleDay` field to specify the day of the month that each billing period begins on.
     *   * `SubscriptionStartDay` - Each billing period begins on the same day of the month as the start date of the subscription.
     *   * `ChargeTriggerDay` - Each billing period begins on the same day of the month as the date when the charge becomes active.
     *   * `SpecificDayofWeek` - Use the `weeklyBillCycleDay` field to specify the day of the week that each billing period begins on.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillCycleTypeEnum $billCycleType
     */
	#[\JMS\Serializer\Annotation\SerializedName('billCycleType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillCycleTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderChargeOverrideBillingBillCycleTypeEnum $billCycleType = null;
    
    /**
     * Billing frequency of the charge. The value of this field controls the duration of each billing period.
     * 
     * 
     * If the value of this field is `Specific_Months` or `Specific_Weeks`, use the `specificBillingPeriod` field to specify the duration of each billing period.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillingPeriodEnum $billingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingPeriod')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillingPeriodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderChargeOverrideBillingBillingPeriodEnum $billingPeriod = null;
    
    /**
     * Specifies how Zuora determines when to start new billing periods. You can use this field to align the billing periods of different charges.
     * 
     * 
     * * `AlignToCharge` - Zuora starts a new billing period on the first billing day that falls on or after the date when the charge becomes active.
     * * `AlignToSubscriptionStart` - Zuora starts a new billing period on the first billing day that falls on or after the start date of the subscription.
     * * `AlignToTermStart` - For each term of the subscription, Zuora starts a new billing period on the first billing day that falls on or after the start date of the term.
     * 
     * See the `billCycleType` field for information about how Zuora determines the billing day.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillingPeriodAlignmentEnum $billingPeriodAlignment
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingPeriodAlignment')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillingPeriodAlignmentEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderChargeOverrideBillingBillingPeriodAlignmentEnum $billingPeriodAlignment = null;
    
    /**
     * Specifies whether to invoice for a billing period on the first day of the billing period (billing in advance) or the first day of the next billing period (billing in arrears).
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillingTimingEnum $billingTiming
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingTiming')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingBillingTimingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderChargeOverrideBillingBillingTimingEnum $billingTiming = null;
    
    /**
     * Duration of each billing period in months or weeks, depending on the value of the `billingPeriod` field. Only applicable if the value of the `billingPeriod` field is `Specific_Months` or `Specific_Weeks`.
     * 
     * 
     * 
     * @var ?int $specificBillingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('specificBillingPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $specificBillingPeriod = null;
    
    /**
     * Day of the week that each billing period begins on. Only applicable if the value of the `billCycleType` field is `SpecificDayofWeek`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingWeeklyBillCycleDayEnum $weeklyBillCycleDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('weeklyBillCycleDay')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateOrderChargeOverrideBillingWeeklyBillCycleDayEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderChargeOverrideBillingWeeklyBillCycleDayEnum $weeklyBillCycleDay = null;
    
	public function __construct()
	{
		$this->billCycleDay = null;
		$this->billCycleType = null;
		$this->billingPeriod = null;
		$this->billingPeriodAlignment = null;
		$this->billingTiming = null;
		$this->specificBillingPeriod = null;
		$this->weeklyBillCycleDay = null;
	}
}
