/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QuipConfiguration - Provides the configuration information to connect to Quip as your data source.
 */
public class QuipConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttachmentFieldMappings")
    public DataSourceToIndexFieldMapping[] attachmentFieldMappings;

    public QuipConfiguration withAttachmentFieldMappings(DataSourceToIndexFieldMapping[] attachmentFieldMappings) {
        this.attachmentFieldMappings = attachmentFieldMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrawlAttachments")
    public Boolean crawlAttachments;

    public QuipConfiguration withCrawlAttachments(Boolean crawlAttachments) {
        this.crawlAttachments = crawlAttachments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrawlChatRooms")
    public Boolean crawlChatRooms;

    public QuipConfiguration withCrawlChatRooms(Boolean crawlChatRooms) {
        this.crawlChatRooms = crawlChatRooms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrawlFileComments")
    public Boolean crawlFileComments;

    public QuipConfiguration withCrawlFileComments(Boolean crawlFileComments) {
        this.crawlFileComments = crawlFileComments;
        return this;
    }
    
    @JsonProperty("Domain")
    public String domain;

    public QuipConfiguration withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExclusionPatterns")
    public String[] exclusionPatterns;

    public QuipConfiguration withExclusionPatterns(String[] exclusionPatterns) {
        this.exclusionPatterns = exclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FolderIds")
    public String[] folderIds;

    public QuipConfiguration withFolderIds(String[] folderIds) {
        this.folderIds = folderIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InclusionPatterns")
    public String[] inclusionPatterns;

    public QuipConfiguration withInclusionPatterns(String[] inclusionPatterns) {
        this.inclusionPatterns = inclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MessageFieldMappings")
    public DataSourceToIndexFieldMapping[] messageFieldMappings;

    public QuipConfiguration withMessageFieldMappings(DataSourceToIndexFieldMapping[] messageFieldMappings) {
        this.messageFieldMappings = messageFieldMappings;
        return this;
    }
    
    @JsonProperty("SecretArn")
    public String secretArn;

    public QuipConfiguration withSecretArn(String secretArn) {
        this.secretArn = secretArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreadFieldMappings")
    public DataSourceToIndexFieldMapping[] threadFieldMappings;

    public QuipConfiguration withThreadFieldMappings(DataSourceToIndexFieldMapping[] threadFieldMappings) {
        this.threadFieldMappings = threadFieldMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfiguration")
    public DataSourceVpcConfiguration vpcConfiguration;

    public QuipConfiguration withVpcConfiguration(DataSourceVpcConfiguration vpcConfiguration) {
        this.vpcConfiguration = vpcConfiguration;
        return this;
    }
    
    public QuipConfiguration(@JsonProperty("Domain") String domain, @JsonProperty("SecretArn") String secretArn) {
        this.domain = domain;
        this.secretArn = secretArn;
  }
}
