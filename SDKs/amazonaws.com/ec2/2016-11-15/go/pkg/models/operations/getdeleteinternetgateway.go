// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteInternetGatewayActionEnum
type GETDeleteInternetGatewayActionEnum string

const (
	GETDeleteInternetGatewayActionEnumDeleteInternetGateway GETDeleteInternetGatewayActionEnum = "DeleteInternetGateway"
)

func (e *GETDeleteInternetGatewayActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteInternetGateway":
		*e = GETDeleteInternetGatewayActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteInternetGatewayActionEnum: %s", s)
	}
}

// GETDeleteInternetGatewayVersionEnum
type GETDeleteInternetGatewayVersionEnum string

const (
	GETDeleteInternetGatewayVersionEnumTwoThousandAndSixteen1115 GETDeleteInternetGatewayVersionEnum = "2016-11-15"
)

func (e *GETDeleteInternetGatewayVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteInternetGatewayVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteInternetGatewayVersionEnum: %s", s)
	}
}

type GETDeleteInternetGatewayRequest struct {
	Action GETDeleteInternetGatewayActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the internet gateway.
	InternetGatewayID string                              `queryParam:"style=form,explode=true,name=InternetGatewayId"`
	Version           GETDeleteInternetGatewayVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteInternetGatewayResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
