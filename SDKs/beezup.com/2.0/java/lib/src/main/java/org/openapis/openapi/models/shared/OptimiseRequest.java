/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * OptimiseRequest - Contains common filter parameters
 */
public class OptimiseRequest {
    @JsonProperty("advancedFilters")
    public ReportAdvancedFilters advancedFilters;

    public OptimiseRequest withAdvancedFilters(ReportAdvancedFilters advancedFilters) {
        this.advancedFilters = advancedFilters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analyticsProductColumnFilters")
    public AnalyticsProductColumnFilters analyticsProductColumnFilters;

    public OptimiseRequest withAnalyticsProductColumnFilters(AnalyticsProductColumnFilters analyticsProductColumnFilters) {
        this.analyticsProductColumnFilters = analyticsProductColumnFilters;
        return this;
    }
    
    /**
     * The begin date period you want to get the report. It's required only in case of custom period type !
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("beginPeriodUtcDate")
    public OffsetDateTime beginPeriodUtcDate;

    public OptimiseRequest withBeginPeriodUtcDate(OffsetDateTime beginPeriodUtcDate) {
        this.beginPeriodUtcDate = beginPeriodUtcDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryFilter")
    public BeezUPCommonCatalogCategoryFilter categoryFilter;

    public OptimiseRequest withCategoryFilter(BeezUPCommonCatalogCategoryFilter categoryFilter) {
        this.categoryFilter = categoryFilter;
        return this;
    }
    
    /**
     * The channel identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channelId")
    public String channelId;

    public OptimiseRequest withChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }
    
    /**
     * The end date period you want to get the report. It's required only in case of custom period type !
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endPeriodUtcDate")
    public OffsetDateTime endPeriodUtcDate;

    public OptimiseRequest withEndPeriodUtcDate(OffsetDateTime endPeriodUtcDate) {
        this.endPeriodUtcDate = endPeriodUtcDate;
        return this;
    }
    
    /**
     * Indicate on which indicator or value you want to make your formula
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderBy")
    public PerformanceIndicatorTypeEnum orderBy;

    public OptimiseRequest withOrderBy(PerformanceIndicatorTypeEnum orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    /**
     * Indicate which direction to order results by
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderByDirection")
    public OrderByDirectionEnum orderByDirection;

    public OptimiseRequest withOrderByDirection(OrderByDirectionEnum orderByDirection) {
        this.orderByDirection = orderByDirection;
        return this;
    }
    
    /**
     * Indicates the page number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageNumber")
    public Integer pageNumber;

    public OptimiseRequest withPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    /**
     * Indicate the item count per page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Integer pageSize;

    public OptimiseRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("performanceIndicatorFilters")
    public PerformanceIndicatorFilter[] performanceIndicatorFilters;

    public OptimiseRequest withPerformanceIndicatorFilters(PerformanceIndicatorFilter[] performanceIndicatorFilters) {
        this.performanceIndicatorFilters = performanceIndicatorFilters;
        return this;
    }
    
    /**
     * Indicates the period type we want use for the report filter
     */
    @JsonProperty("periodType")
    public ReportFilterPeriodTypeEnum periodType;

    public OptimiseRequest withPeriodType(ReportFilterPeriodTypeEnum periodType) {
        this.periodType = periodType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productColumnsToDisplay")
    public String[] productColumnsToDisplay;

    public OptimiseRequest withProductColumnsToDisplay(String[] productColumnsToDisplay) {
        this.productColumnsToDisplay = productColumnsToDisplay;
        return this;
    }
    
    /**
     * You can filter on the product state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productState")
    public ProductStateFilterEnum productState;

    public OptimiseRequest withProductState(ProductStateFilterEnum productState) {
        this.productState = productState;
        return this;
    }
    
    /**
     * The report type
     */
    @JsonProperty("reportType")
    public ReportTypeEnum reportType;

    public OptimiseRequest withReportType(ReportTypeEnum reportType) {
        this.reportType = reportType;
        return this;
    }
    
    public OptimiseRequest(@JsonProperty("advancedFilters") ReportAdvancedFilters advancedFilters, @JsonProperty("beginPeriodUtcDate") OffsetDateTime beginPeriodUtcDate, @JsonProperty("endPeriodUtcDate") OffsetDateTime endPeriodUtcDate, @JsonProperty("periodType") ReportFilterPeriodTypeEnum periodType, @JsonProperty("reportType") ReportTypeEnum reportType) {
        this.advancedFilters = advancedFilters;
        this.beginPeriodUtcDate = beginPeriodUtcDate;
        this.endPeriodUtcDate = endPeriodUtcDate;
        this.periodType = periodType;
        this.reportType = reportType;
  }
}
