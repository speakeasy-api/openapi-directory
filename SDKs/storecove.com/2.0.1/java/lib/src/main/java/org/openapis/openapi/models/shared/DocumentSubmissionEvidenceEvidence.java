/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DocumentSubmissionEvidenceEvidence {
    /**
     * The unique message id used in the OpenPeppol SBDH.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_id")public String messageId;
    public DocumentSubmissionEvidenceEvidence withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * An identification of the OpenPeppol accesspoint that the invoice was sent to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiving_accesspoint")public String receivingAccesspoint;
    public DocumentSubmissionEvidenceEvidence withReceivingAccesspoint(String receivingAccesspoint) {
        this.receivingAccesspoint = receivingAccesspoint;
        return this;
    }
    
    /**
     * The IP address of the sending SMTP server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remote_mta_ip")public String remoteMtaIp;
    public DocumentSubmissionEvidenceEvidence withRemoteMtaIp(String remoteMtaIp) {
        this.remoteMtaIp = remoteMtaIp;
        return this;
    }
    
    /**
     * An identification for the sending SMTP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reporting_mta")public String reportingMta;
    public DocumentSubmissionEvidenceEvidence withReportingMta(String reportingMta) {
        this.reportingMta = reportingMta;
        return this;
    }
    
    /**
     * The response of the receiving SMTP server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smtp_response")public String smtpResponse;
    public DocumentSubmissionEvidenceEvidence withSmtpResponse(String smtpResponse) {
        this.smtpResponse = smtpResponse;
        return this;
    }
    
    /**
     * The timestamp of the delivery to the receiving SMTP server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")public String timestamp;
    public DocumentSubmissionEvidenceEvidence withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * The unique id for this OpenPeppol transmission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transmission_id")public String transmissionId;
    public DocumentSubmissionEvidenceEvidence withTransmissionId(String transmissionId) {
        this.transmissionId = transmissionId;
        return this;
    }
    
    /**
     * The XML evidence for the transmission. This is the XML returned by the receiving OpenPeppol accesspoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("xml")public String xml;
    public DocumentSubmissionEvidenceEvidence withXml(String xml) {
        this.xml = xml;
        return this;
    }
    
}
