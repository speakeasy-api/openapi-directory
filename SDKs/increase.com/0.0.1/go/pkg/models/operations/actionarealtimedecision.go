// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ActionARealTimeDecisionRequest struct {
	ActionARealTimeDecisionParameters shared.ActionARealTimeDecisionParameters `request:"mediaType=application/json"`
	RealTimeDecisionID                string                                   `pathParam:"style=simple,explode=false,name=real_time_decision_id"`
}

type ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum = 429
)

func (e ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON13TypeEnumRateLimitedError ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON13 struct {
	Detail     string                                                    `json:"detail"`
	RetryAfter *int64                                                    `json:"retry_after,omitempty"`
	Status     ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                    `json:"title"`
	Type       ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON12StatusEnumFourHundredAndThree ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum = 403
)

func (e ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON12TypeEnumPrivateFeatureError ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON12 struct {
	Detail string                                                    `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON11StatusEnumFourHundredAndFour ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum = 404
)

func (e ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON11TypeEnumObjectNotFoundError ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON11 struct {
	Detail string                                                    `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON10StatusEnumFourHundred ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum = 400
)

func (e ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON10TypeEnumMalformedRequestError ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON10 struct {
	Detail string                                                    `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON9StatusEnumFourHundred ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum = 400
)

func (e ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON9TypeEnumInvalidParametersError ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                 `json:"errors"`
	Status ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON8StatusEnumFourHundredAndNine ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum = 409
)

func (e ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON8TypeEnumInvalidOperationError ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON8 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON7StatusEnumFourHundredAndOne ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum = 401
)

func (e ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON7 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON6StatusEnumFiveHundred ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum = 500
)

func (e ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON6TypeEnumInternalServerError ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON6 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON5StatusEnumFourHundredAndThree ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum = 403
)

func (e ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON5 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum = 422
)

func (e ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON4 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON3StatusEnumFourHundredAndNine ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum = 409
)

func (e ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON3TypeEnumIdempotencyConflictError ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON3 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON2StatusEnumFourHundredAndThree ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum = 403
)

func (e ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON2 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum int64

const (
	ActionARealTimeDecisionDefaultApplicationJSON1StatusEnumFourHundredAndFour ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum = 404
)

func (e ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum) ToPointer() *ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON1 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Real-Time Decision
	RealTimeDecision *shared.RealTimeDecision
}
