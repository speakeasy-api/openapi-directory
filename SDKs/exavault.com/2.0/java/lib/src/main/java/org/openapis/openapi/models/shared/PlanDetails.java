/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlanDetails {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiKeys")
    public Long apiKeys;
    public PlanDetails withApiKeys(Long apiKeys) {
        this.apiKeys = apiKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiTokens")
    public Long apiTokens;
    public PlanDetails withApiTokens(Long apiTokens) {
        this.apiTokens = apiTokens;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colorSchema")
    public Boolean colorSchema;
    public PlanDetails withColorSchema(Boolean colorSchema) {
        this.colorSchema = colorSchema;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDomain")
    public Boolean customDomain;
    public PlanDetails withCustomDomain(Boolean customDomain) {
        this.customDomain = customDomain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customName")
    public Boolean customName;
    public PlanDetails withCustomName(Boolean customName) {
        this.customName = customName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directLinks")
    public Boolean directLinks;
    public PlanDetails withDirectLinks(Boolean directLinks) {
        this.directLinks = directLinks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipWhitelist")
    public Boolean ipWhitelist;
    public PlanDetails withIpWhitelist(Boolean ipWhitelist) {
        this.ipWhitelist = ipWhitelist;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sharingOptions")
    public String[] sharingOptions;
    public PlanDetails withSharingOptions(String[] sharingOptions) {
        this.sharingOptions = sharingOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sshKeys")
    public Long sshKeys;
    public PlanDetails withSshKeys(Long sshKeys) {
        this.sshKeys = sshKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageAddOn")
    public Long storageAddOn;
    public PlanDetails withStorageAddOn(Long storageAddOn) {
        this.storageAddOn = storageAddOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unlimitedUsers")
    public Boolean unlimitedUsers;
    public PlanDetails withUnlimitedUsers(Boolean unlimitedUsers) {
        this.unlimitedUsers = unlimitedUsers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userExpiration")
    public Boolean userExpiration;
    public PlanDetails withUserExpiration(Boolean userExpiration) {
        this.userExpiration = userExpiration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userImport")
    public Boolean userImport;
    public PlanDetails withUserImport(Boolean userImport) {
        this.userImport = userImport;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhookOptions")
    public PlanDetailsWebhookOptions webhookOptions;
    public PlanDetails withWebhookOptions(PlanDetailsWebhookOptions webhookOptions) {
        this.webhookOptions = webhookOptions;
        return this;
    }
    
}
