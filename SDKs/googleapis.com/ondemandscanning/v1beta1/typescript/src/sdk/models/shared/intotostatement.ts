/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InTotoProvenance } from "./intotoprovenance";
import { SlsaProvenance } from "./slsaprovenance";
import { SlsaProvenanceZeroTwo } from "./slsaprovenancezerotwo";
import { Subject } from "./subject";
import { Expose, Type } from "class-transformer";

/**
 * Spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement The serialized InTotoStatement will be stored as Envelope.payload. Envelope.payloadType is always "application/vnd.in-toto+json".
 */
export class InTotoStatement extends SpeakeasyBase {
  /**
   * Always `https://in-toto.io/Statement/v0.1`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_type" })
  type?: string;

  /**
   * `https://slsa.dev/provenance/v0.1` for SlsaProvenance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predicateType" })
  predicateType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "provenance" })
  @Type(() => InTotoProvenance)
  provenance?: InTotoProvenance;

  @SpeakeasyMetadata()
  @Expose({ name: "slsaProvenance" })
  @Type(() => SlsaProvenance)
  slsaProvenance?: SlsaProvenance;

  /**
   * See full explanation of fields at slsa.dev/provenance/v0.2.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slsaProvenanceZeroTwo" })
  @Type(() => SlsaProvenanceZeroTwo)
  slsaProvenanceZeroTwo?: SlsaProvenanceZeroTwo;

  @SpeakeasyMetadata({ elemType: Subject })
  @Expose({ name: "subject" })
  @Type(() => Subject)
  subject?: Subject[];
}
