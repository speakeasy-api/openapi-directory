/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
 */
export class Expr extends SpeakeasyBase {
  /**
   * An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expression" })
  expression?: string;

  /**
   * An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
