// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type RegistrantInput struct {
	// Address of the registrant.
	Address *string `json:"address,omitempty"`
	// City of the registrant.
	City *string `json:"city,omitempty"`
	// Company name of the registrant.<br />
	// The registrant is a company if not empty, otherwise the registrant is an individual when validating extra fields.
	CompanyName *string `json:"company_name,omitempty"`
	// Country code of the registrant.
	// Syntax: 'BE', 'NL, 'FR', ...
	CountryCode *string `json:"country_code,omitempty"`
	// Email of the registrant.
	Email *string `json:"email,omitempty"`
	// Enterprise number of the registrant.<br />
	// Syntax: 'BE0123456789'
	EnterpriseNumber *string `json:"enterprise_number,omitempty"`
	// List of registrant extra fields for the domain name.
	// <table><tr><th>Extension</th><th>Registrant specifics</th><th>Required extra field(s)</th></tr><tr><td>.dk</td><td>is a company</td><td>CompanyNumber</td></tr><tr><td>.es</td><td>is a company</td><td>CompanyNumber</td></tr><tr><td>.es</td><td>is an individual</td><td>PassportNumber</td></tr><tr><td>.fr</td><td>is a company</td><td>CompanyNumber</td></tr><tr><td>.it</td><td>is an individual and has country code 'IT'</td><td>CodiceFiscal</td></tr><tr><td>.it</td><td>is an individual and has not country code 'IT'</td><td>PassportNumber</td></tr><tr><td>.nu</td><td>is a company</td><td>CompanyNumber</td></tr><tr><td>.nu</td><td>is an individual</td><td>PassportNumber</td></tr><tr><td>.se</td><td>is a company</td><td>CompanyNumber</td></tr><tr><td>.se</td><td>is an individual</td><td>PassportNumber</td></tr></table>
	ExtraFields []ExtraField `json:"extra_fields,omitempty"`
	// Fax of the registrant.
	// Syntax: '+32.123456789'
	Fax *string `json:"fax,omitempty"`
	// First name of the registrant.
	FirstName *string `json:"first_name,omitempty"`
	// Language code of the registrant.
	// Syntax: 'nl', 'fr', 'en', 'de', ...
	LanguageCode *string `json:"language_code,omitempty"`
	// Last name of the registrant.
	LastName *string `json:"last_name,omitempty"`
	// Phone of the registrant.<br />
	// Syntax: '+32.123456789'
	Phone *string `json:"phone,omitempty"`
	// Postal code of the registrant.
	PostalCode *string `json:"postal_code,omitempty"`
}
