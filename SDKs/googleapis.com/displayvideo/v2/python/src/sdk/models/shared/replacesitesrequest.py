"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import site as shared_site
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplaceSitesRequestInput:
    r"""Request message for SiteService.ReplaceSites."""
    
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""The ID of the advertiser that owns the parent channel."""  
    new_sites: Optional[list[shared_site.SiteInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newSites'), 'exclude': lambda f: f is None }})
    r"""The sites that will replace the existing sites assigned to the channel, specified as a list of Sites."""  
    partner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partnerId'), 'exclude': lambda f: f is None }})
    r"""The ID of the partner that owns the parent channel."""  
    