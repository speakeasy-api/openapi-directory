/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateVirtualServiceRequestBody {
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public CreateVirtualServiceRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * An object that represents the specification of a virtual service.
     */
    @JsonProperty("spec")
    public CreateVirtualServiceRequestBodySpec spec;
    public CreateVirtualServiceRequestBody withSpec(CreateVirtualServiceRequestBodySpec spec) {
        this.spec = spec;
        return this;
    }
    
    /**
     * Optional metadata that you can apply to the virtual service to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public org.openapis.openapi.models.shared.TagRef[] tags;
    public CreateVirtualServiceRequestBody withTags(org.openapis.openapi.models.shared.TagRef[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The name to use for the virtual service.
     */
    @JsonProperty("virtualServiceName")
    public String virtualServiceName;
    public CreateVirtualServiceRequestBody withVirtualServiceName(String virtualServiceName) {
        this.virtualServiceName = virtualServiceName;
        return this;
    }
    
}
