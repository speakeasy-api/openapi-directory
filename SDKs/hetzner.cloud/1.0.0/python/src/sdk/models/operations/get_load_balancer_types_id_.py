"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetLoadBalancerTypesIDRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of Load Balancer type"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLoadBalancerTypesID200ApplicationJSONLoadBalancerTypePricesPriceHourly:
    r"""Hourly costs for a Resource in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLoadBalancerTypesID200ApplicationJSONLoadBalancerTypePricesPriceMonthly:
    r"""Monthly costs for a Resource in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLoadBalancerTypesID200ApplicationJSONLoadBalancerTypePrices:
    
    location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""Name of the Location the price is for"""  
    price_hourly: GetLoadBalancerTypesID200ApplicationJSONLoadBalancerTypePricesPriceHourly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_hourly') }})
    r"""Hourly costs for a Resource in this Location"""  
    price_monthly: GetLoadBalancerTypesID200ApplicationJSONLoadBalancerTypePricesPriceMonthly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_monthly') }})
    r"""Monthly costs for a Resource in this Location"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLoadBalancerTypesID200ApplicationJSONLoadBalancerType:
    
    deprecated: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deprecated') }})
    r"""Point in time when the Load Balancer type is deprecated (in ISO-8601 format)"""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""Description of the Load Balancer type"""  
    id: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the Load Balancer type"""  
    max_assigned_certificates: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_assigned_certificates') }})
    r"""Number of SSL Certificates that can be assigned to a single Load Balancer"""  
    max_connections: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_connections') }})
    r"""Number of maximum simultaneous open connections"""  
    max_services: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_services') }})
    r"""Number of services a Load Balancer of this type can have"""  
    max_targets: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_targets') }})
    r"""Number of targets a single Load Balancer can have"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Unique identifier of the Load Balancer type"""  
    prices: list[GetLoadBalancerTypesID200ApplicationJSONLoadBalancerTypePrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices') }})
    r"""Prices in different network zones"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLoadBalancerTypesID200ApplicationJSON:
    r"""The `load_balancer_type` key in the reply contains a Load Balancer type object with this structure"""
    
    load_balancer_type: Optional[GetLoadBalancerTypesID200ApplicationJSONLoadBalancerType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('load_balancer_type'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetLoadBalancerTypesIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_load_balancer_types_id_200_application_json_object: Optional[GetLoadBalancerTypesID200ApplicationJSON] = dataclasses.field(default=None)
    r"""The `load_balancer_type` key in the reply contains a Load Balancer type object with this structure"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    