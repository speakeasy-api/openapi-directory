// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateNetworkInterfaceResultNetworkInterfaceAssociation - The association information for an Elastic IP address (IPv4) associated with the network interface.
type CreateNetworkInterfaceResultNetworkInterfaceAssociation struct {
	AllocationID    *string
	AssociationID   *string
	CarrierIP       *string
	CustomerOwnedIP *string
	IPOwnerID       *string
	PublicDNSName   *string
	PublicIP        *string
}

// CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUDPSpecification - ENA Express configuration for UDP network traffic.
type CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUDPSpecification struct {
	EnaSrdUDPEnabled *bool
}

// CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification - Configures ENA Express for the network interface that this action attaches to the instance.
type CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification struct {
	EnaSrdEnabled          *bool
	EnaSrdUDPSpecification *CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUDPSpecification
}

// CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum - The attachment state.
type CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum string

const (
	CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnumAttaching CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = "attaching"
	CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnumAttached  CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = "attached"
	CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnumDetaching CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = "detaching"
	CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnumDetached  CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = "detached"
)

func (e *CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "attaching":
		fallthrough
	case "attached":
		fallthrough
	case "detaching":
		fallthrough
	case "detached":
		*e = CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum: %s", s)
	}
}

// CreateNetworkInterfaceResultNetworkInterfaceAttachment - The network interface attachment.
type CreateNetworkInterfaceResultNetworkInterfaceAttachment struct {
	AttachTime          *time.Time
	AttachmentID        *string
	DeleteOnTermination *bool
	DeviceIndex         *int64
	EnaSrdSpecification *CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification
	InstanceID          *string
	InstanceOwnerID     *string
	NetworkCardIndex    *int64
	Status              *CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum
}

// CreateNetworkInterfaceResultNetworkInterfaceGroups - Describes a security group.
type CreateNetworkInterfaceResultNetworkInterfaceGroups struct {
	GroupID   *string
	GroupName *string
}

// CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum - The type of network interface.
type CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum string

const (
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumInterface                     CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "interface"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumNatGateway                    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "natGateway"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumEfa                           CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "efa"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumTrunk                         CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "trunk"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumLoadBalancer                  CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "load_balancer"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumNetworkLoadBalancer           CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "network_load_balancer"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumVpcEndpoint                   CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "vpc_endpoint"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumBranch                        CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "branch"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumTransitGateway                CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "transit_gateway"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumLambda                        CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "lambda"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumQuicksight                    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "quicksight"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumGlobalAcceleratorManaged      CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "global_accelerator_managed"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumAPIGatewayManaged             CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "api_gateway_managed"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumGatewayLoadBalancer           CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "gateway_load_balancer"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumGatewayLoadBalancerEndpoint   CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "gateway_load_balancer_endpoint"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumIotRulesManaged               CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "iot_rules_managed"
	CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnumAwsCodestarConnectionsManaged CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = "aws_codestar_connections_managed"
)

func (e *CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "interface":
		fallthrough
	case "natGateway":
		fallthrough
	case "efa":
		fallthrough
	case "trunk":
		fallthrough
	case "load_balancer":
		fallthrough
	case "network_load_balancer":
		fallthrough
	case "vpc_endpoint":
		fallthrough
	case "branch":
		fallthrough
	case "transit_gateway":
		fallthrough
	case "lambda":
		fallthrough
	case "quicksight":
		fallthrough
	case "global_accelerator_managed":
		fallthrough
	case "api_gateway_managed":
		fallthrough
	case "gateway_load_balancer":
		fallthrough
	case "gateway_load_balancer_endpoint":
		fallthrough
	case "iot_rules_managed":
		fallthrough
	case "aws_codestar_connections_managed":
		*e = CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum: %s", s)
	}
}

// CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes - Describes an IPv4 prefix.
type CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes struct {
	Ipv4Prefix *string
}

// CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses - Describes an IPv6 address associated with a network interface.
type CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses struct {
	Ipv6Address *string
}

// CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes - Describes the IPv6 prefix.
type CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes struct {
	Ipv6Prefix *string
}

// CreateNetworkInterfaceResultNetworkInterfacePrivateIPAddressesAssociation - The association information for an Elastic IP address (IPv4) associated with the network interface.
type CreateNetworkInterfaceResultNetworkInterfacePrivateIPAddressesAssociation struct {
	AllocationID    *string
	AssociationID   *string
	CarrierIP       *string
	CustomerOwnedIP *string
	IPOwnerID       *string
	PublicDNSName   *string
	PublicIP        *string
}

// CreateNetworkInterfaceResultNetworkInterfacePrivateIPAddresses - Describes the private IPv4 address of a network interface.
type CreateNetworkInterfaceResultNetworkInterfacePrivateIPAddresses struct {
	Association      *CreateNetworkInterfaceResultNetworkInterfacePrivateIPAddressesAssociation
	Primary          *bool
	PrivateDNSName   *string
	PrivateIPAddress *string
}

// CreateNetworkInterfaceResultNetworkInterfaceStatusEnum - The status of the network interface.
type CreateNetworkInterfaceResultNetworkInterfaceStatusEnum string

const (
	CreateNetworkInterfaceResultNetworkInterfaceStatusEnumAvailable  CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = "available"
	CreateNetworkInterfaceResultNetworkInterfaceStatusEnumAssociated CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = "associated"
	CreateNetworkInterfaceResultNetworkInterfaceStatusEnumAttaching  CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = "attaching"
	CreateNetworkInterfaceResultNetworkInterfaceStatusEnumInUse      CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = "in-use"
	CreateNetworkInterfaceResultNetworkInterfaceStatusEnumDetaching  CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = "detaching"
)

func (e *CreateNetworkInterfaceResultNetworkInterfaceStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "available":
		fallthrough
	case "associated":
		fallthrough
	case "attaching":
		fallthrough
	case "in-use":
		fallthrough
	case "detaching":
		*e = CreateNetworkInterfaceResultNetworkInterfaceStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInterfaceResultNetworkInterfaceStatusEnum: %s", s)
	}
}

// CreateNetworkInterfaceResultNetworkInterfaceTagSet - Describes a tag.
type CreateNetworkInterfaceResultNetworkInterfaceTagSet struct {
	Key   *string
	Value *string
}

// CreateNetworkInterfaceResultNetworkInterface - Information about the network interface.
type CreateNetworkInterfaceResultNetworkInterface struct {
	Association        *CreateNetworkInterfaceResultNetworkInterfaceAssociation
	Attachment         *CreateNetworkInterfaceResultNetworkInterfaceAttachment
	AvailabilityZone   *string
	DenyAllIgwTraffic  *bool
	Description        *string
	Groups             []CreateNetworkInterfaceResultNetworkInterfaceGroups
	InterfaceType      *CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum
	Ipv4Prefixes       []CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes
	Ipv6Address        *string
	Ipv6Addresses      []CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses
	Ipv6Native         *bool
	Ipv6Prefixes       []CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes
	MacAddress         *string
	NetworkInterfaceID *string
	OutpostArn         *string
	OwnerID            *string
	PrivateDNSName     *string
	PrivateIPAddress   *string
	PrivateIPAddresses []CreateNetworkInterfaceResultNetworkInterfacePrivateIPAddresses
	RequesterID        *string
	RequesterManaged   *bool
	SourceDestCheck    *bool
	Status             *CreateNetworkInterfaceResultNetworkInterfaceStatusEnum
	SubnetID           *string
	TagSet             []CreateNetworkInterfaceResultNetworkInterfaceTagSet
	VpcID              *string
}

// CreateNetworkInterfaceResult - Success
type CreateNetworkInterfaceResult struct {
	ClientToken      *string
	NetworkInterface *CreateNetworkInterfaceResultNetworkInterface
}
