"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PageInfo:
    r"""Information about the current page. List operations that supports paging return only one \\"page\\" of results. This protocol buffer message describes the page that has been returned."""
    
    result_per_page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultPerPage'), 'exclude': lambda f: f is None }})
    r"""Maximum number of results returned in one page. ! The number of results included in the API response."""  
    start_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startIndex'), 'exclude': lambda f: f is None }})
    r"""Index of the first result returned in the current page."""  
    total_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalResults'), 'exclude': lambda f: f is None }})
    r"""Total number of results available on the backend ! The total number of results in the result set."""  
    