// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusCodeEnum string

const (
	StatusCodeEnumComplete      StatusCodeEnum = "Complete"
	StatusCodeEnumInternalError StatusCodeEnum = "InternalError"
	StatusCodeEnumPartialData   StatusCodeEnum = "PartialData"
	StatusCodeEnumForbidden     StatusCodeEnum = "Forbidden"
)

func (e StatusCodeEnum) ToPointer() *StatusCodeEnum {
	return &e
}

func (e *StatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Complete":
		fallthrough
	case "InternalError":
		fallthrough
	case "PartialData":
		fallthrough
	case "Forbidden":
		*e = StatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusCodeEnum: %v", v)
	}
}
