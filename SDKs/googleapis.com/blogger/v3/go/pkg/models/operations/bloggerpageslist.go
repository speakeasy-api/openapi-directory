// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BloggerPagesListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BloggerPagesListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BloggerPagesListSecurity struct {
	Option1 *BloggerPagesListSecurityOption1 `security:"option"`
	Option2 *BloggerPagesListSecurityOption2 `security:"option"`
}

type BloggerPagesListStatusEnum string

const (
	BloggerPagesListStatusEnumLive        BloggerPagesListStatusEnum = "LIVE"
	BloggerPagesListStatusEnumDraft       BloggerPagesListStatusEnum = "DRAFT"
	BloggerPagesListStatusEnumSoftTrashed BloggerPagesListStatusEnum = "SOFT_TRASHED"
)

func (e *BloggerPagesListStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIVE":
		fallthrough
	case "DRAFT":
		fallthrough
	case "SOFT_TRASHED":
		*e = BloggerPagesListStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BloggerPagesListStatusEnum: %s", s)
	}
}

// BloggerPagesListViewEnum
type BloggerPagesListViewEnum string

const (
	BloggerPagesListViewEnumViewTypeUnspecified BloggerPagesListViewEnum = "VIEW_TYPE_UNSPECIFIED"
	BloggerPagesListViewEnumReader              BloggerPagesListViewEnum = "READER"
	BloggerPagesListViewEnumAuthor              BloggerPagesListViewEnum = "AUTHOR"
	BloggerPagesListViewEnumAdmin               BloggerPagesListViewEnum = "ADMIN"
)

func (e *BloggerPagesListViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VIEW_TYPE_UNSPECIFIED":
		fallthrough
	case "READER":
		fallthrough
	case "AUTHOR":
		fallthrough
	case "ADMIN":
		*e = BloggerPagesListViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BloggerPagesListViewEnum: %s", s)
	}
}

type BloggerPagesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt    *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	BlogID string          `pathParam:"style=simple,explode=false,name=blogId"`
	// JSONP
	Callback    *string `queryParam:"style=form,explode=true,name=callback"`
	FetchBodies *bool   `queryParam:"style=form,explode=true,name=fetchBodies"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key        *string `queryParam:"style=form,explode=true,name=key"`
	MaxResults *int64  `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	PageToken  *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string                      `queryParam:"style=form,explode=true,name=quotaUser"`
	Status    []BloggerPagesListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string                   `queryParam:"style=form,explode=true,name=upload_protocol"`
	View           *BloggerPagesListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type BloggerPagesListResponse struct {
	ContentType string
	// Successful response
	PageList    *shared.PageList
	StatusCode  int
	RawResponse *http.Response
}
