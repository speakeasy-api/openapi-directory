/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WebhookTriggers } from "./webhooktriggers";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The version of webhook request to send to the endpoint URL
 */
export enum WebhookAttributesResponseVersionEnum {
  V1 = "v1",
  V2 = "v2",
}

export class WebhookAttributes extends SpeakeasyBase {
  /**
   * Timestamp when webhook configuration was added to system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * The endpoint is where the webhook request will be sent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endpointUrl" })
  endpointUrl?: string;

  /**
   * Whether webhook has been disabled for too many consecutive failures
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failed" })
  failed?: boolean;

  /**
   * Timestamp when webhook configuration was last modified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modified?: Date;

  /**
   * The version of webhook request to send to the endpoint URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseVersion" })
  responseVersion?: WebhookAttributesResponseVersionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "triggers" })
  @Type(() => WebhookTriggers)
  triggers?: WebhookTriggers;

  /**
   * Token for verifying sender is ExaVault
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verificationToken" })
  verificationToken?: string;
}
