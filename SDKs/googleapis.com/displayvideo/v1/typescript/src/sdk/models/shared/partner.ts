/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExchangeConfig } from "./exchangeconfig";
import { PartnerAdServerConfig } from "./partneradserverconfig";
import { PartnerDataAccessConfig } from "./partnerdataaccessconfig";
import { PartnerGeneralConfig } from "./partnergeneralconfig";
import { Expose, Type } from "class-transformer";

/**
 * Output only. The status of the partner.
 */
export enum PartnerEntityStatusEnum {
  EntityStatusUnspecified = "ENTITY_STATUS_UNSPECIFIED",
  EntityStatusActive = "ENTITY_STATUS_ACTIVE",
  EntityStatusArchived = "ENTITY_STATUS_ARCHIVED",
  EntityStatusDraft = "ENTITY_STATUS_DRAFT",
  EntityStatusPaused = "ENTITY_STATUS_PAUSED",
  EntityStatusScheduledForDeletion = "ENTITY_STATUS_SCHEDULED_FOR_DELETION",
}

/**
 * A single partner in Display & Video 360 (DV360).
 */
export class Partner extends SpeakeasyBase {
  /**
   * Ad server related settings of a partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adServerConfig" })
  @Type(() => PartnerAdServerConfig)
  adServerConfig?: PartnerAdServerConfig;

  /**
   * Settings that control how partner related data may be accessed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataAccessConfig" })
  @Type(() => PartnerDataAccessConfig)
  dataAccessConfig?: PartnerDataAccessConfig;

  /**
   * The display name of the partner. Must be UTF-8 encoded with a maximum size of 240 bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Output only. The status of the partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityStatus" })
  entityStatus?: PartnerEntityStatusEnum;

  /**
   * Settings that control which exchanges are enabled for a partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exchangeConfig" })
  @Type(() => ExchangeConfig)
  exchangeConfig?: ExchangeConfig;

  /**
   * General settings of a partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generalConfig" })
  @Type(() => PartnerGeneralConfig)
  generalConfig?: PartnerGeneralConfig;

  /**
   * Output only. The resource name of the partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The unique ID of the partner. Assigned by the system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partnerId" })
  partnerId?: string;

  /**
   * Output only. The timestamp when the partner was last updated. Assigned by the system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
