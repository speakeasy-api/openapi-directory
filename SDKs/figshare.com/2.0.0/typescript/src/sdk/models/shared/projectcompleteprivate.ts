/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Collaborator } from "./collaborator";
import { CustomArticleField } from "./customarticlefield";
import { FundingInformation } from "./fundinginformation";
import { Expose, Type } from "class-transformer";

/**
 * Role inside this project
 */
export enum ProjectCompletePrivateRoleEnum {
  Owner = "Owner",
  Collaborator = "Collaborator",
  Viewer = "Viewer",
}

/**
 * Project storage type
 */
export enum ProjectCompletePrivateStorageEnum {
  Individual = "individual",
  Group = "group",
}

/**
 * OK. Project representation
 */
export class ProjectCompletePrivate extends SpeakeasyBase {
  /**
   * ID of the account owning the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: number;

  /**
   * List of project collaborators
   */
  @SpeakeasyMetadata({ elemType: Collaborator })
  @Expose({ name: "collaborators" })
  @Type(() => Collaborator)
  collaborators: Collaborator[];

  /**
   * Date when project was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_date" })
  createdDate: string;

  /**
   * Collection custom fields
   */
  @SpeakeasyMetadata({ elemType: CustomArticleField })
  @Expose({ name: "custom_fields" })
  @Type(() => CustomArticleField)
  customFields: CustomArticleField[];

  /**
   * Project description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Project public url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "figshare_url" })
  figshareUrl: string;

  /**
   * Project funding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "funding" })
  funding: string;

  /**
   * Full Project funding information
   */
  @SpeakeasyMetadata({ elemType: FundingInformation })
  @Expose({ name: "funding_list" })
  @Type(() => FundingInformation)
  fundingList: FundingInformation[];

  /**
   * Group of project if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: number;

  /**
   * Project id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Date when project was last modified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified_date" })
  modifiedDate: string;

  /**
   * Date when project was published
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_date" })
  publishedDate: string;

  /**
   * Project quota
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quota" })
  quota: number;

  /**
   * Role inside this project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role: ProjectCompletePrivateRoleEnum;

  /**
   * Project storage type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storage" })
  storage: ProjectCompletePrivateStorageEnum;

  /**
   * Project title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * Api endpoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * Project used quota
   */
  @SpeakeasyMetadata()
  @Expose({ name: "used_quota" })
  usedQuota: number;

  /**
   * Project private quota used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "used_quota_private" })
  usedQuotaPrivate: number;

  /**
   * Project public quota used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "used_quota_public" })
  usedQuotaPublic: number;
}
