// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteLicenseeRequest struct {
	Key       string  `pathParam:"style=simple,explode=false,name=key"`
	Licensee  string  `pathParam:"style=simple,explode=false,name=licensee"`
	UserToken *string `queryParam:"style=form,explode=false,name=user_token"`
}

type DeleteLicenseeLicenseeDeleteResponseCodeEnum string

const (
	DeleteLicenseeLicenseeDeleteResponseCodeEnumTwoThousand DeleteLicenseeLicenseeDeleteResponseCodeEnum = "2000"
)

func (e *DeleteLicenseeLicenseeDeleteResponseCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2000":
		*e = DeleteLicenseeLicenseeDeleteResponseCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteLicenseeLicenseeDeleteResponseCodeEnum: %s", s)
	}
}

type DeleteLicenseeLicenseeDeleteResponseMessageEnum string

const (
	DeleteLicenseeLicenseeDeleteResponseMessageEnumSuccess DeleteLicenseeLicenseeDeleteResponseMessageEnum = "Success"
)

func (e *DeleteLicenseeLicenseeDeleteResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Success":
		*e = DeleteLicenseeLicenseeDeleteResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteLicenseeLicenseeDeleteResponseMessageEnum: %s", s)
	}
}

type DeleteLicenseeLicenseeDeleteResponseResult struct {
	Deleted float64 `json:"deleted"`
}

// DeleteLicenseeLicenseeDeleteResponse - Success
type DeleteLicenseeLicenseeDeleteResponse struct {
	Code    DeleteLicenseeLicenseeDeleteResponseCodeEnum    `json:"code"`
	Message DeleteLicenseeLicenseeDeleteResponseMessageEnum `json:"message"`
	Result  DeleteLicenseeLicenseeDeleteResponseResult      `json:"result"`
}

type DeleteLicenseeResponse struct {
	// Bad Request
	BadRequestResponse *shared.BadRequestResponse
	ContentType        string
	// Success
	LicenseeDeleteResponse *DeleteLicenseeLicenseeDeleteResponse
	StatusCode             int
	RawResponse            *http.Response
}
