/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Permission - [Deprecated] All fields defined in a permission are ANDed.
 */
public class Permission {
    /**
     * Extra custom constraints. The constraints are ANDed together.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("constraints")
    public PermissionConstraint[] constraints;
    public Permission withConstraints(PermissionConstraint[] constraints) {
        this.constraints = constraints;
        return this;
    }
    
    /**
     * Used in Ingress or Egress Gateway cases to specify hosts that the policy applies to. Exact match, prefix match, and suffix match are supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hosts")
    public String[] hosts;
    public Permission withHosts(String[] hosts) {
        this.hosts = hosts;
        return this;
    }
    
    /**
     * HTTP method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("methods")
    public String[] methods;
    public Permission withMethods(String[] methods) {
        this.methods = methods;
        return this;
    }
    
    /**
     * Negate of hosts. Specifies exclusions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notHosts")
    public String[] notHosts;
    public Permission withNotHosts(String[] notHosts) {
        this.notHosts = notHosts;
        return this;
    }
    
    /**
     * Negate of methods. Specifies exclusions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notMethods")
    public String[] notMethods;
    public Permission withNotMethods(String[] notMethods) {
        this.notMethods = notMethods;
        return this;
    }
    
    /**
     * Negate of paths. Specifies exclusions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notPaths")
    public String[] notPaths;
    public Permission withNotPaths(String[] notPaths) {
        this.notPaths = notPaths;
        return this;
    }
    
    /**
     * Negate of ports. Specifies exclusions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notPorts")
    public String[] notPorts;
    public Permission withNotPorts(String[] notPorts) {
        this.notPorts = notPorts;
        return this;
    }
    
    /**
     * HTTP request paths or gRPC methods. Exact match, prefix match, and suffix match are supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paths")
    public String[] paths;
    public Permission withPaths(String[] paths) {
        this.paths = paths;
        return this;
    }
    
    /**
     * Port names or numbers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ports")
    public String[] ports;
    public Permission withPorts(String[] ports) {
        this.ports = ports;
        return this;
    }
    
}
