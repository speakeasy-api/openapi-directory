import { SpeakeasyBase } from "../../../internal/utils";
import { LoyaltyEventAccumulatePoints } from "./loyaltyeventaccumulatepoints";
import { LoyaltyEventAdjustPoints } from "./loyaltyeventadjustpoints";
import { LoyaltyEventCreateReward } from "./loyaltyeventcreatereward";
import { LoyaltyEventDeleteReward } from "./loyaltyeventdeletereward";
import { LoyaltyEventExpirePoints } from "./loyaltyeventexpirepoints";
import { LoyaltyEventOther } from "./loyaltyeventother";
import { LoyaltyEventRedeemReward } from "./loyaltyeventredeemreward";
/**
 * Provides information about a loyalty event.
 *
 * @remarks
 * For more information, see [Loyalty events](https://developer.squareup.com/docs/loyalty-api/overview/#loyalty-events).
 */
export declare class LoyaltyEvent extends SpeakeasyBase {
    /**
     * Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
     */
    accumulatePoints?: LoyaltyEventAccumulatePoints;
    /**
     * Provides metadata when the event `type` is `ADJUST_POINTS`.
     */
    adjustPoints?: LoyaltyEventAdjustPoints;
    /**
     * Provides metadata when the event `type` is `CREATE_REWARD`.
     */
    createReward?: LoyaltyEventCreateReward;
    /**
     * The timestamp when the event was created, in RFC 3339 format.
     */
    createdAt: string;
    /**
     * Provides metadata when the event `type` is `DELETE_REWARD`.
     */
    deleteReward?: LoyaltyEventDeleteReward;
    /**
     * Provides metadata when the event `type` is `EXPIRE_POINTS`.
     */
    expirePoints?: LoyaltyEventExpirePoints;
    /**
     * The Square-assigned ID of the loyalty event.
     */
    id: string;
    /**
     * The ID of the [location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the event occurred.
     */
    locationId?: string;
    /**
     * The ID of the [loyalty account](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyAccount) in which the event occurred.
     */
    loyaltyAccountId: string;
    /**
     * Provides metadata when the event `type` is `OTHER`.
     */
    otherEvent?: LoyaltyEventOther;
    /**
     * Provides metadata when the event `type` is `REDEEM_REWARD`.
     */
    redeemReward?: LoyaltyEventRedeemReward;
    /**
     * Defines whether the event was generated by the Square Point of Sale.
     */
    source: string;
    /**
     * The type of the loyalty event.
     */
    type: string;
}
