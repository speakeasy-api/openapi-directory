// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum - Error type.
type PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum string

const (
	PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnumNotFound      PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum = "not_found"
	PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnumUnauthorized  PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum = "unauthorized"
	PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnumChildManifest PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum = "child_manifest"
)

func (e PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum) ToPointer() *PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum {
	return &e
}

func (e *PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "not_found":
		fallthrough
	case "unauthorized":
		fallthrough
	case "child_manifest":
		*e = PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum: %v", v)
	}
}

type PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrors struct {
	// Digest of the image that caused the error.
	Digest *string `json:"digest,omitempty"`
	// Error type.
	Error *PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum `json:"error,omitempty"`
	// Name of the repository of the image that caused the error.
	Repository *string `json:"repository,omitempty"`
}

// PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum - Warning type.
type PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum string

const (
	PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnumIsActive   PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum = "is_active"
	PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnumCurrentTag PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum = "current_tag"
)

func (e PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum) ToPointer() *PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum {
	return &e
}

func (e *PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "is_active":
		fallthrough
	case "current_tag":
		*e = PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum: %v", v)
	}
}

type PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarnings struct {
	// Digest of the image that caused the warning.
	Digest *string `json:"digest,omitempty"`
	// Name of the repository of the image that caused the warning.
	Repository *string `json:"repository,omitempty"`
	// Current tags if warning is `current_tag`.
	Tags []string `json:"tags,omitempty"`
	// Warning type.
	Warning *PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum `json:"warning,omitempty"`
}

type PostNamespacesDeleteImagesResponseErrorErrinfoDetails struct {
	// Errors from validating delete request. These cannot be ignored.
	Errors []PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrors `json:"errors,omitempty"`
	// Warnings that can be ignored.
	//
	// These warnings include:
	//
	// - is_active: warning when attempting to delete an image that is marked as
	// active.
	// - current_tag: warning when attempting to delete an image that has one or
	// more current tags in the repository.
	//
	// Warnings can be copied from the response to the request.
	//
	Warnings []PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarnings `json:"warnings,omitempty"`
}

// PostNamespacesDeleteImagesResponseErrorErrinfo - Context information for an error used for diagnostics.
type PostNamespacesDeleteImagesResponseErrorErrinfo struct {
	// ID of docker user.
	APICallDockerID *string `json:"api_call_docker_id,omitempty"`
	// Name of the API operation called.
	APICallName *string `json:"api_call_name,omitempty"`
	// Date/time of call start.
	APICallStart *string `json:"api_call_start,omitempty"`
	// Unique ID for this call.
	APICallTxnid *string                                                `json:"api_call_txnid,omitempty"`
	Details      *PostNamespacesDeleteImagesResponseErrorErrinfoDetails `json:"details,omitempty"`
	// Type of error.
	Type *string `json:"type,omitempty"`
}

// PostNamespacesDeleteImagesResponseError - Deletion not possible.
type PostNamespacesDeleteImagesResponseError struct {
	Errinfo *PostNamespacesDeleteImagesResponseErrorErrinfo `json:"errinfo,omitempty"`
	// The error message.
	Message *string `json:"message,omitempty"`
	// Unique ID for this call.
	Txnid *string `json:"txnid,omitempty"`
}
