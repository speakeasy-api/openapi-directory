/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ChatV1Service - Created
 */
public class ChatV1Service {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the Service resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public ChatV1Service withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumption_report_interval")
    public Long consumptionReportInterval;
    public ChatV1Service withConsumptionReportInterval(Long consumptionReportInterval) {
        this.consumptionReportInterval = consumptionReportInterval;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public ChatV1Service withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public ChatV1Service withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_channel_creator_role_sid")
    public String defaultChannelCreatorRoleSid;
    public ChatV1Service withDefaultChannelCreatorRoleSid(String defaultChannelCreatorRoleSid) {
        this.defaultChannelCreatorRoleSid = defaultChannelCreatorRoleSid;
        return this;
    }
    
    /**
     * The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_channel_role_sid")
    public String defaultChannelRoleSid;
    public ChatV1Service withDefaultChannelRoleSid(String defaultChannelRoleSid) {
        this.defaultChannelRoleSid = defaultChannelRoleSid;
        return this;
    }
    
    /**
     * The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_service_role_sid")
    public String defaultServiceRoleSid;
    public ChatV1Service withDefaultServiceRoleSid(String defaultServiceRoleSid) {
        this.defaultServiceRoleSid = defaultServiceRoleSid;
        return this;
    }
    
    /**
     * The string that you assigned to describe the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;
    public ChatV1Service withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * An object that describes the limits of the service instance. The `limits` object contains  `channel_members` to describe the members/channel limit and `user_channels` to describe the channels/user limit. `channel_members` can be 1,000 or less, with a default of 250. `user_channels` can be 1,000 or less, with a default value of 100.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limits")
    public Object limits;
    public ChatV1Service withLimits(Object limits) {
        this.limits = limits;
        return this;
    }
    
    /**
     * The absolute URLs of the Service's [Channels](https://www.twilio.com/docs/chat/api/channels), [Roles](https://www.twilio.com/docs/chat/api/roles), and [Users](https://www.twilio.com/docs/chat/api/users).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;
    public ChatV1Service withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The notification configuration for the Service instance. See [Push Notification Configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifications")
    public Object notifications;
    public ChatV1Service withNotifications(Object notifications) {
        this.notifications = notifications;
        return this;
    }
    
    /**
     * The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("post_webhook_url")
    public String postWebhookUrl;
    public ChatV1Service withPostWebhookUrl(String postWebhookUrl) {
        this.postWebhookUrl = postWebhookUrl;
        return this;
    }
    
    /**
     * The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pre_webhook_url")
    public String preWebhookUrl;
    public ChatV1Service withPreWebhookUrl(String preWebhookUrl) {
        this.preWebhookUrl = preWebhookUrl;
        return this;
    }
    
    /**
     * Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Service instance. The default is `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reachability_enabled")
    public Boolean reachabilityEnabled;
    public ChatV1Service withReachabilityEnabled(Boolean reachabilityEnabled) {
        this.reachabilityEnabled = reachabilityEnabled;
        return this;
    }
    
    /**
     * Whether the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature is enabled. The default is `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read_status_enabled")
    public Boolean readStatusEnabled;
    public ChatV1Service withReadStatusEnabled(Boolean readStatusEnabled) {
        this.readStatusEnabled = readStatusEnabled;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Service resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public ChatV1Service withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("typing_indicator_timeout")
    public Long typingIndicatorTimeout;
    public ChatV1Service withTypingIndicatorTimeout(Long typingIndicatorTimeout) {
        this.typingIndicatorTimeout = typingIndicatorTimeout;
        return this;
    }
    
    /**
     * The absolute URL of the Service resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public ChatV1Service withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhook_filters")
    public String[] webhookFilters;
    public ChatV1Service withWebhookFilters(String[] webhookFilters) {
        this.webhookFilters = webhookFilters;
        return this;
    }
    
    /**
     * The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhook_method")
    public String webhookMethod;
    public ChatV1Service withWebhookMethod(String webhookMethod) {
        this.webhookMethod = webhookMethod;
        return this;
    }
    
    /**
     * An object that contains information about the webhooks configured for this service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhooks")
    public Object webhooks;
    public ChatV1Service withWebhooks(Object webhooks) {
        this.webhooks = webhooks;
        return this;
    }
    
}
