/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListWordSensesRequest extends SpeakeasyBase {
  /**
   * {{apiKeyDescription}}
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Ocp-Apim-Subscription-Key",
  })
  ocpApimSubscriptionKey?: string;

  /**
   * (Required) a standard culture code (ISO-639 language code with an optional country extension)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: string;

  /**
   * (Required) the word to inspect
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=word" })
  word?: string;
}

export class ListWordSenses200ApplicationJSONFamilies extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition?: string;
}

export class ListWordSenses200ApplicationJSONFeatures extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class ListWordSenses200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListWordSenses200ApplicationJSONFamilies })
  @Expose({ name: "families" })
  @Type(() => ListWordSenses200ApplicationJSONFamilies)
  families?: ListWordSenses200ApplicationJSONFamilies[];

  @SpeakeasyMetadata({ elemType: ListWordSenses200ApplicationJSONFeatures })
  @Expose({ name: "features" })
  @Type(() => ListWordSenses200ApplicationJSONFeatures)
  features?: ListWordSenses200ApplicationJSONFeatures[];

  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "isLemma" })
  isLemma?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "legacyMapId" })
  legacyMapId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lemma" })
  lemma?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lexemeId" })
  lexemeId?: number;
}

export class ListWordSensesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Interpretations of "couscous"
   */
  @SpeakeasyMetadata({ elemType: ListWordSenses200ApplicationJSON })
  listWordSenses200ApplicationJSONObjects?: ListWordSenses200ApplicationJSON[];
}
