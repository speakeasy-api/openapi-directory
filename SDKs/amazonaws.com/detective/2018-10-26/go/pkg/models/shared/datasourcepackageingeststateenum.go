// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DatasourcePackageIngestStateEnum string

const (
	DatasourcePackageIngestStateEnumStarted  DatasourcePackageIngestStateEnum = "STARTED"
	DatasourcePackageIngestStateEnumStopped  DatasourcePackageIngestStateEnum = "STOPPED"
	DatasourcePackageIngestStateEnumDisabled DatasourcePackageIngestStateEnum = "DISABLED"
)

func (e DatasourcePackageIngestStateEnum) ToPointer() *DatasourcePackageIngestStateEnum {
	return &e
}

func (e *DatasourcePackageIngestStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STARTED":
		fallthrough
	case "STOPPED":
		fallthrough
	case "DISABLED":
		*e = DatasourcePackageIngestStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatasourcePackageIngestStateEnum: %v", v)
	}
}
