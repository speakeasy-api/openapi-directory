/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GeolayerdataCommon extends SpeakeasyBase {
  /**
   * The language of the information url and description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lang" })
  lang?: string;

  /**
   * The URL for the preview image information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previewImageUrl" })
  previewImageUrl?: string;

  /**
   * The description for this location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snippet" })
  snippet?: string;

  /**
   * The URL for information for this location. Ex: wikipedia link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snippetUrl" })
  snippetUrl?: string;

  /**
   * The display title and localized canonical name to use when searching for this entity on Google search.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class GeolayerdataGeoViewportHi extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;
}

export class GeolayerdataGeoViewportLo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;
}

/**
 * The viewport for showing this location. This is a latitude, longitude rectangle.
 */
export class GeolayerdataGeoViewport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "hi" })
  @Type(() => GeolayerdataGeoViewportHi)
  hi?: GeolayerdataGeoViewportHi;

  @SpeakeasyMetadata()
  @Expose({ name: "lo" })
  @Type(() => GeolayerdataGeoViewportLo)
  lo?: GeolayerdataGeoViewportLo;
}

export class GeolayerdataGeo extends SpeakeasyBase {
  /**
   * The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boundary" })
  boundary?: string[];

  /**
   * The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cachePolicy" })
  cachePolicy?: string;

  /**
   * The country code of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countryCode" })
  countryCode?: string;

  /**
   * The latitude of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  /**
   * The longitude of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;

  /**
   * The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mapType" })
  mapType?: string;

  /**
   * The viewport for showing this location. This is a latitude, longitude rectangle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "viewport" })
  @Type(() => GeolayerdataGeoViewport)
  viewport?: GeolayerdataGeoViewport;

  /**
   * The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zoom" })
  zoom?: number;
}

export class Geolayerdata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "common" })
  @Type(() => GeolayerdataCommon)
  common?: GeolayerdataCommon;

  @SpeakeasyMetadata()
  @Expose({ name: "geo" })
  @Type(() => GeolayerdataGeo)
  geo?: GeolayerdataGeo;

  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
