// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdatePermissionSetXAmzTargetEnum
type UpdatePermissionSetXAmzTargetEnum string

const (
	UpdatePermissionSetXAmzTargetEnumSwbExternalServiceUpdatePermissionSet UpdatePermissionSetXAmzTargetEnum = "SWBExternalService.UpdatePermissionSet"
)

func (e *UpdatePermissionSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SWBExternalService.UpdatePermissionSet":
		*e = UpdatePermissionSetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePermissionSetXAmzTargetEnum: %s", s)
	}
}

type UpdatePermissionSetHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdatePermissionSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdatePermissionSetRequest struct {
	Headers UpdatePermissionSetHeaders
	Request shared.UpdatePermissionSetRequest `request:"mediaType=application/json"`
}

type UpdatePermissionSetResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdatePermissionSetResponse map[string]interface{}
	// ValidationException
	ValidationException interface{}
}
