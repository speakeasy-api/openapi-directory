/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetOrganizationSensorReadingsHistory200ApplicationJSON {
    /**
     * Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("battery")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONBattery battery;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withBattery(GetOrganizationSensorReadingsHistory200ApplicationJSONBattery battery) {
        this.battery = battery;
        return this;
    }
    
    /**
     * Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("button")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONButton button;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withButton(GetOrganizationSensorReadingsHistory200ApplicationJSONButton button) {
        this.button = button;
        return this;
    }
    
    /**
     * Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("door")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONDoor door;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withDoor(GetOrganizationSensorReadingsHistory200ApplicationJSONDoor door) {
        this.door = door;
        return this;
    }
    
    /**
     * Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("humidity")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity humidity;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withHumidity(GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity humidity) {
        this.humidity = humidity;
        return this;
    }
    
    /**
     * Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indoorAirQuality")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality indoorAirQuality;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withIndoorAirQuality(GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality indoorAirQuality) {
        this.indoorAirQuality = indoorAirQuality;
        return this;
    }
    
    /**
     * Type of sensor reading.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metric")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum metric;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withMetric(GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum metric) {
        this.metric = metric;
        return this;
    }
    
    /**
     * Network to which the sensor belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork network;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withNetwork(GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork network) {
        this.network = network;
        return this;
    }
    
    /**
     * Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noise")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONNoise noise;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withNoise(GetOrganizationSensorReadingsHistory200ApplicationJSONNoise noise) {
        this.noise = noise;
        return this;
    }
    
    /**
     * Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pm25")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 pm25;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withPm25(GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 pm25) {
        this.pm25 = pm25;
        return this;
    }
    
    /**
     * Serial number of the sensor that took the reading.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serial")
    public String serial;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withSerial(String serial) {
        this.serial = serial;
        return this;
    }
    
    /**
     * Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("temperature")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature temperature;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withTemperature(GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature temperature) {
        this.temperature = temperature;
        return this;
    }
    
    /**
     * Time at which the reading occurred, in ISO8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ts")
    public String ts;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withTs(String ts) {
        this.ts = ts;
        return this;
    }
    
    /**
     * Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tvoc")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc tvoc;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withTvoc(GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc tvoc) {
        this.tvoc = tvoc;
        return this;
    }
    
    /**
     * Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("water")
    public GetOrganizationSensorReadingsHistory200ApplicationJSONWater water;
    public GetOrganizationSensorReadingsHistory200ApplicationJSON withWater(GetOrganizationSensorReadingsHistory200ApplicationJSONWater water) {
        this.water = water;
        return this;
    }
    
}
