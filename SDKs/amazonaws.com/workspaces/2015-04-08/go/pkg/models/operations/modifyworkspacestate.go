// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ModifyWorkspaceStateXAmzTargetEnum
type ModifyWorkspaceStateXAmzTargetEnum string

const (
	ModifyWorkspaceStateXAmzTargetEnumWorkspacesServiceModifyWorkspaceState ModifyWorkspaceStateXAmzTargetEnum = "WorkspacesService.ModifyWorkspaceState"
)

func (e *ModifyWorkspaceStateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.ModifyWorkspaceState":
		*e = ModifyWorkspaceStateXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyWorkspaceStateXAmzTargetEnum: %s", s)
	}
}

type ModifyWorkspaceStateRequest struct {
	ModifyWorkspaceStateRequest shared.ModifyWorkspaceStateRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  ModifyWorkspaceStateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ModifyWorkspaceStateResponse struct {
	ContentType string
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	// Success
	ModifyWorkspaceStateResult map[string]interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
