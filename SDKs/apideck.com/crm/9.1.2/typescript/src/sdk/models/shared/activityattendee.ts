/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum ActivityAttendeeStatusEnum {
  Accepted = "accepted",
  Tentative = "tentative",
  Declined = "declined",
}

export class ActivityAttendeeInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email_address" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_organizer" })
  isOrganizer?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "middle_name" })
  middleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ActivityAttendeeStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "suffix" })
  suffix?: string;
}

export class ActivityAttendee extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contact_id" })
  contactId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "email_address" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_organizer" })
  isOrganizer?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "middle_name" })
  middleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ActivityAttendeeStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "suffix" })
  suffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;
}
