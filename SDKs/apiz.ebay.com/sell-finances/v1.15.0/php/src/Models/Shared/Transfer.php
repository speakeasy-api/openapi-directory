<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transfer - This type is the base response type used by <code>TRANSFER</code> transaction type that is returned in the response.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transfer
{
    /**
     * This type provided details on the funding source for the transfer.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FundingSource $fundingSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('fundingSource')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FundingSource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FundingSource $fundingSource = null;
    
    /**
     * This timestamp indicates the date/time of the transfer. The following (UTC) format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2020-08-04T19:09:02.768Z</code>
     * 
     * @var ?string $transactionDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionDate = null;
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $transferAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $transferAmount = null;
    
    /**
     * This type is used by the <b>transferDetail</b> container, which provides more details about the transfer and the charge(s) associated with the transfer.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransferDetail $transferDetail
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferDetail')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransferDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransferDetail $transferDetail = null;
    
    /**
     * The unique identifier of the <code>TRANSFER</code> transaction type. This is the same value that was passed into the end of the call URI.
     * 
     * @var ?string $transferId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferId = null;
    
	public function __construct()
	{
		$this->fundingSource = null;
		$this->transactionDate = null;
		$this->transferAmount = null;
		$this->transferDetail = null;
		$this->transferId = null;
	}
}
