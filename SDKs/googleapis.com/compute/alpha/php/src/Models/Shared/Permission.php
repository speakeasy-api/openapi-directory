<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Permission - [Deprecated] All fields defined in a permission are ANDed.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Permission
{
    /**
     * Extra custom constraints. The constraints are ANDed together.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PermissionConstraint> $constraints
     */
	#[\JMS\Serializer\Annotation\SerializedName('constraints')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PermissionConstraint>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $constraints = null;
    
    /**
     * Used in Ingress or Egress Gateway cases to specify hosts that the policy applies to. Exact match, prefix match, and suffix match are supported.
     * 
     * @var ?array<string> $hosts
     */
	#[\JMS\Serializer\Annotation\SerializedName('hosts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $hosts = null;
    
    /**
     * HTTP method.
     * 
     * @var ?array<string> $methods
     */
	#[\JMS\Serializer\Annotation\SerializedName('methods')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $methods = null;
    
    /**
     * Negate of hosts. Specifies exclusions.
     * 
     * @var ?array<string> $notHosts
     */
	#[\JMS\Serializer\Annotation\SerializedName('notHosts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notHosts = null;
    
    /**
     * Negate of methods. Specifies exclusions.
     * 
     * @var ?array<string> $notMethods
     */
	#[\JMS\Serializer\Annotation\SerializedName('notMethods')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notMethods = null;
    
    /**
     * Negate of paths. Specifies exclusions.
     * 
     * @var ?array<string> $notPaths
     */
	#[\JMS\Serializer\Annotation\SerializedName('notPaths')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notPaths = null;
    
    /**
     * Negate of ports. Specifies exclusions.
     * 
     * @var ?array<string> $notPorts
     */
	#[\JMS\Serializer\Annotation\SerializedName('notPorts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notPorts = null;
    
    /**
     * HTTP request paths or gRPC methods. Exact match, prefix match, and suffix match are supported.
     * 
     * @var ?array<string> $paths
     */
	#[\JMS\Serializer\Annotation\SerializedName('paths')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $paths = null;
    
    /**
     * Port names or numbers.
     * 
     * @var ?array<string> $ports
     */
	#[\JMS\Serializer\Annotation\SerializedName('ports')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ports = null;
    
	public function __construct()
	{
		$this->constraints = null;
		$this->hosts = null;
		$this->methods = null;
		$this->notHosts = null;
		$this->notMethods = null;
		$this->notPaths = null;
		$this->notPorts = null;
		$this->paths = null;
		$this->ports = null;
	}
}
