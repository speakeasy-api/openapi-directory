/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdminUser } from "./adminuser";
import { InstanceConfig } from "./instanceconfig";
import { SAMLParams } from "./samlparams";
import { URIs } from "./uris";
import { Expose, Type } from "class-transformer";

/**
 * Message describing ContactCenter object Next ID: 14
 */
export class ContactCenterInput extends SpeakeasyBase {
  /**
   * Message storing info about the first admin user. Next ID: 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminUser" })
  @Type(() => AdminUser)
  adminUser?: AdminUser;

  /**
   * Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ccaipManagedUsers" })
  ccaipManagedUsers?: boolean;

  /**
   * Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerDomainPrefix" })
  customerDomainPrefix?: string;

  /**
   * Required. A user friendly name for the ContactCenter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Message storing the instance configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceConfig" })
  @Type(() => InstanceConfig)
  instanceConfig?: InstanceConfig;

  /**
   * Labels as key value pairs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * name of resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Message storing SAML params to enable Google as IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "samlParams" })
  @Type(() => SAMLParams)
  samlParams?: SAMLParams;

  /**
   * Message storing the URIs of the ContactCenter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uris" })
  @Type(() => URIs)
  uris?: URIs;

  /**
   * Optional. Email address of the first admin user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userEmail" })
  userEmail?: string;
}

/**
 * Output only. The state of this contact center.
 */
export enum ContactCenterStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  StateDeploying = "STATE_DEPLOYING",
  StateDeployed = "STATE_DEPLOYED",
  StateTerminating = "STATE_TERMINATING",
  StateFailed = "STATE_FAILED",
  StateTerminatingFailed = "STATE_TERMINATING_FAILED",
  StateTerminated = "STATE_TERMINATED",
}

/**
 * Message describing ContactCenter object Next ID: 14
 */
export class ContactCenter extends SpeakeasyBase {
  /**
   * Message storing info about the first admin user. Next ID: 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminUser" })
  @Type(() => AdminUser)
  adminUser?: AdminUser;

  /**
   * Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ccaipManagedUsers" })
  ccaipManagedUsers?: boolean;

  /**
   * Output only. [Output only] Create time stamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerDomainPrefix" })
  customerDomainPrefix?: string;

  /**
   * Required. A user friendly name for the ContactCenter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Message storing the instance configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceConfig" })
  @Type(() => InstanceConfig)
  instanceConfig?: InstanceConfig;

  /**
   * Labels as key value pairs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * name of resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Message storing SAML params to enable Google as IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "samlParams" })
  @Type(() => SAMLParams)
  samlParams?: SAMLParams;

  /**
   * Output only. The state of this contact center.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ContactCenterStateEnum;

  /**
   * Output only. [Output only] Update time stamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Message storing the URIs of the ContactCenter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uris" })
  @Type(() => URIs)
  uris?: URIs;

  /**
   * Optional. Email address of the first admin user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userEmail" })
  userEmail?: string;
}
