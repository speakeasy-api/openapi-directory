"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import generatorinput as shared_generatorinput
from typing import Optional


@dataclasses.dataclass
class GenerateServerForLanguageRequest:
    
    framework: str = dataclasses.field(metadata={'path_param': { 'field_name': 'framework', 'style': 'simple', 'explode': False }})
    r"""framework"""  
    generator_input: shared_generatorinput.GeneratorInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""parameters"""  
    

@dataclasses.dataclass
class GenerateServerForLanguageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    