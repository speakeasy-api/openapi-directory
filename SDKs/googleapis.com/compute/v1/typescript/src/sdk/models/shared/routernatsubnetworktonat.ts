/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum RouterNatSubnetworkToNatSourceIpRangesToNatEnum {
  AllIpRanges = "ALL_IP_RANGES",
  ListOfSecondaryIpRanges = "LIST_OF_SECONDARY_IP_RANGES",
  PrimaryIpRange = "PRIMARY_IP_RANGE",
}

/**
 * Defines the IP ranges that want to use NAT for a subnetwork.
 */
export class RouterNatSubnetworkToNat extends SpeakeasyBase {
  /**
   * URL for the subnetwork resource that will use NAT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A list of the secondary ranges of the Subnetwork that are allowed to use NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES" is one of the values in source_ip_ranges_to_nat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secondaryIpRangeNames" })
  secondaryIpRangeNames?: string[];

  /**
   * Specify the options for NAT ranges in the Subnetwork. All options of a single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only valid option with multiple values is: ["PRIMARY_IP_RANGE", "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceIpRangesToNat" })
  sourceIpRangesToNat?: RouterNatSubnetworkToNatSourceIpRangesToNatEnum[];
}
