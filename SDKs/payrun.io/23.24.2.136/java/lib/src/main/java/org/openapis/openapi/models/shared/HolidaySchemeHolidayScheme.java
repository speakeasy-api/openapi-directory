/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class HolidaySchemeHolidayScheme {
    /**
     * The holiday schemes' accrual pay codes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccrualPayCodes")
    public HolidaySchemeHolidaySchemeAccrualPayCodes accrualPayCodes;

    public HolidaySchemeHolidayScheme withAccrualPayCodes(HolidaySchemeHolidaySchemeAccrualPayCodes accrualPayCodes) {
        this.accrualPayCodes = accrualPayCodes;
        return this;
    }
    
    /**
     * The holiday schemes' allow exceed annual entitlement
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowExceedAnnualEntitlement")
    public Boolean allowExceedAnnualEntitlement;

    public HolidaySchemeHolidayScheme withAllowExceedAnnualEntitlement(Boolean allowExceedAnnualEntitlement) {
        this.allowExceedAnnualEntitlement = allowExceedAnnualEntitlement;
        return this;
    }
    
    /**
     * The holiday schemes' allow negative balance
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowNegativeBalance")
    public Boolean allowNegativeBalance;

    public HolidaySchemeHolidayScheme withAllowNegativeBalance(Boolean allowNegativeBalance) {
        this.allowNegativeBalance = allowNegativeBalance;
        return this;
    }
    
    /**
     * The holiday schemes' annual entitlement weeks
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnnualEntitlementWeeks")
    public Double annualEntitlementWeeks;

    public HolidaySchemeHolidayScheme withAnnualEntitlementWeeks(Double annualEntitlementWeeks) {
        this.annualEntitlementWeeks = annualEntitlementWeeks;
        return this;
    }
    
    /**
     * The holiday schemes' bank holiday inclusive
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BankHolidayInclusive")
    public Boolean bankHolidayInclusive;

    public HolidaySchemeHolidayScheme withBankHolidayInclusive(Boolean bankHolidayInclusive) {
        this.bankHolidayInclusive = bankHolidayInclusive;
        return this;
    }
    
    /**
     * The holiday schemes' code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Code")
    public String code;

    public HolidaySchemeHolidayScheme withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * The holiday schemes' effective date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("EffectiveDate")
    public LocalDate effectiveDate;

    public HolidaySchemeHolidayScheme withEffectiveDate(LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * The holiday schemes' max carry over days
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCarryOverDays")
    public Double maxCarryOverDays;

    public HolidaySchemeHolidayScheme withMaxCarryOverDays(Double maxCarryOverDays) {
        this.maxCarryOverDays = maxCarryOverDays;
        return this;
    }
    
    /**
     * The holiday schemes' next revision date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("NextRevisionDate")
    public LocalDate nextRevisionDate;

    public HolidaySchemeHolidayScheme withNextRevisionDate(LocalDate nextRevisionDate) {
        this.nextRevisionDate = nextRevisionDate;
        return this;
    }
    
    /**
     * The holiday schemes' offset payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffsetPayment")
    public Boolean offsetPayment;

    public HolidaySchemeHolidayScheme withOffsetPayment(Boolean offsetPayment) {
        this.offsetPayment = offsetPayment;
        return this;
    }
    
    /**
     * The holiday schemes' revision
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Revision")
    public Integer revision;

    public HolidaySchemeHolidayScheme withRevision(Integer revision) {
        this.revision = revision;
        return this;
    }
    
    /**
     * The holiday schemes' scheme ceased date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("SchemeCeasedDate")
    public LocalDate schemeCeasedDate;

    public HolidaySchemeHolidayScheme withSchemeCeasedDate(LocalDate schemeCeasedDate) {
        this.schemeCeasedDate = schemeCeasedDate;
        return this;
    }
    
    /**
     * The holiday schemes' scheme key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemeKey")
    public String schemeKey;

    public HolidaySchemeHolidayScheme withSchemeKey(String schemeKey) {
        this.schemeKey = schemeKey;
        return this;
    }
    
    /**
     * The holiday schemes' scheme name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemeName")
    public String schemeName;

    public HolidaySchemeHolidayScheme withSchemeName(String schemeName) {
        this.schemeName = schemeName;
        return this;
    }
    
    /**
     * The holiday schemes' year start day
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YearStartDay")
    public Integer yearStartDay;

    public HolidaySchemeHolidayScheme withYearStartDay(Integer yearStartDay) {
        this.yearStartDay = yearStartDay;
        return this;
    }
    
    /**
     * The holiday schemes' year start month
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YearStartMonth")
    public Integer yearStartMonth;

    public HolidaySchemeHolidayScheme withYearStartMonth(Integer yearStartMonth) {
        this.yearStartMonth = yearStartMonth;
        return this;
    }
    
    public HolidaySchemeHolidayScheme(){}
}
