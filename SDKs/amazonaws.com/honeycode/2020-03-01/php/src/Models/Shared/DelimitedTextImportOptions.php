<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DelimitedTextImportOptions -  An object that contains the options relating to parsing delimited text as part of an import request. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DelimitedTextImportOptions
{
	#[\JMS\Serializer\Annotation\SerializedName('dataCharacterEncoding')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ImportDataCharacterEncodingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImportDataCharacterEncodingEnum $dataCharacterEncoding = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('delimiter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $delimiter;
    
	#[\JMS\Serializer\Annotation\SerializedName('hasHeaderRow')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasHeaderRow = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ignoreEmptyRows')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreEmptyRows = null;
    
	public function __construct()
	{
		$this->dataCharacterEncoding = null;
		$this->delimiter = "";
		$this->hasHeaderRow = null;
		$this->ignoreEmptyRows = null;
	}
}
