"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutesConfigDump = void 0;
var utils_1 = require("../../../internal/utils");
var dynamicrouteconfig_1 = require("./dynamicrouteconfig");
var staticrouteconfig_1 = require("./staticrouteconfig");
var class_transformer_1 = require("class-transformer");
/**
 * Envoy's RDS implementation fills this message with all currently loaded routes, as described by their RouteConfiguration objects. Static routes that are either defined in the bootstrap configuration or defined inline while configuring listeners are separated from those configured dynamically via RDS. Route configuration information can be used to recreate an Envoy configuration by populating all routes as static routes or by returning them in RDS responses.
 */
var RoutesConfigDump = /** @class */ (function (_super) {
    __extends(RoutesConfigDump, _super);
    function RoutesConfigDump() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dynamicrouteconfig_1.DynamicRouteConfig }),
        (0, class_transformer_1.Expose)({ name: "dynamicRouteConfigs" }),
        (0, class_transformer_1.Type)(function () { return dynamicrouteconfig_1.DynamicRouteConfig; }),
        __metadata("design:type", Array)
    ], RoutesConfigDump.prototype, "dynamicRouteConfigs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: staticrouteconfig_1.StaticRouteConfig }),
        (0, class_transformer_1.Expose)({ name: "staticRouteConfigs" }),
        (0, class_transformer_1.Type)(function () { return staticrouteconfig_1.StaticRouteConfig; }),
        __metadata("design:type", Array)
    ], RoutesConfigDump.prototype, "staticRouteConfigs", void 0);
    return RoutesConfigDump;
}(utils_1.SpeakeasyBase));
exports.RoutesConfigDump = RoutesConfigDump;
