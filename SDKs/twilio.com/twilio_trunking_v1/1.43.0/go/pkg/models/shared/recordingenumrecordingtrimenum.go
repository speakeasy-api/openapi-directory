// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecordingEnumRecordingTrimEnum string

const (
	RecordingEnumRecordingTrimEnumTrimSilence RecordingEnumRecordingTrimEnum = "trim-silence"
	RecordingEnumRecordingTrimEnumDoNotTrim   RecordingEnumRecordingTrimEnum = "do-not-trim"
)

func (e RecordingEnumRecordingTrimEnum) ToPointer() *RecordingEnumRecordingTrimEnum {
	return &e
}

func (e *RecordingEnumRecordingTrimEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "trim-silence":
		fallthrough
	case "do-not-trim":
		*e = RecordingEnumRecordingTrimEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordingEnumRecordingTrimEnum: %v", v)
	}
}
