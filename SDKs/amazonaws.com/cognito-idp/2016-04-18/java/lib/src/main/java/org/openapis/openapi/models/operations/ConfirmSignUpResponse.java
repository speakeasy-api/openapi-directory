/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ConfirmSignUpResponse {
    /**
     * AliasExistsException
     */
    
    public Object aliasExistsException;

    public ConfirmSignUpResponse withAliasExistsException(Object aliasExistsException) {
        this.aliasExistsException = aliasExistsException;
        return this;
    }
    
    /**
     * CodeMismatchException
     */
    
    public Object codeMismatchException;

    public ConfirmSignUpResponse withCodeMismatchException(Object codeMismatchException) {
        this.codeMismatchException = codeMismatchException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> confirmSignUpResponse;

    public ConfirmSignUpResponse withConfirmSignUpResponse(java.util.Map<String, Object> confirmSignUpResponse) {
        this.confirmSignUpResponse = confirmSignUpResponse;
        return this;
    }
    
    
    public String contentType;

    public ConfirmSignUpResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * ExpiredCodeException
     */
    
    public Object expiredCodeException;

    public ConfirmSignUpResponse withExpiredCodeException(Object expiredCodeException) {
        this.expiredCodeException = expiredCodeException;
        return this;
    }
    
    /**
     * ForbiddenException
     */
    
    public Object forbiddenException;

    public ConfirmSignUpResponse withForbiddenException(Object forbiddenException) {
        this.forbiddenException = forbiddenException;
        return this;
    }
    
    /**
     * InternalErrorException
     */
    
    public Object internalErrorException;

    public ConfirmSignUpResponse withInternalErrorException(Object internalErrorException) {
        this.internalErrorException = internalErrorException;
        return this;
    }
    
    /**
     * InvalidLambdaResponseException
     */
    
    public Object invalidLambdaResponseException;

    public ConfirmSignUpResponse withInvalidLambdaResponseException(Object invalidLambdaResponseException) {
        this.invalidLambdaResponseException = invalidLambdaResponseException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public ConfirmSignUpResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public ConfirmSignUpResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * NotAuthorizedException
     */
    
    public Object notAuthorizedException;

    public ConfirmSignUpResponse withNotAuthorizedException(Object notAuthorizedException) {
        this.notAuthorizedException = notAuthorizedException;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public ConfirmSignUpResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    
    public Integer statusCode;

    public ConfirmSignUpResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ConfirmSignUpResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TooManyFailedAttemptsException
     */
    
    public Object tooManyFailedAttemptsException;

    public ConfirmSignUpResponse withTooManyFailedAttemptsException(Object tooManyFailedAttemptsException) {
        this.tooManyFailedAttemptsException = tooManyFailedAttemptsException;
        return this;
    }
    
    /**
     * TooManyRequestsException
     */
    
    public Object tooManyRequestsException;

    public ConfirmSignUpResponse withTooManyRequestsException(Object tooManyRequestsException) {
        this.tooManyRequestsException = tooManyRequestsException;
        return this;
    }
    
    /**
     * UnexpectedLambdaException
     */
    
    public Object unexpectedLambdaException;

    public ConfirmSignUpResponse withUnexpectedLambdaException(Object unexpectedLambdaException) {
        this.unexpectedLambdaException = unexpectedLambdaException;
        return this;
    }
    
    /**
     * UserLambdaValidationException
     */
    
    public Object userLambdaValidationException;

    public ConfirmSignUpResponse withUserLambdaValidationException(Object userLambdaValidationException) {
        this.userLambdaValidationException = userLambdaValidationException;
        return this;
    }
    
    /**
     * UserNotFoundException
     */
    
    public Object userNotFoundException;

    public ConfirmSignUpResponse withUserNotFoundException(Object userNotFoundException) {
        this.userNotFoundException = userNotFoundException;
        return this;
    }
    
    public ConfirmSignUpResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
