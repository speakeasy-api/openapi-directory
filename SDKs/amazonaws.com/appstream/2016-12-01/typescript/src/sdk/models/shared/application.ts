/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PlatformTypeEnum } from "./platformtypeenum";
import { S3Location } from "./s3location";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes an application in the application catalog.
 */
export class Application extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AppBlockArn" })
  appBlockArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IconS3Location" })
  @Type(() => S3Location)
  iconS3Location?: S3Location;

  @SpeakeasyMetadata()
  @Expose({ name: "IconURL" })
  iconURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceFamilies" })
  instanceFamilies?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LaunchParameters" })
  launchParameters?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LaunchPath" })
  launchPath?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Metadata" })
  metadata?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Platforms" })
  platforms?: PlatformTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "WorkingDirectory" })
  workingDirectory?: string;
}
