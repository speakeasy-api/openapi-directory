"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrivateFile:
    r"""OK. Article private file"""
    
    computed_md5: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computed_md5') }})
    r"""File computed md5"""  
    download_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url') }})
    r"""Url for file download"""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""File id"""  
    is_attached_to_public_version: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_attached_to_public_version') }})
    r"""True if the file is attached to a public item version"""  
    is_link_only: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_link_only') }})
    r"""True if file is hosted somewhere else"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""File name"""  
    preview_state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview_state') }})
    r"""File preview state"""  
    size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size') }})
    r"""File size"""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status for file upload"""  
    supplied_md5: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supplied_md5') }})
    r"""File supplied md5"""  
    upload_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upload_token') }})
    r"""Token for file upload"""  
    upload_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upload_url') }})
    r"""Upload url for file"""  
    viewer_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewer_type') }})
    r"""File viewer type"""  
    