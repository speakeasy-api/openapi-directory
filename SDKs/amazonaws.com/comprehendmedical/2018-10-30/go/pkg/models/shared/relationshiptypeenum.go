// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RelationshipTypeEnum string

const (
	RelationshipTypeEnumEvery           RelationshipTypeEnum = "EVERY"
	RelationshipTypeEnumWithDosage      RelationshipTypeEnum = "WITH_DOSAGE"
	RelationshipTypeEnumAdministeredVia RelationshipTypeEnum = "ADMINISTERED_VIA"
	RelationshipTypeEnumFor             RelationshipTypeEnum = "FOR"
	RelationshipTypeEnumNegative        RelationshipTypeEnum = "NEGATIVE"
	RelationshipTypeEnumOverlap         RelationshipTypeEnum = "OVERLAP"
	RelationshipTypeEnumDosage          RelationshipTypeEnum = "DOSAGE"
	RelationshipTypeEnumRouteOrMode     RelationshipTypeEnum = "ROUTE_OR_MODE"
	RelationshipTypeEnumForm            RelationshipTypeEnum = "FORM"
	RelationshipTypeEnumFrequency       RelationshipTypeEnum = "FREQUENCY"
	RelationshipTypeEnumDuration        RelationshipTypeEnum = "DURATION"
	RelationshipTypeEnumStrength        RelationshipTypeEnum = "STRENGTH"
	RelationshipTypeEnumRate            RelationshipTypeEnum = "RATE"
	RelationshipTypeEnumAcuity          RelationshipTypeEnum = "ACUITY"
	RelationshipTypeEnumTestValue       RelationshipTypeEnum = "TEST_VALUE"
	RelationshipTypeEnumTestUnits       RelationshipTypeEnum = "TEST_UNITS"
	RelationshipTypeEnumTestUnit        RelationshipTypeEnum = "TEST_UNIT"
	RelationshipTypeEnumDirection       RelationshipTypeEnum = "DIRECTION"
	RelationshipTypeEnumSystemOrganSite RelationshipTypeEnum = "SYSTEM_ORGAN_SITE"
	RelationshipTypeEnumAmount          RelationshipTypeEnum = "AMOUNT"
)

func (e *RelationshipTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EVERY":
		fallthrough
	case "WITH_DOSAGE":
		fallthrough
	case "ADMINISTERED_VIA":
		fallthrough
	case "FOR":
		fallthrough
	case "NEGATIVE":
		fallthrough
	case "OVERLAP":
		fallthrough
	case "DOSAGE":
		fallthrough
	case "ROUTE_OR_MODE":
		fallthrough
	case "FORM":
		fallthrough
	case "FREQUENCY":
		fallthrough
	case "DURATION":
		fallthrough
	case "STRENGTH":
		fallthrough
	case "RATE":
		fallthrough
	case "ACUITY":
		fallthrough
	case "TEST_VALUE":
		fallthrough
	case "TEST_UNITS":
		fallthrough
	case "TEST_UNIT":
		fallthrough
	case "DIRECTION":
		fallthrough
	case "SYSTEM_ORGAN_SITE":
		fallthrough
	case "AMOUNT":
		*e = RelationshipTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RelationshipTypeEnum: %s", s)
	}
}
