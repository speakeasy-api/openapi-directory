// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartFHIRExportJobXAmzTargetEnum
type StartFHIRExportJobXAmzTargetEnum string

const (
	StartFHIRExportJobXAmzTargetEnumHealthLakeStartFhirExportJob StartFHIRExportJobXAmzTargetEnum = "HealthLake.StartFHIRExportJob"
)

func (e *StartFHIRExportJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HealthLake.StartFHIRExportJob":
		*e = StartFHIRExportJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartFHIRExportJobXAmzTargetEnum: %s", s)
	}
}

type StartFHIRExportJobRequest struct {
	StartFHIRExportJobRequest shared.StartFHIRExportJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                StartFHIRExportJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartFHIRExportJobResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartFHIRExportJobResponse *shared.StartFHIRExportJobResponse
	StatusCode                 int
	RawResponse                *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
