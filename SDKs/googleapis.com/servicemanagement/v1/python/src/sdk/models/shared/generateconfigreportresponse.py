"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import changereport as shared_changereport
from ..shared import diagnostic as shared_diagnostic
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GenerateConfigReportResponse:
    r"""Response message for GenerateConfigReport method."""
    
    change_reports: Optional[list[shared_changereport.ChangeReport]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changeReports'), 'exclude': lambda f: f is None }})
    r"""list of ChangeReport, each corresponding to comparison between two service configurations."""  
    diagnostics: Optional[list[shared_diagnostic.Diagnostic]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diagnostics'), 'exclude': lambda f: f is None }})
    r"""Errors / Linter warnings associated with the service definition this report belongs to."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of the service configuration this report belongs to."""  
    service_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceName'), 'exclude': lambda f: f is None }})
    r"""Name of the service this report belongs to."""  
    