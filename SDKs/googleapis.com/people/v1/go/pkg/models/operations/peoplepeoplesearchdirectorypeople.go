// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PeoplePeopleSearchDirectoryPeopleSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum string

const (
	PeoplePeopleSearchDirectoryPeopleMergeSourcesEnumDirectoryMergeSourceTypeUnspecified PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum = "DIRECTORY_MERGE_SOURCE_TYPE_UNSPECIFIED"
	PeoplePeopleSearchDirectoryPeopleMergeSourcesEnumDirectoryMergeSourceTypeContact     PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum = "DIRECTORY_MERGE_SOURCE_TYPE_CONTACT"
)

func (e *PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DIRECTORY_MERGE_SOURCE_TYPE_UNSPECIFIED":
		fallthrough
	case "DIRECTORY_MERGE_SOURCE_TYPE_CONTACT":
		*e = PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum: %s", s)
	}
}

type PeoplePeopleSearchDirectoryPeopleSourcesEnum string

const (
	PeoplePeopleSearchDirectoryPeopleSourcesEnumDirectorySourceTypeUnspecified   PeoplePeopleSearchDirectoryPeopleSourcesEnum = "DIRECTORY_SOURCE_TYPE_UNSPECIFIED"
	PeoplePeopleSearchDirectoryPeopleSourcesEnumDirectorySourceTypeDomainContact PeoplePeopleSearchDirectoryPeopleSourcesEnum = "DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT"
	PeoplePeopleSearchDirectoryPeopleSourcesEnumDirectorySourceTypeDomainProfile PeoplePeopleSearchDirectoryPeopleSourcesEnum = "DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE"
)

func (e *PeoplePeopleSearchDirectoryPeopleSourcesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DIRECTORY_SOURCE_TYPE_UNSPECIFIED":
		fallthrough
	case "DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT":
		fallthrough
	case "DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE":
		*e = PeoplePeopleSearchDirectoryPeopleSourcesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PeoplePeopleSearchDirectoryPeopleSourcesEnum: %s", s)
	}
}

type PeoplePeopleSearchDirectoryPeopleRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Optional. Additional data to merge into the directory sources if they are connected through verified join keys such as email addresses or phone numbers.
	MergeSources []PeoplePeopleSearchDirectoryPeopleMergeSourcesEnum `queryParam:"style=form,explode=true,name=mergeSources"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Optional. The number of people to include in the response. Valid values are between 1 and 500, inclusive. Defaults to 100 if not set or set to 0.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Optional. A page token, received from a previous response `next_page_token`. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchDirectoryPeople` must match the first call that provided the page token.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Required. Prefix query that matches fields in the person. Does NOT use the read_mask for determining what fields to match.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Required. A field mask to restrict which fields on each person are returned. Multiple fields can be specified by separating them with commas. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined
	ReadMask *string `queryParam:"style=form,explode=true,name=readMask"`
	// Required. Directory sources to return.
	Sources []PeoplePeopleSearchDirectoryPeopleSourcesEnum `queryParam:"style=form,explode=true,name=sources"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type PeoplePeopleSearchDirectoryPeopleResponse struct {
	ContentType string
	// Successful response
	SearchDirectoryPeopleResponse *shared.SearchDirectoryPeopleResponse
	StatusCode                    int
	RawResponse                   *http.Response
}
