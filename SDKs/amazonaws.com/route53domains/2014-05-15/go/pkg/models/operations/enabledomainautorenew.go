// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EnableDomainAutoRenewXAmzTargetEnum
type EnableDomainAutoRenewXAmzTargetEnum string

const (
	EnableDomainAutoRenewXAmzTargetEnumRoute53DomainsV20140515EnableDomainAutoRenew EnableDomainAutoRenewXAmzTargetEnum = "Route53Domains_v20140515.EnableDomainAutoRenew"
)

func (e *EnableDomainAutoRenewXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53Domains_v20140515.EnableDomainAutoRenew":
		*e = EnableDomainAutoRenewXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableDomainAutoRenewXAmzTargetEnum: %s", s)
	}
}

type EnableDomainAutoRenewHeaders struct {
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        EnableDomainAutoRenewXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type EnableDomainAutoRenewRequest struct {
	Headers EnableDomainAutoRenewHeaders
	Request shared.EnableDomainAutoRenewRequest `request:"mediaType=application/json"`
}

type EnableDomainAutoRenewResponse struct {
	ContentType string
	// Success
	EnableDomainAutoRenewResponse map[string]interface{}
	// InvalidInput
	InvalidInput interface{}
	StatusCode   int
	RawResponse  *http.Response
	// TLDRulesViolation
	TLDRulesViolation interface{}
	// UnsupportedTLD
	UnsupportedTLD interface{}
}
