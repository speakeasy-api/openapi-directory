<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudVisionV1p1beta1ProductSearchParams - Parameters for a product search request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudVisionV1p1beta1ProductSearchParams
{
    /**
     * A bounding polygon for the detected image annotation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p1beta1BoundingPoly $boundingPoly
     */
	#[\JMS\Serializer\Annotation\SerializedName('boundingPoly')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p1beta1BoundingPoly')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudVisionV1p1beta1BoundingPoly $boundingPoly = null;
    
    /**
     * The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An '=' should be used to connect the key and value. For example, "(color = red OR color = blue) AND brand = Google" is acceptable, but "(color = red OR brand = Google)" is not acceptable. "color: red" is not acceptable because it uses a ':' instead of an '='.
     * 
     * @var ?string $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filter = null;
    
    /**
     * The list of product categories to search in. Currently, we only consider the first category, and either "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1", or "general-v1" should be specified. The legacy categories "homegoods", "apparel", and "toys" are still supported but will be deprecated. For new products, please use "homegoods-v2", "apparel-v2", or "toys-v2" for better product search accuracy. It is recommended to migrate existing products to these categories as well.
     * 
     * @var ?array<string> $productCategories
     */
	#[\JMS\Serializer\Annotation\SerializedName('productCategories')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productCategories = null;
    
    /**
     * The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.
     * 
     * @var ?string $productSet
     */
	#[\JMS\Serializer\Annotation\SerializedName('productSet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productSet = null;
    
	public function __construct()
	{
		$this->boundingPoly = null;
		$this->filter = null;
		$this->productCategories = null;
		$this->productSet = null;
	}
}
