/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The query expression to specify the key to sort search results.
 */
export class CatalogQuerySortedAttribute extends SpeakeasyBase {
  /**
   * The attribute whose value is used as the sort key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attribute_name" })
  attributeName: string;

  /**
   * The first attribute value to be returned by the query. Ascending sorts will return only
   *
   * @remarks
   * objects with this value or greater, while descending sorts will return only objects with this value
   * or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "initial_attribute_value" })
  initialAttributeValue?: string;

  /**
   * The desired sort order, `"ASC"` (ascending) or `"DESC"` (descending).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort_order" })
  sortOrder?: string;
}
