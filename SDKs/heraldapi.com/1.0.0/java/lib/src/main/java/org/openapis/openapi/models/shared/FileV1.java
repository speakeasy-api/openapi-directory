/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * FileV1 - Details for a specific file.
 */
public class FileV1 {
    /**
     * The date when the file was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("created_at")
    public LocalDate createdAt;

    public FileV1 withCreatedAt(LocalDate createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * A filename for the file, can be used when saving a file to a filesystem.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_name")
    public String fileName;

    public FileV1 withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * The format of the file returned (e.g., csv, pdf, jpg, or png).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    public FileV1FormatEnum format;

    public FileV1 withFormat(FileV1FormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * id\u00a0for a specific file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public FileV1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The size of the file contents in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public FileV1 withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * The status of the file. If the status is\u00a0`deleted`, you can no longer get a link to access the contents of the file using\u00a0`/files/{file_id}/temporary_link`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public FileV1StatusEnum status;

    public FileV1 withStatus(FileV1StatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Text for the file that can be shown on screen.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public FileV1 withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The type of file defined by Herald to distinguish between multiple files, such as `quote_summary` or `policy_specimen`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public FileV1TypeEnum type;

    public FileV1 withType(FileV1TypeEnum type) {
        this.type = type;
        return this;
    }
    
    public FileV1(){}
}
