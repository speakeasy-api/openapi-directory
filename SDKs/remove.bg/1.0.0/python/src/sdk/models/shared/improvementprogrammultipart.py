"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from typing import Optional


@dataclasses.dataclass
class ImprovementProgramMultipartImageFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    image_file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'image_file' }})  
    

@dataclasses.dataclass
class ImprovementProgramMultipart:
    
    image_file: Optional[ImprovementProgramMultipartImageFile] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})
    r"""Source image file (binary). (If this parameter is present, the other image source parameters must be empty.)"""  
    image_file_b64: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'image_file_b64' }})
    r"""Source image file (base64-encoded string). (If this parameter is present, the other image source parameters must be empty.)"""  
    image_filename: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'image_filename' }})
    r"""Filename of the image, if not provided it will be autodetected form the submitted data."""  
    image_url: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'image_url' }})
    r"""Source image URL. (If this parameter is present, the other image source parameters must be empty.)"""  
    tag: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'tag' }})
    r"""Images with the same tag are grouped together."""  
    