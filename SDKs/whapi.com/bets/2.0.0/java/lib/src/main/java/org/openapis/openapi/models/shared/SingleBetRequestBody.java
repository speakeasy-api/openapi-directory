/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SingleBetRequestBody - Single bet request body
 */
public class SingleBetRequestBody {
    /**
     * The delayed bet identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delayedBetId")
    public String delayedBetId;

    public SingleBetRequestBody withDelayedBetId(String delayedBetId) {
        this.delayedBetId = delayedBetId;
        return this;
    }
    
    /**
     * The ID number of the free bet token if used in conjunction with this bet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("freeBetId")
    public String freeBetId;

    public SingleBetRequestBody withFreeBetId(String freeBetId) {
        this.freeBetId = freeBetId;
        return this;
    }
    
    /**
     * When the odds are shown in vulgar fractions this is the denominator of the fraction. For example: 2 in 5/2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceDen")
    public Long priceDen;

    public SingleBetRequestBody withPriceDen(Long priceDen) {
        this.priceDen = priceDen;
        return this;
    }
    
    /**
     * When the odds are shown in vulgar fractions this is the numerator of the fraction. For example: 5 in 5/2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceNum")
    public Long priceNum;

    public SingleBetRequestBody withPriceNum(Long priceNum) {
        this.priceNum = priceNum;
        return this;
    }
    
    /**
     * The type of price taken by the customer when the bet is made. Can be one of the following: L - Live Fixed price, S - Starting price - Horse and Greyhound racing or G - Guaranteed best price.
     */
    @JsonProperty("priceType")
    public String priceType;

    public SingleBetRequestBody withPriceType(String priceType) {
        this.priceType = priceType;
        return this;
    }
    
    /**
     * The unique ID for the selection of the bet
     */
    @JsonProperty("selectionId")
    public String selectionId;

    public SingleBetRequestBody withSelectionId(String selectionId) {
        this.selectionId = selectionId;
        return this;
    }
    
    /**
     * The amount of the stake placed on the bet
     */
    @JsonProperty("stake")
    public Double stake;

    public SingleBetRequestBody withStake(Double stake) {
        this.stake = stake;
        return this;
    }
    
    /**
     * The type of bet placed. Can be one of the following: W - Win or E- EachWay
     */
    @JsonProperty("type")
    public String type;

    public SingleBetRequestBody withType(String type) {
        this.type = type;
        return this;
    }
    
    public SingleBetRequestBody(@JsonProperty("priceType") String priceType, @JsonProperty("selectionId") String selectionId, @JsonProperty("stake") Double stake, @JsonProperty("type") String type) {
        this.priceType = priceType;
        this.selectionId = selectionId;
        this.stake = stake;
        this.type = type;
  }
}
