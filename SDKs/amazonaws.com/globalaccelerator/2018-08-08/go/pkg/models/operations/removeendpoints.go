// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RemoveEndpointsXAmzTargetEnum
type RemoveEndpointsXAmzTargetEnum string

const (
	RemoveEndpointsXAmzTargetEnumGlobalAcceleratorV20180706RemoveEndpoints RemoveEndpointsXAmzTargetEnum = "GlobalAccelerator_V20180706.RemoveEndpoints"
)

func (e RemoveEndpointsXAmzTargetEnum) ToPointer() *RemoveEndpointsXAmzTargetEnum {
	return &e
}

func (e *RemoveEndpointsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GlobalAccelerator_V20180706.RemoveEndpoints":
		*e = RemoveEndpointsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveEndpointsXAmzTargetEnum: %v", v)
	}
}

type RemoveEndpointsRequest struct {
	RemoveEndpointsRequest shared.RemoveEndpointsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             RemoveEndpointsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RemoveEndpointsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// EndpointGroupNotFoundException
	EndpointGroupNotFoundException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// TransactionInProgressException
	TransactionInProgressException interface{}
}
