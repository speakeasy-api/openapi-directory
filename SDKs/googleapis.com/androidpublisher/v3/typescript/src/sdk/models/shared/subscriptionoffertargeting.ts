/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AcquisitionTargetingRule } from "./acquisitiontargetingrule";
import { UpgradeTargetingRule } from "./upgradetargetingrule";
import { Expose, Type } from "class-transformer";

/**
 * Defines the rule a user needs to satisfy to receive this offer.
 */
export class SubscriptionOfferTargeting extends SpeakeasyBase {
  /**
   * Represents a targeting rule of the form: User never had {scope} before.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acquisitionRule" })
  @Type(() => AcquisitionTargetingRule)
  acquisitionRule?: AcquisitionTargetingRule;

  /**
   * Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}].
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgradeRule" })
  @Type(() => UpgradeTargetingRule)
  upgradeRule?: UpgradeTargetingRule;
}
