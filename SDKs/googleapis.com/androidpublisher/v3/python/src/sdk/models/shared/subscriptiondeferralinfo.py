"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionDeferralInfo:
    r"""A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time."""
    
    desired_expiry_time_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desiredExpiryTimeMillis'), 'exclude': lambda f: f is None }})
    r"""The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription."""  
    expected_expiry_time_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expectedExpiryTimeMillis'), 'exclude': lambda f: f is None }})
    r"""The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur."""  
    