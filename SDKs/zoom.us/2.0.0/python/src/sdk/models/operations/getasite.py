"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetASiteSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetASiteRequest:
    
    site_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'siteId', 'style': 'simple', 'explode': False }})
    r"""Unique Identifier of the Site."""  
    

@dataclasses.dataclass
class GetASite200ApplicationXMLCountry:
    r"""Site country"""
    
    code: Optional[str] = dataclasses.field(default=None)
    r"""Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the country."""  
    

@dataclasses.dataclass
class GetASite200ApplicationXMLMainAutoReceptionist:
    r"""[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site."""
    
    extension_id: Optional[str] = dataclasses.field(default=None)
    r"""Extension ID"""  
    extension_number: Optional[int] = dataclasses.field(default=None)
    r"""Extension number"""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the Auto Receptionist."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the auto receptionist."""  
    

@dataclasses.dataclass
class GetASite200ApplicationXMLShortExtension:
    r"""Short extension of the phone site."""
    
    length: Optional[int] = dataclasses.field(default=None)
    r"""The length of short extension number for the site."""  
    

@dataclasses.dataclass
class GetASite200ApplicationXML:
    r"""**HTTP Status Code:** `200`<br>
    Site information retrieved successfully.
    """
    
    country: Optional[GetASite200ApplicationXMLCountry] = dataclasses.field(default=None)
    r"""Site country"""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Site ID. Unique Identifier of the site."""  
    main_auto_receptionist: Optional[GetASite200ApplicationXMLMainAutoReceptionist] = dataclasses.field(default=None)
    r"""[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the Site."""  
    short_extension: Optional[GetASite200ApplicationXMLShortExtension] = dataclasses.field(default=None)
    r"""Short extension of the phone site."""  
    site_code: Optional[int] = dataclasses.field(default=None)
    r"""[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetASite200ApplicationJSONCountry:
    r"""Site country"""
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the country."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetASite200ApplicationJSONMainAutoReceptionist:
    r"""[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site."""
    
    extension_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_id'), 'exclude': lambda f: f is None }})
    r"""Extension ID"""  
    extension_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the Auto Receptionist."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the auto receptionist."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetASite200ApplicationJSONShortExtension:
    r"""Short extension of the phone site."""
    
    length: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('length'), 'exclude': lambda f: f is None }})
    r"""The length of short extension number for the site."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetASite200ApplicationJSON:
    r"""**HTTP Status Code:** `200`<br>
    Site information retrieved successfully.
    """
    
    country: Optional[GetASite200ApplicationJSONCountry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Site country"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Site ID. Unique Identifier of the site."""  
    main_auto_receptionist: Optional[GetASite200ApplicationJSONMainAutoReceptionist] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('main_auto_receptionist'), 'exclude': lambda f: f is None }})
    r"""[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Site."""  
    short_extension: Optional[GetASite200ApplicationJSONShortExtension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('short_extension'), 'exclude': lambda f: f is None }})
    r"""Short extension of the phone site."""  
    site_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site_code'), 'exclude': lambda f: f is None }})
    r"""[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)"""  
    

@dataclasses.dataclass
class GetASiteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_a_site_200_application_json_object: Optional[GetASite200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    Site information retrieved successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    