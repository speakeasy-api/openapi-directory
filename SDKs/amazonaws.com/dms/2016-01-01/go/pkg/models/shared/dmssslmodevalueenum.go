// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DmsSslModeValueEnum string

const (
	DmsSslModeValueEnumNone       DmsSslModeValueEnum = "none"
	DmsSslModeValueEnumRequire    DmsSslModeValueEnum = "require"
	DmsSslModeValueEnumVerifyCa   DmsSslModeValueEnum = "verify-ca"
	DmsSslModeValueEnumVerifyFull DmsSslModeValueEnum = "verify-full"
)

func (e *DmsSslModeValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "require":
		fallthrough
	case "verify-ca":
		fallthrough
	case "verify-full":
		*e = DmsSslModeValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DmsSslModeValueEnum: %s", s)
	}
}
