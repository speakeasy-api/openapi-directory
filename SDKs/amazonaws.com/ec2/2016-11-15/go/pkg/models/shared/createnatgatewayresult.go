// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateNatGatewayResultNatGatewayConnectivityTypeEnum - Indicates whether the NAT gateway supports public or private connectivity.
type CreateNatGatewayResultNatGatewayConnectivityTypeEnum string

const (
	CreateNatGatewayResultNatGatewayConnectivityTypeEnumPrivate CreateNatGatewayResultNatGatewayConnectivityTypeEnum = "private"
	CreateNatGatewayResultNatGatewayConnectivityTypeEnumPublic  CreateNatGatewayResultNatGatewayConnectivityTypeEnum = "public"
)

func (e *CreateNatGatewayResultNatGatewayConnectivityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private":
		fallthrough
	case "public":
		*e = CreateNatGatewayResultNatGatewayConnectivityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNatGatewayResultNatGatewayConnectivityTypeEnum: %s", s)
	}
}

// CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum - The address status.
type CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum string

const (
	CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnumAssigning      CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = "assigning"
	CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnumUnassigning    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = "unassigning"
	CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnumAssociating    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = "associating"
	CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnumDisassociating CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = "disassociating"
	CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnumSucceeded      CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = "succeeded"
	CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnumFailed         CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = "failed"
)

func (e *CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "assigning":
		fallthrough
	case "unassigning":
		fallthrough
	case "associating":
		fallthrough
	case "disassociating":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		*e = CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum: %s", s)
	}
}

// CreateNatGatewayResultNatGatewayNatGatewayAddresses - Describes the IP addresses and network interface associated with a NAT gateway.
type CreateNatGatewayResultNatGatewayNatGatewayAddresses struct {
	AllocationID       *string
	AssociationID      *string
	FailureMessage     *string
	IsPrimary          *bool
	NetworkInterfaceID *string
	PrivateIP          *string
	PublicIP           *string
	Status             *CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum
}

// CreateNatGatewayResultNatGatewayProvisionedBandwidth - Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
type CreateNatGatewayResultNatGatewayProvisionedBandwidth struct {
	ProvisionTime *time.Time
	Provisioned   *string
	RequestTime   *time.Time
	Requested     *string
	Status        *string
}

// CreateNatGatewayResultNatGatewayStateEnum - <p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>
type CreateNatGatewayResultNatGatewayStateEnum string

const (
	CreateNatGatewayResultNatGatewayStateEnumPending   CreateNatGatewayResultNatGatewayStateEnum = "pending"
	CreateNatGatewayResultNatGatewayStateEnumFailed    CreateNatGatewayResultNatGatewayStateEnum = "failed"
	CreateNatGatewayResultNatGatewayStateEnumAvailable CreateNatGatewayResultNatGatewayStateEnum = "available"
	CreateNatGatewayResultNatGatewayStateEnumDeleting  CreateNatGatewayResultNatGatewayStateEnum = "deleting"
	CreateNatGatewayResultNatGatewayStateEnumDeleted   CreateNatGatewayResultNatGatewayStateEnum = "deleted"
)

func (e *CreateNatGatewayResultNatGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "failed":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreateNatGatewayResultNatGatewayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNatGatewayResultNatGatewayStateEnum: %s", s)
	}
}

// CreateNatGatewayResultNatGatewayTags - Describes a tag.
type CreateNatGatewayResultNatGatewayTags struct {
	Key   *string
	Value *string
}

// CreateNatGatewayResultNatGateway - Information about the NAT gateway.
type CreateNatGatewayResultNatGateway struct {
	ConnectivityType     *CreateNatGatewayResultNatGatewayConnectivityTypeEnum
	CreateTime           *time.Time
	DeleteTime           *time.Time
	FailureCode          *string
	FailureMessage       *string
	NatGatewayAddresses  []CreateNatGatewayResultNatGatewayNatGatewayAddresses
	NatGatewayID         *string
	ProvisionedBandwidth *CreateNatGatewayResultNatGatewayProvisionedBandwidth
	State                *CreateNatGatewayResultNatGatewayStateEnum
	SubnetID             *string
	Tags                 []CreateNatGatewayResultNatGatewayTags
	VpcID                *string
}

// CreateNatGatewayResult - Success
type CreateNatGatewayResult struct {
	ClientToken *string
	NatGateway  *CreateNatGatewayResultNatGateway
}
