// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum string

const (
	GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnumThreatTypeUnspecified             GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum = "THREAT_TYPE_UNSPECIFIED"
	GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnumMalware                           GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum = "MALWARE"
	GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnumSocialEngineering                 GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum = "SOCIAL_ENGINEERING"
	GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnumUnwantedSoftware                  GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum = "UNWANTED_SOFTWARE"
	GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnumSocialEngineeringExtendedCoverage GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum = "SOCIAL_ENGINEERING_EXTENDED_COVERAGE"
)

func (e GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum) ToPointer() *GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum {
	return &e
}

func (e *GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THREAT_TYPE_UNSPECIFIED":
		fallthrough
	case "MALWARE":
		fallthrough
	case "SOCIAL_ENGINEERING":
		fallthrough
	case "UNWANTED_SOFTWARE":
		fallthrough
	case "SOCIAL_ENGINEERING_EXTENDED_COVERAGE":
		*e = GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum: %v", v)
	}
}

// GoogleCloudWebriskV1SearchHashesResponseThreatHash - Contains threat information on a matching hash.
type GoogleCloudWebriskV1SearchHashesResponseThreatHash struct {
	// The cache lifetime for the returned match. Clients must not cache this response past this timestamp to avoid false positives.
	ExpireTime *string `json:"expireTime,omitempty"`
	// A 32 byte SHA256 hash. This field is in binary format. For JSON requests, hashes are base64-encoded.
	Hash *string `json:"hash,omitempty"`
	// The ThreatList this threat belongs to. This must contain at least one entry.
	ThreatTypes []GoogleCloudWebriskV1SearchHashesResponseThreatHashThreatTypesEnum `json:"threatTypes,omitempty"`
}
