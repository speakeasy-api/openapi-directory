/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SizeConstraint - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Specifies a constraint on the size of a part of the web request. AWS WAF uses the &lt;code&gt;Size&lt;/code&gt;, &lt;code&gt;ComparisonOperator&lt;/code&gt;, and &lt;code&gt;FieldToMatch&lt;/code&gt; to build an expression in the form of "&lt;code&gt;Size&lt;/code&gt; &lt;code&gt;ComparisonOperator&lt;/code&gt; size in bytes of &lt;code&gt;FieldToMatch&lt;/code&gt;". If that expression is true, the &lt;code&gt;SizeConstraint&lt;/code&gt; is considered to match.&lt;/p&gt;
 */
public class SizeConstraint {
    @JsonProperty("ComparisonOperator")
    public ComparisonOperatorEnum comparisonOperator;

    public SizeConstraint withComparisonOperator(ComparisonOperatorEnum comparisonOperator) {
        this.comparisonOperator = comparisonOperator;
        return this;
    }
    
    @JsonProperty("FieldToMatch")
    public FieldToMatch fieldToMatch;

    public SizeConstraint withFieldToMatch(FieldToMatch fieldToMatch) {
        this.fieldToMatch = fieldToMatch;
        return this;
    }
    
    @JsonProperty("Size")
    public Long size;

    public SizeConstraint withSize(Long size) {
        this.size = size;
        return this;
    }
    
    @JsonProperty("TextTransformation")
    public TextTransformationEnum textTransformation;

    public SizeConstraint withTextTransformation(TextTransformationEnum textTransformation) {
        this.textTransformation = textTransformation;
        return this;
    }
    
    public SizeConstraint(@JsonProperty("ComparisonOperator") ComparisonOperatorEnum comparisonOperator, @JsonProperty("FieldToMatch") FieldToMatch fieldToMatch, @JsonProperty("Size") Long size, @JsonProperty("TextTransformation") TextTransformationEnum textTransformation) {
        this.comparisonOperator = comparisonOperator;
        this.fieldToMatch = fieldToMatch;
        this.size = size;
        this.textTransformation = textTransformation;
  }
}
