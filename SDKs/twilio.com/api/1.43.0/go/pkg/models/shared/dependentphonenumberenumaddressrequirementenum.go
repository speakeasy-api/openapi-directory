// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DependentPhoneNumberEnumAddressRequirementEnum string

const (
	DependentPhoneNumberEnumAddressRequirementEnumNone    DependentPhoneNumberEnumAddressRequirementEnum = "none"
	DependentPhoneNumberEnumAddressRequirementEnumAny     DependentPhoneNumberEnumAddressRequirementEnum = "any"
	DependentPhoneNumberEnumAddressRequirementEnumLocal   DependentPhoneNumberEnumAddressRequirementEnum = "local"
	DependentPhoneNumberEnumAddressRequirementEnumForeign DependentPhoneNumberEnumAddressRequirementEnum = "foreign"
)

func (e DependentPhoneNumberEnumAddressRequirementEnum) ToPointer() *DependentPhoneNumberEnumAddressRequirementEnum {
	return &e
}

func (e *DependentPhoneNumberEnumAddressRequirementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "any":
		fallthrough
	case "local":
		fallthrough
	case "foreign":
		*e = DependentPhoneNumberEnumAddressRequirementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DependentPhoneNumberEnumAddressRequirementEnum: %v", v)
	}
}
