// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateTemplateActionEnum
type GETCreateTemplateActionEnum string

const (
	GETCreateTemplateActionEnumCreateTemplate GETCreateTemplateActionEnum = "CreateTemplate"
)

func (e GETCreateTemplateActionEnum) ToPointer() *GETCreateTemplateActionEnum {
	return &e
}

func (e *GETCreateTemplateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateTemplate":
		*e = GETCreateTemplateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateTemplateActionEnum: %v", v)
	}
}

// GETCreateTemplateTemplate - The content of the email, composed of a subject line, an HTML part, and a text-only part.
type GETCreateTemplateTemplate struct {
	HTMLPart     *string `queryParam:"name=HtmlPart"`
	SubjectPart  *string `queryParam:"name=SubjectPart"`
	TemplateName string  `queryParam:"name=TemplateName"`
	TextPart     *string `queryParam:"name=TextPart"`
}

// GETCreateTemplateVersionEnum
type GETCreateTemplateVersionEnum string

const (
	GETCreateTemplateVersionEnumTwoThousandAndTen1201 GETCreateTemplateVersionEnum = "2010-12-01"
)

func (e GETCreateTemplateVersionEnum) ToPointer() *GETCreateTemplateVersionEnum {
	return &e
}

func (e *GETCreateTemplateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETCreateTemplateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateTemplateVersionEnum: %v", v)
	}
}

type GETCreateTemplateRequest struct {
	Action GETCreateTemplateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The content of the email, composed of a subject line, an HTML part, and a text-only part.
	Template          GETCreateTemplateTemplate    `queryParam:"style=form,explode=true,name=Template"`
	Version           GETCreateTemplateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
