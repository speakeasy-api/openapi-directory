/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GroupV2GetMembersOfGroupRequest {
    /**
     * Page number (starting with 1). Each page has a fixed size of 50 items per page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=currentpage")
    public Integer currentpage;

    public GroupV2GetMembersOfGroupRequest withCurrentpage(Integer currentpage) {
        this.currentpage = currentpage;
        return this;
    }
    
    /**
     * The ID of the group.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=groupId")
    public Long groupId;

    public GroupV2GetMembersOfGroupRequest withGroupId(Long groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * Filter out other member types. Use None for all members.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=memberType")
    public Integer memberType;

    public GroupV2GetMembersOfGroupRequest withMemberType(Integer memberType) {
        this.memberType = memberType;
        return this;
    }
    
    /**
     * The name fragment upon which a search should be executed for members with matching display or unique names.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nameSearch")
    public String nameSearch;

    public GroupV2GetMembersOfGroupRequest withNameSearch(String nameSearch) {
        this.nameSearch = nameSearch;
        return this;
    }
    
    public GroupV2GetMembersOfGroupRequest(@JsonProperty("currentpage") Integer currentpage, @JsonProperty("groupId") Long groupId) {
        this.currentpage = currentpage;
        this.groupId = groupId;
  }
}
