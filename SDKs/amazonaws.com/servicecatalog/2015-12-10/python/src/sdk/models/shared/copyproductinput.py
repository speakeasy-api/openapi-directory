"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import copyoption_enum as shared_copyoption_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CopyProductInput:
    
    idempotency_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IdempotencyToken') }})  
    source_product_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceProductArn') }})  
    accept_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceptLanguage'), 'exclude': lambda f: f is None }})  
    copy_options: Optional[list[shared_copyoption_enum.CopyOptionEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CopyOptions'), 'exclude': lambda f: f is None }})  
    source_provisioning_artifact_identifiers: Optional[list[dict[str, str]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceProvisioningArtifactIdentifiers'), 'exclude': lambda f: f is None }})  
    target_product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetProductId'), 'exclude': lambda f: f is None }})  
    target_product_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetProductName'), 'exclude': lambda f: f is None }})  
    