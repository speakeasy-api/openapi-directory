<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class V3StoppingPatternStop
{
    /**
     * Transport mode identifier
     * 
     * @var ?int $routeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('route_type')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $routeType = null;
    
    /**
     * Distance of stop from input location (in metres); returns 0 if no location is input
     * 
     * @var ?float $stopDistance
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_distance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $stopDistance = null;
    
    /**
     * Stop identifier
     * 
     * @var ?int $stopId
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stopId = null;
    
    /**
     * Landmark in proximity of stop
     * 
     * @var ?string $stopLandmark
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_landmark')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stopLandmark = null;
    
    /**
     * Geographic coordinate of latitude at stop
     * 
     * @var ?float $stopLatitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_latitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $stopLatitude = null;
    
    /**
     * Geographic coordinate of longitude at stop
     * 
     * @var ?float $stopLongitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_longitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $stopLongitude = null;
    
    /**
     * Name of stop
     * 
     * @var ?string $stopName
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stopName = null;
    
    /**
     * Sequence of the stop on the route/run; return 0 when route_id or run_id not specified. Order ascendingly by this field (when non zero) to get physical order (earliest first) of stops on the route_id/run_id.
     * 
     * @var ?int $stopSequence
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_sequence')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stopSequence = null;
    
    /**
     * suburb of stop
     * 
     * @var ?string $stopSuburb
     */
	#[\JMS\Serializer\Annotation\SerializedName('stop_suburb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stopSuburb = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('stop_ticket')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V3StopTicket')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V3StopTicket $stopTicket = null;
    
	public function __construct()
	{
		$this->routeType = null;
		$this->stopDistance = null;
		$this->stopId = null;
		$this->stopLandmark = null;
		$this->stopLatitude = null;
		$this->stopLongitude = null;
		$this->stopName = null;
		$this->stopSequence = null;
		$this->stopSuburb = null;
		$this->stopTicket = null;
	}
}
