// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CodespacesPreFlightWithRepoForAuthenticatedUserPathParams struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type CodespacesPreFlightWithRepoForAuthenticatedUserQueryParams struct {
	// An alternative IP for default location auto-detection, such as when proxying a request.
	ClientIP *string `queryParam:"style=form,explode=true,name=client_ip"`
	// The branch or commit to check for a default devcontainer path. If not specified, the default branch will be checked.
	Ref *string `queryParam:"style=form,explode=true,name=ref"`
}

type CodespacesPreFlightWithRepoForAuthenticatedUserRequest struct {
	PathParams  CodespacesPreFlightWithRepoForAuthenticatedUserPathParams
	QueryParams CodespacesPreFlightWithRepoForAuthenticatedUserQueryParams
}

type CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONDefaults struct {
	DevcontainerPath string `json:"devcontainer_path"`
	Location         string `json:"location"`
}

// CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSON - Response when a user is able to create codespaces from the repository.
type CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSON struct {
	// A GitHub user.
	BillableOwner *shared.SimpleUser                                                         `json:"billable_owner,omitempty"`
	Defaults      *CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONDefaults `json:"defaults,omitempty"`
}

type CodespacesPreFlightWithRepoForAuthenticatedUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Requires authentication
	BasicError *shared.BasicError
	// Response when a user is able to create codespaces from the repository.
	CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONObject *CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSON
}
