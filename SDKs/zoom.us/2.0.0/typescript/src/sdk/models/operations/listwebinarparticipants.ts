/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListWebinarParticipantsRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Unique identifier of the webinar. You can retrieve the value of this field by calling the [list webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars) API.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=webinarId",
  })
  webinarId: string;
}

export class ListWebinarParticipants200ApplicationXMLParticipants extends SpeakeasyBase {
  /**
   * Unique identifier of the participant.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the participant.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Email address of the participant.
   */
  @SpeakeasyMetadata()
  userEmail?: string;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Participants list returned.
 */
export class ListWebinarParticipants200ApplicationXML extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of pages returned for this request.
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The total number of records returned from a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: ListWebinarParticipants200ApplicationXMLParticipants,
  })
  participants?: ListWebinarParticipants200ApplicationXMLParticipants[];

  /**
   * The total number of records available across all pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

export class ListWebinarParticipants200ApplicationJSONParticipants extends SpeakeasyBase {
  /**
   * Unique identifier of the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Email address of the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_email" })
  userEmail?: string;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Participants list returned.
 */
export class ListWebinarParticipants200ApplicationJSON extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for this request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The total number of records returned from a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: ListWebinarParticipants200ApplicationJSONParticipants,
  })
  @Expose({ name: "participants" })
  @Type(() => ListWebinarParticipants200ApplicationJSONParticipants)
  participants?: ListWebinarParticipants200ApplicationJSONParticipants[];

  /**
   * The total number of records available across all pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListWebinarParticipantsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Participants list returned.
   */
  @SpeakeasyMetadata()
  listWebinarParticipants200ApplicationJSONObject?: ListWebinarParticipants200ApplicationJSON;
}
