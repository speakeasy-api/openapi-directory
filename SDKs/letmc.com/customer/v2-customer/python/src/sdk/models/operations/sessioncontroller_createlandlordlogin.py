"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class SessionControllerCreateLandlordLoginRequest:
    
    contact_details: str = dataclasses.field(metadata={'query_param': { 'field_name': 'contactDetails', 'style': 'form', 'explode': True }})
    r"""Contact details of the landlord"""  
    email: str = dataclasses.field(metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""The email address of the landlord"""  
    forename: str = dataclasses.field(metadata={'query_param': { 'field_name': 'forename', 'style': 'form', 'explode': True }})
    r"""The forename of the landlord"""  
    property_address: str = dataclasses.field(metadata={'query_param': { 'field_name': 'propertyAddress', 'style': 'form', 'explode': True }})
    r"""Address of the property linked to the landlord"""  
    short_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'shortName', 'style': 'simple', 'explode': False }})
    r"""The unique client short-name"""  
    surname: str = dataclasses.field(metadata={'query_param': { 'field_name': 'surname', 'style': 'form', 'explode': True }})
    r"""The surname of the landlord"""  
    title: str = dataclasses.field(metadata={'query_param': { 'field_name': 'title', 'style': 'form', 'explode': True }})
    r"""The title of the landlord"""  
    branch_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'branchID', 'style': 'form', 'explode': True }})
    r"""(Optional) The branch ID linked to the login. This will determine which in tray the request display in"""  
    

@dataclasses.dataclass
class SessionControllerCreateLandlordLoginResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    