/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ErrorChannelParamsInvalidParameters extends SpeakeasyBase {
  /**
   * Name of invalid parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Reason of failure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

/**
 * Invalid channel parameters
 */
export class ErrorChannelParams extends SpeakeasyBase {
  /**
   * Additional information about the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  /**
   * Internal Trace ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance: string;

  @SpeakeasyMetadata({ elemType: ErrorChannelParamsInvalidParameters })
  @Expose({ name: "invalid_parameters" })
  @Type(() => ErrorChannelParamsInvalidParameters)
  invalidParameters?: ErrorChannelParamsInvalidParameters[];

  /**
   * Generic error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * Link to error / remediation options
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
