// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type Location struct {
	// Represents a postal address in a country. The address format is based
	// on an [open-source library from Google](https://github.com/google/libaddressinput). For more information,
	// see [AddressValidationMetadata](https://github.com/google/libaddressinput/wiki/AddressValidationMetadata).
	// This format has dedicated fields for four address components: postal code,
	// locality (city), administrative district (state, prefecture, or province), and
	// sublocality (town or village). These components have dedicated fields in the
	// `Address` object because software sometimes behaves differently based on them.
	// For example, sales tax software may charge different amounts of sales tax
	// based on the postal code, and some software is only available in
	// certain states due to compliance reasons.
	//
	// For the remaining address components, the `Address` type provides the
	// `address_line_1` and `address_line_2` fields for free-form data entry.
	// These fields are free-form because the remaining address components have
	// too many variations around the world and typical software does not parse
	// these components. These fields enable users to enter anything they want.
	//
	// Note that, in the current implementation, all other `Address` type fields are blank.
	// These include `address_line_3`, `sublocality_2`, `sublocality_3`,
	// `administrative_district_level_2`, `administrative_district_level_3`,
	// `first_name`, `last_name`, and `organization`.
	//
	// When it comes to localization, the seller's language preferences
	// (see [Language preferences](https://developer.squareup.com/docs/locations-api#location-specific-and-seller-level-language-preferences))
	// are ignored for addresses. Even though Square products (such as Square Point of Sale
	// and the Seller Dashboard) mostly use a seller's language preference in
	// communication, when it comes to addresses, they will use English for a US address,
	// Japanese for an address in Japan, and so on.
	Address *Address `json:"address,omitempty"`
	// The email of the location.
	// This email is visible to the customers of the location.
	// For example, the email appears on customer receipts.
	// For example, `help&#64;squareup.com`.
	BusinessEmail *string `json:"business_email,omitempty"`
	// Represents the hours of operation for a business location.
	BusinessHours *BusinessHours `json:"business_hours,omitempty"`
	// The business name of the location
	// This is the name visible to the customers of the location.
	// For example, this name appears on customer receipts.
	BusinessName *string `json:"business_name,omitempty"`
	// The Square features that are enabled for the location.
	// See [LocationCapability](https://developer.squareup.com/reference/square_2021-08-18/enums/LocationCapability) for possible values.
	Capabilities []string `json:"capabilities,omitempty"`
	// Latitude and longitude coordinates.
	Coordinates *Coordinates `json:"coordinates,omitempty"`
	// The country of the location, in ISO 3166-1-alpha-2 format.
	//
	// See [Country](https://developer.squareup.com/reference/square_2021-08-18/enums/Country) for possible values.
	Country *string `json:"country,omitempty"`
	// The time when the location was created, in RFC 3339 format.
	// For more information, see [Working with Dates](https://developer.squareup.com/docs/build-basics/working-with-dates).
	CreatedAt *string `json:"created_at,omitempty"`
	// The currency used for all transactions at this location,
	// in ISO 4217 format.
	// See [Currency](https://developer.squareup.com/reference/square_2021-08-18/enums/Currency) for possible values.
	Currency *string `json:"currency,omitempty"`
	// The description of the location.
	Description *string `json:"description,omitempty"`
	// The Facebook profile URL of the location. The URL should begin with 'facebook.com/'. For example, `https://www.facebook.com/square`.
	FacebookURL *string `json:"facebook_url,omitempty"`
	// The URL of a full-format logo image for the location. The Seller must choose this logo in the
	// Seller dashboard (Receipts section) for the logo to appear on transactions (such as receipts, invoices)
	// that Square generates on behalf of the Seller. This image can have an aspect ratio of 2:1 or greater
	// and is recommended to be at least 1280x648 pixels.
	FullFormatLogoURL *string `json:"full_format_logo_url,omitempty"`
	// The Square-issued ID of the location.
	ID *string `json:"id,omitempty"`
	// The Instagram username of the location without the '&#64;' symbol. For example, `square`.
	InstagramUsername *string `json:"instagram_username,omitempty"`
	// The language associated with the location, in
	// [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).
	// For more information, see [Location language code](https://developer.squareup.com/docs/locations-api#location-language-code).
	LanguageCode *string `json:"language_code,omitempty"`
	// The URL of the logo image for the location. The Seller must choose this logo in the Seller
	// dashboard (Receipts section) for the logo to appear on transactions (such as receipts, invoices)
	// that Square generates on behalf of the Seller. This image should have an aspect ratio
	// close to 1:1 and is recommended to be at least 200x200 pixels.
	LogoURL *string `json:"logo_url,omitempty"`
	// The merchant category code (MCC) of the location, as standardized by ISO 18245.
	// The MCC describes the kind of goods or services sold at the location.
	Mcc *string `json:"mcc,omitempty"`
	// The ID of the merchant that owns the location.
	MerchantID *string `json:"merchant_id,omitempty"`
	// The name of the location.
	// This information appears in the dashboard as the nickname.
	// A location name must be unique within a seller account.
	Name *string `json:"name,omitempty"`
	// The phone number of the location in human readable format. For example, `+353 80 0 098 8099`.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// The URL of the Point of Sale background image for the location.
	PosBackgroundURL *string `json:"pos_background_url,omitempty"`
	// The status of the location, either active or inactive.
	Status *string `json:"status,omitempty"`
	// The tax IDs that a Location is operating under.
	TaxIds *TaxIds `json:"tax_ids,omitempty"`
	// The [IANA Timezone](https://www.iana.org/time-zones) identifier for
	// the timezone of the location.
	Timezone *string `json:"timezone,omitempty"`
	// The Twitter username of the location without the '&#64;' symbol. For example, `Square`.
	TwitterUsername *string `json:"twitter_username,omitempty"`
	// The type of the location, either physical or mobile.
	Type *string `json:"type,omitempty"`
	// The website URL of the location.  For example, `https://squareup.com`.
	WebsiteURL *string `json:"website_url,omitempty"`
}
