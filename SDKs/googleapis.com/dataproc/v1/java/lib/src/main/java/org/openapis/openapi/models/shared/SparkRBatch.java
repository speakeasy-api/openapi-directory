/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SparkRBatch - A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.
 */
public class SparkRBatch {
    /**
     * Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archiveUris")
    public String[] archiveUris;
    public SparkRBatch withArchiveUris(String[] archiveUris) {
        this.archiveUris = archiveUris;
        return this;
    }
    
    /**
     * Optional. The arguments to pass to the Spark driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("args")
    public String[] args;
    public SparkRBatch withArgs(String[] args) {
        this.args = args;
        return this;
    }
    
    /**
     * Optional. HCFS URIs of files to be placed in the working directory of each executor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileUris")
    public String[] fileUris;
    public SparkRBatch withFileUris(String[] fileUris) {
        this.fileUris = fileUris;
        return this;
    }
    
    /**
     * Required. The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainRFileUri")
    public String mainRFileUri;
    public SparkRBatch withMainRFileUri(String mainRFileUri) {
        this.mainRFileUri = mainRFileUri;
        return this;
    }
    
}
