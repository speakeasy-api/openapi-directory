"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2assistqueryparameters as shared_googleclouddialogflowv2assistqueryparameters
from ..shared import googleclouddialogflowv2eventinput as shared_googleclouddialogflowv2eventinput
from ..shared import googleclouddialogflowv2outputaudioconfig as shared_googleclouddialogflowv2outputaudioconfig
from ..shared import googleclouddialogflowv2queryparameters as shared_googleclouddialogflowv2queryparameters
from ..shared import googleclouddialogflowv2textinput as shared_googleclouddialogflowv2textinput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2AnalyzeContentRequest:
    r"""The request message for Participants.AnalyzeContent."""
    
    assist_query_params: Optional[shared_googleclouddialogflowv2assistqueryparameters.GoogleCloudDialogflowV2AssistQueryParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistQueryParams'), 'exclude': lambda f: f is None }})
    r"""Represents the parameters of human assist query."""  
    cx_parameters: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cxParameters'), 'exclude': lambda f: f is None }})
    r"""Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent."""  
    event_input: Optional[shared_googleclouddialogflowv2eventinput.GoogleCloudDialogflowV2EventInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventInput'), 'exclude': lambda f: f is None }})
    r"""Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\\"Hello #welcome_event.name! What can I do for you today?\\"`."""  
    query_params: Optional[shared_googleclouddialogflowv2queryparameters.GoogleCloudDialogflowV2QueryParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryParams'), 'exclude': lambda f: f is None }})
    r"""Represents the parameters of the conversational query."""  
    reply_audio_config: Optional[shared_googleclouddialogflowv2outputaudioconfig.GoogleCloudDialogflowV2OutputAudioConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replyAudioConfig'), 'exclude': lambda f: f is None }})
    r"""Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent."""  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided."""  
    text_input: Optional[shared_googleclouddialogflowv2textinput.GoogleCloudDialogflowV2TextInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textInput'), 'exclude': lambda f: f is None }})
    r"""============================================================================ Auxiliary proto messages. Represents the natural language text to be processed."""  
    