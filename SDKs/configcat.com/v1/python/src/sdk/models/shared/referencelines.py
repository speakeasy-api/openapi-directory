"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import referenceline as shared_referenceline
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReferenceLines:
    
    file: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file') }})
    r"""The file's name in where the code reference has been found. (Appears on the ConfigCat Dashboard)"""  
    reference_line: shared_referenceline.ReferenceLine = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceLine') }})  
    file_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileUrl'), 'exclude': lambda f: f is None }})
    r"""The file's url. (Used to point to the file on the repository's website)"""  
    post_lines: Optional[list[shared_referenceline.ReferenceLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postLines'), 'exclude': lambda f: f is None }})
    r"""The lines after the actual reference line."""  
    pre_lines: Optional[list[shared_referenceline.ReferenceLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preLines'), 'exclude': lambda f: f is None }})
    r"""The lines before the actual reference line."""  
    