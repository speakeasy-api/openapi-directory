// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListTagsForResourceActionEnum
type POSTListTagsForResourceActionEnum string

const (
	POSTListTagsForResourceActionEnumListTagsForResource POSTListTagsForResourceActionEnum = "ListTagsForResource"
)

func (e *POSTListTagsForResourceActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListTagsForResource":
		*e = POSTListTagsForResourceActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListTagsForResourceActionEnum: %s", s)
	}
}

// POSTListTagsForResourceVersionEnum
type POSTListTagsForResourceVersionEnum string

const (
	POSTListTagsForResourceVersionEnumTwoThousandAndTen0801 POSTListTagsForResourceVersionEnum = "2010-08-01"
)

func (e *POSTListTagsForResourceVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-08-01":
		*e = POSTListTagsForResourceVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListTagsForResourceVersionEnum: %s", s)
	}
}

type POSTListTagsForResourceRequest struct {
	Action            POSTListTagsForResourceActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                             `request:"mediaType=text/xml"`
	Version           POSTListTagsForResourceVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListTagsForResourceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
