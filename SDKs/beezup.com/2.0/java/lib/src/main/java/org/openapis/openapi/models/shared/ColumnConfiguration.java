/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ColumnConfiguration - Indicates the configuration applied on the column (catalog or custom) during the importation process.
 */
public class ColumnConfiguration {
    /**
     * The BeezUP column name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beezUPColumnName")
    public String beezUPColumnName;
    public ColumnConfiguration withBeezUPColumnName(String beezUPColumnName) {
        this.beezUPColumnName = beezUPColumnName;
        return this;
    }
    
    /**
     * If the size of the value is greater than the limit we can truncate the value instead of failing...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canBeTruncated")
    public Boolean canBeTruncated;
    public ColumnConfiguration withCanBeTruncated(Boolean canBeTruncated) {
        this.canBeTruncated = canBeTruncated;
        return this;
    }
    
    /**
     * If non null, culture used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnCultureName")
    public String columnCultureName;
    public ColumnConfiguration withColumnCultureName(String columnCultureName) {
        this.columnCultureName = columnCultureName;
        return this;
    }
    
    /**
     * Data type of the column, will be used for parsing and for consolidation proces
     */
    @JsonProperty("columnDataType")
    public BeezUPCommonColumnDataTypeEnum columnDataType;
    public ColumnConfiguration withColumnDataType(BeezUPCommonColumnDataTypeEnum columnDataType) {
        this.columnDataType = columnDataType;
        return this;
    }
    
    /**
     * If non null, format used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnFormat")
    public String columnFormat;
    public ColumnConfiguration withColumnFormat(String columnFormat) {
        this.columnFormat = columnFormat;
        return this;
    }
    
    /**
     * Importance of the column
     */
    @JsonProperty("columnImportance")
    public BeezUPCommonColumnImportanceEnum columnImportance;
    public ColumnConfiguration withColumnImportance(BeezUPCommonColumnImportanceEnum columnImportance) {
        this.columnImportance = columnImportance;
        return this;
    }
    
    /**
     * Indicate the display group name where the column must be putted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayGroupName")
    public String displayGroupName;
    public ColumnConfiguration withDisplayGroupName(String displayGroupName) {
        this.displayGroupName = displayGroupName;
        return this;
    }
    
}
