"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import emailaddress as shared_emailaddress
from ..shared import name as shared_name
from ..shared import phonenumber as shared_phonenumber
from ..shared import photo as shared_photo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Person:
    r"""Object to represent a person."""
    
    email_addresses: Optional[list[shared_emailaddress.EmailAddress]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAddresses'), 'exclude': lambda f: f is None }})
    r"""The person's email addresses"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the person to provide information about. See [`People.get`](https://developers.google.com/people/api/rest/v1/people/get) from the Google People API."""  
    obfuscated_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obfuscatedId'), 'exclude': lambda f: f is None }})
    r"""Obfuscated ID of a person."""  
    person_names: Optional[list[shared_name.Name]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personNames'), 'exclude': lambda f: f is None }})
    r"""The person's name"""  
    phone_numbers: Optional[list[shared_phonenumber.PhoneNumber]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumbers'), 'exclude': lambda f: f is None }})
    r"""The person's phone numbers"""  
    photos: Optional[list[shared_photo.Photo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('photos'), 'exclude': lambda f: f is None }})
    r"""A person's read-only photo. A picture shown next to the person's name to help others recognize the person in search results."""  
    