"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum

class AbuseTicketTypeEnum(str, Enum):
    r"""The type of abuse being reported"""
    A_RECORD = 'A_RECORD'
    CHILD_ABUSE = 'CHILD_ABUSE'
    CONTENT = 'CONTENT'
    FRAUD_WIRE = 'FRAUD_WIRE'
    IP_BLOCK = 'IP_BLOCK'
    MALWARE = 'MALWARE'
    NETWORK_ABUSE = 'NETWORK_ABUSE'
    PHISHING = 'PHISHING'
    SPAM = 'SPAM'


@dataclasses.dataclass
class AbuseTicket:
    r"""The associated fields returned, given a unique abuse ticket id"""
    
    closed: bool = dataclasses.field()
    r"""Is this abuse ticket closed?"""  
    closed_at: str = dataclasses.field()
    r"""The date the abuse ticket was closed"""  
    created_at: str = dataclasses.field()
    r"""The date the abuse ticket was created"""  
    domain_ip: str = dataclasses.field()
    r"""The domain or IP the suspected abuse was reported against"""  
    reporter: str = dataclasses.field()
    r"""The shopper id of the person who reported the suspected abuse"""  
    source: str = dataclasses.field()
    r"""The single URL or IP the suspected abuse was reported against"""  
    target: str = dataclasses.field()
    r"""The company the suspected abuse is targeting"""  
    ticket_id: str = dataclasses.field()
    r"""Abuse ticket ID"""  
    type: AbuseTicketTypeEnum = dataclasses.field()
    r"""The type of abuse being reported"""  
    