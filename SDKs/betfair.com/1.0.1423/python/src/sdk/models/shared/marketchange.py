"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import marketdefinition as shared_marketdefinition
from ..shared import runnerchange as shared_runnerchange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MarketChange:
    
    con: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('con'), 'exclude': lambda f: f is None }})
    r"""Conflated - have more than a single change been combined (or null if not conflated)"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Market Id - the id of the market"""  
    img: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('img'), 'exclude': lambda f: f is None }})
    r"""Image - replace existing prices / data with the data supplied: it is not a delta (or null if delta)"""  
    market_definition: Optional[shared_marketdefinition.MarketDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketDefinition'), 'exclude': lambda f: f is None }})  
    rc: Optional[list[shared_runnerchange.RunnerChange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rc'), 'exclude': lambda f: f is None }})
    r"""Runner Changes - a list of changes to runners (or null if un-changed)"""  
    tv: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tv'), 'exclude': lambda f: f is None }})
    r"""The total amount matched across the market. This value is truncated at 2dp (or null if un-changed)"""  
    