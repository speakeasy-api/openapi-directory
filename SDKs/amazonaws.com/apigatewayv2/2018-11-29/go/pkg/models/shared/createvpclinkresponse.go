// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateVpcLinkResponseVpcLinkStatusEnum - The status of the VPC link.
type CreateVpcLinkResponseVpcLinkStatusEnum string

const (
	CreateVpcLinkResponseVpcLinkStatusEnumPending   CreateVpcLinkResponseVpcLinkStatusEnum = "PENDING"
	CreateVpcLinkResponseVpcLinkStatusEnumAvailable CreateVpcLinkResponseVpcLinkStatusEnum = "AVAILABLE"
	CreateVpcLinkResponseVpcLinkStatusEnumDeleting  CreateVpcLinkResponseVpcLinkStatusEnum = "DELETING"
	CreateVpcLinkResponseVpcLinkStatusEnumFailed    CreateVpcLinkResponseVpcLinkStatusEnum = "FAILED"
	CreateVpcLinkResponseVpcLinkStatusEnumInactive  CreateVpcLinkResponseVpcLinkStatusEnum = "INACTIVE"
)

func (e *CreateVpcLinkResponseVpcLinkStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "INACTIVE":
		*e = CreateVpcLinkResponseVpcLinkStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcLinkResponseVpcLinkStatusEnum: %s", s)
	}
}

// CreateVpcLinkResponseVpcLinkVersionEnum - The version of the VPC link.
type CreateVpcLinkResponseVpcLinkVersionEnum string

const (
	CreateVpcLinkResponseVpcLinkVersionEnumV2 CreateVpcLinkResponseVpcLinkVersionEnum = "V2"
)

func (e *CreateVpcLinkResponseVpcLinkVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "V2":
		*e = CreateVpcLinkResponseVpcLinkVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcLinkResponseVpcLinkVersionEnum: %s", s)
	}
}

// CreateVpcLinkResponse - Success
type CreateVpcLinkResponse struct {
	CreatedDate          *time.Time                               `json:"CreatedDate,omitempty"`
	Name                 *string                                  `json:"Name,omitempty"`
	SecurityGroupIds     []string                                 `json:"SecurityGroupIds,omitempty"`
	SubnetIds            []string                                 `json:"SubnetIds,omitempty"`
	Tags                 map[string]string                        `json:"Tags,omitempty"`
	VpcLinkID            *string                                  `json:"VpcLinkId,omitempty"`
	VpcLinkStatus        *CreateVpcLinkResponseVpcLinkStatusEnum  `json:"VpcLinkStatus,omitempty"`
	VpcLinkStatusMessage *string                                  `json:"VpcLinkStatusMessage,omitempty"`
	VpcLinkVersion       *CreateVpcLinkResponseVpcLinkVersionEnum `json:"VpcLinkVersion,omitempty"`
}
