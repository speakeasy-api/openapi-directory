/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StudioV1FlowExecution - Created
 */
public class StudioV1FlowExecution {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public StudioV1FlowExecution withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact_channel_address")
    public String contactChannelAddress;

    public StudioV1FlowExecution withContactChannelAddress(String contactChannelAddress) {
        this.contactChannelAddress = contactChannelAddress;
        return this;
    }
    
    /**
     * The SID of the Contact.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact_sid")
    public String contactSid;

    public StudioV1FlowExecution withContactSid(String contactSid) {
        this.contactSid = contactSid;
        return this;
    }
    
    /**
     * The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public Object context;

    public StudioV1FlowExecution withContext(Object context) {
        this.context = context;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public StudioV1FlowExecution withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public StudioV1FlowExecution withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The SID of the Flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow_sid")
    public String flowSid;

    public StudioV1FlowExecution withFlowSid(String flowSid) {
        this.flowSid = flowSid;
        return this;
    }
    
    /**
     * The URLs of nested resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public StudioV1FlowExecution withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Execution resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public StudioV1FlowExecution withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ExecutionEnumStatusEnum status;

    public StudioV1FlowExecution withStatus(ExecutionEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The absolute URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public StudioV1FlowExecution withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public StudioV1FlowExecution(){}
}
