/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GETImportStacksToStackSetActionEnum {
  ImportStacksToStackSet = "ImportStacksToStackSet",
}

/**
 * <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul>
 */
export enum GETImportStacksToStackSetCallAsEnum {
  Self = "SELF",
  DelegatedAdmin = "DELEGATED_ADMIN",
}

/**
 * <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
 */
export class GETImportStacksToStackSetOperationPreferences extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=FailureToleranceCount" })
  failureToleranceCount?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=FailureTolerancePercentage" })
  failureTolerancePercentage?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=MaxConcurrentCount" })
  maxConcurrentCount?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=MaxConcurrentPercentage" })
  maxConcurrentPercentage?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=RegionConcurrencyType" })
  regionConcurrencyType?: shared.RegionConcurrencyTypeEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=RegionOrder" })
  regionOrder?: string[];
}

export enum GETImportStacksToStackSetVersionEnum {
  TwoThousandAndTen0515 = "2010-05-15",
}

export class GETImportStacksToStackSetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETImportStacksToStackSetActionEnum;

  /**
   * <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CallAs",
  })
  callAs?: GETImportStacksToStackSetCallAsEnum;

  /**
   * A unique, user defined, identifier for the stack set operation.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=OperationId",
  })
  operationId?: string;

  /**
   * <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=OperationPreferences",
  })
  operationPreferences?: GETImportStacksToStackSetOperationPreferences;

  /**
   * The list of OU ID's to which the stacks being imported has to be mapped as deployment target.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=OrganizationalUnitIds",
  })
  organizationalUnitIds?: string[];

  /**
   * <p>The IDs of the stacks you are importing into a stack set. You import up to 10 stacks per stack set at a time.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=StackIds",
  })
  stackIds?: string[];

  /**
   * <p>The Amazon S3 URL which contains list of stack ids to be inputted.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=StackIdsUrl",
  })
  stackIdsUrl?: string;

  /**
   * The name of the stack set. The name must be unique in the Region where you create your stack set.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=StackSetName",
  })
  stackSetName: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETImportStacksToStackSetVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETImportStacksToStackSetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
