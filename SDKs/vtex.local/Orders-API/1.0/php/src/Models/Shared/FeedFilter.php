<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FeedFilter - Object with type and status that will filter feed orders.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FeedFilter
{
    /**
     * Sets a limit to how many times a specific order shows on the feed, after it first meets filtering conditions. Using the `FromOrders` type configuration with JSONata filtering expressions might cause orders to appear more than once on a feed, whenever changes are made to that order. If this field is `false` orders will appear in the feed only once.
     * 
     * @var ?bool $disableSingleFire
     */
	#[\JMS\Serializer\Annotation\SerializedName('disableSingleFire')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disableSingleFire = null;
    
    /**
     * JSONata query expression that defines what conditions must be met for an order to be included in the feed. This should only be used in case `type` is set to `FromOrders`.
     * 
     * @var ?string $expression
     */
	#[\JMS\Serializer\Annotation\SerializedName('expression')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expression = null;
    
    /**
     * List of order statuses that should be included in the feed. This should only be used in case `type` is set to `FromWorkflow`. The status event will be removed, if it can't deliver a message more than 100 times, 4 days progressively. 
     * 
     * 
     * **Status available to filter** 
     * 
     * - order-created 
     * 
     * - on-order-completed 
     * 
     * - on-order-completed-ffm 
     * 
     * - payment-pending 
     * 
     * - waiting-for-order-authorization 
     * 
     * - approve-payment 
     * 
     * - payment-approved 
     * 
     * - request-cancel 
     * 
     * - waiting-for-seller-decision 
     * 
     * - waiting-ffmt-authorization 
     * 
     * - waiting-for-authorization 
     * 
     * - waiting-for-manual-authorization 
     * 
     * - authorize-fulfillment 
     * 
     * - order-create-error 
     * 
     * - order-creation-error 
     * 
     * - window-to-cancel 
     * 
     * - window-to-change-seller 
     * 
     * - waiting-for-mkt-authorization 
     * 
     * - waiting-seller-handling 
     * 
     * - ready-for-handling 
     * 
     * - start-handling 
     * 
     * - handling 
     * 
     * - invoice-after-cancellation-deny 
     * 
     * - order-accepted 
     * 
     * - invoice 
     * 
     * - invoiced 
     * 
     * - replaced 
     * 
     * - cancellation-requested 
     * 
     * - cancel 
     * 
     * - canceled
     * 
     * @var ?array<string> $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $status = null;
    
    /**
     * Determines what orders appear in the feed and how they are filtered. There are two possible values:
     * 
     * 
     * 
     * -`FromWorkflow`: the feed will receive order updates only when orderâ€™s statuses change and orders can be filtered by status, using the `status` field described below.
     * 
     * 
     * -`FromOrders`: the feed gets updates whenever any change is made to an order. in this case, orders can be filtered by any property, according to JSONata expressions passed in the `expression` field described below.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->disableSingleFire = null;
		$this->expression = null;
		$this->status = null;
		$this->type = "";
	}
}
