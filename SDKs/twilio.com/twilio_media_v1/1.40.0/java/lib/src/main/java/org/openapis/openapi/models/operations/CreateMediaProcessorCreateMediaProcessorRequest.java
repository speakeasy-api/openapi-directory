/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateMediaProcessorCreateMediaProcessorRequest {
    /**
     * The [Media Extension](/docs/live/api/media-extensions-overview) name or URL. Ex: `video-composer-v2`
     */
    @SpeakeasyMetadata("form:name=Extension")
    public String extension;
    public CreateMediaProcessorCreateMediaProcessorRequest withExtension(String extension) {
        this.extension = extension;
        return this;
    }
    
    /**
     * The context of the Media Extension, represented as a JSON dictionary. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about the context to send.
     */
    @SpeakeasyMetadata("form:name=ExtensionContext")
    public String extensionContext;
    public CreateMediaProcessorCreateMediaProcessorRequest withExtensionContext(String extensionContext) {
        this.extensionContext = extensionContext;
        return this;
    }
    
    /**
     * User-defined environment variables for the Media Extension, represented as a JSON dictionary of key/value strings. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about whether you need to provide this.
     */
    @SpeakeasyMetadata("form:name=ExtensionEnvironment")
    public Object extensionEnvironment;
    public CreateMediaProcessorCreateMediaProcessorRequest withExtensionEnvironment(Object extensionEnvironment) {
        this.extensionEnvironment = extensionEnvironment;
        return this;
    }
    
    /**
     * The maximum time, in seconds, that the MediaProcessor can run before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the MediaProcessor, regardless of whether media is still streaming.
     */
    @SpeakeasyMetadata("form:name=MaxDuration")
    public Long maxDuration;
    public CreateMediaProcessorCreateMediaProcessorRequest withMaxDuration(Long maxDuration) {
        this.maxDuration = maxDuration;
        return this;
    }
    
    /**
     * The URL to which Twilio will send asynchronous webhook requests for every MediaProcessor event. See [Status Callbacks](/docs/live/status-callbacks) for details.
     */
    @SpeakeasyMetadata("form:name=StatusCallback")
    public String statusCallback;
    public CreateMediaProcessorCreateMediaProcessorRequest withStatusCallback(String statusCallback) {
        this.statusCallback = statusCallback;
        return this;
    }
    
    /**
     * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
     */
    @SpeakeasyMetadata("form:name=StatusCallbackMethod")
    public CreateMediaProcessorCreateMediaProcessorRequestStatusCallbackMethodEnum statusCallbackMethod;
    public CreateMediaProcessorCreateMediaProcessorRequest withStatusCallbackMethod(CreateMediaProcessorCreateMediaProcessorRequestStatusCallbackMethodEnum statusCallbackMethod) {
        this.statusCallbackMethod = statusCallbackMethod;
        return this;
    }
    
}
