<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class UserTokenRequest
{
    /**
     * Use this field in conjunction with the `type` field where the value of `type` field is `zak`. The value of this field denotes the expiry time of the `zak` token in seconds. For example, if you would like the zak token to be expired after one hour of the token generation, the value of this field should be `3600`.
     * 
     * @var ?int $ttl
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ttl')]
    public ?int $ttl = null;
    
    /**
     * User token types:<br>`token` - Used for starting meetings with the client SDK. This token expires in 14 days and a new token will be returned after the expiry.<br>`zak` - Used for generating the start meeting URL. The token expiration time is two hours. For API users, the expiration time is 90 days.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UserTokenTypeEnum $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?UserTokenTypeEnum $type = null;
    
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     * 
     * @var string $userId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=userId')]
    public string $userId;
    
	public function __construct()
	{
		$this->ttl = null;
		$this->type = null;
		$this->userId = "";
	}
}
