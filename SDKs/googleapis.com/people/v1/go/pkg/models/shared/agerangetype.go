// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AgeRangeTypeAgeRangeEnum - The age range.
type AgeRangeTypeAgeRangeEnum string

const (
	AgeRangeTypeAgeRangeEnumAgeRangeUnspecified AgeRangeTypeAgeRangeEnum = "AGE_RANGE_UNSPECIFIED"
	AgeRangeTypeAgeRangeEnumLessThanEighteen    AgeRangeTypeAgeRangeEnum = "LESS_THAN_EIGHTEEN"
	AgeRangeTypeAgeRangeEnumEighteenToTwenty    AgeRangeTypeAgeRangeEnum = "EIGHTEEN_TO_TWENTY"
	AgeRangeTypeAgeRangeEnumTwentyOneOrOlder    AgeRangeTypeAgeRangeEnum = "TWENTY_ONE_OR_OLDER"
)

func (e AgeRangeTypeAgeRangeEnum) ToPointer() *AgeRangeTypeAgeRangeEnum {
	return &e
}

func (e *AgeRangeTypeAgeRangeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AGE_RANGE_UNSPECIFIED":
		fallthrough
	case "LESS_THAN_EIGHTEEN":
		fallthrough
	case "EIGHTEEN_TO_TWENTY":
		fallthrough
	case "TWENTY_ONE_OR_OLDER":
		*e = AgeRangeTypeAgeRangeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AgeRangeTypeAgeRangeEnum: %v", v)
	}
}

// AgeRangeType - A person's age range.
type AgeRangeType struct {
	// The age range.
	AgeRange *AgeRangeTypeAgeRangeEnum `json:"ageRange,omitempty"`
	// Metadata about a field.
	Metadata *FieldMetadata `json:"metadata,omitempty"`
}
