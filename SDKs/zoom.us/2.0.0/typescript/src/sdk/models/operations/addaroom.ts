/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class AddARoomSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Type of the Zoom Room.
 */
export enum AddARoomApplicationJSONTypeEnum {
  ZoomRoom = "ZoomRoom",
  SchedulingDisplayOnly = "SchedulingDisplayOnly",
  DigitalSignageOnly = "DigitalSignageOnly",
}

export class AddARoomApplicationJSON extends SpeakeasyBase {
  /**
   * **Optional**<br>Location ID of the lowest level location in the [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) where the Zoom Room is to be added. For instance if the structure of the location hierarchy is set up as “country, states, city, campus, building, floor”, a room can only be added under the floor level location.
   *
   * @remarks
   *
   * This ID can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * Name of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Type of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AddARoomApplicationJSONTypeEnum;
}

/**
 * Type of the Zoom Room.
 */
export enum AddARoom201ApplicationXMLTypeEnum {
  ZoomRoom = "ZoomRoom",
  SchedulingDisplayOnly = "SchedulingDisplayOnly",
  DigitalSignageOnly = "DigitalSignageOnly",
}

/**
 * **HTTP Status Code:** `201` **Created**<br>
 *
 * @remarks
 * Zoom Room added successfully.
 */
export class AddARoom201ApplicationXML extends SpeakeasyBase {
  /**
   * Unique Identifier of the Zoom Room.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Location ID of the location where the Zoom Room was added.
   */
  @SpeakeasyMetadata()
  locationId?: string;

  /**
   * Name of the Zoom Room.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
   */
  @SpeakeasyMetadata()
  roomId?: string;

  /**
   * Type of the Zoom Room.
   */
  @SpeakeasyMetadata()
  type?: AddARoom201ApplicationXMLTypeEnum;
}

/**
 * Type of the Zoom Room.
 */
export enum AddARoom201ApplicationJSONTypeEnum {
  ZoomRoom = "ZoomRoom",
  SchedulingDisplayOnly = "SchedulingDisplayOnly",
  DigitalSignageOnly = "DigitalSignageOnly",
}

/**
 * **HTTP Status Code:** `201` **Created**<br>
 *
 * @remarks
 * Zoom Room added successfully.
 */
export class AddARoom201ApplicationJSON extends SpeakeasyBase {
  /**
   * Unique Identifier of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Location ID of the location where the Zoom Room was added.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * Name of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_id" })
  roomId?: string;

  /**
   * Type of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AddARoom201ApplicationJSONTypeEnum;
}

export class AddARoomResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `201` **Created**<br>
   *
   * @remarks
   * Zoom Room added successfully.
   */
  @SpeakeasyMetadata()
  addARoom201ApplicationJSONObject?: AddARoom201ApplicationJSON;
}
