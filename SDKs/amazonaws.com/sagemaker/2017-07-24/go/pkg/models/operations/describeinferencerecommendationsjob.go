// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeInferenceRecommendationsJobXAmzTargetEnum
type DescribeInferenceRecommendationsJobXAmzTargetEnum string

const (
	DescribeInferenceRecommendationsJobXAmzTargetEnumSageMakerDescribeInferenceRecommendationsJob DescribeInferenceRecommendationsJobXAmzTargetEnum = "SageMaker.DescribeInferenceRecommendationsJob"
)

func (e *DescribeInferenceRecommendationsJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.DescribeInferenceRecommendationsJob":
		*e = DescribeInferenceRecommendationsJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeInferenceRecommendationsJobXAmzTargetEnum: %s", s)
	}
}

type DescribeInferenceRecommendationsJobRequest struct {
	DescribeInferenceRecommendationsJobRequest shared.DescribeInferenceRecommendationsJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                              *string                                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                          *string                                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                             *string                                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                   *string                                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                          *string                                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                              *string                                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                          *string                                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                 DescribeInferenceRecommendationsJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeInferenceRecommendationsJobResponse struct {
	ContentType string
	// Success
	DescribeInferenceRecommendationsJobResponse *shared.DescribeInferenceRecommendationsJobResponse
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
