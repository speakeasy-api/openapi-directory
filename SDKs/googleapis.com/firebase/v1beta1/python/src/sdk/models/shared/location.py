"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LocationFeaturesEnum(str, Enum):
    LOCATION_FEATURE_UNSPECIFIED = 'LOCATION_FEATURE_UNSPECIFIED'
    FIRESTORE = 'FIRESTORE'
    DEFAULT_STORAGE = 'DEFAULT_STORAGE'
    FUNCTIONS = 'FUNCTIONS'

class LocationTypeEnum(str, Enum):
    r"""Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication."""
    LOCATION_TYPE_UNSPECIFIED = 'LOCATION_TYPE_UNSPECIFIED'
    REGIONAL = 'REGIONAL'
    MULTI_REGIONAL = 'MULTI_REGIONAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Location:
    r"""A GCP resource location that can be selected for a FirebaseProject."""
    
    features: Optional[list[LocationFeaturesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('features'), 'exclude': lambda f: f is None }})
    r"""Products and services that are available in the GCP resource location."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationId'), 'exclude': lambda f: f is None }})
    r"""The ID of the GCP resource location. It will be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations#types)."""  
    type: Optional[LocationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication."""  
    