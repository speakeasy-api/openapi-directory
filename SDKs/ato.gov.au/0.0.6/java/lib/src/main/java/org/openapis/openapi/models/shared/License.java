/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * License - The License resource.
 */
public class License {
    /**
     * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fromDate")
    public OffsetDateTime fromDate;
    public License withFromDate(OffsetDateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }
    
    /**
     * The resource's unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public License withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The license type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseType")
    public LicenseLicenseTypeEnum licenseType;
    public License withLicenseType(LicenseLicenseTypeEnum licenseType) {
        this.licenseType = licenseType;
        return this;
    }
    
    /**
     * The business name's lifecycle state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifecycleState")
    public LicenseLifecycleStateEnum lifecycleState;
    public License withLifecycleState(LicenseLifecycleStateEnum lifecycleState) {
        this.lifecycleState = lifecycleState;
        return this;
    }
    
    /**
     * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("toDate")
    public OffsetDateTime toDate;
    public License withToDate(OffsetDateTime toDate) {
        this.toDate = toDate;
        return this;
    }
    
}
