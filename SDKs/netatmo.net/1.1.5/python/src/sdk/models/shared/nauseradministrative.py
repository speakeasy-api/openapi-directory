"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NAUserAdministrative:
    
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""user country"""  
    feel_like_algo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feel_like_algo'), 'exclude': lambda f: f is None }})
    r"""algorithm used to compute feel like temperature, 0 -> humidex, 1 -> heat-index"""  
    lang: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lang'), 'exclude': lambda f: f is None }})
    r"""user locale"""  
    pressureunit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pressureunit'), 'exclude': lambda f: f is None }})
    r"""0 -> mbar, 1 -> inHg, 2 -> mmHg"""  
    reg_locale: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reg_locale'), 'exclude': lambda f: f is None }})
    r"""user regional preferences (used for displaying date)"""  
    unit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit'), 'exclude': lambda f: f is None }})
    r"""0 -> metric system, 1 -> imperial system"""  
    windunit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('windunit'), 'exclude': lambda f: f is None }})
    r"""0 -> kph, 1 -> mph, 2 -> ms, 3 -> beaufort, 4 -> knot"""  
    