"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import latesttenancymodel as shared_latesttenancymodel
from ..shared import linkedlandlordmodel as shared_linkedlandlordmodel
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinkedPropertiesModel:
    r"""Holds information on linked properties"""
    
    address1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Address1'), 'exclude': lambda f: f is None }})
    r"""Address 1"""  
    address2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Address2'), 'exclude': lambda f: f is None }})
    r"""Address2"""  
    address3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Address3'), 'exclude': lambda f: f is None }})
    r"""Address 3"""  
    address4: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Address4'), 'exclude': lambda f: f is None }})
    r"""Address 4"""  
    address_flat_room_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddressFlatRoomNumber'), 'exclude': lambda f: f is None }})
    r"""Address Flat Room Number"""  
    address_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddressNumber'), 'exclude': lambda f: f is None }})
    r"""Address Number"""  
    e_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ETag'), 'exclude': lambda f: f is None }})
    r"""ETag"""  
    latest_tenancy: Optional[shared_latesttenancymodel.LatestTenancyModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LatestTenancy'), 'exclude': lambda f: f is None }})
    r"""Holds information on the most recent tenancy linked to the property."""  
    main_landlord: Optional[shared_linkedlandlordmodel.LinkedLandlordModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MainLandlord'), 'exclude': lambda f: f is None }})
    r"""Holds information on landlords"""  
    oid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OID'), 'exclude': lambda f: f is None }})
    r"""OID"""  
    postcode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Postcode'), 'exclude': lambda f: f is None }})
    r"""Postcode"""  
    