// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartJobRunPathParams struct {
	// The ID of the application on which to run the job.
	ApplicationID string `pathParam:"style=simple,explode=false,name=applicationId"`
}

type StartJobRunHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// StartJobRunRequestBodyConfigurationOverrides - A configuration specification to be used to override existing configurations.
type StartJobRunRequestBodyConfigurationOverrides struct {
	ApplicationConfiguration []shared.Configuration          `json:"applicationConfiguration,omitempty"`
	MonitoringConfiguration  *shared.MonitoringConfiguration `json:"monitoringConfiguration,omitempty"`
}

// StartJobRunRequestBodyJobDriver - The driver that the job runs on.
type StartJobRunRequestBodyJobDriver struct {
	Hive        *shared.Hive        `json:"hive,omitempty"`
	SparkSubmit *shared.SparkSubmit `json:"sparkSubmit,omitempty"`
}

type StartJobRunRequestBody struct {
	// The client idempotency token of the job run to start. Its value must be unique for each request.
	ClientToken string `json:"clientToken"`
	// A configuration specification to be used to override existing configurations.
	ConfigurationOverrides *StartJobRunRequestBodyConfigurationOverrides `json:"configurationOverrides,omitempty"`
	// The execution role ARN for the job run.
	ExecutionRoleArn string `json:"executionRoleArn"`
	// The maximum duration for the job run to run. If the job run runs beyond this duration, it will be automatically cancelled.
	ExecutionTimeoutMinutes *int64 `json:"executionTimeoutMinutes,omitempty"`
	// The driver that the job runs on.
	JobDriver *StartJobRunRequestBodyJobDriver `json:"jobDriver,omitempty"`
	// The optional job run name. This doesn't have to be unique.
	Name *string `json:"name,omitempty"`
	// The tags assigned to the job run.
	Tags map[string]string `json:"tags,omitempty"`
}

type StartJobRunRequest struct {
	PathParams StartJobRunPathParams
	Headers    StartJobRunHeaders
	Request    StartJobRunRequestBody `request:"mediaType=application/json"`
}

type StartJobRunResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartJobRunResponse *shared.StartJobRunResponse
	StatusCode          int
	RawResponse         *http.Response
	// ValidationException
	ValidationException interface{}
}
