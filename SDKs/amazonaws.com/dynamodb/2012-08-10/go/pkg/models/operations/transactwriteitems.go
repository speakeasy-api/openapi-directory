// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TransactWriteItemsXAmzTargetEnum
type TransactWriteItemsXAmzTargetEnum string

const (
	TransactWriteItemsXAmzTargetEnumDynamoDb20120810TransactWriteItems TransactWriteItemsXAmzTargetEnum = "DynamoDB_20120810.TransactWriteItems"
)

func (e *TransactWriteItemsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20120810.TransactWriteItems":
		*e = TransactWriteItemsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactWriteItemsXAmzTargetEnum: %s", s)
	}
}

type TransactWriteItemsRequest struct {
	TransactWriteItemsInput shared.TransactWriteItemsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              TransactWriteItemsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type TransactWriteItemsResponse struct {
	ContentType string
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerError
	InternalServerError interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	TransactWriteItemsOutput *shared.TransactWriteItemsOutput
	// TransactionCanceledException
	TransactionCanceledException interface{}
	// TransactionInProgressException
	TransactionInProgressException interface{}
}
