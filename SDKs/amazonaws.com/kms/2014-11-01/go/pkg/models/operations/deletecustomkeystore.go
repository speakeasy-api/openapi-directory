// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteCustomKeyStoreXAmzTargetEnum
type DeleteCustomKeyStoreXAmzTargetEnum string

const (
	DeleteCustomKeyStoreXAmzTargetEnumTrentServiceDeleteCustomKeyStore DeleteCustomKeyStoreXAmzTargetEnum = "TrentService.DeleteCustomKeyStore"
)

func (e *DeleteCustomKeyStoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TrentService.DeleteCustomKeyStore":
		*e = DeleteCustomKeyStoreXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteCustomKeyStoreXAmzTargetEnum: %s", s)
	}
}

type DeleteCustomKeyStoreHeaders struct {
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteCustomKeyStoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteCustomKeyStoreRequest struct {
	Headers DeleteCustomKeyStoreHeaders
	Request shared.DeleteCustomKeyStoreRequest `request:"mediaType=application/json"`
}

type DeleteCustomKeyStoreResponse struct {
	ContentType string
	// CustomKeyStoreHasCMKsException
	CustomKeyStoreHasCMKsException interface{}
	// CustomKeyStoreInvalidStateException
	CustomKeyStoreInvalidStateException interface{}
	// CustomKeyStoreNotFoundException
	CustomKeyStoreNotFoundException interface{}
	// Success
	DeleteCustomKeyStoreResponse map[string]interface{}
	// KMSInternalException
	KMSInternalException interface{}
	StatusCode           int
	RawResponse          *http.Response
}
