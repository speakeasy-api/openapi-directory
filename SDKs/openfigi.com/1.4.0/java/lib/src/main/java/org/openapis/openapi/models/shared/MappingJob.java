/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * MappingJob - For V3: securityType2 is required when idType is BASE_TICKER or ID_EXCH_SYMBOL.  expiration is required when securityType2 is Option or Warrant.  maturity is required when securityType2 is Pool.
 */
public class MappingJob {
    /**
     * At least one entry should be non-null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contractSize")
    public Double[] contractSize;
    public MappingJob withContractSize(Double[] contractSize) {
        this.contractSize = contractSize;
        return this;
    }
    
    /**
     * At least one entry should be non-null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coupon")
    public Double[] coupon;
    public MappingJob withCoupon(Double[] coupon) {
        this.coupon = coupon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public MappingJob withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exchCode")
    public String exchCode;
    public MappingJob withExchCode(String exchCode) {
        this.exchCode = exchCode;
        return this;
    }
    
    /**
     * At least one entry should be non-null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration")
    public LocalDate[] expiration;
    public MappingJob withExpiration(LocalDate[] expiration) {
        this.expiration = expiration;
        return this;
    }
    
    @JsonProperty("idType")
    public MappingJobIdTypeEnum idType;
    public MappingJob withIdType(MappingJobIdTypeEnum idType) {
        this.idType = idType;
        return this;
    }
    
    @JsonProperty("idValue")
    public Object idValue;
    public MappingJob withIdValue(Object idValue) {
        this.idValue = idValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeUnlistedEquities")
    public Boolean includeUnlistedEquities;
    public MappingJob withIncludeUnlistedEquities(Boolean includeUnlistedEquities) {
        this.includeUnlistedEquities = includeUnlistedEquities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketSecDes")
    public String marketSecDes;
    public MappingJob withMarketSecDes(String marketSecDes) {
        this.marketSecDes = marketSecDes;
        return this;
    }
    
    /**
     * At least one entry should be non-null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maturity")
    public LocalDate[] maturity;
    public MappingJob withMaturity(LocalDate[] maturity) {
        this.maturity = maturity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("micCode")
    public String micCode;
    public MappingJob withMicCode(String micCode) {
        this.micCode = micCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optionType")
    public MappingJobOptionTypeEnum optionType;
    public MappingJob withOptionType(MappingJobOptionTypeEnum optionType) {
        this.optionType = optionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityType")
    public String securityType;
    public MappingJob withSecurityType(String securityType) {
        this.securityType = securityType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityType2")
    public String securityType2;
    public MappingJob withSecurityType2(String securityType2) {
        this.securityType2 = securityType2;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateCode")
    public MappingJobStateCodeEnum stateCode;
    public MappingJob withStateCode(MappingJobStateCodeEnum stateCode) {
        this.stateCode = stateCode;
        return this;
    }
    
    /**
     * At least one entry should be non-null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strike")
    public Double[] strike;
    public MappingJob withStrike(Double[] strike) {
        this.strike = strike;
        return this;
    }
    
}
