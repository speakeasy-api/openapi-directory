/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Finding - Contains information about a finding.
 */
public class Finding {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String[] action;

    public Finding withAction(String[] action) {
        this.action = action;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("analyzedAt")
    public OffsetDateTime analyzedAt;

    public Finding withAnalyzedAt(OffsetDateTime analyzedAt) {
        this.analyzedAt = analyzedAt;
        return this;
    }
    
    @JsonProperty("condition")
    public java.util.Map<String, String> condition;

    public Finding withCondition(java.util.Map<String, String> condition) {
        this.condition = condition;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public Finding withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;

    public Finding withError(String error) {
        this.error = error;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public Finding withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPublic")
    public Boolean isPublic;

    public Finding withIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principal")
    public java.util.Map<String, String> principal;

    public Finding withPrincipal(java.util.Map<String, String> principal) {
        this.principal = principal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public String resource;

    public Finding withResource(String resource) {
        this.resource = resource;
        return this;
    }
    
    @JsonProperty("resourceOwnerAccount")
    public String resourceOwnerAccount;

    public Finding withResourceOwnerAccount(String resourceOwnerAccount) {
        this.resourceOwnerAccount = resourceOwnerAccount;
        return this;
    }
    
    @JsonProperty("resourceType")
    public ResourceTypeEnum resourceType;

    public Finding withResourceType(ResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sources")
    public FindingSource[] sources;

    public Finding withSources(FindingSource[] sources) {
        this.sources = sources;
        return this;
    }
    
    @JsonProperty("status")
    public FindingStatusEnum status;

    public Finding withStatus(FindingStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public Finding withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public Finding(@JsonProperty("analyzedAt") OffsetDateTime analyzedAt, @JsonProperty("condition") java.util.Map<String, String> condition, @JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("id") String id, @JsonProperty("resourceOwnerAccount") String resourceOwnerAccount, @JsonProperty("resourceType") ResourceTypeEnum resourceType, @JsonProperty("status") FindingStatusEnum status, @JsonProperty("updatedAt") OffsetDateTime updatedAt) {
        this.analyzedAt = analyzedAt;
        this.condition = condition;
        this.createdAt = createdAt;
        this.id = id;
        this.resourceOwnerAccount = resourceOwnerAccount;
        this.resourceType = resourceType;
        this.status = status;
        this.updatedAt = updatedAt;
  }
}
