/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SelectiveAuthEnum } from "./selectiveauthenum";
import { TrustDirectionEnum } from "./trustdirectionenum";
import { TrustStateEnum } from "./truststateenum";
import { TrustTypeEnum } from "./trusttypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Describes a trust relationship between an Managed Microsoft AD directory and an external domain.
 */
export class Trust extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DirectoryId" })
  directoryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RemoteDomainName" })
  remoteDomainName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SelectiveAuth" })
  selectiveAuth?: SelectiveAuthEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StateLastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stateLastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TrustDirection" })
  trustDirection?: TrustDirectionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrustId" })
  trustId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrustState" })
  trustState?: TrustStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrustStateReason" })
  trustStateReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrustType" })
  trustType?: TrustTypeEnum;
}
