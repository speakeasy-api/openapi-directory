// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETEnableMFADeviceActionEnum
type GETEnableMFADeviceActionEnum string

const (
	GETEnableMFADeviceActionEnumEnableMfaDevice GETEnableMFADeviceActionEnum = "EnableMFADevice"
)

func (e *GETEnableMFADeviceActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EnableMFADevice":
		*e = GETEnableMFADeviceActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableMFADeviceActionEnum: %s", s)
	}
}

// GETEnableMFADeviceVersionEnum
type GETEnableMFADeviceVersionEnum string

const (
	GETEnableMFADeviceVersionEnumTwoThousandAndTen0508 GETEnableMFADeviceVersionEnum = "2010-05-08"
)

func (e *GETEnableMFADeviceVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETEnableMFADeviceVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableMFADeviceVersionEnum: %s", s)
	}
}

type GETEnableMFADeviceQueryParams struct {
	Action GETEnableMFADeviceActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>An authentication code emitted by the device. </p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>
	AuthenticationCode1 string `queryParam:"style=form,explode=true,name=AuthenticationCode1"`
	// <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>
	AuthenticationCode2 string `queryParam:"style=form,explode=true,name=AuthenticationCode2"`
	// <p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>
	SerialNumber string `queryParam:"style=form,explode=true,name=SerialNumber"`
	// <p>The name of the IAM user for whom you want to enable the MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName string                        `queryParam:"style=form,explode=true,name=UserName"`
	Version  GETEnableMFADeviceVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETEnableMFADeviceHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETEnableMFADeviceRequest struct {
	QueryParams GETEnableMFADeviceQueryParams
	Headers     GETEnableMFADeviceHeaders
}

type GETEnableMFADeviceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
