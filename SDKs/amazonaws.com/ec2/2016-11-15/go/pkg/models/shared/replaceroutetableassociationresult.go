// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReplaceRouteTableAssociationResultAssociationStateStateEnum - The state of the association.
type ReplaceRouteTableAssociationResultAssociationStateStateEnum string

const (
	ReplaceRouteTableAssociationResultAssociationStateStateEnumAssociating    ReplaceRouteTableAssociationResultAssociationStateStateEnum = "associating"
	ReplaceRouteTableAssociationResultAssociationStateStateEnumAssociated     ReplaceRouteTableAssociationResultAssociationStateStateEnum = "associated"
	ReplaceRouteTableAssociationResultAssociationStateStateEnumDisassociating ReplaceRouteTableAssociationResultAssociationStateStateEnum = "disassociating"
	ReplaceRouteTableAssociationResultAssociationStateStateEnumDisassociated  ReplaceRouteTableAssociationResultAssociationStateStateEnum = "disassociated"
	ReplaceRouteTableAssociationResultAssociationStateStateEnumFailed         ReplaceRouteTableAssociationResultAssociationStateStateEnum = "failed"
)

func (e ReplaceRouteTableAssociationResultAssociationStateStateEnum) ToPointer() *ReplaceRouteTableAssociationResultAssociationStateStateEnum {
	return &e
}

func (e *ReplaceRouteTableAssociationResultAssociationStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "failed":
		*e = ReplaceRouteTableAssociationResultAssociationStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplaceRouteTableAssociationResultAssociationStateStateEnum: %v", v)
	}
}

// ReplaceRouteTableAssociationResultAssociationState - The state of the association.
type ReplaceRouteTableAssociationResultAssociationState struct {
	State         *ReplaceRouteTableAssociationResultAssociationStateStateEnum
	StatusMessage *string
}

// ReplaceRouteTableAssociationResult - Success
type ReplaceRouteTableAssociationResult struct {
	AssociationState *ReplaceRouteTableAssociationResultAssociationState
	NewAssociationID *string
}
