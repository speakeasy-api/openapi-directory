/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The feature type.
 */
export enum GoogleCloudVisionV1p1beta1FeatureTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  FaceDetection = "FACE_DETECTION",
  LandmarkDetection = "LANDMARK_DETECTION",
  LogoDetection = "LOGO_DETECTION",
  LabelDetection = "LABEL_DETECTION",
  TextDetection = "TEXT_DETECTION",
  DocumentTextDetection = "DOCUMENT_TEXT_DETECTION",
  SafeSearchDetection = "SAFE_SEARCH_DETECTION",
  ImageProperties = "IMAGE_PROPERTIES",
  CropHints = "CROP_HINTS",
  WebDetection = "WEB_DETECTION",
  ProductSearch = "PRODUCT_SEARCH",
  ObjectLocalization = "OBJECT_LOCALIZATION",
}

/**
 * The type of Google Cloud Vision API detection to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.
 */
export class GoogleCloudVisionV1p1beta1Feature extends SpeakeasyBase {
  /**
   * Maximum number of results of this type. Does not apply to `TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  /**
   * Model to use for the feature. Supported values: "builtin/stable" (the default if unset) and "builtin/latest". `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` also support "builtin/weekly" for the bleeding edge release updated weekly.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;

  /**
   * The feature type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GoogleCloudVisionV1p1beta1FeatureTypeEnum;
}
