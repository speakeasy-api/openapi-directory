<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SchemaPropertiesFieldName - Schema of any given field described in the `properties` field.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SchemaPropertiesFieldName
{
    /**
     * Object containing the type of the items if the field is an array. Typically, arrays will contain strings and will be used for fields such as `email`.
     * 
     * @var ?array<string, mixed> $items
     */
	#[\JMS\Serializer\Annotation\SerializedName('items')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $items = null;
    
    /**
     * Indicates whether property is Personal Identifiable Information.
     * 
     * @var bool $pii
     */
	#[\JMS\Serializer\Annotation\SerializedName('pii')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $pii;
    
    /**
     * Indicates whether property is sensitive data.
     * 
     * @var bool $sensitive
     */
	#[\JMS\Serializer\Annotation\SerializedName('sensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $sensitive;
    
    /**
     * Schema property type.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->items = null;
		$this->pii = false;
		$this->sensitive = false;
		$this->type = "";
	}
}
