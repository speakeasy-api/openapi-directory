// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ErrorsCodeEnum - Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
type ErrorsCodeEnum string

const (
	ErrorsCodeEnumBadRequest         ErrorsCodeEnum = "BAD_REQUEST"
	ErrorsCodeEnumForbidden          ErrorsCodeEnum = "FORBIDDEN"
	ErrorsCodeEnumNotFound           ErrorsCodeEnum = "NOT_FOUND"
	ErrorsCodeEnumConflict           ErrorsCodeEnum = "CONFLICT"
	ErrorsCodeEnumGone               ErrorsCodeEnum = "GONE"
	ErrorsCodeEnumPreconditionFailed ErrorsCodeEnum = "PRECONDITION_FAILED"
	ErrorsCodeEnumInternalError      ErrorsCodeEnum = "INTERNAL_ERROR"
	ErrorsCodeEnumServiceUnavailable ErrorsCodeEnum = "SERVICE_UNAVAILABLE"
)

func (e ErrorsCodeEnum) ToPointer() *ErrorsCodeEnum {
	return &e
}

func (e *ErrorsCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BAD_REQUEST":
		fallthrough
	case "FORBIDDEN":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "CONFLICT":
		fallthrough
	case "GONE":
		fallthrough
	case "PRECONDITION_FAILED":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "SERVICE_UNAVAILABLE":
		*e = ErrorsCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorsCodeEnum: %v", v)
	}
}

// Errors - Request Error information. The presence of an error field signals that the operation has failed.
type Errors struct {
	// Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
	Code *ErrorsCodeEnum `json:"code,omitempty"`
	// Specific error description and codes
	Error []ErrorProto `json:"error,omitempty"`
	// Request identifier generated by the service, which can be used to identify the error in the logs
	RequestID *string `json:"requestId,omitempty"`
}
