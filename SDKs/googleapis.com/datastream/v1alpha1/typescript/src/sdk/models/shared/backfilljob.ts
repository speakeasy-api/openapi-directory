/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Expose, Type } from "class-transformer";

/**
 * Backfill job state.
 */
export enum BackfillJobStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  NotStarted = "NOT_STARTED",
  Pending = "PENDING",
  Active = "ACTIVE",
  Stopped = "STOPPED",
  Failed = "FAILED",
  Completed = "COMPLETED",
  Unsupported = "UNSUPPORTED",
}

/**
 * Backfill job's triggering reason.
 */
export enum BackfillJobTriggerEnum {
  TriggerUnspecified = "TRIGGER_UNSPECIFIED",
  Automatic = "AUTOMATIC",
  Manual = "MANUAL",
}

/**
 * Represents a backfill job on a specific stream object.
 */
export class BackfillJob extends SpeakeasyBase {
  /**
   * Output only. Errors which caused the backfill job to fail.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * Output only. Backfill job's end time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastEndTime" })
  lastEndTime?: string;

  /**
   * Output only. Backfill job's start time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastStartTime" })
  lastStartTime?: string;

  /**
   * Backfill job state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: BackfillJobStateEnum;

  /**
   * Backfill job's triggering reason.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trigger" })
  trigger?: BackfillJobTriggerEnum;
}
