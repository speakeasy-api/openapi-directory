/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * If not present, json format will be returned as the search result.
 */
export enum GetFormatEnum {
  Json = "json",
  Xml = "xml",
}

export class GetRequest extends SpeakeasyBase {
  /**
   * If not present, json format will be returned as the search result.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format?: GetFormatEnum;

  /**
   * IP address (IPv4) for lookup purpose. If not present, the server IP address will be used for the lookup.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ip" })
  ip: string;

  /**
   * API key. Please sign up free trial license key at ip2location.com
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key: string;

  /**
   * Package name from PX1 to PX11. If not present, the web service will assume the PX1 package query.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=package",
  })
  package?: string;
}

export class GetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Get response from IP2Proxy
   */
  @SpeakeasyMetadata()
  get200TextHTMLString?: string;
}
