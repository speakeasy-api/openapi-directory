// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SearchResultSnippetLiveBroadcastContentEnum - It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
type SearchResultSnippetLiveBroadcastContentEnum string

const (
	SearchResultSnippetLiveBroadcastContentEnumNone      SearchResultSnippetLiveBroadcastContentEnum = "none"
	SearchResultSnippetLiveBroadcastContentEnumUpcoming  SearchResultSnippetLiveBroadcastContentEnum = "upcoming"
	SearchResultSnippetLiveBroadcastContentEnumLive      SearchResultSnippetLiveBroadcastContentEnum = "live"
	SearchResultSnippetLiveBroadcastContentEnumCompleted SearchResultSnippetLiveBroadcastContentEnum = "completed"
)

func (e SearchResultSnippetLiveBroadcastContentEnum) ToPointer() *SearchResultSnippetLiveBroadcastContentEnum {
	return &e
}

func (e *SearchResultSnippetLiveBroadcastContentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "upcoming":
		fallthrough
	case "live":
		fallthrough
	case "completed":
		*e = SearchResultSnippetLiveBroadcastContentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchResultSnippetLiveBroadcastContentEnum: %v", v)
	}
}

// SearchResultSnippet - Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.
type SearchResultSnippet struct {
	// The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.
	ChannelID *string `json:"channelId,omitempty"`
	// The title of the channel that published the resource that the search result identifies.
	ChannelTitle *string `json:"channelTitle,omitempty"`
	// A description of the search result.
	Description *string `json:"description,omitempty"`
	// It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
	LiveBroadcastContent *SearchResultSnippetLiveBroadcastContentEnum `json:"liveBroadcastContent,omitempty"`
	// The creation date and time of the resource that the search result identifies.
	PublishedAt *time.Time `json:"publishedAt,omitempty"`
	// Internal representation of thumbnails for a YouTube resource.
	Thumbnails *ThumbnailDetails `json:"thumbnails,omitempty"`
	// The title of the search result.
	Title *string `json:"title,omitempty"`
}
