// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetProjectUsernameProjectPathParams struct {
	// XXXXXXXXX
	//
	Project string `pathParam:"style=simple,explode=false,name=project"`
	// XXXXXXXXX
	//
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type GetProjectUsernameProjectQueryParams struct {
	// Restricts which builds are returned.
	// Set to "completed", "successful", "failed", "running", or defaults to no filter.
	//
	Filter *shared.FilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The number of builds to return. Maximum 100, defaults to 30.
	//
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// The API returns builds starting from this offset, defaults to 0.
	//
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
}

type GetProjectUsernameProjectRequest struct {
	PathParams  GetProjectUsernameProjectPathParams
	QueryParams GetProjectUsernameProjectQueryParams
}

type GetProjectUsernameProjectResponse struct {
	// Build summary for each of the last 30 builds
	Builds      []shared.Build
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
