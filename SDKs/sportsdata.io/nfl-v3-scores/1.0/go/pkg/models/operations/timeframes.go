// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TimeframesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type TimeframesFormatEnum string

const (
	TimeframesFormatEnumXML  TimeframesFormatEnum = "XML"
	TimeframesFormatEnumJSON TimeframesFormatEnum = "JSON"
)

func (e *TimeframesFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = TimeframesFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeframesFormatEnum: %s", s)
	}
}

// TimeframesTypeEnum - The type of timeframes to return.  Valid entries are <code>current</code> or <code>upcoming</code> or <code>completed</code> or <code>recent</code> or <code>all</code>.
type TimeframesTypeEnum string

const (
	TimeframesTypeEnumCurrent   TimeframesTypeEnum = "current"
	TimeframesTypeEnumUpcoming  TimeframesTypeEnum = "upcoming"
	TimeframesTypeEnumCompleted TimeframesTypeEnum = "completed"
	TimeframesTypeEnumRecent    TimeframesTypeEnum = "recent"
	TimeframesTypeEnumAll       TimeframesTypeEnum = "all"
)

func (e *TimeframesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "current":
		fallthrough
	case "upcoming":
		fallthrough
	case "completed":
		fallthrough
	case "recent":
		fallthrough
	case "all":
		*e = TimeframesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeframesTypeEnum: %s", s)
	}
}

type TimeframesPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format TimeframesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// The type of timeframes to return.  Valid entries are <code>current</code> or <code>upcoming</code> or <code>completed</code> or <code>recent</code> or <code>all</code>.
	Type TimeframesTypeEnum `pathParam:"style=simple,explode=false,name=type"`
}

type TimeframesRequest struct {
	PathParams TimeframesPathParams
}

type TimeframesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	Timeframes  []shared.Timeframe
}
