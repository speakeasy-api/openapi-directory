"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import edgestatistics as shared_edgestatistics
from ..shared import forecaststatistics as shared_forecaststatistics
from ..shared import histogramentry as shared_histogramentry
from ..shared import servicestatistics as shared_servicestatistics
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimeSeriesServiceStatistics:
    r"""A list of TimeSeriesStatistic structures."""
    
    edge_summary_statistics: Optional[shared_edgestatistics.EdgeStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgeSummaryStatistics'), 'exclude': lambda f: f is None }})
    r"""Response statistics for an edge."""  
    response_time_histogram: Optional[list[shared_histogramentry.HistogramEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResponseTimeHistogram'), 'exclude': lambda f: f is None }})  
    service_forecast_statistics: Optional[shared_forecaststatistics.ForecastStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceForecastStatistics'), 'exclude': lambda f: f is None }})  
    service_summary_statistics: Optional[shared_servicestatistics.ServiceStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceSummaryStatistics'), 'exclude': lambda f: f is None }})
    r"""Response statistics for a service."""  
    timestamp: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timestamp'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    