// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetGroupRequest struct {
	IfMatch     *string  `header:"style=simple,explode=false,name=If-Match"`
	IfNoneMatch *string  `header:"style=simple,explode=false,name=If-None-Match"`
	Fields      []string `queryParam:"style=form,explode=false,name=_fields"`
	BucketID    string   `pathParam:"style=simple,explode=false,name=bucket_id"`
	ID          string   `pathParam:"style=simple,explode=false,name=id"`
}

// GetGroupErrorSchema - The request is invalid.
type GetGroupErrorSchema struct {
	Code    int64       `json:"code"`
	Details interface{} `json:"details,omitempty"`
	Errno   int64       `json:"errno"`
	Error   string      `json:"error"`
	Info    *string     `json:"info,omitempty"`
	Message *string     `json:"message,omitempty"`
}

type GetGroupObjectSchemaData struct {
	Members []string `json:"members,omitempty"`
}

type GetGroupObjectSchemaPermissions struct {
	Read  []string `json:"read,omitempty"`
	Write []string `json:"write,omitempty"`
}

// GetGroupObjectSchema - Return the target object.
type GetGroupObjectSchema struct {
	Data        *GetGroupObjectSchemaData        `json:"data,omitempty"`
	Permissions *GetGroupObjectSchemaPermissions `json:"permissions,omitempty"`
}

type GetGroupResponse struct {
	ContentType string
	// The request is invalid.
	ErrorSchema *GetGroupErrorSchema
	Headers     map[string][]string
	// Return the target object.
	ObjectSchema *GetGroupObjectSchema
	StatusCode   int
	RawResponse  *http.Response
}
