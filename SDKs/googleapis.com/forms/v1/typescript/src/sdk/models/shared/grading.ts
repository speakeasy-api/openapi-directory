/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CorrectAnswers } from "./correctanswers";
import { Feedback } from "./feedback";
import { Expose, Type } from "class-transformer";

/**
 * Grading for a single question
 */
export class Grading extends SpeakeasyBase {
  /**
   * The answer key for a question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "correctAnswers" })
  @Type(() => CorrectAnswers)
  correctAnswers?: CorrectAnswers;

  /**
   * Feedback for a respondent about their response to a question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generalFeedback" })
  @Type(() => Feedback)
  generalFeedback?: Feedback;

  /**
   * Required. The maximum number of points a respondent can automatically get for a correct answer. This must not be negative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pointValue" })
  pointValue?: number;

  /**
   * Feedback for a respondent about their response to a question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "whenRight" })
  @Type(() => Feedback)
  whenRight?: Feedback;

  /**
   * Feedback for a respondent about their response to a question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "whenWrong" })
  @Type(() => Feedback)
  whenWrong?: Feedback;
}
