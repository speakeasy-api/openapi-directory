// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostHubPayslipsMultipartSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostHubPayslipsMultipartFormDataAccountingWorkbookEnum string

const (
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumCustomer    PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "customer"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumProvider    PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "provider"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumBank        PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "bank"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumCashWoucher PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "cashWoucher"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumFiscal      PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "fiscal"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumInsurance   PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "insurance"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumSocial      PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "social"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumOther       PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "other"
	PostHubPayslipsMultipartFormDataAccountingWorkbookEnumPermanent   PostHubPayslipsMultipartFormDataAccountingWorkbookEnum = "permanent"
)

func (e *PostHubPayslipsMultipartFormDataAccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostHubPayslipsMultipartFormDataAccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostHubPayslipsMultipartFormDataAccountingWorkbookEnum: %s", s)
	}
}

type PostHubPayslipsMultipartFormDataAccounting struct {
	AccountedOn *string                                                 `json:"AccountedOn,omitempty"`
	Workbook    *PostHubPayslipsMultipartFormDataAccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                 `json:"YearMonth,omitempty"`
}

type PostHubPayslipsMultipartFormDataFile struct {
	File    string `multipartForm:"name=File"`
	Content []byte `multipartForm:"content"`
}

// PostHubPayslipsMultipartFormData1 - Document to add
type PostHubPayslipsMultipartFormData1 struct {
	Accounting *PostHubPayslipsMultipartFormDataAccounting `multipartForm:"name=Accounting,json"`
	Author     *string                                     `multipartForm:"name=Author"`
	Comment    *string                                     `multipartForm:"name=Comment"`
	Date       *string                                     `multipartForm:"name=Date"`
	File       PostHubPayslipsMultipartFormDataFile        `multipartForm:"file"`
	Title      string                                      `multipartForm:"name=Title"`
}

type PostHubPayslipsMultipartRequest struct {
	// Document to add
	Request  PostHubPayslipsMultipartFormData1 `request:"mediaType=multipart/form-data"`
	Security PostHubPayslipsMultipartSecurity
}

// PostHubPayslipsMultipart201ApplicationJSON - Id of documents created
type PostHubPayslipsMultipart201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostHubPayslipsMultipartResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of documents created
	PostHubPayslipsMultipart201ApplicationJSONObject *PostHubPayslipsMultipart201ApplicationJSON
}
