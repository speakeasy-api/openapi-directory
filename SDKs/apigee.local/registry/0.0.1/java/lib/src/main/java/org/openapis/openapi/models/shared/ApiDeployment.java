/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ApiDeployment - An ApiDeployment describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.
 */
public class ApiDeployment {
    /**
     * Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessGuidance")
    public String accessGuidance;
    public ApiDeployment withAccessGuidance(String accessGuidance) {
        this.accessGuidance = accessGuidance;
        return this;
    }
    
    /**
     * Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;
    public ApiDeployment withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * The full resource name (including revision id) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: apis/{api}/deployments/{deployment}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiSpecRevision")
    public String apiSpecRevision;
    public ApiDeployment withApiSpecRevision(String apiSpecRevision) {
        this.apiSpecRevision = apiSpecRevision;
        return this;
    }
    
    /**
     * Output only. Creation timestamp; when the deployment resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createTime")
    public OffsetDateTime createTime;
    public ApiDeployment withCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A detailed description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ApiDeployment withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Human-meaningful name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public ApiDeployment withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The address where the deployment is serving. Changes to this value will update the revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpointUri")
    public String endpointUri;
    public ApiDeployment withEndpointUri(String endpointUri) {
        this.endpointUri = endpointUri;
        return this;
    }
    
    /**
     * The address of the external channel of the API (e.g. the Developer Portal). Changes to this value will not affect the revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalChannelUri")
    public String externalChannelUri;
    public ApiDeployment withExternalChannelUri(String externalChannelUri) {
        this.externalChannelUri = externalChannelUri;
        return this;
    }
    
    /**
     * Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intendedAudience")
    public String intendedAudience;
    public ApiDeployment withIntendedAudience(String intendedAudience) {
        this.intendedAudience = intendedAudience;
        return this;
    }
    
    /**
     * Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "registry.googleapis.com/" and cannot be changed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public ApiDeployment withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ApiDeployment withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. Revision creation timestamp; when the represented revision was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("revisionCreateTime")
    public OffsetDateTime revisionCreateTime;
    public ApiDeployment withRevisionCreateTime(OffsetDateTime revisionCreateTime) {
        this.revisionCreateTime = revisionCreateTime;
        return this;
    }
    
    /**
     * Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionId")
    public String revisionId;
    public ApiDeployment withRevisionId(String revisionId) {
        this.revisionId = revisionId;
        return this;
    }
    
    /**
     * Output only. Last update timestamp: when the represented revision was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("revisionUpdateTime")
    public OffsetDateTime revisionUpdateTime;
    public ApiDeployment withRevisionUpdateTime(OffsetDateTime revisionUpdateTime) {
        this.revisionUpdateTime = revisionUpdateTime;
        return this;
    }
    
}
