/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetTreeRequest {
    /**
     * owner of the repo
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=owner")
    public String owner;
    public GetTreeRequest withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * page number; the 'truncated' field in the response will be true if there are still more items after this page, false if the last page
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GetTreeRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * number of items per page
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;
    public GetTreeRequest withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * show all directories and files
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=recursive")
    public Boolean recursive;
    public GetTreeRequest withRecursive(Boolean recursive) {
        this.recursive = recursive;
        return this;
    }
    
    /**
     * name of the repo
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=repo")
    public String repo;
    public GetTreeRequest withRepo(String repo) {
        this.repo = repo;
        return this;
    }
    
    /**
     * sha of the commit
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=sha")
    public String sha;
    public GetTreeRequest withSha(String sha) {
        this.sha = sha;
        return this;
    }
    
}
