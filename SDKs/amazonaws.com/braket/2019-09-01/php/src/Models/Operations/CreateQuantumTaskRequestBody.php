<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateQuantumTaskRequestBody
{
    /**
     * The action associated with the task.
     * 
     * @var string $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $action;
    
    /**
     * The client token associated with the request.
     * 
     * @var string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientToken;
    
    /**
     * The ARN of the device to run the task on.
     * 
     * @var string $deviceArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceArn;
    
    /**
     * The parameters for the device to run the task on.
     * 
     * @var ?string $deviceParameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceParameters')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceParameters = null;
    
    /**
     * The token for an Amazon Braket job that associates it with the quantum task.
     * 
     * @var ?string $jobToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jobToken = null;
    
    /**
     * The S3 bucket to store task result files in.
     * 
     * @var string $outputS3Bucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputS3Bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $outputS3Bucket;
    
    /**
     * The key prefix for the location in the S3 bucket to store task results in.
     * 
     * @var string $outputS3KeyPrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputS3KeyPrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $outputS3KeyPrefix;
    
    /**
     * The number of shots to use for the task.
     * 
     * @var int $shots
     */
	#[\JMS\Serializer\Annotation\SerializedName('shots')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $shots;
    
    /**
     * Tags to be added to the quantum task you're creating.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->action = "";
		$this->clientToken = "";
		$this->deviceArn = "";
		$this->deviceParameters = null;
		$this->jobToken = null;
		$this->outputS3Bucket = "";
		$this->outputS3KeyPrefix = "";
		$this->shots = 0;
		$this->tags = null;
	}
}
