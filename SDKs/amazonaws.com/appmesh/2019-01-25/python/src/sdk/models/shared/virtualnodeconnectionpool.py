"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import virtualnodegrpcconnectionpool as shared_virtualnodegrpcconnectionpool
from ..shared import virtualnodehttp2connectionpool as shared_virtualnodehttp2connectionpool
from ..shared import virtualnodehttpconnectionpool as shared_virtualnodehttpconnectionpool
from ..shared import virtualnodetcpconnectionpool as shared_virtualnodetcpconnectionpool
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VirtualNodeConnectionPool:
    r"""<p>An object that represents the type of virtual node connection pool.</p> <p>Only one protocol is used at a time and should be the same protocol as the one chosen under port mapping.</p> <p>If not present the default value for <code>maxPendingRequests</code> is <code>2147483647</code>.</p> <p/>"""
    
    grpc: Optional[shared_virtualnodegrpcconnectionpool.VirtualNodeGrpcConnectionPool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grpc'), 'exclude': lambda f: f is None }})  
    http: Optional[shared_virtualnodehttpconnectionpool.VirtualNodeHTTPConnectionPool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http'), 'exclude': lambda f: f is None }})  
    http2: Optional[shared_virtualnodehttp2connectionpool.VirtualNodeHttp2ConnectionPool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http2'), 'exclude': lambda f: f is None }})  
    tcp: Optional[shared_virtualnodetcpconnectionpool.VirtualNodeTCPConnectionPool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tcp'), 'exclude': lambda f: f is None }})  
    