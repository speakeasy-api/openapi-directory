/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GETModifyTransitGatewayActionEnum {
  ModifyTransitGateway = "ModifyTransitGateway",
}

/**
 * The transit gateway options.
 */
export class GETModifyTransitGatewayOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=AddTransitGatewayCidrBlocks" })
  addTransitGatewayCidrBlocks?: string[];

  @SpeakeasyMetadata({ data: "queryParam, name=AmazonSideAsn" })
  amazonSideAsn?: number;

  @SpeakeasyMetadata({
    data: "queryParam, name=AssociationDefaultRouteTableId",
  })
  associationDefaultRouteTableId?: string;

  @SpeakeasyMetadata({ data: "queryParam, name=AutoAcceptSharedAttachments" })
  autoAcceptSharedAttachments?: shared.AutoAcceptSharedAttachmentsValueEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=DefaultRouteTableAssociation" })
  defaultRouteTableAssociation?: shared.DefaultRouteTableAssociationValueEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=DefaultRouteTablePropagation" })
  defaultRouteTablePropagation?: shared.DefaultRouteTablePropagationValueEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=DnsSupport" })
  dnsSupport?: shared.DnsSupportValueEnum;

  @SpeakeasyMetadata({
    data: "queryParam, name=PropagationDefaultRouteTableId",
  })
  propagationDefaultRouteTableId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, name=RemoveTransitGatewayCidrBlocks",
  })
  removeTransitGatewayCidrBlocks?: string[];

  @SpeakeasyMetadata({ data: "queryParam, name=VpnEcmpSupport" })
  vpnEcmpSupport?: shared.VpnEcmpSupportValueEnum;
}

export enum GETModifyTransitGatewayVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifyTransitGatewayRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyTransitGatewayActionEnum;

  /**
   * The description for the transit gateway.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Description",
  })
  description?: string;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The options to modify.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Options",
  })
  options?: GETModifyTransitGatewayOptions;

  /**
   * The ID of the transit gateway.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TransitGatewayId",
  })
  transitGatewayId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyTransitGatewayVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyTransitGatewayResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
