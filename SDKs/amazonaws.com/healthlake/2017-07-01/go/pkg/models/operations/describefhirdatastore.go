// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeFHIRDatastoreXAmzTargetEnum
type DescribeFHIRDatastoreXAmzTargetEnum string

const (
	DescribeFHIRDatastoreXAmzTargetEnumHealthLakeDescribeFhirDatastore DescribeFHIRDatastoreXAmzTargetEnum = "HealthLake.DescribeFHIRDatastore"
)

func (e DescribeFHIRDatastoreXAmzTargetEnum) ToPointer() *DescribeFHIRDatastoreXAmzTargetEnum {
	return &e
}

func (e *DescribeFHIRDatastoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HealthLake.DescribeFHIRDatastore":
		*e = DescribeFHIRDatastoreXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFHIRDatastoreXAmzTargetEnum: %v", v)
	}
}

type DescribeFHIRDatastoreRequest struct {
	DescribeFHIRDatastoreRequest shared.DescribeFHIRDatastoreRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DescribeFHIRDatastoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeFHIRDatastoreResponse struct {
	ContentType string
	// Success
	DescribeFHIRDatastoreResponse *shared.DescribeFHIRDatastoreResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
