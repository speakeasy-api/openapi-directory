"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import onevehicles_1percent_7bvehicleidpercent_7d_1charge_state_get_responses_200_content_application_1json_schema as shared_onevehicles_1percent_7bvehicleidpercent_7d_1charge_state_get_responses_200_content_application_1json_schema
from ..shared import onevehicles_1percent_7bvehicleidpercent_7d_1information_get_responses_200_content_application_1json_schema as shared_onevehicles_1percent_7bvehicleidpercent_7d_1information_get_responses_200_content_application_1json_schema
from ..shared import onevehicles_1percent_7bvehicleidpercent_7d_1location_get_responses_200_content_application_1json_schema as shared_onevehicles_1percent_7bvehicleidpercent_7d_1location_get_responses_200_content_application_1json_schema
from ..shared import onevehicles_1percent_7bvehicleidpercent_7d_1odometer_get_responses_200_content_application_1json_schema as shared_onevehicles_1percent_7bvehicleidpercent_7d_1odometer_get_responses_200_content_application_1json_schema
from ..shared import onevehicles_1percent_7bvehicleidpercent_7d_1smart_charging_policy_put_requestbody_content_application_1json_schema as shared_onevehicles_1percent_7bvehicleidpercent_7d_1smart_charging_policy_put_requestbody_content_application_1json_schema
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetVehiclesVehicleidSecurity:
    
    user_access_token: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    user_access_token1: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    user_access_token2: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    user_access_token3: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    user_access_token4: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    user_access_token5: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetVehiclesVehicleidFieldEnum(str, Enum):
    SMART_CHARGING_POLICY = 'smartChargingPolicy'
    CHARGE_STATE = 'chargeState'
    LOCATION = 'location'
    INFORMATION = 'information'
    ODOMETER = 'odometer'


@dataclasses.dataclass
class GetVehiclesVehicleidRequest:
    
    vehicle_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'vehicleId', 'style': 'simple', 'explode': False }})
    r"""ID of the Vehicle"""  
    field: Optional[list[GetVehiclesVehicleidFieldEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'field[]', 'style': 'form', 'explode': True }})
    r"""An optional array of Vehicle fields that should be included in the response, for example: `?field[]=information&field[]=location`
    
    By default, no fields are included and only the Vehicle ID will be returned. Response time may be impacted by which fields you request.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetVehiclesVehicleid200ApplicationJSON:
    r"""Successful"""
    
    charging_location_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargingLocationId') }})
    r"""Id of the charging location the vehicle is currently positioned at (if any)"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Vehicle ID"""  
    is_reachable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isReachable') }})
    r"""Is the vehicle currently reachable?"""  
    last_seen: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastSeen'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""The last time vehicle was successfully communicated with"""  
    charge_state: Optional[shared_onevehicles_1percent_7bvehicleidpercent_7d_1charge_state_get_responses_200_content_application_1json_schema.Onevehicles1Percent7BvehicleIDPercent7D1chargeStateGetResponses200ContentApplication1jsonSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeState'), 'exclude': lambda f: f is None }})  
    information: Optional[shared_onevehicles_1percent_7bvehicleidpercent_7d_1information_get_responses_200_content_application_1json_schema.Onevehicles1Percent7BvehicleIDPercent7D1informationGetResponses200ContentApplication1jsonSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('information'), 'exclude': lambda f: f is None }})
    r"""Descriptive information about the Vehicle"""  
    location: Optional[shared_onevehicles_1percent_7bvehicleidpercent_7d_1location_get_responses_200_content_application_1json_schema.Onevehicles1Percent7BvehicleIDPercent7D1locationGetResponses200ContentApplication1jsonSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""Vehicle's GPS coordinates with timestamp"""  
    odometer: Optional[shared_onevehicles_1percent_7bvehicleidpercent_7d_1odometer_get_responses_200_content_application_1json_schema.Onevehicles1Percent7BvehicleIDPercent7D1odometerGetResponses200ContentApplication1jsonSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('odometer'), 'exclude': lambda f: f is None }})
    r"""Vehicle's odometer with timestamp"""  
    smart_charging_policy: Optional[shared_onevehicles_1percent_7bvehicleidpercent_7d_1smart_charging_policy_put_requestbody_content_application_1json_schema.Onevehicles1Percent7BvehicleIDPercent7D1smartChargingPolicyPutRequestBodyContentApplication1jsonSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('smartChargingPolicy'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetVehiclesVehicleidResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_vehicles_vehicleid_200_application_json_object: Optional[GetVehiclesVehicleid200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    