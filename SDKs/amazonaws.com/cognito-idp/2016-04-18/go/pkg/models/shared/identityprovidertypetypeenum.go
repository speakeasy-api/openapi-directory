// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IdentityProviderTypeTypeEnum string

const (
	IdentityProviderTypeTypeEnumSaml            IdentityProviderTypeTypeEnum = "SAML"
	IdentityProviderTypeTypeEnumFacebook        IdentityProviderTypeTypeEnum = "Facebook"
	IdentityProviderTypeTypeEnumGoogle          IdentityProviderTypeTypeEnum = "Google"
	IdentityProviderTypeTypeEnumLoginWithAmazon IdentityProviderTypeTypeEnum = "LoginWithAmazon"
	IdentityProviderTypeTypeEnumSignInWithApple IdentityProviderTypeTypeEnum = "SignInWithApple"
	IdentityProviderTypeTypeEnumOidc            IdentityProviderTypeTypeEnum = "OIDC"
)

func (e IdentityProviderTypeTypeEnum) ToPointer() *IdentityProviderTypeTypeEnum {
	return &e
}

func (e *IdentityProviderTypeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SAML":
		fallthrough
	case "Facebook":
		fallthrough
	case "Google":
		fallthrough
	case "LoginWithAmazon":
		fallthrough
	case "SignInWithApple":
		fallthrough
	case "OIDC":
		*e = IdentityProviderTypeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IdentityProviderTypeTypeEnum: %v", v)
	}
}
