/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETSetIdentityNotificationTopicActionEnum {
  SetIdentityNotificationTopic = "SetIdentityNotificationTopic",
}

/**
 * The type of notifications that will be published to the specified Amazon SNS topic.
 */
export enum GETSetIdentityNotificationTopicNotificationTypeEnum {
  Bounce = "Bounce",
  Complaint = "Complaint",
  Delivery = "Delivery",
}

export enum GETSetIdentityNotificationTopicVersionEnum {
  TwoThousandAndTen1201 = "2010-12-01",
}

export class GETSetIdentityNotificationTopicRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETSetIdentityNotificationTopicActionEnum;

  /**
   * <p>The identity (email address or domain) that you want to set the Amazon SNS topic for.</p> <important> <p>You can only specify a verified identity for this parameter.</p> </important> <p>You can specify an identity by using its name or by using its Amazon Resource Name (ARN). The following examples are all valid identities: <code>sender@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Identity",
  })
  identity: string;

  /**
   * The type of notifications that will be published to the specified Amazon SNS topic.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NotificationType",
  })
  notificationType: GETSetIdentityNotificationTopicNotificationTypeEnum;

  /**
   * The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing is disabled.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SnsTopic",
  })
  snsTopic?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETSetIdentityNotificationTopicVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETSetIdentityNotificationTopicResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
