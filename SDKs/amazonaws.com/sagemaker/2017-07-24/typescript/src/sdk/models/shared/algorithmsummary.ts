/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlgorithmStatusEnum } from "./algorithmstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Provides summary information about an algorithm.
 */
export class AlgorithmSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmArn" })
  algorithmArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmDescription" })
  algorithmDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmName" })
  algorithmName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmStatus" })
  algorithmStatus: AlgorithmStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;
}
