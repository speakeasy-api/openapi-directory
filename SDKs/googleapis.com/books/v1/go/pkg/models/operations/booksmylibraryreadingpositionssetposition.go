// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BooksMylibraryReadingpositionsSetPositionSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type BooksMylibraryReadingpositionsSetPositionPathParams struct {
	// ID of volume for which to update the reading position.
	VolumeID string `pathParam:"style=simple,explode=false,name=volumeId"`
}

// BooksMylibraryReadingpositionsSetPositionActionEnum - Action that caused this reading position to be set.
type BooksMylibraryReadingpositionsSetPositionActionEnum string

const (
	BooksMylibraryReadingpositionsSetPositionActionEnumActionUndefined BooksMylibraryReadingpositionsSetPositionActionEnum = "ACTION_UNDEFINED"
	BooksMylibraryReadingpositionsSetPositionActionEnumBookmark        BooksMylibraryReadingpositionsSetPositionActionEnum = "bookmark"
	BooksMylibraryReadingpositionsSetPositionActionEnumChapter         BooksMylibraryReadingpositionsSetPositionActionEnum = "chapter"
	BooksMylibraryReadingpositionsSetPositionActionEnumNextPage        BooksMylibraryReadingpositionsSetPositionActionEnum = "next-page"
	BooksMylibraryReadingpositionsSetPositionActionEnumPrevPage        BooksMylibraryReadingpositionsSetPositionActionEnum = "prev-page"
	BooksMylibraryReadingpositionsSetPositionActionEnumScroll          BooksMylibraryReadingpositionsSetPositionActionEnum = "scroll"
	BooksMylibraryReadingpositionsSetPositionActionEnumSearch          BooksMylibraryReadingpositionsSetPositionActionEnum = "search"
)

func (e *BooksMylibraryReadingpositionsSetPositionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTION_UNDEFINED":
		fallthrough
	case "bookmark":
		fallthrough
	case "chapter":
		fallthrough
	case "next-page":
		fallthrough
	case "prev-page":
		fallthrough
	case "scroll":
		fallthrough
	case "search":
		*e = BooksMylibraryReadingpositionsSetPositionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BooksMylibraryReadingpositionsSetPositionActionEnum: %s", s)
	}
}

type BooksMylibraryReadingpositionsSetPositionQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Action that caused this reading position to be set.
	Action *BooksMylibraryReadingpositionsSetPositionActionEnum `queryParam:"style=form,explode=true,name=action"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Volume content version for which this reading position applies.
	ContentVersion *string `queryParam:"style=form,explode=true,name=contentVersion"`
	// Random persistent device cookie optional on set position.
	DeviceCookie *string `queryParam:"style=form,explode=true,name=deviceCookie"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Position string for the new volume reading position.
	Position string `queryParam:"style=form,explode=true,name=position"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// String to identify the originator of this request.
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// RFC 3339 UTC format timestamp associated with this reading position.
	Timestamp string `queryParam:"style=form,explode=true,name=timestamp"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type BooksMylibraryReadingpositionsSetPositionRequest struct {
	PathParams  BooksMylibraryReadingpositionsSetPositionPathParams
	QueryParams BooksMylibraryReadingpositionsSetPositionQueryParams
	Security    BooksMylibraryReadingpositionsSetPositionSecurity
}

type BooksMylibraryReadingpositionsSetPositionResponse struct {
	ContentType string
	// Successful response
	Empty       map[string]interface{}
	StatusCode  int
	RawResponse *http.Response
}
