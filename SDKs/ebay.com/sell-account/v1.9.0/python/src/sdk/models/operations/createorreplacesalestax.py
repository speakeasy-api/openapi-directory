"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import salestaxbase as shared_salestaxbase
from typing import Optional


@dataclasses.dataclass
class CreateOrReplaceSalesTaxSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class CreateOrReplaceSalesTaxRequest:
    
    country_code: str = dataclasses.field(metadata={'path_param': { 'field_name': 'countryCode', 'style': 'simple', 'explode': False }})
    r"""This path parameter specifies the two-letter <a href=\\"https://www.iso.org/iso-3166-country-codes.html \\" title=\\"https://www.iso.org \\" target=\\"_blank\\">ISO 3166</a> code for the country for which you want to create a sales tax table entry."""  
    jurisdiction_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'jurisdictionId', 'style': 'simple', 'explode': False }})
    r"""This path parameter specifies the ID of the tax jurisdiction for the table entry you want to create. Retrieve valid jurisdiction IDs using <b>getSalesTaxJurisdictions</b> in the Metadata API."""  
    sales_tax_base: shared_salestaxbase.SalesTaxBase = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A container that describes the how the sales tax is calculated."""  
    

@dataclasses.dataclass
class CreateOrReplaceSalesTaxResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    