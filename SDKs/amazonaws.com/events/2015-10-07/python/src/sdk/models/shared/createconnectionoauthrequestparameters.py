"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectionhttpparameters as shared_connectionhttpparameters
from ..shared import connectionoauthhttpmethod_enum as shared_connectionoauthhttpmethod_enum
from ..shared import createconnectionoauthclientrequestparameters as shared_createconnectionoauthclientrequestparameters
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateConnectionOAuthRequestParameters:
    r"""Contains the OAuth authorization parameters to use for the connection."""
    
    authorization_endpoint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthorizationEndpoint') }})  
    client_parameters: shared_createconnectionoauthclientrequestparameters.CreateConnectionOAuthClientRequestParameters = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientParameters') }})  
    http_method: shared_connectionoauthhttpmethod_enum.ConnectionOAuthHTTPMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpMethod') }})  
    o_auth_http_parameters: Optional[shared_connectionhttpparameters.ConnectionHTTPParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OAuthHttpParameters'), 'exclude': lambda f: f is None }})  
    