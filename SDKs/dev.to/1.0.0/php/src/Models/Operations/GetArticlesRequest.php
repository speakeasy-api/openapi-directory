<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetArticlesRequest
{
    /**
     * Adding this will allow the client to return the list of articles
     * 
     * belonging to the requested collection, ordered by ascending publication date.
     * 
     * @var ?int $collectionId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=collection_id')]
    public ?int $collectionId = null;
    
    /**
     * Pagination page
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Page size (the number of items to return per page). The default maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Using this parameter will allow the client to check which articles are fresh or rising.
     * 
     *             If `state=fresh` the server will return fresh articles.
     *             If `state=rising` the server will return rising articles.
     *             This param can be used in conjuction with `username`, only if set to `all`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetArticlesStateEnum $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?GetArticlesStateEnum $state = null;
    
    /**
     * Using this parameter will retrieve articles that contain the requested tag. Articles
     * 
     * will be ordered by descending popularity.This parameter can be used in conjuction with `top`.
     * 
     * @var ?string $tag
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tag')]
    public ?string $tag = null;
    
    /**
     * Using this parameter will retrieve articles with any of the comma-separated tags.
     * 
     * Articles will be ordered by descending popularity.
     * 
     * @var ?string $tags
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tags')]
    public ?string $tags = null;
    
    /**
     * Using this parameter will retrieve articles that do _not_ contain _any_
     * 
     * of comma-separated tags. Articles will be ordered by descending popularity.
     * 
     * @var ?string $tagsExclude
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tags_exclude')]
    public ?string $tagsExclude = null;
    
    /**
     * Using this parameter will allow the client to return the most popular articles
     * 
     * in the last `N` days.
     * `top` indicates the number of days since publication of the articles returned.
     * This param can be used in conjuction with `tag`.
     * 
     * @var ?int $top
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=top')]
    public ?int $top = null;
    
    /**
     * Using this parameter will retrieve articles belonging
     * 
     *             to a User or Organization ordered by descending publication date.
     *             If `state=all` the number of items returned will be `1000` instead of the default `30`.
     *             This parameter can be used in conjuction with `state`.
     * 
     * @var ?string $username
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=username')]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->collectionId = null;
		$this->page = null;
		$this->perPage = null;
		$this->state = null;
		$this->tag = null;
		$this->tags = null;
		$this->tagsExclude = null;
		$this->top = null;
		$this->username = null;
	}
}
