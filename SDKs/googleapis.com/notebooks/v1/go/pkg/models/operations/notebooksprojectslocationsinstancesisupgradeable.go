// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type NotebooksProjectsLocationsInstancesIsUpgradeableSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum - Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.
type NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum string

const (
	NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnumUpgradeTypeUnspecified NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum = "UPGRADE_TYPE_UNSPECIFIED"
	NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnumUpgradeFramework       NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum = "UPGRADE_FRAMEWORK"
	NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnumUpgradeOs              NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum = "UPGRADE_OS"
	NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnumUpgradeCuda            NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum = "UPGRADE_CUDA"
	NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnumUpgradeAll             NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum = "UPGRADE_ALL"
)

func (e *NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UPGRADE_TYPE_UNSPECIFIED":
		fallthrough
	case "UPGRADE_FRAMEWORK":
		fallthrough
	case "UPGRADE_OS":
		fallthrough
	case "UPGRADE_CUDA":
		fallthrough
	case "UPGRADE_ALL":
		*e = NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum: %s", s)
	}
}

type NotebooksProjectsLocationsInstancesIsUpgradeableRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`
	NotebookInstance string `pathParam:"style=simple,explode=false,name=notebookInstance"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.
	Type *NotebooksProjectsLocationsInstancesIsUpgradeableTypeEnum `queryParam:"style=form,explode=true,name=type"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type NotebooksProjectsLocationsInstancesIsUpgradeableResponse struct {
	ContentType string
	// Successful response
	IsInstanceUpgradeableResponse *shared.IsInstanceUpgradeableResponse
	StatusCode                    int
	RawResponse                   *http.Response
}
