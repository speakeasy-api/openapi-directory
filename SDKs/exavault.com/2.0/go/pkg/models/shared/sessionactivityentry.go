// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SessionActivityEntryAttributes struct {
	BytesTransferred *int64  `json:"bytesTransferred,omitempty"`
	Created          *string `json:"created,omitempty"`
	Duration         *int64  `json:"duration,omitempty"`
	FileName         *string `json:"fileName,omitempty"`
	FileSource       *string `json:"fileSource,omitempty"`
	IPAddress        *string `json:"ipAddress,omitempty"`
	Operation        *string `json:"operation,omitempty"`
	Protocol         *string `json:"protocol,omitempty"`
	SessionID        *string `json:"sessionId,omitempty"`
	Status           *string `json:"status,omitempty"`
	Username         *string `json:"username,omitempty"`
}

type SessionActivityEntryTypeEnum string

const (
	SessionActivityEntryTypeEnumSessionActivity SessionActivityEntryTypeEnum = "sessionActivity"
)

func (e SessionActivityEntryTypeEnum) ToPointer() *SessionActivityEntryTypeEnum {
	return &e
}

func (e *SessionActivityEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sessionActivity":
		*e = SessionActivityEntryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SessionActivityEntryTypeEnum: %v", v)
	}
}

// SessionActivityEntry - Single entry of session activity
type SessionActivityEntry struct {
	Attributes *SessionActivityEntryAttributes `json:"attributes,omitempty"`
	ID         *int64                          `json:"id,omitempty"`
	Type       *SessionActivityEntryTypeEnum   `json:"type,omitempty"`
}
