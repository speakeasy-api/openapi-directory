// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeRecipeXAmzTargetEnum
type DescribeRecipeXAmzTargetEnum string

const (
	DescribeRecipeXAmzTargetEnumAmazonPersonalizeDescribeRecipe DescribeRecipeXAmzTargetEnum = "AmazonPersonalize.DescribeRecipe"
)

func (e *DescribeRecipeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonPersonalize.DescribeRecipe":
		*e = DescribeRecipeXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeRecipeXAmzTargetEnum: %s", s)
	}
}

type DescribeRecipeRequest struct {
	DescribeRecipeRequest shared.DescribeRecipeRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DescribeRecipeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeRecipeResponse struct {
	ContentType string
	// Success
	DescribeRecipeResponse *shared.DescribeRecipeResponse
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
