// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeExpressionsActionEnum
type POSTDescribeExpressionsActionEnum string

const (
	POSTDescribeExpressionsActionEnumDescribeExpressions POSTDescribeExpressionsActionEnum = "DescribeExpressions"
)

func (e *POSTDescribeExpressionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeExpressions":
		*e = POSTDescribeExpressionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeExpressionsActionEnum: %s", s)
	}
}

// POSTDescribeExpressionsVersionEnum
type POSTDescribeExpressionsVersionEnum string

const (
	POSTDescribeExpressionsVersionEnumTwoThousandAndThirteen0101 POSTDescribeExpressionsVersionEnum = "2013-01-01"
)

func (e *POSTDescribeExpressionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-01":
		*e = POSTDescribeExpressionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeExpressionsVersionEnum: %s", s)
	}
}

type POSTDescribeExpressionsRequest struct {
	Action            POSTDescribeExpressionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                             `request:"mediaType=text/xml"`
	Version           POSTDescribeExpressionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeExpressionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
