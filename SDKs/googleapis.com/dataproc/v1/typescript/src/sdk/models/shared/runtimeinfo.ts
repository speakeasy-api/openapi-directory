/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UsageMetrics } from "./usagemetrics";
import { UsageSnapshot } from "./usagesnapshot";
import { Expose, Type } from "class-transformer";

/**
 * Runtime information about workload execution.
 */
export class RuntimeInfo extends SpeakeasyBase {
  /**
   * Usage metrics represent approximate total resources consumed by a workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approximateUsage" })
  @Type(() => UsageMetrics)
  approximateUsage?: UsageMetrics;

  /**
   * The usage snaphot represents the resources consumed by a workload at a specified time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentUsage" })
  @Type(() => UsageSnapshot)
  currentUsage?: UsageSnapshot;

  /**
   * Output only. A URI pointing to the location of the diagnostics tarball.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "diagnosticOutputUri" })
  diagnosticOutputUri?: string;

  /**
   * Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endpoints" })
  endpoints?: Record<string, string>;

  /**
   * Output only. A URI pointing to the location of the stdout and stderr of the workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outputUri" })
  outputUri?: string;
}

/**
 * Runtime information about workload execution.
 */
export class RuntimeInfoInput extends SpeakeasyBase {
  /**
   * Usage metrics represent approximate total resources consumed by a workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approximateUsage" })
  @Type(() => UsageMetrics)
  approximateUsage?: UsageMetrics;

  /**
   * The usage snaphot represents the resources consumed by a workload at a specified time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentUsage" })
  @Type(() => UsageSnapshot)
  currentUsage?: UsageSnapshot;
}
