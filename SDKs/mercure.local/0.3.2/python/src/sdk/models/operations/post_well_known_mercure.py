"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostWellKnownMercureRequestBody:
    
    data: str = dataclasses.field(metadata={'form': { 'field_name': 'data' }})
    r"""The content of the new version of this topic."""  
    topic: list[str] = dataclasses.field(metadata={'form': { 'field_name': 'topic' }})
    r"""IRIs of the updated topic. If this key is present several times, the first occurrence is considered to be the canonical URL of the topic, and other ones are considered to be alternate URLs."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'id' }})
    r"""The topic's revision identifier: it will be used as the SSE's `id` property."""  
    private: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'private' }})
    r"""To mark an update as private. If not provided, this update will be public."""  
    retry: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'retry' }})
    r"""The SSE's `retry` property (the reconnection time)."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'type' }})
    r"""The SSE's `event` property (a specific event type)."""  
    

@dataclasses.dataclass
class PostWellKnownMercureResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    