// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AutoInstallPolicyAutoInstallModeEnum - The auto-install mode. If unset defaults to "doNotAutoInstall".
type AutoInstallPolicyAutoInstallModeEnum string

const (
	AutoInstallPolicyAutoInstallModeEnumAutoInstallModeUnspecified AutoInstallPolicyAutoInstallModeEnum = "autoInstallModeUnspecified"
	AutoInstallPolicyAutoInstallModeEnumDoNotAutoInstall           AutoInstallPolicyAutoInstallModeEnum = "doNotAutoInstall"
	AutoInstallPolicyAutoInstallModeEnumAutoInstallOnce            AutoInstallPolicyAutoInstallModeEnum = "autoInstallOnce"
	AutoInstallPolicyAutoInstallModeEnumForceAutoInstall           AutoInstallPolicyAutoInstallModeEnum = "forceAutoInstall"
)

func (e *AutoInstallPolicyAutoInstallModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "autoInstallModeUnspecified":
		fallthrough
	case "doNotAutoInstall":
		fallthrough
	case "autoInstallOnce":
		fallthrough
	case "forceAutoInstall":
		*e = AutoInstallPolicyAutoInstallModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoInstallPolicyAutoInstallModeEnum: %s", s)
	}
}

type AutoInstallPolicy struct {
	// The constraints for auto-installing the app. You can specify a maximum of one constraint.
	AutoInstallConstraint []AutoInstallConstraint `json:"autoInstallConstraint,omitempty"`
	// The auto-install mode. If unset defaults to "doNotAutoInstall".
	AutoInstallMode *AutoInstallPolicyAutoInstallModeEnum `json:"autoInstallMode,omitempty"`
	// The priority of the install, as an unsigned integer. A lower number means higher priority.
	AutoInstallPriority *int `json:"autoInstallPriority,omitempty"`
	// The minimum version of the app. If a lower version of the app is installed, then the app will be auto-updated according to the auto-install constraints, instead of waiting for the regular auto-update. You can set a minimum version code for at most 20 apps per device.
	MinimumVersionCode *int `json:"minimumVersionCode,omitempty"`
}
