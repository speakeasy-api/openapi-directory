// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UserRightsEnum - User rights
type UserRightsEnum string

const (
	UserRightsEnumReadAndWrite UserRightsEnum = "read_and_write"
	UserRightsEnumReadOnly     UserRightsEnum = "read_only"
)

func (e UserRightsEnum) ToPointer() *UserRightsEnum {
	return &e
}

func (e *UserRightsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read_and_write":
		fallthrough
	case "read_only":
		*e = UserRightsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserRightsEnum: %v", v)
	}
}
