// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateMLModelXAmzTargetEnum
type UpdateMLModelXAmzTargetEnum string

const (
	UpdateMLModelXAmzTargetEnumAmazonMl20141212UpdateMlModel UpdateMLModelXAmzTargetEnum = "AmazonML_20141212.UpdateMLModel"
)

func (e UpdateMLModelXAmzTargetEnum) ToPointer() *UpdateMLModelXAmzTargetEnum {
	return &e
}

func (e *UpdateMLModelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonML_20141212.UpdateMLModel":
		*e = UpdateMLModelXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateMLModelXAmzTargetEnum: %v", v)
	}
}

type UpdateMLModelRequest struct {
	UpdateMLModelInput shared.UpdateMLModelInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         UpdateMLModelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateMLModelResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateMLModelOutput *shared.UpdateMLModelOutput
}
