// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateContainerAgentXAmzTargetEnum
type UpdateContainerAgentXAmzTargetEnum string

const (
	UpdateContainerAgentXAmzTargetEnumAmazonEc2ContainerServiceV20141113UpdateContainerAgent UpdateContainerAgentXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.UpdateContainerAgent"
)

func (e *UpdateContainerAgentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerServiceV20141113.UpdateContainerAgent":
		*e = UpdateContainerAgentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateContainerAgentXAmzTargetEnum: %s", s)
	}
}

type UpdateContainerAgentRequest struct {
	UpdateContainerAgentRequest shared.UpdateContainerAgentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  UpdateContainerAgentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateContainerAgentResponse struct {
	// ClientException
	ClientException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// InvalidParameterException
	InvalidParameterException interface{}
	// MissingVersionException
	MissingVersionException interface{}
	// NoUpdateAvailableException
	NoUpdateAvailableException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServerException
	ServerException interface{}
	// Success
	UpdateContainerAgentResponse *shared.UpdateContainerAgentResponse
	// UpdateInProgressException
	UpdateInProgressException interface{}
}
