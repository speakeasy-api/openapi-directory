/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class TaxRate {
    /**
     * Tax code assigned to identify this tax rate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public TaxRate withCode(String code) {
        this.code = code;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("components")
    public TaxRateComponents[] components;
    public TaxRate withComponents(TaxRateComponents[] components) {
        this.components = components;
        return this;
    }
    
    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public TaxRate withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;
    public TaxRate withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Description of tax rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public TaxRate withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Effective tax rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effective_tax_rate")
    public Double effectiveTaxRate;
    public TaxRate withEffectiveTaxRate(Double effectiveTaxRate) {
        this.effectiveTaxRate = effectiveTaxRate;
        return this;
    }
    
    /**
     * ID assigned to identify this tax rate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public TaxRate withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name assigned to identify this tax rate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TaxRate withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("original_tax_rate_id")
    public String originalTaxRateId;
    public TaxRate withOriginalTaxRateId(String originalTaxRateId) {
        this.originalTaxRateId = originalTaxRateId;
        return this;
    }
    
    /**
     * Report Tax type to aggregate tax collected or paid for reporting purposes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("report_tax_type")
    public String reportTaxType;
    public TaxRate withReportTaxType(String reportTaxType) {
        this.reportTaxType = reportTaxType;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;
    public TaxRate withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    /**
     * Tax rate status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public TaxRateTaxRateStatusEnum status;
    public TaxRate withStatus(TaxRateTaxRateStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Unique identifier for the account for tax collected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_payable_account_id")
    public String taxPayableAccountId;
    public TaxRate withTaxPayableAccountId(String taxPayableAccountId) {
        this.taxPayableAccountId = taxPayableAccountId;
        return this;
    }
    
    /**
     * Unique identifier for the account for tax remitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_remitted_account_id")
    public String taxRemittedAccountId;
    public TaxRate withTaxRemittedAccountId(String taxRemittedAccountId) {
        this.taxRemittedAccountId = taxRemittedAccountId;
        return this;
    }
    
    /**
     * Not compounded sum of the components of a tax rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_tax_rate")
    public Double totalTaxRate;
    public TaxRate withTotalTaxRate(Double totalTaxRate) {
        this.totalTaxRate = totalTaxRate;
        return this;
    }
    
    /**
     * Tax type used to indicate the source of tax collected or paid
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public TaxRate withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public TaxRate withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The user who last updated the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    public String updatedBy;
    public TaxRate withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
