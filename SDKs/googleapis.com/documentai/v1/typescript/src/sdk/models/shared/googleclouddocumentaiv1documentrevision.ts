/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDocumentaiV1DocumentRevisionHumanReview } from "./googleclouddocumentaiv1documentrevisionhumanreview";
import { Expose, Type } from "class-transformer";

/**
 * Contains past or forward revisions of this document.
 */
export class GoogleCloudDocumentaiV1DocumentRevision extends SpeakeasyBase {
  /**
   * If the change was made by a person specify the name or id of that person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agent" })
  agent?: string;

  /**
   * The time that the revision was created, internally generated by doc proto storage at the time of create.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Human Review information of the document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "humanReview" })
  @Type(() => GoogleCloudDocumentaiV1DocumentRevisionHumanReview)
  humanReview?: GoogleCloudDocumentaiV1DocumentRevisionHumanReview;

  /**
   * Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  parent?: number[];

  /**
   * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentIds" })
  parentIds?: string[];

  /**
   * If the annotation was made by processor identify the processor by its resource name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processor" })
  processor?: string;
}
