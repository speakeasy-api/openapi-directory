/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ImportationGetCustomColumnExpressionRequest extends SpeakeasyBase {
  /**
   * The custom column identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=columnId",
  })
  columnId: string;

  /**
   * The execution identifier of you catalog importation
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=executionId",
  })
  executionId: string;

  /**
   * Your store identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=storeId",
  })
  storeId: string;
}

export class ImportationGetCustomColumnExpressionResponse extends SpeakeasyBase {
  /**
   * ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
   */
  @SpeakeasyMetadata()
  beezUPCommonErrorResponseMessage?: shared.BeezUPCommonErrorResponseMessage;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Encrypted expression
   */
  @SpeakeasyMetadata()
  importationGetCustomColumnExpression200ApplicationJSONString?: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
