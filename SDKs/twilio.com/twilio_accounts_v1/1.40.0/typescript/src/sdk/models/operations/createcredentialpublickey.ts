/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateCredentialPublicKeyServerList = [
  "https://accounts.twilio.com",
] as const;

export class CreateCredentialPublicKeySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateCredentialPublicKeyCreateCredentialPublicKeyRequest extends SpeakeasyBase {
  /**
   * The SID of the Subaccount that this Credential should be associated with. Must be a valid Subaccount of the account issuing the request
   */
  @SpeakeasyMetadata({ data: "form, name=AccountSid" })
  accountSid?: string;

  /**
   * A descriptive string that you create to describe the resource. It can be up to 64 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * A URL encoded representation of the public key. For example, `-----BEGIN PUBLIC KEY-----MIIBIjANB.pa9xQIDAQAB-----END PUBLIC KEY-----`
   */
  @SpeakeasyMetadata({ data: "form, name=PublicKey" })
  publicKey: string;
}

export class CreateCredentialPublicKeyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  accountsV1CredentialCredentialPublicKey?: shared.AccountsV1CredentialCredentialPublicKey;
}
