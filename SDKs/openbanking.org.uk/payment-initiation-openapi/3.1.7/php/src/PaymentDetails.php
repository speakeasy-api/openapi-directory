<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class PaymentDetails 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsResponse
     */
	public function getDomesticPaymentsDomesticPaymentIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/domestic-payments/{DomesticPaymentId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetDomesticPaymentsDomesticPaymentIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsResponse
     */
	public function getDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsResponse
     */
	public function getDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/domestic-standing-orders/{DomesticStandingOrderId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsResponse
     */
	public function getFilePaymentsFilePaymentIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/file-payments/{FilePaymentId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetFilePaymentsFilePaymentIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsResponse
     */
	public function getInternationalPaymentsInternationalPaymentIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/international-payments/{InternationalPaymentId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetInternationalPaymentsInternationalPaymentIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsResponse
     */
	public function getInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
	
    /**
     * Get Payment Details
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsResponse
     */
	public function getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails(
        \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details', \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obWritePaymentDetailsResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBWritePaymentDetailsResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/jose+jwe')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->obErrorResponse1 = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\OBErrorResponse1', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 406) {
        }
        else if ($httpResponse->getStatusCode() === 429) {
            $response->headers = $httpResponse->getHeaders();
            
        }

        return $response;
    }
}