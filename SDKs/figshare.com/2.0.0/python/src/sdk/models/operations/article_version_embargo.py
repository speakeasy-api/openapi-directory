"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import articleembargo as shared_articleembargo
from typing import Optional


@dataclasses.dataclass
class ArticleVersionEmbargoRequest:
    
    article_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'article_id', 'style': 'simple', 'explode': False }})
    r"""Article Unique identifier"""  
    v_number: int = dataclasses.field(metadata={'path_param': { 'field_name': 'v_number', 'style': 'simple', 'explode': False }})
    r"""Version Number"""  
    

@dataclasses.dataclass
class ArticleVersionEmbargoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    article_embargo: Optional[shared_articleembargo.ArticleEmbargo] = dataclasses.field(default=None)
    r"""OK. Embargo representation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    