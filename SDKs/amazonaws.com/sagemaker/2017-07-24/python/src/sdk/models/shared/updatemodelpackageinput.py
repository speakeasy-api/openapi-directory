"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import additionalinferencespecificationdefinition as shared_additionalinferencespecificationdefinition
from ..shared import modelapprovalstatus_enum as shared_modelapprovalstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateModelPackageInput:
    
    model_package_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelPackageArn') }})  
    additional_inference_specifications_to_add: Optional[list[shared_additionalinferencespecificationdefinition.AdditionalInferenceSpecificationDefinition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalInferenceSpecificationsToAdd'), 'exclude': lambda f: f is None }})  
    approval_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApprovalDescription'), 'exclude': lambda f: f is None }})  
    customer_metadata_properties: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomerMetadataProperties'), 'exclude': lambda f: f is None }})  
    customer_metadata_properties_to_remove: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomerMetadataPropertiesToRemove'), 'exclude': lambda f: f is None }})  
    model_approval_status: Optional[shared_modelapprovalstatus_enum.ModelApprovalStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelApprovalStatus'), 'exclude': lambda f: f is None }})  
    