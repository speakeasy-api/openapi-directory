// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListDigitalWalletTokensQueryParams struct {
	CardID              *string    `queryParam:"style=form,explode=true,name=card_id"`
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
}

type ListDigitalWalletTokensRequest struct {
	QueryParams ListDigitalWalletTokensQueryParams
}

type ListDigitalWalletTokensDefaultApplicationJSON13StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListDigitalWalletTokensDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListDigitalWalletTokensDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON13TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON13TypeEnumRateLimitedError ListDigitalWalletTokensDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON13 struct {
	Detail     string                                                    `json:"detail"`
	RetryAfter *int64                                                    `json:"retry_after,omitempty"`
	Status     ListDigitalWalletTokensDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                    `json:"title"`
	Type       ListDigitalWalletTokensDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON12StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON12StatusEnumFourHundredAndThree ListDigitalWalletTokensDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListDigitalWalletTokensDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON12TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON12TypeEnumPrivateFeatureError ListDigitalWalletTokensDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON12 struct {
	Detail string                                                    `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON11StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON11StatusEnumFourHundredAndFour ListDigitalWalletTokensDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListDigitalWalletTokensDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON11TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON11TypeEnumObjectNotFoundError ListDigitalWalletTokensDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON11 struct {
	Detail string                                                    `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON10StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON10StatusEnumFourHundred ListDigitalWalletTokensDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListDigitalWalletTokensDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON10TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON10TypeEnumMalformedRequestError ListDigitalWalletTokensDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON10 struct {
	Detail string                                                    `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON9StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON9StatusEnumFourHundred ListDigitalWalletTokensDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListDigitalWalletTokensDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON9TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON9TypeEnumInvalidParametersError ListDigitalWalletTokensDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                 `json:"errors,omitempty"`
	Status ListDigitalWalletTokensDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON8StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON8StatusEnumFourHundredAndNine ListDigitalWalletTokensDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListDigitalWalletTokensDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON8TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON8TypeEnumInvalidOperationError ListDigitalWalletTokensDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON8 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON7StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON7StatusEnumFourHundredAndOne ListDigitalWalletTokensDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListDigitalWalletTokensDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON7TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListDigitalWalletTokensDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON7 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON6StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON6StatusEnumFiveHundred ListDigitalWalletTokensDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListDigitalWalletTokensDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON6TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON6TypeEnumInternalServerError ListDigitalWalletTokensDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON6 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON5StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON5StatusEnumFourHundredAndThree ListDigitalWalletTokensDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListDigitalWalletTokensDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON5TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListDigitalWalletTokensDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON5 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON4StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListDigitalWalletTokensDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListDigitalWalletTokensDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON4TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListDigitalWalletTokensDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON4 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON3StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON3StatusEnumFourHundredAndNine ListDigitalWalletTokensDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListDigitalWalletTokensDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON3TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListDigitalWalletTokensDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON3 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON2StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON2StatusEnumFourHundredAndThree ListDigitalWalletTokensDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListDigitalWalletTokensDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON2TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListDigitalWalletTokensDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON2 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensDefaultApplicationJSON1StatusEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON1StatusEnumFourHundredAndFour ListDigitalWalletTokensDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListDigitalWalletTokensDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON1TypeEnum string

const (
	ListDigitalWalletTokensDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListDigitalWalletTokensDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListDigitalWalletTokensDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListDigitalWalletTokensDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDigitalWalletTokensDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListDigitalWalletTokensDefaultApplicationJSON1 struct {
	Detail string                                                   `json:"detail"`
	Status ListDigitalWalletTokensDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListDigitalWalletTokensDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListDigitalWalletTokensResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Digital Wallet Token List
	DigitalWalletTokenList *shared.DigitalWalletTokenList
	// Error
	Error interface{}
}
