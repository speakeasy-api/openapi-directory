// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SetAccountInfoResponseProviderUserInfo struct {
	// The user's display name at the IDP.
	DisplayName *string `json:"displayName,omitempty"`
	// User's identifier at IDP.
	FederatedID *string `json:"federatedId,omitempty"`
	// The user's photo url at the IDP.
	PhotoURL *string `json:"photoUrl,omitempty"`
	// The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
	ProviderID *string `json:"providerId,omitempty"`
}

// SetAccountInfoResponse - Respone of setting the account information.
type SetAccountInfoResponse struct {
	// The name of the user.
	DisplayName *string `json:"displayName,omitempty"`
	// The email of the user.
	Email *string `json:"email,omitempty"`
	// If email has been verified.
	EmailVerified *bool `json:"emailVerified,omitempty"`
	// If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
	ExpiresIn *string `json:"expiresIn,omitempty"`
	// The Gitkit id token to login the newly sign up user.
	IDToken *string `json:"idToken,omitempty"`
	// The fixed string "identitytoolkit#SetAccountInfoResponse".
	Kind *string `json:"kind,omitempty"`
	// The local ID of the user.
	LocalID *string `json:"localId,omitempty"`
	// The new email the user attempts to change to.
	NewEmail *string `json:"newEmail,omitempty"`
	// The user's hashed password.
	PasswordHash *string `json:"passwordHash,omitempty"`
	// The photo url of the user.
	PhotoURL *string `json:"photoUrl,omitempty"`
	// The user's profiles at the associated IdPs.
	ProviderUserInfo []SetAccountInfoResponseProviderUserInfo `json:"providerUserInfo,omitempty"`
	// If idToken is STS id token, then this field will be refresh token.
	RefreshToken *string `json:"refreshToken,omitempty"`
}
