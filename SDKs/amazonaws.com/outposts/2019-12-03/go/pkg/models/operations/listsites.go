// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSitesQueryParams struct {
	MaxResults *int64  `queryParam:"style=form,explode=true,name=MaxResults"`
	NextToken  *string `queryParam:"style=form,explode=true,name=NextToken"`
	// Filters the results by city.
	OperatingAddressCityFilter []string `queryParam:"style=form,explode=true,name=OperatingAddressCityFilter"`
	// Filters the results by country code.
	OperatingAddressCountryCodeFilter []string `queryParam:"style=form,explode=true,name=OperatingAddressCountryCodeFilter"`
	// Filters the results by state or region.
	OperatingAddressStateOrRegionFilter []string `queryParam:"style=form,explode=true,name=OperatingAddressStateOrRegionFilter"`
}

type ListSitesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListSitesRequest struct {
	QueryParams ListSitesQueryParams
	Headers     ListSitesHeaders
}

type ListSitesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSitesOutput *shared.ListSitesOutput
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
