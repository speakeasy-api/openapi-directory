// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LaunchStatusEnum string

const (
	LaunchStatusEnumPending    LaunchStatusEnum = "PENDING"
	LaunchStatusEnumInProgress LaunchStatusEnum = "IN_PROGRESS"
	LaunchStatusEnumLaunched   LaunchStatusEnum = "LAUNCHED"
	LaunchStatusEnumFailed     LaunchStatusEnum = "FAILED"
	LaunchStatusEnumTerminated LaunchStatusEnum = "TERMINATED"
)

func (e *LaunchStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "LAUNCHED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TERMINATED":
		*e = LaunchStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LaunchStatusEnum: %s", s)
	}
}
