/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1alphaAudienceFilterExpression } from "./googleanalyticsadminv1alphaaudiencefilterexpression";
import { Expose, Type } from "class-transformer";

/**
 * Required. Immutable. Specifies the scope for this filter.
 */
export enum GoogleAnalyticsAdminV1alphaAudienceSimpleFilterScopeEnum {
  AudienceFilterScopeUnspecified = "AUDIENCE_FILTER_SCOPE_UNSPECIFIED",
  AudienceFilterScopeWithinSameEvent = "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT",
  AudienceFilterScopeWithinSameSession = "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION",
  AudienceFilterScopeAcrossAllSessions = "AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS",
}

/**
 * Defines a simple filter that a user must satisfy to be a member of the Audience.
 */
export class GoogleAnalyticsAdminV1alphaAudienceSimpleFilter extends SpeakeasyBase {
  /**
   * A logical expression of Audience dimension, metric, or event filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterExpression" })
  @Type(() => GoogleAnalyticsAdminV1alphaAudienceFilterExpression)
  filterExpression?: GoogleAnalyticsAdminV1alphaAudienceFilterExpression;

  /**
   * Required. Immutable. Specifies the scope for this filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: GoogleAnalyticsAdminV1alphaAudienceSimpleFilterScopeEnum;
}
