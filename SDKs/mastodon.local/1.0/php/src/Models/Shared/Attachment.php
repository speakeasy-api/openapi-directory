<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Attachment - Represents a file or media attachment that can be added to a status.
 * 
 * https://docs.joinmastodon.org/entities/attachment/
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://docs.joinmastodon.org/entities/attachment/
 */
class Attachment
{
    /**
     * A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.
     * 
     * @var ?string $blurhash
     */
	#[\JMS\Serializer\Annotation\SerializedName('blurhash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $blurhash = null;
    
    /**
     * Alternate text that describes what is in the media attachment, to be used for the visually impaired or when media attachments do not load.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The ID of the attachment in the database. Cast from an integer but not guaranteed to be a number
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Metadata returned by Paperclip.
     * 
     * @var ?array<string, mixed> $meta
     */
	#[\JMS\Serializer\Annotation\SerializedName('meta')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $meta = null;
    
    /**
     * The location of a scaled-down preview of the attachment.
     * 
     * @var string $previewUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('preview_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $previewUrl;
    
    /**
     * The location of the full-size original attachment on the remote website. String or null if the attachment is local.
     * 
     * @var ?string $remoteUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('remote_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remoteUrl = null;
    
    /**
     * A shorter URL for the attachment.
     * 
     * @var ?string $textUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('text_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $textUrl = null;
    
    /**
     * The type of the attachment.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AttachmentTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AttachmentTypeEnum>')]
    public AttachmentTypeEnum $type;
    
    /**
     * The location of the original full-size attachment.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->blurhash = null;
		$this->description = null;
		$this->id = "";
		$this->meta = null;
		$this->previewUrl = "";
		$this->remoteUrl = null;
		$this->textUrl = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\AttachmentTypeEnum::UNKNOWN;
		$this->url = "";
	}
}
