/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeatureDefinition } from "./featuredefinition";
import { OfflineStoreConfig } from "./offlinestoreconfig";
import { OnlineStoreConfig } from "./onlinestoreconfig";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateFeatureGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventTimeFeatureName" })
  eventTimeFeatureName: string;

  @SpeakeasyMetadata({ elemType: FeatureDefinition })
  @Expose({ name: "FeatureDefinitions" })
  @Type(() => FeatureDefinition)
  featureDefinitions: FeatureDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupName" })
  featureGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OfflineStoreConfig" })
  @Type(() => OfflineStoreConfig)
  offlineStoreConfig?: OfflineStoreConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "OnlineStoreConfig" })
  @Type(() => OnlineStoreConfig)
  onlineStoreConfig?: OnlineStoreConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RecordIdentifierFeatureName" })
  recordIdentifierFeatureName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
