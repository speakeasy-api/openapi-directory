// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GameSessionStatusEnum string

const (
	GameSessionStatusEnumActive      GameSessionStatusEnum = "ACTIVE"
	GameSessionStatusEnumActivating  GameSessionStatusEnum = "ACTIVATING"
	GameSessionStatusEnumTerminated  GameSessionStatusEnum = "TERMINATED"
	GameSessionStatusEnumTerminating GameSessionStatusEnum = "TERMINATING"
	GameSessionStatusEnumError       GameSessionStatusEnum = "ERROR"
)

func (e GameSessionStatusEnum) ToPointer() *GameSessionStatusEnum {
	return &e
}

func (e *GameSessionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ACTIVATING":
		fallthrough
	case "TERMINATED":
		fallthrough
	case "TERMINATING":
		fallthrough
	case "ERROR":
		*e = GameSessionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GameSessionStatusEnum: %v", v)
	}
}
