"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customobjectdefinition as shared_customobjectdefinition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETAllCustomObjectDefinitionsInNamespaceResponse:
    r"""OK"""
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""The number of objects in the `definitions` object. The value of this field is the number of custom object definitions in the namespace."""  
    definitions: Optional[dict[str, shared_customobjectdefinition.CustomObjectDefinition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('definitions'), 'exclude': lambda f: f is None }})
    r"""The custom object definitions. This object maps types to custom object definitions."""  
    