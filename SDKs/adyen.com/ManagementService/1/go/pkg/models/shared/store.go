// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StoreStatusEnum - The status of the store. Possible values are:
//
// - **active**. This value is assigned automatically when a store is created.
// - **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.
// - **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.
type StoreStatusEnum string

const (
	StoreStatusEnumActive   StoreStatusEnum = "active"
	StoreStatusEnumClosed   StoreStatusEnum = "closed"
	StoreStatusEnumInactive StoreStatusEnum = "inactive"
)

func (e StoreStatusEnum) ToPointer() *StoreStatusEnum {
	return &e
}

func (e *StoreStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "closed":
		fallthrough
	case "inactive":
		*e = StoreStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StoreStatusEnum: %v", v)
	}
}

// Store - OK - the request has succeeded.
type Store struct {
	Links   *Links         `json:"_links,omitempty"`
	Address *StoreLocation `json:"address,omitempty"`
	// The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
	//  If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
	BusinessLineIds []string `json:"businessLineIds,omitempty"`
	// The description of the store.
	Description *string `json:"description,omitempty"`
	// When using the Zip payment method: The location ID that Zip has assigned to your store.
	ExternalReferenceID *string `json:"externalReferenceId,omitempty"`
	// The unique identifier of the store. This value is generated by Adyen.
	ID *string `json:"id,omitempty"`
	// The unique identifier of the merchant account that the store belongs to.
	MerchantID *string `json:"merchantId,omitempty"`
	// The phone number of the store, including '+' and country code.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// A reference to recognize the store by. Also known as the store code.
	//  Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_)
	Reference *string `json:"reference,omitempty"`
	// The store name shown on the shopper's bank or credit card statement and on the shopper receipt.
	ShopperStatement   *string                  `json:"shopperStatement,omitempty"`
	SplitConfiguration *StoreSplitConfiguration `json:"splitConfiguration,omitempty"`
	// The status of the store. Possible values are:
	//
	// - **active**. This value is assigned automatically when a store is created.
	// - **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.
	// - **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.
	Status *StoreStatusEnum `json:"status,omitempty"`
}
