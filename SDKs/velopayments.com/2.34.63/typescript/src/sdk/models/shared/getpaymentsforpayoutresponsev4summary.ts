/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PayoutPayor } from "./payoutpayor";
import { PayoutPrincipal } from "./payoutprincipal";
import { PayoutSchedule } from "./payoutschedule";
import { Expose, Transform, Type } from "class-transformer";

export class GetPaymentsForPayoutResponseV4Summary extends SpeakeasyBase {
  /**
   * The count of payments within the payout which have been confirmed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmedPayments" })
  confirmedPayments?: number;

  /**
   * The count of payments within the payout which are incomplete.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "incompletePayments" })
  incompletePayments?: number;

  /**
   * Details of principal participating in a payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructed" })
  @Type(() => PayoutPrincipal)
  instructed?: PayoutPrincipal;

  /**
   * The date/time at which the payout was instructed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  instructedDateTime?: Date;

  /**
   * Details of payor and principal participating in a payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutFrom" })
  @Type(() => PayoutPayor)
  payoutFrom?: PayoutPayor;

  /**
   * The memo attached to the payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutMemo" })
  payoutMemo?: string;

  /**
   * Current status of the Payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutStatus" })
  payoutStatus?: string;

  /**
   * Details of payor and principal participating in a payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutTo" })
  @Type(() => PayoutPayor)
  payoutTo?: PayoutPayor;

  /**
   * The type of payout. One of the following values: STANDARD, AS, ON_BEHALF_OF
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutType" })
  payoutType?: string;

  /**
   * Details of principal participating in a payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quoted" })
  @Type(() => PayoutPrincipal)
  quoted?: PayoutPrincipal;

  /**
   * The date/time at which the payout was quoted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  quotedDateTime?: Date;

  /**
   * The count of payments within the payout which have been released.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releasedPayments" })
  releasedPayments?: number;

  /**
   * The count of payments within the payout which have been returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnedPayments" })
  returnedPayments?: number;

  /**
   * Details relating to a payout that was executed via a schedule or is still waiting to be executed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  @Type(() => PayoutSchedule)
  schedule?: PayoutSchedule;

  /**
   * The date/time at which the payout was submitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submittedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submittedDateTime?: Date;

  /**
   * Details of payor and principal participating in a payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submitting" })
  @Type(() => PayoutPayor)
  submitting?: PayoutPayor;

  /**
   * The count of payments within the payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalPayments" })
  totalPayments?: number;

  /**
   * Details of principal participating in a payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withdrawn" })
  @Type(() => PayoutPrincipal)
  withdrawn?: PayoutPrincipal;

  @SpeakeasyMetadata()
  @Expose({ name: "withdrawnDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  withdrawnDateTime?: Date;

  /**
   * The count of payments within the payout which have been withdrawn.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withdrawnPayments" })
  withdrawnPayments?: number;
}
