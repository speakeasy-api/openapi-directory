/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateOrderRequest - Defines the fields that are included in requests to the
 * [UpdateOrder](https://developer.squareup.com/reference/square_2021-08-18/orders-api/update-order) endpoint.
 */
public class UpdateOrderRequest {
    /**
     * The [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation)
     * fields to clear. For example, `line_items[uid].note`.
     * For more information, see [Deleting fields](https://developer.squareup.com/docs/orders-api/manage-orders#delete-fields).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields_to_clear")
    public String[] fieldsToClear;

    public UpdateOrderRequest withFieldsToClear(String[] fieldsToClear) {
        this.fieldsToClear = fieldsToClear;
        return this;
    }
    
    /**
     * A value you specify that uniquely identifies this update request.
     * 
     * If you are unsure whether a particular update was applied to an order successfully,
     * you can reattempt it with the same idempotency key without
     * worrying about creating duplicate updates to the order.
     * The latest order version is returned.
     * 
     * For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idempotency_key")
    public String idempotencyKey;

    public UpdateOrderRequest withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    /**
     * Contains all information related to a single order to process with Square,
     * including line items that specify the products to purchase. `Order` objects also
     * include information about any associated tenders, refunds, and returns.
     * 
     * All Connect V2 Transactions have all been converted to Orders including all associated
     * itemization data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    public Order order;

    public UpdateOrderRequest withOrder(Order order) {
        this.order = order;
        return this;
    }
    
    public UpdateOrderRequest(){}
}
