"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tensorshapeprotodim as shared_tensorshapeprotodim
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TensorflowTensorShapeProto:
    r"""Dimensions of a tensor."""
    
    dim: Optional[list[shared_tensorshapeprotodim.TensorShapeProtoDim]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dim'), 'exclude': lambda f: f is None }})
    r"""Dimensions of the tensor, such as {\\"input\\", 30}, {\\"output\\", 40}
    for a 30 x 40 2D tensor.  If an entry has size -1, this
    corresponds to a dimension of unknown size. The names are
    optional.
    
    The order of entries in \"dim\" matters: It indicates the layout of the
    values in the tensor in-memory representation.
    
    The first entry in \"dim\" is the outermost dimension used to layout the
    values, the last entry is the innermost dimension.  This matches the
    in-memory layout of RowMajor Eigen tensors.
    
    If \"dim.size()\" > 0, \"unknown_rank\" must be false.
    """  
    unknown_rank: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unknown_rank'), 'exclude': lambda f: f is None }})
    r"""If true, the number of dimensions in the shape is unknown.
    
    If true, \"dim.size()\" must be 0.
    """  
    