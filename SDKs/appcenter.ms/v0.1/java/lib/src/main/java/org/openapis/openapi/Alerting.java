/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;

public class Alerting {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Alerting(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Get project issue related to a crash group
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashResponse bugTrackerGetRepoIssueFromCrash(org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashPathParams.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/bugtracker/crashGroup/{crash_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashResponse res = new org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashResponse() {{
            bugTrackerGetRepoIssueFromCrash200ApplicationJSONObject = null;
            bugTrackerGetRepoIssueFromCrashDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrash200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrash200ApplicationJSON.class);
                res.bugTrackerGetRepoIssueFromCrash200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.BugTrackerGetRepoIssueFromCrashDefaultApplicationJSON.class);
                res.bugTrackerGetRepoIssueFromCrashDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Get bug tracker settings for a particular app
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BugtrackerGetSettingsResponse bugtrackerGetSettings(org.openapis.openapi.models.operations.BugtrackerGetSettingsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BugtrackerGetSettingsPathParams.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/bugtracker", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.BugtrackerGetSettingsResponse res = new org.openapis.openapi.models.operations.BugtrackerGetSettingsResponse() {{
            bugtrackerGetSettings200ApplicationJSONObject = null;
            bugtrackerGetSettingsDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.BugtrackerGetSettings200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.BugtrackerGetSettings200ApplicationJSON.class);
                res.bugtrackerGetSettings200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.BugtrackerGetSettingsDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.BugtrackerGetSettingsDefaultApplicationJSON.class);
                res.bugtrackerGetSettingsDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Get Email notification settings of user for a particular app
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsResponse notificationsGetAppEmailSettings(org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsPathParams.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/notifications/emailSettings", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsResponse res = new org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsResponse() {{
            notificationsGetAppEmailSettings200ApplicationJSONObject = null;
            notificationsGetAppEmailSettingsDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.NotificationsGetAppEmailSettings200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.NotificationsGetAppEmailSettings200ApplicationJSON.class);
                res.notificationsGetAppEmailSettings200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.NotificationsGetAppEmailSettingsDefaultApplicationJSON.class);
                res.notificationsGetAppEmailSettingsDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Get Default email notification settings for the user
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.NotificationsGetUserEmailSettingsResponse notificationsGetUserEmailSettings(org.openapis.openapi.models.operations.NotificationsGetUserEmailSettingsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/user/notifications/emailSettings");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.NotificationsGetUserEmailSettingsResponse res = new org.openapis.openapi.models.operations.NotificationsGetUserEmailSettingsResponse() {{
            notificationsGetUserEmailSettings200ApplicationJSONObject = null;
            notificationsGetUserEmailSettingsDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.NotificationsGetUserEmailSettings200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.NotificationsGetUserEmailSettings200ApplicationJSON.class);
                res.notificationsGetUserEmailSettings200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.NotificationsGetUserEmailSettingsDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.NotificationsGetUserEmailSettingsDefaultApplicationJSON.class);
                res.notificationsGetUserEmailSettingsDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Get web hooks configured for a particular app
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.WebhooksListResponse webhooksList(org.openapis.openapi.models.operations.WebhooksListRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.WebhooksListPathParams.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/webhooks", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.WebhooksListResponse res = new org.openapis.openapi.models.operations.WebhooksListResponse() {{
            webhooksList200ApplicationJSONObject = null;
            webhooksListDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.WebhooksList200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.WebhooksList200ApplicationJSON.class);
                res.webhooksList200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.WebhooksListDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.WebhooksListDefaultApplicationJSON.class);
                res.webhooksListDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }
}