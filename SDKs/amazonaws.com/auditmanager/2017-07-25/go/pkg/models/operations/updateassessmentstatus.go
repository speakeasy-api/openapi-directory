// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAssessmentStatusRequestBodyStatusEnum -  The current status of the assessment.
type UpdateAssessmentStatusRequestBodyStatusEnum string

const (
	UpdateAssessmentStatusRequestBodyStatusEnumActive   UpdateAssessmentStatusRequestBodyStatusEnum = "ACTIVE"
	UpdateAssessmentStatusRequestBodyStatusEnumInactive UpdateAssessmentStatusRequestBodyStatusEnum = "INACTIVE"
)

func (e *UpdateAssessmentStatusRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		*e = UpdateAssessmentStatusRequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAssessmentStatusRequestBodyStatusEnum: %s", s)
	}
}

type UpdateAssessmentStatusRequestBody struct {
	//  The current status of the assessment.
	Status UpdateAssessmentStatusRequestBodyStatusEnum `json:"status"`
}

type UpdateAssessmentStatusRequest struct {
	RequestBody       UpdateAssessmentStatusRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	//  The unique identifier for the assessment.
	AssessmentID string `pathParam:"style=simple,explode=false,name=assessmentId"`
}

type UpdateAssessmentStatusResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	UpdateAssessmentStatusResponse *shared.UpdateAssessmentStatusResponse
	// ValidationException
	ValidationException interface{}
}
