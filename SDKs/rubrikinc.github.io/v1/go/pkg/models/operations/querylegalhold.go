// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// QueryLegalHoldSnapshotTypeEnum - Specifies the type of snapshots to be returned.
type QueryLegalHoldSnapshotTypeEnum string

const (
	QueryLegalHoldSnapshotTypeEnumOnDemand    QueryLegalHoldSnapshotTypeEnum = "OnDemand"
	QueryLegalHoldSnapshotTypeEnumScheduled   QueryLegalHoldSnapshotTypeEnum = "Scheduled"
	QueryLegalHoldSnapshotTypeEnumProtected   QueryLegalHoldSnapshotTypeEnum = "Protected"
	QueryLegalHoldSnapshotTypeEnumUnprotected QueryLegalHoldSnapshotTypeEnum = "Unprotected"
)

func (e QueryLegalHoldSnapshotTypeEnum) ToPointer() *QueryLegalHoldSnapshotTypeEnum {
	return &e
}

func (e *QueryLegalHoldSnapshotTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OnDemand":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Protected":
		fallthrough
	case "Unprotected":
		*e = QueryLegalHoldSnapshotTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLegalHoldSnapshotTypeEnum: %v", v)
	}
}

// QueryLegalHoldSortByEnum - The attribute used to sort summary information. The optional parameter **_sort_order_** specifies ascending or descending sort order.
type QueryLegalHoldSortByEnum string

const (
	QueryLegalHoldSortByEnumSnapshotTime    QueryLegalHoldSortByEnum = "SnapshotTime"
	QueryLegalHoldSortByEnumPlaceOnHoldTime QueryLegalHoldSortByEnum = "PlaceOnHoldTime"
	QueryLegalHoldSortByEnumSnapshotType    QueryLegalHoldSortByEnum = "SnapshotType"
)

func (e QueryLegalHoldSortByEnum) ToPointer() *QueryLegalHoldSortByEnum {
	return &e
}

func (e *QueryLegalHoldSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SnapshotTime":
		fallthrough
	case "PlaceOnHoldTime":
		fallthrough
	case "SnapshotType":
		*e = QueryLegalHoldSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLegalHoldSortByEnum: %v", v)
	}
}

// QueryLegalHoldSortOrderEnum - Specifies ascending or descending sort order. Summary results are sorted in ascending order when this parameter is not specified.
type QueryLegalHoldSortOrderEnum string

const (
	QueryLegalHoldSortOrderEnumAsc  QueryLegalHoldSortOrderEnum = "asc"
	QueryLegalHoldSortOrderEnumDesc QueryLegalHoldSortOrderEnum = "desc"
)

func (e QueryLegalHoldSortOrderEnum) ToPointer() *QueryLegalHoldSortOrderEnum {
	return &e
}

func (e *QueryLegalHoldSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryLegalHoldSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLegalHoldSortOrderEnum: %v", v)
	}
}

type QueryLegalHoldRequest struct {
	// Limits the list to snapshots with holds created after a specified date.
	AfterDate *time.Time `queryParam:"style=form,explode=true,name=after_date"`
	// Limits the list to snapshots with holds created before a specified date.
	BeforeDate *time.Time `queryParam:"style=form,explode=true,name=before_date"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Limit the list to snapshot for the particular object.
	ObjectID *string `queryParam:"style=form,explode=true,name=object_id"`
	// Limits the list to objects that match a specified value for the object name.
	ObjectName *string `queryParam:"style=form,explode=true,name=object_name"`
	// Limits the list to objects that match a specified type.
	ObjectType *string `queryParam:"style=form,explode=true,name=object_type"`
	// An integer that specifies a number of initial matches to ignore.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Limits the list to snapshots which were placed on legal hold after a specified date.
	PlacedOnHoldAfterDate *time.Time `queryParam:"style=form,explode=true,name=placed_on_hold_after_date"`
	// Limits the list to snapshots which were placed on legal hold before a specified date.
	PlacedOnHoldBeforeDate *time.Time `queryParam:"style=form,explode=true,name=placed_on_hold_before_date"`
	// Specifies the type of snapshots to be returned.
	SnapshotType *QueryLegalHoldSnapshotTypeEnum `queryParam:"style=form,explode=true,name=snapshot_type"`
	// The attribute used to sort summary information. The optional parameter **_sort_order_** specifies ascending or descending sort order.
	SortBy *QueryLegalHoldSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Specifies ascending or descending sort order. Summary results are sorted in ascending order when this parameter is not specified.
	SortOrder *QueryLegalHoldSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryLegalHoldResponse struct {
	ContentType string
	// Summary information for legal holds.
	LegalHoldSummaryListResponse *shared.LegalHoldSummaryListResponse
	StatusCode                   int
	RawResponse                  *http.Response
}
