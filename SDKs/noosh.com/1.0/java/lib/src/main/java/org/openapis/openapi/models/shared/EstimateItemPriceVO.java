/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EstimateItemPriceVO - Java type: com.noosh.nooshapi.vo.EstimateItemPriceVO
 */
public class EstimateItemPriceVO {
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("add_price")
    public Object addPrice;
    public EstimateItemPriceVO withAddPrice(Object addPrice) {
        this.addPrice = addPrice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("breakouts")
    public BreakoutVO[] breakouts;
    public EstimateItemPriceVO withBreakouts(BreakoutVO[] breakouts) {
        this.breakouts = breakouts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("em_estimate_item_price_id")
    public Long emEstimateItemPriceId;
    public EstimateItemPriceVO withEmEstimateItemPriceId(Long emEstimateItemPriceId) {
        this.emEstimateItemPriceId = emEstimateItemPriceId;
        return this;
    }
    
    /**
     * Java type: com.noosh.nooshapi.vo.ItemOptionVO
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item_option")
    public ItemOptionVO itemOption;
    public EstimateItemPriceVO withItemOption(ItemOptionVO itemOption) {
        this.itemOption = itemOption;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Object price;
    public EstimateItemPriceVO withPrice(Object price) {
        this.price = price;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping")
    public Object shipping;
    public EstimateItemPriceVO withShipping(Object shipping) {
        this.shipping = shipping;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")
    public Object tax;
    public EstimateItemPriceVO withTax(Object tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_price")
    public Object totalPrice;
    public EstimateItemPriceVO withTotalPrice(Object totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactional_add_price")
    public Object transactionalAddPrice;
    public EstimateItemPriceVO withTransactionalAddPrice(Object transactionalAddPrice) {
        this.transactionalAddPrice = transactionalAddPrice;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactional_price")
    public Object transactionalPrice;
    public EstimateItemPriceVO withTransactionalPrice(Object transactionalPrice) {
        this.transactionalPrice = transactionalPrice;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactional_shipping")
    public Object transactionalShipping;
    public EstimateItemPriceVO withTransactionalShipping(Object transactionalShipping) {
        this.transactionalShipping = transactionalShipping;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactional_tax")
    public Object transactionalTax;
    public EstimateItemPriceVO withTransactionalTax(Object transactionalTax) {
        this.transactionalTax = transactionalTax;
        return this;
    }
    
    /**
     * Java type: java.math.BigDecimal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactional_total_price")
    public Object transactionalTotalPrice;
    public EstimateItemPriceVO withTransactionalTotalPrice(Object transactionalTotalPrice) {
        this.transactionalTotalPrice = transactionalTotalPrice;
        return this;
    }
    
}
