/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * OBWriteInternationalScheduledResponse6DataExchangeRateInformation - Further detailed information on the exchange rate that has been used in the payment transaction.
 */
public class OBWriteInternationalScheduledResponse6DataExchangeRateInformation {
    /**
     * Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContractIdentification")
    public String contractIdentification;

    public OBWriteInternationalScheduledResponse6DataExchangeRateInformation withContractIdentification(String contractIdentification) {
        this.contractIdentification = contractIdentification;
        return this;
    }
    
    /**
     * The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
     */
    @JsonProperty("ExchangeRate")
    public Double exchangeRate;

    public OBWriteInternationalScheduledResponse6DataExchangeRateInformation withExchangeRate(Double exchangeRate) {
        this.exchangeRate = exchangeRate;
        return this;
    }
    
    /**
     * Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpirationDateTime")
    public OffsetDateTime expirationDateTime;

    public OBWriteInternationalScheduledResponse6DataExchangeRateInformation withExpirationDateTime(OffsetDateTime expirationDateTime) {
        this.expirationDateTime = expirationDateTime;
        return this;
    }
    
    /**
     * Specifies the type used to complete the currency exchange.
     */
    @JsonProperty("RateType")
    public OBWriteInternationalScheduledResponse6DataExchangeRateInformationRateTypeEnum rateType;

    public OBWriteInternationalScheduledResponse6DataExchangeRateInformation withRateType(OBWriteInternationalScheduledResponse6DataExchangeRateInformationRateTypeEnum rateType) {
        this.rateType = rateType;
        return this;
    }
    
    /**
     * Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
     */
    @JsonProperty("UnitCurrency")
    public String unitCurrency;

    public OBWriteInternationalScheduledResponse6DataExchangeRateInformation withUnitCurrency(String unitCurrency) {
        this.unitCurrency = unitCurrency;
        return this;
    }
    
    public OBWriteInternationalScheduledResponse6DataExchangeRateInformation(@JsonProperty("ExchangeRate") Double exchangeRate, @JsonProperty("RateType") OBWriteInternationalScheduledResponse6DataExchangeRateInformationRateTypeEnum rateType, @JsonProperty("UnitCurrency") String unitCurrency) {
        this.exchangeRate = exchangeRate;
        this.rateType = rateType;
        this.unitCurrency = unitCurrency;
  }
}
