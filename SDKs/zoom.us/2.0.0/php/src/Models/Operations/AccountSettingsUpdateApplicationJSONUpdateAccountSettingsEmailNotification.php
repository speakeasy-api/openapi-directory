<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * AccountSettingsUpdateApplicationJSONUpdateAccountSettingsEmailNotification - Account Settings: Notification.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class AccountSettingsUpdateApplicationJSONUpdateAccountSettingsEmailNotification
{
    /**
     * Notify when an alternative host is set or removed from a meeting.
     * 
     * @var ?bool $alternativeHostReminder
     */
	#[\JMS\Serializer\Annotation\SerializedName('alternative_host_reminder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $alternativeHostReminder = null;
    
    /**
     * Notify the host and participants when a meeting is cancelled.
     * 
     * @var ?bool $cancelMeetingReminder
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancel_meeting_reminder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cancelMeetingReminder = null;
    
    /**
     * Notify host when cloud recording is available.
     * 
     * @var ?bool $cloudRecordingAvaliableReminder
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording_avaliable_reminder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecordingAvaliableReminder = null;
    
    /**
     * Notify the host when participants join the meeting before them.
     * 
     * @var ?bool $jbhReminder
     */
	#[\JMS\Serializer\Annotation\SerializedName('jbh_reminder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $jbhReminder = null;
    
    /**
     * Notify user when host licenses are running low.
     * 
     * @var ?bool $lowHostCountReminder
     */
	#[\JMS\Serializer\Annotation\SerializedName('low_host_count_reminder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $lowHostCountReminder = null;
    
    /**
     * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
     * 
     * @var ?bool $scheduleForReminder
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedule_for_reminder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $scheduleForReminder = null;
    
	public function __construct()
	{
		$this->alternativeHostReminder = null;
		$this->cancelMeetingReminder = null;
		$this->cloudRecordingAvaliableReminder = null;
		$this->jbhReminder = null;
		$this->lowHostCountReminder = null;
		$this->scheduleForReminder = null;
	}
}
