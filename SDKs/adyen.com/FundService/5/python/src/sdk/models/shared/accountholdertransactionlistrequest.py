"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import transactionlistforaccount as shared_transactionlistforaccount
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountHolderTransactionListRequestTransactionStatusesEnum(str, Enum):
    BALANCE_NOT_PAID_OUT_TRANSFER = 'BalanceNotPaidOutTransfer'
    BALANCE_PLATFORM_SWEEP = 'BalancePlatformSweep'
    BALANCE_PLATFORM_SWEEP_RETURNED = 'BalancePlatformSweepReturned'
    CHARGEBACK = 'Chargeback'
    CHARGEBACK_CORRECTION = 'ChargebackCorrection'
    CHARGEBACK_CORRECTION_RECEIVED = 'ChargebackCorrectionReceived'
    CHARGEBACK_RECEIVED = 'ChargebackReceived'
    CHARGEBACK_REVERSED = 'ChargebackReversed'
    CHARGEBACK_REVERSED_CORRECTION = 'ChargebackReversedCorrection'
    CHARGEBACK_REVERSED_CORRECTION_RECEIVED = 'ChargebackReversedCorrectionReceived'
    CHARGEBACK_REVERSED_RECEIVED = 'ChargebackReversedReceived'
    CONVERTED = 'Converted'
    CREDIT_CLOSED = 'CreditClosed'
    CREDIT_FAILED = 'CreditFailed'
    CREDIT_REVERSED = 'CreditReversed'
    CREDIT_REVERSED_RECEIVED = 'CreditReversedReceived'
    CREDIT_SUSPENDED = 'CreditSuspended'
    CREDITED = 'Credited'
    DEBIT_FAILED = 'DebitFailed'
    DEBIT_REVERSED_RECEIVED = 'DebitReversedReceived'
    DEBITED = 'Debited'
    DEBITED_REVERSED = 'DebitedReversed'
    DEPOSIT_CORRECTION_CREDITED = 'DepositCorrectionCredited'
    DEPOSIT_CORRECTION_DEBITED = 'DepositCorrectionDebited'
    FEE = 'Fee'
    FUND_TRANSFER = 'FundTransfer'
    FUND_TRANSFER_REVERSED = 'FundTransferReversed'
    INVOICE_DEDUCTION_CREDITED = 'InvoiceDeductionCredited'
    INVOICE_DEDUCTION_DEBITED = 'InvoiceDeductionDebited'
    MANUAL_CORRECTED = 'ManualCorrected'
    MANUAL_CORRECTION_CREDITED = 'ManualCorrectionCredited'
    MANUAL_CORRECTION_DEBITED = 'ManualCorrectionDebited'
    MERCHANT_PAYIN = 'MerchantPayin'
    MERCHANT_PAYIN_REVERSED = 'MerchantPayinReversed'
    PAYOUT = 'Payout'
    PAYOUT_REVERSED = 'PayoutReversed'
    PENDING_CREDIT = 'PendingCredit'
    PENDING_DEBIT = 'PendingDebit'
    PENDING_FUND_TRANSFER = 'PendingFundTransfer'
    RE_CREDITED = 'ReCredited'
    RE_CREDITED_RECEIVED = 'ReCreditedReceived'
    SECOND_CHARGEBACK = 'SecondChargeback'
    SECOND_CHARGEBACK_CORRECTION = 'SecondChargebackCorrection'
    SECOND_CHARGEBACK_CORRECTION_RECEIVED = 'SecondChargebackCorrectionReceived'
    SECOND_CHARGEBACK_RECEIVED = 'SecondChargebackReceived'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountHolderTransactionListRequest:
    
    account_holder_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderCode') }})
    r"""The code of the account holder that owns the account(s) of which retrieve the transaction list."""  
    transaction_lists_per_account: Optional[list[shared_transactionlistforaccount.TransactionListForAccount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionListsPerAccount'), 'exclude': lambda f: f is None }})
    r"""A list of accounts to include in the transaction list. If left blank, the last fifty (50) transactions for all accounts of the account holder will be included."""  
    transaction_statuses: Optional[list[AccountHolderTransactionListRequestTransactionStatusesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionStatuses'), 'exclude': lambda f: f is None }})
    r"""A list of statuses to include in the transaction list. If left blank, all transactions will be included.
    >Permitted values:
    >* `PendingCredit` - a pending balance credit.
    >* `CreditFailed` - a pending credit failure; the balance will not be credited.
    >* `Credited` - a credited balance.
    >* `PendingDebit` - a pending balance debit (e.g., a refund).
    >* `CreditClosed` - a pending credit closed; the balance will not be credited.
    >* `CreditSuspended` - a pending credit closed; the balance will not be credited.
    >* `DebitFailed` - a pending debit failure; the balance will not be debited.
    >* `Debited` - a debited balance (e.g., a refund).
    >* `DebitReversedReceived` - a pending refund reversal.
    >* `DebitedReversed` - a reversed refund.
    >* `ChargebackReceived` - a received chargeback request.
    >* `Chargeback` - a processed chargeback.
    >* `ChargebackReversedReceived` - a pending chargeback reversal.
    >* `ChargebackReversed` - a reversed chargeback.
    >* `Converted` - converted.
    >* `ManualCorrected` - manual booking/adjustment by Adyen.
    >* `Payout` - a payout.
    >* `PayoutReversed` - a reversed payout.
    >* `PendingFundTransfer` - a pending transfer of funds from one account to another.
    >* `FundTransfer` - a transfer of funds from one account to another.
    """  
    