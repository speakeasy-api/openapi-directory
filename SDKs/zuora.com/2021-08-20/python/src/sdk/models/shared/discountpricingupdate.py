"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DiscountPricingUpdateApplyDiscountToEnum(str, Enum):
    r"""Specifies which type of charge the discount charge applies to."""
    ONETIME = 'ONETIME'
    RECURRING = 'RECURRING'
    USAGE = 'USAGE'
    ONETIMERECURRING = 'ONETIMERECURRING'
    ONETIMEUSAGE = 'ONETIMEUSAGE'
    RECURRINGUSAGE = 'RECURRINGUSAGE'
    ONETIMERECURRINGUSAGE = 'ONETIMERECURRINGUSAGE'

class DiscountPricingUpdateDiscountLevelEnum(str, Enum):
    r"""Application scope of the discount charge. For example, if the value of this field is `subscription` and the value of the `applyDiscountTo` field is `RECURRING`, the discount charge applies to all recurring charges in the same subscription as the discount charge."""
    RATEPLAN = 'rateplan'
    SUBSCRIPTION = 'subscription'
    ACCOUNT = 'account'

class DiscountPricingUpdatePriceChangeOptionEnum(str, Enum):
    r"""Specifies how Zuora changes the price of the charge each time the subscription renews."""
    NO_CHANGE = 'NoChange'
    USE_LATEST_PRODUCT_CATALOG_PRICING = 'UseLatestProductCatalogPricing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DiscountPricingUpdate:
    
    apply_discount_to: Optional[DiscountPricingUpdateApplyDiscountToEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applyDiscountTo'), 'exclude': lambda f: f is None }})
    r"""Specifies which type of charge the discount charge applies to."""  
    discount_level: Optional[DiscountPricingUpdateDiscountLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountLevel'), 'exclude': lambda f: f is None }})
    r"""Application scope of the discount charge. For example, if the value of this field is `subscription` and the value of the `applyDiscountTo` field is `RECURRING`, the discount charge applies to all recurring charges in the same subscription as the discount charge."""  
    discount_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountPercentage'), 'exclude': lambda f: f is None }})
    r"""The amount of the discount as a percentage. This field is only used for percentage discounts."""  
    price_change_option: Optional[DiscountPricingUpdatePriceChangeOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceChangeOption'), 'exclude': lambda f: f is None }})
    r"""Specifies how Zuora changes the price of the charge each time the subscription renews."""  
    