/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * AttachmentRequest - The file you want to upload.
 * 
 * *Note when using curl:*
 * 
 * Be sure to add an `\u2018@\u2019` before the file path, and use the `--form`
 * option instead of the `-d` option.
 * 
 * When uploading PDFs with curl, force the content-type to be pdf by
 * appending the content type to the file path: `--form
 * "file=@file.pdf;type=application/pdf"`.
 */
public class AttachmentRequest {
    /**
     * *Optional*. Only relevant for external attachments with a parent task. A boolean indicating whether the current app should be connected with the attachment for the purposes of showing an app components widget. Requires the app to have been added to a project the parent task is in.
     * 
     */
    @SpeakeasyMetadata("multipartForm:name=connect_to_app")
    public Boolean connectToApp;
    public AttachmentRequest withConnectToApp(Boolean connectToApp) {
        this.connectToApp = connectToApp;
        return this;
    }
    
    /**
     * Required for `asana` attachments.
     * 
     */
    @SpeakeasyMetadata("multipartForm:file")
    public AttachmentRequestFile file;
    public AttachmentRequest withFile(AttachmentRequestFile file) {
        this.file = file;
        return this;
    }
    
    /**
     * The name of the external resource being attached. Required for attachments of type `external`.
     * 
     */
    @SpeakeasyMetadata("multipartForm:name=name")
    public String name;
    public AttachmentRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required identifier of the parent task, project, or project_brief, as a string.
     * 
     */
    @SpeakeasyMetadata("multipartForm:name=parent")
    public String parent;
    public AttachmentRequest withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * The type of the attachment. Must be one of the given values. If not specified, a file attachment of type `asana` will be assumed. Note that if the value of `resource_subtype` is `external`, a `parent`, `name`, and `url` must also be provided.
     * 
     */
    @SpeakeasyMetadata("multipartForm:name=resource_subtype")
    public AttachmentRequestResourceSubtypeEnum resourceSubtype;
    public AttachmentRequest withResourceSubtype(AttachmentRequestResourceSubtypeEnum resourceSubtype) {
        this.resourceSubtype = resourceSubtype;
        return this;
    }
    
    /**
     * The URL of the external resource being attached. Required for attachments of type `external`.
     * 
     */
    @SpeakeasyMetadata("multipartForm:name=url")
    public String url;
    public AttachmentRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
