/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Application } from "./application";
import { ClusterStatus } from "./clusterstatus";
import { Configuration } from "./configuration";
import { Ec2InstanceAttributes } from "./ec2instanceattributes";
import { InstanceCollectionTypeEnum } from "./instancecollectiontypeenum";
import { KerberosAttributes } from "./kerberosattributes";
import { PlacementGroupConfig } from "./placementgroupconfig";
import { RepoUpgradeOnBootEnum } from "./repoupgradeonbootenum";
import { ScaleDownBehaviorEnum } from "./scaledownbehaviorenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * The detailed description of the cluster.
 */
export class Cluster extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Application })
  @Expose({ name: "Applications" })
  @Type(() => Application)
  applications?: Application[];

  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingRole" })
  autoScalingRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoTerminate" })
  autoTerminate?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ClusterArn" })
  clusterArn?: string;

  @SpeakeasyMetadata({ elemType: Configuration })
  @Expose({ name: "Configurations" })
  @Type(() => Configuration)
  configurations?: Configuration[];

  @SpeakeasyMetadata()
  @Expose({ name: "CustomAmiId" })
  customAmiId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EbsRootVolumeSize" })
  ebsRootVolumeSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Ec2InstanceAttributes" })
  @Type(() => Ec2InstanceAttributes)
  ec2InstanceAttributes?: Ec2InstanceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceCollectionType" })
  instanceCollectionType?: InstanceCollectionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "KerberosAttributes" })
  @Type(() => KerberosAttributes)
  kerberosAttributes?: KerberosAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "LogEncryptionKmsKeyId" })
  logEncryptionKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LogUri" })
  logUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MasterPublicDnsName" })
  masterPublicDnsName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NormalizedInstanceHours" })
  normalizedInstanceHours?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "OSReleaseLabel" })
  osReleaseLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutpostArn" })
  outpostArn?: string;

  @SpeakeasyMetadata({ elemType: PlacementGroupConfig })
  @Expose({ name: "PlacementGroups" })
  @Type(() => PlacementGroupConfig)
  placementGroups?: PlacementGroupConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReleaseLabel" })
  releaseLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RepoUpgradeOnBoot" })
  repoUpgradeOnBoot?: RepoUpgradeOnBootEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestedAmiVersion" })
  requestedAmiVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RunningAmiVersion" })
  runningAmiVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScaleDownBehavior" })
  scaleDownBehavior?: ScaleDownBehaviorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceRole" })
  serviceRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  @Type(() => ClusterStatus)
  status?: ClusterStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "StepConcurrencyLevel" })
  stepConcurrencyLevel?: number;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TerminationProtected" })
  terminationProtected?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "VisibleToAllUsers" })
  visibleToAllUsers?: boolean;
}
