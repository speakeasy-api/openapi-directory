"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mergeconflict as shared_mergeconflict
from ..shared import syncstatus as shared_syncstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SyncWorkspaceResponse:
    r"""A response after synchronizing the workspace to the latest container version."""
    
    merge_conflict: Optional[list[shared_mergeconflict.MergeConflict]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mergeConflict'), 'exclude': lambda f: f is None }})
    r"""The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved."""  
    sync_status: Optional[shared_syncstatus.SyncStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('syncStatus'), 'exclude': lambda f: f is None }})
    r"""The status of a workspace after synchronization."""  
    