"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datetimerange as shared_datetimerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OriginDestination:
    
    alternative_destinations_codes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alternativeDestinationsCodes'), 'exclude': lambda f: f is None }})
    r"""Set of alternative destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported."""  
    alternative_origins_codes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alternativeOriginsCodes'), 'exclude': lambda f: f is None }})
    r"""Set of alternative origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported."""  
    arrival_date_time_range: Optional[shared_datetimerange.DateTimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arrivalDateTimeRange'), 'exclude': lambda f: f is None }})  
    departure_date_time_range: Optional[shared_datetimerange.DateTimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('departureDateTimeRange'), 'exclude': lambda f: f is None }})  
    destination_location_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationLocationCode'), 'exclude': lambda f: f is None }})
    r"""Destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported."""  
    destination_radius: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationRadius'), 'exclude': lambda f: f is None }})
    r"""Include other possible locations around the point, located less than this distance in kilometers away. Max:300
    
    Can not be combined with \"dateWindow\" or \"timeWindow\".
    """  
    excluded_connection_points: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludedConnectionPoints'), 'exclude': lambda f: f is None }})
    r"""List of excluded connections points. Any FlightOffer with these connections points will be present in response. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    included_connection_points: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includedConnectionPoints'), 'exclude': lambda f: f is None }})
    r"""List of included connections points. When an includedViaPoints option is specified, all FlightOffer returned must at least go via this Connecting Point. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider"""  
    origin_location_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originLocationCode'), 'exclude': lambda f: f is None }})
    r"""Origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported."""  
    origin_radius: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originRadius'), 'exclude': lambda f: f is None }})
    r"""Include other possible locations around the point, located less than this distance in kilometers away. Max:300
    
    Can not be combined with \"dateWindow\" or \"timeWindow\".
    """  
    