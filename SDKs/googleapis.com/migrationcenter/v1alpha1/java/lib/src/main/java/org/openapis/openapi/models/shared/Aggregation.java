/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Aggregation - Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.
 */
public class Aggregation {
    /**
     * Object count.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public java.util.Map<String, Object> count;
    public Aggregation withCount(java.util.Map<String, Object> count) {
        this.count = count;
        return this;
    }
    
    /**
     * The name of the field on which to aggregate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("field")
    public String field;
    public Aggregation withField(String field) {
        this.field = field;
        return this;
    }
    
    /**
     * Frequency distribution of all field values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequency")
    public java.util.Map<String, Object> frequency;
    public Aggregation withFrequency(java.util.Map<String, Object> frequency) {
        this.frequency = frequency;
        return this;
    }
    
    /**
     * Histogram of bucketed assets counts by field value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("histogram")
    public AggregationHistogram histogram;
    public Aggregation withHistogram(AggregationHistogram histogram) {
        this.histogram = histogram;
        return this;
    }
    
    /**
     * Sum of field values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sum")
    public java.util.Map<String, Object> sum;
    public Aggregation withSum(java.util.Map<String, Object> sum) {
        this.sum = sum;
        return this;
    }
    
}
