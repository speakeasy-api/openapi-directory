"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import caoptions as shared_caoptions
from ..shared import keyusage as shared_keyusage
from ..shared import nameconstraints as shared_nameconstraints
from ..shared import objectid as shared_objectid
from ..shared import x509extension as shared_x509extension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class X509Parameters:
    r"""An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions."""
    
    additional_extensions: Optional[list[shared_x509extension.X509Extension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalExtensions'), 'exclude': lambda f: f is None }})
    r"""Optional. Describes custom X.509 extensions."""  
    aia_ocsp_servers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aiaOcspServers'), 'exclude': lambda f: f is None }})
    r"""Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \\"Authority Information Access\\" extension in the certificate."""  
    ca_options: Optional[shared_caoptions.CaOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caOptions'), 'exclude': lambda f: f is None }})
    r"""Describes values that are relevant in a CA certificate."""  
    key_usage: Optional[shared_keyusage.KeyUsage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyUsage'), 'exclude': lambda f: f is None }})
    r"""A KeyUsage describes key usage values that may appear in an X.509 certificate."""  
    name_constraints: Optional[shared_nameconstraints.NameConstraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameConstraints'), 'exclude': lambda f: f is None }})
    r"""Describes the X.509 name constraints extension, per https://tools.ietf.org/html/rfc5280#section-4.2.1.10"""  
    policy_ids: Optional[list[shared_objectid.ObjectID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyIds'), 'exclude': lambda f: f is None }})
    r"""Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4."""  
    