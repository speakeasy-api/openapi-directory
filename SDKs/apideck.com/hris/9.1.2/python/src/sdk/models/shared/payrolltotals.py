"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayrollTotals:
    
    check_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('check_amount'), 'exclude': lambda f: f is None }})
    r"""The total check amount for the payroll."""  
    company_debit: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('company_debit'), 'exclude': lambda f: f is None }})
    r"""The total company debit for the payroll."""  
    employee_benefit_deductions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_benefit_deductions'), 'exclude': lambda f: f is None }})
    r"""The total amount of employee deducted benefits for the payroll."""  
    employee_taxes: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_taxes'), 'exclude': lambda f: f is None }})
    r"""The total amount of employee paid taxes for the payroll."""  
    employer_benefit_contributions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employer_benefit_contributions'), 'exclude': lambda f: f is None }})
    r"""The total amount of company contributed benefits for the payroll."""  
    employer_taxes: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employer_taxes'), 'exclude': lambda f: f is None }})
    r"""The total amount of employer paid taxes for the payroll."""  
    gross_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross_pay'), 'exclude': lambda f: f is None }})
    r"""The gross pay amount for the payroll."""  
    net_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net_pay'), 'exclude': lambda f: f is None }})
    r"""The net pay amount for the payroll."""  
    tax_debit: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax_debit'), 'exclude': lambda f: f is None }})
    r"""The total tax debit for the payroll."""  
    