// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AptSettingsTypeEnum - By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.
type AptSettingsTypeEnum string

const (
	AptSettingsTypeEnumTypeUnspecified AptSettingsTypeEnum = "TYPE_UNSPECIFIED"
	AptSettingsTypeEnumDist            AptSettingsTypeEnum = "DIST"
	AptSettingsTypeEnumUpgrade         AptSettingsTypeEnum = "UPGRADE"
)

func (e AptSettingsTypeEnum) ToPointer() *AptSettingsTypeEnum {
	return &e
}

func (e *AptSettingsTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "DIST":
		fallthrough
	case "UPGRADE":
		*e = AptSettingsTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AptSettingsTypeEnum: %v", v)
	}
}

// AptSettings - Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.
type AptSettings struct {
	// List of packages to exclude from update. These packages will be excluded
	Excludes []string `json:"excludes,omitempty"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.
	ExclusivePackages []string `json:"exclusivePackages,omitempty"`
	// By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.
	Type *AptSettingsTypeEnum `json:"type,omitempty"`
}
