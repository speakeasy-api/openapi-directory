/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Assignee } from "./assignee";
import { FindingSeverityEnum } from "./findingseverityenum";
import { FindingStateEnum } from "./findingstateenum";
import { Expose, Type } from "class-transformer";

export class FindingBulkUpdateInput extends SpeakeasyBase {
  /**
   * Assigned user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignee" })
  @Type(() => Assignee)
  assignee?: Assignee;

  /**
   * User comment left on the finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * Array of finding ids
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ids" })
  ids: string[];

  /**
   * User labels for the finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: string[];

  /**
   * Severity, how serious the issue is considered:
   *
   * @remarks
   *   * 10 - low
   *   * 20 - medium
   *   * 30 - high
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: FindingSeverityEnum;

  /**
   * Finding state:
   *
   * @remarks
   *   * notfixed - Issue can still be exploited
   *   * invalid - Issue determined to be a false positive
   *   * accepted - Issue will not be solved and the risk was accepted
   *   * fixed - No problem here anymore
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: FindingStateEnum;
}
