// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TimeSeriesTableMetricVisualizationEnum - Optional. Store rendering strategy
type TimeSeriesTableMetricVisualizationEnum string

const (
	TimeSeriesTableMetricVisualizationEnumMetricVisualizationUnspecified TimeSeriesTableMetricVisualizationEnum = "METRIC_VISUALIZATION_UNSPECIFIED"
	TimeSeriesTableMetricVisualizationEnumNumber                         TimeSeriesTableMetricVisualizationEnum = "NUMBER"
	TimeSeriesTableMetricVisualizationEnumBar                            TimeSeriesTableMetricVisualizationEnum = "BAR"
)

func (e *TimeSeriesTableMetricVisualizationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_VISUALIZATION_UNSPECIFIED":
		fallthrough
	case "NUMBER":
		fallthrough
	case "BAR":
		*e = TimeSeriesTableMetricVisualizationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeSeriesTableMetricVisualizationEnum: %s", s)
	}
}

// TimeSeriesTable - A table that displays time series data.
type TimeSeriesTable struct {
	// Optional. The list of the persistent column settings for the table.
	ColumnSettings []ColumnSettings `json:"columnSettings,omitempty"`
	// Required. The data displayed in this table.
	DataSets []TableDataSet `json:"dataSets,omitempty"`
	// Optional. Store rendering strategy
	MetricVisualization *TimeSeriesTableMetricVisualizationEnum `json:"metricVisualization,omitempty"`
}
