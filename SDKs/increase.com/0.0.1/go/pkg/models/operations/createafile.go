// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAFileDefaultApplicationJSON13StatusEnum string

const (
	CreateAFileDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CreateAFileDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CreateAFileDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CreateAFileDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON13TypeEnum string

const (
	CreateAFileDefaultApplicationJSON13TypeEnumRateLimitedError CreateAFileDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CreateAFileDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CreateAFileDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON13 struct {
	Detail     string                                        `json:"detail"`
	RetryAfter *int64                                        `json:"retry_after,omitempty"`
	Status     CreateAFileDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                        `json:"title"`
	Type       CreateAFileDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON12StatusEnum string

const (
	CreateAFileDefaultApplicationJSON12StatusEnumFourHundredAndThree CreateAFileDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CreateAFileDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAFileDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON12TypeEnum string

const (
	CreateAFileDefaultApplicationJSON12TypeEnumPrivateFeatureError CreateAFileDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CreateAFileDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CreateAFileDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON12 struct {
	Detail string                                        `json:"detail"`
	Status CreateAFileDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   CreateAFileDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON11StatusEnum string

const (
	CreateAFileDefaultApplicationJSON11StatusEnumFourHundredAndFour CreateAFileDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CreateAFileDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateAFileDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON11TypeEnum string

const (
	CreateAFileDefaultApplicationJSON11TypeEnumObjectNotFoundError CreateAFileDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CreateAFileDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CreateAFileDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON11 struct {
	Detail string                                        `json:"detail"`
	Status CreateAFileDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   CreateAFileDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON10StatusEnum string

const (
	CreateAFileDefaultApplicationJSON10StatusEnumFourHundred CreateAFileDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CreateAFileDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateAFileDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON10TypeEnum string

const (
	CreateAFileDefaultApplicationJSON10TypeEnumMalformedRequestError CreateAFileDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CreateAFileDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CreateAFileDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON10 struct {
	Detail string                                        `json:"detail"`
	Status CreateAFileDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   CreateAFileDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON9StatusEnum string

const (
	CreateAFileDefaultApplicationJSON9StatusEnumFourHundred CreateAFileDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CreateAFileDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateAFileDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON9TypeEnum string

const (
	CreateAFileDefaultApplicationJSON9TypeEnumInvalidParametersError CreateAFileDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CreateAFileDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CreateAFileDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                     `json:"errors,omitempty"`
	Status CreateAFileDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON8StatusEnum string

const (
	CreateAFileDefaultApplicationJSON8StatusEnumFourHundredAndNine CreateAFileDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CreateAFileDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateAFileDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON8TypeEnum string

const (
	CreateAFileDefaultApplicationJSON8TypeEnumInvalidOperationError CreateAFileDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CreateAFileDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CreateAFileDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON8 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON7StatusEnum string

const (
	CreateAFileDefaultApplicationJSON7StatusEnumFourHundredAndOne CreateAFileDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CreateAFileDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CreateAFileDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON7TypeEnum string

const (
	CreateAFileDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CreateAFileDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CreateAFileDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CreateAFileDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON7 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON6StatusEnum string

const (
	CreateAFileDefaultApplicationJSON6StatusEnumFiveHundred CreateAFileDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CreateAFileDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CreateAFileDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON6TypeEnum string

const (
	CreateAFileDefaultApplicationJSON6TypeEnumInternalServerError CreateAFileDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CreateAFileDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CreateAFileDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON6 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON5StatusEnum string

const (
	CreateAFileDefaultApplicationJSON5StatusEnumFourHundredAndThree CreateAFileDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CreateAFileDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAFileDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON5TypeEnum string

const (
	CreateAFileDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CreateAFileDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CreateAFileDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CreateAFileDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON5 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON4StatusEnum string

const (
	CreateAFileDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CreateAFileDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CreateAFileDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CreateAFileDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON4TypeEnum string

const (
	CreateAFileDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CreateAFileDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CreateAFileDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CreateAFileDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON4 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON3StatusEnum string

const (
	CreateAFileDefaultApplicationJSON3StatusEnumFourHundredAndNine CreateAFileDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CreateAFileDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateAFileDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON3TypeEnum string

const (
	CreateAFileDefaultApplicationJSON3TypeEnumIdempotencyConflictError CreateAFileDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CreateAFileDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CreateAFileDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON3 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON2StatusEnum string

const (
	CreateAFileDefaultApplicationJSON2StatusEnumFourHundredAndThree CreateAFileDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CreateAFileDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAFileDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON2TypeEnum string

const (
	CreateAFileDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CreateAFileDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CreateAFileDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CreateAFileDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON2 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CreateAFileDefaultApplicationJSON1StatusEnum string

const (
	CreateAFileDefaultApplicationJSON1StatusEnumFourHundredAndFour CreateAFileDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CreateAFileDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateAFileDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON1TypeEnum string

const (
	CreateAFileDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CreateAFileDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CreateAFileDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CreateAFileDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CreateAFileDefaultApplicationJSON1 struct {
	Detail string                                       `json:"detail"`
	Status CreateAFileDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   CreateAFileDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CreateAFileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// File
	File *shared.File
}
