/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The format of packages that are stored in the repository.
 */
export enum RepositoryFormatEnum {
  FormatUnspecified = "FORMAT_UNSPECIFIED",
  Docker = "DOCKER",
  Maven = "MAVEN",
  Npm = "NPM",
  Apt = "APT",
  Yum = "YUM",
  Python = "PYTHON",
}

/**
 * A Repository for storing artifacts with a specific format.
 */
export class Repository extends SpeakeasyBase {
  /**
   * Output only. The time when the repository was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * The user-provided description of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The format of packages that are stored in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: RepositoryFormatEnum;

  /**
   * The Cloud KMS resource name of the customer managed encryption key that's used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyName" })
  kmsKeyName?: string;

  /**
   * Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The name of the repository, for example: "projects/p1/locations/us-central1/repositories/repo1".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. If set, the repository satisfies physical zone separation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "satisfiesPzs" })
  satisfiesPzs?: boolean;

  /**
   * Output only. The size, in bytes, of all artifact storage in this repository. Repositories that are generally available or in public preview use this to calculate storage costs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sizeBytes" })
  sizeBytes?: string;

  /**
   * Output only. The time when the repository was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A Repository for storing artifacts with a specific format.
 */
export class RepositoryInput extends SpeakeasyBase {
  /**
   * The user-provided description of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The format of packages that are stored in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: RepositoryFormatEnum;

  /**
   * The Cloud KMS resource name of the customer managed encryption key that's used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyName" })
  kmsKeyName?: string;

  /**
   * Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The name of the repository, for example: "projects/p1/locations/us-central1/repositories/repo1".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
