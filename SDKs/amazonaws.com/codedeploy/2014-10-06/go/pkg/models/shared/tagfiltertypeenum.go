// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TagFilterTypeEnum string

const (
	TagFilterTypeEnumKeyOnly     TagFilterTypeEnum = "KEY_ONLY"
	TagFilterTypeEnumValueOnly   TagFilterTypeEnum = "VALUE_ONLY"
	TagFilterTypeEnumKeyAndValue TagFilterTypeEnum = "KEY_AND_VALUE"
)

func (e TagFilterTypeEnum) ToPointer() *TagFilterTypeEnum {
	return &e
}

func (e *TagFilterTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KEY_ONLY":
		fallthrough
	case "VALUE_ONLY":
		fallthrough
	case "KEY_AND_VALUE":
		*e = TagFilterTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TagFilterTypeEnum: %v", v)
	}
}
