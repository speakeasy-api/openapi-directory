/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetEpisodesQueryParams {
    /**
     * The list of IDs to filter by. Repeat this parameter for each ID you want to include in the filter.
     * The brackets *MUST* be percent-encoded, per the requirements in
     * [RFC 3986 \u00a7 3.4](https://tools.ietf.org/html/rfc3986#section-3.4).
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ids[]")
    public String[] ids;
    public GetEpisodesQueryParams withIds(String[] ids) {
        this.ids = ids;
        return this;
    }
    
    /**
     * Limit the result to episodes usable with an inventory management calendar for the provided AdDeal ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=included_in_inventory_calendar")
    public String includedInInventoryCalendar;
    public GetEpisodesQueryParams withIncludedInInventoryCalendar(String includedInInventoryCalendar) {
        this.includedInInventoryCalendar = includedInInventoryCalendar;
        return this;
    }
    
    /**
     * Limit the result to episodes released in this month.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=month")
    public String month;
    public GetEpisodesQueryParams withMonth(String month) {
        this.month = month;
        return this;
    }
    
    /**
     * Select which page number to receive results for. Pages are numbered starting at 1.
     * 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page[number]")
    public Long pageNumber;
    public GetEpisodesQueryParams withPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    /**
     * Indicate how many records to return per page. The maximum is 100.
     * 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page[size]")
    public Long pageSize;
    public GetEpisodesQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * If `true`, limit the result to published episodes only.
     * If `false`, limit the result to _unpublished_ episodes only.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=published")
    public Boolean published;
    public GetEpisodesQueryParams withPublished(Boolean published) {
        this.published = published;
        return this;
    }
    
    /**
     * Limit the result to episodes with a title containing this parameter in a case-insensitive way.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;
    public GetEpisodesQueryParams withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * Limit the result to episodes released after this timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=released_after")
    public OffsetDateTime releasedAfter;
    public GetEpisodesQueryParams withReleasedAfter(OffsetDateTime releasedAfter) {
        this.releasedAfter = releasedAfter;
        return this;
    }
    
    /**
     * Limit the result to episodes released before this timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=released_before")
    public OffsetDateTime releasedBefore;
    public GetEpisodesQueryParams withReleasedBefore(OffsetDateTime releasedBefore) {
        this.releasedBefore = releasedBefore;
        return this;
    }
    
    /**
     * If `true`, limit the result to published and released episodes holding an available media file.
     * If this is `true`, it also changes the default sort order to `-released_at`.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=rss")
    public Boolean rss;
    public GetEpisodesQueryParams withRss(Boolean rss) {
        this.rss = rss;
        return this;
    }
    
    /**
     * Limit result to episodes linked to this season.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=season_id")
    public String seasonId;
    public GetEpisodesQueryParams withSeasonId(String seasonId) {
        this.seasonId = seasonId;
        return this;
    }
    
    /**
     * Limit the result to episodes linked to this series.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=series_id")
    public String seriesId;
    public GetEpisodesQueryParams withSeriesId(String seriesId) {
        this.seriesId = seriesId;
        return this;
    }
    
    /**
     * Specify how to sort the result. Please refer to either the top section or the
     * [JSON:API specification](https://jsonapi.org/format/#fetching-sorting) on how sorting works in general.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=sort")
    public GetEpisodesSortEnum[] sort;
    public GetEpisodesQueryParams withSort(GetEpisodesSortEnum[] sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Limit the result to episodes released in this year.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=year")
    public String year;
    public GetEpisodesQueryParams withYear(String year) {
        this.year = year;
        return this;
    }
    
}
