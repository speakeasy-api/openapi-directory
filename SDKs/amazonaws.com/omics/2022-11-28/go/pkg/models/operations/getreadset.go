// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetReadSetFileEnum - The file to retrieve.
type GetReadSetFileEnum string

const (
	GetReadSetFileEnumSource1 GetReadSetFileEnum = "SOURCE1"
	GetReadSetFileEnumSource2 GetReadSetFileEnum = "SOURCE2"
	GetReadSetFileEnumIndex   GetReadSetFileEnum = "INDEX"
)

func (e *GetReadSetFileEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SOURCE1":
		fallthrough
	case "SOURCE2":
		fallthrough
	case "INDEX":
		*e = GetReadSetFileEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetReadSetFileEnum: %s", s)
	}
}

type GetReadSetRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The file to retrieve.
	File *GetReadSetFileEnum `queryParam:"style=form,explode=true,name=file"`
	// The read set's ID.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The part number to retrieve.
	PartNumber int64 `queryParam:"style=form,explode=true,name=partNumber"`
	// The read set's sequence store ID.
	SequenceStoreID string `pathParam:"style=simple,explode=false,name=sequenceStoreId"`
}

type GetReadSetResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	GetReadSetResponse *shared.GetReadSetResponse
	// InternalServerException
	InternalServerException interface{}
	// RangeNotSatisfiableException
	RangeNotSatisfiableException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// RequestTimeoutException
	RequestTimeoutException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
