// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeIDFormatActionEnum
type GETDescribeIDFormatActionEnum string

const (
	GETDescribeIDFormatActionEnumDescribeIDFormat GETDescribeIDFormatActionEnum = "DescribeIdFormat"
)

func (e GETDescribeIDFormatActionEnum) ToPointer() *GETDescribeIDFormatActionEnum {
	return &e
}

func (e *GETDescribeIDFormatActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeIdFormat":
		*e = GETDescribeIDFormatActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeIDFormatActionEnum: %v", v)
	}
}

// GETDescribeIDFormatVersionEnum
type GETDescribeIDFormatVersionEnum string

const (
	GETDescribeIDFormatVersionEnumTwoThousandAndSixteen1115 GETDescribeIDFormatVersionEnum = "2016-11-15"
)

func (e GETDescribeIDFormatVersionEnum) ToPointer() *GETDescribeIDFormatVersionEnum {
	return &e
}

func (e *GETDescribeIDFormatVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDescribeIDFormatVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeIDFormatVersionEnum: %v", v)
	}
}

type GETDescribeIDFormatRequest struct {
	Action GETDescribeIDFormatActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>
	Resource          *string                        `queryParam:"style=form,explode=true,name=Resource"`
	Version           GETDescribeIDFormatVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeIDFormatResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
