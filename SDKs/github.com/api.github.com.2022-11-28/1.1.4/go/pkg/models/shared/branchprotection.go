// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type BranchProtectionAllowDeletions struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type BranchProtectionAllowForcePushes struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// BranchProtectionAllowForkSyncing - Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
type BranchProtectionAllowForkSyncing struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type BranchProtectionBlockCreations struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// BranchProtectionLockBranch - Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
type BranchProtectionLockBranch struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type BranchProtectionRequiredConversationResolution struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type BranchProtectionRequiredLinearHistory struct {
	Enabled *bool `json:"enabled,omitempty"`
}

type BranchProtectionRequiredSignatures struct {
	Enabled bool   `json:"enabled"`
	URL     string `json:"url"`
}

// BranchProtection - Branch Protection
type BranchProtection struct {
	AllowDeletions   *BranchProtectionAllowDeletions   `json:"allow_deletions,omitempty"`
	AllowForcePushes *BranchProtectionAllowForcePushes `json:"allow_force_pushes,omitempty"`
	// Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
	AllowForkSyncing *BranchProtectionAllowForkSyncing `json:"allow_fork_syncing,omitempty"`
	BlockCreations   *BranchProtectionBlockCreations   `json:"block_creations,omitempty"`
	Enabled          *bool                             `json:"enabled,omitempty"`
	// Protected Branch Admin Enforced
	EnforceAdmins *ProtectedBranchAdminEnforced `json:"enforce_admins,omitempty"`
	// Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
	LockBranch                     *BranchProtectionLockBranch                     `json:"lock_branch,omitempty"`
	Name                           *string                                         `json:"name,omitempty"`
	ProtectionURL                  *string                                         `json:"protection_url,omitempty"`
	RequiredConversationResolution *BranchProtectionRequiredConversationResolution `json:"required_conversation_resolution,omitempty"`
	RequiredLinearHistory          *BranchProtectionRequiredLinearHistory          `json:"required_linear_history,omitempty"`
	// Protected Branch Pull Request Review
	RequiredPullRequestReviews *ProtectedBranchPullRequestReview   `json:"required_pull_request_reviews,omitempty"`
	RequiredSignatures         *BranchProtectionRequiredSignatures `json:"required_signatures,omitempty"`
	// Protected Branch Required Status Check
	RequiredStatusChecks *ProtectedBranchRequiredStatusCheck `json:"required_status_checks,omitempty"`
	// Branch Restriction Policy
	Restrictions *BranchRestrictionPolicy `json:"restrictions,omitempty"`
	URL          *string                  `json:"url,omitempty"`
}
