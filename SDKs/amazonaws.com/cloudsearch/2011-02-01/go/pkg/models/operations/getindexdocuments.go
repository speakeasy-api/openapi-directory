// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETIndexDocumentsActionEnum
type GETIndexDocumentsActionEnum string

const (
	GETIndexDocumentsActionEnumIndexDocuments GETIndexDocumentsActionEnum = "IndexDocuments"
)

func (e GETIndexDocumentsActionEnum) ToPointer() *GETIndexDocumentsActionEnum {
	return &e
}

func (e *GETIndexDocumentsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IndexDocuments":
		*e = GETIndexDocumentsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETIndexDocumentsActionEnum: %v", v)
	}
}

// GETIndexDocumentsVersionEnum
type GETIndexDocumentsVersionEnum string

const (
	GETIndexDocumentsVersionEnumTwoThousandAndEleven0201 GETIndexDocumentsVersionEnum = "2011-02-01"
)

func (e GETIndexDocumentsVersionEnum) ToPointer() *GETIndexDocumentsVersionEnum {
	return &e
}

func (e *GETIndexDocumentsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-02-01":
		*e = GETIndexDocumentsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETIndexDocumentsVersionEnum: %v", v)
	}
}

type GETIndexDocumentsRequest struct {
	Action            GETIndexDocumentsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName        string                       `queryParam:"style=form,explode=true,name=DomainName"`
	Version           GETIndexDocumentsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETIndexDocumentsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
