/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Domain } from "./domain";
import { Group } from "./group";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items.
 */
export enum PermissionRoleEnum {
  RoleUnspecified = "ROLE_UNSPECIFIED",
  Owner = "OWNER",
  Organizer = "ORGANIZER",
  FileOrganizer = "FILE_ORGANIZER",
  Editor = "EDITOR",
  Commenter = "COMMENTER",
  Viewer = "VIEWER",
  PublishedViewer = "PUBLISHED_VIEWER",
}

/**
 * The permission setting of an object.
 */
export class Permission extends SpeakeasyBase {
  /**
   * If true, the item can be discovered (e.g. in the user's "Shared with me" collection) without needing a link to the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowDiscovery" })
  allowDiscovery?: boolean;

  /**
   * Represents any user (including a logged out user).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "anyone" })
  anyone?: Record<string, any>;

  /**
   * Information about a domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  @Type(() => Domain)
  domain?: Domain;

  /**
   * Information about a group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => Group)
  group?: Group;

  /**
   * Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: PermissionRoleEnum;

  /**
   * Information about an end user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;
}
