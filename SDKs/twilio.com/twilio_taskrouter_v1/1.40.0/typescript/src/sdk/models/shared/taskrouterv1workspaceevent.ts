/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class TaskrouterV1WorkspaceEvent extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Event resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The SID of the resource that triggered the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor_sid" })
  actorSid?: string;

  /**
   * The type of resource that triggered the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor_type" })
  actorType?: string;

  /**
   * The absolute URL of the resource that triggered the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor_url" })
  actorUrl?: string;

  /**
   * A description of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Data about the event. For more information, see [Event types](https://www.twilio.com/docs/taskrouter/api/event#event-types).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_data" })
  eventData?: any;

  /**
   * The time the event was sent, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventDate?: Date;

  /**
   * The time the event was sent in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_date_ms" })
  eventDateMs?: number;

  /**
   * The identifier for the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_type" })
  eventType?: string;

  /**
   * The SID of the object the event is most relevant to, such as a TaskSid, ReservationSid, or a  WorkerSid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_sid" })
  resourceSid?: string;

  /**
   * The type of object the event is most relevant to, such as a Task, Reservation, or a Worker).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_type" })
  resourceType?: string;

  /**
   * The URL of the resource the event is most relevant to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_url" })
  resourceUrl?: string;

  /**
   * The unique string that we created to identify the Event resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * Where the Event originated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * The IP from which the Event originated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_ip_address" })
  sourceIpAddress?: string;

  /**
   * The absolute URL of the Event resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The SID of the Workspace that contains the Event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workspace_sid" })
  workspaceSid?: string;
}
