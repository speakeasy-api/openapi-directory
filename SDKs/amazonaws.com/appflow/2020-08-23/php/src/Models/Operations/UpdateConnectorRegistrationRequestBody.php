<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateConnectorRegistrationRequestBody
{
    /**
     * <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorRegistration</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorRegistration</code>. The token is active for 8 hours.</p>
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * The name of the connector. The name is unique for each connector registration in your AWS account.
     * 
     * @var string $connectorLabel
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorLabel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $connectorLabel;
    
    /**
     * Contains information about the configuration of the connector being registered.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateConnectorRegistrationRequestBodyConnectorProvisioningConfig $connectorProvisioningConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorProvisioningConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateConnectorRegistrationRequestBodyConnectorProvisioningConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateConnectorRegistrationRequestBodyConnectorProvisioningConfig $connectorProvisioningConfig = null;
    
    /**
     * A description about the update that you're applying to the connector.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	public function __construct()
	{
		$this->clientToken = null;
		$this->connectorLabel = "";
		$this->connectorProvisioningConfig = null;
		$this->description = null;
	}
}
