// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAuthEventFeedbackXAmzTargetEnum
type UpdateAuthEventFeedbackXAmzTargetEnum string

const (
	UpdateAuthEventFeedbackXAmzTargetEnumAwsCognitoIdentityProviderServiceUpdateAuthEventFeedback UpdateAuthEventFeedbackXAmzTargetEnum = "AWSCognitoIdentityProviderService.UpdateAuthEventFeedback"
)

func (e *UpdateAuthEventFeedbackXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.UpdateAuthEventFeedback":
		*e = UpdateAuthEventFeedbackXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAuthEventFeedbackXAmzTargetEnum: %s", s)
	}
}

type UpdateAuthEventFeedbackRequest struct {
	UpdateAuthEventFeedbackRequest shared.UpdateAuthEventFeedbackRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     UpdateAuthEventFeedbackXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateAuthEventFeedbackResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateAuthEventFeedbackResponse map[string]interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
	// UserPoolAddOnNotEnabledException
	UserPoolAddOnNotEnabledException interface{}
}
