// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OptimizationMetricEnum string

const (
	OptimizationMetricEnumWape                        OptimizationMetricEnum = "WAPE"
	OptimizationMetricEnumRmse                        OptimizationMetricEnum = "RMSE"
	OptimizationMetricEnumAverageWeightedQuantileLoss OptimizationMetricEnum = "AverageWeightedQuantileLoss"
	OptimizationMetricEnumMase                        OptimizationMetricEnum = "MASE"
	OptimizationMetricEnumMape                        OptimizationMetricEnum = "MAPE"
)

func (e OptimizationMetricEnum) ToPointer() *OptimizationMetricEnum {
	return &e
}

func (e *OptimizationMetricEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WAPE":
		fallthrough
	case "RMSE":
		fallthrough
	case "AverageWeightedQuantileLoss":
		fallthrough
	case "MASE":
		fallthrough
	case "MAPE":
		*e = OptimizationMetricEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OptimizationMetricEnum: %v", v)
	}
}
