"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.S3DataRepositoryConfiguration = void 0;
var utils_1 = require("../../../internal/utils");
var autoexportpolicy_1 = require("./autoexportpolicy");
var autoimportpolicy_1 = require("./autoimportpolicy");
var class_transformer_1 = require("class-transformer");
/**
 * <p>The configuration for an Amazon S3 data repository linked to an Amazon FSx for Lustre file system with a data repository association. The configuration consists of an <code>AutoImportPolicy</code> that defines which file events on the data repository are automatically imported to the file system and an <code>AutoExportPolicy</code> that defines which file events on the file system are automatically exported to the data repository. File events are when files or directories are added, changed, or deleted on the file system or the data repository.</p> <note> <p>Data repository associations on Amazon File Cache don't use <code>S3DataRepositoryConfiguration</code> because they don't support automatic import or automatic export.</p> </note>
 */
var S3DataRepositoryConfiguration = /** @class */ (function (_super) {
    __extends(S3DataRepositoryConfiguration, _super);
    function S3DataRepositoryConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AutoExportPolicy" }),
        (0, class_transformer_1.Type)(function () { return autoexportpolicy_1.AutoExportPolicy; }),
        __metadata("design:type", autoexportpolicy_1.AutoExportPolicy)
    ], S3DataRepositoryConfiguration.prototype, "autoExportPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AutoImportPolicy" }),
        (0, class_transformer_1.Type)(function () { return autoimportpolicy_1.AutoImportPolicy; }),
        __metadata("design:type", autoimportpolicy_1.AutoImportPolicy)
    ], S3DataRepositoryConfiguration.prototype, "autoImportPolicy", void 0);
    return S3DataRepositoryConfiguration;
}(utils_1.SpeakeasyBase));
exports.S3DataRepositoryConfiguration = S3DataRepositoryConfiguration;
