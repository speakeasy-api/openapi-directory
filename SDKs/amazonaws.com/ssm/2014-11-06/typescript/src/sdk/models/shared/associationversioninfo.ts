/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssociationComplianceSeverityEnum } from "./associationcomplianceseverityenum";
import { AssociationSyncComplianceEnum } from "./associationsynccomplianceenum";
import { InstanceAssociationOutputLocation } from "./instanceassociationoutputlocation";
import { Target } from "./target";
import { TargetLocation } from "./targetlocation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the association version.
 */
export class AssociationVersionInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApplyOnlyAtCronInterval" })
  applyOnlyAtCronInterval?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationName" })
  associationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationVersion" })
  associationVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CalendarNames" })
  calendarNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ComplianceSeverity" })
  complianceSeverity?: AssociationComplianceSeverityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrency" })
  maxConcurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxErrors" })
  maxErrors?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputLocation" })
  @Type(() => InstanceAssociationOutputLocation)
  outputLocation?: InstanceAssociationOutputLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  parameters?: Record<string, string[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduleExpression" })
  scheduleExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduleOffset" })
  scheduleOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SyncCompliance" })
  syncCompliance?: AssociationSyncComplianceEnum;

  @SpeakeasyMetadata({ elemType: TargetLocation })
  @Expose({ name: "TargetLocations" })
  @Type(() => TargetLocation)
  targetLocations?: TargetLocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "TargetMaps" })
  targetMaps?: Record<string, string[]>[];

  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "Targets" })
  @Type(() => Target)
  targets?: Target[];
}
