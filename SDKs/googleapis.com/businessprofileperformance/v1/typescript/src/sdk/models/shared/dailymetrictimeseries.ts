/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DailySubEntityType } from "./dailysubentitytype";
import { TimeSeries } from "./timeseries";
import { Expose, Type } from "class-transformer";

/**
 * The DailyMetric that the TimeSeries represents.
 */
export enum DailyMetricTimeSeriesDailyMetricEnum {
  DailyMetricUnknown = "DAILY_METRIC_UNKNOWN",
  BusinessImpressionsDesktopMaps = "BUSINESS_IMPRESSIONS_DESKTOP_MAPS",
  BusinessImpressionsDesktopSearch = "BUSINESS_IMPRESSIONS_DESKTOP_SEARCH",
  BusinessImpressionsMobileMaps = "BUSINESS_IMPRESSIONS_MOBILE_MAPS",
  BusinessImpressionsMobileSearch = "BUSINESS_IMPRESSIONS_MOBILE_SEARCH",
  BusinessConversations = "BUSINESS_CONVERSATIONS",
  BusinessDirectionRequests = "BUSINESS_DIRECTION_REQUESTS",
  CallClicks = "CALL_CLICKS",
  WebsiteClicks = "WEBSITE_CLICKS",
  BusinessBookings = "BUSINESS_BOOKINGS",
  BusinessFoodOrders = "BUSINESS_FOOD_ORDERS",
  BusinessFoodMenuClicks = "BUSINESS_FOOD_MENU_CLICKS",
}

/**
 * Represents a single datapoint, where each datapoint is a DailyMetric-DailySubEntityType-TimeSeries tuple.
 */
export class DailyMetricTimeSeries extends SpeakeasyBase {
  /**
   * The DailyMetric that the TimeSeries represents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dailyMetric" })
  dailyMetric?: DailyMetricTimeSeriesDailyMetricEnum;

  /**
   * Represents all possible subentity types that are associated with DailyMetrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dailySubEntityType" })
  @Type(() => DailySubEntityType)
  dailySubEntityType?: DailySubEntityType;

  /**
   * Represents a timeseries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeSeries" })
  @Type(() => TimeSeries)
  timeSeries?: TimeSeries;
}
