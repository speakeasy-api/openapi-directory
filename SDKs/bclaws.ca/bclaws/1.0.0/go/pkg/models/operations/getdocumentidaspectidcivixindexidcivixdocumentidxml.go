// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum - The identifier of the 'aspect' (content group) to search
type GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum string

const (
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumComplete GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "complete"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumCorpreg  GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "corpreg"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumBcgaz1   GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "bcgaz1"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumBcgaz2   GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "bcgaz2"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumOic      GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "oic"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumPsl      GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "psl"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumEcb      GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "ecb"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumHscr     GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "hscr"
	GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnumArchOic  GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = "arch_oic"
)

func (e *GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "complete":
		fallthrough
	case "corpreg":
		fallthrough
	case "bcgaz1":
		fallthrough
	case "bcgaz2":
		fallthrough
	case "oic":
		fallthrough
	case "psl":
		fallthrough
	case "ecb":
		fallthrough
	case "hscr":
		fallthrough
	case "arch_oic":
		*e = GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum: %s", s)
	}
}

type GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLPathParams struct {
	// The identifier of the 'aspect' (content group) to search
	AspectID GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum `pathParam:"style=simple,explode=false,name=aspectId"`
	// The document identification code for an index or directory
	CivixDocumentID string `pathParam:"style=simple,explode=false,name=civixDocumentId"`
	// Index identification code
	CivixIndexID string `pathParam:"style=simple,explode=false,name=civixIndexId"`
}

type GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLRequest struct {
	PathParams GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLPathParams
}

type GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
