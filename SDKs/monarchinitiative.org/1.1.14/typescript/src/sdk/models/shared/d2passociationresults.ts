/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompactAssociationSet } from "./compactassociationset";
import { D2PAssociation } from "./d2passociation";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class D2PAssociationResults extends SpeakeasyBase {
  /**
   * Complete representation of full disease to phenotype association, plus evidence
   */
  @SpeakeasyMetadata({ elemType: D2PAssociation })
  @Expose({ name: "associations" })
  @Type(() => D2PAssociation)
  associations?: D2PAssociation[];

  /**
   * Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs
   */
  @SpeakeasyMetadata({ elemType: CompactAssociationSet })
  @Expose({ name: "compact_associations" })
  @Type(() => CompactAssociationSet)
  compactAssociations?: CompactAssociationSet[];

  /**
   * solr docs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "docs" })
  docs?: Record<string, any>[];

  /**
   * Mapping between field names and association counts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "facet_counts" })
  facetCounts?: Record<string, any>;

  /**
   * Mapping between id and solr highlight
   */
  @SpeakeasyMetadata()
  @Expose({ name: "highlighting" })
  highlighting?: Record<string, any>;

  /**
   * total number of associations matching query
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numFound" })
  numFound?: number;

  /**
   * List of distinct objects used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objects" })
  objects?: string[];
}
