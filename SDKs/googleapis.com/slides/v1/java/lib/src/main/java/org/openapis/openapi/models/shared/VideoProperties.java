/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VideoProperties - The properties of the Video.
 */
public class VideoProperties {
    /**
     * Whether to enable video autoplay when the page is displayed in present mode. Defaults to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPlay")
    public Boolean autoPlay;

    public VideoProperties withAutoPlay(Boolean autoPlay) {
        this.autoPlay = autoPlay;
        return this;
    }
    
    /**
     * The time at which to end playback, measured in seconds from the beginning of the video. If set, the end time should be after the start time. If not set or if you set this to a value that exceeds the video's length, the video will be played until its end.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end")
    public Long end;

    public VideoProperties withEnd(Long end) {
        this.end = end;
        return this;
    }
    
    /**
     * Whether to mute the audio during video playback. Defaults to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mute")
    public Boolean mute;

    public VideoProperties withMute(Boolean mute) {
        this.mute = mute;
        return this;
    }
    
    /**
     * The outline of a PageElement. If these fields are unset, they may be inherited from a parent placeholder if it exists. If there is no parent, the fields will default to the value used for new page elements created in the Slides editor, which may depend on the page element kind.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outline")
    public Outline outline;

    public VideoProperties withOutline(Outline outline) {
        this.outline = outline;
        return this;
    }
    
    /**
     * The time at which to start playback, measured in seconds from the beginning of the video. If set, the start time should be before the end time. If you set this to a value that exceeds the video's length in seconds, the video will be played from the last second. If not set, the video will be played from the beginning.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start")
    public Long start;

    public VideoProperties withStart(Long start) {
        this.start = start;
        return this;
    }
    
    public VideoProperties(){}
}
