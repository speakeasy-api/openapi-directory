/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import {
  GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase,
  GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput,
} from "./googleclouddialogflowcxv3fulfillmentconditionalcasescase";
import { Expose, Type } from "class-transformer";

/**
 * A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
 */
export class GoogleCloudDialogflowCxV3FulfillmentConditionalCases extends SpeakeasyBase {
  /**
   * A list of cascading if-else conditions.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase,
  })
  @Expose({ name: "cases" })
  @Type(() => GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)
  cases?: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase[];
}

/**
 * A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
 */
export class GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput extends SpeakeasyBase {
  /**
   * A list of cascading if-else conditions.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput,
  })
  @Expose({ name: "cases" })
  @Type(() => GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput)
  cases?: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput[];
}
