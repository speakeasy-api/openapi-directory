/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LicenseImageResult - The response to a licensing request for an image
 */
public class LicenseImageResult {
    /**
     * Number of credits that this licensing event used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allotment_charge")
    public Long allotmentCharge;
    public LicenseImageResult withAllotmentCharge(Long allotmentCharge) {
        this.allotmentCharge = allotmentCharge;
        return this;
    }
    
    /**
     * URL object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("download")
    public Url download;
    public LicenseImageResult withDownload(Url download) {
        this.download = download;
        return this;
    }
    
    /**
     * Error message, appears only if there was an error
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;
    public LicenseImageResult withError(String error) {
        this.error = error;
        return this;
    }
    
    /**
     * Image ID that was licensed
     */
    @JsonProperty("image_id")
    public String imageId;
    public LicenseImageResult withImageId(String imageId) {
        this.imageId = imageId;
        return this;
    }
    
    /**
     * ID of the license event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license_id")
    public String licenseId;
    public LicenseImageResult withLicenseId(String licenseId) {
        this.licenseId = licenseId;
        return this;
    }
    
    /**
     * Price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Price price;
    public LicenseImageResult withPrice(Price price) {
        this.price = price;
        return this;
    }
    
}
