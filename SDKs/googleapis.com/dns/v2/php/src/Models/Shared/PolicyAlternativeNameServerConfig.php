<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PolicyAlternativeNameServerConfig
{
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PolicyAlternativeNameServerConfigTargetNameServer> $targetNameServers
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetNameServers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PolicyAlternativeNameServerConfigTargetNameServer>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $targetNameServers = null;
    
	public function __construct()
	{
		$this->kind = null;
		$this->targetNameServers = null;
	}
}
