<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ColumnMetadata - Contains the metadata for a column.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ColumnMetadata
{
	#[\JMS\Serializer\Annotation\SerializedName('arrayBaseColumnType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $arrayBaseColumnType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isAutoIncrement')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAutoIncrement = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isCaseSensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isCaseSensitive = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isCurrency')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isCurrency = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isSigned')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSigned = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('nullable')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nullable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('precision')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $precision = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('scale')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $scale = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('schemaName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schemaName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('tableName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tableName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('typeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeName = null;
    
	public function __construct()
	{
		$this->arrayBaseColumnType = null;
		$this->isAutoIncrement = null;
		$this->isCaseSensitive = null;
		$this->isCurrency = null;
		$this->isSigned = null;
		$this->label = null;
		$this->name = null;
		$this->nullable = null;
		$this->precision = null;
		$this->scale = null;
		$this->schemaName = null;
		$this->tableName = null;
		$this->type = null;
		$this->typeName = null;
	}
}
