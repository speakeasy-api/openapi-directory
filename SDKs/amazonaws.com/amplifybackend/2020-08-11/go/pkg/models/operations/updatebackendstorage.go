// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateBackendStorageRequestBodyResourceConfigPermissions - The authorization configuration for the storage S3 bucket.
type UpdateBackendStorageRequestBodyResourceConfigPermissions struct {
	Authenticated   []shared.AuthenticatedElementEnum   `json:"Authenticated"`
	UnAuthenticated []shared.UnAuthenticatedElementEnum `json:"UnAuthenticated,omitempty"`
}

// UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum - The name of the storage service.
type UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum string

const (
	UpdateBackendStorageRequestBodyResourceConfigServiceNameEnumS3 UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum = "S3"
)

func (e *UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "S3":
		*e = UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum: %s", s)
	}
}

// UpdateBackendStorageRequestBodyResourceConfig - The resource configuration for updating backend storage.
type UpdateBackendStorageRequestBodyResourceConfig struct {
	Permissions *UpdateBackendStorageRequestBodyResourceConfigPermissions     `json:"Permissions,omitempty"`
	ServiceName *UpdateBackendStorageRequestBodyResourceConfigServiceNameEnum `json:"ServiceName,omitempty"`
}

type UpdateBackendStorageRequestBody struct {
	// The resource configuration for updating backend storage.
	ResourceConfig UpdateBackendStorageRequestBodyResourceConfig `json:"resourceConfig"`
	// The name of the storage resource.
	ResourceName string `json:"resourceName"`
}

type UpdateBackendStorageRequest struct {
	RequestBody       UpdateBackendStorageRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The app ID.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The name of the backend environment.
	BackendEnvironmentName string `pathParam:"style=simple,explode=false,name=backendEnvironmentName"`
}

type UpdateBackendStorageResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// GatewayTimeoutException
	GatewayTimeoutException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateBackendStorageResponse *shared.UpdateBackendStorageResponse
}
