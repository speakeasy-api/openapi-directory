/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetProductSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  zettleOauth: string;
}

export class GetProductRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-None-Match",
  })
  ifNoneMatch?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationUuid",
  })
  organizationUuid: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=productUuid",
  })
  productUuid: string;
}

export class GetProductResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Product
   */
  @SpeakeasyMetadata()
  productResponse?: shared.ProductResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
