"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getpaymentrundatatransactionelementresponse as shared_getpaymentrundatatransactionelementresponse
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GETPaymentRunDataElementResponseDocumentTypeEnum(str, Enum):
    r"""The billing document type specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""
    INVOICE = 'Invoice'
    DEBIT_MEMO = 'DebitMemo'

class GETPaymentRunDataElementResponseResultEnum(str, Enum):
    r"""Indicates whether the data is processed successfully or not."""
    PROCESSED = 'Processed'
    ERROR = 'Error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETPaymentRunDataElementResponse:
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""The customer account ID specified in the `data` field when creating the payment run."""  
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The amount specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""  
    amount_collected: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountCollected'), 'exclude': lambda f: f is None }})
    r"""The amount that is collected."""  
    amount_to_collect: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountToCollect'), 'exclude': lambda f: f is None }})
    r"""The amount to be collected."""  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""The comment specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""  
    document_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentId'), 'exclude': lambda f: f is None }})
    r"""The billing document ID specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""  
    document_type: Optional[GETPaymentRunDataElementResponseDocumentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentType'), 'exclude': lambda f: f is None }})
    r"""The billing document type specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCode'), 'exclude': lambda f: f is None }})
    r"""The error code of the response."""  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})
    r"""The detailed information of the error response."""  
    payment_gateway_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentGatewayId'), 'exclude': lambda f: f is None }})
    r"""The payment gateway ID specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""  
    payment_method_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodId'), 'exclude': lambda f: f is None }})
    r"""The payment method ID specified in the `data` field when creating the payment run. `null` is returned if it was not specified."""  
    result: Optional[GETPaymentRunDataElementResponseResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the data is processed successfully or not."""  
    transactions: Optional[list[shared_getpaymentrundatatransactionelementresponse.GETPaymentRunDataTransactionElementResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions'), 'exclude': lambda f: f is None }})
    r"""Container for transactions that apply to the current request. Each element contains an array of the settlement/payment applied to the record."""  
    