// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryMssqlDbSortByEnum - Specifies the SQL Server Database attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
type QueryMssqlDbSortByEnum string

const (
	QueryMssqlDbSortByEnumCopyOnly                QueryMssqlDbSortByEnum = "copyOnly"
	QueryMssqlDbSortByEnumEffectiveSLADomainName  QueryMssqlDbSortByEnum = "effectiveSlaDomainName"
	QueryMssqlDbSortByEnumLogBackupRetentionHours QueryMssqlDbSortByEnum = "logBackupRetentionHours"
	QueryMssqlDbSortByEnumName                    QueryMssqlDbSortByEnum = "name"
)

func (e QueryMssqlDbSortByEnum) ToPointer() *QueryMssqlDbSortByEnum {
	return &e
}

func (e *QueryMssqlDbSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "copyOnly":
		fallthrough
	case "effectiveSlaDomainName":
		fallthrough
	case "logBackupRetentionHours":
		fallthrough
	case "name":
		*e = QueryMssqlDbSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMssqlDbSortByEnum: %v", v)
	}
}

// QueryMssqlDbSortOrderEnum - Sort order, either ascending or descending.
type QueryMssqlDbSortOrderEnum string

const (
	QueryMssqlDbSortOrderEnumAsc  QueryMssqlDbSortOrderEnum = "asc"
	QueryMssqlDbSortOrderEnumDesc QueryMssqlDbSortOrderEnum = "desc"
)

func (e QueryMssqlDbSortOrderEnum) ToPointer() *QueryMssqlDbSortOrderEnum {
	return &e
}

func (e *QueryMssqlDbSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryMssqlDbSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMssqlDbSortOrderEnum: %v", v)
	}
}

type QueryMssqlDbRequest struct {
	// Filter by the `id` of an Always On Availability Group.
	AvailabilityGroupID *string `queryParam:"style=form,explode=true,name=availability_group_id"`
	// Filter by effective SLA domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Include backup task information in response.
	IncludeBackupTaskInfo *bool `queryParam:"style=form,explode=true,name=include_backup_task_info"`
	// Filter by Microsoft SQL instance.
	InstanceID *string `queryParam:"style=form,explode=true,name=instance_id"`
	// Filter database summary information by the value of the `isLiveMount` field.
	IsLiveMount *bool `queryParam:"style=form,explode=true,name=is_live_mount"`
	// Filter database summary information by the value of the `isLogShippingSecondary` field.
	IsLogShippingSecondary *bool `queryParam:"style=form,explode=true,name=is_log_shipping_secondary"`
	// Filter database summary information by the value of the `isRelic` field.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter by a substring of the database name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// An integer that specifies a number of initial matches to ignore.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter by primary cluster.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// SLA Assignment of the database.
	SLAAssignment *string `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Specifies the SQL Server Database attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
	SortBy *QueryMssqlDbSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryMssqlDbSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryMssqlDbResponse struct {
	ContentType string
	// Returned if the query was successful.
	MssqlDbSummaryListResponse *shared.MssqlDbSummaryListResponse
	StatusCode                 int
	RawResponse                *http.Response
}
