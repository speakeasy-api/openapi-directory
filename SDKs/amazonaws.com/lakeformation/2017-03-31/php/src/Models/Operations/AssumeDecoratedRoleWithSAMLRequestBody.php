<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class AssumeDecoratedRoleWithSAMLRequestBody
{
    /**
     * The time period, between 900 and 43,200 seconds, for the timeout of the temporary credentials.
     * 
     * @var ?int $durationSeconds
     */
	#[\JMS\Serializer\Annotation\SerializedName('DurationSeconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $durationSeconds = null;
    
    /**
     * The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.
     * 
     * @var string $principalArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('PrincipalArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $principalArn;
    
    /**
     * The role that represents an IAM principal whose scope down policy allows it to call credential vending APIs such as <code>GetTemporaryTableCredentials</code>. The caller must also have iam:PassRole permission on this role. 
     * 
     * @var string $roleArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('RoleArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $roleArn;
    
    /**
     * A SAML assertion consisting of an assertion statement for the user who needs temporary credentials. This must match the SAML assertion that was issued to IAM. This must be Base64 encoded.
     * 
     * @var string $samlAssertion
     */
	#[\JMS\Serializer\Annotation\SerializedName('SAMLAssertion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $samlAssertion;
    
	public function __construct()
	{
		$this->durationSeconds = null;
		$this->principalArn = "";
		$this->roleArn = "";
		$this->samlAssertion = "";
	}
}
