/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SimpleUser } from "./simpleuser";
import { Expose, Type } from "class-transformer";

/**
 * A GitHub repository.
 */
export class SimpleRepository extends SpeakeasyBase {
  /**
   * A template for the API URL to download the repository as an archive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archive_url" })
  archiveUrl: string;

  /**
   * A template for the API URL to list the available assignees for issues in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignees_url" })
  assigneesUrl: string;

  /**
   * A template for the API URL to create or retrieve a raw Git blob in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blobs_url" })
  blobsUrl: string;

  /**
   * A template for the API URL to get information about branches in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "branches_url" })
  branchesUrl: string;

  /**
   * A template for the API URL to get information about collaborators of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collaborators_url" })
  collaboratorsUrl: string;

  /**
   * A template for the API URL to get information about comments on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments_url" })
  commentsUrl: string;

  /**
   * A template for the API URL to get information about commits on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commits_url" })
  commitsUrl: string;

  /**
   * A template for the API URL to compare two commits or refs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "compare_url" })
  compareUrl: string;

  /**
   * A template for the API URL to get the contents of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contents_url" })
  contentsUrl: string;

  /**
   * A template for the API URL to list the contributors to the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributors_url" })
  contributorsUrl: string;

  /**
   * The API URL to list the deployments of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deployments_url" })
  deploymentsUrl: string;

  /**
   * The repository description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The API URL to list the downloads on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downloads_url" })
  downloadsUrl: string;

  /**
   * The API URL to list the events of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events_url" })
  eventsUrl: string;

  /**
   * Whether the repository is a fork.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fork" })
  fork: boolean;

  /**
   * The API URL to list the forks of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "forks_url" })
  forksUrl: string;

  /**
   * The full, globally unique, name of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "full_name" })
  fullName: string;

  /**
   * A template for the API URL to get information about Git commits of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "git_commits_url" })
  gitCommitsUrl: string;

  /**
   * A template for the API URL to get information about Git refs of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "git_refs_url" })
  gitRefsUrl: string;

  /**
   * A template for the API URL to get information about Git tags of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "git_tags_url" })
  gitTagsUrl: string;

  /**
   * The API URL to list the hooks on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hooks_url" })
  hooksUrl: string;

  /**
   * The URL to view the repository on GitHub.com.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * A unique identifier of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * A template for the API URL to get information about issue comments on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issue_comment_url" })
  issueCommentUrl: string;

  /**
   * A template for the API URL to get information about issue events on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issue_events_url" })
  issueEventsUrl: string;

  /**
   * A template for the API URL to get information about issues on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issues_url" })
  issuesUrl: string;

  /**
   * A template for the API URL to get information about deploy keys on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keys_url" })
  keysUrl: string;

  /**
   * A template for the API URL to get information about labels of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels_url" })
  labelsUrl: string;

  /**
   * The API URL to get information about the languages of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languages_url" })
  languagesUrl: string;

  /**
   * The API URL to merge branches in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merges_url" })
  mergesUrl: string;

  /**
   * A template for the API URL to get information about milestones of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "milestones_url" })
  milestonesUrl: string;

  /**
   * The name of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The GraphQL identifier of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * A template for the API URL to get information about notifications on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notifications_url" })
  notificationsUrl: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => SimpleUser)
  owner: SimpleUser;

  /**
   * Whether the repository is private.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "private" })
  private: boolean;

  /**
   * A template for the API URL to get information about pull requests on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pulls_url" })
  pullsUrl: string;

  /**
   * A template for the API URL to get information about releases on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releases_url" })
  releasesUrl: string;

  /**
   * The API URL to list the stargazers on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stargazers_url" })
  stargazersUrl: string;

  /**
   * A template for the API URL to get information about statuses of a commit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statuses_url" })
  statusesUrl: string;

  /**
   * The API URL to list the subscribers on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscribers_url" })
  subscribersUrl: string;

  /**
   * The API URL to subscribe to notifications for this repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_url" })
  subscriptionUrl: string;

  /**
   * The API URL to get information about tags on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags_url" })
  tagsUrl: string;

  /**
   * The API URL to list the teams on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teams_url" })
  teamsUrl: string;

  /**
   * A template for the API URL to create or retrieve a raw Git tree of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trees_url" })
  treesUrl: string;

  /**
   * The URL to get more information about the repository from the GitHub API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
