/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { QueryExecutionContext } from "./queryexecutioncontext";
import { ResultConfiguration } from "./resultconfiguration";
import { ResultReuseConfiguration } from "./resultreuseconfiguration";
import { Expose, Type } from "class-transformer";

export class StartQueryExecutionInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionParameters" })
  executionParameters?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "QueryExecutionContext" })
  @Type(() => QueryExecutionContext)
  queryExecutionContext?: QueryExecutionContext;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryString" })
  queryString: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResultConfiguration" })
  @Type(() => ResultConfiguration)
  resultConfiguration?: ResultConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ResultReuseConfiguration" })
  @Type(() => ResultReuseConfiguration)
  resultReuseConfiguration?: ResultReuseConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkGroup" })
  workGroup?: string;
}
