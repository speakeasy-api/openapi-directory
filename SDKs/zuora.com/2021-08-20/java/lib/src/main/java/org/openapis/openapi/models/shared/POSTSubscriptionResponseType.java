/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class POSTSubscriptionResponseType {
    /**
     * Monthly recurring revenue of the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contractedMrr")
    public Double contractedMrr;
    public POSTSubscriptionResponseType withContractedMrr(Double contractedMrr) {
        this.contractedMrr = contractedMrr;
        return this;
    }
    
    /**
     * The credit memo ID, if a credit memo is generated during the subscription process.
     * 
     * **Note:** This container is only available if you set the Zuora REST API minor version to 207.0 or later in the request header, and you have  [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemoId")
    public String creditMemoId;
    public POSTSubscriptionResponseType withCreditMemoId(String creditMemoId) {
        this.creditMemoId = creditMemoId;
        return this;
    }
    
    /**
     * Invoice ID, if an invoice is generated during the subscription process.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceId")
    public String invoiceId;
    public POSTSubscriptionResponseType withInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
        return this;
    }
    
    /**
     * Payment amount, if a payment is collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paidAmount")
    public Double paidAmount;
    public POSTSubscriptionResponseType withPaidAmount(Double paidAmount) {
        this.paidAmount = paidAmount;
        return this;
    }
    
    /**
     * Payment ID, if a payment is collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentId")
    public String paymentId;
    public POSTSubscriptionResponseType withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public POSTSubscriptionResponseType withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumber")
    public String subscriptionNumber;
    public POSTSubscriptionResponseType withSubscriptionNumber(String subscriptionNumber) {
        this.subscriptionNumber = subscriptionNumber;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public POSTSubscriptionResponseType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Total contracted value of the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalContractedValue")
    public Double totalContractedValue;
    public POSTSubscriptionResponseType withTotalContractedValue(Double totalContractedValue) {
        this.totalContractedValue = totalContractedValue;
        return this;
    }
    
}
