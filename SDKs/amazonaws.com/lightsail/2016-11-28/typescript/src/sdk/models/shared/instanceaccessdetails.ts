/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HostKeyAttributes } from "./hostkeyattributes";
import { InstanceAccessProtocolEnum } from "./instanceaccessprotocolenum";
import { PasswordData } from "./passworddata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The parameters for gaining temporary access to one of your Amazon Lightsail instances.
 */
export class InstanceAccessDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "certKey" })
  certKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expiresAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt?: Date;

  @SpeakeasyMetadata({ elemType: HostKeyAttributes })
  @Expose({ name: "hostKeys" })
  @Type(() => HostKeyAttributes)
  hostKeys?: HostKeyAttributes[];

  @SpeakeasyMetadata()
  @Expose({ name: "instanceName" })
  instanceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "passwordData" })
  @Type(() => PasswordData)
  passwordData?: PasswordData;

  @SpeakeasyMetadata()
  @Expose({ name: "privateKey" })
  privateKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: InstanceAccessProtocolEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
