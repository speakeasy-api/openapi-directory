/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * CreditMemoItemFromInvoiceItemType - Container for custom fields of a Credit Memo Item object.
 * 
 */
public class CreditMemoItemFromInvoiceItemType {
    /**
     * The amount of the credit memo item.
     * 
     */
    @JsonProperty("amount")
    public Double amount;
    public CreditMemoItemFromInvoiceItemType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Comments about the credit memo item.
     * 
     * **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public CreditMemoItemFromInvoiceItemType withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The description of the credit memo item.
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CreditMemoItemFromInvoiceItemType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Container for the finance information related to the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financeInformation")
    public CreditMemoItemFromInvoiceItemTypeFinanceInformation financeInformation;
    public CreditMemoItemFromInvoiceItemType withFinanceInformation(CreditMemoItemFromInvoiceItemTypeFinanceInformation financeInformation) {
        this.financeInformation = financeInformation;
        return this;
    }
    
    /**
     * The ID of the invoice item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceItemId")
    public String invoiceItemId;
    public CreditMemoItemFromInvoiceItemType withInvoiceItemId(String invoiceItemId) {
        this.invoiceItemId = invoiceItemId;
        return this;
    }
    
    /**
     * The number of units for the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;
    public CreditMemoItemFromInvoiceItemType withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The service end date of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceEndDate")
    public LocalDate serviceEndDate;
    public CreditMemoItemFromInvoiceItemType withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * The service start date of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceStartDate")
    public LocalDate serviceStartDate;
    public CreditMemoItemFromInvoiceItemType withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * The name of the charge associated with the invoice.
     * 
     */
    @JsonProperty("skuName")
    public String skuName;
    public CreditMemoItemFromInvoiceItemType withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }
    
    /**
     * Container for taxation items.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxItems")
    public CreditMemoTaxItemFromInvoiceTaxItemType[] taxItems;
    public CreditMemoItemFromInvoiceItemType withTaxItems(CreditMemoTaxItemFromInvoiceTaxItemType[] taxItems) {
        this.taxItems = taxItems;
        return this;
    }
    
    /**
     * The tax mode of the credit memo item, indicating whether the amount of the credit memo item includes tax.
     * 
     * **Note**: You can set this field to `TaxInclusive` only if the `taxAutoCalculation` field is set to `true`.
     * 
     * If you set `taxMode` to `TaxInclusive`, you cannot input tax amounts for credit memo items. The corresponding invoice item must use the same tax engine as the credit memo item to calculate tax amounts.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxMode")
    public CreditMemoItemFromInvoiceItemTypeTaxModeEnum taxMode;
    public CreditMemoItemFromInvoiceItemType withTaxMode(CreditMemoItemFromInvoiceItemTypeTaxModeEnum taxMode) {
        this.taxMode = taxMode;
        return this;
    }
    
    /**
     * The definable unit that you measure when determining charges.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public CreditMemoItemFromInvoiceItemType withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
}
