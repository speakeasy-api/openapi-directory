/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalConstraintsElementEnum } from "./additionalconstraintselementenum";
import { BackendAuthAppleProviderConfig } from "./backendauthappleproviderconfig";
import { BackendAuthSocialProviderConfig } from "./backendauthsocialproviderconfig";
import { MFAModeEnum } from "./mfamodeenum";
import { MfaTypesElementEnum } from "./mfatypeselementenum";
import { OAuthScopesElementEnum } from "./oauthscopeselementenum";
import { RequiredSignUpAttributesElementEnum } from "./requiredsignupattributeselementenum";
import { Expose, Type } from "class-transformer";

/**
 * Defines whether you want to configure only authentication or both authentication and authorization settings.
 */
export enum GetBackendAuthResponseResourceConfigAuthResourcesEnum {
  UserPoolOnly = "USER_POOL_ONLY",
  IdentityPoolAndUserPool = "IDENTITY_POOL_AND_USER_POOL",
}

/**
 * Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.
 */
export class GetBackendAuthResponseResourceConfigIdentityPoolConfigs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IdentityPoolName" })
  identityPoolName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UnauthenticatedLogin" })
  unauthenticatedLogin: boolean;
}

/**
 * Defines the service name to use when configuring an authentication resource in your Amplify project.
 */
export enum GetBackendAuthResponseResourceConfigServiceEnum {
  Cognito = "COGNITO",
}

/**
 * <b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.
 */
export enum GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum {
  Email = "EMAIL",
  Sms = "SMS",
}

/**
 * <b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordEmailSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EmailMessage" })
  emailMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSubject" })
  emailSubject?: string;
}

/**
 * <b>(DEPRECATED)</b> The configuration for the SMS message sent when an app user forgets their password.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordSmsSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "SmsMessage" })
  smsMessage?: string;
}

/**
 * <b>(DEPRECATED)</b> Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPassword extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryMethod" })
  deliveryMethod: GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSettings" })
  @Type(
    () =>
      GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordEmailSettings
  )
  emailSettings?: GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordEmailSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "SmsSettings" })
  @Type(
    () =>
      GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordSmsSettings
  )
  smsSettings?: GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordSmsSettings;
}

/**
 * Describes the configuration settings and methods for your Amplify app users to use MFA.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsMfaSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MfaTypes" })
  mfaTypes?: MfaTypesElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "SmsMessage" })
  smsMessage?: string;
}

/**
 * Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsMfa extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MFAMode" })
  mfaMode: MFAModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Settings" })
  @Type(() => GetBackendAuthResponseResourceConfigUserPoolConfigsMfaSettings)
  settings?: GetBackendAuthResponseResourceConfigUserPoolConfigsMfaSettings;
}

/**
 * The OAuth grant type that you use to allow app users to authenticate from your Amplify app.
 */
export enum GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum {
  Code = "CODE",
  Implicit = "IMPLICIT",
}

/**
 * The settings for using social providers to access your Amplify app.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthSocialProviderSettings extends SpeakeasyBase {
  /**
   * Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Facebook" })
  @Type(() => BackendAuthSocialProviderConfig)
  facebook?: BackendAuthSocialProviderConfig;

  /**
   * Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Google" })
  @Type(() => BackendAuthSocialProviderConfig)
  google?: BackendAuthSocialProviderConfig;

  /**
   * Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LoginWithAmazon" })
  @Type(() => BackendAuthSocialProviderConfig)
  loginWithAmazon?: BackendAuthSocialProviderConfig;

  /**
   * Describes Apple social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SignInWithApple" })
  @Type(() => BackendAuthAppleProviderConfig)
  signInWithApple?: BackendAuthAppleProviderConfig;
}

/**
 * Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsOAuth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DomainPrefix" })
  domainPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuthGrantType" })
  oAuthGrantType: GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuthScopes" })
  oAuthScopes: OAuthScopesElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "RedirectSignInURIs" })
  redirectSignInURIs: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "RedirectSignOutURIs" })
  redirectSignOutURIs: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SocialProviderSettings" })
  @Type(
    () =>
      GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthSocialProviderSettings
  )
  socialProviderSettings?: GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthSocialProviderSettings;
}

/**
 * Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsPasswordPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalConstraints" })
  additionalConstraints?: AdditionalConstraintsElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "MinimumLength" })
  minimumLength: number;
}

/**
 * Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export enum GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum {
  Email = "EMAIL",
  EmailAndPhoneNumber = "EMAIL_AND_PHONE_NUMBER",
  PhoneNumber = "PHONE_NUMBER",
  Username = "USERNAME",
}

/**
 * The type of verification message to send.
 */
export enum GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum {
  Email = "EMAIL",
  Sms = "SMS",
}

/**
 * The settings for the email message.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageEmailSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EmailMessage" })
  emailMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSubject" })
  emailSubject?: string;
}

/**
 * The settings for the SMS message.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageSmsSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "SmsMessage" })
  smsMessage?: string;
}

/**
 * Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryMethod" })
  deliveryMethod: GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSettings" })
  @Type(
    () =>
      GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageEmailSettings
  )
  emailSettings?: GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageEmailSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "SmsSettings" })
  @Type(
    () =>
      GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageSmsSettings
  )
  smsSettings?: GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageSmsSettings;
}

/**
 * Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.
 */
export class GetBackendAuthResponseResourceConfigUserPoolConfigs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ForgotPassword" })
  @Type(() => GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPassword)
  forgotPassword?: GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPassword;

  @SpeakeasyMetadata()
  @Expose({ name: "Mfa" })
  @Type(() => GetBackendAuthResponseResourceConfigUserPoolConfigsMfa)
  mfa?: GetBackendAuthResponseResourceConfigUserPoolConfigsMfa;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuth" })
  @Type(() => GetBackendAuthResponseResourceConfigUserPoolConfigsOAuth)
  oAuth?: GetBackendAuthResponseResourceConfigUserPoolConfigsOAuth;

  @SpeakeasyMetadata()
  @Expose({ name: "PasswordPolicy" })
  @Type(() => GetBackendAuthResponseResourceConfigUserPoolConfigsPasswordPolicy)
  passwordPolicy?: GetBackendAuthResponseResourceConfigUserPoolConfigsPasswordPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "RequiredSignUpAttributes" })
  requiredSignUpAttributes: RequiredSignUpAttributesElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "SignInMethod" })
  signInMethod: GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolName" })
  userPoolName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VerificationMessage" })
  @Type(
    () => GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessage
  )
  verificationMessage?: GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessage;
}

/**
 * The resource configuration for authorization requests to the backend of your Amplify project.
 */
export class GetBackendAuthResponseResourceConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AuthResources" })
  authResources: GetBackendAuthResponseResourceConfigAuthResourcesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityPoolConfigs" })
  @Type(() => GetBackendAuthResponseResourceConfigIdentityPoolConfigs)
  identityPoolConfigs?: GetBackendAuthResponseResourceConfigIdentityPoolConfigs;

  @SpeakeasyMetadata()
  @Expose({ name: "Service" })
  service: GetBackendAuthResponseResourceConfigServiceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolConfigs" })
  @Type(() => GetBackendAuthResponseResourceConfigUserPoolConfigs)
  userPoolConfigs: GetBackendAuthResponseResourceConfigUserPoolConfigs;
}

/**
 * Success
 */
export class GetBackendAuthResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AppId" })
  appId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BackendEnvironmentName" })
  backendEnvironmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceConfig" })
  @Type(() => GetBackendAuthResponseResourceConfig)
  resourceConfig?: GetBackendAuthResponseResourceConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceName" })
  resourceName?: string;
}
