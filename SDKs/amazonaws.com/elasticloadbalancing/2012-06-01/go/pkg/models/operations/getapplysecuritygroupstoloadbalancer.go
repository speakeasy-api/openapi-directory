// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETApplySecurityGroupsToLoadBalancerActionEnum
type GETApplySecurityGroupsToLoadBalancerActionEnum string

const (
	GETApplySecurityGroupsToLoadBalancerActionEnumApplySecurityGroupsToLoadBalancer GETApplySecurityGroupsToLoadBalancerActionEnum = "ApplySecurityGroupsToLoadBalancer"
)

func (e GETApplySecurityGroupsToLoadBalancerActionEnum) ToPointer() *GETApplySecurityGroupsToLoadBalancerActionEnum {
	return &e
}

func (e *GETApplySecurityGroupsToLoadBalancerActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ApplySecurityGroupsToLoadBalancer":
		*e = GETApplySecurityGroupsToLoadBalancerActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETApplySecurityGroupsToLoadBalancerActionEnum: %v", v)
	}
}

// GETApplySecurityGroupsToLoadBalancerVersionEnum
type GETApplySecurityGroupsToLoadBalancerVersionEnum string

const (
	GETApplySecurityGroupsToLoadBalancerVersionEnumTwoThousandAndTwelve0601 GETApplySecurityGroupsToLoadBalancerVersionEnum = "2012-06-01"
)

func (e GETApplySecurityGroupsToLoadBalancerVersionEnum) ToPointer() *GETApplySecurityGroupsToLoadBalancerVersionEnum {
	return &e
}

func (e *GETApplySecurityGroupsToLoadBalancerVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-06-01":
		*e = GETApplySecurityGroupsToLoadBalancerVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETApplySecurityGroupsToLoadBalancerVersionEnum: %v", v)
	}
}

type GETApplySecurityGroupsToLoadBalancerRequest struct {
	Action GETApplySecurityGroupsToLoadBalancerActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the load balancer.
	LoadBalancerName string `queryParam:"style=form,explode=true,name=LoadBalancerName"`
	// The IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.
	SecurityGroups    []string                                        `queryParam:"style=form,explode=true,name=SecurityGroups"`
	Version           GETApplySecurityGroupsToLoadBalancerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETApplySecurityGroupsToLoadBalancerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
