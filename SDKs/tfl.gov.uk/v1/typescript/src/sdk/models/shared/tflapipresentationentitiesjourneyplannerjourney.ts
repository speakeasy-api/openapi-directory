/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesJourneyPlannerJourneyFare } from "./tflapipresentationentitiesjourneyplannerjourneyfare";
import { TflApiPresentationEntitiesJourneyPlannerLeg } from "./tflapipresentationentitiesjourneyplannerleg";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Object that represents an end to end journey (see schematic).
 */
export class TflApiPresentationEntitiesJourneyPlannerJourney extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arrivalDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  arrivalDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fare" })
  @Type(() => TflApiPresentationEntitiesJourneyPlannerJourneyFare)
  fare?: TflApiPresentationEntitiesJourneyPlannerJourneyFare;

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesJourneyPlannerLeg })
  @Expose({ name: "legs" })
  @Type(() => TflApiPresentationEntitiesJourneyPlannerLeg)
  legs?: TflApiPresentationEntitiesJourneyPlannerLeg[];

  @SpeakeasyMetadata()
  @Expose({ name: "startDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime?: Date;
}
