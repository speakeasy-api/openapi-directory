<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Gdpr 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * dataSubjectRightCancelDeleteRequest
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestResponse
     */
	public function dataSubjectRightCancelDeleteRequest(
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0.1/user/dsr/delete/{token}/cancel', \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 202) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightCancelDeleteRequest202ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequest202ApplicationJSON', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 503) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightCancelDeleteRequest503ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequest503ApplicationJSON', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightCancelDeleteRequestDefaultApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelDeleteRequestDefaultApplicationJSON', 'json');
            }
        }

        return $response;
    }
	
    /**
     * dataSubjectRightCancelExportRequest
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestResponse
     */
	public function dataSubjectRightCancelExportRequest(
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0.1/user/dsr/export/{token}/cancel', \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 202) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightCancelExportRequest202ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequest202ApplicationJSON', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 503) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightCancelExportRequest503ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequest503ApplicationJSON', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightCancelExportRequestDefaultApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightCancelExportRequestDefaultApplicationJSON', 'json');
            }
        }

        return $response;
    }
	
    /**
     * dataSubjectRightDeleteRequest
     * 
     * @return \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteRequestResponse
     */
	public function dataSubjectRightDeleteRequest(
    ): \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteRequestResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0.1/user/dsr/delete');
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteRequestResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 202) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightDeleteRequest202ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteRequest202ApplicationJSON', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightDeleteRequestDefaultApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteRequestDefaultApplicationJSON', 'json');
            }
        }

        return $response;
    }
	
    /**
     * dataSubjectRightDeleteStatusRequest
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestResponse
     */
	public function dataSubjectRightDeleteStatusRequest(
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0.1/user/dsr/delete/{token}', \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightDeleteStatusRequest200ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequest200ApplicationJSON', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightDeleteStatusRequestDefaultApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightDeleteStatusRequestDefaultApplicationJSON', 'json');
            }
        }

        return $response;
    }
	
    /**
     * dataSubjectRightExportRequest
     * 
     * @return \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportRequestResponse
     */
	public function dataSubjectRightExportRequest(
    ): \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportRequestResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0.1/user/dsr/export');
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportRequestResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 202) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightExportRequest202ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportRequest202ApplicationJSON', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightExportRequestDefaultApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportRequestDefaultApplicationJSON', 'json');
            }
        }

        return $response;
    }
	
    /**
     * dataSubjectRightExportStatusRequest
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestResponse
     */
	public function dataSubjectRightExportStatusRequest(
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0.1/user/dsr/export/{token}', \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightExportStatusRequest200ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequest200ApplicationJSON', 'json');
            }
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->dataSubjectRightExportStatusRequestDefaultApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\DataSubjectRightExportStatusRequestDefaultApplicationJSON', 'json');
            }
        }

        return $response;
    }
}