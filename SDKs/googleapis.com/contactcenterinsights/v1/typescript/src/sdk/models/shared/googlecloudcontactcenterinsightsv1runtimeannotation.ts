/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudContactcenterinsightsV1AnnotationBoundary } from "./googlecloudcontactcenterinsightsv1annotationboundary";
import { GoogleCloudContactcenterinsightsV1AnswerFeedback } from "./googlecloudcontactcenterinsightsv1answerfeedback";
import { GoogleCloudContactcenterinsightsV1ArticleSuggestionData } from "./googlecloudcontactcenterinsightsv1articlesuggestiondata";
import { GoogleCloudContactcenterinsightsV1DialogflowInteractionData } from "./googlecloudcontactcenterinsightsv1dialogflowinteractiondata";
import { GoogleCloudContactcenterinsightsV1FaqAnswerData } from "./googlecloudcontactcenterinsightsv1faqanswerdata";
import { GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData } from "./googlecloudcontactcenterinsightsv1smartcomposesuggestiondata";
import { GoogleCloudContactcenterinsightsV1SmartReplyData } from "./googlecloudcontactcenterinsightsv1smartreplydata";
import { Expose, Type } from "class-transformer";

/**
 * An annotation that was generated during the customer and agent interaction.
 */
export class GoogleCloudContactcenterinsightsV1RuntimeAnnotation extends SpeakeasyBase {
  /**
   * The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotationId" })
  annotationId?: string;

  /**
   * The feedback that the customer has about a certain answer in the conversation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answerFeedback" })
  @Type(() => GoogleCloudContactcenterinsightsV1AnswerFeedback)
  answerFeedback?: GoogleCloudContactcenterinsightsV1AnswerFeedback;

  /**
   * Agent Assist Article Suggestion data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "articleSuggestion" })
  @Type(() => GoogleCloudContactcenterinsightsV1ArticleSuggestionData)
  articleSuggestion?: GoogleCloudContactcenterinsightsV1ArticleSuggestionData;

  /**
   * The time at which this annotation was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Dialogflow interaction data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dialogflowInteraction" })
  @Type(() => GoogleCloudContactcenterinsightsV1DialogflowInteractionData)
  dialogflowInteraction?: GoogleCloudContactcenterinsightsV1DialogflowInteractionData;

  /**
   * A point in a conversation that marks the start or the end of an annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endBoundary" })
  @Type(() => GoogleCloudContactcenterinsightsV1AnnotationBoundary)
  endBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;

  /**
   * Agent Assist frequently-asked-question answer data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "faqAnswer" })
  @Type(() => GoogleCloudContactcenterinsightsV1FaqAnswerData)
  faqAnswer?: GoogleCloudContactcenterinsightsV1FaqAnswerData;

  /**
   * Agent Assist Smart Compose suggestion data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smartComposeSuggestion" })
  @Type(() => GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData)
  smartComposeSuggestion?: GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData;

  /**
   * Agent Assist Smart Reply data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smartReply" })
  @Type(() => GoogleCloudContactcenterinsightsV1SmartReplyData)
  smartReply?: GoogleCloudContactcenterinsightsV1SmartReplyData;

  /**
   * A point in a conversation that marks the start or the end of an annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startBoundary" })
  @Type(() => GoogleCloudContactcenterinsightsV1AnnotationBoundary)
  startBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;
}
