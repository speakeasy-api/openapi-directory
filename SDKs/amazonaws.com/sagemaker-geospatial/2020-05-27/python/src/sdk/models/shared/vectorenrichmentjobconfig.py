"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mapmatchingconfig as shared_mapmatchingconfig
from ..shared import reversegeocodingconfig as shared_reversegeocodingconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VectorEnrichmentJobConfig:
    r"""It contains configs such as ReverseGeocodingConfig and MapMatchingConfig."""
    
    map_matching_config: Optional[shared_mapmatchingconfig.MapMatchingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MapMatchingConfig'), 'exclude': lambda f: f is None }})  
    reverse_geocoding_config: Optional[shared_reversegeocodingconfig.ReverseGeocodingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReverseGeocodingConfig'), 'exclude': lambda f: f is None }})  
    