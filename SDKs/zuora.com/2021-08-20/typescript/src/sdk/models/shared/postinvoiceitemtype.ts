/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PostTaxationItemType } from "./posttaxationitemtype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The date when revenue recognition is triggered.
 *
 * @remarks
 *
 */
export enum PostInvoiceItemTypeRevRecTriggerConditionEnum {
  ContractEffectiveDate = "ContractEffectiveDate",
  ServiceActivationDate = "ServiceActivationDate",
  CustomerAcceptanceDate = "CustomerAcceptanceDate",
}

/**
 * The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax.
 *
 * @remarks
 *
 * **Note** This field is only available only when Taxation enabled.
 *
 */
export enum PostInvoiceItemTypeTaxModeEnum {
  TaxInclusive = "TaxInclusive",
  TaxExclusive = "TaxExclusive",
}

/**
 * Container for custom fields of an Invoice Item object.
 *
 * @remarks
 *
 */
export class PostInvoiceItemType extends SpeakeasyBase {
  /**
   * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationId__NS" })
  integrationIdNS?: string;

  /**
   * Status of the invoice item's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationStatus__NS" })
  integrationStatusNS?: string;

  /**
   * Date when the invoice item was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SyncDate__NS" })
  syncDateNS?: string;

  /**
   * The accounting code associated with the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountingCode" })
  accountingCode?: string;

  /**
   * The amount of the invoice item.
   *
   * @remarks
   *
   * - For tax-inclusive invoice items, the amount indicates the invoice item amount including tax.
   * - For tax-exclusive invoice items, the amount indicates the invoice item amount excluding tax.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: string;

  /**
   * The booking reference of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingReference" })
  bookingReference?: string;

  /**
   * The date when the invoice item is charged.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  chargeDate?: Date;

  /**
   * The name of the charge associated with the invoice item.
   *
   * @remarks
   *
   * This field is required if the `productRatePlanChargeId` field is not specified in the request.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeName" })
  chargeName?: string;

  /**
   * The accounting code for the deferred revenue, such as Monthly Recurring Liability.
   *
   * @remarks
   *
   * **Note:** This field is only available if you have Zuora Finance enabled.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deferredRevenueAccountingCode" })
  deferredRevenueAccountingCode?: string;

  /**
   * The description of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The type of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemType" })
  itemType?: string;

  /**
   * The ID of the product rate plan charge that the invoice item is created from.
   *
   * @remarks
   *
   * If you specify a value for the `productRatePlanChargeId` field in the request, Zuora directly copies the values of the following fields from the corresponding product rate plan charge, regardless of the values specified in the request body:
   * - `chargeName`
   * - `sku`
   * - `uom`
   * - `taxCode`
   * - `taxMode`
   * - `accountingCode`
   * - `deferredRevenueAccountingCode`
   * - `recognizedRevenueAccountingCode`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productRatePlanChargeId" })
  productRatePlanChargeId?: string;

  /**
   * The purchase order number associated with the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchaseOrderNumber" })
  purchaseOrderNumber?: string;

  /**
   * The number of units for the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: string;

  /**
   * The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.
   *
   * @remarks
   *
   * **Note:** This field is only available if you have Zuora Finance enabled.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognizedRevenueAccountingCode" })
  recognizedRevenueAccountingCode?: string;

  /**
   * The revenue recognition code.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revRecCode" })
  revRecCode?: string;

  /**
   * The date when revenue recognition is triggered.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revRecTriggerCondition" })
  revRecTriggerCondition?: PostInvoiceItemTypeRevRecTriggerConditionEnum;

  /**
   * The name of the revenue recognition rule governing the revenue schedule.
   *
   * @remarks
   *
   * **Note:** This field is only available if you have Zuora Finance enabled.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revenueRecognitionRuleName" })
  revenueRecognitionRuleName?: string;

  /**
   * The service end date of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceEndDate?: Date;

  /**
   * The service start date of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceStartDate: Date;

  /**
   * The SKU of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * The tax code identifies which tax rules and tax rates to apply to the invoice item.
   *
   * @remarks
   *
   * **Note** This field is only available only when Taxation enabled.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxCode" })
  taxCode?: string;

  /**
   * Container for taxation items. The maximum number of taxation items is 5.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: PostTaxationItemType })
  @Expose({ name: "taxItems" })
  @Type(() => PostTaxationItemType)
  taxItems?: PostTaxationItemType[];

  /**
   * The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax.
   *
   * @remarks
   *
   * **Note** This field is only available only when Taxation enabled.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxMode" })
  taxMode?: PostInvoiceItemTypeTaxModeEnum;

  /**
   * The per-unit price of the invoice item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitPrice" })
  unitPrice?: string;

  /**
   * The unit of measure.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uom" })
  uom?: string;
}
