// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CancelTestMatrixResponseTestStateEnum - The current rolled-up state of the test matrix. If this state is already final, then the cancelation request will have no effect.
type CancelTestMatrixResponseTestStateEnum string

const (
	CancelTestMatrixResponseTestStateEnumTestStateUnspecified     CancelTestMatrixResponseTestStateEnum = "TEST_STATE_UNSPECIFIED"
	CancelTestMatrixResponseTestStateEnumValidating               CancelTestMatrixResponseTestStateEnum = "VALIDATING"
	CancelTestMatrixResponseTestStateEnumPending                  CancelTestMatrixResponseTestStateEnum = "PENDING"
	CancelTestMatrixResponseTestStateEnumRunning                  CancelTestMatrixResponseTestStateEnum = "RUNNING"
	CancelTestMatrixResponseTestStateEnumFinished                 CancelTestMatrixResponseTestStateEnum = "FINISHED"
	CancelTestMatrixResponseTestStateEnumError                    CancelTestMatrixResponseTestStateEnum = "ERROR"
	CancelTestMatrixResponseTestStateEnumUnsupportedEnvironment   CancelTestMatrixResponseTestStateEnum = "UNSUPPORTED_ENVIRONMENT"
	CancelTestMatrixResponseTestStateEnumIncompatibleEnvironment  CancelTestMatrixResponseTestStateEnum = "INCOMPATIBLE_ENVIRONMENT"
	CancelTestMatrixResponseTestStateEnumIncompatibleArchitecture CancelTestMatrixResponseTestStateEnum = "INCOMPATIBLE_ARCHITECTURE"
	CancelTestMatrixResponseTestStateEnumCancelled                CancelTestMatrixResponseTestStateEnum = "CANCELLED"
	CancelTestMatrixResponseTestStateEnumInvalid                  CancelTestMatrixResponseTestStateEnum = "INVALID"
)

func (e CancelTestMatrixResponseTestStateEnum) ToPointer() *CancelTestMatrixResponseTestStateEnum {
	return &e
}

func (e *CancelTestMatrixResponseTestStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEST_STATE_UNSPECIFIED":
		fallthrough
	case "VALIDATING":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FINISHED":
		fallthrough
	case "ERROR":
		fallthrough
	case "UNSUPPORTED_ENVIRONMENT":
		fallthrough
	case "INCOMPATIBLE_ENVIRONMENT":
		fallthrough
	case "INCOMPATIBLE_ARCHITECTURE":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "INVALID":
		*e = CancelTestMatrixResponseTestStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelTestMatrixResponseTestStateEnum: %v", v)
	}
}

// CancelTestMatrixResponse - Response containing the current state of the specified test matrix.
type CancelTestMatrixResponse struct {
	// The current rolled-up state of the test matrix. If this state is already final, then the cancelation request will have no effect.
	TestState *CancelTestMatrixResponseTestStateEnum `json:"testState,omitempty"`
}
