// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListZoomRoomsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

// ListZoomRoomsStatusEnum - The status of the Zoom Room.
type ListZoomRoomsStatusEnum string

const (
	ListZoomRoomsStatusEnumOffline           ListZoomRoomsStatusEnum = "Offline"
	ListZoomRoomsStatusEnumAvailable         ListZoomRoomsStatusEnum = "Available"
	ListZoomRoomsStatusEnumInMeeting         ListZoomRoomsStatusEnum = "InMeeting"
	ListZoomRoomsStatusEnumUnderConstruction ListZoomRoomsStatusEnum = "UnderConstruction"
)

func (e *ListZoomRoomsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Offline":
		fallthrough
	case "Available":
		fallthrough
	case "InMeeting":
		fallthrough
	case "UnderConstruction":
		*e = ListZoomRoomsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListZoomRoomsStatusEnum: %s", s)
	}
}

// ListZoomRoomsTypeEnum - Type of the Zoom Rooms.
type ListZoomRoomsTypeEnum string

const (
	ListZoomRoomsTypeEnumZoomRoom              ListZoomRoomsTypeEnum = "ZoomRoom"
	ListZoomRoomsTypeEnumSchedulingDisplayOnly ListZoomRoomsTypeEnum = "SchedulingDisplayOnly"
	ListZoomRoomsTypeEnumDigitalSignageOnly    ListZoomRoomsTypeEnum = "DigitalSignageOnly"
)

func (e *ListZoomRoomsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ZoomRoom":
		fallthrough
	case "SchedulingDisplayOnly":
		fallthrough
	case "DigitalSignageOnly":
		*e = ListZoomRoomsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListZoomRoomsTypeEnum: %s", s)
	}
}

type ListZoomRoomsQueryParams struct {
	// Parent location ID of the Zoom Room.
	LocationID *string `queryParam:"style=form,explode=true,name=location_id"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// The status of the Zoom Room.
	Status *ListZoomRoomsStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Type of the Zoom Rooms.
	Type *ListZoomRoomsTypeEnum `queryParam:"style=form,explode=true,name=type"`
	// Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet.
	UnassignedRooms *bool `queryParam:"style=form,explode=true,name=unassigned_rooms"`
}

type ListZoomRoomsRequest struct {
	QueryParams ListZoomRoomsQueryParams
	Security    ListZoomRoomsSecurity
}

// ListZoomRooms200ApplicationXMLRoomsStatusEnum - Status of the Zoom Room.
type ListZoomRooms200ApplicationXMLRoomsStatusEnum string

const (
	ListZoomRooms200ApplicationXMLRoomsStatusEnumOffline           ListZoomRooms200ApplicationXMLRoomsStatusEnum = "Offline"
	ListZoomRooms200ApplicationXMLRoomsStatusEnumAvailable         ListZoomRooms200ApplicationXMLRoomsStatusEnum = "Available"
	ListZoomRooms200ApplicationXMLRoomsStatusEnumInMeeting         ListZoomRooms200ApplicationXMLRoomsStatusEnum = "InMeeting"
	ListZoomRooms200ApplicationXMLRoomsStatusEnumUnderConstruction ListZoomRooms200ApplicationXMLRoomsStatusEnum = "UnderConstruction"
)

func (e *ListZoomRooms200ApplicationXMLRoomsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Offline":
		fallthrough
	case "Available":
		fallthrough
	case "InMeeting":
		fallthrough
	case "UnderConstruction":
		*e = ListZoomRooms200ApplicationXMLRoomsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListZoomRooms200ApplicationXMLRoomsStatusEnum: %s", s)
	}
}

type ListZoomRooms200ApplicationXMLRooms struct {
	// Activation Code is the code that is used to complete the setup of the Zoom Room.
	ActivationCode *string
	// Unique Identifier of the Zoom Room.
	ID *string
	// Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room.
	LocationID *string
	// Name of the Zoom Room.
	Name *string
	// Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
	RoomID *string
	// Status of the Zoom Room.
	Status *ListZoomRooms200ApplicationXMLRoomsStatusEnum
}

// ListZoomRooms200ApplicationXML - **HTTP Status Code:** `200`<br>
// A list of Zoom Rooms returned successfully.
type ListZoomRooms200ApplicationXML struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of records returned within a single API call.
	PageSize *int64
	// List of existing Zoom Rooms.
	Rooms []ListZoomRooms200ApplicationXMLRooms
}

// ListZoomRooms200ApplicationJSONRoomsStatusEnum - Status of the Zoom Room.
type ListZoomRooms200ApplicationJSONRoomsStatusEnum string

const (
	ListZoomRooms200ApplicationJSONRoomsStatusEnumOffline           ListZoomRooms200ApplicationJSONRoomsStatusEnum = "Offline"
	ListZoomRooms200ApplicationJSONRoomsStatusEnumAvailable         ListZoomRooms200ApplicationJSONRoomsStatusEnum = "Available"
	ListZoomRooms200ApplicationJSONRoomsStatusEnumInMeeting         ListZoomRooms200ApplicationJSONRoomsStatusEnum = "InMeeting"
	ListZoomRooms200ApplicationJSONRoomsStatusEnumUnderConstruction ListZoomRooms200ApplicationJSONRoomsStatusEnum = "UnderConstruction"
)

func (e *ListZoomRooms200ApplicationJSONRoomsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Offline":
		fallthrough
	case "Available":
		fallthrough
	case "InMeeting":
		fallthrough
	case "UnderConstruction":
		*e = ListZoomRooms200ApplicationJSONRoomsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListZoomRooms200ApplicationJSONRoomsStatusEnum: %s", s)
	}
}

type ListZoomRooms200ApplicationJSONRooms struct {
	// Activation Code is the code that is used to complete the setup of the Zoom Room.
	ActivationCode *string `json:"activation_code,omitempty"`
	// Unique Identifier of the Zoom Room.
	ID *string `json:"id,omitempty"`
	// Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room.
	LocationID *string `json:"location_id,omitempty"`
	// Name of the Zoom Room.
	Name *string `json:"name,omitempty"`
	// Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
	RoomID *string `json:"room_id,omitempty"`
	// Status of the Zoom Room.
	Status *ListZoomRooms200ApplicationJSONRoomsStatusEnum `json:"status,omitempty"`
}

// ListZoomRooms200ApplicationJSON - **HTTP Status Code:** `200`<br>
// A list of Zoom Rooms returned successfully.
type ListZoomRooms200ApplicationJSON struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// List of existing Zoom Rooms.
	Rooms []ListZoomRooms200ApplicationJSONRooms `json:"rooms,omitempty"`
}

type ListZoomRoomsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// A list of Zoom Rooms returned successfully.
	ListZoomRooms200ApplicationJSONObject *ListZoomRooms200ApplicationJSON
}
