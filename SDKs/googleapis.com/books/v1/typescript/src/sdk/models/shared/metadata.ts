/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class MetadataItems extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "download_url" })
  downloadUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "encrypted_key" })
  encryptedKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

/**
 * Successful response
 */
export class Metadata extends SpeakeasyBase {
  /**
   * A list of offline dictionary metadata.
   */
  @SpeakeasyMetadata({ elemType: MetadataItems })
  @Expose({ name: "items" })
  @Type(() => MetadataItems)
  items?: MetadataItems[];

  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
