// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETAccessKeyLastUsedActionEnum
type GETGETAccessKeyLastUsedActionEnum string

const (
	GETGETAccessKeyLastUsedActionEnumGetAccessKeyLastUsed GETGETAccessKeyLastUsedActionEnum = "GetAccessKeyLastUsed"
)

func (e GETGETAccessKeyLastUsedActionEnum) ToPointer() *GETGETAccessKeyLastUsedActionEnum {
	return &e
}

func (e *GETGETAccessKeyLastUsedActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetAccessKeyLastUsed":
		*e = GETGETAccessKeyLastUsedActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAccessKeyLastUsedActionEnum: %v", v)
	}
}

// GETGETAccessKeyLastUsedVersionEnum
type GETGETAccessKeyLastUsedVersionEnum string

const (
	GETGETAccessKeyLastUsedVersionEnumTwoThousandAndTen0508 GETGETAccessKeyLastUsedVersionEnum = "2010-05-08"
)

func (e GETGETAccessKeyLastUsedVersionEnum) ToPointer() *GETGETAccessKeyLastUsedVersionEnum {
	return &e
}

func (e *GETGETAccessKeyLastUsedVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETGETAccessKeyLastUsedVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAccessKeyLastUsedVersionEnum: %v", v)
	}
}

type GETGETAccessKeyLastUsedRequest struct {
	// <p>The identifier of an access key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
	AccessKeyID       string                             `queryParam:"style=form,explode=true,name=AccessKeyId"`
	Action            GETGETAccessKeyLastUsedActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version           GETGETAccessKeyLastUsedVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETAccessKeyLastUsedResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
