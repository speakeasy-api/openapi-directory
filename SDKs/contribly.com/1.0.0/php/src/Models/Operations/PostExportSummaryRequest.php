<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PostExportSummaryRequest
{
    /**
     * Restrict results to contributions submitted to this assignment.
     * 
     * @var ?string $assignment
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=assignment')]
    public ?string $assignment = null;
    
    /**
     * Limit results to contributions which have a publicly visible location within the given country (specified by two letter country code).
     * 
     * @var ?string $country
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=country')]
    public ?string $country = null;
    
    /**
     * Limit results to contributions created after this date time.
     * 
     * @var ?\DateTime $createdAfter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=createdAfter,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $createdAfter = null;
    
    /**
     * Limit results to contributions created before this date time.
     * 
     * @var ?\DateTime $createdBefore
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=createdBefore,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $createdBefore = null;
    
    /**
     * Restrict results to contributions which have specified a location which falls within this geohash (or comma seperated list of multiple geohashes)
     * 
     * @var ?string $geohash
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=geohash')]
    public ?string $geohash = null;
    
    /**
     * Restrict results to contributions which have a publicly visible location.
     * 
     * @var ?bool $hasLocation
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=hasLocation')]
    public ?bool $hasLocation = null;
    
    /**
     * Limit results to contributions with location near this latitude and longitude (comma seperated lat/long pair). Also see radius
     * 
     * @var ?string $latLong
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=latLong')]
    public ?string $latLong = null;
    
    /**
     * Restrict results to contributions which include a media file of the given type (ie. image / video)
     * 
     * @var ?string $mediaType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=mediaType')]
    public ?string $mediaType = null;
    
    /**
     * Restrict results to contributions which are fall under the jurisdiction by this user.
     * 
     * @var ?string $ownedBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ownedBy')]
    public ?string $ownedBy = null;
    
    /**
     * Restrict results to contributions whose headline text matches this keyword.
     * 
     * @var ?string $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?string $q = null;
    
    /**
     * When limiting result by location with the latLong parameter, specify the radius in kilometers.
     * 
     * @var ?float $radius
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=radius')]
    public ?float $radius = null;
    
    /**
     * Locate a specific contribution by URL words
     * 
     * @var ?string $urlWords
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=urlWords')]
    public ?string $urlWords = null;
    
    /**
     * Restrict results to contributions by this user identified by id.
     * 
     * @var ?string $user
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=user')]
    public ?string $user = null;
    
	public function __construct()
	{
		$this->assignment = null;
		$this->country = null;
		$this->createdAfter = null;
		$this->createdBefore = null;
		$this->geohash = null;
		$this->hasLocation = null;
		$this->latLong = null;
		$this->mediaType = null;
		$this->ownedBy = null;
		$this->q = null;
		$this->radius = null;
		$this->urlWords = null;
		$this->user = null;
	}
}
