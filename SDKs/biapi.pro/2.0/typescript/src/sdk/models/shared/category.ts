/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Successful POST on Category resource
 */
export class Category extends SpeakeasyBase {
  /**
   * Color of the category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color: string;

  /**
   * ID of the category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * ID of the logo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_logo" })
  idLogo?: number;

  /**
   * ID of the parent category. If this is a parent category, it will be equal to its own ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_parent_category" })
  idParentCategory: number;

  /**
   * ID of the parent category to be displayed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_parent_category_in_menu" })
  idParentCategoryInMenu: number;

  /**
   * If not null, this category is specific to a user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_user" })
  idUser?: number;

  /**
   * Is an income category. If null, this is both an income and an expense category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "income" })
  income?: boolean;

  /**
   * Name of the category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Displayed name, with HTML tags
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name_displayed" })
  nameDisplayed?: string;

  /**
   * This category accepts opposite sign of transactions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refundable" })
  refundable: boolean;
}
