/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetPotHoldingsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class GetPotHoldingsRequest extends SpeakeasyBase {
  /**
   * Pot Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pot_id",
  })
  potId: string;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetPotHoldings500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetPotHoldings429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The specified resource was not found
 */
export class GetPotHoldings404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetPotHoldings403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetPotHoldings401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class GetPotHoldings400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class GetPotHoldings200ApplicationJSONHoldings extends SpeakeasyBase {
  /**
   * Additional external details of the holding. This may be populated in reconciliation process
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additional_external_details" })
  additionalExternalDetails?: Record<string, any>;

  /**
   * Per-unit book cost for a particular holding (applicable for investment product holdings only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "average_book_cost" })
  averageBookCost?: string;

  /**
   * Total book cost for the total units currently held within the pot (applicable for investment product holdings only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cost_of_holding" })
  costOfHolding?: string;

  /**
   * Currency of the pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * Free quantity of the investment product holding. Will be empty for the cash holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free_quantity" })
  freeQuantity?: string;

  /**
   * Free value of the holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free_value" })
  freeValue: string;

  /**
   * Investment product id of the holding. Will be 'cash' for cash holdings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Investment product name of the holding. Will be empty for cash holdings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_name" })
  investmentProductName?: string;

  /**
   * Locked quantity of the investment product holding. Will be empty for the cash holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locked_quantity" })
  lockedQuantity?: string;

  /**
   * Locked value of the holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locked_value" })
  lockedValue: string;

  /**
   * Last price available for the investment product. Will be empty for the cash holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;

  /**
   * Last price updated date for the investment product. Will be empty for the cash holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_date" })
  priceDate?: string;

  /**
   * Settled cash amount within the pot (applicable for cash holdings only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settled_cash_position" })
  settledCashPosition?: string;

  /**
   * Total quantity of the investment product holding. Will be empty for the cash holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_quantity" })
  totalQuantity?: string;

  /**
   * Total value of the holding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_value" })
  totalValue: string;
}

/**
 * success
 */
export class GetPotHoldings200ApplicationJSON extends SpeakeasyBase {
  /**
   * Array of holdings belonging to a respective pot
   */
  @SpeakeasyMetadata({ elemType: GetPotHoldings200ApplicationJSONHoldings })
  @Expose({ name: "holdings" })
  @Type(() => GetPotHoldings200ApplicationJSONHoldings)
  holdings: GetPotHoldings200ApplicationJSONHoldings[];

  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;
}

export class GetPotHoldingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  getPotHoldings200ApplicationJSONObject?: GetPotHoldings200ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  getPotHoldings400ApplicationJSONObject?: GetPotHoldings400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getPotHoldings401ApplicationJSONObject?: GetPotHoldings401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getPotHoldings403ApplicationJSONObject?: GetPotHoldings403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getPotHoldings404ApplicationJSONObject?: GetPotHoldings404ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getPotHoldings429ApplicationJSONObject?: GetPotHoldings429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getPotHoldings500ApplicationJSONObject?: GetPotHoldings500ApplicationJSON;
}
