"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasetreference as shared_datasetreference
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DatasetAccessEntryTargetTypesEnum(str, Enum):
    TARGET_TYPE_UNSPECIFIED = 'TARGET_TYPE_UNSPECIFIED'
    VIEWS = 'VIEWS'
    ROUTINES = 'ROUTINES'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatasetAccessEntry:
    
    dataset: Optional[shared_datasetreference.DatasetReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataset'), 'exclude': lambda f: f is None }})  
    target_types: Optional[list[DatasetAccessEntryTargetTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetTypes'), 'exclude': lambda f: f is None }})  
    