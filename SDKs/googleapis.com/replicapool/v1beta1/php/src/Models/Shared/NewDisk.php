<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NewDisk - A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NewDisk
{
    /**
     * Specifies how to attach a disk to a Replica.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiskAttachment $attachment
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DiskAttachment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiskAttachment $attachment = null;
    
    /**
     * If true, then this disk will be deleted when the instance is deleted. The default value is true.
     * 
     * @var ?bool $autoDelete
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoDelete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoDelete = null;
    
    /**
     * If true, indicates that this is the root persistent disk.
     * 
     * @var ?bool $boot
     */
	#[\JMS\Serializer\Annotation\SerializedName('boot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boot = null;
    
    /**
     * Initialization parameters for creating a new disk.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NewDiskInitializeParams $initializeParams
     */
	#[\JMS\Serializer\Annotation\SerializedName('initializeParams')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NewDiskInitializeParams')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewDiskInitializeParams $initializeParams = null;
    
	public function __construct()
	{
		$this->attachment = null;
		$this->autoDelete = null;
		$this->boot = null;
		$this->initializeParams = null;
	}
}
