// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUserVodsAlt1DirectionEnum - The sort direction of the results.
type GetUserVodsAlt1DirectionEnum string

const (
	GetUserVodsAlt1DirectionEnumAsc  GetUserVodsAlt1DirectionEnum = "asc"
	GetUserVodsAlt1DirectionEnumDesc GetUserVodsAlt1DirectionEnum = "desc"
)

func (e *GetUserVodsAlt1DirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetUserVodsAlt1DirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserVodsAlt1DirectionEnum: %s", s)
	}
}

// GetUserVodsAlt1FilterEnum - The type of On Demand pages to return.
type GetUserVodsAlt1FilterEnum string

const (
	GetUserVodsAlt1FilterEnumFilm   GetUserVodsAlt1FilterEnum = "film"
	GetUserVodsAlt1FilterEnumSeries GetUserVodsAlt1FilterEnum = "series"
)

func (e *GetUserVodsAlt1FilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "film":
		fallthrough
	case "series":
		*e = GetUserVodsAlt1FilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserVodsAlt1FilterEnum: %s", s)
	}
}

// GetUserVodsAlt1SortEnum - The way to sort the results.
type GetUserVodsAlt1SortEnum string

const (
	GetUserVodsAlt1SortEnumAdded        GetUserVodsAlt1SortEnum = "added"
	GetUserVodsAlt1SortEnumAlphabetical GetUserVodsAlt1SortEnum = "alphabetical"
	GetUserVodsAlt1SortEnumDate         GetUserVodsAlt1SortEnum = "date"
	GetUserVodsAlt1SortEnumModifiedTime GetUserVodsAlt1SortEnum = "modified_time"
	GetUserVodsAlt1SortEnumName         GetUserVodsAlt1SortEnum = "name"
	GetUserVodsAlt1SortEnumPublishTime  GetUserVodsAlt1SortEnum = "publish.time"
	GetUserVodsAlt1SortEnumRating       GetUserVodsAlt1SortEnum = "rating"
)

func (e *GetUserVodsAlt1SortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "added":
		fallthrough
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "modified_time":
		fallthrough
	case "name":
		fallthrough
	case "publish.time":
		fallthrough
	case "rating":
		*e = GetUserVodsAlt1SortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserVodsAlt1SortEnum: %s", s)
	}
}

type GetUserVodsAlt1QueryParams struct {
	// The sort direction of the results.
	Direction *GetUserVodsAlt1DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The type of On Demand pages to return.
	Filter *GetUserVodsAlt1FilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The way to sort the results.
	Sort *GetUserVodsAlt1SortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetUserVodsAlt1Request struct {
	QueryParams GetUserVodsAlt1QueryParams
}

type GetUserVodsAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// No such user exists.
	LegacyError *shared.LegacyError
	// The On Demand pages were returned.
	OnDemandPages []shared.OnDemandPage
}
