/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DeletedNode - Deleted node information (Deleted node can be a folder or file)
 */
public class DeletedNode {
    /**
     * Last access date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("accessedAt")
    public OffsetDateTime accessedAt;
    public DeletedNode withAccessedAt(OffsetDateTime accessedAt) {
        this.accessedAt = accessedAt;
        return this;
    }
    
    /**
     * Classification ID:
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * (default: classification from parent room)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public DeletedNodeClassificationEnum classification;
    public DeletedNode withClassification(DeletedNodeClassificationEnum classification) {
        this.classification = classification;
        return this;
    }
    
    /**
     * Creation date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public DeletedNode withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public UserInfo createdBy;
    public DeletedNode withCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Deletion date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("deletedAt")
    public OffsetDateTime deletedAt;
    public DeletedNode withDeletedAt(OffsetDateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deletedBy")
    public UserInfo deletedBy;
    public DeletedNode withDeletedBy(UserInfo deletedBy) {
        this.deletedBy = deletedBy;
        return this;
    }
    
    /**
     * Expiration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expireAt")
    public OffsetDateTime expireAt;
    public DeletedNode withExpireAt(OffsetDateTime expireAt) {
        this.expireAt = expireAt;
        return this;
    }
    
    /**
     * Node ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public DeletedNode withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Encryption state
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEncrypted")
    public Boolean isEncrypted;
    public DeletedNode withIsEncrypted(Boolean isEncrypted) {
        this.isEncrypted = isEncrypted;
        return this;
    }
    
    /**
     * Node name
     */
    @JsonProperty("name")
    public String name;
    public DeletedNode withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public DeletedNode withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Parent node ID (room or folder)
     */
    @JsonProperty("parentId")
    public Long parentId;
    public DeletedNode withParentId(Long parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * Parent node path
     * 
     * `/` if node is a root node (room)
     */
    @JsonProperty("parentPath")
    public String parentPath;
    public DeletedNode withParentPath(String parentPath) {
        this.parentPath = parentPath;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.37.0
     * 
     * Reference ID. Identical across all versions of a file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referenceId")
    public Long referenceId;
    public DeletedNode withReferenceId(Long referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     * Node size in byte
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;
    public DeletedNode withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * Node type
     */
    @JsonProperty("type")
    public DeletedNodeTypeEnum type;
    public DeletedNode withType(DeletedNodeTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Modification date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public DeletedNode withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public UserInfo updatedBy;
    public DeletedNode withUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
