"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContainersGroupsNameOrIDPatchUpdatedInfoNumberInstances:
    
    desired: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Desired'), 'exclude': lambda f: f is None }})
    r"""The number of container instances that you require."""  
    max: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Max'), 'exclude': lambda f: f is None }})
    r"""The maximum number of container instances that you want to run in your container group."""  
    min: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Min'), 'exclude': lambda f: f is None }})
    r"""The minimum number of container instances that you want to run in your container group."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContainersGroupsNameOrIDPatchUpdatedInfo:
    r"""The container group parameter that you want to update."""
    
    autorecovery: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Autorecovery'), 'exclude': lambda f: f is None }})
    r"""Enable or disable the Autorecovery mode for your container group. To enable it, enter true. If you want to disable it, enter false. Note: You can only enable/ disable Autorecovery mode if your container group was initially created with Autorecovery mode enabled."""  
    environment: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Environment'), 'exclude': lambda f: f is None }})
    r"""A list of environment variables that you want to add to your container group. Every environment variable needs to be a key=value pair. Every key that you use needs to be unique for this container group. Multiple environment variables are separated with comma (,)"""  
    number_instances: Optional[ContainersGroupsNameOrIDPatchUpdatedInfoNumberInstances] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberInstances'), 'exclude': lambda f: f is None }})  
    