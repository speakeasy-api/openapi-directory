/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EphemerisInvalidReasonEnum } from "./ephemerisinvalidreasonenum";
import { EphemerisStatusEnum } from "./ephemerisstatusenum";
import { EphemerisTypeDescription } from "./ephemeristypedescription";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeEphemerisResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ephemerisId" })
  ephemerisId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "invalidReason" })
  invalidReason?: EphemerisInvalidReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "satelliteId" })
  satelliteId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: EphemerisStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "suppliedData" })
  @Type(() => EphemerisTypeDescription)
  suppliedData?: EphemerisTypeDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
