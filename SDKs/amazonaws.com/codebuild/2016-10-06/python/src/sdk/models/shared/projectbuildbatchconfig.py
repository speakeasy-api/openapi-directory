"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import batchreportmodetype_enum as shared_batchreportmodetype_enum
from ..shared import batchrestrictions as shared_batchrestrictions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProjectBuildBatchConfig:
    r"""Contains configuration information about a batch build project."""
    
    batch_report_mode: Optional[shared_batchreportmodetype_enum.BatchReportModeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchReportMode'), 'exclude': lambda f: f is None }})  
    combine_artifacts: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('combineArtifacts'), 'exclude': lambda f: f is None }})  
    restrictions: Optional[shared_batchrestrictions.BatchRestrictions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restrictions'), 'exclude': lambda f: f is None }})  
    service_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceRole'), 'exclude': lambda f: f is None }})  
    timeout_in_mins: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutInMins'), 'exclude': lambda f: f is None }})  
    