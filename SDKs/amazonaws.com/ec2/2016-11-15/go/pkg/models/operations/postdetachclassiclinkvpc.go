// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDetachClassicLinkVpcActionEnum
type POSTDetachClassicLinkVpcActionEnum string

const (
	POSTDetachClassicLinkVpcActionEnumDetachClassicLinkVpc POSTDetachClassicLinkVpcActionEnum = "DetachClassicLinkVpc"
)

func (e POSTDetachClassicLinkVpcActionEnum) ToPointer() *POSTDetachClassicLinkVpcActionEnum {
	return &e
}

func (e *POSTDetachClassicLinkVpcActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DetachClassicLinkVpc":
		*e = POSTDetachClassicLinkVpcActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDetachClassicLinkVpcActionEnum: %v", v)
	}
}

// POSTDetachClassicLinkVpcVersionEnum
type POSTDetachClassicLinkVpcVersionEnum string

const (
	POSTDetachClassicLinkVpcVersionEnumTwoThousandAndSixteen1115 POSTDetachClassicLinkVpcVersionEnum = "2016-11-15"
)

func (e POSTDetachClassicLinkVpcVersionEnum) ToPointer() *POSTDetachClassicLinkVpcVersionEnum {
	return &e
}

func (e *POSTDetachClassicLinkVpcVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDetachClassicLinkVpcVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDetachClassicLinkVpcVersionEnum: %v", v)
	}
}

type POSTDetachClassicLinkVpcRequest struct {
	Action            POSTDetachClassicLinkVpcActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                              `request:"mediaType=text/xml"`
	Version           POSTDetachClassicLinkVpcVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDetachClassicLinkVpcResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
