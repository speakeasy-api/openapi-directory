// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PeriodicPaymentRequestExecutionRuleEnum - Behavior when periodic payment dates fall on holiday.
type PeriodicPaymentRequestExecutionRuleEnum string

const (
	PeriodicPaymentRequestExecutionRuleEnumFollowing PeriodicPaymentRequestExecutionRuleEnum = "following"
	PeriodicPaymentRequestExecutionRuleEnumPreceding PeriodicPaymentRequestExecutionRuleEnum = "preceding"
)

func (e *PeriodicPaymentRequestExecutionRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "following":
		fallthrough
	case "preceding":
		*e = PeriodicPaymentRequestExecutionRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PeriodicPaymentRequestExecutionRuleEnum: %s", s)
	}
}

type PeriodicPaymentRequestFrequencyEnum string

const (
	PeriodicPaymentRequestFrequencyEnumDaily           PeriodicPaymentRequestFrequencyEnum = "Daily"
	PeriodicPaymentRequestFrequencyEnumWeekly          PeriodicPaymentRequestFrequencyEnum = "Weekly"
	PeriodicPaymentRequestFrequencyEnumEveryTwoWeeks   PeriodicPaymentRequestFrequencyEnum = "EveryTwoWeeks"
	PeriodicPaymentRequestFrequencyEnumMonthly         PeriodicPaymentRequestFrequencyEnum = "Monthly"
	PeriodicPaymentRequestFrequencyEnumEveryTwoMonths  PeriodicPaymentRequestFrequencyEnum = "EveryTwoMonths"
	PeriodicPaymentRequestFrequencyEnumQuarterly       PeriodicPaymentRequestFrequencyEnum = "Quarterly"
	PeriodicPaymentRequestFrequencyEnumSemiAnnual      PeriodicPaymentRequestFrequencyEnum = "SemiAnnual"
	PeriodicPaymentRequestFrequencyEnumAnnual          PeriodicPaymentRequestFrequencyEnum = "Annual"
	PeriodicPaymentRequestFrequencyEnumMonthlyVariable PeriodicPaymentRequestFrequencyEnum = "MonthlyVariable"
)

func (e *PeriodicPaymentRequestFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Daily":
		fallthrough
	case "Weekly":
		fallthrough
	case "EveryTwoWeeks":
		fallthrough
	case "Monthly":
		fallthrough
	case "EveryTwoMonths":
		fallthrough
	case "Quarterly":
		fallthrough
	case "SemiAnnual":
		fallthrough
	case "Annual":
		fallthrough
	case "MonthlyVariable":
		*e = PeriodicPaymentRequestFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PeriodicPaymentRequestFrequencyEnum: %s", s)
	}
}

// PeriodicPaymentRequest - Periodic Payment Serializer.
type PeriodicPaymentRequest struct {
	DayOfExecution *string     `json:"day_of_execution,omitempty"`
	EndDate        *types.Date `json:"end_date,omitempty"`
	// Behavior when periodic payment dates fall on holiday.
	ExecutionRule *PeriodicPaymentRequestExecutionRuleEnum `json:"execution_rule,omitempty"`
	Frequency     *PeriodicPaymentRequestFrequencyEnum     `json:"frequency,omitempty"`
	StartDate     types.Date                               `json:"start_date"`
}
