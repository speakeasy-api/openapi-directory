// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateCallRequestHangupActionEnum - End the call for the specified UUID
type UpdateCallRequestHangupActionEnum string

const (
	UpdateCallRequestHangupActionEnumHangup UpdateCallRequestHangupActionEnum = "hangup"
)

func (e UpdateCallRequestHangupActionEnum) ToPointer() *UpdateCallRequestHangupActionEnum {
	return &e
}

func (e *UpdateCallRequestHangupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hangup":
		*e = UpdateCallRequestHangupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCallRequestHangupActionEnum: %v", v)
	}
}

type UpdateCallRequestHangup struct {
	// End the call for the specified UUID
	Action *UpdateCallRequestHangupActionEnum `json:"action,omitempty"`
}
