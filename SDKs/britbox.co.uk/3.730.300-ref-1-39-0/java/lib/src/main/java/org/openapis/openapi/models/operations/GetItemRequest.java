/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetItemRequest {
    /**
     * The type of device the content is targeting.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=device")
    public String device;

    public GetItemRequest withDevice(String device) {
        this.device = device;
        return this;
    }
    
    /**
     * If no value is specified no dependencies are expanded.
     * 
     * If 'children' is specified then the list of any direct children will be expanded. For example
     * seasons of a show or episodes of a season.
     * 
     * If 'all' is specified then the parent chain will be expanded along with any child list at each level.
     * For example if an episode is specified then its season will be expanded and that season's episode list.
     * The season will have its show expanded and the show will have its season list expanded.
     * 
     * The 'all' options is useful when you deep link into a show/season/episode for the first time as
     * it provides full context for navigating around the show page. Subsequent navigation around
     * children of the show should only need to request expand of children.
     * 
     * If 'ancestors' is specified then only the parent chain is included.
     * 
     * If 'parent' is specified then only the direct parent is included.
     * 
     * If an expand is specified which is not relevant to the item type, it will be ignored.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=expand")
    public GetItemExpandEnum expand;

    public GetItemRequest withExpand(GetItemExpandEnum expand) {
        this.expand = expand;
        return this;
    }
    
    /**
     * The set of opt in feature flags which cause breaking changes to responses.
     * 
     * While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
     * may need to evolve over this time.
     * 
     * These feature flags allow clients to select which response formats they expect and avoid breaking
     * clients as these formats evolve under the current major version.
     * 
     * ### Flags
     * 
     * - `all` - Enable all flags. Useful for testing. _Don't use in production_.
     * - `idp` - Dynamic item detail pages with schedulable rows.
     * - `ldp` - Dynamic list detail pages with schedulable rows.
     * - `hb` - Hubble formatted image urls.
     * - `rpt` - Updated resume point threshold logic.
     * - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
     * - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
     * - `cd` - Custom Destination support.
     * 
     * See the `feature-flags.md` for available flag details.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=ff")
    public org.openapis.openapi.models.shared.FeatureFlagsEnum[] ff;

    public GetItemRequest withFf(org.openapis.openapi.models.shared.FeatureFlagsEnum[] ff) {
        this.ff = ff;
        return this;
    }
    
    /**
     * The identifier of the item to load.
     * 
     * The custom identifier of an item can be used here if the `use_custom_id` parameter is true.
     * 
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public String id;

    public GetItemRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Language code for the preferred language to be returned in the response.
     * 
     * Parameter value is case-insensitive and should be
     *   - a valid 2 letter language code without region such as en, de
     *   - or with region such as en_us, en_au
     * 
     * If undefined then defaults to 'en', unless the server has been configured
     * with a custom default.
     * 
     * See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lang")
    public String lang;

    public GetItemRequest withLang(String lang) {
        this.lang = lang;
        return this;
    }
    
    /**
     * The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=max_rating")
    public String maxRating;

    public GetItemRequest withMaxRating(String maxRating) {
        this.maxRating = maxRating;
        return this;
    }
    
    /**
     * The list of segments to filter the response by.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=segments")
    public String[] segments;

    public GetItemRequest withSegments(String[] segments) {
        this.segments = segments;
        return this;
    }
    
    /**
     * Given a provided show id, it can be useful to get the details of a child season. This option
     * provides a means to return the `first` or `latest` season of a show given the show id.
     * 
     * The `expand` parameter also works here so for example you could land on a show page and request the
     * latest season along with `expand=all`. This would then return the detail of the latest season with
     * its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.
     * 
     * Note the `id` parameter must be a show id for this parameter to work correctly.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=select_season")
    public GetItemSelectSeasonEnum selectSeason;

    public GetItemRequest withSelectSeason(GetItemSelectSeasonEnum selectSeason) {
        this.selectSeason = selectSeason;
        return this;
    }
    
    /**
     * The active subscription code.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sub")
    public String sub;

    public GetItemRequest withSub(String sub) {
        this.sub = sub;
        return this;
    }
    
    /**
     * Set to true when passing a custom Id as the `id` path parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=use_custom_id")
    public Boolean useCustomId;

    public GetItemRequest withUseCustomId(Boolean useCustomId) {
        this.useCustomId = useCustomId;
        return this;
    }
    
    public GetItemRequest(@JsonProperty("id") String id) {
        this.id = id;
  }
}
