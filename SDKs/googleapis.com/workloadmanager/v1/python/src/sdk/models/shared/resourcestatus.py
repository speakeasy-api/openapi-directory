"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ResourceStatusStateEnum(str, Enum):
    r"""State of the resource"""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceStatus:
    r"""Message describing resource status"""
    
    rules_newer_versions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rulesNewerVersions'), 'exclude': lambda f: f is None }})
    r"""the new version of rule id if exists"""  
    state: Optional[ResourceStatusStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State of the resource"""  
    