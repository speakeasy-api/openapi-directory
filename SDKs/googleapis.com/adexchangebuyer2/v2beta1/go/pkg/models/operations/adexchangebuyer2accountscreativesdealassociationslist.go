// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type Adexchangebuyer2AccountsCreativesDealAssociationsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type Adexchangebuyer2AccountsCreativesDealAssociationsListPathParams struct {
	// The account to list the associations from. Specify "-" to list all creatives the current user has access to.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The creative ID to list the associations from. Specify "-" to list all creatives under the above account.
	CreativeID string `pathParam:"style=simple,explode=false,name=creativeId"`
}

type Adexchangebuyer2AccountsCreativesDealAssociationsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Requested page size. Server may return fewer associations than requested. If unspecified, server will pick an appropriate default.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// A token identifying a page of results the server should return. Typically, this is the value of ListDealAssociationsResponse.next_page_token returned from the previous call to 'ListDealAssociations' method.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An optional query string to filter deal associations. If no filter is specified, all associations will be returned. Supported queries are: - accountId=*account_id_string* - creativeId=*creative_id_string* - dealsId=*deals_id_string* - dealsStatus:{approved, conditionally_approved, disapproved, not_checked} - openAuctionStatus:{approved, conditionally_approved, disapproved, not_checked} Example: 'dealsId=12345 AND dealsStatus:disapproved'
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type Adexchangebuyer2AccountsCreativesDealAssociationsListRequest struct {
	PathParams  Adexchangebuyer2AccountsCreativesDealAssociationsListPathParams
	QueryParams Adexchangebuyer2AccountsCreativesDealAssociationsListQueryParams
	Security    Adexchangebuyer2AccountsCreativesDealAssociationsListSecurity
}

type Adexchangebuyer2AccountsCreativesDealAssociationsListResponse struct {
	ContentType string
	// Successful response
	ListDealAssociationsResponse *shared.ListDealAssociationsResponse
	StatusCode                   int
	RawResponse                  *http.Response
}
