/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of error.
 */
export enum RepositoryErrorTypeEnum {
  Unknown = "UNKNOWN",
  NetworkError = "NETWORK_ERROR",
  DnsError = "DNS_ERROR",
  ConnectionError = "CONNECTION_ERROR",
  AuthenticationError = "AUTHENTICATION_ERROR",
  AuthorizationError = "AUTHORIZATION_ERROR",
  ServerError = "SERVER_ERROR",
  QuotaExceeded = "QUOTA_EXCEEDED",
  ServiceUnavailable = "SERVICE_UNAVAILABLE",
  ClientError = "CLIENT_ERROR",
}

/**
 * Errors when the connector is communicating to the source repository.
 */
export class RepositoryError extends SpeakeasyBase {
  /**
   * Message that describes the error. The maximum allowable length of the message is 8192 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * Error codes. Matches the definition of HTTP status codes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpStatusCode" })
  httpStatusCode?: number;

  /**
   * The type of error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: RepositoryErrorTypeEnum;
}
