// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateSubscriberRequestBody struct {
	// The Amazon S3 or Lake Formation access type.
	AccessTypes []shared.AccessTypeEnum `json:"accessTypes,omitempty"`
	// The Amazon Web Services account ID used to access your data.
	AccountID string `json:"accountId"`
	// The external ID of the subscriber. This lets the user that is assuming the role assert the circumstances in which they are operating. It also provides a way for the account owner to permit the role to be assumed only under specific circumstances.
	ExternalID string `json:"externalId"`
	// The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.
	SourceTypes []shared.SourceType `json:"sourceTypes"`
	// The description for your subscriber account in Security Lake.
	SubscriberDescription *string `json:"subscriberDescription,omitempty"`
	// The name of your Security Lake subscriber account.
	SubscriberName string `json:"subscriberName"`
}

type CreateSubscriberRequest struct {
	RequestBody       CreateSubscriberRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateSubscriberResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountNotFoundException
	AccountNotFoundException interface{}
	// BucketNotFoundException
	BucketNotFoundException interface{}
	// ConflictSubscriptionException
	ConflictSubscriptionException interface{}
	ContentType                   string
	// Success
	CreateSubscriberResponse *shared.CreateSubscriberResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
