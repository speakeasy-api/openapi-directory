/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StatsItem {
    /**
     * count
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;
    public StatsItem withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Maximum value of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max")
    public Long max;
    public StatsItem withMax(Long max) {
        this.max = max;
        return this;
    }
    
    /**
     * Mean of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mean")
    public Double mean;
    public StatsItem withMean(Double mean) {
        this.mean = mean;
        return this;
    }
    
    /**
     * median of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("median")
    public Double median;
    public StatsItem withMedian(Double median) {
        this.median = median;
        return this;
    }
    
    /**
     * Minimum value of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("min")
    public Long min;
    public StatsItem withMin(Long min) {
        this.min = min;
        return this;
    }
    
    /**
     * count of listings missing particular field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("missing")
    public Long missing;
    public StatsItem withMissing(Long missing) {
        this.missing = missing;
        return this;
    }
    
    /**
     * stddev of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stddev")
    public Double stddev;
    public StatsItem withStddev(Double stddev) {
        this.stddev = stddev;
        return this;
    }
    
    /**
     * Summation of all values of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sum")
    public Long sum;
    public StatsItem withSum(Long sum) {
        this.sum = sum;
        return this;
    }
    
    /**
     * sum_of_squares of the field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sum_of_squares")
    public Double sumOfSquares;
    public StatsItem withSumOfSquares(Double sumOfSquares) {
        this.sumOfSquares = sumOfSquares;
        return this;
    }
    
}
