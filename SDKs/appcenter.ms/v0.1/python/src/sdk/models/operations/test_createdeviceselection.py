"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class TestCreateDeviceSelectionSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestCreateDeviceSelectionDeviceList:
    r"""A list of device IDs"""
    
    devices: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices') }})  
    

@dataclasses.dataclass
class TestCreateDeviceSelectionRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    request_body: TestCreateDeviceSelectionDeviceList = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestCreateDeviceSelectionTestCloudErrorDetails:
    r"""Details of a failed operation"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Human-readable message that describes the error"""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status of the operation"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestCreateDeviceSelectionDeviceSelection:
    r"""Short ID for a list of device IDs"""
    
    short_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shortId') }})
    r"""Identifier of the device selection"""  
    

@dataclasses.dataclass
class TestCreateDeviceSelectionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    device_selection: Optional[TestCreateDeviceSelectionDeviceSelection] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    test_cloud_error_details: Optional[TestCreateDeviceSelectionTestCloudErrorDetails] = dataclasses.field(default=None)
    r"""Invalid list of device IDs"""  
    