// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum - Indicates whether to automatically cross-account subnet associations that are associated with the transit gateway multicast domain.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum string

const (
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnumEnable  DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum = "enable"
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnumDisable DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum = "disable"
)

func (e *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum: %s", s)
	}
}

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum - Indicates whether Internet Group Management Protocol (IGMP) version 2 is turned on for the transit gateway multicast domain.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum string

const (
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnumEnable  DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum = "enable"
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnumDisable DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum = "disable"
)

func (e *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum: %s", s)
	}
}

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum - Indicates whether support for statically configuring transit gateway multicast group sources is turned on.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum string

const (
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnumEnable  DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum = "enable"
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnumDisable DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum = "disable"
)

func (e *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum: %s", s)
	}
}

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptions - The options for the transit gateway multicast domain.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptions struct {
	AutoAcceptSharedAssociations *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsAutoAcceptSharedAssociationsEnum
	Igmpv2Support                *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsIgmpv2SupportEnum
	StaticSourcesSupport         *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptionsStaticSourcesSupportEnum
}

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum - The state of the transit gateway multicast domain.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum string

const (
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnumPending   DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum = "pending"
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnumAvailable DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum = "available"
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnumDeleting  DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum = "deleting"
	DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnumDeleted   DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum = "deleted"
)

func (e *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum: %s", s)
	}
}

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsTags - Describes a tag.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsTags struct {
	Key   *string
	Value *string
}

// DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomains - Describes the transit gateway multicast domain.
type DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomains struct {
	CreationTime                     *time.Time
	Options                          *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsOptions
	OwnerID                          *string
	State                            *DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsStateEnum
	Tags                             []DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomainsTags
	TransitGatewayID                 *string
	TransitGatewayMulticastDomainArn *string
	TransitGatewayMulticastDomainID  *string
}

// DescribeTransitGatewayMulticastDomainsResult - Success
type DescribeTransitGatewayMulticastDomainsResult struct {
	NextToken                      *string
	TransitGatewayMulticastDomains []DescribeTransitGatewayMulticastDomainsResultTransitGatewayMulticastDomains
}
