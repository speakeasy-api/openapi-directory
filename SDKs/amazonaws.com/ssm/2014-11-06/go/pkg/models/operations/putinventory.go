// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutInventoryXAmzTargetEnum
type PutInventoryXAmzTargetEnum string

const (
	PutInventoryXAmzTargetEnumAmazonSsmPutInventory PutInventoryXAmzTargetEnum = "AmazonSSM.PutInventory"
)

func (e PutInventoryXAmzTargetEnum) ToPointer() *PutInventoryXAmzTargetEnum {
	return &e
}

func (e *PutInventoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.PutInventory":
		*e = PutInventoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInventoryXAmzTargetEnum: %v", v)
	}
}

type PutInventoryRequest struct {
	PutInventoryRequest shared.PutInventoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          PutInventoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutInventoryResponse struct {
	ContentType string
	// CustomSchemaCountLimitExceededException
	CustomSchemaCountLimitExceededException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidInstanceId
	InvalidInstanceID interface{}
	// InvalidInventoryItemContextException
	InvalidInventoryItemContextException interface{}
	// InvalidItemContentException
	InvalidItemContentException interface{}
	// InvalidTypeNameException
	InvalidTypeNameException interface{}
	// ItemContentMismatchException
	ItemContentMismatchException interface{}
	// ItemSizeLimitExceededException
	ItemSizeLimitExceededException interface{}
	// Success
	PutInventoryResult *shared.PutInventoryResult
	StatusCode         int
	RawResponse        *http.Response
	// SubTypeCountLimitExceededException
	SubTypeCountLimitExceededException interface{}
	// TotalSizeLimitExceededException
	TotalSizeLimitExceededException interface{}
	// UnsupportedInventoryItemContextException
	UnsupportedInventoryItemContextException interface{}
	// UnsupportedInventorySchemaVersionException
	UnsupportedInventorySchemaVersionException interface{}
}
