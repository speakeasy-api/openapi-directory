"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import product as shared_product
from ..shared import productstatusdataqualityissue as shared_productstatusdataqualityissue
from ..shared import productstatusdestinationstatus as shared_productstatusdestinationstatus
from ..shared import productstatusitemlevelissue as shared_productstatusitemlevelissue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductStatus:
    r"""The status of a product, i.e., information about a product computed asynchronously."""
    
    creation_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate'), 'exclude': lambda f: f is None }})
    r"""Date on which the item has been created, in ISO 8601 format."""  
    data_quality_issues: Optional[list[shared_productstatusdataqualityissue.ProductStatusDataQualityIssue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataQualityIssues'), 'exclude': lambda f: f is None }})
    r"""DEPRECATED - never populated"""  
    destination_statuses: Optional[list[shared_productstatusdestinationstatus.ProductStatusDestinationStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationStatuses'), 'exclude': lambda f: f is None }})
    r"""The intended destinations for the product."""  
    google_expiration_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('googleExpirationDate'), 'exclude': lambda f: f is None }})
    r"""Date on which the item expires in Google Shopping, in ISO 8601 format."""  
    item_level_issues: Optional[list[shared_productstatusitemlevelissue.ProductStatusItemLevelIssue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemLevelIssues'), 'exclude': lambda f: f is None }})
    r"""A list of all issues associated with the product."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"`content#productStatus`\\" """  
    last_update_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdateDate'), 'exclude': lambda f: f is None }})
    r"""Date on which the item has been last updated, in ISO 8601 format."""  
    link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link'), 'exclude': lambda f: f is None }})
    r"""The link to the product."""  
    product: Optional[shared_product.Product] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product'), 'exclude': lambda f: f is None }})
    r"""Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect."""  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The ID of the product for which status is reported."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title of the product."""  
    