<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudBillingBudgetsV1Budget - A budget is a plan that describes what you expect to spend on Cloud projects, plus the rules to execute as spend is tracked against that plan, (for example, send an alert when 90% of the target spend is met). The budget time period is configurable, with options such as month (default), quarter, year, or custom time period.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudBillingBudgetsV1Budget
{
    /**
     * The budgeted amount for each usage period.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1BudgetAmount $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1BudgetAmount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudBillingBudgetsV1BudgetAmount $amount = null;
    
    /**
     * A filter for a budget, limiting the scope of the cost to calculate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1Filter $budgetFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('budgetFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1Filter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudBillingBudgetsV1Filter $budgetFilter = null;
    
    /**
     * User data for display name in UI. The name must be less than or equal to 60 characters.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Optional. Etag to validate that the object is unchanged for a read-modify-write operation. An empty etag causes an update to overwrite other changes.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Output only. Resource name of the budget. The resource name implies the scope of a budget. Values are of the form `billingAccounts/{billingAccountId}/budgets/{budgetId}`.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * NotificationsRule defines notifications that are sent based on budget spend and thresholds.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1NotificationsRule $notificationsRule
     */
	#[\JMS\Serializer\Annotation\SerializedName('notificationsRule')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1NotificationsRule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudBillingBudgetsV1NotificationsRule $notificationsRule = null;
    
    /**
     * Optional. Rules that trigger alerts (notifications of thresholds being crossed) when spend exceeds the specified percentages of the budget. Optional for `pubsubTopic` notifications. Required if using email notifications.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1ThresholdRule> $thresholdRules
     */
	#[\JMS\Serializer\Annotation\SerializedName('thresholdRules')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudBillingBudgetsV1ThresholdRule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $thresholdRules = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->budgetFilter = null;
		$this->displayName = null;
		$this->etag = null;
		$this->name = null;
		$this->notificationsRule = null;
		$this->thresholdRules = null;
	}
}
