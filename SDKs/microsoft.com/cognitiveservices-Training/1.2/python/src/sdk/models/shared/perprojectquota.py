"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import quota as shared_quota
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PerProjectQuota:
    r"""Represents a set of quotas for a given project"""
    
    images: Optional[shared_quota.Quota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Images'), 'exclude': lambda f: f is None }})
    r"""Represents a quota"""  
    iterations: Optional[shared_quota.Quota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Iterations'), 'exclude': lambda f: f is None }})
    r"""Represents a quota"""  
    project_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectId'), 'exclude': lambda f: f is None }})
    r"""Gets the project id of the project this quota applies to"""  
    tags: Optional[shared_quota.Quota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})
    r"""Represents a quota"""  
    