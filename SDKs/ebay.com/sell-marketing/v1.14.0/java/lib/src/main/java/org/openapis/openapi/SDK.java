/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * &lt;p&gt;The &lt;i&gt;Marketing API &lt;/i&gt; offers two platforms that sellers can use to promote and advertise their products:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;b&gt;Promoted Listings&lt;/b&gt; is an eBay ad service that lets sellers set up &lt;i&gt;ad campaigns &lt;/i&gt; for the products they want to promote. eBay displays the ads in search results and in other marketing modules as &lt;b&gt;SPONSORED&lt;/b&gt; listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the &lt;a href="/api-docs/sell/static/marketing/pl-landing.html"&gt;Promoted Listings playbook&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Promotions Manager&lt;/b&gt; gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as "20% off" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion &lt;i&gt;teasers&lt;/i&gt; throughout buyer flows. For complete details, see &lt;a href="/api-docs/sell/static/marketing/promotions-manager.html"&gt;Promotions Manager&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;  &lt;p&gt;&lt;b&gt;Marketing reports&lt;/b&gt;, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.&lt;/p&gt; &lt;p class="tablenote"&gt;&lt;b&gt;Important!&lt;/b&gt; Sellers must have an active eBay Store subscription, and they must accept the &lt;b&gt;Terms and Conditions&lt;/b&gt; before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the "requirements and restrictions" sections for &lt;a href="/api-docs/sell/marketing/static/overview.html#PL-requirements"&gt;Promoted Listings&lt;/a&gt; and &lt;a href="/api-docs/sell/marketing/static/overview.html#PM-requirements"&gt;Promotions Manager&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The table below lists all the Marketing API calls grouped by resource.&lt;/p&gt;
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        /**
         * Production
         */
        "https://api.ebay.com{basePath}",
	};
  	
    public Ad ad;
    public AdGroup adGroup;
    public AdReport adReport;
    public AdReportMetadata adReportMetadata;
    public AdReportTask adReportTask;
    public Campaign campaign;
    public ItemPriceMarkdown itemPriceMarkdown;
    public ItemPromotion itemPromotion;
    public Keyword keyword;
    public NegativeKeyword negativeKeyword;
    public Promotion promotion;
    public PromotionReport promotionReport;
    public PromotionSummaryReport promotionSummaryReport;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
		
		this.ad = new Ad(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.adGroup = new AdGroup(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.adReport = new AdReport(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.adReportMetadata = new AdReportMetadata(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.adReportTask = new AdReportTask(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.campaign = new Campaign(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.itemPriceMarkdown = new ItemPriceMarkdown(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.itemPromotion = new ItemPromotion(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.keyword = new Keyword(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.negativeKeyword = new NegativeKeyword(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.promotion = new Promotion(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.promotionReport = new PromotionReport(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.promotionSummaryReport = new PromotionSummaryReport(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}