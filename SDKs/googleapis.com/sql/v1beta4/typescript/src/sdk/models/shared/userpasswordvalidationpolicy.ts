/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PasswordStatus } from "./passwordstatus";
import { Expose, Type } from "class-transformer";

/**
 * User level password validation policy.
 */
export class UserPasswordValidationPolicy extends SpeakeasyBase {
  /**
   * Number of failed login attempts allowed before user get locked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedFailedAttempts" })
  allowedFailedAttempts?: number;

  /**
   * If true, failed login attempts check will be enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableFailedAttemptsCheck" })
  enableFailedAttemptsCheck?: boolean;

  /**
   * If true, the user must specify the current password before changing the password. This flag is supported only for MySQL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enablePasswordVerification" })
  enablePasswordVerification?: boolean;

  /**
   * Expiration duration after password is updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passwordExpirationDuration" })
  passwordExpirationDuration?: string;

  /**
   * Read-only password status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => PasswordStatus)
  status?: PasswordStatus;
}
