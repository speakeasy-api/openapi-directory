// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFilesSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// GetFilesSortEnum - values to sort by
type GetFilesSortEnum string

const (
	GetFilesSortEnumName           GetFilesSortEnum = "Name"
	GetFilesSortEnumSize           GetFilesSortEnum = "Size"
	GetFilesSortEnumCreatedDateUtc GetFilesSortEnum = "CreatedDateUTC"
)

func (e GetFilesSortEnum) ToPointer() *GetFilesSortEnum {
	return &e
}

func (e *GetFilesSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Name":
		fallthrough
	case "Size":
		fallthrough
	case "CreatedDateUTC":
		*e = GetFilesSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFilesSortEnum: %v", v)
	}
}

type GetFilesRequest struct {
	// number of records to skip for pagination
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// pass an optional page size value
	Pagesize *int64 `queryParam:"style=form,explode=true,name=pagesize"`
	// values to sort by
	Sort *GetFilesSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Xero identifier for Tenant
	XeroTenantID string `header:"style=simple,explode=false,name=xero-tenant-id"`
}

type GetFilesResponse struct {
	ContentType string
	// search results matching criteria
	Files       *shared.Files
	StatusCode  int
	RawResponse *http.Response
}
