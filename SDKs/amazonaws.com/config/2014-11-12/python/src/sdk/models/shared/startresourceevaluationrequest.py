"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import evaluationcontext as shared_evaluationcontext
from ..shared import evaluationmode_enum as shared_evaluationmode_enum
from ..shared import resourcedetails as shared_resourcedetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartResourceEvaluationRequest:
    
    evaluation_mode: shared_evaluationmode_enum.EvaluationModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationMode') }})  
    resource_details: shared_resourcedetails.ResourceDetails = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceDetails') }})  
    client_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientToken'), 'exclude': lambda f: f is None }})  
    evaluation_context: Optional[shared_evaluationcontext.EvaluationContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationContext'), 'exclude': lambda f: f is None }})  
    evaluation_timeout: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationTimeout'), 'exclude': lambda f: f is None }})  
    