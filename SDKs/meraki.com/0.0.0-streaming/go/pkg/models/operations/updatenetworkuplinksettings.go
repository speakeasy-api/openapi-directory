// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateNetworkUplinkSettingsPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

// UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular - The bandwidth settings for the 'cellular' uplink
type UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular struct {
	// The maximum download limit (integer, in Kbps). null indicates no limit
	LimitDown *int64 `json:"limitDown,omitempty"`
	// The maximum upload limit (integer, in Kbps). null indicates no limit
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1 - The bandwidth settings for the 'wan1' uplink
type UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1 struct {
	// The maximum download limit (integer, in Kbps). null indicates no limit
	LimitDown *int64 `json:"limitDown,omitempty"`
	// The maximum upload limit (integer, in Kbps). null indicates no limit
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2 - The bandwidth settings for the 'wan2' uplink
type UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2 struct {
	// The maximum download limit (integer, in Kbps). null indicates no limit
	LimitDown *int64 `json:"limitDown,omitempty"`
	// The maximum upload limit (integer, in Kbps). null indicates no limit
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits - A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
type UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits struct {
	// The bandwidth settings for the 'cellular' uplink
	Cellular *UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular `json:"cellular,omitempty"`
	// The bandwidth settings for the 'wan1' uplink
	Wan1 *UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1 `json:"wan1,omitempty"`
	// The bandwidth settings for the 'wan2' uplink
	Wan2 *UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2 `json:"wan2,omitempty"`
}

type UpdateNetworkUplinkSettingsRequestBody struct {
	// A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
	BandwidthLimits *UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits `json:"bandwidthLimits,omitempty"`
}

type UpdateNetworkUplinkSettingsRequest struct {
	PathParams UpdateNetworkUplinkSettingsPathParams
	Request    *UpdateNetworkUplinkSettingsRequestBody `request:"mediaType=application/json"`
}

type UpdateNetworkUplinkSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkUplinkSettings200ApplicationJSONObject map[string]interface{}
}
