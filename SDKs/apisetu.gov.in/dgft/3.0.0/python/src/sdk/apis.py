"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class APIs:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def importer_exporter_code_verification_api(self, request: operations.ImporterExporterCodeVerificationAPIRequest, security: operations.ImporterExporterCodeVerificationAPISecurity) -> operations.ImporterExporterCodeVerificationAPIResponse:
        r"""Importer-Exporter Code (IEC) Verification API.
        Description of Importer-Exporter Code (IEC) Verification API.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.ImporterExporterCodeVerificationAPIRequest, base_url, '/v1/iec/{iec}', request)
        
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ImporterExporterCodeVerificationAPIResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI200ApplicationJSON])
                res.importer_exporter_code_verification_api_200_application_json_object = out
        elif http_res.status_code == 400:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI400ApplicationJSON])
                res.importer_exporter_code_verification_api_400_application_json_object = out
        elif http_res.status_code == 401:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI401ApplicationJSON])
                res.importer_exporter_code_verification_api_401_application_json_object = out
        elif http_res.status_code == 404:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI404ApplicationJSON])
                res.importer_exporter_code_verification_api_404_application_json_object = out
        elif http_res.status_code == 500:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI500ApplicationJSON])
                res.importer_exporter_code_verification_api_500_application_json_object = out
        elif http_res.status_code == 502:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI502ApplicationJSON])
                res.importer_exporter_code_verification_api_502_application_json_object = out
        elif http_res.status_code == 503:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI503ApplicationJSON])
                res.importer_exporter_code_verification_api_503_application_json_object = out
        elif http_res.status_code == 504:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.ImporterExporterCodeVerificationAPI504ApplicationJSON])
                res.importer_exporter_code_verification_api_504_application_json_object = out

        return res

    