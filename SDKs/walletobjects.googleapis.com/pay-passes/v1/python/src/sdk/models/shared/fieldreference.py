"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FieldReferenceDateFormatEnum(str, Enum):
    r"""Only valid if the `fieldPath` references a date field. Chooses how the date field will be formatted and displayed in the UI."""
    DATE_FORMAT_UNSPECIFIED = 'DATE_FORMAT_UNSPECIFIED'
    DATE_TIME_UPPER = 'DATE_TIME'
    DATE_TIME_MIXED = 'dateTime'
    DATE_ONLY_UPPER = 'DATE_ONLY'
    DATE_ONLY_MIXED = 'dateOnly'
    TIME_ONLY_UPPER = 'TIME_ONLY'
    TIME_ONLY_MIXED = 'timeOnly'
    DATE_TIME_YEAR_UPPER = 'DATE_TIME_YEAR'
    DATE_TIME_YEAR_MIXED = 'dateTimeYear'
    DATE_YEAR_UPPER = 'DATE_YEAR'
    DATE_YEAR_MIXED = 'dateYear'
    YEAR_MONTH = 'YEAR_MONTH'
    YEAR_MONTH_DAY = 'YEAR_MONTH_DAY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FieldReference:
    r"""Reference definition to use with field overrides."""
    
    date_format: Optional[FieldReferenceDateFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateFormat'), 'exclude': lambda f: f is None }})
    r"""Only valid if the `fieldPath` references a date field. Chooses how the date field will be formatted and displayed in the UI."""  
    field_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldPath'), 'exclude': lambda f: f is None }})
    r"""Path to the field being referenced, prefixed with \\"object\\" or \\"class\\" and separated with dots. For example, it may be the string \\"object.purchaseDetails.purchasePrice\\"."""  
    