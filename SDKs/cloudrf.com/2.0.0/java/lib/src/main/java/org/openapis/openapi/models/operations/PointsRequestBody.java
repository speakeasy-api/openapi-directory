/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PointsRequestBody - A minimal request needs a transmitters array of (latitude,longitude,altitude) locations, antenna, receiver and output objects defined as a minimum. Model and environment options will enhance accuracy.
 */
public class PointsRequestBody {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("antenna")
    public org.openapis.openapi.models.shared.Antenna antenna;

    public PointsRequestBody withAntenna(org.openapis.openapi.models.shared.Antenna antenna) {
        this.antenna = antenna;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public org.openapis.openapi.models.shared.Environment environment;

    public PointsRequestBody withEnvironment(org.openapis.openapi.models.shared.Environment environment) {
        this.environment = environment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public org.openapis.openapi.models.shared.Model model;

    public PointsRequestBody withModel(org.openapis.openapi.models.shared.Model model) {
        this.model = model;
        return this;
    }
    
    /**
     * Network name/group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public PointsRequestBody withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("output")
    public org.openapis.openapi.models.shared.Output output;

    public PointsRequestBody withOutput(org.openapis.openapi.models.shared.Output output) {
        this.output = output;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("points")
    public org.openapis.openapi.models.shared.Point[] points;

    public PointsRequestBody withPoints(org.openapis.openapi.models.shared.Point[] points) {
        this.points = points;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiver")
    public org.openapis.openapi.models.shared.Receiver receiver;

    public PointsRequestBody withReceiver(org.openapis.openapi.models.shared.Receiver receiver) {
        this.receiver = receiver;
        return this;
    }
    
    /**
     * Site name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("site")
    public String site;

    public PointsRequestBody withSite(String site) {
        this.site = site;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transmitter")
    public org.openapis.openapi.models.shared.Transmitter transmitter;

    public PointsRequestBody withTransmitter(org.openapis.openapi.models.shared.Transmitter transmitter) {
        this.transmitter = transmitter;
        return this;
    }
    
    public PointsRequestBody(){}
}
