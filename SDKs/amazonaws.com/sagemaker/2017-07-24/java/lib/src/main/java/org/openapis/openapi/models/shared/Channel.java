/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Channel - A channel is a named input source that training algorithms can consume. 
 */
public class Channel {
    @JsonProperty("ChannelName")
    public String channelName;
    public Channel withChannelName(String channelName) {
        this.channelName = channelName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompressionType")
    public CompressionTypeEnum compressionType;
    public Channel withCompressionType(CompressionTypeEnum compressionType) {
        this.compressionType = compressionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContentType")
    public String contentType;
    public Channel withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    @JsonProperty("DataSource")
    public DataSource dataSource;
    public Channel withDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputMode")
    public TrainingInputModeEnum inputMode;
    public Channel withInputMode(TrainingInputModeEnum inputMode) {
        this.inputMode = inputMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordWrapperType")
    public RecordWrapperEnum recordWrapperType;
    public Channel withRecordWrapperType(RecordWrapperEnum recordWrapperType) {
        this.recordWrapperType = recordWrapperType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShuffleConfig")
    public ShuffleConfig shuffleConfig;
    public Channel withShuffleConfig(ShuffleConfig shuffleConfig) {
        this.shuffleConfig = shuffleConfig;
        return this;
    }
    
}
