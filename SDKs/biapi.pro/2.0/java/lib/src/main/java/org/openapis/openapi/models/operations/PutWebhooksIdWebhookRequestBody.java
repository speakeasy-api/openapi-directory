/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PutWebhooksIdWebhookRequestBody {
    /**
     * a date to delete the webhook or 'null' to enable it
     */
    @SpeakeasyMetadata("multipartForm:name=deleted")
    public String deleted;

    public PutWebhooksIdWebhookRequestBody withDeleted(String deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * The webhook event
     */
    @SpeakeasyMetadata("multipartForm:name=event")
    public String event;

    public PutWebhooksIdWebhookRequestBody withEvent(String event) {
        this.event = event;
        return this;
    }
    
    /**
     * The webhook authentication process to use
     */
    @SpeakeasyMetadata("multipartForm:name=id_auth")
    public Long idAuth;

    public PutWebhooksIdWebhookRequestBody withIdAuth(Long idAuth) {
        this.idAuth = idAuth;
        return this;
    }
    
    /**
     * The service ID to associate with the webhook
     */
    @SpeakeasyMetadata("multipartForm:name=id_service")
    public Long idService;

    public PutWebhooksIdWebhookRequestBody withIdService(Long idService) {
        this.idService = idService;
        return this;
    }
    
    /**
     * The user ID to associate with the webhook
     */
    @SpeakeasyMetadata("multipartForm:name=id_user")
    public Long idUser;

    public PutWebhooksIdWebhookRequestBody withIdUser(Long idUser) {
        this.idUser = idUser;
        return this;
    }
    
    /**
     * The webhook callback url
     */
    @SpeakeasyMetadata("multipartForm:name=url")
    public String url;

    public PutWebhooksIdWebhookRequestBody withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public PutWebhooksIdWebhookRequestBody(){}
}
