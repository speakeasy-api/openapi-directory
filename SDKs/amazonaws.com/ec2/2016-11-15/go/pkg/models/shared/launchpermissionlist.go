// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LaunchPermissionListGroupEnum - The name of the group.
type LaunchPermissionListGroupEnum string

const (
	LaunchPermissionListGroupEnumAll LaunchPermissionListGroupEnum = "all"
)

func (e LaunchPermissionListGroupEnum) ToPointer() *LaunchPermissionListGroupEnum {
	return &e
}

func (e *LaunchPermissionListGroupEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		*e = LaunchPermissionListGroupEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LaunchPermissionListGroupEnum: %v", v)
	}
}

// LaunchPermissionList - Describes a launch permission.
type LaunchPermissionList struct {
	Group                 *LaunchPermissionListGroupEnum
	OrganizationArn       *string
	OrganizationalUnitArn *string
	UserID                *string
}
