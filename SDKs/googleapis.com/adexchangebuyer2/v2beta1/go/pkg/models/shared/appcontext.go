// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppContextAppTypesEnum string

const (
	AppContextAppTypesEnumNative AppContextAppTypesEnum = "NATIVE"
	AppContextAppTypesEnumWeb    AppContextAppTypesEnum = "WEB"
)

func (e AppContextAppTypesEnum) ToPointer() *AppContextAppTypesEnum {
	return &e
}

func (e *AppContextAppTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NATIVE":
		fallthrough
	case "WEB":
		*e = AppContextAppTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppContextAppTypesEnum: %v", v)
	}
}

// AppContext - Output only. The app type the restriction applies to for mobile device.
type AppContext struct {
	// The app types this restriction applies to.
	AppTypes []AppContextAppTypesEnum `json:"appTypes,omitempty"`
}
