/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Comment } from "./comment";
import { Expose, Type } from "class-transformer";

/**
 * The creator's avatar.
 */
export class PostAuthorImage extends SpeakeasyBase {
  /**
   * The creator's avatar URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * The author of this Post.
 */
export class PostAuthor extends SpeakeasyBase {
  /**
   * The display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The identifier of the creator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The creator's avatar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => PostAuthorImage)
  image?: PostAuthorImage;

  /**
   * The URL of the creator's Profile page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Data about the blog containing this Post.
 */
export class PostBlog extends SpeakeasyBase {
  /**
   * The identifier of the Blog that contains this Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class PostImages extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * The location for geotagged posts.
 */
export class PostLocation extends SpeakeasyBase {
  /**
   * Location's latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lat" })
  lat?: number;

  /**
   * Location's longitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lng" })
  lng?: number;

  /**
   * Location name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Location's viewport span. Can be used when rendering a map preview.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "span" })
  span?: string;
}

/**
 * Comment control and display setting for readers of this post.
 */
export enum PostReaderCommentsEnum {
  Allow = "ALLOW",
  DontAllowShowExisting = "DONT_ALLOW_SHOW_EXISTING",
  DontAllowHideExisting = "DONT_ALLOW_HIDE_EXISTING",
}

/**
 * The container of comments on this Post.
 */
export class PostReplies extends SpeakeasyBase {
  /**
   * The List of Comments for this Post.
   */
  @SpeakeasyMetadata({ elemType: Comment })
  @Expose({ name: "items" })
  @Type(() => Comment)
  items?: Comment[];

  /**
   * The URL of the comments on this post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The count of comments on this post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalItems" })
  totalItems?: string;
}

/**
 * Status of the post. Only set for admin-level requests.
 */
export enum PostStatusEnum {
  Live = "LIVE",
  Draft = "DRAFT",
  Scheduled = "SCHEDULED",
  SoftTrashed = "SOFT_TRASHED",
}

/**
 * Successful response
 */
export class Post extends SpeakeasyBase {
  /**
   * The author of this Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  @Type(() => PostAuthor)
  author?: PostAuthor;

  /**
   * Data about the blog containing this Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blog" })
  @Type(() => PostBlog)
  blog?: PostBlog;

  /**
   * The content of the Post. May contain HTML markup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  /**
   * The JSON meta-data for the Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customMetaData" })
  customMetaData?: string;

  /**
   * Etag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The identifier of this Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Display image for the Post.
   */
  @SpeakeasyMetadata({ elemType: PostImages })
  @Expose({ name: "images" })
  @Type(() => PostImages)
  images?: PostImages[];

  /**
   * The kind of this entity. Always blogger#post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The list of labels this Post was tagged with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: string[];

  /**
   * The location for geotagged posts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => PostLocation)
  location?: PostLocation;

  /**
   * RFC 3339 date-time when this Post was published.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published" })
  published?: string;

  /**
   * Comment control and display setting for readers of this post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readerComments" })
  readerComments?: PostReaderCommentsEnum;

  /**
   * The container of comments on this Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replies" })
  @Type(() => PostReplies)
  replies?: PostReplies;

  /**
   * The API REST URL to fetch this resource from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Status of the post. Only set for admin-level requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: PostStatusEnum;

  /**
   * The title of the Post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The title link URL, similar to atom's related link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "titleLink" })
  titleLink?: string;

  /**
   * RFC 3339 date-time when this Post was last trashed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trashed" })
  trashed?: string;

  /**
   * RFC 3339 date-time when this Post was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: string;

  /**
   * The URL where this Post is displayed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
