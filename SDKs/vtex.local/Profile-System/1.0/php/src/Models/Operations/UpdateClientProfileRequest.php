<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class UpdateClientProfileRequest
{
    /**
     * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
     * 
     * @var string $accept
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept')]
    public string $accept;
    
    /**
     * Type of the content being sent.
     * 
     * @var string $contentType
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Content-Type')]
    public string $contentType;
    
	#[SpeakeasyMetadata('request:mediaType=application/json')]
    public ?UpdateClientProfileRequestBody $requestBody = null;
    
    /**
     * The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.
     * 
     * 
     * 
     * > Currently, there are two possible values for this parameter: `email` and `document`.
     * 
     * @var ?string $alternativeKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alternativeKey')]
    public ?string $alternativeKey = null;
    
    /**
     * ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.
     * 
     * @var string $profileId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=profileId')]
    public string $profileId;
    
    /**
     * This parameter sets the the Time To Live (TTL), in days, of the specific document being created or updated with this request. After this period of time from the moment of the request, the document is deleted. By sending this parameter you override the TTL set for the schema.
     * 
     * 
     * 
     * > Currently, the available default document schemas have no TTL. This means that documents are stored indefinitely, unless a TTL is sent when creating or updating.
     * 
     * @var ?int $ttl
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ttl')]
    public ?int $ttl = null;
    
	public function __construct()
	{
		$this->accept = "";
		$this->contentType = "";
		$this->requestBody = null;
		$this->alternativeKey = null;
		$this->profileId = "";
		$this->ttl = null;
	}
}
