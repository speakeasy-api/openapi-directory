/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The PackageItemDTO Class.
 *
 * @remarks
 * Contains relevant fields of PackageItem DTO by masking actual Package entity's fields in application.
 *
 */
export class PackageItemDTO extends SpeakeasyBase {
  /**
   * Refer to ArticleId in Article table in DB.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "articleId" })
  articleId: number;

  /**
   * Name of the article(Addon) in a particular package.
   *
   * @remarks
   *              read only
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "articleName" })
  articleName?: string;

  /**
   * Number assigned the article(Addon) in a particular package.
   *
   * @remarks
   *              read only
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "articleNumber" })
  articleNumber?: number;

  /**
   * Price of the article determined from that package.
   *
   * @remarks
   * Price of a same article can be varied from package to package.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "articlePrice" })
  articlePrice?: number;

  /**
   * Number of the installment this article is available to.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endOrder" })
  endOrder?: number;

  /**
   * Is Included in service charge
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isIncludeServiceInCharge" })
  isIncludeServiceInCharge?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "measureUnit" })
  measureUnit?: string;

  /**
   * How many article(Addon) is available for that package from that type.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numberOfItems" })
  numberOfItems?: number;

  /**
   * Number of the installment this article is available from.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startOrder" })
  startOrder?: number;
}
