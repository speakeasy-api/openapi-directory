// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTUpdateEnvironmentActionEnum
type POSTUpdateEnvironmentActionEnum string

const (
	POSTUpdateEnvironmentActionEnumUpdateEnvironment POSTUpdateEnvironmentActionEnum = "UpdateEnvironment"
)

func (e *POSTUpdateEnvironmentActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateEnvironment":
		*e = POSTUpdateEnvironmentActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTUpdateEnvironmentActionEnum: %s", s)
	}
}

// POSTUpdateEnvironmentVersionEnum
type POSTUpdateEnvironmentVersionEnum string

const (
	POSTUpdateEnvironmentVersionEnumTwoThousandAndTen1201 POSTUpdateEnvironmentVersionEnum = "2010-12-01"
)

func (e *POSTUpdateEnvironmentVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = POSTUpdateEnvironmentVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTUpdateEnvironmentVersionEnum: %s", s)
	}
}

type POSTUpdateEnvironmentRequest struct {
	Action            POSTUpdateEnvironmentActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                           `request:"mediaType=text/xml"`
	Version           POSTUpdateEnvironmentVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTUpdateEnvironmentResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
