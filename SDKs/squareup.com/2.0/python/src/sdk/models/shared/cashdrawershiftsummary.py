"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CashDrawerShiftSummary:
    r"""The summary of a closed cash drawer shift.
    This model contains only the money counted to start a cash drawer shift, counted
    at the end of the shift, and the amount that should be in the drawer at shift
    end based on summing all cash drawer shift events.
    """
    
    closed_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closed_at'), 'exclude': lambda f: f is None }})
    r"""The shift close time in ISO 8601 format."""  
    closed_cash_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closed_cash_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""An employee free-text description of a cash drawer shift."""  
    ended_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ended_at'), 'exclude': lambda f: f is None }})
    r"""The shift end time in ISO 8601 format."""  
    expected_cash_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expected_cash_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The shift unique ID."""  
    opened_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opened_at'), 'exclude': lambda f: f is None }})
    r"""The shift start time in ISO 8601 format."""  
    opened_cash_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opened_cash_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The shift current state."""  
    