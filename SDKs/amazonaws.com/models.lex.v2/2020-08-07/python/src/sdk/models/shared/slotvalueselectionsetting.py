"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import advancedrecognitionsetting as shared_advancedrecognitionsetting
from ..shared import slotvalueregexfilter as shared_slotvalueregexfilter
from ..shared import slotvalueresolutionstrategy_enum as shared_slotvalueresolutionstrategy_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlotValueSelectionSetting:
    r"""Contains settings used by Amazon Lex to select a slot value."""
    
    resolution_strategy: shared_slotvalueresolutionstrategy_enum.SlotValueResolutionStrategyEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolutionStrategy') }})  
    advanced_recognition_setting: Optional[shared_advancedrecognitionsetting.AdvancedRecognitionSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advancedRecognitionSetting'), 'exclude': lambda f: f is None }})  
    regex_filter: Optional[shared_slotvalueregexfilter.SlotValueRegexFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regexFilter'), 'exclude': lambda f: f is None }})  
    