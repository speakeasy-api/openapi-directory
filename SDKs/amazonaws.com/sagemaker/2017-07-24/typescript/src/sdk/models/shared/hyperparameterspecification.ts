/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParameterRange } from "./parameterrange";
import { ParameterTypeEnum } from "./parametertypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Defines a hyperparameter to be used by an algorithm.
 */
export class HyperParameterSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DefaultValue" })
  defaultValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsRequired" })
  isRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IsTunable" })
  isTunable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Range" })
  @Type(() => ParameterRange)
  range?: ParameterRange;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: ParameterTypeEnum;
}
