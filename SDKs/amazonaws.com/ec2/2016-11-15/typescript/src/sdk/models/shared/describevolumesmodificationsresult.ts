/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The current modification state. The modification state is null for unmodified volumes.
 */
export enum DescribeVolumesModificationsResultVolumesModificationsModificationStateEnum {
  Modifying = "modifying",
  Optimizing = "optimizing",
  Completed = "completed",
  Failed = "failed",
}

/**
 * The original EBS volume type of the volume.
 */
export enum DescribeVolumesModificationsResultVolumesModificationsOriginalVolumeTypeEnum {
  Standard = "standard",
  Io1 = "io1",
  Io2 = "io2",
  Gp2 = "gp2",
  Sc1 = "sc1",
  St1 = "st1",
  Gp3 = "gp3",
}

/**
 * The target EBS volume type of the volume.
 */
export enum DescribeVolumesModificationsResultVolumesModificationsTargetVolumeTypeEnum {
  Standard = "standard",
  Io1 = "io1",
  Io2 = "io2",
  Gp2 = "gp2",
  Sc1 = "sc1",
  St1 = "st1",
  Gp3 = "gp3",
}

/**
 * <p>Describes the modification status of an EBS volume.</p> <p>If the volume has never been modified, some element values will be null.</p>
 */
export class DescribeVolumesModificationsResultVolumesModifications extends SpeakeasyBase {
  @SpeakeasyMetadata()
  endTime?: Date;

  @SpeakeasyMetadata()
  modificationState?: DescribeVolumesModificationsResultVolumesModificationsModificationStateEnum;

  @SpeakeasyMetadata()
  originalIops?: number;

  @SpeakeasyMetadata()
  originalMultiAttachEnabled?: boolean;

  @SpeakeasyMetadata()
  originalSize?: number;

  @SpeakeasyMetadata()
  originalThroughput?: number;

  @SpeakeasyMetadata()
  originalVolumeType?: DescribeVolumesModificationsResultVolumesModificationsOriginalVolumeTypeEnum;

  @SpeakeasyMetadata()
  progress?: number;

  @SpeakeasyMetadata()
  startTime?: Date;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata()
  targetIops?: number;

  @SpeakeasyMetadata()
  targetMultiAttachEnabled?: boolean;

  @SpeakeasyMetadata()
  targetSize?: number;

  @SpeakeasyMetadata()
  targetThroughput?: number;

  @SpeakeasyMetadata()
  targetVolumeType?: DescribeVolumesModificationsResultVolumesModificationsTargetVolumeTypeEnum;

  @SpeakeasyMetadata()
  volumeId?: string;
}

/**
 * Success
 */
export class DescribeVolumesModificationsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType: DescribeVolumesModificationsResultVolumesModifications,
  })
  volumesModifications?: DescribeVolumesModificationsResultVolumesModifications[];
}
