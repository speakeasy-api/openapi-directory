/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FlexibleTimeWindow } from "./flexibletimewindow";
import { ScheduleStateEnum } from "./schedulestateenum";
import { Target } from "./target";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetScheduleOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FlexibleTimeWindow" })
  @Type(() => FlexibleTimeWindow)
  flexibleTimeWindow?: FlexibleTimeWindow;

  @SpeakeasyMetadata()
  @Expose({ name: "GroupName" })
  groupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyArn" })
  kmsKeyArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduleExpression" })
  scheduleExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduleExpressionTimezone" })
  scheduleExpressionTimezone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: ScheduleStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Target" })
  @Type(() => Target)
  target?: Target;
}
