"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import usagelimitbreachaction_enum as shared_usagelimitbreachaction_enum
from ..shared import usagelimitperiod_enum as shared_usagelimitperiod_enum
from ..shared import usagelimitusagetype_enum as shared_usagelimitusagetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateUsageLimitRequest:
    
    amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})  
    resource_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceArn') }})  
    usage_type: shared_usagelimitusagetype_enum.UsageLimitUsageTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageType') }})  
    breach_action: Optional[shared_usagelimitbreachaction_enum.UsageLimitBreachActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('breachAction'), 'exclude': lambda f: f is None }})  
    period: Optional[shared_usagelimitperiod_enum.UsageLimitPeriodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('period'), 'exclude': lambda f: f is None }})  
    