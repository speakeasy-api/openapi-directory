/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyModifyUsage - Container for custom fields of a Usage object.
 * 
 */
public class ProxyModifyUsage {
    /**
     *  The end date and time of a range of time when usage is tracked. Use this field for reporting; this field doesn't affect usage calculation.
     * **Character limit**: 29 **Values**: a valid date and time value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndDateTime")
    public OffsetDateTime endDateTime;
    public ProxyModifyUsage withEndDateTime(OffsetDateTime endDateTime) {
        this.endDateTime = endDateTime;
        return this;
    }
    
    /**
     *  Indicates the number of units used.
     * **Character limit**: 16 **Values**: a valid decimal amount equal to or greater than 0 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quantity")
    public Double quantity;
    public ProxyModifyUsage withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     *  Indicates if the rating and billing engine (RBE) processed usage data for an invoice.
     * **Character limit**: 9 **Values**: automatically generated to be one of the following values: `Importing`, `Pending`, `Processed` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RbeStatus")
    public String rbeStatus;
    public ProxyModifyUsage withRbeStatus(String rbeStatus) {
        this.rbeStatus = rbeStatus;
        return this;
    }
    
    /**
     *  The start date and time of a range of time when usage is tracked. Zuora uses this field value to determine the usage date. Unlike the `EndDateTime`, the `StartDateTime` field does affect usage calculation.
     * **Character limit**: 29 **Values**: a valid date and time value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartDateTime")
    public OffsetDateTime startDateTime;
    public ProxyModifyUsage withStartDateTime(OffsetDateTime startDateTime) {
        this.startDateTime = startDateTime;
        return this;
    }
    
    /**
     *  The date when usage was submitted.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("SubmissionDateTime")
    public OffsetDateTime submissionDateTime;
    public ProxyModifyUsage withSubmissionDateTime(OffsetDateTime submissionDateTime) {
        this.submissionDateTime = submissionDateTime;
        return this;
    }
    
    /**
     *  Specifies the units to measure usage. Units of measure are configured in the web-based UI. Your values depend on your configuration in **Billing Settings**.
     * **Character limit**: **Values**: a valid unit of measure 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UOM")
    public String uom;
    public ProxyModifyUsage withUom(String uom) {
        this.uom = uom;
        return this;
    }
    
}
