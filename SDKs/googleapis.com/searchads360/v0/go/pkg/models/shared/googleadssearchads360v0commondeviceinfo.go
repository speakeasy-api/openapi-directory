// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum - Type of the device.
type GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum string

const (
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumUnspecified GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "UNSPECIFIED"
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumUnknown     GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "UNKNOWN"
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumMobile      GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "MOBILE"
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumTablet      GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "TABLET"
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumDesktop     GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "DESKTOP"
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumConnectedTv GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "CONNECTED_TV"
	GoogleAdsSearchads360V0CommonDeviceInfoTypeEnumOther       GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum = "OTHER"
)

func (e GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum) ToPointer() *GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum {
	return &e
}

func (e *GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "MOBILE":
		fallthrough
	case "TABLET":
		fallthrough
	case "DESKTOP":
		fallthrough
	case "CONNECTED_TV":
		fallthrough
	case "OTHER":
		*e = GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum: %v", v)
	}
}

// GoogleAdsSearchads360V0CommonDeviceInfo - A device criterion.
type GoogleAdsSearchads360V0CommonDeviceInfo struct {
	// Type of the device.
	Type *GoogleAdsSearchads360V0CommonDeviceInfoTypeEnum `json:"type,omitempty"`
}
