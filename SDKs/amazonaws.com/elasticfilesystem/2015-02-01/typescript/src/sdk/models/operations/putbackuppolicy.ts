/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The backup policy for the file system used to create automatic daily backups. If status has a value of <code>ENABLED</code>, the file system is being automatically backed up. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic backups</a>.
 */
export class PutBackupPolicyRequestBodyBackupPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: shared.StatusEnum;
}

export class PutBackupPolicyRequestBody extends SpeakeasyBase {
  /**
   * The backup policy for the file system used to create automatic daily backups. If status has a value of <code>ENABLED</code>, the file system is being automatically backed up. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic backups</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BackupPolicy" })
  @Type(() => PutBackupPolicyRequestBodyBackupPolicy)
  backupPolicy: PutBackupPolicyRequestBodyBackupPolicy;
}

export class PutBackupPolicyRequest extends SpeakeasyBase {
  /**
   * Specifies which EFS file system to update the backup policy for.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=FileSystemId",
  })
  fileSystemId: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PutBackupPolicyRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class PutBackupPolicyResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata()
  backupPolicyDescription?: shared.BackupPolicyDescription;

  /**
   * BadRequest
   */
  @SpeakeasyMetadata()
  badRequest?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * FileSystemNotFound
   */
  @SpeakeasyMetadata()
  fileSystemNotFound?: any;

  /**
   * IncorrectFileSystemLifeCycleState
   */
  @SpeakeasyMetadata()
  incorrectFileSystemLifeCycleState?: any;

  /**
   * InternalServerError
   */
  @SpeakeasyMetadata()
  internalServerError?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
