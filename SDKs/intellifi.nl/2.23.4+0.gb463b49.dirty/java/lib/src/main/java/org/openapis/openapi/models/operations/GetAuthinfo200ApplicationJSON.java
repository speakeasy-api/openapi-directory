/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetAuthinfo200ApplicationJSON - A JSON object containing the authentication information
 */
public class GetAuthinfo200ApplicationJSON {
    /**
     * Reference to the static API key (/api/keys) used to authenticate this request (when auth_method=static_api_key)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_key_id")
    public String apiKeyId;

    public GetAuthinfo200ApplicationJSON withApiKeyId(String apiKeyId) {
        this.apiKeyId = apiKeyId;
        return this;
    }
    
    /**
     * What kind of authentication was used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_method")
    public GetAuthinfo200ApplicationJSONAuthMethodEnum authMethod;

    public GetAuthinfo200ApplicationJSON withAuthMethod(GetAuthinfo200ApplicationJSONAuthMethodEnum authMethod) {
        this.authMethod = authMethod;
        return this;
    }
    
    /**
     * Whether or not you are authenticated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticated")
    public Boolean authenticated;

    public GetAuthinfo200ApplicationJSON withAuthenticated(Boolean authenticated) {
        this.authenticated = authenticated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public GetAuthinfo200ApplicationJSONPermissions permissions;

    public GetAuthinfo200ApplicationJSON withPermissions(GetAuthinfo200ApplicationJSONPermissions permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * Url to the individual resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public GetAuthinfo200ApplicationJSON withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Reference to the user account (/api/users) used to authenticate this request (when auth_method=user_session)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;

    public GetAuthinfo200ApplicationJSON withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public GetAuthinfo200ApplicationJSON(){}
}
