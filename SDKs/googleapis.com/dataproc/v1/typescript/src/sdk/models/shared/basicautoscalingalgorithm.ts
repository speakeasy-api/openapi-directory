/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BasicYarnAutoscalingConfig } from "./basicyarnautoscalingconfig";
import { SparkStandaloneAutoscalingConfig } from "./sparkstandaloneautoscalingconfig";
import { Expose, Type } from "class-transformer";

/**
 * Basic algorithm for autoscaling.
 */
export class BasicAutoscalingAlgorithm extends SpeakeasyBase {
  /**
   * Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cooldownPeriod" })
  cooldownPeriod?: string;

  /**
   * Basic autoscaling configurations for Spark Standalone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sparkStandaloneConfig" })
  @Type(() => SparkStandaloneAutoscalingConfig)
  sparkStandaloneConfig?: SparkStandaloneAutoscalingConfig;

  /**
   * Basic autoscaling configurations for YARN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "yarnConfig" })
  @Type(() => BasicYarnAutoscalingConfig)
  yarnConfig?: BasicYarnAutoscalingConfig;
}
