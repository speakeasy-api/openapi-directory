// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteIpamPoolResultIpamPoolAddressFamilyEnum - The address family of the pool.
type DeleteIpamPoolResultIpamPoolAddressFamilyEnum string

const (
	DeleteIpamPoolResultIpamPoolAddressFamilyEnumIpv4 DeleteIpamPoolResultIpamPoolAddressFamilyEnum = "ipv4"
	DeleteIpamPoolResultIpamPoolAddressFamilyEnumIpv6 DeleteIpamPoolResultIpamPoolAddressFamilyEnum = "ipv6"
)

func (e *DeleteIpamPoolResultIpamPoolAddressFamilyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = DeleteIpamPoolResultIpamPoolAddressFamilyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamPoolResultIpamPoolAddressFamilyEnum: %s", s)
	}
}

// DeleteIpamPoolResultIpamPoolAllocationResourceTags - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.
type DeleteIpamPoolResultIpamPoolAllocationResourceTags struct {
	Key   *string
	Value *string
}

// DeleteIpamPoolResultIpamPoolAwsServiceEnum - Limits which service in Amazon Web Services that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.
type DeleteIpamPoolResultIpamPoolAwsServiceEnum string

const (
	DeleteIpamPoolResultIpamPoolAwsServiceEnumEc2 DeleteIpamPoolResultIpamPoolAwsServiceEnum = "ec2"
)

func (e *DeleteIpamPoolResultIpamPoolAwsServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ec2":
		*e = DeleteIpamPoolResultIpamPoolAwsServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamPoolResultIpamPoolAwsServiceEnum: %s", s)
	}
}

// DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum - In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.
type DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum string

const (
	DeleteIpamPoolResultIpamPoolIpamScopeTypeEnumPublic  DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum = "public"
	DeleteIpamPoolResultIpamPoolIpamScopeTypeEnumPrivate DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum = "private"
)

func (e *DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "public":
		fallthrough
	case "private":
		*e = DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum: %s", s)
	}
}

// DeleteIpamPoolResultIpamPoolPublicIPSourceEnum - The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Default is <code>BYOIP</code>. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/intro-create-ipv6-pools.html">Create IPv6 pools</a> in the <i>Amazon VPC IPAM User Guide</i>. By default, you can add only one Amazon-provided IPv6 CIDR block to a top-level IPv6 pool. For information on increasing the default limit, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/quotas-ipam.html"> Quotas for your IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.
type DeleteIpamPoolResultIpamPoolPublicIPSourceEnum string

const (
	DeleteIpamPoolResultIpamPoolPublicIPSourceEnumAmazon DeleteIpamPoolResultIpamPoolPublicIPSourceEnum = "amazon"
	DeleteIpamPoolResultIpamPoolPublicIPSourceEnumByoip  DeleteIpamPoolResultIpamPoolPublicIPSourceEnum = "byoip"
)

func (e *DeleteIpamPoolResultIpamPoolPublicIPSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "amazon":
		fallthrough
	case "byoip":
		*e = DeleteIpamPoolResultIpamPoolPublicIPSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamPoolResultIpamPoolPublicIPSourceEnum: %s", s)
	}
}

// DeleteIpamPoolResultIpamPoolStateEnum - The state of the IPAM pool.
type DeleteIpamPoolResultIpamPoolStateEnum string

const (
	DeleteIpamPoolResultIpamPoolStateEnumCreateInProgress  DeleteIpamPoolResultIpamPoolStateEnum = "create-in-progress"
	DeleteIpamPoolResultIpamPoolStateEnumCreateComplete    DeleteIpamPoolResultIpamPoolStateEnum = "create-complete"
	DeleteIpamPoolResultIpamPoolStateEnumCreateFailed      DeleteIpamPoolResultIpamPoolStateEnum = "create-failed"
	DeleteIpamPoolResultIpamPoolStateEnumModifyInProgress  DeleteIpamPoolResultIpamPoolStateEnum = "modify-in-progress"
	DeleteIpamPoolResultIpamPoolStateEnumModifyComplete    DeleteIpamPoolResultIpamPoolStateEnum = "modify-complete"
	DeleteIpamPoolResultIpamPoolStateEnumModifyFailed      DeleteIpamPoolResultIpamPoolStateEnum = "modify-failed"
	DeleteIpamPoolResultIpamPoolStateEnumDeleteInProgress  DeleteIpamPoolResultIpamPoolStateEnum = "delete-in-progress"
	DeleteIpamPoolResultIpamPoolStateEnumDeleteComplete    DeleteIpamPoolResultIpamPoolStateEnum = "delete-complete"
	DeleteIpamPoolResultIpamPoolStateEnumDeleteFailed      DeleteIpamPoolResultIpamPoolStateEnum = "delete-failed"
	DeleteIpamPoolResultIpamPoolStateEnumIsolateInProgress DeleteIpamPoolResultIpamPoolStateEnum = "isolate-in-progress"
	DeleteIpamPoolResultIpamPoolStateEnumIsolateComplete   DeleteIpamPoolResultIpamPoolStateEnum = "isolate-complete"
	DeleteIpamPoolResultIpamPoolStateEnumRestoreInProgress DeleteIpamPoolResultIpamPoolStateEnum = "restore-in-progress"
)

func (e *DeleteIpamPoolResultIpamPoolStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "create-in-progress":
		fallthrough
	case "create-complete":
		fallthrough
	case "create-failed":
		fallthrough
	case "modify-in-progress":
		fallthrough
	case "modify-complete":
		fallthrough
	case "modify-failed":
		fallthrough
	case "delete-in-progress":
		fallthrough
	case "delete-complete":
		fallthrough
	case "delete-failed":
		fallthrough
	case "isolate-in-progress":
		fallthrough
	case "isolate-complete":
		fallthrough
	case "restore-in-progress":
		*e = DeleteIpamPoolResultIpamPoolStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteIpamPoolResultIpamPoolStateEnum: %s", s)
	}
}

// DeleteIpamPoolResultIpamPoolTags - Describes a tag.
type DeleteIpamPoolResultIpamPoolTags struct {
	Key   *string
	Value *string
}

// DeleteIpamPoolResultIpamPool - Information about the results of the deletion.
type DeleteIpamPoolResultIpamPool struct {
	AddressFamily                  *DeleteIpamPoolResultIpamPoolAddressFamilyEnum
	AllocationDefaultNetmaskLength *int64
	AllocationMaxNetmaskLength     *int64
	AllocationMinNetmaskLength     *int64
	AllocationResourceTags         []DeleteIpamPoolResultIpamPoolAllocationResourceTags
	AutoImport                     *bool
	AwsService                     *DeleteIpamPoolResultIpamPoolAwsServiceEnum
	Description                    *string
	IpamArn                        *string
	IpamPoolArn                    *string
	IpamPoolID                     *string
	IpamRegion                     *string
	IpamScopeArn                   *string
	IpamScopeType                  *DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum
	Locale                         *string
	OwnerID                        *string
	PoolDepth                      *int64
	PublicIPSource                 *DeleteIpamPoolResultIpamPoolPublicIPSourceEnum
	PubliclyAdvertisable           *bool
	SourceIpamPoolID               *string
	State                          *DeleteIpamPoolResultIpamPoolStateEnum
	StateMessage                   *string
	Tags                           []DeleteIpamPoolResultIpamPoolTags
}

// DeleteIpamPoolResult - Success
type DeleteIpamPoolResult struct {
	IpamPool *DeleteIpamPoolResultIpamPool
}
