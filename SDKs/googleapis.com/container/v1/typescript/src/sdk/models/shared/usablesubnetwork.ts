/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UsableSubnetworkSecondaryRange } from "./usablesubnetworksecondaryrange";
import { Expose, Type } from "class-transformer";

/**
 * UsableSubnetwork resource returns the subnetwork name, its associated network and the primary CIDR range.
 */
export class UsableSubnetwork extends SpeakeasyBase {
  /**
   * The range of internal addresses that are owned by this subnetwork.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipCidrRange" })
  ipCidrRange?: string;

  /**
   * Network Name. Example: projects/my-project/global/networks/my-network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Secondary IP ranges.
   */
  @SpeakeasyMetadata({ elemType: UsableSubnetworkSecondaryRange })
  @Expose({ name: "secondaryIpRanges" })
  @Type(() => UsableSubnetworkSecondaryRange)
  secondaryIpRanges?: UsableSubnetworkSecondaryRange[];

  /**
   * A human readable status message representing the reasons for cases where the caller cannot use the secondary ranges under the subnet. For example if the secondary_ip_ranges is empty due to a permission issue, an insufficient permission message will be given by status_message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  /**
   * Subnetwork Name. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnetwork" })
  subnetwork?: string;
}
