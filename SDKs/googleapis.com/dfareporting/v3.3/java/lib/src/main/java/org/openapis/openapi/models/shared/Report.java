/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Report - Represents a Report resource.
 */
public class Report {
    /**
     * The account ID to which this report belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public Report withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The report criteria for a report of type "STANDARD".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("criteria")
    public ReportCriteria criteria;
    public Report withCriteria(ReportCriteria criteria) {
        this.criteria = criteria;
        return this;
    }
    
    /**
     * The report criteria for a report of type "CROSS_DIMENSION_REACH".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("crossDimensionReachCriteria")
    public ReportCrossDimensionReachCriteria crossDimensionReachCriteria;
    public Report withCrossDimensionReachCriteria(ReportCrossDimensionReachCriteria crossDimensionReachCriteria) {
        this.crossDimensionReachCriteria = crossDimensionReachCriteria;
        return this;
    }
    
    /**
     * The report's email delivery settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery")
    public ReportDelivery delivery;
    public Report withDelivery(ReportDelivery delivery) {
        this.delivery = delivery;
        return this;
    }
    
    /**
     * The eTag of this response for caching purposes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Report withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The filename used when generating report files for this report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;
    public Report withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * The report criteria for a report of type "FLOODLIGHT".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floodlightCriteria")
    public ReportFloodlightCriteria floodlightCriteria;
    public Report withFloodlightCriteria(ReportFloodlightCriteria floodlightCriteria) {
        this.floodlightCriteria = floodlightCriteria;
        return this;
    }
    
    /**
     * The output format of the report. If not specified, default format is "CSV". Note that the actual format in the completed report file might differ if for instance the report's size exceeds the format's capabilities. "CSV" will then be the fallback format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    public ReportFormatEnum format;
    public Report withFormat(ReportFormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * The unique ID identifying this report resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Report withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The kind of resource this is, in this case dfareporting#report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Report withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The timestamp (in milliseconds since epoch) of when this report was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModifiedTime")
    public String lastModifiedTime;
    public Report withLastModifiedTime(String lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    /**
     * The name of the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Report withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The user profile id of the owner of this report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerProfileId")
    public String ownerProfileId;
    public Report withOwnerProfileId(String ownerProfileId) {
        this.ownerProfileId = ownerProfileId;
        return this;
    }
    
    /**
     * The report criteria for a report of type "PATH_TO_CONVERSION".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pathToConversionCriteria")
    public ReportPathToConversionCriteria pathToConversionCriteria;
    public Report withPathToConversionCriteria(ReportPathToConversionCriteria pathToConversionCriteria) {
        this.pathToConversionCriteria = pathToConversionCriteria;
        return this;
    }
    
    /**
     * The report criteria for a report of type "REACH".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reachCriteria")
    public ReportReachCriteria reachCriteria;
    public Report withReachCriteria(ReportReachCriteria reachCriteria) {
        this.reachCriteria = reachCriteria;
        return this;
    }
    
    /**
     * The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not "TODAY".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public ReportSchedule schedule;
    public Report withSchedule(ReportSchedule schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * The subaccount ID to which this report belongs if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subAccountId")
    public String subAccountId;
    public Report withSubAccountId(String subAccountId) {
        this.subAccountId = subAccountId;
        return this;
    }
    
    /**
     * The type of the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public ReportTypeEnum type;
    public Report withType(ReportTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
