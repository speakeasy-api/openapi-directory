// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesSpaceIDFoldersIDPayslipsMultipartSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesSpaceIDFoldersIDPayslipsMultipartPathParams struct {
	// Id of the folder employee
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum string

const (
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumCustomer    PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "customer"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumProvider    PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "provider"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumBank        PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "bank"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumCashWoucher PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "cashWoucher"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumFiscal      PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "fiscal"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumInsurance   PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "insurance"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumSocial      PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "social"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumOther       PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "other"
	PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnumPermanent   PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum = "permanent"
)

func (e *PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccounting struct {
	AccountedOn *string                                                                    `json:"AccountedOn,omitempty"`
	Workbook    *PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                                    `json:"YearMonth,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataFile struct {
	File    string `multipartForm:"name=File"`
	Content []byte `multipartForm:"content"`
}

// PostSpacesSpaceIDFoldersIDPayslipsMultipartFormData1 - Payslip to add (either DocumentId either (File,Name,Content64Encoded,Title) is mandatory)
type PostSpacesSpaceIDFoldersIDPayslipsMultipartFormData1 struct {
	Accounting            *PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataAccounting `multipartForm:"name=Accounting,json"`
	Author                *string                                                        `multipartForm:"name=Author"`
	Begin                 *string                                                        `multipartForm:"name=Begin"`
	Code                  *string                                                        `multipartForm:"name=Code"`
	Comment               *string                                                        `multipartForm:"name=Comment"`
	Date                  *string                                                        `multipartForm:"name=Date"`
	EmployeeContributions *float32                                                       `multipartForm:"name=EmployeeContributions"`
	EmployerContributions *float32                                                       `multipartForm:"name=EmployerContributions"`
	End                   *string                                                        `multipartForm:"name=End"`
	File                  PostSpacesSpaceIDFoldersIDPayslipsMultipartFormDataFile        `multipartForm:"file"`
	FixedGrossAmount      *float32                                                       `multipartForm:"name=FixedGrossAmount"`
	NetAmount             *float32                                                       `multipartForm:"name=NetAmount"`
	Title                 string                                                         `multipartForm:"name=Title"`
	TotalGrossAmount      *float32                                                       `multipartForm:"name=TotalGrossAmount"`
	Vacation              *float32                                                       `multipartForm:"name=Vacation"`
	VariableGrossAmount   *float32                                                       `multipartForm:"name=VariableGrossAmount"`
}

type PostSpacesSpaceIDFoldersIDPayslipsMultipartRequest struct {
	PathParams PostSpacesSpaceIDFoldersIDPayslipsMultipartPathParams
	// Payslip to add (either DocumentId either (File,Name,Content64Encoded,Title) is mandatory)
	Request  PostSpacesSpaceIDFoldersIDPayslipsMultipartFormData1 `request:"mediaType=multipart/form-data"`
	Security PostSpacesSpaceIDFoldersIDPayslipsMultipartSecurity
}

// PostSpacesSpaceIDFoldersIDPayslipsMultipart201ApplicationJSON - Id of document created
type PostSpacesSpaceIDFoldersIDPayslipsMultipart201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayslipsMultipartResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of document created
	PostSpacesSpaceIDFoldersIDPayslipsMultipart201ApplicationJSONObject *PostSpacesSpaceIDFoldersIDPayslipsMultipart201ApplicationJSON
}
