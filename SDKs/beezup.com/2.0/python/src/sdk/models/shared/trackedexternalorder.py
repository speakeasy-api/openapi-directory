"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import trackedexternalorderproduct as shared_trackedexternalorderproduct
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrackedExternalOrder:
    
    currency_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode') }})
    r"""The currency code <a href=\\"https://en.wikipedia.org/wiki/ISO_4217\\">(ISO 4217)</a>"""  
    merchant_order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantOrderId') }})
    r"""The merchant order identifier"""  
    payment_validated: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentValidated') }})
    r"""Indicate if the payment of this external order has been validated or not"""  
    total_amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalAmount') }})
    r"""The total amount of the external order"""  
    utc_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utcDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The utc date of the external order"""  
    products: Optional[list[shared_trackedexternalorderproduct.TrackedExternalOrderProduct]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('products'), 'exclude': lambda f: f is None }})
    r"""Can be null. The product list included in the external order"""  
    visitor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visitorId'), 'exclude': lambda f: f is None }})
    r"""Can be null. The visitor identifier of the external order"""  
    