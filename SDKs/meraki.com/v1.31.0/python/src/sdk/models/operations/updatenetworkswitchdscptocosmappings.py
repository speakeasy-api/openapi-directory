"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSwitchDscpToCosMappingsRequestBodyMappings:
    
    cos: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cos') }})
    r"""The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive."""  
    dscp: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dscp') }})
    r"""The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Label for the mapping (optional)."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSwitchDscpToCosMappingsRequestBody:
    
    mappings: list[UpdateNetworkSwitchDscpToCosMappingsRequestBodyMappings] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mappings') }})
    r"""An array of DSCP to CoS mappings. An empty array will reset the mappings to default."""  
    

@dataclasses.dataclass
class UpdateNetworkSwitchDscpToCosMappingsRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: UpdateNetworkSwitchDscpToCosMappingsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkSwitchDscpToCosMappingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_switch_dscp_to_cos_mappings_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    