// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SimulateAnAuthorizationOnACardRequest struct {
	Request shared.SimulateAnAuthorizationOnACardParameters `request:"mediaType=application/json"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnum = "429"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnumRateLimitedError SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON13 struct {
	Detail     string                                                           `json:"detail"`
	RetryAfter *int64                                                           `json:"retry_after,omitempty"`
	Status     SimulateAnAuthorizationOnACardDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                           `json:"title"`
	Type       SimulateAnAuthorizationOnACardDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnumFourHundredAndThree SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnum = "403"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnumPrivateFeatureError SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON12 struct {
	Detail string                                                           `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                           `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnumFourHundredAndFour SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnum = "404"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnumObjectNotFoundError SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON11 struct {
	Detail string                                                           `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                           `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnumFourHundred SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnum = "400"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnumMalformedRequestError SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON10 struct {
	Detail string                                                           `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                           `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnumFourHundred SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnum = "400"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnumInvalidParametersError SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                        `json:"errors,omitempty"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnumFourHundredAndNine SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnum = "409"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnumInvalidOperationError SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON8 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnumFourHundredAndOne SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnum = "401"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnumInvalidAPIKeyError SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON7 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnumFiveHundred SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnum = "500"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnumInternalServerError SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON6 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnumFourHundredAndThree SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnum = "403"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnumInsufficientPermissionsError SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON5 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnum = "422"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON4 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnumFourHundredAndNine SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnum = "409"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnumIdempotencyConflictError SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON3 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnumFourHundredAndThree SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnum = "403"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnumEnvironmentMismatchError SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON2 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnumFourHundredAndFour SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnum = "404"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnum string

const (
	SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type SimulateAnAuthorizationOnACardDefaultApplicationJSON1 struct {
	Detail string                                                          `json:"detail"`
	Status SimulateAnAuthorizationOnACardDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                          `json:"title"`
	Type   SimulateAnAuthorizationOnACardDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type SimulateAnAuthorizationOnACardResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Inbound Card Authorization Simulation Result
	InboundCardAuthorizationSimulationResult *shared.InboundCardAuthorizationSimulationResult
}
