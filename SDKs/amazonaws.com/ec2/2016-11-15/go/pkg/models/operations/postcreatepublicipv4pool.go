// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreatePublicIpv4PoolActionEnum
type POSTCreatePublicIpv4PoolActionEnum string

const (
	POSTCreatePublicIpv4PoolActionEnumCreatePublicIpv4Pool POSTCreatePublicIpv4PoolActionEnum = "CreatePublicIpv4Pool"
)

func (e POSTCreatePublicIpv4PoolActionEnum) ToPointer() *POSTCreatePublicIpv4PoolActionEnum {
	return &e
}

func (e *POSTCreatePublicIpv4PoolActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreatePublicIpv4Pool":
		*e = POSTCreatePublicIpv4PoolActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreatePublicIpv4PoolActionEnum: %v", v)
	}
}

// POSTCreatePublicIpv4PoolVersionEnum
type POSTCreatePublicIpv4PoolVersionEnum string

const (
	POSTCreatePublicIpv4PoolVersionEnumTwoThousandAndSixteen1115 POSTCreatePublicIpv4PoolVersionEnum = "2016-11-15"
)

func (e POSTCreatePublicIpv4PoolVersionEnum) ToPointer() *POSTCreatePublicIpv4PoolVersionEnum {
	return &e
}

func (e *POSTCreatePublicIpv4PoolVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTCreatePublicIpv4PoolVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreatePublicIpv4PoolVersionEnum: %v", v)
	}
}

type POSTCreatePublicIpv4PoolRequest struct {
	Action            POSTCreatePublicIpv4PoolActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                              `request:"mediaType=text/xml"`
	Version           POSTCreatePublicIpv4PoolVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreatePublicIpv4PoolResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
