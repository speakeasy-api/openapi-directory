"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import classdetails as shared_classdetails
from ..shared import flaterrorresponse as shared_flaterrorresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class ListClassesSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class ListClassesStateEnum(str, Enum):
    r"""Filter the classes by state"""
    ACTIVE = 'active'
    INACTIVE = 'inactive'
    ARCHIVED = 'archived'


@dataclasses.dataclass
class ListClassesRequest:
    
    state: Optional[ListClassesStateEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""Filter the classes by state"""  
    

@dataclasses.dataclass
class ListClassesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    class_details: Optional[list[shared_classdetails.ClassDetails]] = dataclasses.field(default=None)
    r"""The list of classes"""  
    flat_error_response: Optional[shared_flaterrorresponse.FlatErrorResponse] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    