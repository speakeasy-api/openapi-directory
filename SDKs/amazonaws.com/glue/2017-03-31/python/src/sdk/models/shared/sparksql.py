"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import glueschema as shared_glueschema
from ..shared import sqlalias as shared_sqlalias
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SparkSQL:
    r"""Specifies a transform where you enter a SQL query using Spark SQL syntax to transform the data. The output is a single <code>DynamicFrame</code>."""
    
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    sql_aliases: list[shared_sqlalias.SQLAlias] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqlAliases') }})  
    sql_query: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqlQuery') }})  
    output_schemas: Optional[list[shared_glueschema.GlueSchema]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputSchemas'), 'exclude': lambda f: f is None }})  
    