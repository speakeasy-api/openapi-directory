/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NetworkConfig - Network related configurations.
 */
public class NetworkConfig {
    /**
     * Allows the TPU node to send and receive packets with non-matching destination or source IPs. This is required if you plan to use the TPU workers to forward routes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canIpForward")
    public Boolean canIpForward;

    public NetworkConfig withCanIpForward(Boolean canIpForward) {
        this.canIpForward = canIpForward;
        return this;
    }
    
    /**
     * Indicates that external IP addresses would be associated with the TPU workers. If set to false, the specified subnetwork or network should have Private Google Access enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableExternalIps")
    public Boolean enableExternalIps;

    public NetworkConfig withEnableExternalIps(Boolean enableExternalIps) {
        this.enableExternalIps = enableExternalIps;
        return this;
    }
    
    /**
     * The name of the network for the TPU node. It must be a preexisting Google Compute Engine network. If none is provided, "default" will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public NetworkConfig withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The name of the subnetwork for the TPU node. It must be a preexisting Google Compute Engine subnetwork. If none is provided, "default" will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;

    public NetworkConfig withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    public NetworkConfig(){}
}
