// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplicationJobStateEnum string

const (
	ReplicationJobStateEnumPending         ReplicationJobStateEnum = "PENDING"
	ReplicationJobStateEnumActive          ReplicationJobStateEnum = "ACTIVE"
	ReplicationJobStateEnumFailed          ReplicationJobStateEnum = "FAILED"
	ReplicationJobStateEnumDeleting        ReplicationJobStateEnum = "DELETING"
	ReplicationJobStateEnumDeleted         ReplicationJobStateEnum = "DELETED"
	ReplicationJobStateEnumCompleted       ReplicationJobStateEnum = "COMPLETED"
	ReplicationJobStateEnumPausedOnFailure ReplicationJobStateEnum = "PAUSED_ON_FAILURE"
	ReplicationJobStateEnumFailing         ReplicationJobStateEnum = "FAILING"
)

func (e ReplicationJobStateEnum) ToPointer() *ReplicationJobStateEnum {
	return &e
}

func (e *ReplicationJobStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "PAUSED_ON_FAILURE":
		fallthrough
	case "FAILING":
		*e = ReplicationJobStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplicationJobStateEnum: %v", v)
	}
}
