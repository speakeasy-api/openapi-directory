/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetReportsEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=deviceId",
  })
  deviceId?: number[];

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  from: Date;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=groupId",
  })
  groupId?: number[];

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  to: Date;

  /**
   * % can be used to return events of all types
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=type" })
  type?: string[];
}

export class GetReportsEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.Event })
  events?: shared.Event[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
