// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScanRunWarningTraceCodeEnum - Indicates the warning code.
type ScanRunWarningTraceCodeEnum string

const (
	ScanRunWarningTraceCodeEnumCodeUnspecified                  ScanRunWarningTraceCodeEnum = "CODE_UNSPECIFIED"
	ScanRunWarningTraceCodeEnumInsufficientCrawlResults         ScanRunWarningTraceCodeEnum = "INSUFFICIENT_CRAWL_RESULTS"
	ScanRunWarningTraceCodeEnumTooManyCrawlResults              ScanRunWarningTraceCodeEnum = "TOO_MANY_CRAWL_RESULTS"
	ScanRunWarningTraceCodeEnumTooManyFuzzTasks                 ScanRunWarningTraceCodeEnum = "TOO_MANY_FUZZ_TASKS"
	ScanRunWarningTraceCodeEnumBlockedByIap                     ScanRunWarningTraceCodeEnum = "BLOCKED_BY_IAP"
	ScanRunWarningTraceCodeEnumNoStartingURLFoundForManagedScan ScanRunWarningTraceCodeEnum = "NO_STARTING_URL_FOUND_FOR_MANAGED_SCAN"
)

func (e *ScanRunWarningTraceCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "INSUFFICIENT_CRAWL_RESULTS":
		fallthrough
	case "TOO_MANY_CRAWL_RESULTS":
		fallthrough
	case "TOO_MANY_FUZZ_TASKS":
		fallthrough
	case "BLOCKED_BY_IAP":
		fallthrough
	case "NO_STARTING_URL_FOUND_FOR_MANAGED_SCAN":
		*e = ScanRunWarningTraceCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanRunWarningTraceCodeEnum: %s", s)
	}
}

// ScanRunWarningTrace - Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTrace struct {
	// Indicates the warning code.
	Code *ScanRunWarningTraceCodeEnum `json:"code,omitempty"`
}
