// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAuthorizeDBSecurityGroupIngressActionEnum
type GETAuthorizeDBSecurityGroupIngressActionEnum string

const (
	GETAuthorizeDBSecurityGroupIngressActionEnumAuthorizeDbSecurityGroupIngress GETAuthorizeDBSecurityGroupIngressActionEnum = "AuthorizeDBSecurityGroupIngress"
)

func (e *GETAuthorizeDBSecurityGroupIngressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AuthorizeDBSecurityGroupIngress":
		*e = GETAuthorizeDBSecurityGroupIngressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAuthorizeDBSecurityGroupIngressActionEnum: %s", s)
	}
}

// GETAuthorizeDBSecurityGroupIngressVersionEnum
type GETAuthorizeDBSecurityGroupIngressVersionEnum string

const (
	GETAuthorizeDBSecurityGroupIngressVersionEnumTwoThousandAndThirteen0110 GETAuthorizeDBSecurityGroupIngressVersionEnum = "2013-01-10"
)

func (e *GETAuthorizeDBSecurityGroupIngressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-10":
		*e = GETAuthorizeDBSecurityGroupIngressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAuthorizeDBSecurityGroupIngressVersionEnum: %s", s)
	}
}

type GETAuthorizeDBSecurityGroupIngressQueryParams struct {
	Action                  GETAuthorizeDBSecurityGroupIngressActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Cidrip                  *string                                       `queryParam:"style=form,explode=true,name=CIDRIP"`
	DBSecurityGroupName     string                                        `queryParam:"style=form,explode=true,name=DBSecurityGroupName"`
	Ec2SecurityGroupID      *string                                       `queryParam:"style=form,explode=true,name=EC2SecurityGroupId"`
	Ec2SecurityGroupName    *string                                       `queryParam:"style=form,explode=true,name=EC2SecurityGroupName"`
	Ec2SecurityGroupOwnerID *string                                       `queryParam:"style=form,explode=true,name=EC2SecurityGroupOwnerId"`
	Version                 GETAuthorizeDBSecurityGroupIngressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETAuthorizeDBSecurityGroupIngressHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAuthorizeDBSecurityGroupIngressRequest struct {
	QueryParams GETAuthorizeDBSecurityGroupIngressQueryParams
	Headers     GETAuthorizeDBSecurityGroupIngressHeaders
}

type GETAuthorizeDBSecurityGroupIngressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
