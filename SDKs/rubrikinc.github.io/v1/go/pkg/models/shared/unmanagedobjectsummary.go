// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UnmanagedObjectSummaryObjectTypeEnum - The type of the unmanaged object. This may be VirtualMachine, MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, NutanixVirtualMachine, Ec2Instance or StorageArrayVolumeGroup.
type UnmanagedObjectSummaryObjectTypeEnum string

const (
	UnmanagedObjectSummaryObjectTypeEnumVirtualMachine          UnmanagedObjectSummaryObjectTypeEnum = "VirtualMachine"
	UnmanagedObjectSummaryObjectTypeEnumMssqlDatabase           UnmanagedObjectSummaryObjectTypeEnum = "MssqlDatabase"
	UnmanagedObjectSummaryObjectTypeEnumLinuxFileset            UnmanagedObjectSummaryObjectTypeEnum = "LinuxFileset"
	UnmanagedObjectSummaryObjectTypeEnumWindowsFileset          UnmanagedObjectSummaryObjectTypeEnum = "WindowsFileset"
	UnmanagedObjectSummaryObjectTypeEnumShareFileset            UnmanagedObjectSummaryObjectTypeEnum = "ShareFileset"
	UnmanagedObjectSummaryObjectTypeEnumNutanixVirtualMachine   UnmanagedObjectSummaryObjectTypeEnum = "NutanixVirtualMachine"
	UnmanagedObjectSummaryObjectTypeEnumHypervVirtualMachine    UnmanagedObjectSummaryObjectTypeEnum = "HypervVirtualMachine"
	UnmanagedObjectSummaryObjectTypeEnumManagedVolume           UnmanagedObjectSummaryObjectTypeEnum = "ManagedVolume"
	UnmanagedObjectSummaryObjectTypeEnumEc2Instance             UnmanagedObjectSummaryObjectTypeEnum = "Ec2Instance"
	UnmanagedObjectSummaryObjectTypeEnumStorageArrayVolumeGroup UnmanagedObjectSummaryObjectTypeEnum = "StorageArrayVolumeGroup"
	UnmanagedObjectSummaryObjectTypeEnumVcdVapp                 UnmanagedObjectSummaryObjectTypeEnum = "VcdVapp"
	UnmanagedObjectSummaryObjectTypeEnumLinuxHost               UnmanagedObjectSummaryObjectTypeEnum = "LinuxHost"
	UnmanagedObjectSummaryObjectTypeEnumWindowsHost             UnmanagedObjectSummaryObjectTypeEnum = "WindowsHost"
	UnmanagedObjectSummaryObjectTypeEnumOracleDatabase          UnmanagedObjectSummaryObjectTypeEnum = "OracleDatabase"
	UnmanagedObjectSummaryObjectTypeEnumVolumeGroup             UnmanagedObjectSummaryObjectTypeEnum = "VolumeGroup"
	UnmanagedObjectSummaryObjectTypeEnumAppBlueprint            UnmanagedObjectSummaryObjectTypeEnum = "AppBlueprint"
)

func (e UnmanagedObjectSummaryObjectTypeEnum) ToPointer() *UnmanagedObjectSummaryObjectTypeEnum {
	return &e
}

func (e *UnmanagedObjectSummaryObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VirtualMachine":
		fallthrough
	case "MssqlDatabase":
		fallthrough
	case "LinuxFileset":
		fallthrough
	case "WindowsFileset":
		fallthrough
	case "ShareFileset":
		fallthrough
	case "NutanixVirtualMachine":
		fallthrough
	case "HypervVirtualMachine":
		fallthrough
	case "ManagedVolume":
		fallthrough
	case "Ec2Instance":
		fallthrough
	case "StorageArrayVolumeGroup":
		fallthrough
	case "VcdVapp":
		fallthrough
	case "LinuxHost":
		fallthrough
	case "WindowsHost":
		fallthrough
	case "OracleDatabase":
		fallthrough
	case "VolumeGroup":
		fallthrough
	case "AppBlueprint":
		*e = UnmanagedObjectSummaryObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnmanagedObjectSummaryObjectTypeEnum: %v", v)
	}
}

// UnmanagedObjectSummaryUnmanagedStatusEnum - Unmanaged Status of this object. Protected means that this object is still protected by an SLA Policy. Unprotected means that this object has become unprotected. Relic means that Rubrik has lost contact with this object.
type UnmanagedObjectSummaryUnmanagedStatusEnum string

const (
	UnmanagedObjectSummaryUnmanagedStatusEnumProtected         UnmanagedObjectSummaryUnmanagedStatusEnum = "Protected"
	UnmanagedObjectSummaryUnmanagedStatusEnumRelic             UnmanagedObjectSummaryUnmanagedStatusEnum = "Relic"
	UnmanagedObjectSummaryUnmanagedStatusEnumUnprotected       UnmanagedObjectSummaryUnmanagedStatusEnum = "Unprotected"
	UnmanagedObjectSummaryUnmanagedStatusEnumReplicatedRelic   UnmanagedObjectSummaryUnmanagedStatusEnum = "ReplicatedRelic"
	UnmanagedObjectSummaryUnmanagedStatusEnumRemoteUnprotected UnmanagedObjectSummaryUnmanagedStatusEnum = "RemoteUnprotected"
)

func (e UnmanagedObjectSummaryUnmanagedStatusEnum) ToPointer() *UnmanagedObjectSummaryUnmanagedStatusEnum {
	return &e
}

func (e *UnmanagedObjectSummaryUnmanagedStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Protected":
		fallthrough
	case "Relic":
		fallthrough
	case "Unprotected":
		fallthrough
	case "ReplicatedRelic":
		fallthrough
	case "RemoteUnprotected":
		*e = UnmanagedObjectSummaryUnmanagedStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnmanagedObjectSummaryUnmanagedStatusEnum: %v", v)
	}
}

type UnmanagedObjectSummary struct {
	// Storage being taken up in the archival location by unmanaged snapshots.
	ArchiveStorage int64 `json:"archiveStorage"`
	// Number of policy-based snapshots to retain for the specified object.
	AutoSnapshotCount int64 `json:"autoSnapshotCount"`
	// A boolean that specifies whether any of the snapshots for this object are being retained by a SLA  at any location.
	//
	HasSnapshotsWithPolicy bool   `json:"hasSnapshotsWithPolicy"`
	ID                     string `json:"id"`
	// A boolean that specifies if the object is remote or local. When this value is true, the object is remote.
	IsRemote *bool `json:"isRemote,omitempty"`
	// Storage being taken up on the local cluster by unmanaged snapshots.
	LocalStorage int64 `json:"localStorage"`
	// Number of on-demand snapshots and snapshots retrieved from an archival location for specified object.
	ManualSnapshotCount int64  `json:"manualSnapshotCount"`
	Name                string `json:"name"`
	// The type of the unmanaged object. This may be VirtualMachine, MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, NutanixVirtualMachine, Ec2Instance or StorageArrayVolumeGroup.
	ObjectType       UnmanagedObjectSummaryObjectTypeEnum `json:"objectType"`
	PendingSLADomain *ManagedObjectPendingSLAInfo         `json:"pendingSlaDomain,omitempty"`
	// Brief info of all the objects in the physical path to this Object.
	PhysicalLocation []LocationPathPoint    `json:"physicalLocation"`
	RecoveryInfo     *SnappableRecoveryInfo `json:"recoveryInfo,omitempty"`
	// ID assigned to an SLA retention policy.
	RetentionSLADomainID string `json:"retentionSlaDomainId"`
	// Name of an SLA retention policy.
	RetentionSLADomainName string `json:"retentionSlaDomainName"`
	// Optional field with the ID assigned to an SLA Domain by Polaris.
	RetentionSLADomainPolarisManagedID *string `json:"retentionSlaDomainPolarisManagedId,omitempty"`
	// Unmanaged Status of this object. Protected means that this object is still protected by an SLA Policy. Unprotected means that this object has become unprotected. Relic means that Rubrik has lost contact with this object.
	UnmanagedStatus UnmanagedObjectSummaryUnmanagedStatusEnum `json:"unmanagedStatus"`
}
