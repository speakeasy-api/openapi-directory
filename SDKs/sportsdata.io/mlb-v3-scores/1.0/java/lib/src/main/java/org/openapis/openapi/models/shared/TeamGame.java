/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamGame {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AtBats")
    public Double atBats;

    public TeamGame withAtBats(Double atBats) {
        this.atBats = atBats;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BallsInPlay")
    public Double ballsInPlay;

    public TeamGame withBallsInPlay(Double ballsInPlay) {
        this.ballsInPlay = ballsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingAverage")
    public Double battingAverage;

    public TeamGame withBattingAverage(Double battingAverage) {
        this.battingAverage = battingAverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingAverageOnBallsInPlay")
    public Double battingAverageOnBallsInPlay;

    public TeamGame withBattingAverageOnBallsInPlay(Double battingAverageOnBallsInPlay) {
        this.battingAverageOnBallsInPlay = battingAverageOnBallsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingOrderConfirmed")
    public Boolean battingOrderConfirmed;

    public TeamGame withBattingOrderConfirmed(Boolean battingOrderConfirmed) {
        this.battingOrderConfirmed = battingOrderConfirmed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CaughtStealing")
    public Double caughtStealing;

    public TeamGame withCaughtStealing(Double caughtStealing) {
        this.caughtStealing = caughtStealing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public TeamGame withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public TeamGame withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DoublePlays")
    public Double doublePlays;

    public TeamGame withDoublePlays(Double doublePlays) {
        this.doublePlays = doublePlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Doubles")
    public Double doubles;

    public TeamGame withDoubles(Double doubles) {
        this.doubles = doubles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EarnedRunAverage")
    public Double earnedRunAverage;

    public TeamGame withEarnedRunAverage(Double earnedRunAverage) {
        this.earnedRunAverage = earnedRunAverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Errors")
    public Double errors;

    public TeamGame withErrors(Double errors) {
        this.errors = errors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;

    public TeamGame withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsBatting")
    public Double fantasyPointsBatting;

    public TeamGame withFantasyPointsBatting(Double fantasyPointsBatting) {
        this.fantasyPointsBatting = fantasyPointsBatting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;

    public TeamGame withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;

    public TeamGame withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFantasyDraft")
    public Double fantasyPointsFantasyDraft;

    public TeamGame withFantasyPointsFantasyDraft(Double fantasyPointsFantasyDraft) {
        this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsPitching")
    public Double fantasyPointsPitching;

    public TeamGame withFantasyPointsPitching(Double fantasyPointsPitching) {
        this.fantasyPointsPitching = fantasyPointsPitching;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;

    public TeamGame withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldingIndependentPitching")
    public Double fieldingIndependentPitching;

    public TeamGame withFieldingIndependentPitching(Double fieldingIndependentPitching) {
        this.fieldingIndependentPitching = fieldingIndependentPitching;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FlyOuts")
    public Double flyOuts;

    public TeamGame withFlyOuts(Double flyOuts) {
        this.flyOuts = flyOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;

    public TeamGame withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;

    public TeamGame withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;

    public TeamGame withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalOpponentID")
    public Long globalOpponentID;

    public TeamGame withGlobalOpponentID(Long globalOpponentID) {
        this.globalOpponentID = globalOpponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;

    public TeamGame withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GrandSlams")
    public Double grandSlams;

    public TeamGame withGrandSlams(Double grandSlams) {
        this.grandSlams = grandSlams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GroundIntoDoublePlay")
    public Double groundIntoDoublePlay;

    public TeamGame withGroundIntoDoublePlay(Double groundIntoDoublePlay) {
        this.groundIntoDoublePlay = groundIntoDoublePlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GroundOuts")
    public Double groundOuts;

    public TeamGame withGroundOuts(Double groundOuts) {
        this.groundOuts = groundOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HitByPitch")
    public Double hitByPitch;

    public TeamGame withHitByPitch(Double hitByPitch) {
        this.hitByPitch = hitByPitch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Hits")
    public Double hits;

    public TeamGame withHits(Double hits) {
        this.hits = hits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;

    public TeamGame withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeRuns")
    public Double homeRuns;

    public TeamGame withHomeRuns(Double homeRuns) {
        this.homeRuns = homeRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InningsPitchedDecimal")
    public Double inningsPitchedDecimal;

    public TeamGame withInningsPitchedDecimal(Double inningsPitchedDecimal) {
        this.inningsPitchedDecimal = inningsPitchedDecimal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InningsPitchedFull")
    public Double inningsPitchedFull;

    public TeamGame withInningsPitchedFull(Double inningsPitchedFull) {
        this.inningsPitchedFull = inningsPitchedFull;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InningsPitchedOuts")
    public Double inningsPitchedOuts;

    public TeamGame withInningsPitchedOuts(Double inningsPitchedOuts) {
        this.inningsPitchedOuts = inningsPitchedOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntentionalWalks")
    public Double intentionalWalks;

    public TeamGame withIntentionalWalks(Double intentionalWalks) {
        this.intentionalWalks = intentionalWalks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsGameOver")
    public Boolean isGameOver;

    public TeamGame withIsGameOver(Boolean isGameOver) {
        this.isGameOver = isGameOver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsolatedPower")
    public Double isolatedPower;

    public TeamGame withIsolatedPower(Double isolatedPower) {
        this.isolatedPower = isolatedPower;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LeftOnBase")
    public Double leftOnBase;

    public TeamGame withLeftOnBase(Double leftOnBase) {
        this.leftOnBase = leftOnBase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LineOuts")
    public Double lineOuts;

    public TeamGame withLineOuts(Double lineOuts) {
        this.lineOuts = lineOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Losses")
    public Double losses;

    public TeamGame withLosses(Double losses) {
        this.losses = losses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public TeamGame withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnBasePercentage")
    public Double onBasePercentage;

    public TeamGame withOnBasePercentage(Double onBasePercentage) {
        this.onBasePercentage = onBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnBasePlusSlugging")
    public Double onBasePlusSlugging;

    public TeamGame withOnBasePlusSlugging(Double onBasePlusSlugging) {
        this.onBasePlusSlugging = onBasePlusSlugging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;

    public TeamGame withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;

    public TeamGame withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Outs")
    public Double outs;

    public TeamGame withOuts(Double outs) {
        this.outs = outs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchesSeen")
    public Double pitchesSeen;

    public TeamGame withPitchesSeen(Double pitchesSeen) {
        this.pitchesSeen = pitchesSeen;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchesThrown")
    public Double pitchesThrown;

    public TeamGame withPitchesThrown(Double pitchesThrown) {
        this.pitchesThrown = pitchesThrown;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchesThrownStrikes")
    public Double pitchesThrownStrikes;

    public TeamGame withPitchesThrownStrikes(Double pitchesThrownStrikes) {
        this.pitchesThrownStrikes = pitchesThrownStrikes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBallsInPlay")
    public Double pitchingBallsInPlay;

    public TeamGame withPitchingBallsInPlay(Double pitchingBallsInPlay) {
        this.pitchingBallsInPlay = pitchingBallsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBattingAverageAgainst")
    public Double pitchingBattingAverageAgainst;

    public TeamGame withPitchingBattingAverageAgainst(Double pitchingBattingAverageAgainst) {
        this.pitchingBattingAverageAgainst = pitchingBattingAverageAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBattingAverageOnBallsInPlay")
    public Double pitchingBattingAverageOnBallsInPlay;

    public TeamGame withPitchingBattingAverageOnBallsInPlay(Double pitchingBattingAverageOnBallsInPlay) {
        this.pitchingBattingAverageOnBallsInPlay = pitchingBattingAverageOnBallsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBlownSaves")
    public Double pitchingBlownSaves;

    public TeamGame withPitchingBlownSaves(Double pitchingBlownSaves) {
        this.pitchingBlownSaves = pitchingBlownSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingCatchersInterference")
    public Double pitchingCatchersInterference;

    public TeamGame withPitchingCatchersInterference(Double pitchingCatchersInterference) {
        this.pitchingCatchersInterference = pitchingCatchersInterference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingCompleteGames")
    public Double pitchingCompleteGames;

    public TeamGame withPitchingCompleteGames(Double pitchingCompleteGames) {
        this.pitchingCompleteGames = pitchingCompleteGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingDoublePlays")
    public Double pitchingDoublePlays;

    public TeamGame withPitchingDoublePlays(Double pitchingDoublePlays) {
        this.pitchingDoublePlays = pitchingDoublePlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingDoubles")
    public Double pitchingDoubles;

    public TeamGame withPitchingDoubles(Double pitchingDoubles) {
        this.pitchingDoubles = pitchingDoubles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingEarnedRuns")
    public Double pitchingEarnedRuns;

    public TeamGame withPitchingEarnedRuns(Double pitchingEarnedRuns) {
        this.pitchingEarnedRuns = pitchingEarnedRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingFlyOuts")
    public Double pitchingFlyOuts;

    public TeamGame withPitchingFlyOuts(Double pitchingFlyOuts) {
        this.pitchingFlyOuts = pitchingFlyOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingGrandSlams")
    public Double pitchingGrandSlams;

    public TeamGame withPitchingGrandSlams(Double pitchingGrandSlams) {
        this.pitchingGrandSlams = pitchingGrandSlams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingGroundIntoDoublePlay")
    public Double pitchingGroundIntoDoublePlay;

    public TeamGame withPitchingGroundIntoDoublePlay(Double pitchingGroundIntoDoublePlay) {
        this.pitchingGroundIntoDoublePlay = pitchingGroundIntoDoublePlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingGroundOuts")
    public Double pitchingGroundOuts;

    public TeamGame withPitchingGroundOuts(Double pitchingGroundOuts) {
        this.pitchingGroundOuts = pitchingGroundOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHitByPitch")
    public Double pitchingHitByPitch;

    public TeamGame withPitchingHitByPitch(Double pitchingHitByPitch) {
        this.pitchingHitByPitch = pitchingHitByPitch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHits")
    public Double pitchingHits;

    public TeamGame withPitchingHits(Double pitchingHits) {
        this.pitchingHits = pitchingHits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHolds")
    public Double pitchingHolds;

    public TeamGame withPitchingHolds(Double pitchingHolds) {
        this.pitchingHolds = pitchingHolds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHomeRuns")
    public Double pitchingHomeRuns;

    public TeamGame withPitchingHomeRuns(Double pitchingHomeRuns) {
        this.pitchingHomeRuns = pitchingHomeRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingInningStarted")
    public Long pitchingInningStarted;

    public TeamGame withPitchingInningStarted(Long pitchingInningStarted) {
        this.pitchingInningStarted = pitchingInningStarted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingIntentionalWalks")
    public Double pitchingIntentionalWalks;

    public TeamGame withPitchingIntentionalWalks(Double pitchingIntentionalWalks) {
        this.pitchingIntentionalWalks = pitchingIntentionalWalks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingLineOuts")
    public Double pitchingLineOuts;

    public TeamGame withPitchingLineOuts(Double pitchingLineOuts) {
        this.pitchingLineOuts = pitchingLineOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingNoHitters")
    public Double pitchingNoHitters;

    public TeamGame withPitchingNoHitters(Double pitchingNoHitters) {
        this.pitchingNoHitters = pitchingNoHitters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingOnBasePercentage")
    public Double pitchingOnBasePercentage;

    public TeamGame withPitchingOnBasePercentage(Double pitchingOnBasePercentage) {
        this.pitchingOnBasePercentage = pitchingOnBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingOnBasePlusSlugging")
    public Double pitchingOnBasePlusSlugging;

    public TeamGame withPitchingOnBasePlusSlugging(Double pitchingOnBasePlusSlugging) {
        this.pitchingOnBasePlusSlugging = pitchingOnBasePlusSlugging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingPerfectGames")
    public Double pitchingPerfectGames;

    public TeamGame withPitchingPerfectGames(Double pitchingPerfectGames) {
        this.pitchingPerfectGames = pitchingPerfectGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingPlateAppearances")
    public Double pitchingPlateAppearances;

    public TeamGame withPitchingPlateAppearances(Double pitchingPlateAppearances) {
        this.pitchingPlateAppearances = pitchingPlateAppearances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingPopOuts")
    public Double pitchingPopOuts;

    public TeamGame withPitchingPopOuts(Double pitchingPopOuts) {
        this.pitchingPopOuts = pitchingPopOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingQualityStarts")
    public Double pitchingQualityStarts;

    public TeamGame withPitchingQualityStarts(Double pitchingQualityStarts) {
        this.pitchingQualityStarts = pitchingQualityStarts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingReachedOnError")
    public Double pitchingReachedOnError;

    public TeamGame withPitchingReachedOnError(Double pitchingReachedOnError) {
        this.pitchingReachedOnError = pitchingReachedOnError;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingRuns")
    public Double pitchingRuns;

    public TeamGame withPitchingRuns(Double pitchingRuns) {
        this.pitchingRuns = pitchingRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSacrificeFlies")
    public Double pitchingSacrificeFlies;

    public TeamGame withPitchingSacrificeFlies(Double pitchingSacrificeFlies) {
        this.pitchingSacrificeFlies = pitchingSacrificeFlies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSacrifices")
    public Double pitchingSacrifices;

    public TeamGame withPitchingSacrifices(Double pitchingSacrifices) {
        this.pitchingSacrifices = pitchingSacrifices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingShutOuts")
    public Double pitchingShutOuts;

    public TeamGame withPitchingShutOuts(Double pitchingShutOuts) {
        this.pitchingShutOuts = pitchingShutOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSingles")
    public Double pitchingSingles;

    public TeamGame withPitchingSingles(Double pitchingSingles) {
        this.pitchingSingles = pitchingSingles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSluggingPercentage")
    public Double pitchingSluggingPercentage;

    public TeamGame withPitchingSluggingPercentage(Double pitchingSluggingPercentage) {
        this.pitchingSluggingPercentage = pitchingSluggingPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingStrikeouts")
    public Double pitchingStrikeouts;

    public TeamGame withPitchingStrikeouts(Double pitchingStrikeouts) {
        this.pitchingStrikeouts = pitchingStrikeouts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingStrikeoutsPerNineInnings")
    public Double pitchingStrikeoutsPerNineInnings;

    public TeamGame withPitchingStrikeoutsPerNineInnings(Double pitchingStrikeoutsPerNineInnings) {
        this.pitchingStrikeoutsPerNineInnings = pitchingStrikeoutsPerNineInnings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingTotalBases")
    public Double pitchingTotalBases;

    public TeamGame withPitchingTotalBases(Double pitchingTotalBases) {
        this.pitchingTotalBases = pitchingTotalBases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingTriples")
    public Double pitchingTriples;

    public TeamGame withPitchingTriples(Double pitchingTriples) {
        this.pitchingTriples = pitchingTriples;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingWalks")
    public Double pitchingWalks;

    public TeamGame withPitchingWalks(Double pitchingWalks) {
        this.pitchingWalks = pitchingWalks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingWalksPerNineInnings")
    public Double pitchingWalksPerNineInnings;

    public TeamGame withPitchingWalksPerNineInnings(Double pitchingWalksPerNineInnings) {
        this.pitchingWalksPerNineInnings = pitchingWalksPerNineInnings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingWeightedOnBasePercentage")
    public Double pitchingWeightedOnBasePercentage;

    public TeamGame withPitchingWeightedOnBasePercentage(Double pitchingWeightedOnBasePercentage) {
        this.pitchingWeightedOnBasePercentage = pitchingWeightedOnBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlateAppearances")
    public Double plateAppearances;

    public TeamGame withPlateAppearances(Double plateAppearances) {
        this.plateAppearances = plateAppearances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PopOuts")
    public Double popOuts;

    public TeamGame withPopOuts(Double popOuts) {
        this.popOuts = popOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReachedOnError")
    public Double reachedOnError;

    public TeamGame withReachedOnError(Double reachedOnError) {
        this.reachedOnError = reachedOnError;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Runs")
    public Double runs;

    public TeamGame withRuns(Double runs) {
        this.runs = runs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunsBattedIn")
    public Double runsBattedIn;

    public TeamGame withRunsBattedIn(Double runsBattedIn) {
        this.runsBattedIn = runsBattedIn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SacrificeFlies")
    public Double sacrificeFlies;

    public TeamGame withSacrificeFlies(Double sacrificeFlies) {
        this.sacrificeFlies = sacrificeFlies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sacrifices")
    public Double sacrifices;

    public TeamGame withSacrifices(Double sacrifices) {
        this.sacrifices = sacrifices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Saves")
    public Double saves;

    public TeamGame withSaves(Double saves) {
        this.saves = saves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public TeamGame withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public TeamGame withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Singles")
    public Double singles;

    public TeamGame withSingles(Double singles) {
        this.singles = singles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SluggingPercentage")
    public Double sluggingPercentage;

    public TeamGame withSluggingPercentage(Double sluggingPercentage) {
        this.sluggingPercentage = sluggingPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatID")
    public Long statID;

    public TeamGame withStatID(Long statID) {
        this.statID = statID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StolenBases")
    public Double stolenBases;

    public TeamGame withStolenBases(Double stolenBases) {
        this.stolenBases = stolenBases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Strikeouts")
    public Double strikeouts;

    public TeamGame withStrikeouts(Double strikeouts) {
        this.strikeouts = strikeouts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubstituteBattingOrder")
    public Long substituteBattingOrder;

    public TeamGame withSubstituteBattingOrder(Long substituteBattingOrder) {
        this.substituteBattingOrder = substituteBattingOrder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubstituteBattingOrderSequence")
    public Long substituteBattingOrderSequence;

    public TeamGame withSubstituteBattingOrderSequence(Long substituteBattingOrderSequence) {
        this.substituteBattingOrderSequence = substituteBattingOrderSequence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public TeamGame withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;

    public TeamGame withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalBases")
    public Double totalBases;

    public TeamGame withTotalBases(Double totalBases) {
        this.totalBases = totalBases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalOutsPitched")
    public Double totalOutsPitched;

    public TeamGame withTotalOutsPitched(Double totalOutsPitched) {
        this.totalOutsPitched = totalOutsPitched;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Triples")
    public Double triples;

    public TeamGame withTriples(Double triples) {
        this.triples = triples;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public TeamGame withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Walks")
    public Double walks;

    public TeamGame withWalks(Double walks) {
        this.walks = walks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WalksHitsPerInningsPitched")
    public Double walksHitsPerInningsPitched;

    public TeamGame withWalksHitsPerInningsPitched(Double walksHitsPerInningsPitched) {
        this.walksHitsPerInningsPitched = walksHitsPerInningsPitched;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WeightedOnBasePercentage")
    public Double weightedOnBasePercentage;

    public TeamGame withWeightedOnBasePercentage(Double weightedOnBasePercentage) {
        this.weightedOnBasePercentage = weightedOnBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Wins")
    public Double wins;

    public TeamGame withWins(Double wins) {
        this.wins = wins;
        return this;
    }
    
    public TeamGame(){}
}
