<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RecognitionMetadata - Description of audio data to be recognized.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RecognitionMetadata
{
    /**
     * Description of the content. Eg. "Recordings of federal supreme court hearings from 2012".
     * 
     * @var ?string $audioTopic
     */
	#[\JMS\Serializer\Annotation\SerializedName('audioTopic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $audioTopic = null;
    
    /**
     * The industry vertical to which this speech recognition request most closely applies. This is most indicative of the topics contained in the audio. Use the 6-digit NAICS code to identify the industry vertical - see https://www.naics.com/search/.
     * 
     * @var ?int $industryNaicsCodeOfAudio
     */
	#[\JMS\Serializer\Annotation\SerializedName('industryNaicsCodeOfAudio')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $industryNaicsCodeOfAudio = null;
    
    /**
     * The use case most closely describing the audio content to be recognized.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataInteractionTypeEnum $interactionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('interactionType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataInteractionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecognitionMetadataInteractionTypeEnum $interactionType = null;
    
    /**
     * The audio type that most closely describes the audio being recognized.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataMicrophoneDistanceEnum $microphoneDistance
     */
	#[\JMS\Serializer\Annotation\SerializedName('microphoneDistance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataMicrophoneDistanceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecognitionMetadataMicrophoneDistanceEnum $microphoneDistance = null;
    
    /**
     * The original media the speech was recorded on.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataOriginalMediaTypeEnum $originalMediaType
     */
	#[\JMS\Serializer\Annotation\SerializedName('originalMediaType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataOriginalMediaTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecognitionMetadataOriginalMediaTypeEnum $originalMediaType = null;
    
    /**
     * Mime type of the original audio file. For example `audio/m4a`, `audio/x-alaw-basic`, `audio/mp3`, `audio/3gpp`. A list of possible audio mime types is maintained at http://www.iana.org/assignments/media-types/media-types.xhtml#audio
     * 
     * @var ?string $originalMimeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('originalMimeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalMimeType = null;
    
    /**
     * The device used to make the recording. Examples 'Nexus 5X' or 'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or 'Cardioid Microphone'.
     * 
     * @var ?string $recordingDeviceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('recordingDeviceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recordingDeviceName = null;
    
    /**
     * The type of device the speech was recorded with.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataRecordingDeviceTypeEnum $recordingDeviceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('recordingDeviceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecognitionMetadataRecordingDeviceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecognitionMetadataRecordingDeviceTypeEnum $recordingDeviceType = null;
    
	public function __construct()
	{
		$this->audioTopic = null;
		$this->industryNaicsCodeOfAudio = null;
		$this->interactionType = null;
		$this->microphoneDistance = null;
		$this->originalMediaType = null;
		$this->originalMimeType = null;
		$this->recordingDeviceName = null;
		$this->recordingDeviceType = null;
	}
}
