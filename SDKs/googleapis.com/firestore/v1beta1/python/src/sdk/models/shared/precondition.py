"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Precondition:
    r"""A precondition on a document, used for conditional operations."""
    
    exists: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exists'), 'exclude': lambda f: f is None }})
    r"""When set to `true`, the target document must exist. When set to `false`, the target document must not exist."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""When set, the target document must exist and have been last updated at that time. Timestamp must be microsecond aligned."""  
    