/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MarketplaceTargeting - Targeting represents different criteria that can be used to target inventory. For example, they can choose to target inventory only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.
 */
public class MarketplaceTargeting {
    /**
     * Represents Daypart targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("daypartTargeting")
    public DayPartTargeting daypartTargeting;

    public MarketplaceTargeting withDaypartTargeting(DayPartTargeting daypartTargeting) {
        this.daypartTargeting = daypartTargeting;
        return this;
    }
    
    /**
     * Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geoTargeting")
    public CriteriaTargeting geoTargeting;

    public MarketplaceTargeting withGeoTargeting(CriteriaTargeting geoTargeting) {
        this.geoTargeting = geoTargeting;
        return this;
    }
    
    /**
     * Represents the size of an ad unit that can be targeted on a bid request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventorySizeTargeting")
    public InventorySizeTargeting inventorySizeTargeting;

    public MarketplaceTargeting withInventorySizeTargeting(InventorySizeTargeting inventorySizeTargeting) {
        this.inventorySizeTargeting = inventorySizeTargeting;
        return this;
    }
    
    /**
     * Targeting of the inventory types a bid request can originate from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventoryTypeTargeting")
    public InventoryTypeTargeting inventoryTypeTargeting;

    public MarketplaceTargeting withInventoryTypeTargeting(InventoryTypeTargeting inventoryTypeTargeting) {
        this.inventoryTypeTargeting = inventoryTypeTargeting;
        return this;
    }
    
    /**
     * Represents targeting about where the ads can appear, for example, certain sites or mobile applications. Different placement targeting types will be logically OR'ed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placementTargeting")
    public PlacementTargeting placementTargeting;

    public MarketplaceTargeting withPlacementTargeting(PlacementTargeting placementTargeting) {
        this.placementTargeting = placementTargeting;
        return this;
    }
    
    /**
     * Represents targeting about various types of technology.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("technologyTargeting")
    public TechnologyTargeting technologyTargeting;

    public MarketplaceTargeting withTechnologyTargeting(TechnologyTargeting technologyTargeting) {
        this.technologyTargeting = technologyTargeting;
        return this;
    }
    
    /**
     * Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userListTargeting")
    public CriteriaTargeting userListTargeting;

    public MarketplaceTargeting withUserListTargeting(CriteriaTargeting userListTargeting) {
        this.userListTargeting = userListTargeting;
        return this;
    }
    
    /**
     * Represents targeting information about video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoTargeting")
    public VideoTargeting videoTargeting;

    public MarketplaceTargeting withVideoTargeting(VideoTargeting videoTargeting) {
        this.videoTargeting = videoTargeting;
        return this;
    }
    
    public MarketplaceTargeting(){}
}
