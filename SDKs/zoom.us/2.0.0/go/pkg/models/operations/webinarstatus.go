// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type WebinarStatusSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type WebinarStatusPathParams struct {
	// The webinar ID in "**long**" format(represented as int64 data type in JSON).
	WebinarID int64 `pathParam:"style=simple,explode=false,name=webinarId"`
}

type WebinarStatusApplicationJSONActionEnum string

const (
	WebinarStatusApplicationJSONActionEnumEnd WebinarStatusApplicationJSONActionEnum = "end"
)

func (e *WebinarStatusApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "end":
		*e = WebinarStatusApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebinarStatusApplicationJSONActionEnum: %s", s)
	}
}

type WebinarStatusApplicationJSON struct {
	Action *WebinarStatusApplicationJSONActionEnum `json:"action,omitempty"`
}

type WebinarStatusRequest struct {
	PathParams WebinarStatusPathParams
	Request    WebinarStatusApplicationJSON `request:"mediaType=application/json"`
	Security   WebinarStatusSecurity
}

type WebinarStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
