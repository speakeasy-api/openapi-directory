// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StorageBucketsInsertSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageBucketsInsertSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageBucketsInsertSecurity struct {
	Option1 *StorageBucketsInsertSecurityOption1 `security:"option"`
	Option2 *StorageBucketsInsertSecurityOption2 `security:"option"`
}

// StorageBucketsInsertProjectionEnum - Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
type StorageBucketsInsertProjectionEnum string

const (
	StorageBucketsInsertProjectionEnumFull  StorageBucketsInsertProjectionEnum = "full"
	StorageBucketsInsertProjectionEnumNoACL StorageBucketsInsertProjectionEnum = "noAcl"
)

func (e *StorageBucketsInsertProjectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "noAcl":
		*e = StorageBucketsInsertProjectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageBucketsInsertProjectionEnum: %s", s)
	}
}

type StorageBucketsInsertRequest struct {
	Bucket *shared.Bucket `request:"mediaType=application/json"`
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// A valid API project identifier.
	Project string `queryParam:"style=form,explode=true,name=project"`
	// Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
	Projection *StorageBucketsInsertProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type StorageBucketsInsertResponse struct {
	// Successful response
	Bucket      *shared.Bucket
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
