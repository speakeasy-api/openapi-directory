/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LinksCatalogDeleteCustomColumnLink } from "./linkscatalogdeletecustomcolumnlink";
import { LinksCatalogGetCustomColumnExpressionLink } from "./linkscataloggetcustomcolumnexpressionlink";
import { LinksImportationGetProductSampleCustomColumnValueLink } from "./linksimportationgetproductsamplecustomcolumnvaluelink";
import { LinksImportationMapCustomColumnLink } from "./linksimportationmapcustomcolumnlink";
import { LinksImportationSaveCustomColumnLink } from "./linksimportationsavecustomcolumnlink";
import { LinksImportationUnmapCustomColumnLink } from "./linksimportationunmapcustomcolumnlink";
import { Expose, Type } from "class-transformer";

export class ImportationCustomColumnLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "delete" })
  @Type(() => LinksCatalogDeleteCustomColumnLink)
  delete: LinksCatalogDeleteCustomColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "expression" })
  @Type(() => LinksCatalogGetCustomColumnExpressionLink)
  expression: LinksCatalogGetCustomColumnExpressionLink;

  @SpeakeasyMetadata()
  @Expose({ name: "map" })
  @Type(() => LinksImportationMapCustomColumnLink)
  map?: LinksImportationMapCustomColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "productSampleValue" })
  @Type(() => LinksImportationGetProductSampleCustomColumnValueLink)
  productSampleValue?: LinksImportationGetProductSampleCustomColumnValueLink;

  @SpeakeasyMetadata()
  @Expose({ name: "save" })
  @Type(() => LinksImportationSaveCustomColumnLink)
  save: LinksImportationSaveCustomColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "unmap" })
  @Type(() => LinksImportationUnmapCustomColumnLink)
  unmap?: LinksImportationUnmapCustomColumnLink;
}
