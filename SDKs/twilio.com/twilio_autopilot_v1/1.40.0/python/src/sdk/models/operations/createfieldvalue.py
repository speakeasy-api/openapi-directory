"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import autopilot_v1_assistant_field_type_field_value as shared_autopilot_v1_assistant_field_type_field_value
from typing import Optional

CREATE_FIELD_VALUE_SERVERS = [
	"https://autopilot.twilio.com",
]


@dataclasses.dataclass
class CreateFieldValueSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateFieldValueCreateFieldValueRequest:
    
    language: str = dataclasses.field(metadata={'form': { 'field_name': 'Language' }})
    r"""The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) tag that specifies the language of the value. Currently supported tags: `en-US`"""  
    value: str = dataclasses.field(metadata={'form': { 'field_name': 'Value' }})
    r"""The Field Value data."""  
    synonym_of: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SynonymOf' }})
    r"""The string value that indicates which word the field value is a synonym of."""  
    

@dataclasses.dataclass
class CreateFieldValueRequest:
    
    assistant_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AssistantSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the FieldType associated with the new resource."""  
    field_type_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'FieldTypeSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Field Type associated with the Field Value."""  
    request_body: Optional[CreateFieldValueCreateFieldValueRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateFieldValueResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    autopilot_v1_assistant_field_type_field_value: Optional[shared_autopilot_v1_assistant_field_type_field_value.AutopilotV1AssistantFieldTypeFieldValue] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    