/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Counters } from "./counters";
import { DeviceMinutes } from "./deviceminutes";
import { ExecutionResultEnum } from "./executionresultenum";
import { ExecutionStatusEnum } from "./executionstatusenum";
import { TestTypeEnum } from "./testtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a collection of one or more tests.
 */
export class Suite extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "counters" })
  @Type(() => Counters)
  counters?: Counters;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceMinutes" })
  @Type(() => DeviceMinutes)
  deviceMinutes?: DeviceMinutes;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: ExecutionResultEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "started" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  started?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stopped" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopped?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: TestTypeEnum;
}
