<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ResolverConfig - A complex type that contains information about a Resolver configuration for a VPC.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ResolverConfig
{
	#[\JMS\Serializer\Annotation\SerializedName('AutodefinedReverse')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ResolverAutodefinedReverseStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResolverAutodefinedReverseStatusEnum $autodefinedReverse = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OwnerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ResourceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceId = null;
    
	public function __construct()
	{
		$this->autodefinedReverse = null;
		$this->id = null;
		$this->ownerId = null;
		$this->resourceId = null;
	}
}
