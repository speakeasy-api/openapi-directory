// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAppImageConfigXAmzTargetEnum
type CreateAppImageConfigXAmzTargetEnum string

const (
	CreateAppImageConfigXAmzTargetEnumSageMakerCreateAppImageConfig CreateAppImageConfigXAmzTargetEnum = "SageMaker.CreateAppImageConfig"
)

func (e CreateAppImageConfigXAmzTargetEnum) ToPointer() *CreateAppImageConfigXAmzTargetEnum {
	return &e
}

func (e *CreateAppImageConfigXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.CreateAppImageConfig":
		*e = CreateAppImageConfigXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAppImageConfigXAmzTargetEnum: %v", v)
	}
}

type CreateAppImageConfigRequest struct {
	CreateAppImageConfigRequest shared.CreateAppImageConfigRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  CreateAppImageConfigXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateAppImageConfigResponse struct {
	ContentType string
	// Success
	CreateAppImageConfigResponse *shared.CreateAppImageConfigResponse
	// ResourceInUse
	ResourceInUse interface{}
	StatusCode    int
	RawResponse   *http.Response
}
