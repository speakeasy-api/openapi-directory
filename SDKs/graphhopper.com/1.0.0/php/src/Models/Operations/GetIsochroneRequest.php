<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetIsochroneRequest
{
    /**
     * Number by which to divide the given `time_limit` to create `buckets` nested isochrones of time intervals `time_limit-n*time_limit/buckets`. Applies analogously to `distance_limit`.
     * 
     * @var ?int $buckets
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=buckets')]
    public ?int $buckets = null;
    
    /**
     * Specify which distance the vehicle should travel. In meters.
     * 
     * @var ?int $distanceLimit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=distance_limit')]
    public ?int $distanceLimit = null;
    
    /**
     * Specify the start coordinate
     * 
     * @var string $point
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=point')]
    public string $point;
    
    /**
     * If `false` the flow goes from point to the polygon, if `true` the flow goes from the polygon "inside" to the point.
     * 
     * Example use case for `false`&#58; *How many potential customer can be reached within 30min travel time from your store* vs. `true`&#58; *How many customers can reach your store within 30min travel time.*
     * 
     * 
     * @var ?bool $reverseFlow
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=reverse_flow')]
    public ?bool $reverseFlow = null;
    
    /**
     * Specify which time the vehicle should travel. In seconds.
     * 
     * @var ?int $timeLimit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=time_limit')]
    public ?int $timeLimit = null;
    
    /**
     * The vehicle profile for which the route should be calculated.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VehicleProfileIdEnum $vehicle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicle')]
    public ?\OpenAPI\OpenAPI\Models\Shared\VehicleProfileIdEnum $vehicle = null;
    
    /**
     * Use `"shortest"` to get an isodistance line instead of an isochrone.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetIsochroneWeightingEnum $weighting
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=weighting')]
    public ?GetIsochroneWeightingEnum $weighting = null;
    
	public function __construct()
	{
		$this->buckets = null;
		$this->distanceLimit = null;
		$this->point = "";
		$this->reverseFlow = null;
		$this->timeLimit = null;
		$this->vehicle = null;
		$this->weighting = null;
	}
}
