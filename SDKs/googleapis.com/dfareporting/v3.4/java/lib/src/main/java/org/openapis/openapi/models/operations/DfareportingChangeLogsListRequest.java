/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DfareportingChangeLogsListRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;

    public DfareportingChangeLogsListRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;

    public DfareportingChangeLogsListRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Select only change logs with the specified action.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=action")
    public DfareportingChangeLogsListActionEnum action;

    public DfareportingChangeLogsListRequest withAction(DfareportingChangeLogsListActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public DfareportingChangeLogsListRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;

    public DfareportingChangeLogsListRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public DfareportingChangeLogsListRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Select only change logs with these IDs.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ids")
    public String[] ids;

    public DfareportingChangeLogsListRequest withIds(String[] ids) {
        this.ids = ids;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public DfareportingChangeLogsListRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Select only change logs whose change time is before the specified maxChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is "2015-07-18T22:54:00-04:00". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxChangeTime")
    public String maxChangeTime;

    public DfareportingChangeLogsListRequest withMaxChangeTime(String maxChangeTime) {
        this.maxChangeTime = maxChangeTime;
        return this;
    }
    
    /**
     * Maximum number of results to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;

    public DfareportingChangeLogsListRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * Select only change logs whose change time is after the specified minChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is "2015-07-18T22:54:00-04:00". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=minChangeTime")
    public String minChangeTime;

    public DfareportingChangeLogsListRequest withMinChangeTime(String minChangeTime) {
        this.minChangeTime = minChangeTime;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public DfareportingChangeLogsListRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Select only change logs with these object IDs.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=objectIds")
    public String[] objectIds;

    public DfareportingChangeLogsListRequest withObjectIds(String[] objectIds) {
        this.objectIds = objectIds;
        return this;
    }
    
    /**
     * Select only change logs with the specified object type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=objectType")
    public DfareportingChangeLogsListObjectTypeEnum objectType;

    public DfareportingChangeLogsListRequest withObjectType(DfareportingChangeLogsListObjectTypeEnum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * Value of the nextPageToken from the previous result page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageToken")
    public String pageToken;

    public DfareportingChangeLogsListRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public DfareportingChangeLogsListRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * User profile ID associated with this request.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=profileId")
    public String profileId;

    public DfareportingChangeLogsListRequest withProfileId(String profileId) {
        this.profileId = profileId;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public DfareportingChangeLogsListRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Select only change logs whose object ID, user name, old or new values match the search string.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=searchString")
    public String searchString;

    public DfareportingChangeLogsListRequest withSearchString(String searchString) {
        this.searchString = searchString;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public DfareportingChangeLogsListRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;

    public DfareportingChangeLogsListRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    /**
     * Select only change logs with these user profile IDs.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userProfileIds")
    public String[] userProfileIds;

    public DfareportingChangeLogsListRequest withUserProfileIds(String[] userProfileIds) {
        this.userProfileIds = userProfileIds;
        return this;
    }
    
    public DfareportingChangeLogsListRequest(@JsonProperty("profileId") String profileId) {
        this.profileId = profileId;
  }
}
