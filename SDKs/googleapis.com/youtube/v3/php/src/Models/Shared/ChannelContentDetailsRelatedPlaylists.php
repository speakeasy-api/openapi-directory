<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ChannelContentDetailsRelatedPlaylists
{
    /**
     * The ID of the playlist that contains the channel"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
     * 
     * @var ?string $favorites
     */
	#[\JMS\Serializer\Annotation\SerializedName('favorites')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $favorites = null;
    
    /**
     * The ID of the playlist that contains the channel"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
     * 
     * @var ?string $likes
     */
	#[\JMS\Serializer\Annotation\SerializedName('likes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $likes = null;
    
    /**
     * The ID of the playlist that contains the channel"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.
     * 
     * @var ?string $uploads
     */
	#[\JMS\Serializer\Annotation\SerializedName('uploads')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uploads = null;
    
    /**
     * The ID of the playlist that contains the channel"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
     * 
     * @var ?string $watchHistory
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchHistory')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $watchHistory = null;
    
    /**
     * The ID of the playlist that contains the channel"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
     * 
     * @var ?string $watchLater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchLater')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $watchLater = null;
    
	public function __construct()
	{
		$this->favorites = null;
		$this->likes = null;
		$this->uploads = null;
		$this->watchHistory = null;
		$this->watchLater = null;
	}
}
