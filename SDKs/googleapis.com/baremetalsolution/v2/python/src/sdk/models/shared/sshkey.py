"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SSHKey:
    r"""An SSH key, used for authorizing with the interactive serial console feature."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The name of this SSH key. Currently, the only valid value for the location is \\"global\\"."""  
    public_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicKey'), 'exclude': lambda f: f is None }})
    r"""The public SSH key. This must be in OpenSSH .authorized_keys format."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SSHKeyInput:
    r"""An SSH key, used for authorizing with the interactive serial console feature."""
    
    public_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicKey'), 'exclude': lambda f: f is None }})
    r"""The public SSH key. This must be in OpenSSH .authorized_keys format."""  
    