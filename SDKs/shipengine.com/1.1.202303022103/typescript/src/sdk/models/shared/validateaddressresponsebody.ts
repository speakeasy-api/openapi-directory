/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { AddressValidationStatusEnum } from "./addressvalidationstatusenum";
import { ResponseMessage } from "./responsemessage";
import { Expose, Type } from "class-transformer";

/**
 * Indicates whether an address is residential.
 */
export enum ValidateAddressResponseBodyPartialAddressAddressResidentialIndicatorEnum {
  Unknown = "unknown",
  Yes = "yes",
  No = "no",
}

/**
 * A complete or partial mailing address.
 */
export class ValidateAddressResponseBodyPartialAddress extends SpeakeasyBase {
  /**
   * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_line1" })
  addressLine1: string;

  /**
   * The second line of the street address.  For some addresses, this line may not be needed.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_line2" })
  addressLine2?: string;

  /**
   * The third line of the street address.  For some addresses, this line may not be needed.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_line3" })
  addressLine3?: string;

  /**
   * Indicates whether this is a residential address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_residential_indicator" })
  addressResidentialIndicator: ValidateAddressResponseBodyPartialAddressAddressResidentialIndicatorEnum;

  /**
   * The name of the city or locality
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city_locality" })
  cityLocality: string;

  /**
   * If this is a business address, then the company name should be specified here.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_name" })
  companyName?: string;

  /**
   * The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country_code" })
  countryCode: string;

  /**
   * Email for the address owner.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone: string;

  @SpeakeasyMetadata()
  @Expose({ name: "postal_code" })
  postalCode: string;

  /**
   * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state_province" })
  stateProvince: string;
}

/**
 * An address validation result
 */
export class ValidateAddressResponseBody extends SpeakeasyBase {
  /**
   * The matched address found by the Shipengine API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "matched_address" })
  @Type(() => ValidateAddressResponseBodyPartialAddress)
  matchedAddress: ValidateAddressResponseBodyPartialAddress;

  /**
   * The list of messages that were generated during the address validation request.
   */
  @SpeakeasyMetadata({ elemType: ResponseMessage })
  @Expose({ name: "messages" })
  @Type(() => ResponseMessage)
  messages: ResponseMessage[];

  /**
   * The original address that was sent for validation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "original_address" })
  @Type(() => Address)
  originalAddress: Address;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AddressValidationStatusEnum;
}
