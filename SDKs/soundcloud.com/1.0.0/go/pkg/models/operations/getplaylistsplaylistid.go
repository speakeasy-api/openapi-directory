// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetPlaylistsPlaylistIDSecurity struct {
	AuthHeader string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
	ClientID   string `security:"scheme,type=apiKey,subtype=query,name=client_id"`
}

type GetPlaylistsPlaylistIDRequest struct {
	// Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
	//
	Access []shared.AccessEnum `queryParam:"style=form,explode=false,name=access"`
	// SoundCloud playlist id
	PlaylistID int64 `pathParam:"style=simple,explode=false,name=playlist_id"`
	// A secret token to fetch private playlists/tracks
	SecretToken *string `queryParam:"style=form,explode=true,name=secret_token"`
}

type GetPlaylistsPlaylistIDResponse struct {
	ContentType string
	// Bad Request
	Error *shared.Error
	// Success
	Playlist    *shared.Playlist
	StatusCode  int
	RawResponse *http.Response
}
