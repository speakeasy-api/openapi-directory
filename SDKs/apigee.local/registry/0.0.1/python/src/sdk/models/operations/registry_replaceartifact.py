"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import artifact as shared_artifact
from ..shared import status as shared_status
from typing import Optional


@dataclasses.dataclass
class RegistryReplaceArtifactRequest:
    
    artifact: str = dataclasses.field(metadata={'path_param': { 'field_name': 'artifact', 'style': 'simple', 'explode': False }})
    r"""The artifact id."""  
    artifact_input: shared_artifact.ArtifactInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    location: str = dataclasses.field(metadata={'path_param': { 'field_name': 'location', 'style': 'simple', 'explode': False }})
    r"""The location id."""  
    project: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    

@dataclasses.dataclass
class RegistryReplaceArtifactResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    artifact: Optional[shared_artifact.ArtifactOutput] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    status: Optional[shared_status.Status] = dataclasses.field(default=None)
    r"""Default error response"""  
    