// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetContextKeysForPrincipalPolicyActionEnum
type POSTGetContextKeysForPrincipalPolicyActionEnum string

const (
	POSTGetContextKeysForPrincipalPolicyActionEnumGetContextKeysForPrincipalPolicy POSTGetContextKeysForPrincipalPolicyActionEnum = "GetContextKeysForPrincipalPolicy"
)

func (e *POSTGetContextKeysForPrincipalPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetContextKeysForPrincipalPolicy":
		*e = POSTGetContextKeysForPrincipalPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetContextKeysForPrincipalPolicyActionEnum: %s", s)
	}
}

// POSTGetContextKeysForPrincipalPolicyVersionEnum
type POSTGetContextKeysForPrincipalPolicyVersionEnum string

const (
	POSTGetContextKeysForPrincipalPolicyVersionEnumTwoThousandAndTen0508 POSTGetContextKeysForPrincipalPolicyVersionEnum = "2010-05-08"
)

func (e *POSTGetContextKeysForPrincipalPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = POSTGetContextKeysForPrincipalPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetContextKeysForPrincipalPolicyVersionEnum: %s", s)
	}
}

type POSTGetContextKeysForPrincipalPolicyQueryParams struct {
	Action  POSTGetContextKeysForPrincipalPolicyActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTGetContextKeysForPrincipalPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTGetContextKeysForPrincipalPolicyHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetContextKeysForPrincipalPolicyRequest struct {
	QueryParams POSTGetContextKeysForPrincipalPolicyQueryParams
	Headers     POSTGetContextKeysForPrincipalPolicyHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTGetContextKeysForPrincipalPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
