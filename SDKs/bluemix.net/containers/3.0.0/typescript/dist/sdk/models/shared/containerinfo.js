"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerInfo = void 0;
var utils_1 = require("../../../internal/utils");
var containerconfig_1 = require("./containerconfig");
var containerstate_1 = require("./containerstate");
var group_1 = require("./group");
var hostconfig_1 = require("./hostconfig");
var networksetting_1 = require("./networksetting");
var volume_1 = require("./volume");
var class_transformer_1 = require("class-transformer");
/**
 * OK. A list with detailed information about the container is returned.
 */
var ContainerInfo = /** @class */ (function (_super) {
    __extends(ContainerInfo, _super);
    function ContainerInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BluemixApp" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "bluemixApp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BluemixServices" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "bluemixServices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Config" }),
        (0, class_transformer_1.Type)(function () { return containerconfig_1.ContainerConfig; }),
        __metadata("design:type", containerconfig_1.ContainerConfig)
    ], ContainerInfo.prototype, "config", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ContainerState" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "containerState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Created" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ContainerInfo.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Group" }),
        (0, class_transformer_1.Type)(function () { return group_1.Group; }),
        __metadata("design:type", group_1.Group)
    ], ContainerInfo.prototype, "group", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HostConfig" }),
        (0, class_transformer_1.Type)(function () { return hostconfig_1.HostConfig; }),
        __metadata("design:type", hostconfig_1.HostConfig)
    ], ContainerInfo.prototype, "hostConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HostId" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "hostId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Human_Id" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "humanId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Id" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Image" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Mounts" }),
        __metadata("design:type", Array)
    ], ContainerInfo.prototype, "mounts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Name" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "NetworkSettings" }),
        (0, class_transformer_1.Type)(function () { return networksetting_1.NetworkSetting; }),
        __metadata("design:type", networksetting_1.NetworkSetting)
    ], ContainerInfo.prototype, "networkSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Path" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "path", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ResolveConfPath" }),
        __metadata("design:type", String)
    ], ContainerInfo.prototype, "resolveConfPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "State" }),
        (0, class_transformer_1.Type)(function () { return containerstate_1.ContainerState; }),
        __metadata("design:type", containerstate_1.ContainerState)
    ], ContainerInfo.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Volumes" }),
        (0, class_transformer_1.Type)(function () { return volume_1.Volume; }),
        __metadata("design:type", volume_1.Volume)
    ], ContainerInfo.prototype, "volumes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "VolumesRW" }),
        __metadata("design:type", Array)
    ], ContainerInfo.prototype, "volumesRW", void 0);
    return ContainerInfo;
}(utils_1.SpeakeasyBase));
exports.ContainerInfo = ContainerInfo;
