"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import binding as shared_binding
from ..shared import googlecloudassetv1accesscontrollist as shared_googlecloudassetv1accesscontrollist
from ..shared import googlecloudassetv1identitylist as shared_googlecloudassetv1identitylist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IamPolicyAnalysisResult:
    r"""IAM Policy analysis result, consisting of one IAM policy binding and derived access control lists."""
    
    access_control_lists: Optional[list[shared_googlecloudassetv1accesscontrollist.GoogleCloudAssetV1AccessControlList]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessControlLists'), 'exclude': lambda f: f is None }})
    r"""The access control lists derived from the iam_binding that match or potentially match resource and access selectors specified in the request."""  
    attached_resource_full_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachedResourceFullName'), 'exclude': lambda f: f is None }})
    r"""The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of the resource to which the iam_binding policy attaches."""  
    fully_explored: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullyExplored'), 'exclude': lambda f: f is None }})
    r"""Represents whether all analyses on the iam_binding have successfully finished."""  
    iam_binding: Optional[shared_binding.Binding] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iamBinding'), 'exclude': lambda f: f is None }})
    r"""Associates `members`, or principals, with a `role`."""  
    identity_list: Optional[shared_googlecloudassetv1identitylist.GoogleCloudAssetV1IdentityList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identityList'), 'exclude': lambda f: f is None }})
    r"""The identities and group edges."""  
    