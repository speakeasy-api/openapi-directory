/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETGETAttributesActionEnum {
  GetAttributes = "GetAttributes",
}

export enum GETGETAttributesVersionEnum {
  TwoThousandAndNine0415 = "2009-04-15",
}

export class GETGETAttributesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AWSAccessKeyId",
  })
  awsAccessKeyId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETGETAttributesActionEnum;

  /**
   * The names of the attributes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AttributeNames",
  })
  attributeNames?: string[];

  /**
   * Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ConsistentRead",
  })
  consistentRead?: boolean;

  /**
   * The name of the domain in which to perform the operation.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DomainName",
  })
  domainName: string;

  /**
   * The name of the item.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ItemName",
  })
  itemName: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Signature",
  })
  signature: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SignatureMethod",
  })
  signatureMethod: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SignatureVersion",
  })
  signatureVersion: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Timestamp",
  })
  timestamp: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETGETAttributesVersionEnum;
}

export class GETGETAttributesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
