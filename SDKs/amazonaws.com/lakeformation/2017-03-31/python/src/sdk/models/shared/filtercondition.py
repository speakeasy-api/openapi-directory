"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import comparisonoperator_enum as shared_comparisonoperator_enum
from ..shared import fieldnamestring_enum as shared_fieldnamestring_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FilterCondition:
    r"""This structure describes the filtering of columns in a table based on a filter condition."""
    
    comparison_operator: Optional[shared_comparisonoperator_enum.ComparisonOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComparisonOperator'), 'exclude': lambda f: f is None }})  
    field: Optional[shared_fieldnamestring_enum.FieldNameStringEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Field'), 'exclude': lambda f: f is None }})  
    string_value_list: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StringValueList'), 'exclude': lambda f: f is None }})  
    