/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrdersRefundOrderRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public MonetaryAmount amount;
    public OrdersRefundOrderRequest withAmount(MonetaryAmount amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * If true, the full order will be refunded, including shipping. If this is true, amount shouldn't be provided and will be ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullRefund")
    public Boolean fullRefund;
    public OrdersRefundOrderRequest withFullRefund(Boolean fullRefund) {
        this.fullRefund = fullRefund;
        return this;
    }
    
    /**
     * The ID of the operation. Unique across all operations for a given order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationId")
    public String operationId;
    public OrdersRefundOrderRequest withOperationId(String operationId) {
        this.operationId = operationId;
        return this;
    }
    
    /**
     * The reason for the refund. Acceptable values are: - "`courtesyAdjustment`" - "`other`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;
    public OrdersRefundOrderRequest withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The explanation of the reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasonText")
    public String reasonText;
    public OrdersRefundOrderRequest withReasonText(String reasonText) {
        this.reasonText = reasonText;
        return this;
    }
    
}
