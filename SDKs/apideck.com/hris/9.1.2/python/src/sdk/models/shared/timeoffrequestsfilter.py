"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class TimeOffRequestsFilterTimeOffRequestStatusEnum(str, Enum):
    r"""Time off request status to filter on"""
    REQUESTED = 'requested'
    APPROVED = 'approved'
    DECLINED = 'declined'
    CANCELLED = 'cancelled'
    DELETED = 'deleted'
    OTHER = 'other'


@dataclasses.dataclass
class TimeOffRequestsFilter:
    r"""Apply filters"""
    
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'employee_id' }})
    r"""Employee ID"""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_date' }})
    r"""End date"""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_date' }})
    r"""Start date"""  
    time_off_request_status: Optional[TimeOffRequestsFilterTimeOffRequestStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'time_off_request_status' }})
    r"""Time off request status to filter on"""  
    