// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClientUserStateEnum - Output only. The state of the client user.
type ClientUserStateEnum string

const (
	ClientUserStateEnumStateUnspecified ClientUserStateEnum = "STATE_UNSPECIFIED"
	ClientUserStateEnumInvited          ClientUserStateEnum = "INVITED"
	ClientUserStateEnumActive           ClientUserStateEnum = "ACTIVE"
	ClientUserStateEnumInactive         ClientUserStateEnum = "INACTIVE"
)

func (e *ClientUserStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "INVITED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		*e = ClientUserStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientUserStateEnum: %s", s)
	}
}

// ClientUser - A user of a client who has restricted access to the Marketplace and certain other sections of the Authorized Buyers UI based on the role granted to the associated client.
type ClientUser struct {
	// Required. The client user's email address that has to be unique across all users for the same client.
	Email *string `json:"email,omitempty"`
	// Output only. The resource name of the client user. Format: `buyers/{accountId}/clients/{clientAccountId}/users/{userId}`
	Name *string `json:"name,omitempty"`
	// Output only. The state of the client user.
	State *ClientUserStateEnum `json:"state,omitempty"`
}

// ClientUserInput - A user of a client who has restricted access to the Marketplace and certain other sections of the Authorized Buyers UI based on the role granted to the associated client.
type ClientUserInput struct {
	// Required. The client user's email address that has to be unique across all users for the same client.
	Email *string `json:"email,omitempty"`
}
