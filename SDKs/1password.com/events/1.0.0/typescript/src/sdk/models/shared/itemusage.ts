/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Client } from "./client";
import { User } from "./user";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A single item usage object
 */
export class ItemUsage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: any;

  /**
   * Metadata gathered about the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client" })
  @Type(() => Client)
  client?: Client;

  @SpeakeasyMetadata()
  @Expose({ name: "item_uuid" })
  itemUuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "used_version" })
  usedVersion?: number;

  /**
   * User object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;

  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vault_uuid" })
  vaultUuid?: string;
}
