// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateConnectorDefinitionVersionRequestBody struct {
	// A list of references to connectors in this version, with their corresponding configuration settings.
	Connectors []shared.Connector `json:"Connectors,omitempty"`
}

type CreateConnectorDefinitionVersionRequest struct {
	// The ID of the connector definition.
	ConnectorDefinitionID string                                      `pathParam:"style=simple,explode=false,name=ConnectorDefinitionId"`
	RequestBody           CreateConnectorDefinitionVersionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// A client token used to correlate requests and responses.
	XAmznClientToken *string `header:"style=simple,explode=false,name=X-Amzn-Client-Token"`
}

type CreateConnectorDefinitionVersionResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateConnectorDefinitionVersionResponse *shared.CreateConnectorDefinitionVersionResponse
	StatusCode                               int
	RawResponse                              *http.Response
}
