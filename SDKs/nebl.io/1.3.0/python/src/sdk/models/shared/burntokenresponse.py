"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BurnTokenResponse:
    r"""An object representing the tx to burn the token"""
    
    multisig_outputs: Optional[list[float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multisigOutputs'), 'exclude': lambda f: f is None }})
    r"""Array of indexes of multisig outputs"""  
    ntp1_output_indexes: Optional[list[float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ntp1OutputIndexes'), 'exclude': lambda f: f is None }})
    r"""Array of indexes transfering NTP1 tokens"""  
    tx_hex: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('txHex'), 'exclude': lambda f: f is None }})
    r"""Unsigned, raw transaction hex of the transaction to burn the token"""  
    