"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectionpasswordencryption as shared_connectionpasswordencryption
from ..shared import encryptionatrest as shared_encryptionatrest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataCatalogEncryptionSettings:
    r"""Contains configuration information for maintaining Data Catalog security."""
    
    connection_password_encryption: Optional[shared_connectionpasswordencryption.ConnectionPasswordEncryption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionPasswordEncryption'), 'exclude': lambda f: f is None }})  
    encryption_at_rest: Optional[shared_encryptionatrest.EncryptionAtRest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EncryptionAtRest'), 'exclude': lambda f: f is None }})  
    