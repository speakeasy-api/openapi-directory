// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ExportConfigurationsGetSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ExportConfigurationsGetRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The id of the export configuration.
	ExportConfigurationID string `pathParam:"style=simple,explode=false,name=export_configuration_id"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum string

const (
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumBadRequest          ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumConflict            ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "Conflict"
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumNotAcceptable       ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumNotFound            ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "NotFound"
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumInternalServerError ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumUnauthorized        ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnumTooManyRequests     ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type ExportConfigurationsGetDefaultApplicationJSONError struct {
	Code    ExportConfigurationsGetDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                     `json:"message"`
}

// ExportConfigurationsGetDefaultApplicationJSON - Error code with reason
type ExportConfigurationsGetDefaultApplicationJSON struct {
	Error ExportConfigurationsGetDefaultApplicationJSONError `json:"error"`
}

type ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum string

const (
	ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnumCrashes     ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum = "crashes"
	ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnumErrors      ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum = "errors"
	ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnumAttachments ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum = "attachments"
	ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnumNoLogs      ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum = "no_logs"
)

func (e *ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum: %s", s)
	}
}

// ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum - Type of export configuration
type ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum string

const (
	ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnumBlobStorageConnectionString           ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum = "blob_storage_connection_string"
	ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnumApplicationInsightsInstrumentationKey ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum = "application_insights_instrumentation_key"
	ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnumBlobStorageLinkedSubscription         ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum = "blob_storage_linked_subscription"
	ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnumApplicationInsightsLinkedSubscription ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum = "application_insights_linked_subscription"
)

func (e *ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "blob_storage_connection_string":
		fallthrough
	case "application_insights_instrumentation_key":
		fallthrough
	case "blob_storage_linked_subscription":
		fallthrough
	case "application_insights_linked_subscription":
		*e = ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum: %s", s)
	}
}

// ExportConfigurationsGet200ApplicationJSONExportConfiguration - Export configuration
type ExportConfigurationsGet200ApplicationJSONExportConfiguration struct {
	// Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
	Backfill       *bool                                                                            `json:"backfill,omitempty"`
	ExportEntities []ExportConfigurationsGet200ApplicationJSONExportConfigurationExportEntitiesEnum `json:"export_entities,omitempty"`
	// The resource group name on azure
	ResourceGroup *string `json:"resource_group,omitempty"`
	// The resource name on azure
	ResourceName *string `json:"resource_name,omitempty"`
	// Type of export configuration
	Type ExportConfigurationsGet200ApplicationJSONExportConfigurationTypeEnum `json:"type"`
}

type ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum string

const (
	ExportConfigurationsGet200ApplicationJSONExportEntitiesEnumCrashes     ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum = "crashes"
	ExportConfigurationsGet200ApplicationJSONExportEntitiesEnumErrors      ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum = "errors"
	ExportConfigurationsGet200ApplicationJSONExportEntitiesEnumAttachments ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum = "attachments"
	ExportConfigurationsGet200ApplicationJSONExportEntitiesEnumNoLogs      ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum = "no_logs"
)

func (e *ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum: %s", s)
	}
}

// ExportConfigurationsGet200ApplicationJSONExportTypeEnum - Target resource type of export configuration
type ExportConfigurationsGet200ApplicationJSONExportTypeEnum string

const (
	ExportConfigurationsGet200ApplicationJSONExportTypeEnumBlobStorage ExportConfigurationsGet200ApplicationJSONExportTypeEnum = "BlobStorage"
	ExportConfigurationsGet200ApplicationJSONExportTypeEnumAppInsights ExportConfigurationsGet200ApplicationJSONExportTypeEnum = "AppInsights"
)

func (e *ExportConfigurationsGet200ApplicationJSONExportTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BlobStorage":
		fallthrough
	case "AppInsights":
		*e = ExportConfigurationsGet200ApplicationJSONExportTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsGet200ApplicationJSONExportTypeEnum: %s", s)
	}
}

// ExportConfigurationsGet200ApplicationJSONStateEnum - State of the export job
type ExportConfigurationsGet200ApplicationJSONStateEnum string

const (
	ExportConfigurationsGet200ApplicationJSONStateEnumEnabled  ExportConfigurationsGet200ApplicationJSONStateEnum = "Enabled"
	ExportConfigurationsGet200ApplicationJSONStateEnumDisabled ExportConfigurationsGet200ApplicationJSONStateEnum = "Disabled"
	ExportConfigurationsGet200ApplicationJSONStateEnumPending  ExportConfigurationsGet200ApplicationJSONStateEnum = "Pending"
	ExportConfigurationsGet200ApplicationJSONStateEnumDeleted  ExportConfigurationsGet200ApplicationJSONStateEnum = "Deleted"
	ExportConfigurationsGet200ApplicationJSONStateEnumInvalid  ExportConfigurationsGet200ApplicationJSONStateEnum = "Invalid"
)

func (e *ExportConfigurationsGet200ApplicationJSONStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enabled":
		fallthrough
	case "Disabled":
		fallthrough
	case "Pending":
		fallthrough
	case "Deleted":
		fallthrough
	case "Invalid":
		*e = ExportConfigurationsGet200ApplicationJSONStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsGet200ApplicationJSONStateEnum: %s", s)
	}
}

// ExportConfigurationsGet200ApplicationJSON - Export configuration result
type ExportConfigurationsGet200ApplicationJSON struct {
	// Creation time in ISO 8601 format
	CreationTime string `json:"creation_time"`
	// Export configuration
	ExportConfiguration *ExportConfigurationsGet200ApplicationJSONExportConfiguration `json:"export_configuration,omitempty"`
	ExportEntities      []ExportConfigurationsGet200ApplicationJSONExportEntitiesEnum `json:"export_entities,omitempty"`
	// Target resource type of export configuration
	ExportType ExportConfigurationsGet200ApplicationJSONExportTypeEnum `json:"export_type"`
	// Export configuration id
	ID string `json:"id"`
	// Latest time in ISO 8601 format when export completed successfully
	LastRunTime *string `json:"last_run_time,omitempty"`
	// resource group for the storage account/App Insights resource
	ResourceGroup *string `json:"resource_group,omitempty"`
	// Storage accout or Appinsights resource name
	ResourceName *string `json:"resource_name,omitempty"`
	// State of the export job
	State ExportConfigurationsGet200ApplicationJSONStateEnum `json:"state"`
	// Additional information about export configuration state
	StateInfo *string `json:"state_info,omitempty"`
}

type ExportConfigurationsGetResponse struct {
	ContentType string
	// Get export configuration.
	ExportConfigurationsGet200ApplicationJSONObject *ExportConfigurationsGet200ApplicationJSON
	// Error code with reason
	ExportConfigurationsGetDefaultApplicationJSONObject *ExportConfigurationsGetDefaultApplicationJSON
	StatusCode                                          int
	RawResponse                                         *http.Response
}
