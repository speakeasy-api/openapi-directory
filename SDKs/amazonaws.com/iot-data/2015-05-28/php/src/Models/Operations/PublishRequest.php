<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PublishRequest
{
	#[SpeakeasyMetadata('request:mediaType=application/json')]
    public PublishRequestBody $requestBody;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
    /**
     * A UTF-8 encoded string that describes the content of the publishing message.
     * 
     * @var ?string $contentType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=contentType')]
    public ?string $contentType = null;
    
    /**
     * A user-defined integer value that represents the message expiry interval in seconds. If absent, the message doesn't expire. For more information about the limits of <code>messageExpiry</code>, see <a href="https://docs.aws.amazon.com/general/latest/gr/iot-core.html#message-broker-limits">Amazon Web Services IoT Core message broker and protocol limits and quotas </a> from the Amazon Web Services Reference Guide.
     * 
     * @var ?int $messageExpiry
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=messageExpiry')]
    public ?int $messageExpiry = null;
    
    /**
     * The Quality of Service (QoS) level. The default QoS level is 0.
     * 
     * @var ?int $qos
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=qos')]
    public ?int $qos = null;
    
    /**
     * A UTF-8 encoded string that's used as the topic name for a response message. The response topic is used to describe the topic which the receiver should publish to as part of the request-response flow. The topic must not contain wildcard characters.
     * 
     * @var ?string $responseTopic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=responseTopic')]
    public ?string $responseTopic = null;
    
    /**
     * <p>A Boolean value that determines whether to set the RETAIN flag when the message is published.</p> <p>Setting the RETAIN flag causes the message to be retained and sent to new subscribers to the topic.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default value: <code>false</code> </p>
     * 
     * @var ?bool $retain
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=retain')]
    public ?bool $retain = null;
    
    /**
     * The name of the MQTT topic.
     * 
     * @var string $topic
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=topic')]
    public string $topic;
    
    /**
     * The base64-encoded binary data used by the sender of the request message to identify which request the response message is for when it's received. <code>correlationData</code> is an HTTP header value in the API.
     * 
     * @var ?string $xAmzMqtt5CorrelationData
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=x-amz-mqtt5-correlation-data')]
    public ?string $xAmzMqtt5CorrelationData = null;
    
    /**
     * An <code>Enum</code> string value that indicates whether the payload is formatted as UTF-8. <code>payloadFormatIndicator</code> is an HTTP header value in the API.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PublishXAmzMqtt5PayloadFormatIndicatorEnum $xAmzMqtt5PayloadFormatIndicator
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=x-amz-mqtt5-payload-format-indicator')]
    public ?PublishXAmzMqtt5PayloadFormatIndicatorEnum $xAmzMqtt5PayloadFormatIndicator = null;
    
    /**
     * <p>A JSON string that contains an array of JSON objects. If you donâ€™t use Amazon Web Services SDK or CLI, you must encode the JSON string to base64 format before adding it to the HTTP header. <code>userProperties</code> is an HTTP header value in the API.</p> <p>The following example <code>userProperties</code> parameter is a JSON string which represents two User Properties. Note that it needs to be base64-encoded:</p> <p> <code>[{"deviceName": "alpha"}, {"deviceCnt": "45"}]</code> </p>
     * 
     * @var ?string $xAmzMqtt5UserProperties
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=x-amz-mqtt5-user-properties')]
    public ?string $xAmzMqtt5UserProperties = null;
    
	public function __construct()
	{
		$this->requestBody = new \OpenAPI\OpenAPI\Models\Operations\PublishRequestBody();
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
		$this->contentType = null;
		$this->messageExpiry = null;
		$this->qos = null;
		$this->responseTopic = null;
		$this->retain = null;
		$this->topic = "";
		$this->xAmzMqtt5CorrelationData = null;
		$this->xAmzMqtt5PayloadFormatIndicator = null;
		$this->xAmzMqtt5UserProperties = null;
	}
}
