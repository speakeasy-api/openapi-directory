// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ActivateEventSourceXAmzTargetEnum
type ActivateEventSourceXAmzTargetEnum string

const (
	ActivateEventSourceXAmzTargetEnumAwsEventsActivateEventSource ActivateEventSourceXAmzTargetEnum = "AWSEvents.ActivateEventSource"
)

func (e ActivateEventSourceXAmzTargetEnum) ToPointer() *ActivateEventSourceXAmzTargetEnum {
	return &e
}

func (e *ActivateEventSourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSEvents.ActivateEventSource":
		*e = ActivateEventSourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivateEventSourceXAmzTargetEnum: %v", v)
	}
}

type ActivateEventSourceRequest struct {
	ActivateEventSourceRequest shared.ActivateEventSourceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 ActivateEventSourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ActivateEventSourceResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalException
	InternalException interface{}
	// InvalidStateException
	InvalidStateException interface{}
	// OperationDisabledException
	OperationDisabledException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
