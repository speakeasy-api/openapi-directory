/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleChromeManagementV1HttpsLatencyRoutineData } from "./googlechromemanagementv1httpslatencyroutinedata";
import { Expose, Type } from "class-transformer";

/**
 * Current HTTPS latency state.
 */
export enum GoogleChromeManagementV1TelemetryHttpsLatencyChangeEventHttpsLatencyStateEnum {
  HttpsLatencyStateUnspecified = "HTTPS_LATENCY_STATE_UNSPECIFIED",
  Recovery = "RECOVERY",
  Problem = "PROBLEM",
}

/**
 * Https latency routine is run periodically and `TelemetryHttpsLatencyChangeEvent` is triggered if a latency problem was detected or if the device has recovered from a latency problem..
 */
export class GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent extends SpeakeasyBase {
  /**
   * Data that describes the result of the HTTPS latency diagnostics routine, with the HTTPS requests issued to Google websites.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpsLatencyRoutineData" })
  @Type(() => GoogleChromeManagementV1HttpsLatencyRoutineData)
  httpsLatencyRoutineData?: GoogleChromeManagementV1HttpsLatencyRoutineData;

  /**
   * Current HTTPS latency state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpsLatencyState" })
  httpsLatencyState?: GoogleChromeManagementV1TelemetryHttpsLatencyChangeEventHttpsLatencyStateEnum;
}
