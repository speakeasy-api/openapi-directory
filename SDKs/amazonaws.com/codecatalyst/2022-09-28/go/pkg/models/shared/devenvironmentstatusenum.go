// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DevEnvironmentStatusEnum string

const (
	DevEnvironmentStatusEnumPending  DevEnvironmentStatusEnum = "PENDING"
	DevEnvironmentStatusEnumRunning  DevEnvironmentStatusEnum = "RUNNING"
	DevEnvironmentStatusEnumStarting DevEnvironmentStatusEnum = "STARTING"
	DevEnvironmentStatusEnumStopping DevEnvironmentStatusEnum = "STOPPING"
	DevEnvironmentStatusEnumStopped  DevEnvironmentStatusEnum = "STOPPED"
	DevEnvironmentStatusEnumFailed   DevEnvironmentStatusEnum = "FAILED"
	DevEnvironmentStatusEnumDeleting DevEnvironmentStatusEnum = "DELETING"
	DevEnvironmentStatusEnumDeleted  DevEnvironmentStatusEnum = "DELETED"
)

func (e DevEnvironmentStatusEnum) ToPointer() *DevEnvironmentStatusEnum {
	return &e
}

func (e *DevEnvironmentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STARTING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = DevEnvironmentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DevEnvironmentStatusEnum: %v", v)
	}
}
