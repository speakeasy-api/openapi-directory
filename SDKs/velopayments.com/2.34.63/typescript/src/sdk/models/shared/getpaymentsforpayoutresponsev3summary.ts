/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class GetPaymentsForPayoutResponseV3Summary extends SpeakeasyBase {
  /**
   * The count of payments within the payout which have been confirmed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmedPayments" })
  confirmedPayments?: number;

  /**
   * The count of payments within the payout which have failed or been returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failedPayments" })
  failedPayments?: number;

  /**
   * The count of payments within the payout which are incomplete.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "incompletePayments" })
  incompletePayments?: number;

  /**
   * The date/time at which the payout was instructed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  instructedDateTime?: Date;

  /**
   * The memo attached to the payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutMemo" })
  payoutMemo?: string;

  /**
   * The current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutStatus" })
  payoutStatus?: string;

  /**
   * The count of payments within the payout which have been released.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releasedPayments" })
  releasedPayments?: number;

  /**
   * The date/time at which the payout was submitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submittedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submittedDateTime?: Date;

  /**
   * The count of payments within the payout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalPayments" })
  totalPayments?: number;

  /**
   * The date/time at which the payout was withdrawn.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withdrawnDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  withdrawnDateTime?: Date;
}
