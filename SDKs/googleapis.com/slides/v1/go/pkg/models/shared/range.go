// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RangeTypeEnum - The type of range.
type RangeTypeEnum string

const (
	RangeTypeEnumRangeTypeUnspecified RangeTypeEnum = "RANGE_TYPE_UNSPECIFIED"
	RangeTypeEnumFixedRange           RangeTypeEnum = "FIXED_RANGE"
	RangeTypeEnumFromStartIndex       RangeTypeEnum = "FROM_START_INDEX"
	RangeTypeEnumAll                  RangeTypeEnum = "ALL"
)

func (e RangeTypeEnum) ToPointer() *RangeTypeEnum {
	return &e
}

func (e *RangeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RANGE_TYPE_UNSPECIFIED":
		fallthrough
	case "FIXED_RANGE":
		fallthrough
	case "FROM_START_INDEX":
		fallthrough
	case "ALL":
		*e = RangeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RangeTypeEnum: %v", v)
	}
}

// Range - Specifies a contiguous range of an indexed collection, such as characters in text.
type Range struct {
	// The optional zero-based index of the end of the collection. Required for `FIXED_RANGE` ranges.
	EndIndex *int `json:"endIndex,omitempty"`
	// The optional zero-based index of the beginning of the collection. Required for `FIXED_RANGE` and `FROM_START_INDEX` ranges.
	StartIndex *int `json:"startIndex,omitempty"`
	// The type of range.
	Type *RangeTypeEnum `json:"type,omitempty"`
}
