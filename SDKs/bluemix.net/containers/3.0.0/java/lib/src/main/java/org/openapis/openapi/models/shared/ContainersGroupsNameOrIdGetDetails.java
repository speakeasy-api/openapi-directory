/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContainersGroupsNameOrIdGetDetails - OK. A detailed list of information about a container group is retrieved.
 */
public class ContainersGroupsNameOrIdGetDetails {
    /**
     * If set to `true` the container instances in the group are spread across separate physical compute nodes, which reduces the likelihood of containers crashing due to hardware failures. If set to `false`, the container instances in the group share the same physical compute node. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Anti-affinity")
    public String antiAffinity;
    public ContainersGroupsNameOrIdGetDetails withAntiAffinity(String antiAffinity) {
        this.antiAffinity = antiAffinity;
        return this;
    }
    
    /**
     * Can be either true or false. If set to true, the Autorecovery mode is enabled for your container group. In case a container instance crashes or stops, this instance is removed and a new one is automatically recreated. If set to false, the Autorecovery mode is disabled. In case a container instances crashes or stops, it is not automatically recreated by IBM Containers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Autorecovery")
    public String autorecovery;
    public ContainersGroupsNameOrIdGetDetails withAutorecovery(String autorecovery) {
        this.autorecovery = autorecovery;
        return this;
    }
    
    /**
     * Current IBM Containers availability zone on Openstack. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AvailabilityZone")
    public String availabilityZone;
    public ContainersGroupsNameOrIdGetDetails withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }
    
    /**
     * The Docker command that was specified to be run when the container instances are started. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Cmd")
    public String[] cmd;
    public ContainersGroupsNameOrIdGetDetails withCmd(String[] cmd) {
        this.cmd = cmd;
        return this;
    }
    
    /**
     * Timestamp when the container group was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Creation_time")
    public String creationTime;
    public ContainersGroupsNameOrIdGetDetails withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * The list of environmental variables that were defined for the container group. Each environment variable consists of a unique key and a value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Env")
    public String[] env;
    public ContainersGroupsNameOrIdGetDetails withEnv(String[] env) {
        this.env = env;
        return this;
    }
    
    /**
     * Unique identifier representing a specific container group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ContainersGroupsNameOrIdGetDetails withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The unique ID of the container image your container group instances are based on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Image")
    public String image;
    public ContainersGroupsNameOrIdGetDetails withImage(String image) {
        this.image = image;
        return this;
    }
    
    /**
     * The full path to the container image in your private Bluemix repository.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImageName")
    public String imageName;
    public ContainersGroupsNameOrIdGetDetails withImageName(String imageName) {
        this.imageName = imageName;
        return this;
    }
    
    /**
     * The size of each container instance that runs in the container group in MegaByte.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Memory")
    public Integer memory;
    public ContainersGroupsNameOrIdGetDetails withMemory(Integer memory) {
        this.memory = memory;
        return this;
    }
    
    /**
     * The name of the container group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ContainersGroupsNameOrIdGetDetails withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberInstances")
    public ContainersGroupsNameOrIdGetDetailsNumberInstances numberInstances;
    public ContainersGroupsNameOrIdGetDetails withNumberInstances(ContainersGroupsNameOrIdGetDetailsNumberInstances numberInstances) {
        this.numberInstances = numberInstances;
        return this;
    }
    
    /**
     * The public port that has been exposed. If you specified a route, your container group is accessible from the Internet. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Port")
    public Integer port;
    public ContainersGroupsNameOrIdGetDetails withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Route_Status")
    public ContainersGroupsNameOrIdGetDetailsRouteStatus routeStatus;
    public ContainersGroupsNameOrIdGetDetails withRouteStatus(ContainersGroupsNameOrIdGetDetailsRouteStatus routeStatus) {
        this.routeStatus = routeStatus;
        return this;
    }
    
    /**
     * The public route that is mapped to the container group. When you expose a public port, you can use the route to access your container group from the Internet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Routes")
    public String[] routes;
    public ContainersGroupsNameOrIdGetDetails withRoutes(String[] routes) {
        this.routes = routes;
        return this;
    }
    
    /**
     * The current status of the container group. The container group status is a composite of ACTION and STATUS:&lt;br&gt;&lt;br&gt; ACTIONS = (CREATE, DELETE, UPDATE, ROLLBACK, SUSPEND, RESUME, ADOPT, SNAPSHOT, CHECK, RESTORE)&lt;br&gt;&lt;br&gt; STATUSES = (IN_PROGRESS, FAILED, COMPLETE)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public ContainersGroupsNameOrIdGetDetails withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Timestamp when the container group was updated. If the container group was not updated before, `null` is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedTime")
    public String updatedTime;
    public ContainersGroupsNameOrIdGetDetails withUpdatedTime(String updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }
    
    /**
     * List of volumes to be associated with the container, in the format of volume name:path:mode where mode can be ro or rw.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Volumes")
    public String[] volumes;
    public ContainersGroupsNameOrIdGetDetails withVolumes(String[] volumes) {
        this.volumes = volumes;
        return this;
    }
    
}
