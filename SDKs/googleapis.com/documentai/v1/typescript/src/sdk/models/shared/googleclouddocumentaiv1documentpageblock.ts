/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDocumentaiV1DocumentPageDetectedLanguage } from "./googleclouddocumentaiv1documentpagedetectedlanguage";
import { GoogleCloudDocumentaiV1DocumentPageLayout } from "./googleclouddocumentaiv1documentpagelayout";
import { GoogleCloudDocumentaiV1DocumentProvenance } from "./googleclouddocumentaiv1documentprovenance";
import { Expose, Type } from "class-transformer";

/**
 * A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
 */
export class GoogleCloudDocumentaiV1DocumentPageBlock extends SpeakeasyBase {
  /**
   * A list of detected languages together with confidence.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage,
  })
  @Expose({ name: "detectedLanguages" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageDetectedLanguage)
  detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];

  /**
   * Visual element describing a layout unit on a page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageLayout)
  layout?: GoogleCloudDocumentaiV1DocumentPageLayout;

  /**
   * Structure to identify provenance relationships between annotations in different revisions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provenance" })
  @Type(() => GoogleCloudDocumentaiV1DocumentProvenance)
  provenance?: GoogleCloudDocumentaiV1DocumentProvenance;
}
