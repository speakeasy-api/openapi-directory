<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CheckCompatibilityRequest - The request for compatibility information for a report's dimensions and metrics. Check compatibility provides a preview of the compatibility of a report; fields shared with the `runReport` request should be the same values as in your `runReport` request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CheckCompatibilityRequest
{
    /**
     * Filters the dimensions and metrics in the response to just this compatibility. Commonly used as `”compatibilityFilter”: “COMPATIBLE”` to only return compatible dimensions & metrics.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CheckCompatibilityRequestCompatibilityFilterEnum $compatibilityFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('compatibilityFilter')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CheckCompatibilityRequestCompatibilityFilterEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CheckCompatibilityRequestCompatibilityFilterEnum $compatibilityFilter = null;
    
    /**
     * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FilterExpression $dimensionFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensionFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FilterExpression')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FilterExpression $dimensionFilter = null;
    
    /**
     * The dimensions in this report. `dimensions` should be the same value as in your `runReport` request.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Dimension> $dimensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Dimension>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensions = null;
    
    /**
     * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FilterExpression $metricFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FilterExpression')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FilterExpression $metricFilter = null;
    
    /**
     * The metrics in this report. `metrics` should be the same value as in your `runReport` request.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Metric> $metrics
     */
	#[\JMS\Serializer\Annotation\SerializedName('metrics')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Metric>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metrics = null;
    
	public function __construct()
	{
		$this->compatibilityFilter = null;
		$this->dimensionFilter = null;
		$this->dimensions = null;
		$this->metricFilter = null;
		$this->metrics = null;
	}
}
