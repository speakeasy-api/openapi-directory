/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class PreviewDeployedDevicesFleetCertificate extends SpeakeasyBase {
  /**
   * Specifies the unique string identifier of the Account responsible for this Certificate credential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * Specifies the date this Certificate credential was created, given in UTC ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * Specifies the date this Certificate credential was last updated, given in UTC ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * Specifies the unique string identifier of a Device authenticated with this Certificate credential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_sid" })
  deviceSid?: string;

  /**
   * Specifies the unique string identifier of the Fleet that the given Certificate credential belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleet_sid" })
  fleetSid?: string;

  /**
   * Contains a human readable descriptive text for this Certificate credential, up to 256 characters long.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * Contains a 34 character string that uniquely identifies this Certificate credential resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * Contains a unique hash of the payload of this Certificate credential, used to authenticate the Device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbprint" })
  thumbprint?: string;

  /**
   * Contains an absolute URL for this Certificate credential resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
