/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InvoiceGatewayApiModel } from "./invoicegatewayapimodel";
import { InvoiceRecurringApiModel } from "./invoicerecurringapimodel";
import { InvoiceUpdateAttachmentApiModel } from "./invoiceupdateattachmentapimodel";
import { InvoiceUpdateItemApiModel } from "./invoiceupdateitemapimodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Indicate the status of the invoice (paid/unpaid/overdue)
 */
export enum InvoiceUpdateApiModelStatusEnum {
  Draft = "Draft",
  Paid = "Paid",
  Unpaid = "Unpaid",
  Overdue = "Overdue",
  Void = "Void",
}

export class InvoiceUpdateApiModel extends SpeakeasyBase {
  /**
   * List of invoice attachments
   */
  @SpeakeasyMetadata({
    data: "form, name=Attachments;json=true",
    elemType: InvoiceUpdateAttachmentApiModel,
  })
  @Expose({ name: "Attachments" })
  @Type(() => InvoiceUpdateAttachmentApiModel)
  attachments?: InvoiceUpdateAttachmentApiModel[];

  /**
   * The client to whom this invoice is assigned
   */
  @SpeakeasyMetadata({ data: "form, name=ClientId" })
  @Expose({ name: "ClientId" })
  clientId?: number;

  /**
   * Indicate from which invoice this invoice has been cloned from
   */
  @SpeakeasyMetadata({ data: "form, name=ClonedFromId" })
  @Expose({ name: "ClonedFromId" })
  clonedFromId?: number;

  /**
   * Id of the currency for the invoice amounts
   */
  @SpeakeasyMetadata({ data: "form, name=CurrencyId" })
  @Expose({ name: "CurrencyId" })
  currencyId?: number;

  /**
   * Indicates when the invoice will be proclamed as due
   */
  @SpeakeasyMetadata({
    data: "form, name=Duedate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "Duedate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  duedate?: Date;

  /**
   * Invoice id
   */
  @SpeakeasyMetadata({ data: "form, name=Id" })
  @Expose({ name: "Id" })
  id?: number;

  /**
   * Hold the id of the invoice category
   */
  @SpeakeasyMetadata({ data: "form, name=InvoiceCategoryId" })
  @Expose({ name: "InvoiceCategoryId" })
  invoiceCategoryId?: number;

  /**
   * Indicates when the invoice was issued
   */
  @SpeakeasyMetadata({
    data: "form, name=IssuedOn;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "IssuedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedOn?: Date;

  /**
   * List of invoice items
   */
  @SpeakeasyMetadata({
    data: "form, name=Items;json=true",
    elemType: InvoiceUpdateItemApiModel,
  })
  @Expose({ name: "Items" })
  @Type(() => InvoiceUpdateItemApiModel)
  items?: InvoiceUpdateItemApiModel[];

  /**
   * Internal note regarding the invoice
   */
  @SpeakeasyMetadata({ data: "form, name=Notes" })
  @Expose({ name: "Notes" })
  notes?: string;

  /**
   * Unique invoice number
   */
  @SpeakeasyMetadata({ data: "form, name=Number" })
  @Expose({ name: "Number" })
  number?: string;

  /**
   * List of enabled payment gateways for this invoice
   */
  @SpeakeasyMetadata({
    data: "form, name=PaymentGateways;json=true",
    elemType: InvoiceGatewayApiModel,
  })
  @Expose({ name: "PaymentGateways" })
  @Type(() => InvoiceGatewayApiModel)
  paymentGateways?: InvoiceGatewayApiModel[];

  /**
   * Unique number generated by the buyer
   */
  @SpeakeasyMetadata({ data: "form, name=PoNumber" })
  @Expose({ name: "PoNumber" })
  poNumber?: string;

  /**
   * Definition of invoice recurring profile
   */
  @SpeakeasyMetadata({ data: "form, name=RecurringProfile;json=true" })
  @Expose({ name: "RecurringProfile" })
  @Type(() => InvoiceRecurringApiModel)
  recurringProfile?: InvoiceRecurringApiModel;

  /**
   * Hold the id of the recurring profile
   */
  @SpeakeasyMetadata({ data: "form, name=RecurringProfileId" })
  @Expose({ name: "RecurringProfileId" })
  recurringProfileId?: number;

  /**
   * Should send email reminders to client?
   */
  @SpeakeasyMetadata({ data: "form, name=ShouldSendReminders" })
  @Expose({ name: "ShouldSendReminders" })
  shouldSendReminders?: boolean;

  /**
   * Indicate the status of the invoice (paid/unpaid/overdue)
   */
  @SpeakeasyMetadata({ data: "form, name=Status" })
  @Expose({ name: "Status" })
  status?: InvoiceUpdateApiModelStatusEnum;

  /**
   * Terms of agreement
   */
  @SpeakeasyMetadata({ data: "form, name=Terms" })
  @Expose({ name: "Terms" })
  terms?: string;
}
