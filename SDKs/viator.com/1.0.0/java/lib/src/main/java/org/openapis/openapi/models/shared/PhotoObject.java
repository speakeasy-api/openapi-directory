/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PhotoObject - **object** detailing a single photo from a user
 */
public class PhotoObject {
    /**
     * **HTML-formatted caption** for *this* photograph
     * - may contain basic HTML mark-up - e.g., br, li, b, u, p, i, ul and ol
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caption")
    public String caption;

    public PhotoObject withCaption(String caption) {
        this.caption = caption;
        return this;
    }
    
    /**
     * **indicator**: `true` if *this* photograph has been tagged as an *editor's pick*; i.e., can be given preference for display
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("editorsPick")
    public Boolean editorsPick;

    public PhotoObject withEditorsPick(Boolean editorsPick) {
        this.editorsPick = editorsPick;
        return this;
    }
    
    /**
     * **URL** for the avatar image of the user that submitted *this* photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerAvatarURL")
    public String ownerAvatarURL;

    public PhotoObject withOwnerAvatarURL(String ownerAvatarURL) {
        this.ownerAvatarURL = ownerAvatarURL;
        return this;
    }
    
    /**
     * **country** in which the owner of *this* photograph is located
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerCountry")
    public String ownerCountry;

    public PhotoObject withOwnerCountry(String ownerCountry) {
        this.ownerCountry = ownerCountry;
        return this;
    }
    
    /**
     * **unique numeric identifier** of the user that owns the photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerId")
    public Long ownerId;

    public PhotoObject withOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * **handle** of the user that submitted *this* photograph; e.g., 'Husker1k'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerName")
    public String ownerName;

    public PhotoObject withOwnerName(String ownerName) {
        this.ownerName = ownerName;
        return this;
    }
    
    /**
     * **URL** of the high-resolution version of *this* photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoHiResURL")
    public String photoHiResURL;

    public PhotoObject withPhotoHiResURL(String photoHiResURL) {
        this.photoHiResURL = photoHiResURL;
        return this;
    }
    
    /**
     * **unique numeric identifier** of *this* photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoId")
    public Long photoId;

    public PhotoObject withPhotoId(Long photoId) {
        this.photoId = photoId;
        return this;
    }
    
    /**
     * **URL** of the medium-resolution version of *this* photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoMediumResURL")
    public String photoMediumResURL;

    public PhotoObject withPhotoMediumResURL(String photoMediumResURL) {
        this.photoMediumResURL = photoMediumResURL;
        return this;
    }
    
    /**
     * **URL** for the standard-resolution version of *this* photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoURL")
    public String photoURL;

    public PhotoObject withPhotoURL(String photoURL) {
        this.photoURL = photoURL;
        return this;
    }
    
    /**
     * **product code** for the product that *this* photograph is of
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productCode")
    public String productCode;

    public PhotoObject withProductCode(String productCode) {
        this.productCode = productCode;
        return this;
    }
    
    /**
     * **natural-language title** of the product associated with *this* photograph; e.g., 'Sydney and Bondi Hop-on Hop-off Tour'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTitle")
    public String productTitle;

    public PhotoObject withProductTitle(String productTitle) {
        this.productTitle = productTitle;
        return this;
    }
    
    /**
     * **URL-formatted title** of the product associated with *this* photograph; e.g., `Sydney-and-Bondi-Hop-on-Hop-off-Tour`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productUrlName")
    public String productUrlName;

    public PhotoObject withProductUrlName(String productUrlName) {
        this.productUrlName = productUrlName;
        return this;
    }
    
    /**
     * **sort order** for *this* photograph; e.g., `3`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public Long sortOrder;

    public PhotoObject withSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslSupported")
    public Boolean sslSupported;

    public PhotoObject withSslSupported(Boolean sslSupported) {
        this.sslSupported = sslSupported;
        return this;
    }
    
    /**
     * **URL** of *this* product's thumbnail image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailURL")
    public String thumbnailURL;

    public PhotoObject withThumbnailURL(String thumbnailURL) {
        this.thumbnailURL = thumbnailURL;
        return this;
    }
    
    /**
     * **date** on which *this* photograph was submitted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeUploaded")
    public String timeUploaded;

    public PhotoObject withTimeUploaded(String timeUploaded) {
        this.timeUploaded = timeUploaded;
        return this;
    }
    
    /**
     * **title** of *this* photograph
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public PhotoObject withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public PhotoObject(){}
}
