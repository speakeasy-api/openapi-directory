/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class Role extends SpeakeasyBase {
  /**
   * Date/time of creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Whether this is a custom role or built-in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom" })
  custom: boolean;

  /**
   * Unique role name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * List of scopes where this role is currently present. `.app` means that role is present in app-level grants
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes: string[];

  /**
   * Date/time of the last update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
