<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class Destiny2GetHistoricalStatsRequest
{
    /**
     * The id of the character to retrieve. You can omit this character ID or set it to 0 to get aggregate stats across all characters.
     * 
     * @var int $characterId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=characterId')]
    public int $characterId;
    
    /**
     * Last day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.
     * 
     * @var ?\DateTime $dayend
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=dayend,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $dayend = null;
    
    /**
     * First day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.
     * 
     * @var ?\DateTime $daystart
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=daystart,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $daystart = null;
    
    /**
     * The Destiny membershipId of the user to retrieve.
     * 
     * @var int $destinyMembershipId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=destinyMembershipId')]
    public int $destinyMembershipId;
    
    /**
     * Group of stats to include, otherwise only general stats are returned. Comma separated list is allowed. Values: General, Weapons, Medals
     * 
     * @var ?array<int> $groups
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=groups')]
    public ?array $groups = null;
    
    /**
     * A valid non-BungieNet membership type.
     * 
     * @var int $membershipType
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=membershipType')]
    public int $membershipType;
    
    /**
     * Game modes to return. See the documentation for DestinyActivityModeType for valid values, and pass in string representation, comma delimited.
     * 
     * @var ?array<int> $modes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=modes')]
    public ?array $modes = null;
    
    /**
     * Indicates a specific period type to return. Optional. May be: Daily, AllTime, or Activity
     * 
     * @var ?int $periodType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=periodType')]
    public ?int $periodType = null;
    
	public function __construct()
	{
		$this->characterId = 0;
		$this->dayend = null;
		$this->daystart = null;
		$this->destinyMembershipId = 0;
		$this->groups = null;
		$this->membershipType = 0;
		$this->modes = null;
		$this->periodType = null;
	}
}
