/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListApplicationComponentsRequestBody {
    /**
     *  Criteria for filtering the list of application components. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationComponentCriteria")
    public ListApplicationComponentsRequestBodyApplicationComponentCriteriaEnum applicationComponentCriteria;

    public ListApplicationComponentsRequestBody withApplicationComponentCriteria(ListApplicationComponentsRequestBodyApplicationComponentCriteriaEnum applicationComponentCriteria) {
        this.applicationComponentCriteria = applicationComponentCriteria;
        return this;
    }
    
    /**
     *  Specify the value based on the application component criteria type. For example, if &lt;code&gt;applicationComponentCriteria&lt;/code&gt; is set to &lt;code&gt;SERVER_ID&lt;/code&gt; and &lt;code&gt;filterValue&lt;/code&gt; is set to &lt;code&gt;server1&lt;/code&gt;, then &lt;a&gt;ListApplicationComponents&lt;/a&gt; returns all the application components running on server1. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterValue")
    public String filterValue;

    public ListApplicationComponentsRequestBody withFilterValue(String filterValue) {
        this.filterValue = filterValue;
        return this;
    }
    
    /**
     *  The group ID specified in to filter on. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupIdFilter")
    public org.openapis.openapi.models.shared.Group[] groupIdFilter;

    public ListApplicationComponentsRequestBody withGroupIdFilter(org.openapis.openapi.models.shared.Group[] groupIdFilter) {
        this.groupIdFilter = groupIdFilter;
        return this;
    }
    
    /**
     *  The maximum number of items to include in the response. The maximum value is 100. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public ListApplicationComponentsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     *  The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set &lt;code&gt;maxResults&lt;/code&gt; to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public ListApplicationComponentsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     *  Specifies whether to sort by ascending (&lt;code&gt;ASC&lt;/code&gt;) or descending (&lt;code&gt;DESC&lt;/code&gt;) order. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort")
    public ListApplicationComponentsRequestBodySortEnum sort;

    public ListApplicationComponentsRequestBody withSort(ListApplicationComponentsRequestBodySortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    public ListApplicationComponentsRequestBody(){}
}
