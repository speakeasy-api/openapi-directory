<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * PostOrdersOrderRequestV2 - The order to create
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class PostOrdersOrderRequestV2
{
    /**
     * Use of this property requires special permission and must be discussed with your account executive; values are restricted while custom values need to be accepted by your AE.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2IntegratorEnum $integrator
     */
	#[\JMS\Serializer\Annotation\SerializedName('integrator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2IntegratorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostOrdersOrderRequestV2IntegratorEnum $integrator = null;
    
    /**
     * $items
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2Items> $items
     */
	#[\JMS\Serializer\Annotation\SerializedName('items')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2Items>')]
    public array $items;
    
    /**
     * Necessary if you have a multitenancy account, otherwise we will associate the order with your account
     * 
     * @var ?int $merchantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $merchantId = null;
    
    /**
     * Unique ID provided by the merchant
     * 
     * @var string $merchantOrderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantOrderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantOrderId;
    
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recipient')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2ConsigneeNewV2')]
    public PostOrdersOrderRequestV2ConsigneeNewV2 $recipient;
    
    /**
     * Custom for you, it will be mapped to an actual method within the OMS UI
     * 
     * @var string $shippingMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('shippingMethod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shippingMethod;
    
    /**
     * We automatically select a warehouse based on inventory availability, requested carrier and delivery schedule, and carrier cost. You may however override this process. Because this is not recommended please inform your AE prior to using so they may enable this feature.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2Warehouse $warehouse
     */
	#[\JMS\Serializer\Annotation\SerializedName('warehouse')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2Warehouse')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostOrdersOrderRequestV2Warehouse $warehouse = null;
    
	public function __construct()
	{
		$this->integrator = null;
		$this->items = [];
		$this->merchantId = null;
		$this->merchantOrderId = "";
		$this->notes = null;
		$this->recipient = new \OpenAPI\OpenAPI\Models\Operations\PostOrdersOrderRequestV2ConsigneeNewV2();
		$this->shippingMethod = "";
		$this->warehouse = null;
	}
}
