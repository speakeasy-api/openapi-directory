<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TemplateContents - Files that make up the template contents of a template type.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TemplateContents
{
    /**
     * Import files referenced by the main template.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ImportFile> $imports
     */
	#[\JMS\Serializer\Annotation\SerializedName('imports')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ImportFile>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $imports = null;
    
    /**
     * Which interpreter (python or jinja) should be used during expansion.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TemplateContentsInterpreterEnum $interpreter
     */
	#[\JMS\Serializer\Annotation\SerializedName('interpreter')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TemplateContentsInterpreterEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TemplateContentsInterpreterEnum $interpreter = null;
    
    /**
     * The filename of the mainTemplate
     * 
     * @var ?string $mainTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('mainTemplate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mainTemplate = null;
    
    /**
     * The contents of the template schema.
     * 
     * @var ?string $schema
     */
	#[\JMS\Serializer\Annotation\SerializedName('schema')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schema = null;
    
    /**
     * The contents of the main template file.
     * 
     * @var ?string $template
     */
	#[\JMS\Serializer\Annotation\SerializedName('template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $template = null;
    
	public function __construct()
	{
		$this->imports = null;
		$this->interpreter = null;
		$this->mainTemplate = null;
		$this->schema = null;
		$this->template = null;
	}
}
