<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CalendarEventsMoveRequest
{
    /**
     * Data format for the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * Calendar identifier of the source calendar where the event currently is on.
     * 
     * @var string $calendarId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=calendarId')]
    public string $calendarId;
    
    /**
     * Calendar identifier of the target calendar where the event is to be moved to.
     * 
     * @var string $destination
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=destination')]
    public string $destination;
    
    /**
     * Event identifier.
     * 
     * @var string $eventId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=eventId')]
    public string $eventId;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * Deprecated. Please use sendUpdates instead.
     * 
     * 
     * Whether to send notifications about the change of the event's organizer. Note that some emails might still be sent even if you set the value to false. The default is false.
     * 
     * @var ?bool $sendNotifications
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sendNotifications')]
    public ?bool $sendNotifications = null;
    
    /**
     * Guests who should receive notifications about the change of the event's organizer.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CalendarEventsMoveSendUpdatesEnum $sendUpdates
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sendUpdates')]
    public ?CalendarEventsMoveSendUpdatesEnum $sendUpdates = null;
    
    /**
     * Deprecated. Please use quotaUser instead.
     * 
     * @var ?string $userIp
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userIp')]
    public ?string $userIp = null;
    
	public function __construct()
	{
		$this->alt = null;
		$this->calendarId = "";
		$this->destination = "";
		$this->eventId = "";
		$this->fields = null;
		$this->key = null;
		$this->oauthToken = null;
		$this->prettyPrint = null;
		$this->quotaUser = null;
		$this->sendNotifications = null;
		$this->sendUpdates = null;
		$this->userIp = null;
	}
}
