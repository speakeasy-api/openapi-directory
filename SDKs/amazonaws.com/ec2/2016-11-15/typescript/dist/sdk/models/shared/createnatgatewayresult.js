"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateNatGatewayResult = exports.CreateNatGatewayResultNatGateway = exports.CreateNatGatewayResultNatGatewayTags = exports.CreateNatGatewayResultNatGatewayStateEnum = exports.CreateNatGatewayResultNatGatewayProvisionedBandwidth = exports.CreateNatGatewayResultNatGatewayNatGatewayAddresses = exports.CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = exports.CreateNatGatewayResultNatGatewayConnectivityTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Indicates whether the NAT gateway supports public or private connectivity.
 */
var CreateNatGatewayResultNatGatewayConnectivityTypeEnum;
(function (CreateNatGatewayResultNatGatewayConnectivityTypeEnum) {
    CreateNatGatewayResultNatGatewayConnectivityTypeEnum["Private"] = "private";
    CreateNatGatewayResultNatGatewayConnectivityTypeEnum["Public"] = "public";
})(CreateNatGatewayResultNatGatewayConnectivityTypeEnum = exports.CreateNatGatewayResultNatGatewayConnectivityTypeEnum || (exports.CreateNatGatewayResultNatGatewayConnectivityTypeEnum = {}));
/**
 * The address status.
 */
var CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum;
(function (CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum) {
    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum["Assigning"] = "assigning";
    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum["Unassigning"] = "unassigning";
    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum["Associating"] = "associating";
    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum["Disassociating"] = "disassociating";
    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum["Succeeded"] = "succeeded";
    CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum["Failed"] = "failed";
})(CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = exports.CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum || (exports.CreateNatGatewayResultNatGatewayNatGatewayAddressesStatusEnum = {}));
/**
 * Describes the IP addresses and network interface associated with a NAT gateway.
 */
var CreateNatGatewayResultNatGatewayNatGatewayAddresses = /** @class */ (function (_super) {
    __extends(CreateNatGatewayResultNatGatewayNatGatewayAddresses, _super);
    function CreateNatGatewayResultNatGatewayNatGatewayAddresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "allocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "failureMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "isPrimary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "privateIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "publicIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayNatGatewayAddresses.prototype, "status", void 0);
    return CreateNatGatewayResultNatGatewayNatGatewayAddresses;
}(utils_1.SpeakeasyBase));
exports.CreateNatGatewayResultNatGatewayNatGatewayAddresses = CreateNatGatewayResultNatGatewayNatGatewayAddresses;
/**
 * Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
 */
var CreateNatGatewayResultNatGatewayProvisionedBandwidth = /** @class */ (function (_super) {
    __extends(CreateNatGatewayResultNatGatewayProvisionedBandwidth, _super);
    function CreateNatGatewayResultNatGatewayProvisionedBandwidth() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], CreateNatGatewayResultNatGatewayProvisionedBandwidth.prototype, "provisionTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayProvisionedBandwidth.prototype, "provisioned", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], CreateNatGatewayResultNatGatewayProvisionedBandwidth.prototype, "requestTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayProvisionedBandwidth.prototype, "requested", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayProvisionedBandwidth.prototype, "status", void 0);
    return CreateNatGatewayResultNatGatewayProvisionedBandwidth;
}(utils_1.SpeakeasyBase));
exports.CreateNatGatewayResultNatGatewayProvisionedBandwidth = CreateNatGatewayResultNatGatewayProvisionedBandwidth;
/**
 * <p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>
 */
var CreateNatGatewayResultNatGatewayStateEnum;
(function (CreateNatGatewayResultNatGatewayStateEnum) {
    CreateNatGatewayResultNatGatewayStateEnum["Pending"] = "pending";
    CreateNatGatewayResultNatGatewayStateEnum["Failed"] = "failed";
    CreateNatGatewayResultNatGatewayStateEnum["Available"] = "available";
    CreateNatGatewayResultNatGatewayStateEnum["Deleting"] = "deleting";
    CreateNatGatewayResultNatGatewayStateEnum["Deleted"] = "deleted";
})(CreateNatGatewayResultNatGatewayStateEnum = exports.CreateNatGatewayResultNatGatewayStateEnum || (exports.CreateNatGatewayResultNatGatewayStateEnum = {}));
/**
 * Describes a tag.
 */
var CreateNatGatewayResultNatGatewayTags = /** @class */ (function (_super) {
    __extends(CreateNatGatewayResultNatGatewayTags, _super);
    function CreateNatGatewayResultNatGatewayTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGatewayTags.prototype, "value", void 0);
    return CreateNatGatewayResultNatGatewayTags;
}(utils_1.SpeakeasyBase));
exports.CreateNatGatewayResultNatGatewayTags = CreateNatGatewayResultNatGatewayTags;
/**
 * Information about the NAT gateway.
 */
var CreateNatGatewayResultNatGateway = /** @class */ (function (_super) {
    __extends(CreateNatGatewayResultNatGateway, _super);
    function CreateNatGatewayResultNatGateway() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "connectivityType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], CreateNatGatewayResultNatGateway.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], CreateNatGatewayResultNatGateway.prototype, "deleteTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "failureCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "failureMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNatGatewayResultNatGatewayNatGatewayAddresses,
        }),
        __metadata("design:type", Array)
    ], CreateNatGatewayResultNatGateway.prototype, "natGatewayAddresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "natGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNatGatewayResultNatGatewayProvisionedBandwidth)
    ], CreateNatGatewayResultNatGateway.prototype, "provisionedBandwidth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "subnetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateNatGatewayResultNatGatewayTags }),
        __metadata("design:type", Array)
    ], CreateNatGatewayResultNatGateway.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResultNatGateway.prototype, "vpcId", void 0);
    return CreateNatGatewayResultNatGateway;
}(utils_1.SpeakeasyBase));
exports.CreateNatGatewayResultNatGateway = CreateNatGatewayResultNatGateway;
/**
 * Success
 */
var CreateNatGatewayResult = /** @class */ (function (_super) {
    __extends(CreateNatGatewayResult, _super);
    function CreateNatGatewayResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNatGatewayResult.prototype, "clientToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNatGatewayResultNatGateway)
    ], CreateNatGatewayResult.prototype, "natGateway", void 0);
    return CreateNatGatewayResult;
}(utils_1.SpeakeasyBase));
exports.CreateNatGatewayResult = CreateNatGatewayResult;
