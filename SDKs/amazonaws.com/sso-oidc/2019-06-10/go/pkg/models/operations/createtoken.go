// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateTokenHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateTokenRequestBody struct {
	// The unique identifier string for each client. This value should come from the persisted result of the <a>RegisterClient</a> API.
	ClientID string `json:"clientId"`
	// A secret string generated for the client. This value should come from the persisted result of the <a>RegisterClient</a> API.
	ClientSecret string `json:"clientSecret"`
	// The authorization code received from the authorization service. This parameter is required to perform an authorization grant request to get access to a token.
	Code *string `json:"code,omitempty"`
	// Used only when calling this API for the device code grant type. This short-term code is used to identify this authentication attempt. This should come from an in-memory reference to the result of the <a>StartDeviceAuthorization</a> API.
	DeviceCode *string `json:"deviceCode,omitempty"`
	// <p>Supports grant types for the authorization code, refresh token, and device code request. For device code requests, specify the following value:</p> <p> <code>urn:ietf:params:oauth:grant-type:<i>device_code</i> </code> </p> <p>For information about how to obtain the device code, see the <a>StartDeviceAuthorization</a> topic.</p>
	GrantType string `json:"grantType"`
	// The location of the application that will receive the authorization code. Users authorize the service to send the request to this location.
	RedirectURI *string `json:"redirectUri,omitempty"`
	// <p>Currently, <code>refreshToken</code> is not yet implemented and is not supported. For more information about the features and limitations of the current IAM Identity Center OIDC implementation, see <i>Considerations for Using this Guide</i> in the <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/Welcome.html">IAM Identity Center OIDC API Reference</a>.</p> <p>The token used to obtain an access token in the event that the access token is invalid or expired.</p>
	RefreshToken *string `json:"refreshToken,omitempty"`
	// The list of scopes that is defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.
	Scope []string `json:"scope,omitempty"`
}

type CreateTokenRequest struct {
	Headers CreateTokenHeaders
	Request CreateTokenRequestBody `request:"mediaType=application/json"`
}

type CreateTokenResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationPendingException
	AuthorizationPendingException interface{}
	ContentType                   string
	// Success
	CreateTokenResponse *shared.CreateTokenResponse
	// ExpiredTokenException
	ExpiredTokenException interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidClientException
	InvalidClientException interface{}
	// InvalidGrantException
	InvalidGrantException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidScopeException
	InvalidScopeException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// SlowDownException
	SlowDownException interface{}
	// UnauthorizedClientException
	UnauthorizedClientException interface{}
	// UnsupportedGrantTypeException
	UnsupportedGrantTypeException interface{}
}
