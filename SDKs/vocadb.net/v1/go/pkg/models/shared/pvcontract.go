// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PVContractPVTypeEnum string

const (
	PVContractPVTypeEnumOriginal PVContractPVTypeEnum = "Original"
	PVContractPVTypeEnumReprint  PVContractPVTypeEnum = "Reprint"
	PVContractPVTypeEnumOther    PVContractPVTypeEnum = "Other"
)

func (e *PVContractPVTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Original":
		fallthrough
	case "Reprint":
		fallthrough
	case "Other":
		*e = PVContractPVTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PVContractPVTypeEnum: %s", s)
	}
}

type PVContractServiceEnum string

const (
	PVContractServiceEnumNicoNicoDouga PVContractServiceEnum = "NicoNicoDouga"
	PVContractServiceEnumYoutube       PVContractServiceEnum = "Youtube"
	PVContractServiceEnumSoundCloud    PVContractServiceEnum = "SoundCloud"
	PVContractServiceEnumVimeo         PVContractServiceEnum = "Vimeo"
	PVContractServiceEnumPiapro        PVContractServiceEnum = "Piapro"
	PVContractServiceEnumBilibili      PVContractServiceEnum = "Bilibili"
	PVContractServiceEnumFile          PVContractServiceEnum = "File"
	PVContractServiceEnumLocalFile     PVContractServiceEnum = "LocalFile"
	PVContractServiceEnumCreofuga      PVContractServiceEnum = "Creofuga"
	PVContractServiceEnumBandcamp      PVContractServiceEnum = "Bandcamp"
)

func (e *PVContractServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NicoNicoDouga":
		fallthrough
	case "Youtube":
		fallthrough
	case "SoundCloud":
		fallthrough
	case "Vimeo":
		fallthrough
	case "Piapro":
		fallthrough
	case "Bilibili":
		fallthrough
	case "File":
		fallthrough
	case "LocalFile":
		fallthrough
	case "Creofuga":
		fallthrough
	case "Bandcamp":
		*e = PVContractServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PVContractServiceEnum: %s", s)
	}
}

type PVContract struct {
	Author           *string                `json:"author,omitempty"`
	CreatedBy        *int                   `json:"createdBy,omitempty"`
	Disabled         *bool                  `json:"disabled,omitempty"`
	ExtendedMetadata *PVExtendedMetadata    `json:"extendedMetadata,omitempty"`
	ID               *int                   `json:"id,omitempty"`
	Length           *int                   `json:"length,omitempty"`
	Name             *string                `json:"name,omitempty"`
	PublishDate      *time.Time             `json:"publishDate,omitempty"`
	PvID             *string                `json:"pvId,omitempty"`
	PvType           *PVContractPVTypeEnum  `json:"pvType,omitempty"`
	Service          *PVContractServiceEnum `json:"service,omitempty"`
	ThumbURL         *string                `json:"thumbUrl,omitempty"`
	URL              *string                `json:"url,omitempty"`
}
