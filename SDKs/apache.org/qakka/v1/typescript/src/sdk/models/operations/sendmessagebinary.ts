/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SendMessageBinaryRequest extends SpeakeasyBase {
  /**
   * Data to be send with Queue Message
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/octet-stream" })
  requestBody: Uint8Array;

  /**
   * Content type of the data to be sent with Queue Message
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=contentType",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=delay" })
  delay?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expiration",
  })
  expiration?: string;

  /**
   * Name of Queue
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=queueName",
  })
  queueName: string;

  /**
   * Regions to which message is to be sent
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=regions",
  })
  regions?: string;
}

export class SendMessageBinaryResponse extends SpeakeasyBase {
  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  apiResponse?: shared.ApiResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
