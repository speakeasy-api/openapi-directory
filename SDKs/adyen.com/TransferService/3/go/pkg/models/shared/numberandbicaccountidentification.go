// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NumberAndBicAccountIdentificationTypeEnum - **numberAndBic**
type NumberAndBicAccountIdentificationTypeEnum string

const (
	NumberAndBicAccountIdentificationTypeEnumNumberAndBic NumberAndBicAccountIdentificationTypeEnum = "numberAndBic"
)

func (e *NumberAndBicAccountIdentificationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "numberAndBic":
		*e = NumberAndBicAccountIdentificationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberAndBicAccountIdentificationTypeEnum: %s", s)
	}
}

// NumberAndBicAccountIdentification - Contains the bank account details. The fields required in this object depend on the country of the bank account and the currency of the transfer.
type NumberAndBicAccountIdentification struct {
	// The bank account number, without separators or whitespace. The length and format depends on the bank or country.
	AccountNumber                string                        `json:"accountNumber"`
	AdditionalBankIdentification *AdditionalBankIdentification `json:"additionalBankIdentification,omitempty"`
	// The bank's 8- or 11-character BIC or SWIFT code.
	Bic string `json:"bic"`
	// **numberAndBic**
	Type NumberAndBicAccountIdentificationTypeEnum `json:"type"`
}
