/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Sms - SMS
 */
public class Sms {
    /**
     * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
     */
    @JsonProperty("account_id")
    public String accountId;
    public Sms withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Search for messages with this `account_ref`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_ref")
    public String accountRef;
    public Sms withAccountRef(String accountRef) {
        this.accountRef = accountRef;
        return this;
    }
    
    /**
     * URL to send a callback upon completion of the report. This POST callback contains the same information as the response to [Get status of report](/api/reports#get-report).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callback_url")
    public String callbackUrl;
    public Sms withCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
    }
    
    /**
     * Search for messages with this `client_ref`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_ref")
    public String clientRef;
    public Sms withClientRef(String clientRef) {
        this.clientRef = clientRef;
        return this;
    }
    
    /**
     * ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]\u00b1hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when report should end.  It is exclusive, i.e. the provided value is strictly greater than the value in the field `date_received` in the CDR. &lt;br&gt;If unspecified, defaults to the current time.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_end")
    public LocalDate dateEnd;
    public Sms withDateEnd(LocalDate dateEnd) {
        this.dateEnd = dateEnd;
        return this;
    }
    
    /**
     * ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]\u00b1hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when reports  should begin. It filters on the time the API call was received by Vonage and corresponds to the field `date_received` (`date_start` for Voice) in the report file. It is inclusive, i.e. the provided value is less than or equal to the value in the field `date_received` (`date_start` for Voice) in the CDR.&lt;br&gt;If unspecified, defaults  to seven days ago.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_start")
    public LocalDate dateStart;
    public Sms withDateStart(LocalDate dateStart) {
        this.dateStart = dateStart;
        return this;
    }
    
    /**
     * Direction of the communication, either `inbound` (received by our services), or `outbound` (originated from our services). Required for products `SMS` and `MESSAGES`. Optional for `VOICE-CALL`. Invalid for `IN-APP-VOICE`, `CONVERSATIONS`, `NUMBER-INSIGHT`, `VERIFY-API`.
     */
    @JsonProperty("direction")
    public DirectionEnum direction;
    public Sms withDirection(DirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Request from this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;
    public Sms withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Include the text of messages in the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("include_message")
    public Boolean includeMessage;
    public Sms withIncludeMessage(Boolean includeMessage) {
        this.includeMessage = includeMessage;
        return this;
    }
    
    /**
     * Whether to include subaccounts or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("include_subaccounts")
    public IncludeSubaccountsEnum includeSubaccounts;
    public Sms withIncludeSubaccounts(IncludeSubaccountsEnum includeSubaccounts) {
        this.includeSubaccounts = includeSubaccounts;
        return this;
    }
    
    /**
     * Network used to send the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public Sms withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Which product you wish to generate a report for.
     */
    @JsonProperty("product")
    public ProductSmsEnum product;
    public Sms withProduct(ProductSmsEnum product) {
        this.product = product;
        return this;
    }
    
    /**
     * Indicates whether the SMS was split up into multiple parts (due to its length).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("show_concatenated")
    public Boolean showConcatenated;
    public Sms withShowConcatenated(Boolean showConcatenated) {
        this.showConcatenated = showConcatenated;
        return this;
    }
    
    /**
     * Search only for sms with the corresponding status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public SmsStatusEnum status;
    public Sms withStatus(SmsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Request to this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;
    public Sms withTo(String to) {
        this.to = to;
        return this;
    }
    
}
