"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GETReplaceIamInstanceProfileAssociationActionEnum(str, Enum):
    REPLACE_IAM_INSTANCE_PROFILE_ASSOCIATION = 'ReplaceIamInstanceProfileAssociation'


@dataclasses.dataclass
class GETReplaceIamInstanceProfileAssociationIamInstanceProfile:
    r"""Describes an IAM instance profile."""
    
    arn: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Arn' }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Name' }})  
    
class GETReplaceIamInstanceProfileAssociationVersionEnum(str, Enum):
    TWO_THOUSAND_AND_SIXTEEN_11_15 = '2016-11-15'


@dataclasses.dataclass
class GETReplaceIamInstanceProfileAssociationRequest:
    
    action: GETReplaceIamInstanceProfileAssociationActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Action', 'style': 'form', 'explode': True }})  
    association_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'AssociationId', 'style': 'form', 'explode': True }})
    r"""The ID of the existing IAM instance profile association."""  
    iam_instance_profile: GETReplaceIamInstanceProfileAssociationIamInstanceProfile = dataclasses.field(metadata={'query_param': { 'field_name': 'IamInstanceProfile', 'style': 'form', 'explode': True }})
    r"""The IAM instance profile."""  
    version: GETReplaceIamInstanceProfileAssociationVersionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Version', 'style': 'form', 'explode': True }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GETReplaceIamInstanceProfileAssociationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    