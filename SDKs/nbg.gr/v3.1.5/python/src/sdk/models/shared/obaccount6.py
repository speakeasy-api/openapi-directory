"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import obbranchandfinancialinstitutionidentification5 as shared_obbranchandfinancialinstitutionidentification5
from ..shared import obcashaccount5 as shared_obcashaccount5
from ..shared import obexternalaccountsubtype1code_enum as shared_obexternalaccountsubtype1code_enum
from ..shared import obexternalaccounttype1code_enum as shared_obexternalaccounttype1code_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBAccount6:
    r"""Unambiguous identification of the account to which credit and debit entries are made."""
    
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId') }})
    r"""A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner."""  
    account_sub_type: shared_obexternalaccountsubtype1code_enum.OBExternalAccountSubType1CodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountSubType') }})  
    account_type: shared_obexternalaccounttype1code_enum.OBExternalAccountType1CodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountType') }})  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Currency') }})
    r"""Identification of the currency in which the account is held.  Usage: Currency should only be used in case one and the same account number covers several currencies and the initiating party needs to identify which currency needs to be used for settlement on the account."""  
    account: Optional[list[shared_obcashaccount5.OBCashAccount5]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Account'), 'exclude': lambda f: f is None }})
    r"""Provides the details to identify an account."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Specifies the description of the account type."""  
    nickname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Nickname'), 'exclude': lambda f: f is None }})
    r"""The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account."""  
    opening_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OpeningDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date on which the account and related basic services are effectively operational for the account owner.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00"""  
    servicer: Optional[shared_obbranchandfinancialinstitutionidentification5.OBBranchAndFinancialInstitutionIdentification5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Servicer'), 'exclude': lambda f: f is None }})  
    