/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecurringCharge } from "./recurringcharge";
import { Expose, Type } from "class-transformer";

/**
 * The offering type of this node.
 */
export class ReservedNodesOffering extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "FixedPrice" })
  fixedPrice?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NodeType" })
  nodeType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OfferingType" })
  offeringType?: string;

  @SpeakeasyMetadata({ elemType: RecurringCharge })
  @Expose({ name: "RecurringCharges" })
  @Type(() => RecurringCharge)
  recurringCharges?: RecurringCharge[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReservedNodesOfferingId" })
  reservedNodesOfferingId?: string;
}
