/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Indicates whether to automatically cross-account subnet associations that are associated with the transit gateway multicast domain.
 */
export enum DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsAutoAcceptSharedAssociationsEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * Indicates whether Internet Group Management Protocol (IGMP) version 2 is turned on for the transit gateway multicast domain.
 */
export enum DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsIgmpv2SupportEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * Indicates whether support for statically configuring transit gateway multicast group sources is turned on.
 */
export enum DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsStaticSourcesSupportEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * The options for the transit gateway multicast domain.
 */
export class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  autoAcceptSharedAssociations?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsAutoAcceptSharedAssociationsEnum;

  @SpeakeasyMetadata()
  igmpv2Support?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsIgmpv2SupportEnum;

  @SpeakeasyMetadata()
  staticSourcesSupport?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsStaticSourcesSupportEnum;
}

/**
 * The state of the transit gateway multicast domain.
 */
export enum DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainStateEnum {
  Pending = "pending",
  Available = "available",
  Deleting = "deleting",
  Deleted = "deleted",
}

/**
 * Describes a tag.
 */
export class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the deleted transit gateway multicast domain.
 */
export class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomain extends SpeakeasyBase {
  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  options?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptions;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  state?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainStateEnum;

  @SpeakeasyMetadata({
    elemType:
      DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainTags,
  })
  tags?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainTags[];

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  transitGatewayMulticastDomainArn?: string;

  @SpeakeasyMetadata()
  transitGatewayMulticastDomainId?: string;
}

/**
 * Success
 */
export class DeleteTransitGatewayMulticastDomainResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  transitGatewayMulticastDomain?: DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomain;
}
