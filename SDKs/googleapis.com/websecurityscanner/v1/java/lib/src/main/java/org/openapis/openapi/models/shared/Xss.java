/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Xss - Information reported for an XSS.
 */
public class Xss {
    /**
     * The attack vector of the payload triggering this XSS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attackVector")
    public XssAttackVectorEnum attackVector;

    public Xss withAttackVector(XssAttackVectorEnum attackVector) {
        this.attackVector = attackVector;
        return this;
    }
    
    /**
     * An error message generated by a javascript breakage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public Xss withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * Stack traces leading to the point where the XSS occurred.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stackTraces")
    public String[] stackTraces;

    public Xss withStackTraces(String[] stackTraces) {
        this.stackTraces = stackTraces;
        return this;
    }
    
    /**
     * The reproduction url for the seeding POST request of a Stored XSS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storedXssSeedingUrl")
    public String storedXssSeedingUrl;

    public Xss withStoredXssSeedingUrl(String storedXssSeedingUrl) {
        this.storedXssSeedingUrl = storedXssSeedingUrl;
        return this;
    }
    
    public Xss(){}
}
