/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETGETVpnConnectionDeviceSampleConfigurationQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETGETVpnConnectionDeviceSampleConfigurationActionEnum action;
    public GETGETVpnConnectionDeviceSampleConfigurationQueryParams withAction(GETGETVpnConnectionDeviceSampleConfigurationActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETGETVpnConnectionDeviceSampleConfigurationQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IKE version to be used in the sample configuration file for your customer gateway device. You can specify one of the following versions: &lt;code&gt;ikev1&lt;/code&gt; or &lt;code&gt;ikev2&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=InternetKeyExchangeVersion")
    public String internetKeyExchangeVersion;
    public GETGETVpnConnectionDeviceSampleConfigurationQueryParams withInternetKeyExchangeVersion(String internetKeyExchangeVersion) {
        this.internetKeyExchangeVersion = internetKeyExchangeVersion;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETGETVpnConnectionDeviceSampleConfigurationVersionEnum version;
    public GETGETVpnConnectionDeviceSampleConfigurationQueryParams withVersion(GETGETVpnConnectionDeviceSampleConfigurationVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * Device identifier provided by the &lt;code&gt;GetVpnConnectionDeviceTypes&lt;/code&gt; API.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpnConnectionDeviceTypeId")
    public String vpnConnectionDeviceTypeId;
    public GETGETVpnConnectionDeviceSampleConfigurationQueryParams withVpnConnectionDeviceTypeId(String vpnConnectionDeviceTypeId) {
        this.vpnConnectionDeviceTypeId = vpnConnectionDeviceTypeId;
        return this;
    }
    
    /**
     * The &lt;code&gt;VpnConnectionId&lt;/code&gt; specifies the Site-to-Site VPN connection used for the sample configuration.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpnConnectionId")
    public String vpnConnectionId;
    public GETGETVpnConnectionDeviceSampleConfigurationQueryParams withVpnConnectionId(String vpnConnectionId) {
        this.vpnConnectionId = vpnConnectionId;
        return this;
    }
    
}
