<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class FilesetSummary
{
    /**
     * Include or exclude hidden folders inside locally-mounted remote file systems from backups.
     * 
     * @var ?bool $allowBackupHiddenFoldersInNetworkMounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowBackupHiddenFoldersInNetworkMounts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowBackupHiddenFoldersInNetworkMounts = null;
    
    /**
     * Include or exclude locally-mounted remote file systems from backups.
     * 
     * @var ?bool $allowBackupNetworkMounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowBackupNetworkMounts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowBackupNetworkMounts = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('arraySpec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FilesetArraySpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FilesetArraySpec $arraySpec = null;
    
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainId;
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainName;
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum $configuredSlaDomainType
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfiguredSlaTypeEnum $configuredSlaDomainType = null;
    
    /**
     * The ID of the effective SLA Domain for this fileset.
     * 
     * @var ?string $effectiveSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaDomainId = null;
    
    /**
     * The name of the effective SLA Domain for this fileset.
     * 
     * @var ?string $effectiveSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaDomainName = null;
    
    /**
     * Optional field containing Polaris managed ID of the effective SLA domain if it is Polaris managed.
     * 
     * @var ?string $effectiveSlaDomainPolarisManagedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainPolarisManagedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaDomainPolarisManagedId = null;
    
    /**
     * A Boolean value that determines whether to recognize and dedupe hardlinks in a fileset. When 'true,' performs a hardlink deduplication. When 'false,' performs a normal backup that treats hardlinks as normal files. If not specified, this defaults to false.
     * 
     * @var ?bool $enableHardlinkSupport
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableHardlinkSupport')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableHardlinkSupport = null;
    
    /**
     * A Boolean value that determines whether to resolve symlink in a fileset. When 'true,' performs a symlink resolution. When 'false,' performs no symlink resolution. If not specified, this defaults to false.
     * 
     * @var ?bool $enableSymlinkResolution
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableSymlinkResolution')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableSymlinkResolution = null;
    
    /**
     * $exceptions
     * 
     * @var ?array<string> $exceptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('exceptions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exceptions = null;
    
    /**
     * $excludes
     * 
     * @var ?array<string> $excludes
     */
	#[\JMS\Serializer\Annotation\SerializedName('excludes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $excludes = null;
    
    /**
     * ID of the failover cluster app.
     * 
     * @var ?string $failoverClusterAppId
     */
	#[\JMS\Serializer\Annotation\SerializedName('failoverClusterAppId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $failoverClusterAppId = null;
    
    /**
     * The name of the failover cluster app.
     * 
     * @var ?string $failoverClusterAppName
     */
	#[\JMS\Serializer\Annotation\SerializedName('failoverClusterAppName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $failoverClusterAppName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $hostName;
    
    /**
     * The ID of the Rubrik object.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * $includes
     * 
     * @var array<string> $includes
     */
	#[\JMS\Serializer\Annotation\SerializedName('includes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $includes;
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isConfiguredSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isConfiguredSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isConfiguredSlaDomainRetentionLocked = null;
    
    /**
     * An optional Boolean value that specifies whether the effective SLA Domain of a fileset is Retention Locked. When this value is 'true,' the SLA Domain is retention locked. When this value is 'false,' the SLA Domain is not Retention Locked.
     * 
     * @var ?bool $isEffectiveSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEffectiveSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEffectiveSlaDomainRetentionLocked = null;
    
    /**
     * A Boolean value that determines whether to take a direct archive backup. When 'true,' performs a direct archive backup. When 'false,' performs a normal backup. If not specified, this defaults to false.
     * 
     * @var ?bool $isPassthrough
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPassthrough')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPassthrough = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isRelic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isRelic;
    
    /**
     * The name of the Rubrik object.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('operatingSystemType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operatingSystemType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pendingSlaDomain')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedObjectPendingSlaInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedObjectPendingSlaInfo $pendingSlaDomain = null;
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     * 
     * @var string $primaryClusterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryClusterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryClusterId;
    
	#[\JMS\Serializer\Annotation\SerializedName('shareId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shareId = null;
    
    /**
     * The UTC time when the SLA Domain was last updated.
     * 
     * @var ?\DateTime $slaLastUpdateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaLastUpdateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $slaLastUpdateTime = null;
    
    /**
     * Rubrik CDM uses a prefix match to select the latest SnapMirror snapshot that matches this value during a full backup of a SnapMirror destination share.
     * 
     * @var ?string $snapMirrorLabelForFullBackup
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapMirrorLabelForFullBackup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $snapMirrorLabelForFullBackup = null;
    
    /**
     * Rubrik CDM selects the latest SnapMirror snapshot that matches this value using a prefix match during an incremental backup of a SnapMirror destination share.
     * 
     * @var ?string $snapMirrorLabelForIncrementalBackup
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapMirrorLabelForIncrementalBackup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $snapMirrorLabelForIncrementalBackup = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('templateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $templateId;
    
	#[\JMS\Serializer\Annotation\SerializedName('templateName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $templateName;
    
    /**
     * Use VSS during Windows backups.
     * 
     * @var ?bool $useWindowsVss
     */
	#[\JMS\Serializer\Annotation\SerializedName('useWindowsVss')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useWindowsVss = null;
    
	public function __construct()
	{
		$this->allowBackupHiddenFoldersInNetworkMounts = null;
		$this->allowBackupNetworkMounts = null;
		$this->arraySpec = null;
		$this->configuredSlaDomainId = "";
		$this->configuredSlaDomainName = "";
		$this->configuredSlaDomainType = null;
		$this->effectiveSlaDomainId = null;
		$this->effectiveSlaDomainName = null;
		$this->effectiveSlaDomainPolarisManagedId = null;
		$this->enableHardlinkSupport = null;
		$this->enableSymlinkResolution = null;
		$this->exceptions = null;
		$this->excludes = null;
		$this->failoverClusterAppId = null;
		$this->failoverClusterAppName = null;
		$this->hostId = null;
		$this->hostName = "";
		$this->id = "";
		$this->includes = [];
		$this->isConfiguredSlaDomainRetentionLocked = null;
		$this->isEffectiveSlaDomainRetentionLocked = null;
		$this->isPassthrough = null;
		$this->isRelic = false;
		$this->name = "";
		$this->operatingSystemType = null;
		$this->pendingSlaDomain = null;
		$this->primaryClusterId = "";
		$this->shareId = null;
		$this->slaLastUpdateTime = null;
		$this->snapMirrorLabelForFullBackup = null;
		$this->snapMirrorLabelForIncrementalBackup = null;
		$this->templateId = "";
		$this->templateName = "";
		$this->useWindowsVss = null;
	}
}
