/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * RecordDetail - Information about a request operation.
 */
public class RecordDetail {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTime")
    public OffsetDateTime createdTime;

    public RecordDetail withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LaunchRoleArn")
    public String launchRoleArn;

    public RecordDetail withLaunchRoleArn(String launchRoleArn) {
        this.launchRoleArn = launchRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PathId")
    public String pathId;

    public RecordDetail withPathId(String pathId) {
        this.pathId = pathId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProductId")
    public String productId;

    public RecordDetail withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProvisionedProductId")
    public String provisionedProductId;

    public RecordDetail withProvisionedProductId(String provisionedProductId) {
        this.provisionedProductId = provisionedProductId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProvisionedProductName")
    public String provisionedProductName;

    public RecordDetail withProvisionedProductName(String provisionedProductName) {
        this.provisionedProductName = provisionedProductName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProvisionedProductType")
    public String provisionedProductType;

    public RecordDetail withProvisionedProductType(String provisionedProductType) {
        this.provisionedProductType = provisionedProductType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProvisioningArtifactId")
    public String provisioningArtifactId;

    public RecordDetail withProvisioningArtifactId(String provisioningArtifactId) {
        this.provisioningArtifactId = provisioningArtifactId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordErrors")
    public RecordError[] recordErrors;

    public RecordDetail withRecordErrors(RecordError[] recordErrors) {
        this.recordErrors = recordErrors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordId")
    public String recordId;

    public RecordDetail withRecordId(String recordId) {
        this.recordId = recordId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordTags")
    public RecordTag[] recordTags;

    public RecordDetail withRecordTags(RecordTag[] recordTags) {
        this.recordTags = recordTags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordType")
    public String recordType;

    public RecordDetail withRecordType(String recordType) {
        this.recordType = recordType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public RecordStatusEnum status;

    public RecordDetail withStatus(RecordStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedTime")
    public OffsetDateTime updatedTime;

    public RecordDetail withUpdatedTime(OffsetDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }
    
    public RecordDetail(){}
}
