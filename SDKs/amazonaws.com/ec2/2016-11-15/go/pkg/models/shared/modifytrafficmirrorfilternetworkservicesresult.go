// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange - The destination port range assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange struct {
	FromPort *int64
	ToPort   *int64
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum - The action assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum string

const (
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnumAccept ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum = "accept"
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnumReject ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum = "reject"
)

func (e *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "accept":
		fallthrough
	case "reject":
		*e = ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesSourcePortRange - The source port range assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesSourcePortRange struct {
	FromPort *int64
	ToPort   *int64
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum - The traffic direction assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum string

const (
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnumIngress ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum = "ingress"
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnumEgress  ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum = "egress"
)

func (e *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ingress":
		fallthrough
	case "egress":
		*e = ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRules - Describes the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRules struct {
	Description               *string
	DestinationCidrBlock      *string
	DestinationPortRange      *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange
	Protocol                  *int64
	RuleAction                *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum
	RuleNumber                *int64
	SourceCidrBlock           *string
	SourcePortRange           *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesSourcePortRange
	TrafficDirection          *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum
	TrafficMirrorFilterID     *string
	TrafficMirrorFilterRuleID *string
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange - The destination port range assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange struct {
	FromPort *int64
	ToPort   *int64
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum - The action assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum string

const (
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnumAccept ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum = "accept"
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnumReject ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum = "reject"
)

func (e *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "accept":
		fallthrough
	case "reject":
		*e = ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesSourcePortRange - The source port range assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesSourcePortRange struct {
	FromPort *int64
	ToPort   *int64
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum - The traffic direction assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum string

const (
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnumIngress ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum = "ingress"
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnumEgress  ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum = "egress"
)

func (e *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ingress":
		fallthrough
	case "egress":
		*e = ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRules - Describes the Traffic Mirror rule.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRules struct {
	Description               *string
	DestinationCidrBlock      *string
	DestinationPortRange      *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange
	Protocol                  *int64
	RuleAction                *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum
	RuleNumber                *int64
	SourceCidrBlock           *string
	SourcePortRange           *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesSourcePortRange
	TrafficDirection          *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum
	TrafficMirrorFilterID     *string
	TrafficMirrorFilterRuleID *string
}

type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum string

const (
	ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnumAmazonDNS ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum = "amazon-dns"
)

func (e *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "amazon-dns":
		*e = ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterTags - Describes a tag.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterTags struct {
	Key   *string
	Value *string
}

// ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilter - The Traffic Mirror filter that the network service is associated with.
type ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilter struct {
	Description           *string
	EgressFilterRules     []ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRules
	IngressFilterRules    []ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRules
	NetworkServices       []ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum
	Tags                  []ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterTags
	TrafficMirrorFilterID *string
}

// ModifyTrafficMirrorFilterNetworkServicesResult - Success
type ModifyTrafficMirrorFilterNetworkServicesResult struct {
	TrafficMirrorFilter *ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilter
}
