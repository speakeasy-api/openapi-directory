"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Version = exports.VersionStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var actinguser_1 = require("./actinguser");
var servingconfig_1 = require("./servingconfig");
var class_transformer_1 = require("class-transformer");
/**
 * The deploy status of the version. For a successful deploy, call [`CreateVersion`](sites.versions/create) to make a new version (`CREATED` status), [upload all desired files](sites.versions/populateFiles) to the version, then [update](sites.versions/patch) the version to the `FINALIZED` status. Note that if you leave the version in the `CREATED` state for more than 12 hours, the system will automatically mark the version as `ABANDONED`. You can also change the status of a version to `DELETED` by calling [`DeleteVersion`](sites.versions/delete).
 */
var VersionStatusEnum;
(function (VersionStatusEnum) {
    VersionStatusEnum["VersionStatusUnspecified"] = "VERSION_STATUS_UNSPECIFIED";
    VersionStatusEnum["Created"] = "CREATED";
    VersionStatusEnum["Finalized"] = "FINALIZED";
    VersionStatusEnum["Deleted"] = "DELETED";
    VersionStatusEnum["Abandoned"] = "ABANDONED";
    VersionStatusEnum["Expired"] = "EXPIRED";
    VersionStatusEnum["Cloning"] = "CLONING";
})(VersionStatusEnum = exports.VersionStatusEnum || (exports.VersionStatusEnum = {}));
/**
 * A `Version` is a configuration and a collection of static files which determine how a site is displayed.
 */
var Version = /** @class */ (function (_super) {
    __extends(Version, _super);
    function Version() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "config" }),
        (0, class_transformer_1.Type)(function () { return servingconfig_1.ServingConfig; }),
        __metadata("design:type", servingconfig_1.ServingConfig)
    ], Version.prototype, "config", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], Version.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createUser" }),
        (0, class_transformer_1.Type)(function () { return actinguser_1.ActingUser; }),
        __metadata("design:type", actinguser_1.ActingUser)
    ], Version.prototype, "createUser", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deleteTime" }),
        __metadata("design:type", String)
    ], Version.prototype, "deleteTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deleteUser" }),
        (0, class_transformer_1.Type)(function () { return actinguser_1.ActingUser; }),
        __metadata("design:type", actinguser_1.ActingUser)
    ], Version.prototype, "deleteUser", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileCount" }),
        __metadata("design:type", String)
    ], Version.prototype, "fileCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "finalizeTime" }),
        __metadata("design:type", String)
    ], Version.prototype, "finalizeTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "finalizeUser" }),
        (0, class_transformer_1.Type)(function () { return actinguser_1.ActingUser; }),
        __metadata("design:type", actinguser_1.ActingUser)
    ], Version.prototype, "finalizeUser", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], Version.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Version.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Version.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "versionBytes" }),
        __metadata("design:type", String)
    ], Version.prototype, "versionBytes", void 0);
    return Version;
}(utils_1.SpeakeasyBase));
exports.Version = Version;
