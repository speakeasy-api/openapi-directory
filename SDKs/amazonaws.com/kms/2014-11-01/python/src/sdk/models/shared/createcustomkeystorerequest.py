"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customkeystoretype_enum as shared_customkeystoretype_enum
from ..shared import xksproxyauthenticationcredentialtype as shared_xksproxyauthenticationcredentialtype
from ..shared import xksproxyconnectivitytype_enum as shared_xksproxyconnectivitytype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCustomKeyStoreRequest:
    
    custom_key_store_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomKeyStoreName') }})  
    cloud_hsm_cluster_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudHsmClusterId'), 'exclude': lambda f: f is None }})  
    custom_key_store_type: Optional[shared_customkeystoretype_enum.CustomKeyStoreTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomKeyStoreType'), 'exclude': lambda f: f is None }})  
    key_store_password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyStorePassword'), 'exclude': lambda f: f is None }})  
    trust_anchor_certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrustAnchorCertificate'), 'exclude': lambda f: f is None }})  
    xks_proxy_authentication_credential: Optional[shared_xksproxyauthenticationcredentialtype.XksProxyAuthenticationCredentialType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XksProxyAuthenticationCredential'), 'exclude': lambda f: f is None }})  
    xks_proxy_connectivity: Optional[shared_xksproxyconnectivitytype_enum.XksProxyConnectivityTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XksProxyConnectivity'), 'exclude': lambda f: f is None }})  
    xks_proxy_uri_endpoint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XksProxyUriEndpoint'), 'exclude': lambda f: f is None }})  
    xks_proxy_uri_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XksProxyUriPath'), 'exclude': lambda f: f is None }})  
    xks_proxy_vpc_endpoint_service_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XksProxyVpcEndpointServiceName'), 'exclude': lambda f: f is None }})  
    