"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import automljobobjectivetype_enum as shared_automljobobjectivetype_enum
from ..shared import automlmetricenum_enum as shared_automlmetricenum_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FinalAutoMLJobObjectiveMetric:
    r"""The best candidate result from an AutoML training job."""
    
    metric_name: shared_automlmetricenum_enum.AutoMLMetricEnumEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricName') }})  
    value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Value') }})  
    standard_metric_name: Optional[shared_automlmetricenum_enum.AutoMLMetricEnumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardMetricName'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_automljobobjectivetype_enum.AutoMLJobObjectiveTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    