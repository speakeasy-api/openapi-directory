/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BucketCors {
    /**
     * The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxAgeSeconds")
    public Integer maxAgeSeconds;
    public BucketCors withMaxAgeSeconds(Integer maxAgeSeconds) {
        this.maxAgeSeconds = maxAgeSeconds;
        return this;
    }
    
    /**
     * The list of HTTP methods on which to include CORS response headers: GET, OPTIONS, POST, etc. Note, "*" is permitted in the list of methods, and means "any method".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    public String[] method;
    public BucketCors withMethod(String[] method) {
        this.method = method;
        return this;
    }
    
    /**
     * The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String[] origin;
    public BucketCors withOrigin(String[] origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseHeader")
    public String[] responseHeader;
    public BucketCors withResponseHeader(String[] responseHeader) {
        this.responseHeader = responseHeader;
        return this;
    }
    
}
