/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Link } from "./link";
import { Expose, Type } from "class-transformer";

/**
 * A collection of links, which are references from this span to a span in the same or different trace.
 */
export class Links extends SpeakeasyBase {
  /**
   * The number of dropped links after the maximum size was enforced. If this value is 0, then no links were dropped.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "droppedLinksCount" })
  droppedLinksCount?: number;

  /**
   * A collection of links.
   */
  @SpeakeasyMetadata({ elemType: Link })
  @Expose({ name: "link" })
  @Type(() => Link)
  link?: Link[];
}
