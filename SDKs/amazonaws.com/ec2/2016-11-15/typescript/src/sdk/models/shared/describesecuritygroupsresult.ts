/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Describes an IPv4 range.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidrIp?: string;

  @SpeakeasyMetadata()
  description?: string;
}

/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidrIpv6?: string;

  @SpeakeasyMetadata()
  description?: string;
}

/**
 * Describes a prefix list ID.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;
}

/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata()
  peeringStatus?: string;

  @SpeakeasyMetadata()
  userId?: string;

  @SpeakeasyMetadata()
  vpcId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * Describes a set of permissions for a security group rule.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  ipProtocol?: string;

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges,
  })
  ipRanges?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges[];

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges,
  })
  ipv6Ranges?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges[];

  @SpeakeasyMetadata({
    elemType:
      DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds,
  })
  prefixListIds?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds[];

  @SpeakeasyMetadata()
  toPort?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs,
  })
  userIdGroupPairs?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs[];
}

/**
 * Describes an IPv4 range.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidrIp?: string;

  @SpeakeasyMetadata()
  description?: string;
}

/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidrIpv6?: string;

  @SpeakeasyMetadata()
  description?: string;
}

/**
 * Describes a prefix list ID.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;
}

/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata()
  peeringStatus?: string;

  @SpeakeasyMetadata()
  userId?: string;

  @SpeakeasyMetadata()
  vpcId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * Describes a set of permissions for a security group rule.
 */
export class DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  ipProtocol?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges,
  })
  ipRanges?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges[];

  @SpeakeasyMetadata({
    elemType:
      DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges,
  })
  ipv6Ranges?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges[];

  @SpeakeasyMetadata({
    elemType:
      DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds,
  })
  prefixListIds?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds[];

  @SpeakeasyMetadata()
  toPort?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs,
  })
  userIdGroupPairs?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs[];
}

/**
 * Describes a tag.
 */
export class DescribeSecurityGroupsResultSecurityGroupsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a security group.
 */
export class DescribeSecurityGroupsResultSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissions,
  })
  ipPermissions?: DescribeSecurityGroupsResultSecurityGroupsIpPermissions[];

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress,
  })
  ipPermissionsEgress?: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress[];

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupsResultSecurityGroupsTags,
  })
  tags?: DescribeSecurityGroupsResultSecurityGroupsTags[];

  @SpeakeasyMetadata()
  vpcId?: string;
}

/**
 * Success
 */
export class DescribeSecurityGroupsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: DescribeSecurityGroupsResultSecurityGroups })
  securityGroups?: DescribeSecurityGroupsResultSecurityGroups[];
}
