/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KmsGrantConstraints - Use this structure to propose allowing &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations"&gt;cryptographic operations&lt;/a&gt; in the grant only when the operation request includes the specified &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context"&gt;encryption context&lt;/a&gt;. You can specify only one type of encryption context. An empty map is treated as not specified. For more information, see &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html"&gt;GrantConstraints&lt;/a&gt;.
 */
public class KmsGrantConstraints {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionContextEquals")
    public java.util.Map<String, String> encryptionContextEquals;
    public KmsGrantConstraints withEncryptionContextEquals(java.util.Map<String, String> encryptionContextEquals) {
        this.encryptionContextEquals = encryptionContextEquals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionContextSubset")
    public java.util.Map<String, String> encryptionContextSubset;
    public KmsGrantConstraints withEncryptionContextSubset(java.util.Map<String, String> encryptionContextSubset) {
        this.encryptionContextSubset = encryptionContextSubset;
        return this;
    }
    
}
