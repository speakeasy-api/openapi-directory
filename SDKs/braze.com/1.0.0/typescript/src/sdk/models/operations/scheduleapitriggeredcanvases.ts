/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ScheduleApiTriggeredCanvasesRequestBodyAudienceANDCustomAttribute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comparison" })
  comparison?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_attribute_name" })
  customAttributeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class ScheduleApiTriggeredCanvasesRequestBodyAudienceAND extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "custom_attribute" })
  @Type(() => ScheduleApiTriggeredCanvasesRequestBodyAudienceANDCustomAttribute)
  customAttribute?: ScheduleApiTriggeredCanvasesRequestBodyAudienceANDCustomAttribute;
}

export class ScheduleApiTriggeredCanvasesRequestBodyAudience extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: ScheduleApiTriggeredCanvasesRequestBodyAudienceAND,
  })
  @Expose({ name: "AND" })
  @Type(() => ScheduleApiTriggeredCanvasesRequestBodyAudienceAND)
  and?: ScheduleApiTriggeredCanvasesRequestBodyAudienceAND[];
}

export class ScheduleApiTriggeredCanvasesRequestBodyRecipients extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "canvas_entry_properties" })
  canvasEntryProperties?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "external_user_id" })
  externalUserId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trigger_properties" })
  triggerProperties?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_alias" })
  userAlias?: string;
}

export class ScheduleApiTriggeredCanvasesRequestBodySchedule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "at_optimal_time" })
  atOptimalTime?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "in_local_time" })
  inLocalTime?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: string;
}

export class ScheduleApiTriggeredCanvasesRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "audience" })
  @Type(() => ScheduleApiTriggeredCanvasesRequestBodyAudience)
  audience?: ScheduleApiTriggeredCanvasesRequestBodyAudience;

  @SpeakeasyMetadata()
  @Expose({ name: "broadcast" })
  broadcast?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canvas_entry_properties" })
  canvasEntryProperties?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "canvas_id" })
  canvasId?: string;

  @SpeakeasyMetadata({
    elemType: ScheduleApiTriggeredCanvasesRequestBodyRecipients,
  })
  @Expose({ name: "recipients" })
  @Type(() => ScheduleApiTriggeredCanvasesRequestBodyRecipients)
  recipients?: ScheduleApiTriggeredCanvasesRequestBodyRecipients[];

  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  @Type(() => ScheduleApiTriggeredCanvasesRequestBodySchedule)
  schedule?: ScheduleApiTriggeredCanvasesRequestBodySchedule;
}

export class ScheduleApiTriggeredCanvasesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
