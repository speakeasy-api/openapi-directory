<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Flag - A flag resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Flag
{
    /**
     * Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values.
     * 
     * @var ?array<string> $allowedIntValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedIntValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowedIntValues = null;
    
    /**
     * For `STRING` flags, a list of strings that the value can be set to.
     * 
     * @var ?array<string> $allowedStringValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedStringValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowedStringValues = null;
    
    /**
     * The database version this flag applies to. Can be MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12`. SQL Server instances: `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FlagAppliesToEnum> $appliesTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('appliesTo')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\FlagAppliesToEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $appliesTo = null;
    
    /**
     * Whether or not the flag is considered in beta.
     * 
     * @var ?bool $inBeta
     */
	#[\JMS\Serializer\Annotation\SerializedName('inBeta')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inBeta = null;
    
    /**
     * This is always `sql#flag`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * For `INTEGER` flags, the maximum allowed value.
     * 
     * @var ?string $maxValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxValue = null;
    
    /**
     * For `INTEGER` flags, the minimum allowed value.
     * 
     * @var ?string $minValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('minValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minValue = null;
    
    /**
     * This is the name of the flag. Flag names always use underscores, not hyphens, for example: `max_allowed_packet`
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.
     * 
     * @var ?bool $requiresRestart
     */
	#[\JMS\Serializer\Annotation\SerializedName('requiresRestart')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requiresRestart = null;
    
    /**
     * The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`, `INTEGER` or `NONE`. `NONE` is used for flags that do not take a value, such as `skip_grant_tables`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FlagTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FlagTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FlagTypeEnum $type = null;
    
	public function __construct()
	{
		$this->allowedIntValues = null;
		$this->allowedStringValues = null;
		$this->appliesTo = null;
		$this->inBeta = null;
		$this->kind = null;
		$this->maxValue = null;
		$this->minValue = null;
		$this->name = null;
		$this->requiresRestart = null;
		$this->type = null;
	}
}
