/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyModifyPaymentMethod - Container for custom fields of a payment method object.
 * 
 */
public class ProxyModifyPaymentMethod {
    /**
     *  The ID of the customer account associated with this payment method.
     * 
     * **Note:** If a payment method was created without an account ID associated, you can update the payment method to specify an account ID in this operation. However, if a payment method is already associated with a customer account, you cannot update the payment method to associate it with another account ID. You cannot remove the previous account ID and leave the `AccountId` filed empty in this operation. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountId")
    public String accountId;
    public ProxyModifyPaymentMethod withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     *  The nine-digit routing number or ABA number used by banks. Use this field for ACH payment methods.
     * 
     * **Character limit**: 9 **Values**: a string of 9 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchAbaCode")
    public String achAbaCode;
    public ProxyModifyPaymentMethod withAchAbaCode(String achAbaCode) {
        this.achAbaCode = achAbaCode;
        return this;
    }
    
    /**
     *  The name of the account holder, which can be either a person or a company. Use this field for ACH payment methods.
     * 
     * **Character limit**: 70 **Values**: a string of 70 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchAccountName")
    public String achAccountName;
    public ProxyModifyPaymentMethod withAchAccountName(String achAccountName) {
        this.achAccountName = achAccountName;
        return this;
    }
    
    /**
     *  The type of bank account associated with the ACH payment. Use this field for ACH payment methods.
     * 
     * **Character limit**: 16 **Values**:
     * 
     * - `BusinessChecking`
     * - `Checking`
     * - `Saving`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchAccountType")
    public String achAccountType;
    public ProxyModifyPaymentMethod withAchAccountType(String achAccountType) {
        this.achAccountType = achAccountType;
        return this;
    }
    
    /**
     *  Line 1 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.
     * 
     * **Character limit:** **Values:** an address 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchAddress1")
    public String achAddress1;
    public ProxyModifyPaymentMethod withAchAddress1(String achAddress1) {
        this.achAddress1 = achAddress1;
        return this;
    }
    
    /**
     *  Line 2 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.
     * 
     * **Character limit:** **Values:** an address 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchAddress2")
    public String achAddress2;
    public ProxyModifyPaymentMethod withAchAddress2(String achAddress2) {
        this.achAddress2 = achAddress2;
        return this;
    }
    
    /**
     *  The name of the bank where the ACH payment account is held. Use this field for ACH payment methods.
     * 
     * **Character limit**: 70 **Values**: a string of 70 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchBankName")
    public String achBankName;
    public ProxyModifyPaymentMethod withAchBankName(String achBankName) {
        this.achBankName = achBankName;
        return this;
    }
    
    /**
     * The city of the ACH address. Use this field for ACH payment methods. **Note**: This field is only specific to the NMI payment gateway.
     * 
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchCity")
    public String achCity;
    public ProxyModifyPaymentMethod withAchCity(String achCity) {
        this.achCity = achCity;
        return this;
    }
    
    /**
     * The country of the ACH address. See [Country Names and Their ISO Standard 2- and 3-Digit Codes](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/D_Country%2C_State%2C_and_Province_Codes/A_Country_Names_and_Their_ISO_Codes) for the list of supported country names. Use this field for ACH methods.
     * 
     * **Note**: This field is only specific to the NMI payment gateway.
     * 
     * **Character limit**: 44 **Values**: a supported country name 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchCountry")
    public String achCountry;
    public ProxyModifyPaymentMethod withAchCountry(String achCountry) {
        this.achCountry = achCountry;
        return this;
    }
    
    /**
     * The billing address's zip code. This field is required only when you define an ACH payment method. **Note**: This field is only specific to the NMI payment gateway.
     * 
     * **Character limit**: 20 **Values**: a string of 40 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchPostalCode")
    public String achPostalCode;
    public ProxyModifyPaymentMethod withAchPostalCode(String achPostalCode) {
        this.achPostalCode = achPostalCode;
        return this;
    }
    
    /**
     * The billing address's state. Use this field is if the `ACHCountry` value is either `Canada` or the `US`. State names must be spelled in full. For more information, see the list of [supported state names](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/D_Country%2C_State%2C_and_Province_Codes/B_State_Names_and_2-Digit_Codes). This field is required only when you define an ACH payment method. **Note**: This field is only specific to the NMI payment gateway.
     * 
     * **Character limit**: 50 **Values**: a valid state name 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AchState")
    public String achState;
    public ProxyModifyPaymentMethod withAchState(String achState) {
        this.achState = achState;
        return this;
    }
    
    /**
     *  The branch code of the bank used for direct debit. Use this field for direct debit payment methods.
     * 
     * **Character limit**: 10 **Values**:  string of 10 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BankBranchCode")
    public String bankBranchCode;
    public ProxyModifyPaymentMethod withBankBranchCode(String bankBranchCode) {
        this.bankBranchCode = bankBranchCode;
        return this;
    }
    
    /**
     * The check digit in the international bank account number, which confirms the validity of the account. Use this field for direct debit payment methods.
     * 
     * **Character limit**: 4 **Values**:  string of 4 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BankCheckDigit")
    public String bankCheckDigit;
    public ProxyModifyPaymentMethod withBankCheckDigit(String bankCheckDigit) {
        this.bankCheckDigit = bankCheckDigit;
        return this;
    }
    
    /**
     * The type of direct debit transfer. The value of this field is dependent on the country of the user. This field is only required if the `Type` field is set to `BankTransfer`.
     * 
     *  **Values**: 
     *    
     *    - `SEPA`
     * 
     *    - `AutomatischIncasso` (NL)
     * 
     *    - `LastschriftDE` (Germany)
     * 
     *    - `LastschriftAT` (Austria)
     * 
     *    - `DemandeDePrelevement` (FR)
     * 
     *    - `DirectDebitUK` (UK)
     * 
     *    - `Domicil` (Belgium)
     * 
     *    - `LastschriftCH` (CH)
     * 
     *    - `RID` (Italy)
     * 
     *    - `OrdenDeDomiciliacion` (Spain)
     *    - `Autogiro` (Sweden)
     *    - `Betalingsservice` (Denmark)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BankTransferType")
    public String bankTransferType;
    public ProxyModifyPaymentMethod withBankTransferType(String bankTransferType) {
        this.bankTransferType = bankTransferType;
        return this;
    }
    
    /**
     *  The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Use this field only for direct debit payments in Switzerland with Global Collect.
     * 
     * **Character limit**: 11 **Values**: string of 11 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BusinessIdentificationCode")
    public String businessIdentificationCode;
    public ProxyModifyPaymentMethod withBusinessIdentificationCode(String businessIdentificationCode) {
        this.businessIdentificationCode = businessIdentificationCode;
        return this;
    }
    
    /**
     *  The city of the customer's address. Use this field for direct debit payment methods.
     * 
     * **Character limit**:80 **Values**:  string of 80 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("City")
    public String city;
    public ProxyModifyPaymentMethod withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * The name of the company.
     * 
     * Zuora does not recommend that you use this field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompanyName")
    public String companyName;
    public ProxyModifyPaymentMethod withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     *  The two-letter country code of the customer's address. Use this field for direct debit payment methods.
     * 
     * **Character limit**: 2 **Values**: a valid country code 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Country")
    public String country;
    public ProxyModifyPaymentMethod withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     *  The first line of the card holder's address, which is often a street address or business name. Use this field for credit card and direct debit payment methods.
     * 
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardAddress1")
    public String creditCardAddress1;
    public ProxyModifyPaymentMethod withCreditCardAddress1(String creditCardAddress1) {
        this.creditCardAddress1 = creditCardAddress1;
        return this;
    }
    
    /**
     *  The second line of the card holder's address. Use this field for credit card and direct debit payment methods.
     * 
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardAddress2")
    public String creditCardAddress2;
    public ProxyModifyPaymentMethod withCreditCardAddress2(String creditCardAddress2) {
        this.creditCardAddress2 = creditCardAddress2;
        return this;
    }
    
    /**
     *  The city of the card holder's address. Use this field for credit card and direct debit payment methods
     * 
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardCity")
    public String creditCardCity;
    public ProxyModifyPaymentMethod withCreditCardCity(String creditCardCity) {
        this.creditCardCity = creditCardCity;
        return this;
    }
    
    /**
     *  The country of the card holder's address. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardCountry")
    public String creditCardCountry;
    public ProxyModifyPaymentMethod withCreditCardCountry(String creditCardCountry) {
        this.creditCardCountry = creditCardCountry;
        return this;
    }
    
    /**
     *  The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.
     * 
     * **Character limit**: 2 **Values**: a two-digit number, 01 - 12 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardExpirationMonth")
    public Integer creditCardExpirationMonth;
    public ProxyModifyPaymentMethod withCreditCardExpirationMonth(Integer creditCardExpirationMonth) {
        this.creditCardExpirationMonth = creditCardExpirationMonth;
        return this;
    }
    
    /**
     *  The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.
     * 
     * **Character limit**: 4 **Values**: a four-digit number 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardExpirationYear")
    public Integer creditCardExpirationYear;
    public ProxyModifyPaymentMethod withCreditCardExpirationYear(Integer creditCardExpirationYear) {
        this.creditCardExpirationYear = creditCardExpirationYear;
        return this;
    }
    
    /**
     *  The full name of the card holder. Use this field for credit card and direct debit payment methods.
     * 
     * **Character limit**: 50 **Values**: a string of 50 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardHolderName")
    public String creditCardHolderName;
    public ProxyModifyPaymentMethod withCreditCardHolderName(String creditCardHolderName) {
        this.creditCardHolderName = creditCardHolderName;
        return this;
    }
    
    /**
     *  The billing address's zip code. This field is required only when you define a debit card or credit card payment.
     * **Character limit**: 20 **Values**: a string of 20 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardPostalCode")
    public String creditCardPostalCode;
    public ProxyModifyPaymentMethod withCreditCardPostalCode(String creditCardPostalCode) {
        this.creditCardPostalCode = creditCardPostalCode;
        return this;
    }
    
    /**
     *  The CVV or CVV2 security code. See [How do I control what information Zuora sends over to the Payment Gateway?](https://knowledgecenter.zuora.com/kb/How_do_I_control_information_sent_to_payment_gateways_when_verifying_payment_methods%3F) for more information. To ensure PCI compliance, this value is not stored and cannot be queried.
     * **Values**: a valid CVV or CVV2 security code 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardSecurityCode")
    public String creditCardSecurityCode;
    public ProxyModifyPaymentMethod withCreditCardSecurityCode(String creditCardSecurityCode) {
        this.creditCardSecurityCode = creditCardSecurityCode;
        return this;
    }
    
    /**
     *  The billing address's state. Use this field is if the `CreditCardCountry' value is either Canada or the US. State names must be spelled in full. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardState")
    public String creditCardState;
    public ProxyModifyPaymentMethod withCreditCardState(String creditCardState) {
        this.creditCardState = creditCardState;
        return this;
    }
    
    /**
     * The type of the credit card.
     * 
     * Possible values  include `Visa`, `MasterCard`, `AmericanExpress`, `Discover`, `JCB`, and `Diners`. For more information about credit card types supported by different payment gateways, see [Supported Payment Gateways](https://knowledgecenter.zuora.com/CB_Billing/M_Payment_Gateways/Supported_Payment_Gateways).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditCardType")
    public String creditCardType;
    public ProxyModifyPaymentMethod withCreditCardType(String creditCardType) {
        this.creditCardType = creditCardType;
        return this;
    }
    
    /**
     *  The session ID of the user when the `PaymentMethod` was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently only Verifi supports this field.
     * **Character limit**: 255 **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeviceSessionId")
    public String deviceSessionId;
    public ProxyModifyPaymentMethod withDeviceSessionId(String deviceSessionId) {
        this.deviceSessionId = deviceSessionId;
        return this;
    }
    
    /**
     *  An email address for the payment method in addition to the bill to contact email address.
     * **Character limit**: 80 **Values**: a string of 80 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Email")
    public String email;
    public ProxyModifyPaymentMethod withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     *  Indicates if the customer has an existing mandate or a new mandate. A mandate is a signed authorization for UK and NL customers. When you are migrating mandates from another system, be sure to set this field correctly. If you indicate that a new mandate is an existing mandate or vice-versa, then transactions fail. This field is used only for the direct debit payment method.
     * **Character limit**: 3 **Values**: `Yes`, `No` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExistingMandate")
    public String existingMandate;
    public ProxyModifyPaymentMethod withExistingMandate(String existingMandate) {
        this.existingMandate = existingMandate;
        return this;
    }
    
    /**
     *  The customer's first name. This field is used only for the direct debit payment method.
     * **Character limit**: 30 **Values**: a string of 30 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirstName")
    public String firstName;
    public ProxyModifyPaymentMethod withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     *  The International Bank Account Number. This field is used only for the direct debit payment method.
     * **Character limit**: 42 **Values**: a string of 42 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IBAN")
    public String iban;
    public ProxyModifyPaymentMethod withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     *  The IP address of the user when the payment method was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently PayPal, CyberSource, Authorize.Net, Verifi, and WorldPay support this field.
     * **Character limit**: 15 **Values**: a string of 15 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IPAddress")
    public String ipAddress;
    public ProxyModifyPaymentMethod withIPAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    /**
     * The unique identity number of the customer account. 
     * 
     * This field is required only if the `BankTransferType` field is set to `Autogiro` or `Betalingsservice`. It is a string of 12 characters for a Swedish identity number, and a string of 10 characters for a Denish identity number.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IdentityNumber")
    public String identityNumber;
    public ProxyModifyPaymentMethod withIdentityNumber(String identityNumber) {
        this.identityNumber = identityNumber;
        return this;
    }
    
    /**
     * Whether the customer account is a company.
     * 
     * Zuora does not recommend that you use this field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsCompany")
    public Boolean isCompany;
    public ProxyModifyPaymentMethod withIsCompany(Boolean isCompany) {
        this.isCompany = isCompany;
        return this;
    }
    
    /**
     *  The customer's last name. This field is used only for the direct debit payment method.
     * **Character limit**: 70 **Values**: a string of 70 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastName")
    public String lastName;
    public ProxyModifyPaymentMethod withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     *  The date of the most recent transaction.
     * **Character limit**: 29 **Values**: a valid date and time value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastTransactionDateTime")
    public OffsetDateTime lastTransactionDateTime;
    public ProxyModifyPaymentMethod withLastTransactionDateTime(OffsetDateTime lastTransactionDateTime) {
        this.lastTransactionDateTime = lastTransactionDateTime;
        return this;
    }
    
    /**
     *  The date when the mandate was created, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.
     * **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("MandateCreationDate")
    public LocalDate mandateCreationDate;
    public ProxyModifyPaymentMethod withMandateCreationDate(LocalDate mandateCreationDate) {
        this.mandateCreationDate = mandateCreationDate;
        return this;
    }
    
    /**
     *  The ID of the mandate. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.
     * **Character limit**: 36 **Values**: a string of 36 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MandateID")
    public String mandateID;
    public ProxyModifyPaymentMethod withMandateID(String mandateID) {
        this.mandateID = mandateID;
        return this;
    }
    
    /**
     *  Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.
     * **Character limit**: 3 **Values**: `Yes`, `No `(case-sensitive) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MandateReceived")
    public String mandateReceived;
    public ProxyModifyPaymentMethod withMandateReceived(String mandateReceived) {
        this.mandateReceived = mandateReceived;
        return this;
    }
    
    /**
     *  The date when the mandate was last updated, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.
     * **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("MandateUpdateDate")
    public LocalDate mandateUpdateDate;
    public ProxyModifyPaymentMethod withMandateUpdateDate(LocalDate mandateUpdateDate) {
        this.mandateUpdateDate = mandateUpdateDate;
        return this;
    }
    
    /**
     *  Specifies the number of allowable consecutive failures Zuora attempts with the payment method before stopping.
     * **Values**: a valid number 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxConsecutivePaymentFailures")
    public Long maxConsecutivePaymentFailures;
    public ProxyModifyPaymentMethod withMaxConsecutivePaymentFailures(Long maxConsecutivePaymentFailures) {
        this.maxConsecutivePaymentFailures = maxConsecutivePaymentFailures;
        return this;
    }
    
    /**
     * The number of consecutive failed payments for this payment method. It is reset to `0` upon successful payment. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumConsecutiveFailures")
    public Long numConsecutiveFailures;
    public ProxyModifyPaymentMethod withNumConsecutiveFailures(Long numConsecutiveFailures) {
        this.numConsecutiveFailures = numConsecutiveFailures;
        return this;
    }
    
    /**
     *  This field is used to indicate the status of the payment method created within an account. It is set to `Active` on creation.
     * **Character limit**: 6 **Values**: `Active` or `Closed` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentMethodStatus")
    public String paymentMethodStatus;
    public ProxyModifyPaymentMethod withPaymentMethodStatus(String paymentMethodStatus) {
        this.paymentMethodStatus = paymentMethodStatus;
        return this;
    }
    
    /**
     *  The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours. This field is required if the `UseDefaultRetryRule` field value is set to `false`.
     * **Character limit**: 4 **Values**: a whole number between 1 and 1000, exclusive 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentRetryWindow")
    public Long paymentRetryWindow;
    public ProxyModifyPaymentMethod withPaymentRetryWindow(Long paymentRetryWindow) {
        this.paymentRetryWindow = paymentRetryWindow;
        return this;
    }
    
    /**
     *  The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Phone")
    public String phone;
    public ProxyModifyPaymentMethod withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     *  The zip code of the customer's address. This field is used only for the direct debit payment method.
     * **Character limit**: 20 **Values**: a string of 20 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PostalCode")
    public String postalCode;
    public ProxyModifyPaymentMethod withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * A gateway unique identifier that replaces sensitive payment method data. `SecondTokenId` is conditionally required only when `TokenId` is being used to represent a gateway customer profile. `TokenID` is being used to represent a gateway customer profile. `SecondTokenId` is used in the CC Reference Transaction payment method.
     * **Character limit**: 64 **Values**: a string of 64 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecondTokenId")
    public String secondTokenId;
    public ProxyModifyPaymentMethod withSecondTokenId(String secondTokenId) {
        this.secondTokenId = secondTokenId;
        return this;
    }
    
    /**
     *  The state of the customer's address. This field is used only for the direct debit payment method.
     * **Character limit**: 70 **Values**: a string of 70 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public String state;
    public ProxyModifyPaymentMethod withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     *  The street name of the customer's address. This field is used only for the direct debit payment method.
     * **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreetName")
    public String streetName;
    public ProxyModifyPaymentMethod withStreetName(String streetName) {
        this.streetName = streetName;
        return this;
    }
    
    /**
     *  The street number of the customer's address. This field is used only for the direct debit payment method.
     * **Character limit**: 30 **Values**: a string of 30 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreetNumber")
    public String streetNumber;
    public ProxyModifyPaymentMethod withStreetNumber(String streetNumber) {
        this.streetNumber = streetNumber;
        return this;
    }
    
    /**
     *  Determines whether to use the default retry rules configured in the Zuora Payments settings. Set this to `true` to use the default retry rules. Set this to `false` to set the specific rules for this payment method. If you set this value to `false`, then the fields, `PaymentRetryWindow` and `MaxConsecutivePaymentFailures`, are required.
     * **Character limit**: 5 **Values**: `true` or `false` 
     */
    @JsonProperty("UseDefaultRetryRule")
    public Boolean useDefaultRetryRule;
    public ProxyModifyPaymentMethod withUseDefaultRetryRule(Boolean useDefaultRetryRule) {
        this.useDefaultRetryRule = useDefaultRetryRule;
        return this;
    }
    
}
