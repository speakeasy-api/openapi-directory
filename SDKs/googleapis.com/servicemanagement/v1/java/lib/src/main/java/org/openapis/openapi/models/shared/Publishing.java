/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Publishing - This message configures the settings for publishing [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from the service config.
 */
public class Publishing {
    /**
     * Used as a tracking tag when collecting data about the APIs developer relations artifacts like docs, packages delivered to package managers, etc. Example: "speech".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiShortName")
    public String apiShortName;
    public Publishing withApiShortName(String apiShortName) {
        this.apiShortName = apiShortName;
        return this;
    }
    
    /**
     * GitHub teams to be added to CODEOWNERS in the directory in GitHub containing source code for the client libraries for this API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codeownerGithubTeams")
    public String[] codeownerGithubTeams;
    public Publishing withCodeownerGithubTeams(String[] codeownerGithubTeams) {
        this.codeownerGithubTeams = codeownerGithubTeams;
        return this;
    }
    
    /**
     * A prefix used in sample code when demarking regions to be included in documentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("docTagPrefix")
    public String docTagPrefix;
    public Publishing withDocTagPrefix(String docTagPrefix) {
        this.docTagPrefix = docTagPrefix;
        return this;
    }
    
    /**
     * Link to product home page. Example: https://cloud.google.com/asset-inventory/docs/overview
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentationUri")
    public String documentationUri;
    public Publishing withDocumentationUri(String documentationUri) {
        this.documentationUri = documentationUri;
        return this;
    }
    
    /**
     * GitHub label to apply to issues and pull requests opened for this API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("githubLabel")
    public String githubLabel;
    public Publishing withGithubLabel(String githubLabel) {
        this.githubLabel = githubLabel;
        return this;
    }
    
    /**
     * Client library settings. If the same version string appears multiple times in this list, then the last one wins. Settings from earlier settings with the same version string are discarded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("librarySettings")
    public ClientLibrarySettings[] librarySettings;
    public Publishing withLibrarySettings(ClientLibrarySettings[] librarySettings) {
        this.librarySettings = librarySettings;
        return this;
    }
    
    /**
     * A list of API method settings, e.g. the behavior for methods that use the long-running operation pattern.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("methodSettings")
    public MethodSettings[] methodSettings;
    public Publishing withMethodSettings(MethodSettings[] methodSettings) {
        this.methodSettings = methodSettings;
        return this;
    }
    
    /**
     * Link to a place that API users can report issues. Example: https://issuetracker.google.com/issues/new?component=190865&amp;template=1161103
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newIssueUri")
    public String newIssueUri;
    public Publishing withNewIssueUri(String newIssueUri) {
        this.newIssueUri = newIssueUri;
        return this;
    }
    
    /**
     * For whom the client library is being published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    public PublishingOrganizationEnum organization;
    public Publishing withOrganization(PublishingOrganizationEnum organization) {
        this.organization = organization;
        return this;
    }
    
    /**
     * Optional link to proto reference documentation. Example: https://cloud.google.com/pubsub/lite/docs/reference/rpc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protoReferenceDocumentationUri")
    public String protoReferenceDocumentationUri;
    public Publishing withProtoReferenceDocumentationUri(String protoReferenceDocumentationUri) {
        this.protoReferenceDocumentationUri = protoReferenceDocumentationUri;
        return this;
    }
    
}
