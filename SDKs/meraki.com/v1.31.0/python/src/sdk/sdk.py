"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .accesscontrollists import AccessControlLists
from .accesspolicies import AccessPolicies
from .acls import Acls
from .actionbatches import ActionBatches
from .adaptivepolicy import AdaptivePolicy
from .addresses import Addresses
from .administered import Administered
from .admins import Admins
from .airmarshal import AirMarshal
from .alerts import Alerts
from .alerttypes import AlertTypes
from .alternatemanagementinterface import AlternateManagementInterface
from .analytics import Analytics
from .apirequests import APIRequests
from .apnscert import ApnsCert
from .appliance import Appliance
from .appliances import Appliances
from .applicationcategories import ApplicationCategories
from .applications import Applications
from .applicationusage import ApplicationUsage
from .arpinspection import ArpInspection
from .artifacts import Artifacts
from .authenticationtoken import AuthenticationToken
from .availabilities import Availabilities
from .bandwidthusagehistory import BandwidthUsageHistory
from .bgp import Bgp
from .billing import Billing
from .bluetooth import Bluetooth
from .bluetoothclients import BluetoothClients
from .bonjourforwarding import BonjourForwarding
from .brandingpolicies import BrandingPolicies
from .byclient import ByClient
from .bydevice import ByDevice
from .byenergyusage import ByEnergyUsage
from .byinterval import ByInterval
from .bymetric import ByMetric
from .bypassactivationlockattempts import BypassActivationLockAttempts
from .byswitch import BySwitch
from .byusage import ByUsage
from .byutilization import ByUtilization
from .camera import Camera
from .categories import Categories
from .cellular import Cellular
from .cellularfirewallrules import CellularFirewallRules
from .cellulargateway import CellularGateway
from .cellularusagehistory import CellularUsageHistory
from .certs import Certs
from .channelutilization import ChannelUtilization
from .channelutilizationhistory import ChannelUtilizationHistory
from .claim import Claim
from .clientcounthistory import ClientCountHistory
from .clients import Clients
from .cloudmonitoring import CloudMonitoring
from .configtemplates import ConfigTemplates
from .configurationchanges import ConfigurationChanges
from .configure import Configure
from .connectionstats import ConnectionStats
from .connectivity import Connectivity
from .connectivityevents import ConnectivityEvents
from .connectivitymonitoringdestinations import ConnectivityMonitoringDestinations
from .contentfiltering import ContentFiltering
from .coterm import Coterm
from .current import Current
from .customanalytics import CustomAnalytics
from .customperformanceclasses import CustomPerformanceClasses
from .dataratehistory import DataRateHistory
from .delegated import Delegated
from .desktoplogs import DesktopLogs
from .devicecommandlogs import DeviceCommandLogs
from .deviceprofiles import DeviceProfiles
from .devices import Devices
from .devicetypegrouppolicies import DeviceTypeGroupPolicies
from .dhcp import Dhcp
from .dhcpserverpolicy import DhcpServerPolicy
from .dscptaggingoptions import DscpTaggingOptions
from .dscptocosmappings import DscpToCosMappings
from .eapoverride import EapOverride
from .earlyaccess import EarlyAccess
from .ethernet import Ethernet
from .events import Events
from .eventtypes import EventTypes
from .exportevents import ExportEvents
from .failedconnections import FailedConnections
from .features import Features
from .fields_ import Fields
from .firewall import Firewall
from .firewalledservices import FirewalledServices
from .firmware import Firmware
from .firmwareupgrades import FirmwareUpgrades
from .floorplans import FloorPlans
from .grouppolicies import GroupPolicies
from .groups import Groups
from .health import Health
from .healthbytime import HealthByTime
from .history import History
from .hotspot20 import Hotspot20
from .httpservers import HTTPServers
from .identities import Identities
from .identitypsks import IdentityPsks
from .idps import Idps
from .imports import Imports
from .inboundcellularfirewallrules import InboundCellularFirewallRules
from .inboundfirewallrules import InboundFirewallRules
from .insight import Insight
from .interfaces import Interfaces
from .intrusion import Intrusion
from .inventory import Inventory
from .l3firewallrules import L3FirewallRules
from .l7firewallrules import L7FirewallRules
from .lan import Lan
from .latencyhistory import LatencyHistory
from .latencystats import LatencyStats
from .latest import Latest
from .licenses import Licenses
from .licensing import Licensing
from .linkaggregations import LinkAggregations
from .linklayer import LinkLayer
from .live import Live
from .livetools import LiveTools
from .lldpcdp import LldpCdp
from .loginsecurity import LoginSecurity
from .logs import Logs
from .lossandlatencyhistory import LossAndLatencyHistory
from .malware import Malware
from .managementinterface import ManagementInterface
from .manufacturers import Manufacturers
from .me import Me
from .merakiauthusers import MerakiAuthUsers
from .meshstatuses import MeshStatuses
from .models_ import Models
from .monitor import Monitor
from .monitoredmediaservers import MonitoredMediaServers
from .mqttbrokers import MqttBrokers
from .mtu import Mtu
from .multicast import Multicast
from .netflow import Netflow
from .networkadapters import NetworkAdapters
from .networkhealth import NetworkHealth
from .networks import Networks
from .objectdetectionmodels import ObjectDetectionModels
from .onboarding import Onboarding
from .onetomanynatrules import OneToManyNatRules
from .onetoonenatrules import OneToOneNatRules
from .openapispec import OpenapiSpec
from .optins import OptIns
from .order import Order
from .organizations import Organizations
from .ospf import Ospf
from .overview import Overview
from .packets import Packets
from .payloadtemplates import PayloadTemplates
from .performance import Performance
from .performancehistory import PerformanceHistory
from .pii import Pii
from .piikeys import PiiKeys
from .ping import Ping
from .pingdevice import PingDevice
from .policies import Policies
from .policy import Policy
from .policyobjects import PolicyObjects
from .portforwardingrules import PortForwardingRules
from .ports import Ports
from .portschedules import PortSchedules
from .powermodules import PowerModules
from .prefixes import Prefixes
from .priorities import Priorities
from .profiles import Profiles
from .qosrules import QosRules
from .qualityandretention import QualityAndRetention
from .qualityretentionprofiles import QualityRetentionProfiles
from .radio import Radio
from .readings import Readings
from .recent import Recent
from .relationships import Relationships
from .rendezvouspoints import RendezvousPoints
from .requests import Requests
from .responsecodes import ResponseCodes
from .restrictions import Restrictions
from .rfprofiles import RfProfiles
from .rollbacks import Rollbacks
from .routing import Routing
from .rules import Rules
from .saml import Saml
from .samlroles import SamlRoles
from .schedules import Schedules
from .search import Search
from .security import Security
from .securitycenters import SecurityCenters
from .seen import Seen
from .sense import Sense
from .sensor import Sensor
from .servers import Servers
from .settings import Settings
from .signalqualityhistory import SignalQualityHistory
from .sims import Sims
from .singlelan import SingleLan
from .sitetositevpn import SiteToSiteVpn
from .sm import Sm
from .smdevicesforkey import SmDevicesForKey
from .smownersforkey import SmOwnersForKey
from .snmp import Snmp
from .softwares import Softwares
from .splash import Splash
from .splashauthorizationstatus import SplashAuthorizationStatus
from .splashloginattempts import SplashLoginAttempts
from .ssids import Ssids
from .stacks import Stacks
from .staged import Staged
from .stages import Stages
from .staticroutes import StaticRoutes
from .statics import Statics
from .stats import Stats
from .status import Status
from .statuses import Statuses
from .stormcontrol import StormControl
from .stp import Stp
from .subnetpool import SubnetPool
from .subnets import Subnets
from .summary import Summary
from .switch import Switch
from .switches import Switches
from .syslogservers import SyslogServers
from .targetgroups import TargetGroups
from .thirdpartyvpnpeers import ThirdPartyVPNPeers
from .top import Top
from .topology import Topology
from .traffic import Traffic
from .trafficanalysis import TrafficAnalysis
from .traffichistory import TrafficHistory
from .trafficshaping import TrafficShaping
from .trustedaccessconfigs import TrustedAccessConfigs
from .trustedservers import TrustedServers
from .upgrades import Upgrades
from .uplink import Uplink
from .uplinkbandwidth import UplinkBandwidth
from .uplinks import Uplinks
from .uplinkselection import UplinkSelection
from .uplinkslossandlatency import UplinksLossAndLatency
from .usagehistories import UsageHistories
from .usagehistory import UsageHistory
from .useraccessdevices import UserAccessDevices
from .users import Users
from .v4 import V4
from .video import Video
from .videolink import VideoLink
from .vlanassignments import VlanAssignments
from .vlans import Vlans
from .vmx import Vmx
from .vpn import Vpn
from .vpnfirewallrules import VpnFirewallRules
from .vppaccounts import VppAccounts
from .warmspare import WarmSpare
from .warnings import Warnings
from .webhooks import Webhooks
from .webhooktests import WebhookTests
from .wireless import Wireless
from .wirelessprofiles import WirelessProfiles
from .wlanlists import WlanLists
from .zones import Zones
from sdk.models import shared

SERVERS = [
    "https://api.meraki.com/api/v1",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.
    
    > Date: 22 February, 2023
    >
    > [Recent Updates](https://meraki.io/whats-new/)
    
    ---
    
    [API Documentation](https://meraki.io/api)
    
    [Community Support](https://meraki.io/community)
    
    [Meraki Homepage](https://www.meraki.com)
    """
    access_control_lists: AccessControlLists
    access_policies: AccessPolicies
    acls: Acls
    action_batches: ActionBatches
    adaptive_policy: AdaptivePolicy
    addresses: Addresses
    administered: Administered
    admins: Admins
    air_marshal: AirMarshal
    alert_types: AlertTypes
    alerts: Alerts
    alternate_management_interface: AlternateManagementInterface
    analytics: Analytics
    api_requests: APIRequests
    apns_cert: ApnsCert
    appliance: Appliance
    appliances: Appliances
    application_categories: ApplicationCategories
    application_usage: ApplicationUsage
    applications: Applications
    arp_inspection: ArpInspection
    artifacts: Artifacts
    authentication_token: AuthenticationToken
    availabilities: Availabilities
    bandwidth_usage_history: BandwidthUsageHistory
    bgp: Bgp
    billing: Billing
    bluetooth: Bluetooth
    bluetooth_clients: BluetoothClients
    bonjour_forwarding: BonjourForwarding
    branding_policies: BrandingPolicies
    by_client: ByClient
    by_device: ByDevice
    by_energy_usage: ByEnergyUsage
    by_interval: ByInterval
    by_metric: ByMetric
    by_switch: BySwitch
    by_usage: ByUsage
    by_utilization: ByUtilization
    bypass_activation_lock_attempts: BypassActivationLockAttempts
    camera: Camera
    categories: Categories
    cellular: Cellular
    cellular_firewall_rules: CellularFirewallRules
    cellular_gateway: CellularGateway
    cellular_usage_history: CellularUsageHistory
    certs: Certs
    channel_utilization: ChannelUtilization
    channel_utilization_history: ChannelUtilizationHistory
    claim: Claim
    client_count_history: ClientCountHistory
    clients: Clients
    cloud_monitoring: CloudMonitoring
    config_templates: ConfigTemplates
    configuration_changes: ConfigurationChanges
    configure: Configure
    connection_stats: ConnectionStats
    connectivity: Connectivity
    connectivity_events: ConnectivityEvents
    connectivity_monitoring_destinations: ConnectivityMonitoringDestinations
    content_filtering: ContentFiltering
    coterm: Coterm
    current: Current
    custom_analytics: CustomAnalytics
    custom_performance_classes: CustomPerformanceClasses
    data_rate_history: DataRateHistory
    delegated: Delegated
    desktop_logs: DesktopLogs
    device_command_logs: DeviceCommandLogs
    device_profiles: DeviceProfiles
    device_type_group_policies: DeviceTypeGroupPolicies
    devices: Devices
    dhcp: Dhcp
    dhcp_server_policy: DhcpServerPolicy
    dscp_tagging_options: DscpTaggingOptions
    dscp_to_cos_mappings: DscpToCosMappings
    eap_override: EapOverride
    early_access: EarlyAccess
    ethernet: Ethernet
    event_types: EventTypes
    events: Events
    export_events: ExportEvents
    failed_connections: FailedConnections
    features: Features
    fields_: Fields
    firewall: Firewall
    firewalled_services: FirewalledServices
    firmware: Firmware
    firmware_upgrades: FirmwareUpgrades
    floor_plans: FloorPlans
    group_policies: GroupPolicies
    groups: Groups
    health: Health
    health_by_time: HealthByTime
    history: History
    hotspot20: Hotspot20
    http_servers: HTTPServers
    identities: Identities
    identity_psks: IdentityPsks
    idps: Idps
    imports: Imports
    inbound_cellular_firewall_rules: InboundCellularFirewallRules
    inbound_firewall_rules: InboundFirewallRules
    insight: Insight
    interfaces: Interfaces
    intrusion: Intrusion
    inventory: Inventory
    l3_firewall_rules: L3FirewallRules
    l7_firewall_rules: L7FirewallRules
    lan: Lan
    latency_history: LatencyHistory
    latency_stats: LatencyStats
    latest: Latest
    licenses: Licenses
    licensing: Licensing
    link_aggregations: LinkAggregations
    link_layer: LinkLayer
    live: Live
    live_tools: LiveTools
    lldp_cdp: LldpCdp
    login_security: LoginSecurity
    logs: Logs
    loss_and_latency_history: LossAndLatencyHistory
    malware: Malware
    management_interface: ManagementInterface
    manufacturers: Manufacturers
    me: Me
    meraki_auth_users: MerakiAuthUsers
    mesh_statuses: MeshStatuses
    models: Models
    monitor: Monitor
    monitored_media_servers: MonitoredMediaServers
    mqtt_brokers: MqttBrokers
    mtu: Mtu
    multicast: Multicast
    netflow: Netflow
    network_adapters: NetworkAdapters
    network_health: NetworkHealth
    networks: Networks
    object_detection_models: ObjectDetectionModels
    onboarding: Onboarding
    one_to_many_nat_rules: OneToManyNatRules
    one_to_one_nat_rules: OneToOneNatRules
    openapi_spec: OpenapiSpec
    opt_ins: OptIns
    order: Order
    organizations: Organizations
    ospf: Ospf
    overview: Overview
    packets: Packets
    payload_templates: PayloadTemplates
    performance: Performance
    performance_history: PerformanceHistory
    pii: Pii
    pii_keys: PiiKeys
    ping: Ping
    ping_device: PingDevice
    policies: Policies
    policy: Policy
    policy_objects: PolicyObjects
    port_forwarding_rules: PortForwardingRules
    port_schedules: PortSchedules
    ports: Ports
    power_modules: PowerModules
    prefixes: Prefixes
    priorities: Priorities
    profiles: Profiles
    qos_rules: QosRules
    quality_and_retention: QualityAndRetention
    quality_retention_profiles: QualityRetentionProfiles
    radio: Radio
    readings: Readings
    recent: Recent
    relationships: Relationships
    rendezvous_points: RendezvousPoints
    requests: Requests
    response_codes: ResponseCodes
    restrictions: Restrictions
    rf_profiles: RfProfiles
    rollbacks: Rollbacks
    routing: Routing
    rules: Rules
    saml: Saml
    saml_roles: SamlRoles
    schedules: Schedules
    search: Search
    security: Security
    security_centers: SecurityCenters
    seen: Seen
    sense: Sense
    sensor: Sensor
    servers: Servers
    settings: Settings
    signal_quality_history: SignalQualityHistory
    sims: Sims
    single_lan: SingleLan
    site_to_site_vpn: SiteToSiteVpn
    sm: Sm
    sm_devices_for_key: SmDevicesForKey
    sm_owners_for_key: SmOwnersForKey
    snmp: Snmp
    softwares: Softwares
    splash: Splash
    splash_authorization_status: SplashAuthorizationStatus
    splash_login_attempts: SplashLoginAttempts
    ssids: Ssids
    stacks: Stacks
    staged: Staged
    stages: Stages
    static_routes: StaticRoutes
    statics: Statics
    stats: Stats
    status: Status
    statuses: Statuses
    storm_control: StormControl
    stp: Stp
    subnet_pool: SubnetPool
    subnets: Subnets
    summary: Summary
    switch: Switch
    switches: Switches
    syslog_servers: SyslogServers
    target_groups: TargetGroups
    third_party_vpn_peers: ThirdPartyVPNPeers
    top: Top
    topology: Topology
    traffic: Traffic
    traffic_analysis: TrafficAnalysis
    traffic_history: TrafficHistory
    traffic_shaping: TrafficShaping
    trusted_access_configs: TrustedAccessConfigs
    trusted_servers: TrustedServers
    upgrades: Upgrades
    uplink: Uplink
    uplink_bandwidth: UplinkBandwidth
    uplink_selection: UplinkSelection
    uplinks: Uplinks
    uplinks_loss_and_latency: UplinksLossAndLatency
    usage_histories: UsageHistories
    usage_history: UsageHistory
    user_access_devices: UserAccessDevices
    users: Users
    v4: V4
    video: Video
    video_link: VideoLink
    vlan_assignments: VlanAssignments
    vlans: Vlans
    vmx: Vmx
    vpn: Vpn
    vpn_firewall_rules: VpnFirewallRules
    vpp_accounts: VppAccounts
    warm_spare: WarmSpare
    warnings: Warnings
    webhook_tests: WebhookTests
    webhooks: Webhooks
    wireless: Wireless
    wireless_profiles: WirelessProfiles
    wlan_lists: WlanLists
    zones: Zones

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 security: shared.Security = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: shared.Security
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = utils.configure_security_client(self._client, security)
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.access_control_lists = AccessControlLists(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.access_policies = AccessPolicies(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.acls = Acls(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.action_batches = ActionBatches(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.adaptive_policy = AdaptivePolicy(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.addresses = Addresses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.administered = Administered(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.admins = Admins(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.air_marshal = AirMarshal(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.alert_types = AlertTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.alerts = Alerts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.alternate_management_interface = AlternateManagementInterface(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.analytics = Analytics(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.api_requests = APIRequests(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.apns_cert = ApnsCert(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.appliance = Appliance(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.appliances = Appliances(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.application_categories = ApplicationCategories(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.application_usage = ApplicationUsage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.applications = Applications(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.arp_inspection = ArpInspection(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.artifacts = Artifacts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.authentication_token = AuthenticationToken(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.availabilities = Availabilities(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bandwidth_usage_history = BandwidthUsageHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bgp = Bgp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.billing = Billing(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bluetooth = Bluetooth(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bluetooth_clients = BluetoothClients(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bonjour_forwarding = BonjourForwarding(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.branding_policies = BrandingPolicies(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_client = ByClient(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_device = ByDevice(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_energy_usage = ByEnergyUsage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_interval = ByInterval(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_metric = ByMetric(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_switch = BySwitch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_usage = ByUsage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.by_utilization = ByUtilization(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bypass_activation_lock_attempts = BypassActivationLockAttempts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.camera = Camera(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.categories = Categories(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cellular = Cellular(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cellular_firewall_rules = CellularFirewallRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cellular_gateway = CellularGateway(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cellular_usage_history = CellularUsageHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.certs = Certs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.channel_utilization = ChannelUtilization(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.channel_utilization_history = ChannelUtilizationHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.claim = Claim(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.client_count_history = ClientCountHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.clients = Clients(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cloud_monitoring = CloudMonitoring(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.config_templates = ConfigTemplates(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.configuration_changes = ConfigurationChanges(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.configure = Configure(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.connection_stats = ConnectionStats(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.connectivity = Connectivity(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.connectivity_events = ConnectivityEvents(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.connectivity_monitoring_destinations = ConnectivityMonitoringDestinations(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.content_filtering = ContentFiltering(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.coterm = Coterm(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.current = Current(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.custom_analytics = CustomAnalytics(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.custom_performance_classes = CustomPerformanceClasses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.data_rate_history = DataRateHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.delegated = Delegated(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.desktop_logs = DesktopLogs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.device_command_logs = DeviceCommandLogs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.device_profiles = DeviceProfiles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.device_type_group_policies = DeviceTypeGroupPolicies(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.devices = Devices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dhcp = Dhcp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dhcp_server_policy = DhcpServerPolicy(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dscp_tagging_options = DscpTaggingOptions(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dscp_to_cos_mappings = DscpToCosMappings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.eap_override = EapOverride(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.early_access = EarlyAccess(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.ethernet = Ethernet(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.event_types = EventTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.events = Events(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.export_events = ExportEvents(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.failed_connections = FailedConnections(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.features = Features(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.fields_ = Fields(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.firewall = Firewall(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.firewalled_services = FirewalledServices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.firmware = Firmware(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.firmware_upgrades = FirmwareUpgrades(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.floor_plans = FloorPlans(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.group_policies = GroupPolicies(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.groups = Groups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.health = Health(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.health_by_time = HealthByTime(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.history = History(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.hotspot20 = Hotspot20(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.http_servers = HTTPServers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.identities = Identities(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.identity_psks = IdentityPsks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.idps = Idps(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.imports = Imports(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.inbound_cellular_firewall_rules = InboundCellularFirewallRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.inbound_firewall_rules = InboundFirewallRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.insight = Insight(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.interfaces = Interfaces(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.intrusion = Intrusion(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.inventory = Inventory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.l3_firewall_rules = L3FirewallRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.l7_firewall_rules = L7FirewallRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.lan = Lan(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.latency_history = LatencyHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.latency_stats = LatencyStats(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.latest = Latest(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.licenses = Licenses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.licensing = Licensing(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.link_aggregations = LinkAggregations(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.link_layer = LinkLayer(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.live = Live(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.live_tools = LiveTools(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.lldp_cdp = LldpCdp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.login_security = LoginSecurity(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.logs = Logs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.loss_and_latency_history = LossAndLatencyHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.malware = Malware(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.management_interface = ManagementInterface(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.manufacturers = Manufacturers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.me = Me(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.meraki_auth_users = MerakiAuthUsers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.mesh_statuses = MeshStatuses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.models = Models(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.monitor = Monitor(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.monitored_media_servers = MonitoredMediaServers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.mqtt_brokers = MqttBrokers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.mtu = Mtu(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.multicast = Multicast(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.netflow = Netflow(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.network_adapters = NetworkAdapters(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.network_health = NetworkHealth(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.networks = Networks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.object_detection_models = ObjectDetectionModels(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.onboarding = Onboarding(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.one_to_many_nat_rules = OneToManyNatRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.one_to_one_nat_rules = OneToOneNatRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.openapi_spec = OpenapiSpec(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.opt_ins = OptIns(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.order = Order(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.organizations = Organizations(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.ospf = Ospf(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.overview = Overview(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.packets = Packets(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.payload_templates = PayloadTemplates(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.performance = Performance(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.performance_history = PerformanceHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.pii = Pii(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.pii_keys = PiiKeys(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.ping = Ping(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.ping_device = PingDevice(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.policies = Policies(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.policy = Policy(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.policy_objects = PolicyObjects(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.port_forwarding_rules = PortForwardingRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.port_schedules = PortSchedules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.ports = Ports(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.power_modules = PowerModules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.prefixes = Prefixes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.priorities = Priorities(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.profiles = Profiles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.qos_rules = QosRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.quality_and_retention = QualityAndRetention(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.quality_retention_profiles = QualityRetentionProfiles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.radio = Radio(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.readings = Readings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.recent = Recent(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.relationships = Relationships(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rendezvous_points = RendezvousPoints(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.requests = Requests(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.response_codes = ResponseCodes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.restrictions = Restrictions(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rf_profiles = RfProfiles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rollbacks = Rollbacks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.routing = Routing(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rules = Rules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.saml = Saml(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.saml_roles = SamlRoles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.schedules = Schedules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.search = Search(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.security = Security(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.security_centers = SecurityCenters(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.seen = Seen(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sense = Sense(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sensor = Sensor(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.servers = Servers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.settings = Settings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.signal_quality_history = SignalQualityHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sims = Sims(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.single_lan = SingleLan(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.site_to_site_vpn = SiteToSiteVpn(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sm = Sm(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sm_devices_for_key = SmDevicesForKey(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sm_owners_for_key = SmOwnersForKey(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.snmp = Snmp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.softwares = Softwares(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.splash = Splash(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.splash_authorization_status = SplashAuthorizationStatus(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.splash_login_attempts = SplashLoginAttempts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.ssids = Ssids(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.stacks = Stacks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.staged = Staged(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.stages = Stages(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.static_routes = StaticRoutes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.statics = Statics(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.stats = Stats(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.status = Status(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.statuses = Statuses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.storm_control = StormControl(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.stp = Stp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.subnet_pool = SubnetPool(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.subnets = Subnets(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.summary = Summary(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.switch = Switch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.switches = Switches(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.syslog_servers = SyslogServers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.target_groups = TargetGroups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.third_party_vpn_peers = ThirdPartyVPNPeers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.top = Top(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.topology = Topology(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.traffic = Traffic(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.traffic_analysis = TrafficAnalysis(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.traffic_history = TrafficHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.traffic_shaping = TrafficShaping(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.trusted_access_configs = TrustedAccessConfigs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.trusted_servers = TrustedServers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.upgrades = Upgrades(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.uplink = Uplink(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.uplink_bandwidth = UplinkBandwidth(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.uplink_selection = UplinkSelection(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.uplinks = Uplinks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.uplinks_loss_and_latency = UplinksLossAndLatency(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.usage_histories = UsageHistories(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.usage_history = UsageHistory(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.user_access_devices = UserAccessDevices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.users = Users(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.v4 = V4(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.video = Video(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.video_link = VideoLink(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vlan_assignments = VlanAssignments(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vlans = Vlans(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vmx = Vmx(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vpn = Vpn(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vpn_firewall_rules = VpnFirewallRules(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vpp_accounts = VppAccounts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.warm_spare = WarmSpare(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.warnings = Warnings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.webhook_tests = WebhookTests(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.webhooks = Webhooks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.wireless = Wireless(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.wireless_profiles = WirelessProfiles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.wlan_lists = WlanLists(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.zones = Zones(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    