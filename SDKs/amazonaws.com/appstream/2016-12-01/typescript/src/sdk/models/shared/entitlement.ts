/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppVisibilityEnum } from "./appvisibilityenum";
import { EntitlementAttribute } from "./entitlementattribute";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Specifies an entitlement. Entitlements control access to specific applications within a stack, based on user attributes. Entitlements apply to SAML 2.0 federated user identities. Amazon AppStream 2.0 user pool and streaming URL users are entitled to all applications in a stack. Entitlements don't apply to the desktop stream view application, or to applications managed by a dynamic app provider using the Dynamic Application Framework.
 */
export class Entitlement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AppVisibility" })
  appVisibility: AppVisibilityEnum;

  @SpeakeasyMetadata({ elemType: EntitlementAttribute })
  @Expose({ name: "Attributes" })
  @Type(() => EntitlementAttribute)
  attributes: EntitlementAttribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StackName" })
  stackName: string;
}
