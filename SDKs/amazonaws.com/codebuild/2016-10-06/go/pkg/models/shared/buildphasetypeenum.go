// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuildPhaseTypeEnum string

const (
	BuildPhaseTypeEnumSubmitted       BuildPhaseTypeEnum = "SUBMITTED"
	BuildPhaseTypeEnumQueued          BuildPhaseTypeEnum = "QUEUED"
	BuildPhaseTypeEnumProvisioning    BuildPhaseTypeEnum = "PROVISIONING"
	BuildPhaseTypeEnumDownloadSource  BuildPhaseTypeEnum = "DOWNLOAD_SOURCE"
	BuildPhaseTypeEnumInstall         BuildPhaseTypeEnum = "INSTALL"
	BuildPhaseTypeEnumPreBuild        BuildPhaseTypeEnum = "PRE_BUILD"
	BuildPhaseTypeEnumBuild           BuildPhaseTypeEnum = "BUILD"
	BuildPhaseTypeEnumPostBuild       BuildPhaseTypeEnum = "POST_BUILD"
	BuildPhaseTypeEnumUploadArtifacts BuildPhaseTypeEnum = "UPLOAD_ARTIFACTS"
	BuildPhaseTypeEnumFinalizing      BuildPhaseTypeEnum = "FINALIZING"
	BuildPhaseTypeEnumCompleted       BuildPhaseTypeEnum = "COMPLETED"
)

func (e *BuildPhaseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMITTED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "PROVISIONING":
		fallthrough
	case "DOWNLOAD_SOURCE":
		fallthrough
	case "INSTALL":
		fallthrough
	case "PRE_BUILD":
		fallthrough
	case "BUILD":
		fallthrough
	case "POST_BUILD":
		fallthrough
	case "UPLOAD_ARTIFACTS":
		fallthrough
	case "FINALIZING":
		fallthrough
	case "COMPLETED":
		*e = BuildPhaseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BuildPhaseTypeEnum: %s", s)
	}
}
