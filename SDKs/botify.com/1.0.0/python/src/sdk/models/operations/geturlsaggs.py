"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import defaultpayload as shared_defaultpayload
from ..shared import urlsaggsquery as shared_urlsaggsquery
from enum import Enum
from typing import Any, Optional

class GetUrlsAggsAreaEnum(str, Enum):
    CURRENT = 'current'
    DISAPPEARED = 'disappeared'
    NEW = 'new'
    SEARCH_ENGINES_ORPHANS = 'search_engines_orphans'


@dataclasses.dataclass
class GetUrlsAggsRequest:
    
    analysis_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'analysis_slug', 'style': 'simple', 'explode': False }})
    r"""Analysis' identifier"""  
    project_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project_slug', 'style': 'simple', 'explode': False }})
    r"""Project's identifier"""  
    username: str = dataclasses.field(metadata={'path_param': { 'field_name': 'username', 'style': 'simple', 'explode': False }})
    r"""User's identifier"""  
    area: Optional[GetUrlsAggsAreaEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'area', 'style': 'form', 'explode': True }})  
    request_body: Optional[list[shared_urlsaggsquery.UrlsAggsQuery]] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class GetUrlsAggsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    default_payload: Optional[shared_defaultpayload.DefaultPayload] = dataclasses.field(default=None)
    r"""error payload"""  
    get_urls_aggs_200_application_json_anies: Optional[list[Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    