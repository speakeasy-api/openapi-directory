/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MobileApplication } from "./mobileapplication";
import { PublisherProvidedForecast } from "./publisherprovidedforecast";
import { Seller } from "./seller";
import { Expose, Type } from "class-transformer";

export class PublisherProfileApiProto extends SpeakeasyBase {
  /**
   * Publisher provided info on its audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audience" })
  audience?: string;

  /**
   * A pitch statement for the buyer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buyerPitchStatement" })
  buyerPitchStatement?: string;

  /**
   * Direct contact for the publisher profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "directContact" })
  directContact?: string;

  /**
   * Exchange where this publisher profile is from. E.g. AdX, Rubicon etc...
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exchange" })
  exchange?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "forecastInventory" })
  forecastInventory?: string;

  /**
   * Link to publisher's Google+ page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googlePlusLink" })
  googlePlusLink?: string;

  /**
   * True, if this is the parent profile, which represents all domains owned by the publisher.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isParent" })
  isParent?: boolean;

  /**
   * True, if this profile is published. Deprecated for state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPublished" })
  isPublished?: boolean;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#publisherProfileApiProto".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The url to the logo for the publisher.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logoUrl" })
  logoUrl?: string;

  /**
   * The url for additional marketing and sales materials.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mediaKitLink" })
  mediaKitLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Publisher provided overview.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overview" })
  overview?: string;

  /**
   * The pair of (seller.account_id, profile_id) uniquely identifies a publisher profile for a given publisher.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileId" })
  profileId?: number;

  /**
   * Programmatic contact for the publisher profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "programmaticContact" })
  programmaticContact?: string;

  /**
   * The list of app IDs represented in this publisher profile. Empty if this is a parent profile. Deprecated in favor of publisher_app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisherAppIds" })
  publisherAppIds?: string[];

  /**
   * The list of apps represented in this publisher profile. Empty if this is a parent profile.
   */
  @SpeakeasyMetadata({ elemType: MobileApplication })
  @Expose({ name: "publisherApps" })
  @Type(() => MobileApplication)
  publisherApps?: MobileApplication[];

  /**
   * The list of domains represented in this publisher profile. Empty if this is a parent profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisherDomains" })
  publisherDomains?: string[];

  /**
   * Unique Id for publisher profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisherProfileId" })
  publisherProfileId?: string;

  /**
   * This message carries publisher provided forecasting information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisherProvidedForecast" })
  @Type(() => PublisherProvidedForecast)
  publisherProvidedForecast?: PublisherProvidedForecast;

  /**
   * Link to publisher rate card
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rateCardInfoLink" })
  rateCardInfoLink?: string;

  /**
   * Link for a sample content page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "samplePageLink" })
  samplePageLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  @Type(() => Seller)
  seller?: Seller;

  /**
   * State of the publisher profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Publisher provided key metrics and rankings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topHeadlines" })
  topHeadlines?: string[];
}
