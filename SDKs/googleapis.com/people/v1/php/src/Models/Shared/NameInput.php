<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NameInput - A person's name. If the name is a mononym, the family name is empty.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NameInput
{
    /**
     * The family name.
     * 
     * @var ?string $familyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('familyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $familyName = null;
    
    /**
     * The given name.
     * 
     * @var ?string $givenName
     */
	#[\JMS\Serializer\Annotation\SerializedName('givenName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $givenName = null;
    
    /**
     * The honorific prefixes, such as `Mrs.` or `Dr.`
     * 
     * @var ?string $honorificPrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('honorificPrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $honorificPrefix = null;
    
    /**
     * The honorific suffixes, such as `Jr.`
     * 
     * @var ?string $honorificSuffix
     */
	#[\JMS\Serializer\Annotation\SerializedName('honorificSuffix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $honorificSuffix = null;
    
    /**
     * Metadata about a field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FieldMetadataInput $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FieldMetadataInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FieldMetadataInput $metadata = null;
    
    /**
     * The middle name(s).
     * 
     * @var ?string $middleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('middleName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $middleName = null;
    
    /**
     * The family name spelled as it sounds.
     * 
     * @var ?string $phoneticFamilyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneticFamilyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneticFamilyName = null;
    
    /**
     * The full name spelled as it sounds.
     * 
     * @var ?string $phoneticFullName
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneticFullName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneticFullName = null;
    
    /**
     * The given name spelled as it sounds.
     * 
     * @var ?string $phoneticGivenName
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneticGivenName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneticGivenName = null;
    
    /**
     * The honorific prefixes spelled as they sound.
     * 
     * @var ?string $phoneticHonorificPrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneticHonorificPrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneticHonorificPrefix = null;
    
    /**
     * The honorific suffixes spelled as they sound.
     * 
     * @var ?string $phoneticHonorificSuffix
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneticHonorificSuffix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneticHonorificSuffix = null;
    
    /**
     * The middle name(s) spelled as they sound.
     * 
     * @var ?string $phoneticMiddleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneticMiddleName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneticMiddleName = null;
    
    /**
     * The free form name value.
     * 
     * @var ?string $unstructuredName
     */
	#[\JMS\Serializer\Annotation\SerializedName('unstructuredName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unstructuredName = null;
    
	public function __construct()
	{
		$this->familyName = null;
		$this->givenName = null;
		$this->honorificPrefix = null;
		$this->honorificSuffix = null;
		$this->metadata = null;
		$this->middleName = null;
		$this->phoneticFamilyName = null;
		$this->phoneticFullName = null;
		$this->phoneticGivenName = null;
		$this->phoneticHonorificPrefix = null;
		$this->phoneticHonorificSuffix = null;
		$this->phoneticMiddleName = null;
		$this->unstructuredName = null;
	}
}
