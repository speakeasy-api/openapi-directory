"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetMapVersionNumberCopyrightsZoomXYFormatFormatEnum(str, Enum):
    r"""Format of the response"""
    JSON = 'json'
    JSONP = 'jsonp'
    XML = 'xml'

class GetMapVersionNumberCopyrightsZoomXYFormatVersionNumberEnum(str, Enum):
    r"""Version of the service to call. The current version is 1"""
    ONE = '1'

class GetMapVersionNumberCopyrightsZoomXYFormatZoomEnum(str, Enum):
    r"""Zoom level of tile to be rendered. Only used for tile-level
    copyright calls.
    """
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    ELEVEN = '11'
    TWELVE = '12'
    THIRTEEN = '13'
    FOURTEEN = '14'
    FIFTEEN = '15'
    SIXTEEN = '16'
    SEVENTEEN = '17'
    EIGHTEEN = '18'


@dataclasses.dataclass
class GetMapVersionNumberCopyrightsZoomXYFormatRequest:
    
    format: GetMapVersionNumberCopyrightsZoomXYFormatFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Format of the response"""  
    version_number: GetMapVersionNumberCopyrightsZoomXYFormatVersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Version of the service to call. The current version is 1"""  
    x: int = dataclasses.field(metadata={'path_param': { 'field_name': 'X', 'style': 'simple', 'explode': False }})
    r"""X coordinate of the tile on zoom grid. Only used for tile-level
    copyright calls.
    """  
    y: int = dataclasses.field(metadata={'path_param': { 'field_name': 'Y', 'style': 'simple', 'explode': False }})
    r"""Y coordinate of the tile on zoom grid. Only used for tile-level
    copyright calls.
    """  
    zoom: GetMapVersionNumberCopyrightsZoomXYFormatZoomEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'zoom', 'style': 'simple', 'explode': False }})
    r"""Zoom level of tile to be rendered. Only used for tile-level
    copyright calls.
    """  
    callback: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'callback', 'style': 'form', 'explode': True }})
    r"""Specifies the jsonp callback method. Only used when format is jsonp."""  
    

@dataclasses.dataclass
class GetMapVersionNumberCopyrightsZoomXYFormatResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    