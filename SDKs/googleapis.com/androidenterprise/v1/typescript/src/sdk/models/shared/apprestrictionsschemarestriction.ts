/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppRestrictionsSchemaRestrictionRestrictionValue } from "./apprestrictionsschemarestrictionrestrictionvalue";
import { Expose, Type } from "class-transformer";

/**
 * The type of the restriction.
 */
export enum AppRestrictionsSchemaRestrictionRestrictionTypeEnum {
  Bool = "bool",
  String = "string",
  Integer = "integer",
  Choice = "choice",
  Multiselect = "multiselect",
  Hidden = "hidden",
  Bundle = "bundle",
  BundleArray = "bundleArray",
}

/**
 * A restriction in the App Restriction Schema represents a piece of configuration that may be pre-applied.
 */
export class AppRestrictionsSchemaRestriction extends SpeakeasyBase {
  /**
   * A typed value for the restriction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultValue" })
  @Type(() => AppRestrictionsSchemaRestrictionRestrictionValue)
  defaultValue?: AppRestrictionsSchemaRestrictionRestrictionValue;

  /**
   * A longer description of the restriction, giving more detail of what it affects.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * For choice or multiselect restrictions, the list of possible entries' human-readable names.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entry" })
  entry?: string[];

  /**
   * For choice or multiselect restrictions, the list of possible entries' machine-readable values. These values should be used in the configuration, either as a single string value for a choice restriction or in a stringArray for a multiselect restriction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entryValue" })
  entryValue?: string[];

  /**
   * The unique key that the product uses to identify the restriction, e.g. "com.google.android.gm.fieldname".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * For bundle or bundleArray restrictions, the list of nested restrictions. A bundle restriction is always nested within a bundleArray restriction, and a bundleArray restriction is at most two levels deep.
   */
  @SpeakeasyMetadata({ elemType: AppRestrictionsSchemaRestriction })
  @Expose({ name: "nestedRestriction" })
  @Type(() => AppRestrictionsSchemaRestriction)
  nestedRestriction?: AppRestrictionsSchemaRestriction[];

  /**
   * The type of the restriction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictionType" })
  restrictionType?: AppRestrictionsSchemaRestrictionRestrictionTypeEnum;

  /**
   * The name of the restriction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
