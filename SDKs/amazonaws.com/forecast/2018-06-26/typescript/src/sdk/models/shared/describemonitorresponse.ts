/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Baseline } from "./baseline";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeMonitorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Baseline" })
  @Type(() => Baseline)
  baseline?: Baseline;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EstimatedEvaluationTimeRemainingInMinutes" })
  estimatedEvaluationTimeRemainingInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LastEvaluationState" })
  lastEvaluationState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastEvaluationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastEvaluationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorArn" })
  monitorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorName" })
  monitorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceArn" })
  resourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;
}
