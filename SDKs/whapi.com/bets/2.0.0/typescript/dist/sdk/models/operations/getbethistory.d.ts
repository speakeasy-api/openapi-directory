import { SpeakeasyBase } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export declare class GetBetHistoryRequest extends SpeakeasyBase {
    /**
     * A unique identifier of your application that is generated by the API portal.
     */
    apiKey: string;
    /**
     * Another unique identifier for your application.
     */
    apiSecret: string;
    /**
     * The ticket obtained from the sessions API
     */
    apiTicket: string;
    /**
     * The UTC FROM datetime from bets to be returned. (yyyy-MM-ddTHH:mm:ss)
     */
    dateFrom: string;
    /**
     * The UTC TO datetime for bets to be returned. (yyyy-MM-ddTHH:mm:ss)
     */
    dateTo: string;
    /**
     * Specify fields from the default to exclude (Comma Separated List)
     */
    exclude?: string[];
    /**
     * Specify an absolute field list to return (Comma Separated List)
     */
    fields?: string[];
    /**
     * Specify fields in addition to the default to return (Comma Separated List)
     */
    include?: string[];
    /**
     * The index of the page to return
     */
    page?: number;
    /**
     * The number of results per page
     */
    pageSize?: number;
    /**
     * Filter by settled bets. If omitted, both settled and unsettled will be returned.
     */
    settled?: boolean;
    /**
     * The order the response will be retuned by. i.e. transDateTime,desc. Only transDateTime can be used currently
     */
    sort?: string;
}
export declare class GetBetHistoryResponse extends SpeakeasyBase {
    contentType: string;
    statusCode: number;
    rawResponse?: AxiosResponse;
    /**
     * Success
     */
    betHistoryResponse?: shared.BetHistoryResponse;
    /**
     * Error
     */
    errors?: shared.Errors;
}
