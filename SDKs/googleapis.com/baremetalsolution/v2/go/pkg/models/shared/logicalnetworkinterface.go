// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LogicalNetworkInterfaceNetworkTypeEnum - Type of network.
type LogicalNetworkInterfaceNetworkTypeEnum string

const (
	LogicalNetworkInterfaceNetworkTypeEnumTypeUnspecified LogicalNetworkInterfaceNetworkTypeEnum = "TYPE_UNSPECIFIED"
	LogicalNetworkInterfaceNetworkTypeEnumClient          LogicalNetworkInterfaceNetworkTypeEnum = "CLIENT"
	LogicalNetworkInterfaceNetworkTypeEnumPrivate         LogicalNetworkInterfaceNetworkTypeEnum = "PRIVATE"
)

func (e *LogicalNetworkInterfaceNetworkTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "CLIENT":
		fallthrough
	case "PRIVATE":
		*e = LogicalNetworkInterfaceNetworkTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LogicalNetworkInterfaceNetworkTypeEnum: %s", s)
	}
}

// LogicalNetworkInterface - Each logical network interface is effectively a network and IP pair.
type LogicalNetworkInterface struct {
	// Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
	DefaultGateway *bool `json:"defaultGateway,omitempty"`
	// An identifier for the `Network`, generated by the backend.
	ID *string `json:"id,omitempty"`
	// IP address in the network
	IPAddress *string `json:"ipAddress,omitempty"`
	// Name of the network
	Network *string `json:"network,omitempty"`
	// Type of network.
	NetworkType *LogicalNetworkInterfaceNetworkTypeEnum `json:"networkType,omitempty"`
}
