"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import resourceid as shared_resourceid
from typing import Optional


@dataclasses.dataclass
class CreateMediaSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateMediaRequestBodyFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class CreateMediaRequestBody:
    
    file: CreateMediaRequestBodyFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""Binary media file"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""A name of a media file"""  
    

@dataclasses.dataclass
class CreateMediaResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_id: Optional[shared_resourceid.ResourceID] = dataclasses.field(default=None)
    r"""successful operation"""  
    