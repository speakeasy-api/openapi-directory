"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import classificationstatus as shared_classificationstatus
from ..shared import customdataidentifiersresult as shared_customdataidentifiersresult
from ..shared import sensitivedataresult as shared_sensitivedataresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClassificationResult:
    r"""Details about the sensitive data that was detected on the resource."""
    
    additional_occurrences: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalOccurrences'), 'exclude': lambda f: f is None }})  
    custom_data_identifiers: Optional[shared_customdataidentifiersresult.CustomDataIdentifiersResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomDataIdentifiers'), 'exclude': lambda f: f is None }})  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MimeType'), 'exclude': lambda f: f is None }})  
    sensitive_data: Optional[list[shared_sensitivedataresult.SensitiveDataResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SensitiveData'), 'exclude': lambda f: f is None }})  
    size_classified: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SizeClassified'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_classificationstatus.ClassificationStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    