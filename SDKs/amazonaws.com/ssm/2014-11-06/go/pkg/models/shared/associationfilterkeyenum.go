// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AssociationFilterKeyEnum string

const (
	AssociationFilterKeyEnumInstanceID            AssociationFilterKeyEnum = "InstanceId"
	AssociationFilterKeyEnumName                  AssociationFilterKeyEnum = "Name"
	AssociationFilterKeyEnumAssociationID         AssociationFilterKeyEnum = "AssociationId"
	AssociationFilterKeyEnumAssociationStatusName AssociationFilterKeyEnum = "AssociationStatusName"
	AssociationFilterKeyEnumLastExecutedBefore    AssociationFilterKeyEnum = "LastExecutedBefore"
	AssociationFilterKeyEnumLastExecutedAfter     AssociationFilterKeyEnum = "LastExecutedAfter"
	AssociationFilterKeyEnumAssociationName       AssociationFilterKeyEnum = "AssociationName"
	AssociationFilterKeyEnumResourceGroupName     AssociationFilterKeyEnum = "ResourceGroupName"
)

func (e *AssociationFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "InstanceId":
		fallthrough
	case "Name":
		fallthrough
	case "AssociationId":
		fallthrough
	case "AssociationStatusName":
		fallthrough
	case "LastExecutedBefore":
		fallthrough
	case "LastExecutedAfter":
		fallthrough
	case "AssociationName":
		fallthrough
	case "ResourceGroupName":
		*e = AssociationFilterKeyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociationFilterKeyEnum: %s", s)
	}
}
