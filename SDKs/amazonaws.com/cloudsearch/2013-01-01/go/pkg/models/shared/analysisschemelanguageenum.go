// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AnalysisSchemeLanguageEnum - An <a href="http://tools.ietf.org/html/rfc4646" target="_blank">IETF RFC 4646</a> language code or <code>mul</code> for multiple languages.
type AnalysisSchemeLanguageEnum string

const (
	AnalysisSchemeLanguageEnumAr     AnalysisSchemeLanguageEnum = "ar"
	AnalysisSchemeLanguageEnumBg     AnalysisSchemeLanguageEnum = "bg"
	AnalysisSchemeLanguageEnumCa     AnalysisSchemeLanguageEnum = "ca"
	AnalysisSchemeLanguageEnumCs     AnalysisSchemeLanguageEnum = "cs"
	AnalysisSchemeLanguageEnumDa     AnalysisSchemeLanguageEnum = "da"
	AnalysisSchemeLanguageEnumDe     AnalysisSchemeLanguageEnum = "de"
	AnalysisSchemeLanguageEnumEl     AnalysisSchemeLanguageEnum = "el"
	AnalysisSchemeLanguageEnumEn     AnalysisSchemeLanguageEnum = "en"
	AnalysisSchemeLanguageEnumEs     AnalysisSchemeLanguageEnum = "es"
	AnalysisSchemeLanguageEnumEu     AnalysisSchemeLanguageEnum = "eu"
	AnalysisSchemeLanguageEnumFa     AnalysisSchemeLanguageEnum = "fa"
	AnalysisSchemeLanguageEnumFi     AnalysisSchemeLanguageEnum = "fi"
	AnalysisSchemeLanguageEnumFr     AnalysisSchemeLanguageEnum = "fr"
	AnalysisSchemeLanguageEnumGa     AnalysisSchemeLanguageEnum = "ga"
	AnalysisSchemeLanguageEnumGl     AnalysisSchemeLanguageEnum = "gl"
	AnalysisSchemeLanguageEnumHe     AnalysisSchemeLanguageEnum = "he"
	AnalysisSchemeLanguageEnumHi     AnalysisSchemeLanguageEnum = "hi"
	AnalysisSchemeLanguageEnumHu     AnalysisSchemeLanguageEnum = "hu"
	AnalysisSchemeLanguageEnumHy     AnalysisSchemeLanguageEnum = "hy"
	AnalysisSchemeLanguageEnumID     AnalysisSchemeLanguageEnum = "id"
	AnalysisSchemeLanguageEnumIt     AnalysisSchemeLanguageEnum = "it"
	AnalysisSchemeLanguageEnumJa     AnalysisSchemeLanguageEnum = "ja"
	AnalysisSchemeLanguageEnumKo     AnalysisSchemeLanguageEnum = "ko"
	AnalysisSchemeLanguageEnumLv     AnalysisSchemeLanguageEnum = "lv"
	AnalysisSchemeLanguageEnumMul    AnalysisSchemeLanguageEnum = "mul"
	AnalysisSchemeLanguageEnumNl     AnalysisSchemeLanguageEnum = "nl"
	AnalysisSchemeLanguageEnumNo     AnalysisSchemeLanguageEnum = "no"
	AnalysisSchemeLanguageEnumPt     AnalysisSchemeLanguageEnum = "pt"
	AnalysisSchemeLanguageEnumRo     AnalysisSchemeLanguageEnum = "ro"
	AnalysisSchemeLanguageEnumRu     AnalysisSchemeLanguageEnum = "ru"
	AnalysisSchemeLanguageEnumSv     AnalysisSchemeLanguageEnum = "sv"
	AnalysisSchemeLanguageEnumTh     AnalysisSchemeLanguageEnum = "th"
	AnalysisSchemeLanguageEnumTr     AnalysisSchemeLanguageEnum = "tr"
	AnalysisSchemeLanguageEnumZhHans AnalysisSchemeLanguageEnum = "zh-Hans"
	AnalysisSchemeLanguageEnumZhHant AnalysisSchemeLanguageEnum = "zh-Hant"
)

func (e *AnalysisSchemeLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ar":
		fallthrough
	case "bg":
		fallthrough
	case "ca":
		fallthrough
	case "cs":
		fallthrough
	case "da":
		fallthrough
	case "de":
		fallthrough
	case "el":
		fallthrough
	case "en":
		fallthrough
	case "es":
		fallthrough
	case "eu":
		fallthrough
	case "fa":
		fallthrough
	case "fi":
		fallthrough
	case "fr":
		fallthrough
	case "ga":
		fallthrough
	case "gl":
		fallthrough
	case "he":
		fallthrough
	case "hi":
		fallthrough
	case "hu":
		fallthrough
	case "hy":
		fallthrough
	case "id":
		fallthrough
	case "it":
		fallthrough
	case "ja":
		fallthrough
	case "ko":
		fallthrough
	case "lv":
		fallthrough
	case "mul":
		fallthrough
	case "nl":
		fallthrough
	case "no":
		fallthrough
	case "pt":
		fallthrough
	case "ro":
		fallthrough
	case "ru":
		fallthrough
	case "sv":
		fallthrough
	case "th":
		fallthrough
	case "tr":
		fallthrough
	case "zh-Hans":
		fallthrough
	case "zh-Hant":
		*e = AnalysisSchemeLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalysisSchemeLanguageEnum: %s", s)
	}
}
