// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AgentInfoStateEnum - Agent state.
type AgentInfoStateEnum string

const (
	AgentInfoStateEnumAgentStateUnspecified AgentInfoStateEnum = "AGENT_STATE_UNSPECIFIED"
	AgentInfoStateEnumAgentStarting         AgentInfoStateEnum = "AGENT_STARTING"
	AgentInfoStateEnumAgentRunning          AgentInfoStateEnum = "AGENT_RUNNING"
	AgentInfoStateEnumAgentStopped          AgentInfoStateEnum = "AGENT_STOPPED"
)

func (e *AgentInfoStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AGENT_STATE_UNSPECIFIED":
		fallthrough
	case "AGENT_STARTING":
		fallthrough
	case "AGENT_RUNNING":
		fallthrough
	case "AGENT_STOPPED":
		*e = AgentInfoStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AgentInfoStateEnum: %s", s)
	}
}

// AgentInfo - VM Agent Info.
type AgentInfo struct {
	// The assigned Job ID
	JobID *string `json:"jobId,omitempty"`
	// When the AgentInfo is generated.
	ReportTime *string `json:"reportTime,omitempty"`
	// Agent state.
	State *AgentInfoStateEnum `json:"state,omitempty"`
	// The assigned task group ID.
	TaskGroupID *string `json:"taskGroupId,omitempty"`
	// Task Info.
	Tasks []AgentTaskInfo `json:"tasks,omitempty"`
}
