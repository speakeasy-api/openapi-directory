// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FilterNameStringTypeEnum string

const (
	FilterNameStringTypeEnumDescription   FilterNameStringTypeEnum = "description"
	FilterNameStringTypeEnumName          FilterNameStringTypeEnum = "name"
	FilterNameStringTypeEnumTagKey        FilterNameStringTypeEnum = "tag-key"
	FilterNameStringTypeEnumTagValue      FilterNameStringTypeEnum = "tag-value"
	FilterNameStringTypeEnumPrimaryRegion FilterNameStringTypeEnum = "primary-region"
	FilterNameStringTypeEnumOwningService FilterNameStringTypeEnum = "owning-service"
	FilterNameStringTypeEnumAll           FilterNameStringTypeEnum = "all"
)

func (e FilterNameStringTypeEnum) ToPointer() *FilterNameStringTypeEnum {
	return &e
}

func (e *FilterNameStringTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "description":
		fallthrough
	case "name":
		fallthrough
	case "tag-key":
		fallthrough
	case "tag-value":
		fallthrough
	case "primary-region":
		fallthrough
	case "owning-service":
		fallthrough
	case "all":
		*e = FilterNameStringTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilterNameStringTypeEnum: %v", v)
	}
}
