/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostSiteApiKeysRequestBody {
    /**
     * User-supplied description of API key.
     */
    @SpeakeasyMetadata("multipartForm:name=description")
    public String description;
    public PostSiteApiKeysRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * API Key expiration date
     */
    @SpeakeasyMetadata("multipartForm:name=expires_at")
    public OffsetDateTime expiresAt;
    public PostSiteApiKeysRequestBody withExpiresAt(OffsetDateTime expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }
    
    /**
     * Internal name for the API Key.  For your use.
     */
    @SpeakeasyMetadata("multipartForm:name=name")
    public String name;
    public PostSiteApiKeysRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Folder path restriction for this api key.
     */
    @SpeakeasyMetadata("multipartForm:name=path")
    public String path;
    public PostSiteApiKeysRequestBody withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Permissions for this API Key.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations).  Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.
     */
    @SpeakeasyMetadata("multipartForm:name=permission_set")
    public PostSiteApiKeysRequestBodyPermissionSetEnum permissionSet;
    public PostSiteApiKeysRequestBody withPermissionSet(PostSiteApiKeysRequestBodyPermissionSetEnum permissionSet) {
        this.permissionSet = permissionSet;
        return this;
    }
    
    /**
     * User ID.  Provide a value of `0` to operate the current session's user.
     */
    @SpeakeasyMetadata("multipartForm:name=user_id")
    public Integer userId;
    public PostSiteApiKeysRequestBody withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
}
