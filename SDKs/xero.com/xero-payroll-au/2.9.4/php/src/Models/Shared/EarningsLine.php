<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EarningsLine
{
    /**
     * Earnings rate amount
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('Amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * Annual salary for earnings line
     * 
     * @var ?float $annualSalary
     */
	#[\JMS\Serializer\Annotation\SerializedName('AnnualSalary')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $annualSalary = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CalculationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EarningsRateCalculationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EarningsRateCalculationTypeEnum $calculationType = null;
    
    /**
     * Xero unique id for earnings rate
     * 
     * @var string $earningsRateID
     */
	#[\JMS\Serializer\Annotation\SerializedName('EarningsRateID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $earningsRateID;
    
    /**
     * Earnings rate amount. Only applicable if the EarningsRate RateType is Fixed
     * 
     * @var ?float $fixedAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('FixedAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $fixedAmount = null;
    
    /**
     * Normal number of units for EarningsLine. Applicable when RateType is "MULTIPLE"
     * 
     * @var ?float $normalNumberOfUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('NormalNumberOfUnits')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $normalNumberOfUnits = null;
    
    /**
     * Earnings rate number of units.
     * 
     * @var ?float $numberOfUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('NumberOfUnits')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $numberOfUnits = null;
    
    /**
     * number of units for earning line
     * 
     * @var ?float $numberOfUnitsPerWeek
     */
	#[\JMS\Serializer\Annotation\SerializedName('NumberOfUnitsPerWeek')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $numberOfUnitsPerWeek = null;
    
    /**
     * Rate per unit of the EarningsLine.
     * 
     * @var ?float $ratePerUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('RatePerUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $ratePerUnit = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->annualSalary = null;
		$this->calculationType = null;
		$this->earningsRateID = "";
		$this->fixedAmount = null;
		$this->normalNumberOfUnits = null;
		$this->numberOfUnits = null;
		$this->numberOfUnitsPerWeek = null;
		$this->ratePerUnit = null;
	}
}
