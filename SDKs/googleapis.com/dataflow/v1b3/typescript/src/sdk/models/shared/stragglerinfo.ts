/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { StragglerDebuggingInfo } from "./stragglerdebugginginfo";
import { Expose, Transform } from "class-transformer";

/**
 * Information useful for straggler identification and debugging.
 */
export class StragglerInfo extends SpeakeasyBase {
  /**
   * The straggler causes, keyed by the string representation of the StragglerCause enum and contains specialized debugging information for each straggler cause.
   */
  @SpeakeasyMetadata({ elemType: StragglerDebuggingInfo })
  @Expose({ name: "causes" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, StragglerDebuggingInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], StragglerDebuggingInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  causes?: Record<string, StragglerDebuggingInfo>;

  /**
   * The time when the work item attempt became a straggler.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;
}
