// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type WebmastersSitemapsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type WebmastersSitemapsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type WebmastersSitemapsListSecurity struct {
	Option1 *WebmastersSitemapsListSecurityOption1 `security:"option"`
	Option2 *WebmastersSitemapsListSecurityOption2 `security:"option"`
}

type WebmastersSitemapsListRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The site's URL, including protocol. For example: http://www.example.com/
	SiteURL string `pathParam:"style=simple,explode=false,name=siteUrl"`
	// A URL of a site's sitemap index. For example: http://www.example.com/sitemapindex.xml
	SitemapIndex *string `queryParam:"style=form,explode=true,name=sitemapIndex"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type WebmastersSitemapsListResponse struct {
	ContentType string
	// Successful response
	SitemapsListResponse *shared.SitemapsListResponse
	StatusCode           int
	RawResponse          *http.Response
}
