/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The target capacity for the connector. The capacity can be auto scaled or provisioned.
 */
export class UpdateConnectorRequestBodyCapacity extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "autoScaling" })
  @Type(() => shared.AutoScalingUpdate)
  autoScaling?: shared.AutoScalingUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "provisionedCapacity" })
  @Type(() => shared.ProvisionedCapacityUpdate)
  provisionedCapacity?: shared.ProvisionedCapacityUpdate;
}

export class UpdateConnectorRequestBody extends SpeakeasyBase {
  /**
   * The target capacity for the connector. The capacity can be auto scaled or provisioned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capacity" })
  @Type(() => UpdateConnectorRequestBodyCapacity)
  capacity: UpdateConnectorRequestBodyCapacity;
}

export class UpdateConnectorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateConnectorRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The Amazon Resource Name (ARN) of the connector that you want to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=connectorArn",
  })
  connectorArn: string;

  /**
   * The current version of the connector that you want to update.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=currentVersion",
  })
  currentVersion: string;
}

export class UpdateConnectorResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ForbiddenException
   */
  @SpeakeasyMetadata()
  forbiddenException?: any;

  /**
   * InternalServerErrorException
   */
  @SpeakeasyMetadata()
  internalServerErrorException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateConnectorResponse?: shared.UpdateConnectorResponse;
}
