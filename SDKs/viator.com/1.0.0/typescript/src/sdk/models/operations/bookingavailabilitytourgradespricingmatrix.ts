/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class BookingAvailabilityTourgradesPricingmatrixRequestBody extends SpeakeasyBase {
  /**
   * **currency code** for the currency in which to display pricing details
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * **month of year** (as text) by which to filter results (must be in the future)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "month" })
  month?: string;

  /**
   * **alphanumeric identifier** of product about which to retrieve tour grade and pricing information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCode" })
  productCode?: string;

  /**
   * **year** (as text) by which to filter results (must be in the future)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "year" })
  year?: string;
}

export class BookingAvailabilityTourgradesPricingmatrixRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: BookingAvailabilityTourgradesPricingmatrixRequestBody;
}

export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPricesPrices extends SpeakeasyBase {
  /**
   * **currency code** of the currency in which pricing details are displayed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * **numeric merchant net rate** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNetPrice" })
  merchantNetPrice?: number;

  /**
   * **currency-formatted merchant net rate** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNetPriceFormatted" })
  merchantNetPriceFormatted?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minNoOfTravellersRequiredForPrice" })
  minNoOfTravellersRequiredForPrice?: number;

  /**
   * **numeric suggested retail price** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * **currency-formatted suggested retail price** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceFormatted" })
  priceFormatted?: string;

  /**
   * **sort order** *this* pricing detail object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPrices extends SpeakeasyBase {
  /**
   * **unique numeric identifier** for the age band
   *
   * @remarks
   * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandId" })
  bandId?: number;

  /**
   * **maximum number** of participants allowed for *this* tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumCountRequired" })
  maximumCountRequired?: number;

  /**
   * **minimum number** of participants required for *this* tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumCountRequired" })
  minimumCountRequired?: number;

  /**
   * **array** of pricing detail objects
   */
  @SpeakeasyMetadata({
    elemType:
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPricesPrices,
  })
  @Expose({ name: "prices" })
  @Type(
    () =>
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPricesPrices
  )
  prices?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPricesPrices[];

  /**
   * **sort order** for *this* tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrix extends SpeakeasyBase {
  /**
   * **array** of pricing objects by age band
   */
  @SpeakeasyMetadata({
    elemType:
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPrices,
  })
  @Expose({ name: "ageBandPrices" })
  @Type(
    () =>
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPrices
  )
  ageBandPrices?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPrices[];

  /**
   * **date** on which *this* product operates
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingDate" })
  bookingDate?: string;

  /**
   * **natural-language description** of the pricing mode
   *
   * @remarks
   * - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pricingUnit" })
  pricingUnit?: string;

  /**
   * **sort order** for *this* pricing object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGrades extends SpeakeasyBase {
  /**
   * **alphanumeric identifier** of the tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gradeCode" })
  gradeCode?: string;

  /**
   * **title of tour grade**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gradeTitle" })
  gradeTitle?: string;

  /**
   * **array of pricing objects** for *this* tour grade
   */
  @SpeakeasyMetadata({
    elemType:
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrix,
  })
  @Expose({ name: "pricingMatrix" })
  @Type(
    () =>
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrix
  )
  pricingMatrix?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrix[];

  /**
   * **sort order** for *this* tour grade pricing object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDates extends SpeakeasyBase {
  /**
   * **date** on which *this* product operates
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingDate" })
  bookingDate?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callForLastMinAvailability" })
  callForLastMinAvailability?: boolean;

  /**
   * **sort order** for *this* tour grade pricing object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;

  /**
   * **array** of tour grade pricing information objects
   */
  @SpeakeasyMetadata({
    elemType:
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGrades,
  })
  @Expose({ name: "tourGrades" })
  @Type(
    () =>
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGrades
  )
  tourGrades?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGrades[];
}

export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONData extends SpeakeasyBase {
  /**
   * **month of year** (as text) by which to filter results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingMonth" })
  bookingMonth?: string;

  /**
   * **array of tour grade pricing objects** each detailing availability on a single day
   */
  @SpeakeasyMetadata({
    elemType:
      BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDates,
  })
  @Expose({ name: "dates" })
  @Type(
    () => BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDates
  )
  dates?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDates[];

  /**
   * **natural-language label** for the pricing terms of this tour grade
   *
   * @remarks
   * - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pricingUnit" })
  pricingUnit?: string;
}

/**
 * Success
 */
export class BookingAvailabilityTourgradesPricingmatrix200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONData)
  data?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONData;

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class BookingAvailabilityTourgradesPricingmatrixResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  bookingAvailabilityTourgradesPricingmatrix200ApplicationJSONObject?: BookingAvailabilityTourgradesPricingmatrix200ApplicationJSON;
}
