// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GamesByWeekFormatEnum - Desired response format. Valid entries are <code>xml</code> or <code>json</code>.
type GamesByWeekFormatEnum string

const (
	GamesByWeekFormatEnumXML  GamesByWeekFormatEnum = "XML"
	GamesByWeekFormatEnumJSON GamesByWeekFormatEnum = "JSON"
)

func (e *GamesByWeekFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = GamesByWeekFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GamesByWeekFormatEnum: %s", s)
	}
}

type GamesByWeekPathParams struct {
	// Desired response format. Valid entries are <code>xml</code> or <code>json</code>.
	Format GamesByWeekFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	//           Year of the season.
	//           <br>Examples: <code>2015</code>, <code>2016</code>, etc.
	//
	Season string `pathParam:"style=simple,explode=false,name=season"`
	//           The week of the game(s).
	//           <br>Examples: <code>1</code>, <code>2</code>, <code>3</code>, etc.
	//
	Week string `pathParam:"style=simple,explode=false,name=week"`
}

type GamesByWeekRequest struct {
	PathParams GamesByWeekPathParams
}

type GamesByWeekResponse struct {
	ContentType string
	Games       []shared.Game
	StatusCode  int
	RawResponse *http.Response
}
