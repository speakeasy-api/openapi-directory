// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type UsersSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

// UsersStatusEnum - User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users who are deactivated.<br>`pending` - Users with a pending status.
type UsersStatusEnum string

const (
	UsersStatusEnumActive   UsersStatusEnum = "active"
	UsersStatusEnumInactive UsersStatusEnum = "inactive"
	UsersStatusEnumPending  UsersStatusEnum = "pending"
)

func (e *UsersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "pending":
		*e = UsersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UsersStatusEnum: %s", s)
	}
}

type UsersQueryParams struct {
	// Provide a value for this field if you would like to see the following attribute in the response of this API call:<br>
	//
	// `custom_attributes`: Returns custom attributes that are associated with the user.<br>`host_key`: Returns [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user.
	IncludeFields *string `queryParam:"style=form,explode=true,name=include_fields"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The page number of the current page in the returned records.
	PageNumber *string `queryParam:"style=form,explode=true,name=page_number"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Unique identifier of the role. Provide this parameter if you would like to filter the response by a specific role. You can retrieve Role IDs from [List Roles](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) API.
	RoleID *string `queryParam:"style=form,explode=true,name=role_id"`
	// User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users who are deactivated.<br>`pending` - Users with a pending status.
	Status *UsersStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type UsersRequest struct {
	QueryParams UsersQueryParams
	Security    UsersSecurity
}

type Users200ApplicationXMLUsersCustomAttributes struct {
	// Unique identifier of the custom attribute.
	Key *string
	// Name of the custom attribute.
	Name *string
	// Value of the custom attribute.
	Value *string
}

type Users200ApplicationXMLUsers struct {
	// The time when user's account was created.
	CreatedAt *time.Time
	// Custom attributes. This field is only returned if users have been assigned custom attributes and if you provided `custom_attributes` as the value of `include_fields` query parameter in the API request.
	CustomAttributes []Users200ApplicationXMLUsersCustomAttributes
	// Department, if provided by the user.
	Dept *string
	// User's email address.
	Email string
	// User's first name.
	FirstName *string
	// IDs of groups where the user is a member.
	GroupIds []string
	// The [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user. This field is only returned if users have been assigned a host key and if you provided `host_key` as the value of `include_fields` query parameter in the API request.
	HostKey *string
	// User ID.
	ID *string
	// IDs of IM directory groups where the user is a member.
	ImGroupIds []string
	// The last client version that user used to login.
	LastClientVersion *string
	// User's last login time. There is a three-days buffer period for this field. For example, if user first logged in on 2020-01-01 and then logged out and logged in on 2020-01-02, the value of this field will still reflect the login time of 2020-01-01. However, if the user logs in on 2020-01-04, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.
	LastLoginTime *time.Time
	// User's last name.
	LastName *string
	// This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
	PlanUnitedType *string
	// Personal meeting ID of the user.
	Pmi *int64
	// Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.
	RoleID *string
	// User's status
	Status *string
	// The time zone of the user.
	Timezone *string
	// User's plan type.<br>
	// `1` - Basic.<br>
	// `2` - Licensed.<br>
	// `3` - On-prem.<br>
	// `99` - None (this can only be set with `ssoCreate`).
	//
	Type int64
	// Display whether the user's email address for the Zoom account is verified or not. <br>
	// `1` - Verified user email.<br>
	// `0` - User's email not verified.
	Verified *int64
}

// Users200ApplicationXML - **HTTP Status Code:** `200`<br>
// User list returned.
type Users200ApplicationXML struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of pages returned for the request made.
	PageCount *int64
	// The page number of the current results.
	PageNumber *int64
	// The number of records returned within a single API call.
	PageSize *int64
	// The total number of all the records available across pages.
	TotalRecords *int64
	// List of user objects.
	Users []Users200ApplicationXMLUsers
}

type Users200ApplicationJSONUsersCustomAttributes struct {
	// Unique identifier of the custom attribute.
	Key *string `json:"key,omitempty"`
	// Name of the custom attribute.
	Name *string `json:"name,omitempty"`
	// Value of the custom attribute.
	Value *string `json:"value,omitempty"`
}

type Users200ApplicationJSONUsers struct {
	// The time when user's account was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Custom attributes. This field is only returned if users have been assigned custom attributes and if you provided `custom_attributes` as the value of `include_fields` query parameter in the API request.
	CustomAttributes []Users200ApplicationJSONUsersCustomAttributes `json:"custom_attributes,omitempty"`
	// Department, if provided by the user.
	Dept *string `json:"dept,omitempty"`
	// User's email address.
	Email string `json:"email"`
	// User's first name.
	FirstName *string `json:"first_name,omitempty"`
	// IDs of groups where the user is a member.
	GroupIds []string `json:"group_ids,omitempty"`
	// The [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user. This field is only returned if users have been assigned a host key and if you provided `host_key` as the value of `include_fields` query parameter in the API request.
	HostKey *string `json:"host_key,omitempty"`
	// User ID.
	ID *string `json:"id,omitempty"`
	// IDs of IM directory groups where the user is a member.
	ImGroupIds []string `json:"im_group_ids,omitempty"`
	// The last client version that user used to login.
	LastClientVersion *string `json:"last_client_version,omitempty"`
	// User's last login time. There is a three-days buffer period for this field. For example, if user first logged in on 2020-01-01 and then logged out and logged in on 2020-01-02, the value of this field will still reflect the login time of 2020-01-01. However, if the user logs in on 2020-01-04, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.
	LastLoginTime *time.Time `json:"last_login_time,omitempty"`
	// User's last name.
	LastName *string `json:"last_name,omitempty"`
	// This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
	PlanUnitedType *string `json:"plan_united_type,omitempty"`
	// Personal meeting ID of the user.
	Pmi *int64 `json:"pmi,omitempty"`
	// Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.
	RoleID *string `json:"role_id,omitempty"`
	// User's status
	Status *string `json:"status,omitempty"`
	// The time zone of the user.
	Timezone *string `json:"timezone,omitempty"`
	// User's plan type.<br>
	// `1` - Basic.<br>
	// `2` - Licensed.<br>
	// `3` - On-prem.<br>
	// `99` - None (this can only be set with `ssoCreate`).
	//
	Type int64 `json:"type"`
	// Display whether the user's email address for the Zoom account is verified or not. <br>
	// `1` - Verified user email.<br>
	// `0` - User's email not verified.
	Verified *int64 `json:"verified,omitempty"`
}

// Users200ApplicationJSON - **HTTP Status Code:** `200`<br>
// User list returned.
type Users200ApplicationJSON struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// The page number of the current results.
	PageNumber *int64 `json:"page_number,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// The total number of all the records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
	// List of user objects.
	Users []Users200ApplicationJSONUsers `json:"users,omitempty"`
}

type UsersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// User list returned.
	Users200ApplicationJSONObject *Users200ApplicationJSON
}
