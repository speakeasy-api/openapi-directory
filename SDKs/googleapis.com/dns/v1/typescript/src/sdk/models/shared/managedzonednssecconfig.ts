/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DnsKeySpec } from "./dnskeyspec";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
 */
export enum ManagedZoneDnsSecConfigNonExistenceEnum {
  Nsec = "nsec",
  Nsec3 = "nsec3",
}

/**
 * Specifies whether DNSSEC is enabled, and what mode it is in.
 */
export enum ManagedZoneDnsSecConfigStateEnum {
  Off = "off",
  On = "on",
  Transfer = "transfer",
}

export class ManagedZoneDnsSecConfig extends SpeakeasyBase {
  /**
   * Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
   */
  @SpeakeasyMetadata({ elemType: DnsKeySpec })
  @Expose({ name: "defaultKeySpecs" })
  @Type(() => DnsKeySpec)
  defaultKeySpecs?: DnsKeySpec[];

  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonExistence" })
  nonExistence?: ManagedZoneDnsSecConfigNonExistenceEnum;

  /**
   * Specifies whether DNSSEC is enabled, and what mode it is in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ManagedZoneDnsSecConfigStateEnum;
}
