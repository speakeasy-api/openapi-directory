/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransferInstrument - OK - the request has succeeded.
 */
public class TransferInstrument {
    @JsonProperty("bankAccount")
    public BankAccountInfo bankAccount;
    public TransferInstrument withBankAccount(BankAccountInfo bankAccount) {
        this.bankAccount = bankAccount;
        return this;
    }
    
    /**
     * List of capabilities for this supporting entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capabilities")
    public java.util.Map<String, SupportingEntityCapability> capabilities;
    public TransferInstrument withCapabilities(java.util.Map<String, SupportingEntityCapability> capabilities) {
        this.capabilities = capabilities;
        return this;
    }
    
    /**
     * List of documents uploaded for the transfer instrument.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentDetails")
    public DocumentReference[] documentDetails;
    public TransferInstrument withDocumentDetails(DocumentReference[] documentDetails) {
        this.documentDetails = documentDetails;
        return this;
    }
    
    /**
     * The unique identifier of the transfer instrument.
     */
    @JsonProperty("id")
    public String id;
    public TransferInstrument withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) that owns the transfer instrument.
     */
    @JsonProperty("legalEntityId")
    public String legalEntityId;
    public TransferInstrument withLegalEntityId(String legalEntityId) {
        this.legalEntityId = legalEntityId;
        return this;
    }
    
    /**
     * List of the verification errors from capabilities for this supporting entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("problems")
    public CapabilityProblem[] problems;
    public TransferInstrument withProblems(CapabilityProblem[] problems) {
        this.problems = problems;
        return this;
    }
    
    /**
     * The type of transfer instrument.
     * 
     * Possible value: **bankAccount**.
     */
    @JsonProperty("type")
    public TransferInstrumentTypeEnum type;
    public TransferInstrument withType(TransferInstrumentTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
