/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.CapacityCommitmentInput capacityCommitmentInput;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withCapacityCommitmentInput(org.openapis.openapi.models.shared.CapacityCommitmentInput capacityCommitmentInput) {
        this.capacityCommitmentInput = capacityCommitmentInput;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=capacityCommitmentId")
    public String capacityCommitmentId;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withCapacityCommitmentId(String capacityCommitmentId) {
        this.capacityCommitmentId = capacityCommitmentId;
        return this;
    }
    
    /**
     * If true, fail the request if another project in the organization has a capacity commitment.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=enforceSingleAdminProjectPerOrg")
    public Boolean enforceSingleAdminProjectPerOrg;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withEnforceSingleAdminProjectPerOrg(Boolean enforceSingleAdminProjectPerOrg) {
        this.enforceSingleAdminProjectPerOrg = enforceSingleAdminProjectPerOrg;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Required. Resource name of the parent reservation. E.g., `projects/myproject/locations/US`
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=parent")
    public String parent;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;

    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    public BigqueryreservationProjectsLocationsCapacityCommitmentsCreateRequest(@JsonProperty("parent") String parent) {
        this.parent = parent;
  }
}
