// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateUserXAmzTargetEnum
type UpdateUserXAmzTargetEnum string

const (
	UpdateUserXAmzTargetEnumAmazonMemoryDbUpdateUser UpdateUserXAmzTargetEnum = "AmazonMemoryDB.UpdateUser"
)

func (e *UpdateUserXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonMemoryDB.UpdateUser":
		*e = UpdateUserXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateUserXAmzTargetEnum: %s", s)
	}
}

type UpdateUserHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateUserXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateUserRequest struct {
	Headers UpdateUserHeaders
	Request shared.UpdateUserRequest `request:"mediaType=application/json"`
}

type UpdateUserResponse struct {
	ContentType string
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// InvalidUserStateFault
	InvalidUserStateFault interface{}
	StatusCode            int
	RawResponse           *http.Response
	// Success
	UpdateUserResponse *shared.UpdateUserResponse
	// UserNotFoundFault
	UserNotFoundFault interface{}
}
