// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LegalArrangementDetailLegalFormEnum - The form of legal arrangement. Required if `type` is **Trust** or **Partnership**.
//
// The possible values depend on the `type`.
//
// - For `type` **Trust**:  **CashManagementTrust**, **CorporateUnitTrust**, **DeceasedEstate**, **DiscretionaryInvestmentTrust**, **DiscretionaryServicesManagementTrust**, **DiscretionaryTradingTrust**, **FirstHomeSaverAccountsTrust**, **FixedTrust**, **FixedUnitTrust**, **HybridTrust**, **ListedPublicUnitTrust**, **OtherTrust**, **PooledSuperannuationTrust**, **PublicTradingTrust**, or **UnlistedPublicUnitTrust**.
//
// - For `type` **Partnership**: **LimitedPartnership**, **FamilyPartnership**, or **OtherPartnership**
type LegalArrangementDetailLegalFormEnum string

const (
	LegalArrangementDetailLegalFormEnumCashManagementTrust                  LegalArrangementDetailLegalFormEnum = "CashManagementTrust"
	LegalArrangementDetailLegalFormEnumCorporateUnitTrust                   LegalArrangementDetailLegalFormEnum = "CorporateUnitTrust"
	LegalArrangementDetailLegalFormEnumDeceasedEstate                       LegalArrangementDetailLegalFormEnum = "DeceasedEstate"
	LegalArrangementDetailLegalFormEnumDiscretionaryInvestmentTrust         LegalArrangementDetailLegalFormEnum = "DiscretionaryInvestmentTrust"
	LegalArrangementDetailLegalFormEnumDiscretionaryServicesManagementTrust LegalArrangementDetailLegalFormEnum = "DiscretionaryServicesManagementTrust"
	LegalArrangementDetailLegalFormEnumDiscretionaryTradingTrust            LegalArrangementDetailLegalFormEnum = "DiscretionaryTradingTrust"
	LegalArrangementDetailLegalFormEnumFirstHomeSaverAccountsTrust          LegalArrangementDetailLegalFormEnum = "FirstHomeSaverAccountsTrust"
	LegalArrangementDetailLegalFormEnumFixedTrust                           LegalArrangementDetailLegalFormEnum = "FixedTrust"
	LegalArrangementDetailLegalFormEnumFixedUnitTrust                       LegalArrangementDetailLegalFormEnum = "FixedUnitTrust"
	LegalArrangementDetailLegalFormEnumHybridTrust                          LegalArrangementDetailLegalFormEnum = "HybridTrust"
	LegalArrangementDetailLegalFormEnumListedPublicUnitTrust                LegalArrangementDetailLegalFormEnum = "ListedPublicUnitTrust"
	LegalArrangementDetailLegalFormEnumOtherTrust                           LegalArrangementDetailLegalFormEnum = "OtherTrust"
	LegalArrangementDetailLegalFormEnumPooledSuperannuationTrust            LegalArrangementDetailLegalFormEnum = "PooledSuperannuationTrust"
	LegalArrangementDetailLegalFormEnumPublicTradingTrust                   LegalArrangementDetailLegalFormEnum = "PublicTradingTrust"
	LegalArrangementDetailLegalFormEnumUnlistedPublicUnitTrust              LegalArrangementDetailLegalFormEnum = "UnlistedPublicUnitTrust"
	LegalArrangementDetailLegalFormEnumLimitedPartnership                   LegalArrangementDetailLegalFormEnum = "LimitedPartnership"
	LegalArrangementDetailLegalFormEnumFamilyPartnership                    LegalArrangementDetailLegalFormEnum = "FamilyPartnership"
	LegalArrangementDetailLegalFormEnumOtherPartnership                     LegalArrangementDetailLegalFormEnum = "OtherPartnership"
)

func (e LegalArrangementDetailLegalFormEnum) ToPointer() *LegalArrangementDetailLegalFormEnum {
	return &e
}

func (e *LegalArrangementDetailLegalFormEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CashManagementTrust":
		fallthrough
	case "CorporateUnitTrust":
		fallthrough
	case "DeceasedEstate":
		fallthrough
	case "DiscretionaryInvestmentTrust":
		fallthrough
	case "DiscretionaryServicesManagementTrust":
		fallthrough
	case "DiscretionaryTradingTrust":
		fallthrough
	case "FirstHomeSaverAccountsTrust":
		fallthrough
	case "FixedTrust":
		fallthrough
	case "FixedUnitTrust":
		fallthrough
	case "HybridTrust":
		fallthrough
	case "ListedPublicUnitTrust":
		fallthrough
	case "OtherTrust":
		fallthrough
	case "PooledSuperannuationTrust":
		fallthrough
	case "PublicTradingTrust":
		fallthrough
	case "UnlistedPublicUnitTrust":
		fallthrough
	case "LimitedPartnership":
		fallthrough
	case "FamilyPartnership":
		fallthrough
	case "OtherPartnership":
		*e = LegalArrangementDetailLegalFormEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LegalArrangementDetailLegalFormEnum: %v", v)
	}
}

// LegalArrangementDetailTypeEnum - The [type of legal arrangement](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/legal-arrangements#types-of-legal-arrangements).
//
// Possible values:
//
// - **Association**
//
// - **Partnership**
//
// - **SoleProprietorship**
//
// - **Trust**
type LegalArrangementDetailTypeEnum string

const (
	LegalArrangementDetailTypeEnumAssociation        LegalArrangementDetailTypeEnum = "Association"
	LegalArrangementDetailTypeEnumPartnership        LegalArrangementDetailTypeEnum = "Partnership"
	LegalArrangementDetailTypeEnumSoleProprietorship LegalArrangementDetailTypeEnum = "SoleProprietorship"
	LegalArrangementDetailTypeEnumTrust              LegalArrangementDetailTypeEnum = "Trust"
)

func (e LegalArrangementDetailTypeEnum) ToPointer() *LegalArrangementDetailTypeEnum {
	return &e
}

func (e *LegalArrangementDetailTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Association":
		fallthrough
	case "Partnership":
		fallthrough
	case "SoleProprietorship":
		fallthrough
	case "Trust":
		*e = LegalArrangementDetailTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LegalArrangementDetailTypeEnum: %v", v)
	}
}

type LegalArrangementDetail struct {
	Address ViasAddress `json:"address"`
	// Adyen-generated unique alphanumeric identifier (UUID) for the entry, returned in the response when you create a legal arrangement.
	// Use only when updating an account holder. If you include this field when creating an account holder, the request will fail.
	LegalArrangementCode *string `json:"legalArrangementCode,omitempty"`
	// An array containing information about other entities that are part of the legal arrangement.
	LegalArrangementEntities []LegalArrangementEntityDetail `json:"legalArrangementEntities,omitempty"`
	// Your reference for the legal arrangement. Must be between 3 to 128 characters.
	LegalArrangementReference *string `json:"legalArrangementReference,omitempty"`
	// The form of legal arrangement. Required if `type` is **Trust** or **Partnership**.
	//
	// The possible values depend on the `type`.
	//
	// - For `type` **Trust**:  **CashManagementTrust**, **CorporateUnitTrust**, **DeceasedEstate**, **DiscretionaryInvestmentTrust**, **DiscretionaryServicesManagementTrust**, **DiscretionaryTradingTrust**, **FirstHomeSaverAccountsTrust**, **FixedTrust**, **FixedUnitTrust**, **HybridTrust**, **ListedPublicUnitTrust**, **OtherTrust**, **PooledSuperannuationTrust**, **PublicTradingTrust**, or **UnlistedPublicUnitTrust**.
	//
	// - For `type` **Partnership**: **LimitedPartnership**, **FamilyPartnership**, or **OtherPartnership**
	LegalForm *LegalArrangementDetailLegalFormEnum `json:"legalForm,omitempty"`
	// The legal name of the legal arrangement. Minimum length: 3 characters.
	Name string `json:"name"`
	// The registration number of the legal arrangement.
	RegistrationNumber *string `json:"registrationNumber,omitempty"`
	// The tax identification number of the legal arrangement.
	TaxNumber *string `json:"taxNumber,omitempty"`
	// The [type of legal arrangement](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/legal-arrangements#types-of-legal-arrangements).
	//
	// Possible values:
	//
	// - **Association**
	//
	// - **Partnership**
	//
	// - **SoleProprietorship**
	//
	// - **Trust**
	//
	//
	Type LegalArrangementDetailTypeEnum `json:"type"`
}
