// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigRecommendationOptimizationTypeEnum string

const (
	ConfigRecommendationOptimizationTypeEnumLeastCost          ConfigRecommendationOptimizationTypeEnum = "LeastCost"
	ConfigRecommendationOptimizationTypeEnumLeastChange        ConfigRecommendationOptimizationTypeEnum = "LeastChange"
	ConfigRecommendationOptimizationTypeEnumBestAzRecovery     ConfigRecommendationOptimizationTypeEnum = "BestAZRecovery"
	ConfigRecommendationOptimizationTypeEnumLeastErrors        ConfigRecommendationOptimizationTypeEnum = "LeastErrors"
	ConfigRecommendationOptimizationTypeEnumBestAttainable     ConfigRecommendationOptimizationTypeEnum = "BestAttainable"
	ConfigRecommendationOptimizationTypeEnumBestRegionRecovery ConfigRecommendationOptimizationTypeEnum = "BestRegionRecovery"
)

func (e ConfigRecommendationOptimizationTypeEnum) ToPointer() *ConfigRecommendationOptimizationTypeEnum {
	return &e
}

func (e *ConfigRecommendationOptimizationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LeastCost":
		fallthrough
	case "LeastChange":
		fallthrough
	case "BestAZRecovery":
		fallthrough
	case "LeastErrors":
		fallthrough
	case "BestAttainable":
		fallthrough
	case "BestRegionRecovery":
		*e = ConfigRecommendationOptimizationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigRecommendationOptimizationTypeEnum: %v", v)
	}
}
