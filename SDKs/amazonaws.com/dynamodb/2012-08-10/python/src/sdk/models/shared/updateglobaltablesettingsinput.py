"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoscalingsettingsupdate as shared_autoscalingsettingsupdate
from ..shared import billingmode_enum as shared_billingmode_enum
from ..shared import globaltableglobalsecondaryindexsettingsupdate as shared_globaltableglobalsecondaryindexsettingsupdate
from ..shared import replicasettingsupdate as shared_replicasettingsupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateGlobalTableSettingsInput:
    
    global_table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTableName') }})  
    global_table_billing_mode: Optional[shared_billingmode_enum.BillingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTableBillingMode'), 'exclude': lambda f: f is None }})  
    global_table_global_secondary_index_settings_update: Optional[list[shared_globaltableglobalsecondaryindexsettingsupdate.GlobalTableGlobalSecondaryIndexSettingsUpdate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTableGlobalSecondaryIndexSettingsUpdate'), 'exclude': lambda f: f is None }})  
    global_table_provisioned_write_capacity_auto_scaling_settings_update: Optional[shared_autoscalingsettingsupdate.AutoScalingSettingsUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate'), 'exclude': lambda f: f is None }})  
    global_table_provisioned_write_capacity_units: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTableProvisionedWriteCapacityUnits'), 'exclude': lambda f: f is None }})  
    replica_settings_update: Optional[list[shared_replicasettingsupdate.ReplicaSettingsUpdate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaSettingsUpdate'), 'exclude': lambda f: f is None }})  
    