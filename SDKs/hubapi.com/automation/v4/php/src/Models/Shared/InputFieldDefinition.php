<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InputFieldDefinition - Configuration for an input field on the custom action
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InputFieldDefinition
{
    /**
     * Whether the field is required for the custom action to be valid
     * 
     * @var bool $isRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isRequired;
    
    /**
     * Controls what kind of input a customer can use to specify the field value. Must contain exactly one of `STATIC_VALUE` or `OBJECT_PROPERTY`. If `STATIC_VALUE`, the customer will be able to choose a value when configuring the custom action; if `OBJECT_PROPERTY`, the customer will be able to choose a property from the enrolled workflow object that the field value will be copied from. In the future we may support more than one input control type here.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InputFieldDefinitionSupportedValueTypesEnum> $supportedValueTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('supportedValueTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\InputFieldDefinitionSupportedValueTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $supportedValueTypes = null;
    
    /**
     * The data type expected by an input field.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FieldTypeDefinition $typeDefinition
     */
	#[\JMS\Serializer\Annotation\SerializedName('typeDefinition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FieldTypeDefinition')]
    public FieldTypeDefinition $typeDefinition;
    
	public function __construct()
	{
		$this->isRequired = false;
		$this->supportedValueTypes = null;
		$this->typeDefinition = new \OpenAPI\OpenAPI\Models\Shared\FieldTypeDefinition();
	}
}
