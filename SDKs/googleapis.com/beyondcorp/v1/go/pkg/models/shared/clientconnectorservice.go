// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClientConnectorServiceInput - Message describing ClientConnectorService object.
type ClientConnectorServiceInput struct {
	// Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30 characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start with a letter.
	DisplayName *string `json:"displayName,omitempty"`
	// The details of the egress info. One of the following options should be set.
	Egress *Egress `json:"egress,omitempty"`
	// Settings of how to connect to the ClientGateway. One of the following options should be set.
	Ingress *Ingress `json:"ingress,omitempty"`
	// Required. Name of resource. The name is ignored during creation.
	Name *string `json:"name,omitempty"`
}

// ClientConnectorServiceStateEnum - Output only. The operational state of the ClientConnectorService.
type ClientConnectorServiceStateEnum string

const (
	ClientConnectorServiceStateEnumStateUnspecified ClientConnectorServiceStateEnum = "STATE_UNSPECIFIED"
	ClientConnectorServiceStateEnumCreating         ClientConnectorServiceStateEnum = "CREATING"
	ClientConnectorServiceStateEnumUpdating         ClientConnectorServiceStateEnum = "UPDATING"
	ClientConnectorServiceStateEnumDeleting         ClientConnectorServiceStateEnum = "DELETING"
	ClientConnectorServiceStateEnumRunning          ClientConnectorServiceStateEnum = "RUNNING"
	ClientConnectorServiceStateEnumDown             ClientConnectorServiceStateEnum = "DOWN"
	ClientConnectorServiceStateEnumError            ClientConnectorServiceStateEnum = "ERROR"
)

func (e *ClientConnectorServiceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "DOWN":
		fallthrough
	case "ERROR":
		*e = ClientConnectorServiceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientConnectorServiceStateEnum: %s", s)
	}
}

// ClientConnectorService - Message describing ClientConnectorService object.
type ClientConnectorService struct {
	// Output only. [Output only] Create time stamp.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30 characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start with a letter.
	DisplayName *string `json:"displayName,omitempty"`
	// The details of the egress info. One of the following options should be set.
	Egress *Egress `json:"egress,omitempty"`
	// Settings of how to connect to the ClientGateway. One of the following options should be set.
	Ingress *Ingress `json:"ingress,omitempty"`
	// Required. Name of resource. The name is ignored during creation.
	Name *string `json:"name,omitempty"`
	// Output only. The operational state of the ClientConnectorService.
	State *ClientConnectorServiceStateEnum `json:"state,omitempty"`
	// Output only. [Output only] Update time stamp.
	UpdateTime *string `json:"updateTime,omitempty"`
}
