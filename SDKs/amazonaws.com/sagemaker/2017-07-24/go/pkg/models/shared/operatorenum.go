// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OperatorEnum string

const (
	OperatorEnumEquals               OperatorEnum = "Equals"
	OperatorEnumNotEquals            OperatorEnum = "NotEquals"
	OperatorEnumGreaterThan          OperatorEnum = "GreaterThan"
	OperatorEnumGreaterThanOrEqualTo OperatorEnum = "GreaterThanOrEqualTo"
	OperatorEnumLessThan             OperatorEnum = "LessThan"
	OperatorEnumLessThanOrEqualTo    OperatorEnum = "LessThanOrEqualTo"
	OperatorEnumContains             OperatorEnum = "Contains"
	OperatorEnumExists               OperatorEnum = "Exists"
	OperatorEnumNotExists            OperatorEnum = "NotExists"
	OperatorEnumIn                   OperatorEnum = "In"
)

func (e *OperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Equals":
		fallthrough
	case "NotEquals":
		fallthrough
	case "GreaterThan":
		fallthrough
	case "GreaterThanOrEqualTo":
		fallthrough
	case "LessThan":
		fallthrough
	case "LessThanOrEqualTo":
		fallthrough
	case "Contains":
		fallthrough
	case "Exists":
		fallthrough
	case "NotExists":
		fallthrough
	case "In":
		*e = OperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OperatorEnum: %s", s)
	}
}
