/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LogEntry - An individual log entry.
 */
public class LogEntry {
    /**
     * A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpRequest")
    public HttpRequest httpRequest;

    public LogEntry withHttpRequest(HttpRequest httpRequest) {
        this.httpRequest = httpRequest;
        return this;
    }
    
    /**
     * A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insertId")
    public String insertId;

    public LogEntry withInsertId(String insertId) {
        this.insertId = insertId;
        return this;
    }
    
    /**
     * A set of user-defined (key, value) data that provides additional information about the log entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public LogEntry withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Required. The log to which this log entry belongs. Examples: `"syslog"`, `"book_log"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public LogEntry withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Additional information about a potentially long-running operation with which a log entry is associated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operation")
    public LogEntryOperation operation;

    public LogEntry withOperation(LogEntryOperation operation) {
        this.operation = operation;
        return this;
    }
    
    /**
     * The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protoPayload")
    public java.util.Map<String, Object> protoPayload;

    public LogEntry withProtoPayload(java.util.Map<String, Object> protoPayload) {
        this.protoPayload = protoPayload;
        return this;
    }
    
    /**
     * The severity of the log entry. The default value is `LogSeverity.DEFAULT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public LogEntrySeverityEnum severity;

    public LogEntry withSeverity(LogEntrySeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * Additional information about the source code location that produced the log entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceLocation")
    public LogEntrySourceLocation sourceLocation;

    public LogEntry withSourceLocation(LogEntrySourceLocation sourceLocation) {
        this.sourceLocation = sourceLocation;
        return this;
    }
    
    /**
     * The log entry payload, represented as a structure that is expressed as a JSON object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structPayload")
    public java.util.Map<String, Object> structPayload;

    public LogEntry withStructPayload(java.util.Map<String, Object> structPayload) {
        this.structPayload = structPayload;
        return this;
    }
    
    /**
     * The log entry payload, represented as a Unicode string (UTF-8).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textPayload")
    public String textPayload;

    public LogEntry withTextPayload(String textPayload) {
        this.textPayload = textPayload;
        return this;
    }
    
    /**
     * The time the event described by the log entry occurred. If omitted, defaults to operation start time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public LogEntry withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `//tracing.googleapis.com`. Example: `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trace")
    public String trace;

    public LogEntry withTrace(String trace) {
        this.trace = trace;
        return this;
    }
    
    public LogEntry(){}
}
