/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkGroupConfiguration - The configuration of the workgroup, which includes the location in Amazon S3 where query and calculation results are stored, the encryption option, if any, used for query and calculation results, whether the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup settings override query settings, and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in &lt;code&gt;EnforceWorkGroupConfiguration&lt;/code&gt; (true/false) in the &lt;code&gt;WorkGroupConfiguration&lt;/code&gt;. See &lt;a&gt;WorkGroupConfiguration$EnforceWorkGroupConfiguration&lt;/a&gt;. 
 */
public class WorkGroupConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalConfiguration")
    public String additionalConfiguration;
    public WorkGroupConfiguration withAdditionalConfiguration(String additionalConfiguration) {
        this.additionalConfiguration = additionalConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BytesScannedCutoffPerQuery")
    public Long bytesScannedCutoffPerQuery;
    public WorkGroupConfiguration withBytesScannedCutoffPerQuery(Long bytesScannedCutoffPerQuery) {
        this.bytesScannedCutoffPerQuery = bytesScannedCutoffPerQuery;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerContentEncryptionConfiguration")
    public CustomerContentEncryptionConfiguration customerContentEncryptionConfiguration;
    public WorkGroupConfiguration withCustomerContentEncryptionConfiguration(CustomerContentEncryptionConfiguration customerContentEncryptionConfiguration) {
        this.customerContentEncryptionConfiguration = customerContentEncryptionConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableMinimumEncryptionConfiguration")
    public Boolean enableMinimumEncryptionConfiguration;
    public WorkGroupConfiguration withEnableMinimumEncryptionConfiguration(Boolean enableMinimumEncryptionConfiguration) {
        this.enableMinimumEncryptionConfiguration = enableMinimumEncryptionConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnforceWorkGroupConfiguration")
    public Boolean enforceWorkGroupConfiguration;
    public WorkGroupConfiguration withEnforceWorkGroupConfiguration(Boolean enforceWorkGroupConfiguration) {
        this.enforceWorkGroupConfiguration = enforceWorkGroupConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EngineVersion")
    public EngineVersion engineVersion;
    public WorkGroupConfiguration withEngineVersion(EngineVersion engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionRole")
    public String executionRole;
    public WorkGroupConfiguration withExecutionRole(String executionRole) {
        this.executionRole = executionRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PublishCloudWatchMetricsEnabled")
    public Boolean publishCloudWatchMetricsEnabled;
    public WorkGroupConfiguration withPublishCloudWatchMetricsEnabled(Boolean publishCloudWatchMetricsEnabled) {
        this.publishCloudWatchMetricsEnabled = publishCloudWatchMetricsEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequesterPaysEnabled")
    public Boolean requesterPaysEnabled;
    public WorkGroupConfiguration withRequesterPaysEnabled(Boolean requesterPaysEnabled) {
        this.requesterPaysEnabled = requesterPaysEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResultConfiguration")
    public ResultConfiguration resultConfiguration;
    public WorkGroupConfiguration withResultConfiguration(ResultConfiguration resultConfiguration) {
        this.resultConfiguration = resultConfiguration;
        return this;
    }
    
}
