// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteCacheParameterGroupActionEnum
type GETDeleteCacheParameterGroupActionEnum string

const (
	GETDeleteCacheParameterGroupActionEnumDeleteCacheParameterGroup GETDeleteCacheParameterGroupActionEnum = "DeleteCacheParameterGroup"
)

func (e *GETDeleteCacheParameterGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteCacheParameterGroup":
		*e = GETDeleteCacheParameterGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteCacheParameterGroupActionEnum: %s", s)
	}
}

// GETDeleteCacheParameterGroupVersionEnum
type GETDeleteCacheParameterGroupVersionEnum string

const (
	GETDeleteCacheParameterGroupVersionEnumTwoThousandAndFifteen0202 GETDeleteCacheParameterGroupVersionEnum = "2015-02-02"
)

func (e *GETDeleteCacheParameterGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETDeleteCacheParameterGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteCacheParameterGroupVersionEnum: %s", s)
	}
}

type GETDeleteCacheParameterGroupQueryParams struct {
	Action GETDeleteCacheParameterGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the cache parameter group to delete.</p> <note> <p>The specified cache security group must not be associated with any clusters.</p> </note>
	CacheParameterGroupName string                                  `queryParam:"style=form,explode=true,name=CacheParameterGroupName"`
	Version                 GETDeleteCacheParameterGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteCacheParameterGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteCacheParameterGroupRequest struct {
	QueryParams GETDeleteCacheParameterGroupQueryParams
	Headers     GETDeleteCacheParameterGroupHeaders
}

type GETDeleteCacheParameterGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
