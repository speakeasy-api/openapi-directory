/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ActionsListJobsForWorkflowRunAttemptRequest extends SpeakeasyBase {
  /**
   * The attempt number of the workflow run.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=attempt_number",
  })
  attemptNumber: number;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results per page (max 100).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;

  /**
   * The unique identifier of the workflow run.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=run_id",
  })
  runId: number;
}

/**
 * Response
 */
export class ActionsListJobsForWorkflowRunAttempt200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Job })
  @Expose({ name: "jobs" })
  @Type(() => shared.Job)
  jobs: shared.Job[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class ActionsListJobsForWorkflowRunAttemptResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  actionsListJobsForWorkflowRunAttempt200ApplicationJSONObject?: ActionsListJobsForWorkflowRunAttempt200ApplicationJSON;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;
}
