<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateEndpointGroupResponse
{
    /**
     * AcceleratorNotFoundException
     * 
     * @var mixed $acceleratorNotFoundException
     */
	
    public mixed $acceleratorNotFoundException = null;
    
    /**
     * AccessDeniedException
     * 
     * @var mixed $accessDeniedException
     */
	
    public mixed $accessDeniedException = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateEndpointGroupResponse $createEndpointGroupResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\CreateEndpointGroupResponse $createEndpointGroupResponse = null;
    
    /**
     * EndpointGroupAlreadyExistsException
     * 
     * @var mixed $endpointGroupAlreadyExistsException
     */
	
    public mixed $endpointGroupAlreadyExistsException = null;
    
    /**
     * InternalServiceErrorException
     * 
     * @var mixed $internalServiceErrorException
     */
	
    public mixed $internalServiceErrorException = null;
    
    /**
     * InvalidArgumentException
     * 
     * @var mixed $invalidArgumentException
     */
	
    public mixed $invalidArgumentException = null;
    
    /**
     * LimitExceededException
     * 
     * @var mixed $limitExceededException
     */
	
    public mixed $limitExceededException = null;
    
    /**
     * ListenerNotFoundException
     * 
     * @var mixed $listenerNotFoundException
     */
	
    public mixed $listenerNotFoundException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
	public function __construct()
	{
		$this->acceleratorNotFoundException = null;
		$this->accessDeniedException = null;
		$this->contentType = "";
		$this->createEndpointGroupResponse = null;
		$this->endpointGroupAlreadyExistsException = null;
		$this->internalServiceErrorException = null;
		$this->invalidArgumentException = null;
		$this->limitExceededException = null;
		$this->listenerNotFoundException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
	}
}
