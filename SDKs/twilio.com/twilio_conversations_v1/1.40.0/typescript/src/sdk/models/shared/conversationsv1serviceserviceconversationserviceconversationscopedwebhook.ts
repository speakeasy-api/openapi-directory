/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class ConversationsV1ServiceServiceConversationServiceConversationScopedWebhook extends SpeakeasyBase {
  /**
   * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chat_service_sid" })
  chatServiceSid?: string;

  /**
   * The configuration of this webhook. Is defined based on target.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  configuration?: any;

  /**
   * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conversation_sid" })
  conversationSid?: string;

  /**
   * The date that this resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date that this resource was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * A 34 character string that uniquely identifies this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The target of this webhook: `webhook`, `studio`, `trigger`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target" })
  target?: string;

  /**
   * An absolute API resource URL for this webhook.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
