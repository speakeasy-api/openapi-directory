"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datavalue as shared_datavalue
from ..shared import propertydefinitionrequest as shared_propertydefinitionrequest
from ..shared import propertyupdatetype_enum as shared_propertyupdatetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PropertyRequest:
    r"""An object that sets information about a property."""
    
    definition: Optional[shared_propertydefinitionrequest.PropertyDefinitionRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('definition'), 'exclude': lambda f: f is None }})  
    update_type: Optional[shared_propertyupdatetype_enum.PropertyUpdateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateType'), 'exclude': lambda f: f is None }})  
    value: Optional[shared_datavalue.DataValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    