// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum - An error code related to why an IPAM pool CIDR failed to be provisioned.
type DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum string

const (
	DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnumCidrNotAvailable DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum = "cidr-not-available"
	DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnumLimitExceeded    DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum = "limit-exceeded"
)

func (e *DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cidr-not-available":
		fallthrough
	case "limit-exceeded":
		*e = DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum: %s", s)
	}
}

// DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReason - Details related to why an IPAM pool CIDR failed to be provisioned.
type DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReason struct {
	Code    *DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReasonCodeEnum
	Message *string
}

// DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum - The state of the CIDR.
type DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum string

const (
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumPendingProvision   DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "pending-provision"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumProvisioned        DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "provisioned"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumFailedProvision    DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "failed-provision"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumPendingDeprovision DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "pending-deprovision"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumDeprovisioned      DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "deprovisioned"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumFailedDeprovision  DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "failed-deprovision"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumPendingImport      DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "pending-import"
	DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnumFailedImport       DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum = "failed-import"
)

func (e *DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending-provision":
		fallthrough
	case "provisioned":
		fallthrough
	case "failed-provision":
		fallthrough
	case "pending-deprovision":
		fallthrough
	case "deprovisioned":
		fallthrough
	case "failed-deprovision":
		fallthrough
	case "pending-import":
		fallthrough
	case "failed-import":
		*e = DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum: %s", s)
	}
}

// DeprovisionIpamPoolCidrResultIpamPoolCidr - The deprovisioned pool CIDR.
type DeprovisionIpamPoolCidrResultIpamPoolCidr struct {
	Cidr           *string
	FailureReason  *DeprovisionIpamPoolCidrResultIpamPoolCidrFailureReason
	IpamPoolCidrID *string
	NetmaskLength  *int64
	State          *DeprovisionIpamPoolCidrResultIpamPoolCidrStateEnum
}

// DeprovisionIpamPoolCidrResult - Success
type DeprovisionIpamPoolCidrResult struct {
	IpamPoolCidr *DeprovisionIpamPoolCidrResultIpamPoolCidr
}
