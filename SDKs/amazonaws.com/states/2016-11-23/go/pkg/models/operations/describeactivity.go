// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeActivityXAmzTargetEnum
type DescribeActivityXAmzTargetEnum string

const (
	DescribeActivityXAmzTargetEnumAwsStepFunctionsDescribeActivity DescribeActivityXAmzTargetEnum = "AWSStepFunctions.DescribeActivity"
)

func (e DescribeActivityXAmzTargetEnum) ToPointer() *DescribeActivityXAmzTargetEnum {
	return &e
}

func (e *DescribeActivityXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSStepFunctions.DescribeActivity":
		*e = DescribeActivityXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeActivityXAmzTargetEnum: %v", v)
	}
}

type DescribeActivityRequest struct {
	DescribeActivityInput shared.DescribeActivityInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DescribeActivityXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeActivityResponse struct {
	// ActivityDoesNotExist
	ActivityDoesNotExist interface{}
	ContentType          string
	// Success
	DescribeActivityOutput *shared.DescribeActivityOutput
	// InvalidArn
	InvalidArn  interface{}
	StatusCode  int
	RawResponse *http.Response
}
