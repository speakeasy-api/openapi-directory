// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PutFileSystemPolicyRequestBody struct {
	// (Optional) A boolean that specifies whether or not to bypass the <code>FileSystemPolicy</code> lockout safety check. The lockout safety check determines whether the policy in the request will lock out, or prevent, the IAM principal that is making the request from making future <code>PutFileSystemPolicy</code> requests on this file system. Set <code>BypassPolicyLockoutSafetyCheck</code> to <code>True</code> only when you intend to prevent the IAM principal that is making the request from making subsequent <code>PutFileSystemPolicy</code> requests on this file system. The default value is <code>False</code>.
	BypassPolicyLockoutSafetyCheck *bool `json:"BypassPolicyLockoutSafetyCheck,omitempty"`
	// The <code>FileSystemPolicy</code> that you're creating. Accepts a JSON formatted policy definition. EFS file system policies have a 20,000 character limit. To find out more about the elements that make up a file system policy, see <a href="https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies">EFS Resource-based Policies</a>.
	Policy string `json:"Policy"`
}

type PutFileSystemPolicyRequest struct {
	// The ID of the EFS file system that you want to create or update the <code>FileSystemPolicy</code> for.
	FileSystemID      string                         `pathParam:"style=simple,explode=false,name=FileSystemId"`
	RequestBody       PutFileSystemPolicyRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutFileSystemPolicyResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// Success
	FileSystemPolicyDescription *shared.FileSystemPolicyDescription
	// IncorrectFileSystemLifeCycleState
	IncorrectFileSystemLifeCycleState interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidPolicyException
	InvalidPolicyException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
