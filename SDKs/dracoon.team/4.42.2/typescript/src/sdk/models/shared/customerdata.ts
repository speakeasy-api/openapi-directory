/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Customer information
 */
export class CustomerData extends SpeakeasyBase {
  /**
   * User accounts limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountsLimit" })
  accountsLimit: number;

  /**
   * User accounts used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountsUsed" })
  accountsUsed: number;

  /**
   * Number of guest user accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cntGuestUser" })
  cntGuestUser: number;

  /**
   * Number of internal user accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cntInternalUser" })
  cntInternalUser: number;

  /**
   * Clientside encryption for customer enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerEncryptionEnabled" })
  customerEncryptionEnabled: boolean;

  /**
   * Unique identifier for the customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Customer is Provider Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isProviderCustomer" })
  isProviderCustomer: boolean;

  /**
   * Customer name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Space limit (in bytes). -1 for unlimited
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spaceLimit" })
  spaceLimit: number;

  /**
   * Space used (in bytes)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spaceUsed" })
  spaceUsed: number;
}
