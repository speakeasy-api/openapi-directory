// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum - The tunnel protocol.
type DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum string

const (
	DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnumGre DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum = "gre"
)

func (e *DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "gre":
		*e = DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum: %s", s)
	}
}

// DeleteTransitGatewayConnectResultTransitGatewayConnectOptions - The Connect attachment options.
type DeleteTransitGatewayConnectResultTransitGatewayConnectOptions struct {
	Protocol *DeleteTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum
}

// DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum - The state of the attachment.
type DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum string

const (
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumInitiating        DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "initiating"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumInitiatingRequest DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "initiatingRequest"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumPendingAcceptance DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "pendingAcceptance"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumRollingBack       DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "rollingBack"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumPending           DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "pending"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumAvailable         DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "available"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumModifying         DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "modifying"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumDeleting          DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "deleting"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumDeleted           DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "deleted"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumFailed            DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "failed"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumRejected          DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "rejected"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumRejecting         DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "rejecting"
	DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnumFailing           DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum = "failing"
)

func (e *DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initiating":
		fallthrough
	case "initiatingRequest":
		fallthrough
	case "pendingAcceptance":
		fallthrough
	case "rollingBack":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "rejecting":
		fallthrough
	case "failing":
		*e = DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum: %s", s)
	}
}

// DeleteTransitGatewayConnectResultTransitGatewayConnectTags - Describes a tag.
type DeleteTransitGatewayConnectResultTransitGatewayConnectTags struct {
	Key   *string
	Value *string
}

// DeleteTransitGatewayConnectResultTransitGatewayConnect - Information about the deleted Connect attachment.
type DeleteTransitGatewayConnectResultTransitGatewayConnect struct {
	CreationTime                        *time.Time
	Options                             *DeleteTransitGatewayConnectResultTransitGatewayConnectOptions
	State                               *DeleteTransitGatewayConnectResultTransitGatewayConnectStateEnum
	Tags                                []DeleteTransitGatewayConnectResultTransitGatewayConnectTags
	TransitGatewayAttachmentID          *string
	TransitGatewayID                    *string
	TransportTransitGatewayAttachmentID *string
}

// DeleteTransitGatewayConnectResult - Success
type DeleteTransitGatewayConnectResult struct {
	TransitGatewayConnect *DeleteTransitGatewayConnectResultTransitGatewayConnect
}
