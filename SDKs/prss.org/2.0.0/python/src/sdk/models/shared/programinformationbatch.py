"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProgramInformationBatchFormatEnum(str, Enum):
    r"""The format of the metadata file defining the create or update actions to be performed on one or more EPG programs."""
    RADIODNS = 'radiodns'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProgramInformationBatchProgram:
    r"""The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly. If this is specified, it will overrite the value specfified in the metadata file. If this is specified, the metadata file should only contain one program."""
    
    air_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('airDate') }})
    r"""The airDate for the program in ISO 8601 format."""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""The title of the program."""  
    
class ProgramInformationBatchStatusEnum(str, Enum):
    r"""The current processing status."""
    QUEUED = 'queued'
    PROCESSING = 'processing'
    FAILED = 'failed'
    SUCCESSFUL = 'successful'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProgramInformationBatch:
    r"""An electronic program guide (EPG) batch operation to create or update metadata on one or more guide programs."""
    
    created_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdDate') }})
    r"""The date and time the batch was created."""  
    format: ProgramInformationBatchFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format') }})
    r"""The format of the metadata file defining the create or update actions to be performed on one or more EPG programs."""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The ID of the batch."""  
    status: ProgramInformationBatchStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The current processing status."""  
    finished_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finishedDate'), 'exclude': lambda f: f is None }})
    r"""The date and time the batch finished (either successful or failed)."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The human readable success or failure message."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The optional name of the batch for human reference."""  
    program: Optional[ProgramInformationBatchProgram] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('program'), 'exclude': lambda f: f is None }})
    r"""The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly. If this is specified, it will overrite the value specfified in the metadata file. If this is specified, the metadata file should only contain one program."""  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""The URI to the metadata file defining the batch creates/updates."""  
    