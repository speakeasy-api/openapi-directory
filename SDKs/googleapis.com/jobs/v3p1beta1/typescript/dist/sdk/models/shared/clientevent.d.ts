import { SpeakeasyBase } from "../../../internal/utils";
import { JobEvent } from "./jobevent";
/**
 * An event issued when an end user interacts with the application that implements Cloud Talent Solution. Providing this information improves the quality of search and recommendation for the API clients, enabling the service to perform optimally. The number of events sent must be consistent with other calls, such as job searches, issued to the service by the client.
 */
export declare class ClientEvent extends SpeakeasyBase {
    /**
     * Required. The timestamp of the event.
     */
    createTime?: string;
    /**
     * Required. A unique identifier, generated by the client application. This `event_id` is used to establish the relationship between different events (see parent_event_id).
     */
    eventId?: string;
    /**
     * Optional. Extra information about this event. Used for storing information with no matching field in event payload, for example, user application specific context or details. At most 20 keys are supported. The maximum total size of all keys and values is 2 KB.
     */
    extraInfo?: Record<string, string>;
    /**
     * An event issued when a job seeker interacts with the application that implements Cloud Talent Solution.
     */
    jobEvent?: JobEvent;
    /**
     * Optional. The event_id of an event that resulted in the current event. For example, a Job view event usually follows a parent impression event: A job seeker first does a search where a list of jobs appears (impression). The job seeker then selects a result and views the description of a particular job (Job view).
     */
    parentEventId?: string;
    /**
     * Required. A unique ID generated in the API responses. It can be found in ResponseMetadata.request_id.
     */
    requestId?: string;
}
