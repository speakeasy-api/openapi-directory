"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createfunctiondefinitionversionresponse as shared_createfunctiondefinitionversionresponse
from ..shared import function as shared_function
from ..shared import functiondefaultexecutionconfig as shared_functiondefaultexecutionconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateFunctionDefinitionVersionRequestBodyDefaultConfig:
    r"""The default configuration that applies to all Lambda functions in the group. Individual Lambda functions can override these settings."""
    
    execution: Optional[shared_functiondefaultexecutionconfig.FunctionDefaultExecutionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Execution'), 'exclude': lambda f: f is None }})
    r"""Configuration information that specifies how a Lambda function runs."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateFunctionDefinitionVersionRequestBody:
    
    default_config: Optional[CreateFunctionDefinitionVersionRequestBodyDefaultConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultConfig'), 'exclude': lambda f: f is None }})
    r"""The default configuration that applies to all Lambda functions in the group. Individual Lambda functions can override these settings."""  
    functions: Optional[list[shared_function.Function]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Functions'), 'exclude': lambda f: f is None }})
    r"""A list of Lambda functions in this function definition version."""  
    

@dataclasses.dataclass
class CreateFunctionDefinitionVersionRequest:
    
    function_definition_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'FunctionDefinitionId', 'style': 'simple', 'explode': False }})
    r"""The ID of the Lambda function definition."""  
    request_body: CreateFunctionDefinitionVersionRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    x_amzn_client_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amzn-Client-Token', 'style': 'simple', 'explode': False }})
    r"""A client token used to correlate requests and responses."""  
    

@dataclasses.dataclass
class CreateFunctionDefinitionVersionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bad_request_exception: Optional[Any] = dataclasses.field(default=None)
    r"""BadRequestException"""  
    create_function_definition_version_response: Optional[shared_createfunctiondefinitionversionresponse.CreateFunctionDefinitionVersionResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    