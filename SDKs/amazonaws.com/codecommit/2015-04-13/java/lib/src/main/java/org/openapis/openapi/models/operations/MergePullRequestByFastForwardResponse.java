/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class MergePullRequestByFastForwardResponse {
    /**
     * ConcurrentReferenceUpdateException
     */
    
    public Object concurrentReferenceUpdateException;

    public MergePullRequestByFastForwardResponse withConcurrentReferenceUpdateException(Object concurrentReferenceUpdateException) {
        this.concurrentReferenceUpdateException = concurrentReferenceUpdateException;
        return this;
    }
    
    
    public String contentType;

    public MergePullRequestByFastForwardResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * EncryptionIntegrityChecksFailedException
     */
    
    public Object encryptionIntegrityChecksFailedException;

    public MergePullRequestByFastForwardResponse withEncryptionIntegrityChecksFailedException(Object encryptionIntegrityChecksFailedException) {
        this.encryptionIntegrityChecksFailedException = encryptionIntegrityChecksFailedException;
        return this;
    }
    
    /**
     * EncryptionKeyAccessDeniedException
     */
    
    public Object encryptionKeyAccessDeniedException;

    public MergePullRequestByFastForwardResponse withEncryptionKeyAccessDeniedException(Object encryptionKeyAccessDeniedException) {
        this.encryptionKeyAccessDeniedException = encryptionKeyAccessDeniedException;
        return this;
    }
    
    /**
     * EncryptionKeyDisabledException
     */
    
    public Object encryptionKeyDisabledException;

    public MergePullRequestByFastForwardResponse withEncryptionKeyDisabledException(Object encryptionKeyDisabledException) {
        this.encryptionKeyDisabledException = encryptionKeyDisabledException;
        return this;
    }
    
    /**
     * EncryptionKeyNotFoundException
     */
    
    public Object encryptionKeyNotFoundException;

    public MergePullRequestByFastForwardResponse withEncryptionKeyNotFoundException(Object encryptionKeyNotFoundException) {
        this.encryptionKeyNotFoundException = encryptionKeyNotFoundException;
        return this;
    }
    
    /**
     * EncryptionKeyUnavailableException
     */
    
    public Object encryptionKeyUnavailableException;

    public MergePullRequestByFastForwardResponse withEncryptionKeyUnavailableException(Object encryptionKeyUnavailableException) {
        this.encryptionKeyUnavailableException = encryptionKeyUnavailableException;
        return this;
    }
    
    /**
     * InvalidCommitIdException
     */
    
    public Object invalidCommitIdException;

    public MergePullRequestByFastForwardResponse withInvalidCommitIdException(Object invalidCommitIdException) {
        this.invalidCommitIdException = invalidCommitIdException;
        return this;
    }
    
    /**
     * InvalidPullRequestIdException
     */
    
    public Object invalidPullRequestIdException;

    public MergePullRequestByFastForwardResponse withInvalidPullRequestIdException(Object invalidPullRequestIdException) {
        this.invalidPullRequestIdException = invalidPullRequestIdException;
        return this;
    }
    
    /**
     * InvalidRepositoryNameException
     */
    
    public Object invalidRepositoryNameException;

    public MergePullRequestByFastForwardResponse withInvalidRepositoryNameException(Object invalidRepositoryNameException) {
        this.invalidRepositoryNameException = invalidRepositoryNameException;
        return this;
    }
    
    /**
     * ManualMergeRequiredException
     */
    
    public Object manualMergeRequiredException;

    public MergePullRequestByFastForwardResponse withManualMergeRequiredException(Object manualMergeRequiredException) {
        this.manualMergeRequiredException = manualMergeRequiredException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.MergePullRequestByFastForwardOutput mergePullRequestByFastForwardOutput;

    public MergePullRequestByFastForwardResponse withMergePullRequestByFastForwardOutput(org.openapis.openapi.models.shared.MergePullRequestByFastForwardOutput mergePullRequestByFastForwardOutput) {
        this.mergePullRequestByFastForwardOutput = mergePullRequestByFastForwardOutput;
        return this;
    }
    
    /**
     * PullRequestAlreadyClosedException
     */
    
    public Object pullRequestAlreadyClosedException;

    public MergePullRequestByFastForwardResponse withPullRequestAlreadyClosedException(Object pullRequestAlreadyClosedException) {
        this.pullRequestAlreadyClosedException = pullRequestAlreadyClosedException;
        return this;
    }
    
    /**
     * PullRequestApprovalRulesNotSatisfiedException
     */
    
    public Object pullRequestApprovalRulesNotSatisfiedException;

    public MergePullRequestByFastForwardResponse withPullRequestApprovalRulesNotSatisfiedException(Object pullRequestApprovalRulesNotSatisfiedException) {
        this.pullRequestApprovalRulesNotSatisfiedException = pullRequestApprovalRulesNotSatisfiedException;
        return this;
    }
    
    /**
     * PullRequestDoesNotExistException
     */
    
    public Object pullRequestDoesNotExistException;

    public MergePullRequestByFastForwardResponse withPullRequestDoesNotExistException(Object pullRequestDoesNotExistException) {
        this.pullRequestDoesNotExistException = pullRequestDoesNotExistException;
        return this;
    }
    
    /**
     * PullRequestIdRequiredException
     */
    
    public Object pullRequestIdRequiredException;

    public MergePullRequestByFastForwardResponse withPullRequestIdRequiredException(Object pullRequestIdRequiredException) {
        this.pullRequestIdRequiredException = pullRequestIdRequiredException;
        return this;
    }
    
    
    public Integer statusCode;

    public MergePullRequestByFastForwardResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public MergePullRequestByFastForwardResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ReferenceDoesNotExistException
     */
    
    public Object referenceDoesNotExistException;

    public MergePullRequestByFastForwardResponse withReferenceDoesNotExistException(Object referenceDoesNotExistException) {
        this.referenceDoesNotExistException = referenceDoesNotExistException;
        return this;
    }
    
    /**
     * RepositoryDoesNotExistException
     */
    
    public Object repositoryDoesNotExistException;

    public MergePullRequestByFastForwardResponse withRepositoryDoesNotExistException(Object repositoryDoesNotExistException) {
        this.repositoryDoesNotExistException = repositoryDoesNotExistException;
        return this;
    }
    
    /**
     * RepositoryNameRequiredException
     */
    
    public Object repositoryNameRequiredException;

    public MergePullRequestByFastForwardResponse withRepositoryNameRequiredException(Object repositoryNameRequiredException) {
        this.repositoryNameRequiredException = repositoryNameRequiredException;
        return this;
    }
    
    /**
     * RepositoryNotAssociatedWithPullRequestException
     */
    
    public Object repositoryNotAssociatedWithPullRequestException;

    public MergePullRequestByFastForwardResponse withRepositoryNotAssociatedWithPullRequestException(Object repositoryNotAssociatedWithPullRequestException) {
        this.repositoryNotAssociatedWithPullRequestException = repositoryNotAssociatedWithPullRequestException;
        return this;
    }
    
    /**
     * TipOfSourceReferenceIsDifferentException
     */
    
    public Object tipOfSourceReferenceIsDifferentException;

    public MergePullRequestByFastForwardResponse withTipOfSourceReferenceIsDifferentException(Object tipOfSourceReferenceIsDifferentException) {
        this.tipOfSourceReferenceIsDifferentException = tipOfSourceReferenceIsDifferentException;
        return this;
    }
    
    public MergePullRequestByFastForwardResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
