/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OoxmlDocument } from "./ooxmldocument";
import { StoryCollaborator } from "./storycollaborator";
import { StoryOutlineHistory } from "./storyoutlinehistory";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Base model for all types
 */
export class Story extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: StoryCollaborator })
  @Expose({ name: "collaborators" })
  @Type(() => StoryCollaborator)
  collaborators?: StoryCollaborator[];

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_public" })
  isPublic?: boolean;

  @SpeakeasyMetadata({ elemType: OoxmlDocument })
  @Expose({ name: "ooxml_documents" })
  @Type(() => OoxmlDocument)
  ooxmlDocuments?: OoxmlDocument[];

  @SpeakeasyMetadata()
  @Expose({ name: "outline" })
  outline?: string;

  @SpeakeasyMetadata({ elemType: StoryOutlineHistory })
  @Expose({ name: "outline_history" })
  @Type(() => StoryOutlineHistory)
  outlineHistory?: StoryOutlineHistory[];

  @SpeakeasyMetadata()
  @Expose({ name: "revision" })
  revision?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
