// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TaskAddParameter - An Azure Batch task to add.
type TaskAddParameter struct {
	// A locality hint that can be used by the Batch service to select a compute node on which to start a task.
	AffinityInfo *AffinityInformation `json:"affinityInfo,omitempty"`
	// The command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordination command line.
	CommandLine string `json:"commandLine"`
	// Constraints to apply to the Job Manager task.
	Constraints *TaskConstraints `json:"constraints,omitempty"`
	// Specifies any dependencies of a task. Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled.
	DependsOn *TaskDependencies `json:"dependsOn,omitempty"`
	// A display name for the task.
	DisplayName *string `json:"displayName,omitempty"`
	// A list of environment variable settings for the task.
	EnvironmentSettings []EnvironmentSetting `json:"environmentSettings,omitempty"`
	// A string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
	ID string `json:"id"`
	// Settings which specify how to run a multi-instance task. Multi-instance tasks are commonly used to support MPI tasks.
	MultiInstanceSettings *MultiInstanceSettings `json:"multiInstanceSettings,omitempty"`
	// A list of files that the Batch service will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
	ResourceFiles []ResourceFile `json:"resourceFiles,omitempty"`
	// Whether to run the task in elevated mode.
	RunElevated *bool `json:"runElevated,omitempty"`
}
