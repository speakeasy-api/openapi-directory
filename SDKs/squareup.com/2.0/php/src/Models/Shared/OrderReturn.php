<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OrderReturn - The set of line items, service charges, taxes, discounts, tips, and other items being returned in an order.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OrderReturn
{
    /**
     * A collection of various money amounts.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderMoneyAmounts $returnAmounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_amounts')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderMoneyAmounts')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderMoneyAmounts $returnAmounts = null;
    
    /**
     * A collection of references to discounts being returned for an order, including the total
     * 
     * applied discount amount to be returned. The discounts must reference a top-level discount ID
     * from the source order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderReturnDiscount> $returnDiscounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_discounts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderReturnDiscount>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnDiscounts = null;
    
    /**
     * A collection of line items that are being returned.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderReturnLineItem> $returnLineItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_line_items')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderReturnLineItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnLineItems = null;
    
    /**
     * A collection of service charges that are being returned.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderReturnServiceCharge> $returnServiceCharges
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_service_charges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderReturnServiceCharge>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnServiceCharges = null;
    
    /**
     * A collection of references to taxes being returned for an order, including the total
     * 
     * applied tax amount to be returned. The taxes must reference a top-level tax ID from the source
     * order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderReturnTax> $returnTaxes
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_taxes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderReturnTax>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnTaxes = null;
    
    /**
     * A rounding adjustment of the money being returned. Commonly used to apply cash rounding
     * 
     * when the minimum unit of the account is smaller than the lowest physical denomination of the currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderRoundingAdjustment $roundingAdjustment
     */
	#[\JMS\Serializer\Annotation\SerializedName('rounding_adjustment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderRoundingAdjustment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderRoundingAdjustment $roundingAdjustment = null;
    
    /**
     * An order that contains the original sale of these return line items. This is unset
     * 
     * for unlinked returns.
     * 
     * @var ?string $sourceOrderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_order_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceOrderId = null;
    
    /**
     * A unique ID that identifies the return only within this order.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->returnAmounts = null;
		$this->returnDiscounts = null;
		$this->returnLineItems = null;
		$this->returnServiceCharges = null;
		$this->returnTaxes = null;
		$this->roundingAdjustment = null;
		$this->sourceOrderId = null;
		$this->uid = null;
	}
}
