/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Can be used multiple times.
 */
export enum GetFirewallsSortEnum {
  Id = "id",
  IdAsc = "id:asc",
  IdDesc = "id:desc",
  Name = "name",
  NameAsc = "name:asc",
  NameDesc = "name:desc",
  Created = "created",
  CreatedAsc = "created:asc",
  CreatedDesc = "created:desc",
}

export class GetFirewallsRequest extends SpeakeasyBase {
  /**
   * Can be used to filter resources by labels. The response will only contain resources matching the label selector.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=label_selector",
  })
  labelSelector?: string;

  /**
   * Can be used to filter resources by their name. The response will only contain the resources matching the specified name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Can be used multiple times.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetFirewallsSortEnum;
}

export class GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResourcesServer extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

/**
 * Type of resource referenced
 */
export enum GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResourcesTypeEnum {
  Server = "server",
}

export class GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResources extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  @Type(
    () => GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResourcesServer
  )
  server?: GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResourcesServer;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResourcesTypeEnum;
}

export class GetFirewallsFirewallsResponseFirewallAppliedToLabelSelector extends SpeakeasyBase {
  /**
   * Label selector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selector" })
  selector: string;
}

export class GetFirewallsFirewallsResponseFirewallAppliedToServer extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

/**
 * Type of resource referenced
 */
export enum GetFirewallsFirewallsResponseFirewallAppliedToTypeEnum {
  Server = "server",
  LabelSelector = "label_selector",
}

export class GetFirewallsFirewallsResponseFirewallAppliedTo extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResources,
  })
  @Expose({ name: "applied_to_resources" })
  @Type(() => GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResources)
  appliedToResources?: GetFirewallsFirewallsResponseFirewallAppliedToAppliedToResources[];

  @SpeakeasyMetadata()
  @Expose({ name: "label_selector" })
  @Type(() => GetFirewallsFirewallsResponseFirewallAppliedToLabelSelector)
  labelSelector?: GetFirewallsFirewallsResponseFirewallAppliedToLabelSelector;

  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  @Type(() => GetFirewallsFirewallsResponseFirewallAppliedToServer)
  server?: GetFirewallsFirewallsResponseFirewallAppliedToServer;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetFirewallsFirewallsResponseFirewallAppliedToTypeEnum;
}

/**
 * Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.
 */
export enum GetFirewallsFirewallsResponseFirewallRuleDirectionEnum {
  In = "in",
  Out = "out",
}

/**
 * Type of traffic to allow
 */
export enum GetFirewallsFirewallsResponseFirewallRuleProtocolEnum {
  Tcp = "tcp",
  Udp = "udp",
  Icmp = "icmp",
  Esp = "esp",
  Gre = "gre",
}

export class GetFirewallsFirewallsResponseFirewallRule extends SpeakeasyBase {
  /**
   * Description of the Rule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination_ips" })
  destinationIps?: string[];

  /**
   * Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction: GetFirewallsFirewallsResponseFirewallRuleDirectionEnum;

  /**
   * Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: string;

  /**
   * Type of traffic to allow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol: GetFirewallsFirewallsResponseFirewallRuleProtocolEnum;

  /**
   * List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_ips" })
  sourceIps?: string[];
}

export class GetFirewallsFirewallsResponseFirewall extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetFirewallsFirewallsResponseFirewallAppliedTo,
  })
  @Expose({ name: "applied_to" })
  @Type(() => GetFirewallsFirewallsResponseFirewallAppliedTo)
  appliedTo: GetFirewallsFirewallsResponseFirewallAppliedTo[];

  /**
   * Point in time when the Resource was created (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * User-defined labels (key-value pairs)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Name of the Resource. Must be unique per Project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: GetFirewallsFirewallsResponseFirewallRule })
  @Expose({ name: "rules" })
  @Type(() => GetFirewallsFirewallsResponseFirewallRule)
  rules: GetFirewallsFirewallsResponseFirewallRule[];
}

export class GetFirewallsFirewallsResponseMetaPagination extends SpeakeasyBase {
  /**
   * ID of the last page available. Can be null if the current page is the last one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_page" })
  lastPage: number;

  /**
   * ID of the next page. Can be null if the current page is the last one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page" })
  nextPage: number;

  /**
   * Current page number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  /**
   * Maximum number of items shown per page in the response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage: number;

  /**
   * ID of the previous page. Can be null if the current page is the first one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_page" })
  previousPage: number;

  /**
   * The total number of entries that exist in the database for this query. Nullable if unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_entries" })
  totalEntries: number;
}

export class GetFirewallsFirewallsResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => GetFirewallsFirewallsResponseMetaPagination)
  pagination: GetFirewallsFirewallsResponseMetaPagination;
}

/**
 * The `firewalls` key contains an array of Firewall objects
 */
export class GetFirewallsFirewallsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetFirewallsFirewallsResponseFirewall })
  @Expose({ name: "firewalls" })
  @Type(() => GetFirewallsFirewallsResponseFirewall)
  firewalls: GetFirewallsFirewallsResponseFirewall[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => GetFirewallsFirewallsResponseMeta)
  meta?: GetFirewallsFirewallsResponseMeta;
}

export class GetFirewallsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The `firewalls` key contains an array of Firewall objects
   */
  @SpeakeasyMetadata()
  firewallsResponse?: GetFirewallsFirewallsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
