// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateHyperParameterTuningJobXAmzTargetEnum
type CreateHyperParameterTuningJobXAmzTargetEnum string

const (
	CreateHyperParameterTuningJobXAmzTargetEnumSageMakerCreateHyperParameterTuningJob CreateHyperParameterTuningJobXAmzTargetEnum = "SageMaker.CreateHyperParameterTuningJob"
)

func (e CreateHyperParameterTuningJobXAmzTargetEnum) ToPointer() *CreateHyperParameterTuningJobXAmzTargetEnum {
	return &e
}

func (e *CreateHyperParameterTuningJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.CreateHyperParameterTuningJob":
		*e = CreateHyperParameterTuningJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateHyperParameterTuningJobXAmzTargetEnum: %v", v)
	}
}

type CreateHyperParameterTuningJobRequest struct {
	CreateHyperParameterTuningJobRequest shared.CreateHyperParameterTuningJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           CreateHyperParameterTuningJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateHyperParameterTuningJobResponse struct {
	ContentType string
	// Success
	CreateHyperParameterTuningJobResponse *shared.CreateHyperParameterTuningJobResponse
	// ResourceInUse
	ResourceInUse interface{}
	StatusCode    int
	RawResponse   *http.Response
	// ResourceLimitExceeded
	ResourceLimitExceeded interface{}
}
