"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudvisionv1p2beta1boundingpoly as shared_googlecloudvisionv1p2beta1boundingpoly
from ..shared import googlecloudvisionv1p2beta1faceannotationlandmark as shared_googlecloudvisionv1p2beta1faceannotationlandmark
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum(str, Enum):
    r"""Anger likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'

class GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum(str, Enum):
    r"""Blurred likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'

class GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum(str, Enum):
    r"""Headwear likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'

class GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum(str, Enum):
    r"""Joy likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'

class GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum(str, Enum):
    r"""Sorrow likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'

class GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum(str, Enum):
    r"""Surprise likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'

class GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum(str, Enum):
    r"""Under-exposed likelihood."""
    UNKNOWN = 'UNKNOWN'
    VERY_UNLIKELY = 'VERY_UNLIKELY'
    UNLIKELY = 'UNLIKELY'
    POSSIBLE = 'POSSIBLE'
    LIKELY = 'LIKELY'
    VERY_LIKELY = 'VERY_LIKELY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVisionV1p2beta1FaceAnnotation:
    r"""A face annotation object contains the results of face detection."""
    
    anger_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationAngerLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('angerLikelihood'), 'exclude': lambda f: f is None }})
    r"""Anger likelihood."""  
    blurred_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationBlurredLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blurredLikelihood'), 'exclude': lambda f: f is None }})
    r"""Blurred likelihood."""  
    bounding_poly: Optional[shared_googlecloudvisionv1p2beta1boundingpoly.GoogleCloudVisionV1p2beta1BoundingPoly] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boundingPoly'), 'exclude': lambda f: f is None }})
    r"""A bounding polygon for the detected image annotation."""  
    detection_confidence: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectionConfidence'), 'exclude': lambda f: f is None }})
    r"""Detection confidence. Range [0, 1]."""  
    fd_bounding_poly: Optional[shared_googlecloudvisionv1p2beta1boundingpoly.GoogleCloudVisionV1p2beta1BoundingPoly] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fdBoundingPoly'), 'exclude': lambda f: f is None }})
    r"""A bounding polygon for the detected image annotation."""  
    headwear_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationHeadwearLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headwearLikelihood'), 'exclude': lambda f: f is None }})
    r"""Headwear likelihood."""  
    joy_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationJoyLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('joyLikelihood'), 'exclude': lambda f: f is None }})
    r"""Joy likelihood."""  
    landmarking_confidence: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('landmarkingConfidence'), 'exclude': lambda f: f is None }})
    r"""Face landmarking confidence. Range [0, 1]."""  
    landmarks: Optional[list[shared_googlecloudvisionv1p2beta1faceannotationlandmark.GoogleCloudVisionV1p2beta1FaceAnnotationLandmark]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('landmarks'), 'exclude': lambda f: f is None }})
    r"""Detected face landmarks."""  
    pan_angle: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('panAngle'), 'exclude': lambda f: f is None }})
    r"""Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180]."""  
    roll_angle: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rollAngle'), 'exclude': lambda f: f is None }})
    r"""Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180]."""  
    sorrow_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationSorrowLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sorrowLikelihood'), 'exclude': lambda f: f is None }})
    r"""Sorrow likelihood."""  
    surprise_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationSurpriseLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('surpriseLikelihood'), 'exclude': lambda f: f is None }})
    r"""Surprise likelihood."""  
    tilt_angle: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tiltAngle'), 'exclude': lambda f: f is None }})
    r"""Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180]."""  
    under_exposed_likelihood: Optional[GoogleCloudVisionV1p2beta1FaceAnnotationUnderExposedLikelihoodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('underExposedLikelihood'), 'exclude': lambda f: f is None }})
    r"""Under-exposed likelihood."""  
    