"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrecommendationenginev1beta1eventdetail as shared_googlecloudrecommendationenginev1beta1eventdetail
from ..shared import googlecloudrecommendationenginev1beta1producteventdetail as shared_googlecloudrecommendationenginev1beta1producteventdetail
from ..shared import googlecloudrecommendationenginev1beta1userinfo as shared_googlecloudrecommendationenginev1beta1userinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudRecommendationengineV1beta1UserEventEventSourceEnum(str, Enum):
    r"""Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`."""
    EVENT_SOURCE_UNSPECIFIED = 'EVENT_SOURCE_UNSPECIFIED'
    AUTOML = 'AUTOML'
    ECOMMERCE = 'ECOMMERCE'
    BATCH_UPLOAD = 'BATCH_UPLOAD'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecommendationengineV1beta1UserEvent:
    r"""UserEvent captures all metadata information recommendation engine needs to know about how end users interact with customers' website."""
    
    event_detail: Optional[shared_googlecloudrecommendationenginev1beta1eventdetail.GoogleCloudRecommendationengineV1beta1EventDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventDetail'), 'exclude': lambda f: f is None }})
    r"""User event details shared by all recommendation types."""  
    event_source: Optional[GoogleCloudRecommendationengineV1beta1UserEventEventSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventSource'), 'exclude': lambda f: f is None }})
    r"""Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`."""  
    event_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTime'), 'exclude': lambda f: f is None }})
    r"""Optional. Only required for ImportUserEvents method. Timestamp of user event created."""  
    event_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventType'), 'exclude': lambda f: f is None }})
    r"""Required. User event type. Allowed values are: * `add-to-cart` Products being added to cart. * `add-to-list` Items being added to a list (shopping list, favorites etc). * `category-page-view` Special pages such as sale or promotion pages viewed. * `checkout-start` User starting a checkout process. * `detail-page-view` Products detail page viewed. * `home-page-view` Homepage viewed. * `page-visit` Generic page visits not included in the event types above. * `purchase-complete` User finishing a purchase. * `refund` Purchased items being refunded or returned. * `remove-from-cart` Products being removed from cart. * `remove-from-list` Items being removed from a list. * `search` Product search. * `shopping-cart-page-view` User viewing a shopping cart. * `impression` List of items displayed. Used by Google Tag Manager."""  
    product_event_detail: Optional[shared_googlecloudrecommendationenginev1beta1producteventdetail.GoogleCloudRecommendationengineV1beta1ProductEventDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productEventDetail'), 'exclude': lambda f: f is None }})
    r"""ProductEventDetail captures user event information specific to retail products."""  
    user_info: Optional[shared_googlecloudrecommendationenginev1beta1userinfo.GoogleCloudRecommendationengineV1beta1UserInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userInfo'), 'exclude': lambda f: f is None }})
    r"""Information of end users."""  
    