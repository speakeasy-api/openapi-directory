<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RefundExternalTransactionRequest - A request to refund an existing external transaction.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RefundExternalTransactionRequest
{
    /**
     * A full refund of the remaining amount of a transaction.
     * 
     * @var ?array<string, mixed> $fullRefund
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullRefund')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fullRefund = null;
    
    /**
     * A partial refund of a transaction.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartialRefund $partialRefund
     */
	#[\JMS\Serializer\Annotation\SerializedName('partialRefund')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartialRefund')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartialRefund $partialRefund = null;
    
    /**
     * Required. The time that the transaction was refunded.
     * 
     * @var ?string $refundTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('refundTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $refundTime = null;
    
	public function __construct()
	{
		$this->fullRefund = null;
		$this->partialRefund = null;
		$this->refundTime = null;
	}
}
