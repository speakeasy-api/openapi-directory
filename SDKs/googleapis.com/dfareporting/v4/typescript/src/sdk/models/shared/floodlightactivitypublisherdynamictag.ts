/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionValue } from "./dimensionvalue";
import { FloodlightActivityDynamicTag } from "./floodlightactivitydynamictag";
import { Expose, Type } from "class-transformer";

/**
 * Publisher Dynamic Tag
 */
export class FloodlightActivityPublisherDynamicTag extends SpeakeasyBase {
  /**
   * Whether this tag is applicable only for click-throughs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clickThrough" })
  clickThrough?: boolean;

  /**
   * Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "directorySiteId" })
  directorySiteId?: string;

  /**
   * Dynamic Tag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dynamicTag" })
  @Type(() => FloodlightActivityDynamicTag)
  dynamicTag?: FloodlightActivityDynamicTag;

  /**
   * Site ID of this dynamic tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "siteId" })
  siteId?: string;

  /**
   * Represents a DimensionValue resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "siteIdDimensionValue" })
  @Type(() => DimensionValue)
  siteIdDimensionValue?: DimensionValue;

  /**
   * Whether this tag is applicable only for view-throughs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "viewThrough" })
  viewThrough?: boolean;
}
