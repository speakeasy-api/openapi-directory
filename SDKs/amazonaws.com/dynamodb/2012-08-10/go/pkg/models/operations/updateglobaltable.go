// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateGlobalTableXAmzTargetEnum
type UpdateGlobalTableXAmzTargetEnum string

const (
	UpdateGlobalTableXAmzTargetEnumDynamoDb20120810UpdateGlobalTable UpdateGlobalTableXAmzTargetEnum = "DynamoDB_20120810.UpdateGlobalTable"
)

func (e UpdateGlobalTableXAmzTargetEnum) ToPointer() *UpdateGlobalTableXAmzTargetEnum {
	return &e
}

func (e *UpdateGlobalTableXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20120810.UpdateGlobalTable":
		*e = UpdateGlobalTableXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateGlobalTableXAmzTargetEnum: %v", v)
	}
}

type UpdateGlobalTableRequest struct {
	UpdateGlobalTableInput shared.UpdateGlobalTableInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             UpdateGlobalTableXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateGlobalTableResponse struct {
	ContentType string
	// GlobalTableNotFoundException
	GlobalTableNotFoundException interface{}
	// InternalServerError
	InternalServerError interface{}
	// ReplicaAlreadyExistsException
	ReplicaAlreadyExistsException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ReplicaNotFoundException
	ReplicaNotFoundException interface{}
	// TableNotFoundException
	TableNotFoundException interface{}
	// Success
	UpdateGlobalTableOutput *shared.UpdateGlobalTableOutput
}
