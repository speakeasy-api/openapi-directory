// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BudgetTypeEnum - <p> The type of a budget. It must be one of the following types: </p> <p> <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, or <code>SAVINGS_PLANS_COVERAGE</code>.</p>
type BudgetTypeEnum string

const (
	BudgetTypeEnumUsage                   BudgetTypeEnum = "USAGE"
	BudgetTypeEnumCost                    BudgetTypeEnum = "COST"
	BudgetTypeEnumRiUtilization           BudgetTypeEnum = "RI_UTILIZATION"
	BudgetTypeEnumRiCoverage              BudgetTypeEnum = "RI_COVERAGE"
	BudgetTypeEnumSavingsPlansUtilization BudgetTypeEnum = "SAVINGS_PLANS_UTILIZATION"
	BudgetTypeEnumSavingsPlansCoverage    BudgetTypeEnum = "SAVINGS_PLANS_COVERAGE"
)

func (e BudgetTypeEnum) ToPointer() *BudgetTypeEnum {
	return &e
}

func (e *BudgetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USAGE":
		fallthrough
	case "COST":
		fallthrough
	case "RI_UTILIZATION":
		fallthrough
	case "RI_COVERAGE":
		fallthrough
	case "SAVINGS_PLANS_UTILIZATION":
		fallthrough
	case "SAVINGS_PLANS_COVERAGE":
		*e = BudgetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BudgetTypeEnum: %v", v)
	}
}
