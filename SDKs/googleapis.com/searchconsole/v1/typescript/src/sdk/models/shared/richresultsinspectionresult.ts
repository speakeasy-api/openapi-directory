/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DetectedItems } from "./detecteditems";
import { Expose, Type } from "class-transformer";

/**
 * High-level rich results inspection result for this URL.
 */
export enum RichResultsInspectionResultVerdictEnum {
  VerdictUnspecified = "VERDICT_UNSPECIFIED",
  Pass = "PASS",
  Partial = "PARTIAL",
  Fail = "FAIL",
  Neutral = "NEUTRAL",
}

/**
 * Rich-Results inspection result, including any rich results found at this URL.
 */
export class RichResultsInspectionResult extends SpeakeasyBase {
  /**
   * A list of zero or more rich results detected on this page. Rich results that cannot even be parsed due to syntactic issues will not be listed here.
   */
  @SpeakeasyMetadata({ elemType: DetectedItems })
  @Expose({ name: "detectedItems" })
  @Type(() => DetectedItems)
  detectedItems?: DetectedItems[];

  /**
   * High-level rich results inspection result for this URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verdict" })
  verdict?: RichResultsInspectionResultVerdictEnum;
}
