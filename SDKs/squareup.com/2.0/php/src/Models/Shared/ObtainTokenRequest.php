<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ObtainTokenRequest - An object containing the fields to POST for the request.
 * 
 * 
 * See the corresponding object definition for field details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ObtainTokenRequest
{
    /**
     * The Square-issued ID of your application, available from the
     * 
     * [developer dashboard](https://developer.squareup.com/apps).
     * 
     * @var string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientId;
    
    /**
     * The Square-issued application secret for your application, available
     * 
     * from the [developer dashboard](https://developer.squareup.com/apps).
     * 
     * @var string $clientSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientSecret;
    
    /**
     * The authorization code to exchange.
     * 
     * This is required if `grant_type` is set to `authorization_code`, to indicate that
     * the application wants to exchange an authorization code for an OAuth access token.
     * 
     * @var ?string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;
    
    /**
     * Specifies the method to request an OAuth access token.
     * 
     * Valid values are: `authorization_code`, `refresh_token`, and `migration_token`
     * 
     * @var string $grantType
     */
	#[\JMS\Serializer\Annotation\SerializedName('grant_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $grantType;
    
    /**
     * Legacy OAuth access token obtained using a Connect API version prior
     * 
     * to 2019-03-13. This parameter is required if `grant_type` is set to
     * `migration_token` to indicate that the application wants to get a replacement
     * OAuth access token. The response also returns a refresh token.
     * For more information, see [Migrate to Using Refresh Tokens](https://developer.squareup.com/docs/oauth-api/migrate-to-refresh-tokens).
     * 
     * @var ?string $migrationToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('migration_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $migrationToken = null;
    
    /**
     * The redirect URL assigned in the [developer dashboard](https://developer.squareup.com/apps).
     * 
     * @var ?string $redirectUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('redirect_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $redirectUri = null;
    
    /**
     * A valid refresh token for generating a new OAuth access token.
     * 
     * A valid refresh token is required if `grant_type` is set to `refresh_token` , to indicate the application wants a replacement for an expired OAuth access token.
     * 
     * @var ?string $refreshToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('refresh_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $refreshToken = null;
    
    /**
     * A JSON list of strings representing the permissions the application is requesting.
     * 
     * For example: "`["MERCHANT_PROFILE_READ","PAYMENTS_READ","BANK_ACCOUNTS_READ"]`"
     * The access token returned in the response is granted the permissions
     * that comprise the intersection between the requested list of permissions, and those
     * that belong to the provided refresh token.
     * 
     * @var ?array<string> $scopes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scopes = null;
    
    /**
     * A boolean indicating a request for a short-lived access token.
     * 
     * The short-lived access token returned in the response will expire in 24 hours.
     * 
     * @var ?bool $shortLived
     */
	#[\JMS\Serializer\Annotation\SerializedName('short_lived')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shortLived = null;
    
	public function __construct()
	{
		$this->clientId = "";
		$this->clientSecret = "";
		$this->code = null;
		$this->grantType = "";
		$this->migrationToken = null;
		$this->redirectUri = null;
		$this->refreshToken = null;
		$this->scopes = null;
		$this->shortLived = null;
	}
}
