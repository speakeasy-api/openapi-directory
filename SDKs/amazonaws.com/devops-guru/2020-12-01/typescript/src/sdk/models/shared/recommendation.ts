/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecommendationRelatedAnomaly } from "./recommendationrelatedanomaly";
import { RecommendationRelatedEvent } from "./recommendationrelatedevent";
import { Expose, Type } from "class-transformer";

/**
 *  Recommendation information to help you remediate detected anomalous behavior that generated an insight.
 */
export class Recommendation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Category" })
  category?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Reason" })
  reason?: string;

  @SpeakeasyMetadata({ elemType: RecommendationRelatedAnomaly })
  @Expose({ name: "RelatedAnomalies" })
  @Type(() => RecommendationRelatedAnomaly)
  relatedAnomalies?: RecommendationRelatedAnomaly[];

  @SpeakeasyMetadata({ elemType: RecommendationRelatedEvent })
  @Expose({ name: "RelatedEvents" })
  @Type(() => RecommendationRelatedEvent)
  relatedEvents?: RecommendationRelatedEvent[];
}
