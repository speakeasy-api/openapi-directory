// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StringTargetingDimensionTargetingModeEnum - How the items in this list should be targeted.
type StringTargetingDimensionTargetingModeEnum string

const (
	StringTargetingDimensionTargetingModeEnumTargetingModeUnspecified StringTargetingDimensionTargetingModeEnum = "TARGETING_MODE_UNSPECIFIED"
	StringTargetingDimensionTargetingModeEnumInclusive                StringTargetingDimensionTargetingModeEnum = "INCLUSIVE"
	StringTargetingDimensionTargetingModeEnumExclusive                StringTargetingDimensionTargetingModeEnum = "EXCLUSIVE"
)

func (e StringTargetingDimensionTargetingModeEnum) ToPointer() *StringTargetingDimensionTargetingModeEnum {
	return &e
}

func (e *StringTargetingDimensionTargetingModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TARGETING_MODE_UNSPECIFIED":
		fallthrough
	case "INCLUSIVE":
		fallthrough
	case "EXCLUSIVE":
		*e = StringTargetingDimensionTargetingModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StringTargetingDimensionTargetingModeEnum: %v", v)
	}
}

// StringTargetingDimension - Generic targeting with string values used in app, website and publisher targeting.
type StringTargetingDimension struct {
	// How the items in this list should be targeted.
	TargetingMode *StringTargetingDimensionTargetingModeEnum `json:"targetingMode,omitempty"`
	// The values specified.
	Values []string `json:"values,omitempty"`
}
