<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SearchResult - A search result matching the specified query. You can use sources.debian.org to view the file contents. See https://github.com/Debian/dcs/blob/master/cmd/dcs-web/show/show.go for how to construct a sources.debian.org URL from a search result.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SearchResult
{
    /**
     * The full line containing the search result.
     * 
     * @var string $context
     */
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $context;
    
    /**
     * Up to 2 full lines after the search result (see `context`).
     * 
     * @var ?array<string> $contextAfter
     */
	#[\JMS\Serializer\Annotation\SerializedName('context_after')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $contextAfter = null;
    
    /**
     * Up to 2 full lines before the search result (see `context`).
     * 
     * @var ?array<string> $contextBefore
     */
	#[\JMS\Serializer\Annotation\SerializedName('context_before')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $contextBefore = null;
    
    /**
     * Line number containing the search result.
     * 
     * @var int $line
     */
	#[\JMS\Serializer\Annotation\SerializedName('line')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $line;
    
    /**
     * The Debian source package containing this search result, including the full Debian version number.
     * 
     * @var string $package
     */
	#[\JMS\Serializer\Annotation\SerializedName('package')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $package;
    
    /**
     * Path to the file containing the this search result, starting with `package`.
     * 
     * @var string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $path;
    
	public function __construct()
	{
		$this->context = "";
		$this->contextAfter = null;
		$this->contextBefore = null;
		$this->line = 0;
		$this->package = "";
		$this->path = "";
	}
}
