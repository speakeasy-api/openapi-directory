// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopTaskXAmzTargetEnum
type StopTaskXAmzTargetEnum string

const (
	StopTaskXAmzTargetEnumAmazonEc2ContainerServiceV20141113StopTask StopTaskXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.StopTask"
)

func (e *StopTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerServiceV20141113.StopTask":
		*e = StopTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopTaskXAmzTargetEnum: %s", s)
	}
}

type StopTaskHeaders struct {
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StopTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopTaskRequest struct {
	Headers StopTaskHeaders
	Request shared.StopTaskRequest `request:"mediaType=application/json"`
}

type StopTaskResponse struct {
	// ClientException
	ClientException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServerException
	ServerException interface{}
	// Success
	StopTaskResponse *shared.StopTaskResponse
}
