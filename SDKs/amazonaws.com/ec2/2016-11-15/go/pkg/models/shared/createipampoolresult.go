// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateIpamPoolResultIpamPoolAddressFamilyEnum - The address family of the pool.
type CreateIpamPoolResultIpamPoolAddressFamilyEnum string

const (
	CreateIpamPoolResultIpamPoolAddressFamilyEnumIpv4 CreateIpamPoolResultIpamPoolAddressFamilyEnum = "ipv4"
	CreateIpamPoolResultIpamPoolAddressFamilyEnumIpv6 CreateIpamPoolResultIpamPoolAddressFamilyEnum = "ipv6"
)

func (e *CreateIpamPoolResultIpamPoolAddressFamilyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = CreateIpamPoolResultIpamPoolAddressFamilyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIpamPoolResultIpamPoolAddressFamilyEnum: %s", s)
	}
}

// CreateIpamPoolResultIpamPoolAllocationResourceTags - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.
type CreateIpamPoolResultIpamPoolAllocationResourceTags struct {
	Key   *string
	Value *string
}

// CreateIpamPoolResultIpamPoolAwsServiceEnum - Limits which service in Amazon Web Services that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.
type CreateIpamPoolResultIpamPoolAwsServiceEnum string

const (
	CreateIpamPoolResultIpamPoolAwsServiceEnumEc2 CreateIpamPoolResultIpamPoolAwsServiceEnum = "ec2"
)

func (e *CreateIpamPoolResultIpamPoolAwsServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ec2":
		*e = CreateIpamPoolResultIpamPoolAwsServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIpamPoolResultIpamPoolAwsServiceEnum: %s", s)
	}
}

// CreateIpamPoolResultIpamPoolIpamScopeTypeEnum - In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.
type CreateIpamPoolResultIpamPoolIpamScopeTypeEnum string

const (
	CreateIpamPoolResultIpamPoolIpamScopeTypeEnumPublic  CreateIpamPoolResultIpamPoolIpamScopeTypeEnum = "public"
	CreateIpamPoolResultIpamPoolIpamScopeTypeEnumPrivate CreateIpamPoolResultIpamPoolIpamScopeTypeEnum = "private"
)

func (e *CreateIpamPoolResultIpamPoolIpamScopeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "public":
		fallthrough
	case "private":
		*e = CreateIpamPoolResultIpamPoolIpamScopeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIpamPoolResultIpamPoolIpamScopeTypeEnum: %s", s)
	}
}

// CreateIpamPoolResultIpamPoolPublicIPSourceEnum - The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Default is <code>BYOIP</code>. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/intro-create-ipv6-pools.html">Create IPv6 pools</a> in the <i>Amazon VPC IPAM User Guide</i>. By default, you can add only one Amazon-provided IPv6 CIDR block to a top-level IPv6 pool. For information on increasing the default limit, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/quotas-ipam.html"> Quotas for your IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.
type CreateIpamPoolResultIpamPoolPublicIPSourceEnum string

const (
	CreateIpamPoolResultIpamPoolPublicIPSourceEnumAmazon CreateIpamPoolResultIpamPoolPublicIPSourceEnum = "amazon"
	CreateIpamPoolResultIpamPoolPublicIPSourceEnumByoip  CreateIpamPoolResultIpamPoolPublicIPSourceEnum = "byoip"
)

func (e *CreateIpamPoolResultIpamPoolPublicIPSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "amazon":
		fallthrough
	case "byoip":
		*e = CreateIpamPoolResultIpamPoolPublicIPSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIpamPoolResultIpamPoolPublicIPSourceEnum: %s", s)
	}
}

// CreateIpamPoolResultIpamPoolStateEnum - The state of the IPAM pool.
type CreateIpamPoolResultIpamPoolStateEnum string

const (
	CreateIpamPoolResultIpamPoolStateEnumCreateInProgress  CreateIpamPoolResultIpamPoolStateEnum = "create-in-progress"
	CreateIpamPoolResultIpamPoolStateEnumCreateComplete    CreateIpamPoolResultIpamPoolStateEnum = "create-complete"
	CreateIpamPoolResultIpamPoolStateEnumCreateFailed      CreateIpamPoolResultIpamPoolStateEnum = "create-failed"
	CreateIpamPoolResultIpamPoolStateEnumModifyInProgress  CreateIpamPoolResultIpamPoolStateEnum = "modify-in-progress"
	CreateIpamPoolResultIpamPoolStateEnumModifyComplete    CreateIpamPoolResultIpamPoolStateEnum = "modify-complete"
	CreateIpamPoolResultIpamPoolStateEnumModifyFailed      CreateIpamPoolResultIpamPoolStateEnum = "modify-failed"
	CreateIpamPoolResultIpamPoolStateEnumDeleteInProgress  CreateIpamPoolResultIpamPoolStateEnum = "delete-in-progress"
	CreateIpamPoolResultIpamPoolStateEnumDeleteComplete    CreateIpamPoolResultIpamPoolStateEnum = "delete-complete"
	CreateIpamPoolResultIpamPoolStateEnumDeleteFailed      CreateIpamPoolResultIpamPoolStateEnum = "delete-failed"
	CreateIpamPoolResultIpamPoolStateEnumIsolateInProgress CreateIpamPoolResultIpamPoolStateEnum = "isolate-in-progress"
	CreateIpamPoolResultIpamPoolStateEnumIsolateComplete   CreateIpamPoolResultIpamPoolStateEnum = "isolate-complete"
	CreateIpamPoolResultIpamPoolStateEnumRestoreInProgress CreateIpamPoolResultIpamPoolStateEnum = "restore-in-progress"
)

func (e *CreateIpamPoolResultIpamPoolStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "create-in-progress":
		fallthrough
	case "create-complete":
		fallthrough
	case "create-failed":
		fallthrough
	case "modify-in-progress":
		fallthrough
	case "modify-complete":
		fallthrough
	case "modify-failed":
		fallthrough
	case "delete-in-progress":
		fallthrough
	case "delete-complete":
		fallthrough
	case "delete-failed":
		fallthrough
	case "isolate-in-progress":
		fallthrough
	case "isolate-complete":
		fallthrough
	case "restore-in-progress":
		*e = CreateIpamPoolResultIpamPoolStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIpamPoolResultIpamPoolStateEnum: %s", s)
	}
}

// CreateIpamPoolResultIpamPoolTags - Describes a tag.
type CreateIpamPoolResultIpamPoolTags struct {
	Key   *string
	Value *string
}

// CreateIpamPoolResultIpamPool - Information about the IPAM pool created.
type CreateIpamPoolResultIpamPool struct {
	AddressFamily                  *CreateIpamPoolResultIpamPoolAddressFamilyEnum
	AllocationDefaultNetmaskLength *int64
	AllocationMaxNetmaskLength     *int64
	AllocationMinNetmaskLength     *int64
	AllocationResourceTags         []CreateIpamPoolResultIpamPoolAllocationResourceTags
	AutoImport                     *bool
	AwsService                     *CreateIpamPoolResultIpamPoolAwsServiceEnum
	Description                    *string
	IpamArn                        *string
	IpamPoolArn                    *string
	IpamPoolID                     *string
	IpamRegion                     *string
	IpamScopeArn                   *string
	IpamScopeType                  *CreateIpamPoolResultIpamPoolIpamScopeTypeEnum
	Locale                         *string
	OwnerID                        *string
	PoolDepth                      *int64
	PublicIPSource                 *CreateIpamPoolResultIpamPoolPublicIPSourceEnum
	PubliclyAdvertisable           *bool
	SourceIpamPoolID               *string
	State                          *CreateIpamPoolResultIpamPoolStateEnum
	StateMessage                   *string
	Tags                           []CreateIpamPoolResultIpamPoolTags
}

// CreateIpamPoolResult - Success
type CreateIpamPoolResult struct {
	IpamPool *CreateIpamPoolResultIpamPool
}
