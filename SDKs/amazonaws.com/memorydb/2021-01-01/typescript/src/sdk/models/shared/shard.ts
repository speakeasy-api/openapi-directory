/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Node } from "./node";
import { Expose, Type } from "class-transformer";

/**
 * Represents a collection of nodes in a cluster. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes.
 */
export class Shard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Node })
  @Expose({ name: "Nodes" })
  @Type(() => Node)
  nodes?: Node[];

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfNodes" })
  numberOfNodes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Slots" })
  slots?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;
}
