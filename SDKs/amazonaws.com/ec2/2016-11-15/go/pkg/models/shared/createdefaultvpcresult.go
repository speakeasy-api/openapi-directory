// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum - The state of the CIDR block.
type CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum string

const (
	CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnumAssociating    CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = "associating"
	CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnumAssociated     CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = "associated"
	CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnumDisassociating CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = "disassociating"
	CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnumDisassociated  CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = "disassociated"
	CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnumFailing        CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = "failing"
	CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnumFailed         CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = "failed"
)

func (e CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum) ToPointer() *CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum {
	return &e
}

func (e *CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "failing":
		fallthrough
	case "failed":
		*e = CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum: %v", v)
	}
}

// CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockState - Information about the state of the CIDR block.
type CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockState struct {
	State         *CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum
	StatusMessage *string
}

// CreateDefaultVpcResultVpcCidrBlockAssociationSet - Describes an IPv4 CIDR block associated with a VPC.
type CreateDefaultVpcResultVpcCidrBlockAssociationSet struct {
	AssociationID  *string
	CidrBlock      *string
	CidrBlockState *CreateDefaultVpcResultVpcCidrBlockAssociationSetCidrBlockState
}

// CreateDefaultVpcResultVpcInstanceTenancyEnum - The allowed tenancy of instances launched into the VPC.
type CreateDefaultVpcResultVpcInstanceTenancyEnum string

const (
	CreateDefaultVpcResultVpcInstanceTenancyEnumDefault   CreateDefaultVpcResultVpcInstanceTenancyEnum = "default"
	CreateDefaultVpcResultVpcInstanceTenancyEnumDedicated CreateDefaultVpcResultVpcInstanceTenancyEnum = "dedicated"
	CreateDefaultVpcResultVpcInstanceTenancyEnumHost      CreateDefaultVpcResultVpcInstanceTenancyEnum = "host"
)

func (e CreateDefaultVpcResultVpcInstanceTenancyEnum) ToPointer() *CreateDefaultVpcResultVpcInstanceTenancyEnum {
	return &e
}

func (e *CreateDefaultVpcResultVpcInstanceTenancyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		fallthrough
	case "dedicated":
		fallthrough
	case "host":
		*e = CreateDefaultVpcResultVpcInstanceTenancyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDefaultVpcResultVpcInstanceTenancyEnum: %v", v)
	}
}

// CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum - The state of the CIDR block.
type CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum string

const (
	CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnumAssociating    CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = "associating"
	CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnumAssociated     CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = "associated"
	CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnumDisassociating CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = "disassociating"
	CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnumDisassociated  CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = "disassociated"
	CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnumFailing        CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = "failing"
	CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnumFailed         CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = "failed"
)

func (e CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum) ToPointer() *CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum {
	return &e
}

func (e *CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "failing":
		fallthrough
	case "failed":
		*e = CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum: %v", v)
	}
}

// CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState - Information about the state of the CIDR block.
type CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState struct {
	State         *CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum
	StatusMessage *string
}

// CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSet - Describes an IPv6 CIDR block associated with a VPC.
type CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSet struct {
	AssociationID      *string
	Ipv6CidrBlock      *string
	Ipv6CidrBlockState *CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState
	Ipv6Pool           *string
	NetworkBorderGroup *string
}

// CreateDefaultVpcResultVpcStateEnum - The current state of the VPC.
type CreateDefaultVpcResultVpcStateEnum string

const (
	CreateDefaultVpcResultVpcStateEnumPending   CreateDefaultVpcResultVpcStateEnum = "pending"
	CreateDefaultVpcResultVpcStateEnumAvailable CreateDefaultVpcResultVpcStateEnum = "available"
)

func (e CreateDefaultVpcResultVpcStateEnum) ToPointer() *CreateDefaultVpcResultVpcStateEnum {
	return &e
}

func (e *CreateDefaultVpcResultVpcStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		*e = CreateDefaultVpcResultVpcStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDefaultVpcResultVpcStateEnum: %v", v)
	}
}

// CreateDefaultVpcResultVpcTags - Describes a tag.
type CreateDefaultVpcResultVpcTags struct {
	Key   *string
	Value *string
}

// CreateDefaultVpcResultVpc - Information about the VPC.
type CreateDefaultVpcResultVpc struct {
	CidrBlock                   *string
	CidrBlockAssociationSet     []CreateDefaultVpcResultVpcCidrBlockAssociationSet
	DhcpOptionsID               *string
	InstanceTenancy             *CreateDefaultVpcResultVpcInstanceTenancyEnum
	Ipv6CidrBlockAssociationSet []CreateDefaultVpcResultVpcIpv6CidrBlockAssociationSet
	IsDefault                   *bool
	OwnerID                     *string
	State                       *CreateDefaultVpcResultVpcStateEnum
	Tags                        []CreateDefaultVpcResultVpcTags
	VpcID                       *string
}

// CreateDefaultVpcResult - Success
type CreateDefaultVpcResult struct {
	Vpc *CreateDefaultVpcResultVpc
}
