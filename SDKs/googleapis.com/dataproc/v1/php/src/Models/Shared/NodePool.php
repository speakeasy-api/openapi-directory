<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NodePool - indicating a list of workers of same type
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NodePool
{
    /**
     * Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Name of instances to be repaired. These instances must belong to specified node pool.
     * 
     * @var ?array<string> $instanceNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $instanceNames = null;
    
    /**
     * Required. Repair action to take on specified resources of the node pool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NodePoolRepairActionEnum $repairAction
     */
	#[\JMS\Serializer\Annotation\SerializedName('repairAction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NodePoolRepairActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NodePoolRepairActionEnum $repairAction = null;
    
	public function __construct()
	{
		$this->id = null;
		$this->instanceNames = null;
		$this->repairAction = null;
	}
}
