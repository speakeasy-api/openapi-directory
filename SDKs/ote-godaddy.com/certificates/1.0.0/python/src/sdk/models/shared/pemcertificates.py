"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PEMCertificates:
    
    certificate: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificate') }})
    r"""End entity certificate in PEM format"""  
    cross: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cross'), 'exclude': lambda f: f is None }})
    r"""CA Cross Intermediate certificate in PEM format"""  
    intermediate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intermediate'), 'exclude': lambda f: f is None }})
    r"""CA Signing Intermediate certificate in PEM format"""  
    root: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('root'), 'exclude': lambda f: f is None }})
    r"""CA Root certificate in PEM format"""  
    