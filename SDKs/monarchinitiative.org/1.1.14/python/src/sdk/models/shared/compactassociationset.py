"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompactAssociationSet:
    
    objects: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objects') }})
    r"""List of O, for a given (S,R) pair, yielding (S,R,O) triples. E.g. list of MPs for (MGI:nnn, has_phenotype)"""  
    relation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relation') }})
    r"""Relationship type connecting subject and object list"""  
    subject: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subject') }})
    r"""Subject of association (what it is about), e.g. MGI:1201606"""  
    