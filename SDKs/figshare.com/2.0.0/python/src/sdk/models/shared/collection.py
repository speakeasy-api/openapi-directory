"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeline as shared_timeline
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Collection:
    
    doi: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doi') }})
    r"""Collection DOI"""  
    handle: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('handle') }})
    r"""Collection Handle"""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Collection id"""  
    published_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('published_date') }})
    r"""Date when collection was published"""  
    timeline: shared_timeline.Timeline = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeline') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Collection title"""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""Api endpoint"""  
    