/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class AdsenseAccountsReportsGenerateSecurityOption1 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class AdsenseAccountsReportsGenerateSecurityOption2 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class AdsenseAccountsReportsGenerateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, option=true" })
  option1?: AdsenseAccountsReportsGenerateSecurityOption1;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option2?: AdsenseAccountsReportsGenerateSecurityOption2;
}

export class AdsenseAccountsReportsGenerateRequest extends SpeakeasyBase {
  /**
   * Account upon which to report.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;

  /**
   * Data format for the response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * Optional currency to use when reporting on monetary metrics. Defaults to the account's currency if not set.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=currency",
  })
  currency?: string;

  /**
   * Dimensions to base the report on.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dimension",
  })
  dimension?: string[];

  /**
   * End of the date range to report on in "YYYY-MM-DD" format, inclusive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endDate",
  })
  endDate: string;

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * Filters to be run on the report.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string[];

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locale",
  })
  locale?: string;

  /**
   * The maximum number of rows of report data to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: number;

  /**
   * Numeric columns to include in the report.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=metric",
  })
  metric?: string[];

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * The name of a dimension or metric to sort the resulting report on, optionally prefixed with "+" to sort ascending or "-" to sort descending. If no prefix is specified, the column is sorted ascending.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string[];

  /**
   * Start of the date range to report on in "YYYY-MM-DD" format, inclusive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startDate",
  })
  startDate: string;

  /**
   * Index of the first row of report data to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startIndex",
  })
  startIndex?: number;

  /**
   * Whether the report should be generated in the AdSense account's local timezone. If false default PST/PDT timezone will be used.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=useTimezoneReporting",
  })
  useTimezoneReporting?: boolean;

  /**
   * Deprecated. Please use quotaUser instead.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userIp",
  })
  userIp?: string;
}

export class AdsenseAccountsReportsGenerateResponse extends SpeakeasyBase {
  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  adsenseReportsGenerateResponse?: shared.AdsenseReportsGenerateResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
