/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class Facetscategory200ApplicationJSONCategoriesTreesChildren {
    /**
     * Category children.
     */
    @JsonProperty("Children")
    public Object[] children;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withChildren(Object[] children) {
        this.children = children;
        return this;
    }
    
    /**
     * Category ID.
     */
    @JsonProperty("Id")
    public Long id;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Link of the facet.
     */
    @JsonProperty("Link")
    public String link;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * Encoded link of the facet.
     */
    @JsonProperty("LinkEncoded")
    public String linkEncoded;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withLinkEncoded(String linkEncoded) {
        this.linkEncoded = linkEncoded;
        return this;
    }
    
    /**
     * Mapping of the facet.
     */
    @JsonProperty("Map")
    public String map;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withMap(String map) {
        this.map = map;
        return this;
    }
    
    /**
     * Category name.
     */
    @JsonProperty("Name")
    public String name;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Position of the facet.
     */
    @JsonProperty("Position")
    public Long position;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withPosition(Long position) {
        this.position = position;
        return this;
    }
    
    /**
     * Quantity of the facets.
     */
    @JsonProperty("Quantity")
    public Long quantity;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Value of the facet.
     */
    @JsonProperty("Value")
    public String value;

    public Facetscategory200ApplicationJSONCategoriesTreesChildren withValue(String value) {
        this.value = value;
        return this;
    }
    
    public Facetscategory200ApplicationJSONCategoriesTreesChildren(@JsonProperty("Children") Object[] children, @JsonProperty("Id") Long id, @JsonProperty("Link") String link, @JsonProperty("LinkEncoded") String linkEncoded, @JsonProperty("Map") String map, @JsonProperty("Name") String name, @JsonProperty("Position") Long position, @JsonProperty("Quantity") Long quantity, @JsonProperty("Value") String value) {
        this.children = children;
        this.id = id;
        this.link = link;
        this.linkEncoded = linkEncoded;
        this.map = map;
        this.name = name;
        this.position = position;
        this.quantity = quantity;
        this.value = value;
  }
}
