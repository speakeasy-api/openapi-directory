"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigManagementOciConfig:
    r"""OCI repo configuration for a single cluster"""
    
    gcp_service_account_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcpServiceAccountEmail'), 'exclude': lambda f: f is None }})
    r"""The GCP Service Account Email used for auth when secret_type is gcpServiceAccount."""  
    policy_dir: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyDir'), 'exclude': lambda f: f is None }})
    r"""The absolute path of the directory that contains the local resources. Default: the root directory of the image."""  
    secret_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secretType'), 'exclude': lambda f: f is None }})
    r"""Type of secret configured for access to the Git repo."""  
    sync_repo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('syncRepo'), 'exclude': lambda f: f is None }})
    r"""The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`."""  
    sync_wait_secs: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('syncWaitSecs'), 'exclude': lambda f: f is None }})
    r"""Period in seconds between consecutive syncs. Default: 15."""  
    