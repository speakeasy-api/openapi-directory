// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ValidatePolicyFindingTypeEnum string

const (
	ValidatePolicyFindingTypeEnumError           ValidatePolicyFindingTypeEnum = "ERROR"
	ValidatePolicyFindingTypeEnumSecurityWarning ValidatePolicyFindingTypeEnum = "SECURITY_WARNING"
	ValidatePolicyFindingTypeEnumSuggestion      ValidatePolicyFindingTypeEnum = "SUGGESTION"
	ValidatePolicyFindingTypeEnumWarning         ValidatePolicyFindingTypeEnum = "WARNING"
)

func (e ValidatePolicyFindingTypeEnum) ToPointer() *ValidatePolicyFindingTypeEnum {
	return &e
}

func (e *ValidatePolicyFindingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR":
		fallthrough
	case "SECURITY_WARNING":
		fallthrough
	case "SUGGESTION":
		fallthrough
	case "WARNING":
		*e = ValidatePolicyFindingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidatePolicyFindingTypeEnum: %v", v)
	}
}
