"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TestStatusStatusEnum(str, Enum):
    r"""Status of the test."""
    TEST_STATUS_UNSPECIFIED = 'TEST_STATUS_UNSPECIFIED'
    COMPLETE = 'COMPLETE'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    PAGE_UNREACHABLE = 'PAGE_UNREACHABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestStatus:
    r"""Final state of the test, including error details if necessary."""
    
    details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})
    r"""Error details if applicable."""  
    status: Optional[TestStatusStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the test."""  
    