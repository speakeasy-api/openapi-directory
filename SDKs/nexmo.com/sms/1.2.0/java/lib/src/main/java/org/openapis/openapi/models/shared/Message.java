/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Message {
    /**
     * **Advanced**: An optional string used to identify separate accounts using the SMS endpoint for billing purposes. To use this feature, please email [support@nexmo.com](mailto:support@nexmo.com)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account-ref")
    public String accountRef;

    public Message withAccountRef(String accountRef) {
        this.accountRef = accountRef;
        return this;
    }
    
    /**
     * If a `client-ref` was included when sending the SMS, this field will be included and hold the value that was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client-ref")
    public String clientRef;

    public Message withClientRef(String clientRef) {
        this.clientRef = clientRef;
        return this;
    }
    
    /**
     * The ID of the message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message-id")
    public String messageId;

    public Message withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * The estimated cost of the message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message-price")
    public String messagePrice;

    public Message withMessagePrice(String messagePrice) {
        this.messagePrice = messagePrice;
        return this;
    }
    
    /**
     * The estimated ID of the network of the recipient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public Message withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Your estimated remaining balance
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remaining-balance")
    public String remainingBalance;

    public Message withRemainingBalance(String remainingBalance) {
        this.remainingBalance = remainingBalance;
        return this;
    }
    
    /**
     * The status of the message. See [Troubleshooting Failed SMS](/messaging/sms/guides/troubleshooting-sms).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public Message withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The number the message was sent to. Numbers are specified in E.164 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;

    public Message withTo(String to) {
        this.to = to;
        return this;
    }
    
    public Message(){}
}
