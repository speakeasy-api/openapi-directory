/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ZebraTeam } from "./zebrateam";
import { Expose, Type } from "class-transformer";

export class ZebraAlliances extends SpeakeasyBase {
  /**
   * Zebra data for teams on the blue alliance
   */
  @SpeakeasyMetadata({ elemType: ZebraTeam })
  @Expose({ name: "blue" })
  @Type(() => ZebraTeam)
  blue?: ZebraTeam[];

  /**
   * Zebra MotionWorks data for teams on the red alliance
   */
  @SpeakeasyMetadata({ elemType: ZebraTeam })
  @Expose({ name: "red" })
  @Type(() => ZebraTeam)
  red?: ZebraTeam[];
}

/**
 * Successful response
 */
export class Zebra extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alliances" })
  @Type(() => ZebraAlliances)
  alliances: ZebraAlliances;

  /**
   * TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`, where `yyyy` is the year, and `EVENT_CODE` is the event code of the event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the match number in the competition level. A set number may be appended to the competition level if more than one match in required per set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key: string;

  /**
   * A list of relative timestamps for each data point. Each timestamp will correspond to the X and Y value at the same index in a team xs and ys arrays. `times`, all teams `xs` and all teams `ys` are guarenteed to be the same length.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "times" })
  times: number[];
}
