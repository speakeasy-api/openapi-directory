/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Playlist - Soundcloud Playlist Object
 */
public class Playlist {
    /**
     * URL to a JPEG image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("artwork_url")
    public String artworkUrl;

    public Playlist withArtworkUrl(String artworkUrl) {
        this.artworkUrl = artworkUrl;
        return this;
    }
    
    /**
     * Created timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public Playlist withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Playlist description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Playlist withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * is downloadable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downloadable")
    public Boolean downloadable;

    public Playlist withDownloadable(Boolean downloadable) {
        this.downloadable = downloadable;
        return this;
    }
    
    /**
     * Playlist duration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;

    public Playlist withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * European Article Number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ean")
    public String ean;

    public Playlist withEan(String ean) {
        this.ean = ean;
        return this;
    }
    
    /**
     * Embeddable by.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embeddable_by")
    public String embeddableBy;

    public Playlist withEmbeddableBy(String embeddableBy) {
        this.embeddableBy = embeddableBy;
        return this;
    }
    
    /**
     * Playlist genre.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("genre")
    public String genre;

    public Playlist withGenre(String genre) {
        this.genre = genre;
        return this;
    }
    
    /**
     * Playlist identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Playlist withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Type of Soundcloud object (playlist).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Playlist withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * SoundCloud User object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public MetaUser label;

    public Playlist withLabel(MetaUser label) {
        this.label = label;
        return this;
    }
    
    /**
     * Label user identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_id")
    public Long labelId;

    public Playlist withLabelId(Long labelId) {
        this.labelId = labelId;
        return this;
    }
    
    /**
     * Label name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_name")
    public String labelName;

    public Playlist withLabelName(String labelName) {
        this.labelName = labelName;
        return this;
    }
    
    /**
     * Last modified timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_modified")
    public String lastModified;

    public Playlist withLastModified(String lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * License.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license")
    public String license;

    public Playlist withLicense(String license) {
        this.license = license;
        return this;
    }
    
    /**
     * Count of playlist likes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("likes_count")
    public Long likesCount;

    public Playlist withLikesCount(Long likesCount) {
        this.likesCount = likesCount;
        return this;
    }
    
    /**
     * Playlist permalink.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permalink")
    public String permalink;

    public Playlist withPermalink(String permalink) {
        this.permalink = permalink;
        return this;
    }
    
    /**
     * Playlist permalink URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permalink_url")
    public String permalinkUrl;

    public Playlist withPermalinkUrl(String permalinkUrl) {
        this.permalinkUrl = permalinkUrl;
        return this;
    }
    
    /**
     * Type of playlist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playlist_type")
    public String playlistType;

    public Playlist withPlaylistType(String playlistType) {
        this.playlistType = playlistType;
        return this;
    }
    
    /**
     * Purchase title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchase_title")
    public String purchaseTitle;

    public Playlist withPurchaseTitle(String purchaseTitle) {
        this.purchaseTitle = purchaseTitle;
        return this;
    }
    
    /**
     * Purchase URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchase_url")
    public String purchaseUrl;

    public Playlist withPurchaseUrl(String purchaseUrl) {
        this.purchaseUrl = purchaseUrl;
        return this;
    }
    
    /**
     * Release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release")
    public String release;

    public Playlist withRelease(String release) {
        this.release = release;
        return this;
    }
    
    /**
     * Day of release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release_day")
    public Long releaseDay;

    public Playlist withReleaseDay(Long releaseDay) {
        this.releaseDay = releaseDay;
        return this;
    }
    
    /**
     * Month of release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release_month")
    public Long releaseMonth;

    public Playlist withReleaseMonth(Long releaseMonth) {
        this.releaseMonth = releaseMonth;
        return this;
    }
    
    /**
     * Year of release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release_year")
    public Long releaseYear;

    public Playlist withReleaseYear(Long releaseYear) {
        this.releaseYear = releaseYear;
        return this;
    }
    
    /**
     * Type of sharing (private/public).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sharing")
    public String sharing;

    public Playlist withSharing(String sharing) {
        this.sharing = sharing;
        return this;
    }
    
    /**
     * Is streamable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamable")
    public Boolean streamable;

    public Playlist withStreamable(Boolean streamable) {
        this.streamable = streamable;
        return this;
    }
    
    /**
     * Tags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag_list")
    public String tagList;

    public Playlist withTagList(String tagList) {
        this.tagList = tagList;
        return this;
    }
    
    /**
     * Tags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String tags;

    public Playlist withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Playlist title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public Playlist withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Count of tracks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("track_count")
    public Long trackCount;

    public Playlist withTrackCount(Long trackCount) {
        this.trackCount = trackCount;
        return this;
    }
    
    /**
     * List of tracks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracks")
    public Track[] tracks;

    public Playlist withTracks(Track[] tracks) {
        this.tracks = tracks;
        return this;
    }
    
    /**
     * tracks URI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracks_uri")
    public String tracksUri;

    public Playlist withTracksUri(String tracksUri) {
        this.tracksUri = tracksUri;
        return this;
    }
    
    /**
     * Playlist type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Playlist withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Playlist URI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;

    public Playlist withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    /**
     * SoundCloud User object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public MetaUser user;

    public Playlist withUser(MetaUser user) {
        this.user = user;
        return this;
    }
    
    /**
     * User identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public Long userId;

    public Playlist withUserId(Long userId) {
        this.userId = userId;
        return this;
    }
    
    public Playlist(){}
}
