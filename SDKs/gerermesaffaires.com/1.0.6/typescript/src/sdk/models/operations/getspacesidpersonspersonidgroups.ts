/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSpacesIdPersonsPersonIdGroupsRequest extends SpeakeasyBase {
  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the person to get groups
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=personId",
  })
  personId: string;
}

export class GetSpacesIdPersonsPersonIdGroupsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of groups
   */
  @SpeakeasyMetadata({ elemType: shared.Group })
  getSpacesIdPersonsPersonIdGroups200ApplicationJSONAllOfs?: shared.Group[];
}
