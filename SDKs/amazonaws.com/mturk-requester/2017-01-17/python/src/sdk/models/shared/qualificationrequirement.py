"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import comparator_enum as shared_comparator_enum
from ..shared import hitaccessactions_enum as shared_hitaccessactions_enum
from ..shared import locale as shared_locale
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QualificationRequirement:
    r"""The QualificationRequirement data structure describes a Qualification that a Worker must have before the Worker is allowed to accept a HIT. A requirement may optionally state that a Worker must have the Qualification in order to preview the HIT, or see the HIT in search results."""
    
    comparator: shared_comparator_enum.ComparatorEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Comparator') }})  
    qualification_type_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QualificationTypeId') }})  
    actions_guarded: Optional[shared_hitaccessactions_enum.HITAccessActionsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ActionsGuarded'), 'exclude': lambda f: f is None }})  
    integer_values: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegerValues'), 'exclude': lambda f: f is None }})  
    locale_values: Optional[list[shared_locale.Locale]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocaleValues'), 'exclude': lambda f: f is None }})  
    required_to_preview: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequiredToPreview'), 'exclude': lambda f: f is None }})  
    