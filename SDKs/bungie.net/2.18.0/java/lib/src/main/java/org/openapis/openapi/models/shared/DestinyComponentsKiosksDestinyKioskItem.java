/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



public class DestinyComponentsKiosksDestinyKioskItem {
    /**
     * If true, the user can not only see the item, but they can acquire it. It is possible that a user can see a kiosk item and not be able to acquire it.
     */
    
    public Boolean canAcquire;
    public DestinyComponentsKiosksDestinyKioskItem withCanAcquire(Boolean canAcquire) {
        this.canAcquire = canAcquire;
        return this;
    }
    
    /**
     * Indexes into failureStrings for the Vendor, indicating the reasons why it failed if any.
     */
    
    public Integer[] failureIndexes;
    public DestinyComponentsKiosksDestinyKioskItem withFailureIndexes(Integer[] failureIndexes) {
        this.failureIndexes = failureIndexes;
        return this;
    }
    
    /**
     * I may regret naming it this way - but this represents when an item has an objective that doesn't serve a beneficial purpose, but rather is used for "flavor" or additional information. For instance, when Emblems track specific stats, those stats are represented as Objectives on the item.
     */
    
    public DestinyComponentsKiosksDestinyKioskItemFlavorObjective flavorObjective;
    public DestinyComponentsKiosksDestinyKioskItem withFlavorObjective(DestinyComponentsKiosksDestinyKioskItemFlavorObjective flavorObjective) {
        this.flavorObjective = flavorObjective;
        return this;
    }
    
    /**
     * The index of the item in the related DestinyVendorDefintion's itemList property, representing the sale.
     */
    
    public Integer index;
    public DestinyComponentsKiosksDestinyKioskItem withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
}
