"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import channelsectionlocalization as shared_channelsectionlocalization
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ChannelSectionSnippetStyleEnum(str, Enum):
    r"""The style of the channel section."""
    CHANNELSECTION_STYLE_UNSPECIFIED = 'channelsectionStyleUnspecified'
    HORIZONTAL_ROW = 'horizontalRow'
    VERTICAL_LIST = 'verticalList'

class ChannelSectionSnippetTypeEnum(str, Enum):
    r"""The type of the channel section."""
    CHANNELSECTION_TYPE_UNDEFINED = 'channelsectionTypeUndefined'
    SINGLE_PLAYLIST = 'singlePlaylist'
    MULTIPLE_PLAYLISTS = 'multiplePlaylists'
    POPULAR_UPLOADS = 'popularUploads'
    RECENT_UPLOADS = 'recentUploads'
    LIKES = 'likes'
    ALL_PLAYLISTS = 'allPlaylists'
    LIKED_PLAYLISTS = 'likedPlaylists'
    RECENT_POSTS = 'recentPosts'
    RECENT_ACTIVITY = 'recentActivity'
    LIVE_EVENTS = 'liveEvents'
    UPCOMING_EVENTS = 'upcomingEvents'
    COMPLETED_EVENTS = 'completedEvents'
    MULTIPLE_CHANNELS = 'multipleChannels'
    POSTED_VIDEOS = 'postedVideos'
    POSTED_PLAYLISTS = 'postedPlaylists'
    SUBSCRIPTIONS = 'subscriptions'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelSectionSnippet:
    r"""Basic details about a channel section, including title, style and position."""
    
    channel_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelId'), 'exclude': lambda f: f is None }})
    r"""The ID that YouTube uses to uniquely identify the channel that published the channel section."""  
    default_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultLanguage'), 'exclude': lambda f: f is None }})
    r"""The language of the channel section's default title and description."""  
    localized: Optional[shared_channelsectionlocalization.ChannelSectionLocalization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localized'), 'exclude': lambda f: f is None }})
    r"""ChannelSection localization setting"""  
    position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""The position of the channel section in the channel."""  
    style: Optional[ChannelSectionSnippetStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('style'), 'exclude': lambda f: f is None }})
    r"""The style of the channel section."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The channel section's title for multiple_playlists and multiple_channels."""  
    type: Optional[ChannelSectionSnippetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the channel section."""  
    