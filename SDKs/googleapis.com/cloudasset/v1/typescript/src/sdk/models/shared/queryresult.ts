/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TableSchema } from "./tableschema";
import { Expose, Type } from "class-transformer";

/**
 * Execution results of the query. The result is formatted as rows represented by BigQuery compatible [schema]. When pagination is necessary, it will contains the page token to retrieve the results of following pages.
 */
export class QueryResult extends SpeakeasyBase {
  /**
   * Token to retrieve the next page of the results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Each row hold a query result in the format of `Struct`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rows" })
  rows?: Record<string, any>[];

  /**
   * BigQuery Compatible table schema.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  @Type(() => TableSchema)
  schema?: TableSchema;

  /**
   * Total rows of the whole query results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalRows" })
  totalRows?: string;
}
