/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OAuth2PermissionGrant - The relevant app Service Principal Object Id and the Service Principal Object Id you want to grant.
 */
public class OAuth2PermissionGrant {
    /**
     * The id of the resource's service principal granted consent to impersonate the user when accessing the resource (represented by the resourceId property).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public OAuth2PermissionGrant withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Indicates if consent was provided by the administrator (on behalf of the organization) or by an individual.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consentType")
    public OAuth2PermissionGrantConsentTypeEnum consentType;
    public OAuth2PermissionGrant withConsentType(OAuth2PermissionGrantConsentTypeEnum consentType) {
        this.consentType = consentType;
        return this;
    }
    
    /**
     * Expiry time for TTL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiryTime")
    public String expiryTime;
    public OAuth2PermissionGrant withExpiryTime(String expiryTime) {
        this.expiryTime = expiryTime;
        return this;
    }
    
    /**
     * The id of the permission grant
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;
    public OAuth2PermissionGrant withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * Microsoft.DirectoryServices.OAuth2PermissionGrant
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("odata.type")
    public String odataType;
    public OAuth2PermissionGrant withOdataType(String odataType) {
        this.odataType = odataType;
        return this;
    }
    
    /**
     * When consent type is Principal, this property specifies the id of the user that granted consent and applies only for that user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principalId")
    public String principalId;
    public OAuth2PermissionGrant withPrincipalId(String principalId) {
        this.principalId = principalId;
        return this;
    }
    
    /**
     * Object Id of the resource you want to grant
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceId")
    public String resourceId;
    public OAuth2PermissionGrant withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    /**
     * Specifies the value of the scope claim that the resource application should expect in the OAuth 2.0 access token. For example, User.Read
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;
    public OAuth2PermissionGrant withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * Start time for TTL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;
    public OAuth2PermissionGrant withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
}
