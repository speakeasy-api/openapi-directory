/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TableInput - A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.
 */
public class TableInput {
    /**
     * The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnFamilies")
    public java.util.Map<String, ColumnFamily> columnFamilies;
    public TableInput withColumnFamilies(java.util.Map<String, ColumnFamily> columnFamilies) {
        this.columnFamilies = columnFamilies;
        return this;
    }
    
    /**
     * Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deletionProtection")
    public Boolean deletionProtection;
    public TableInput withDeletionProtection(Boolean deletionProtection) {
        this.deletionProtection = deletionProtection;
        return this;
    }
    
    /**
     * Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("granularity")
    public TableGranularityEnum granularity;
    public TableInput withGranularity(TableGranularityEnum granularity) {
        this.granularity = granularity;
        return this;
    }
    
    /**
     * The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TableInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Information about a table restore.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restoreInfo")
    public RestoreInfoInput restoreInfo;
    public TableInput withRestoreInfo(RestoreInfoInput restoreInfo) {
        this.restoreInfo = restoreInfo;
        return this;
    }
    
    /**
     * Approximate statistics related to a table. These statistics are calculated infrequently, while simultaneously, data in the table can change rapidly. Thus the values reported here (e.g. row count) are very likely out-of date, even the instant they are received in this API. Thus, only treat these values as approximate. IMPORTANT: Everything below is approximate, unless otherwise specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stats")
    public TableStats stats;
    public TableInput withStats(TableStats stats) {
        this.stats = stats;
        return this;
    }
    
}
