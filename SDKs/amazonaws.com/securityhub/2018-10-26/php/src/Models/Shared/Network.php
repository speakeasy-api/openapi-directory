<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Network - The details of network-related information about a finding.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Network
{
	#[\JMS\Serializer\Annotation\SerializedName('DestinationDomain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationDomain = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DestinationIpV4')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationIpV4 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DestinationIpV6')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationIpV6 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DestinationPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $destinationPort = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Direction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkDirectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkDirectionEnum $direction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OpenPortRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PortRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PortRange $openPortRange = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Protocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protocol = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SourceDomain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDomain = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SourceIpV4')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceIpV4 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SourceIpV6')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceIpV6 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SourceMac')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceMac = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SourcePort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sourcePort = null;
    
	public function __construct()
	{
		$this->destinationDomain = null;
		$this->destinationIpV4 = null;
		$this->destinationIpV6 = null;
		$this->destinationPort = null;
		$this->direction = null;
		$this->openPortRange = null;
		$this->protocol = null;
		$this->sourceDomain = null;
		$this->sourceIpV4 = null;
		$this->sourceIpV6 = null;
		$this->sourceMac = null;
		$this->sourcePort = null;
	}
}
