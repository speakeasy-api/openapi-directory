"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import experimentcloudwatchlogslogconfiguration as shared_experimentcloudwatchlogslogconfiguration
from ..shared import experiments3logconfiguration as shared_experiments3logconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExperimentLogConfiguration:
    r"""Describes the configuration for experiment logging."""
    
    cloud_watch_logs_configuration: Optional[shared_experimentcloudwatchlogslogconfiguration.ExperimentCloudWatchLogsLogConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudWatchLogsConfiguration'), 'exclude': lambda f: f is None }})  
    log_schema_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logSchemaVersion'), 'exclude': lambda f: f is None }})  
    s3_configuration: Optional[shared_experiments3logconfiguration.ExperimentS3LogConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3Configuration'), 'exclude': lambda f: f is None }})  
    