"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETActivateTypeResponse = exports.GETActivateTypeRequest = exports.GETActivateTypeVersionBumpEnum = exports.GETActivateTypeVersionEnum = exports.GETActivateTypeTypeEnum = exports.GETActivateTypeLoggingConfig = exports.GETActivateTypeActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETActivateTypeActionEnum;
(function (GETActivateTypeActionEnum) {
    GETActivateTypeActionEnum["ActivateType"] = "ActivateType";
})(GETActivateTypeActionEnum = exports.GETActivateTypeActionEnum || (exports.GETActivateTypeActionEnum = {}));
/**
 * Contains logging configuration information for an extension.
 */
var GETActivateTypeLoggingConfig = /** @class */ (function (_super) {
    __extends(GETActivateTypeLoggingConfig, _super);
    function GETActivateTypeLoggingConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=LogGroupName" }),
        __metadata("design:type", String)
    ], GETActivateTypeLoggingConfig.prototype, "logGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=LogRoleArn" }),
        __metadata("design:type", String)
    ], GETActivateTypeLoggingConfig.prototype, "logRoleArn", void 0);
    return GETActivateTypeLoggingConfig;
}(utils_1.SpeakeasyBase));
exports.GETActivateTypeLoggingConfig = GETActivateTypeLoggingConfig;
/**
 * <p>The extension type.</p> <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
 */
var GETActivateTypeTypeEnum;
(function (GETActivateTypeTypeEnum) {
    GETActivateTypeTypeEnum["Resource"] = "RESOURCE";
    GETActivateTypeTypeEnum["Module"] = "MODULE";
    GETActivateTypeTypeEnum["Hook"] = "HOOK";
})(GETActivateTypeTypeEnum = exports.GETActivateTypeTypeEnum || (exports.GETActivateTypeTypeEnum = {}));
var GETActivateTypeVersionEnum;
(function (GETActivateTypeVersionEnum) {
    GETActivateTypeVersionEnum["TwoThousandAndTen0515"] = "2010-05-15";
})(GETActivateTypeVersionEnum = exports.GETActivateTypeVersionEnum || (exports.GETActivateTypeVersionEnum = {}));
/**
 * <p>Manually updates a previously-activated type to a new major or minor version, if available. You can also use this parameter to update the value of <code>AutoUpdate</code>.</p> <ul> <li> <p> <code>MAJOR</code>: CloudFormation updates the extension to the newest major version, if one is available.</p> </li> <li> <p> <code>MINOR</code>: CloudFormation updates the extension to the newest minor version, if one is available.</p> </li> </ul>
 */
var GETActivateTypeVersionBumpEnum;
(function (GETActivateTypeVersionBumpEnum) {
    GETActivateTypeVersionBumpEnum["Major"] = "MAJOR";
    GETActivateTypeVersionBumpEnum["Minor"] = "MINOR";
})(GETActivateTypeVersionBumpEnum = exports.GETActivateTypeVersionBumpEnum || (exports.GETActivateTypeVersionBumpEnum = {}));
var GETActivateTypeRequest = /** @class */ (function (_super) {
    __extends(GETActivateTypeRequest, _super);
    function GETActivateTypeRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=AutoUpdate",
        }),
        __metadata("design:type", Boolean)
    ], GETActivateTypeRequest.prototype, "autoUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ExecutionRoleArn",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "executionRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=LoggingConfig",
        }),
        __metadata("design:type", GETActivateTypeLoggingConfig)
    ], GETActivateTypeRequest.prototype, "loggingConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MajorVersion",
        }),
        __metadata("design:type", Number)
    ], GETActivateTypeRequest.prototype, "majorVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PublicTypeArn",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "publicTypeArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PublisherId",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "publisherId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=Type" }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=TypeName",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "typeName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=TypeNameAlias",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "typeNameAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=VersionBump",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "versionBump", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETActivateTypeRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETActivateTypeRequest;
}(utils_1.SpeakeasyBase));
exports.GETActivateTypeRequest = GETActivateTypeRequest;
var GETActivateTypeResponse = /** @class */ (function (_super) {
    __extends(GETActivateTypeResponse, _super);
    function GETActivateTypeResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETActivateTypeResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETActivateTypeResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETActivateTypeResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETActivateTypeResponse.prototype, "rawResponse", void 0);
    return GETActivateTypeResponse;
}(utils_1.SpeakeasyBase));
exports.GETActivateTypeResponse = GETActivateTypeResponse;
