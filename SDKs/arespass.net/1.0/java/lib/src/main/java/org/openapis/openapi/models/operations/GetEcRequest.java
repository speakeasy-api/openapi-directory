/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetEcRequest {
    /**
     * **The format of the returned analysis.**
     * 
     * Allowed values are *json*, *xml* and *yaml*.
     * 
     * The default value is *xml*.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=outputFormat")
    public String outputFormat;

    public GetEcRequest withOutputFormat(String outputFormat) {
        this.outputFormat = outputFormat;
        return this;
    }
    
    /**
     * **The password to be analyzed.**
     * 
     * Minimum length is 4 characters; maximum length is 128 characters.
     * 
     * Beware that certain characters like '&amp;#35;', '&amp;#61;' or '&amp;#63;' must be properly encoded.
     * 
     * For more information about this issue, please refer to RFC 3986 ("*Uniform Resource Identifier (URI): Generic Syntax*"), sections 2.1, 2.2 and 2.4.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=password")
    public String password;

    public GetEcRequest withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * **The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**
     * 
     * The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
     * 
     * The character used as decimal separator is always '&amp;#46;'. Hence, a parameter value like *0,33* would be illegal.
     * 
     * The default value is *0.25*.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=penalty")
    public Double penalty;

    public GetEcRequest withPenalty(Double penalty) {
        this.penalty = penalty;
        return this;
    }
    
    /**
     * **An identifier for this request.**
     * 
     * The request identifier is a string that must match the regular expression * /(?i)^[a-z0-9]{8,16}$/*.
     * 
     * This identifier is echoed in the returned response. Its value has no effect on the password analysis.
     * 
     * If this parameter is unset, a randomly generated identifier will be automatically assigned to this request.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=reqId")
    public String reqId;

    public GetEcRequest withReqId(String reqId) {
        this.reqId = reqId;
        return this;
    }
    
    public GetEcRequest(@JsonProperty("password") String password) {
        this.password = password;
  }
}
