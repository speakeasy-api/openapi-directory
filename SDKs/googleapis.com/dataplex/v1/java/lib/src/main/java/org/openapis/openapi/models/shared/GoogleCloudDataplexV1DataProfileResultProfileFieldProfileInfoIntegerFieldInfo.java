/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo - The profile information for an integer type field.
 */
public class GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo {
    /**
     * Average of non-null values in the scanned data. NaN, if the field has a NaN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("average")
    public Double average;

    public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo withAverage(Double average) {
        this.average = average;
        return this;
    }
    
    /**
     * Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max")
    public String max;

    public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo withMax(String max) {
        this.max = max;
        return this;
    }
    
    /**
     * Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("min")
    public String min;

    public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo withMin(String min) {
        this.min = min;
        return this;
    }
    
    /**
     * A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quartiles")
    public String[] quartiles;

    public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo withQuartiles(String[] quartiles) {
        this.quartiles = quartiles;
        return this;
    }
    
    /**
     * Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standardDeviation")
    public Double standardDeviation;

    public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo withStandardDeviation(Double standardDeviation) {
        this.standardDeviation = standardDeviation;
        return this;
    }
    
    public GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo(){}
}
