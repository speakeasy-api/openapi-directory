"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import individualoutcome as shared_individualoutcome
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PrimaryStepRollUpEnum(str, Enum):
    r"""Rollup test status of multiple steps that were run with the same configuration as a group."""
    UNSET = 'unset'
    SUCCESS = 'success'
    FAILURE = 'failure'
    INCONCLUSIVE = 'inconclusive'
    SKIPPED = 'skipped'
    FLAKY = 'flaky'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrimaryStep:
    r"""Stores rollup test status of multiple steps that were run as a group and outcome of each individual step."""
    
    individual_outcome: Optional[list[shared_individualoutcome.IndividualOutcome]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individualOutcome'), 'exclude': lambda f: f is None }})
    r"""Step Id and outcome of each individual step."""  
    roll_up: Optional[PrimaryStepRollUpEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rollUp'), 'exclude': lambda f: f is None }})
    r"""Rollup test status of multiple steps that were run with the same configuration as a group."""  
    