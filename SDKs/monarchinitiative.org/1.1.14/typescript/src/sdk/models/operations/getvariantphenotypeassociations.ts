/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetVariantPhenotypeAssociationsRequest extends SpeakeasyBase {
  /**
   * Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direct",
  })
  direct?: boolean;

  /**
   * Set true to exclude inferred taxa
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direct_taxon",
  })
  directTaxon?: boolean;

  /**
   * Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=evidence",
  })
  evidence?: string;

  /**
   * If true, excludes associations that involve IEAs (ECO:0000501)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=exclude_automatic_assertions",
  })
  excludeAutomaticAssertions?: boolean;

  /**
   * Enable faceting
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=facet" })
  facet?: boolean;

  /**
   * Fields to facet on
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=facet_fields",
  })
  facetFields?: string[];

  /**
   * If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fetch_objects",
  })
  fetchObjects?: boolean;

  /**
   * CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Query string to filter documents
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   * A relation CURIE to filter associations
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=relation",
  })
  relation?: string;

  /**
   * number of rows
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=rows" })
  rows?: number;

  /**
   * Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=slim" })
  slim?: string[];

  /**
   * Sorting responses <field> <desc,asc>
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * beginning row
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=start" })
  start?: number;

  /**
   * One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=taxon" })
  taxon?: string[];

  /**
   * If true, excludes evidence objects in response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=unselect_evidence",
  })
  unselectEvidence?: boolean;

  /**
   * If true, returns results in compact associations format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=use_compact_associations",
  })
  useCompactAssociations?: boolean;
}

export class GetVariantPhenotypeAssociationsResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata()
  associationResults?: shared.AssociationResults;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
