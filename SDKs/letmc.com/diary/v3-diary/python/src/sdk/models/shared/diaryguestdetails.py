"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DiaryGuestDetails:
    r"""Submission Model - Structure to submit appointment guest details"""
    
    allow_marketing_correspondence: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowMarketingCorrespondence'), 'exclude': lambda f: f is None }})
    r"""Marketing Correspondence Preferences"""  
    email_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmailAddress'), 'exclude': lambda f: f is None }})
    r"""Email address"""  
    forename: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Forename'), 'exclude': lambda f: f is None }})
    r"""Forename"""  
    mobile_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MobilePhone'), 'exclude': lambda f: f is None }})
    r"""Mobile phone"""  
    oid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OID'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of a user, only submit this is known"""  
    surname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Surname'), 'exclude': lambda f: f is None }})
    r"""Surname"""  
    