// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// EstimationDetailsAPIModelStatusEnum - Indicate the status of the estimation (paid/unpaid/overdue)
type EstimationDetailsAPIModelStatusEnum string

const (
	EstimationDetailsAPIModelStatusEnumDraft    EstimationDetailsAPIModelStatusEnum = "Draft"
	EstimationDetailsAPIModelStatusEnumAccepted EstimationDetailsAPIModelStatusEnum = "Accepted"
	EstimationDetailsAPIModelStatusEnumRejected EstimationDetailsAPIModelStatusEnum = "Rejected"
)

func (e *EstimationDetailsAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Accepted":
		fallthrough
	case "Rejected":
		*e = EstimationDetailsAPIModelStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EstimationDetailsAPIModelStatusEnum: %s", s)
	}
}

type EstimationDetailsAPIModel struct {
	// Security access token used for accessing the estimation anonymously
	AccessToken *string                `json:"AccessToken,omitempty"`
	Client      *ClientDetailsAPIModel `json:"Client,omitempty"`
	// Indicate from which estimation this estimation has been cloned from
	ClonedFromID *int                     `json:"ClonedFromId,omitempty"`
	Currency     *CurrencyDetailsAPIModel `json:"Currency,omitempty"`
	// Amount that goes as a discount
	DiscountAmount *float64 `json:"DiscountAmount,omitempty"`
	// Indicates when the estimation will be proclamed as due
	ExpiresOn *time.Time `json:"ExpiresOn,omitempty"`
	// Estimation id
	ID *int `json:"Id,omitempty"`
	// Indicates when the estimation was issued
	IssuedOn *time.Time `json:"IssuedOn,omitempty"`
	// Internal note regarding the estimation
	Notes *string `json:"Notes,omitempty"`
	// Unique estimation number
	Number *string `json:"Number,omitempty"`
	// Unique number generated by the buyer
	PoNumber *string `json:"PoNumber,omitempty"`
	// Indicate the status of the estimation (paid/unpaid/overdue)
	Status *EstimationDetailsAPIModelStatusEnum `json:"Status,omitempty"`
	// Total amount of the estimation without tax
	SubTotalAmount *float64 `json:"SubTotalAmount,omitempty"`
	// Amount that goes to the tax
	TaxAmount *float64 `json:"TaxAmount,omitempty"`
	// Terms of agreement
	Terms *string `json:"Terms,omitempty"`
	// Total amount of the estimation with tax
	TotalAmount *float64 `json:"TotalAmount,omitempty"`
}
