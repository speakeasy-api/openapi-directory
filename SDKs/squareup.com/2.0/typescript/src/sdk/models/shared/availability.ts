/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppointmentSegment } from "./appointmentsegment";
import { Expose, Type } from "class-transformer";

/**
 * Describes a slot available for booking, encapsulating appointment segments, the location and starting time.
 */
export class Availability extends SpeakeasyBase {
  /**
   * The list of appointment segments available for booking
   */
  @SpeakeasyMetadata({ elemType: AppointmentSegment })
  @Expose({ name: "appointment_segments" })
  @Type(() => AppointmentSegment)
  appointmentSegments?: AppointmentSegment[];

  /**
   * The ID of the location available for booking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * The RFC 3339 timestamp specifying the beginning time of the slot available for booking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_at" })
  startAt?: string;
}
