"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from ..shared import links_importation_getimportationmonitoringlink as shared_links_importation_getimportationmonitoringlink
from typing import Optional


@dataclasses.dataclass
class AutoStartAutoImportRequest:
    
    store_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'storeId', 'style': 'simple', 'explode': False }})
    r"""Your store identifier"""  
    

@dataclasses.dataclass
class AutoStartAutoImportResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""Occurs when the catalog auto import is not configured.
    When a user column name is duplicate.
    When the catalog column name are duplicate.
    When the BeezUP column have duplicate mapping.
    Occurs when the required beezup column is not mapped to any column.
    Occurs when the category hierarchy is not correctly mapped.
    Occurs when the duplicate strategy on {catalogColumnName} is not found.
    When the user tries to import to ofen the catalog file to download count max limit has been reached.
    """  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    links_importation_get_importation_monitoring_link: Optional[shared_links_importation_getimportationmonitoringlink.LinksImportationGetImportationMonitoringLink] = dataclasses.field(default=None)
    r"""Catalog importation started"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    