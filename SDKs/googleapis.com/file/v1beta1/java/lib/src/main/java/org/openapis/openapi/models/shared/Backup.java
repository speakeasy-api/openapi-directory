/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Backup - A Filestore backup.
 */
public class Backup {
    /**
     * Output only. Capacity of the source file share when the backup was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capacityGb")
    public String capacityGb;
    public Backup withCapacityGb(String capacityGb) {
        this.capacityGb = capacityGb;
        return this;
    }
    
    /**
     * Output only. The time when the backup was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Backup withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Backup withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. Amount of bytes that will be downloaded if the backup is restored
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downloadBytes")
    public String downloadBytes;
    public Backup withDownloadBytes(String downloadBytes) {
        this.downloadBytes = downloadBytes;
        return this;
    }
    
    /**
     * Immutable. KMS key name used for data encryption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyName")
    public String kmsKeyName;
    public Backup withKmsKeyName(String kmsKeyName) {
        this.kmsKeyName = kmsKeyName;
        return this;
    }
    
    /**
     * Resource labels to represent user provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Backup withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The resource name of the backup, in the format `projects/{project_id}/locations/{location_id}/backups/{backup_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Backup withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public Backup withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * Name of the file share in the source Filestore instance that the backup is created from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceFileShare")
    public String sourceFileShare;
    public Backup withSourceFileShare(String sourceFileShare) {
        this.sourceFileShare = sourceFileShare;
        return this;
    }
    
    /**
     * The resource name of the source Filestore instance, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}`, used to create this backup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceInstance")
    public String sourceInstance;
    public Backup withSourceInstance(String sourceInstance) {
        this.sourceInstance = sourceInstance;
        return this;
    }
    
    /**
     * Output only. The service tier of the source Filestore instance that this backup is created from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceInstanceTier")
    public BackupSourceInstanceTierEnum sourceInstanceTier;
    public Backup withSourceInstanceTier(BackupSourceInstanceTierEnum sourceInstanceTier) {
        this.sourceInstanceTier = sourceInstanceTier;
        return this;
    }
    
    /**
     * Output only. The backup state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public BackupStateEnum state;
    public Backup withState(BackupStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The size of the storage used by the backup. As backups share storage, this number is expected to change with backup creation/deletion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageBytes")
    public String storageBytes;
    public Backup withStorageBytes(String storageBytes) {
        this.storageBytes = storageBytes;
        return this;
    }
    
}
