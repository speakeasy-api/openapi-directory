/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostVolumesCreateVolumeRequest {
    /**
     * Auto-mount Volume after attach. `server` must be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automount")
    public Boolean automount;
    public PostVolumesCreateVolumeRequest withAutomount(Boolean automount) {
        this.automount = automount;
        return this;
    }
    
    /**
     * Format Volume after creation. One of: `xfs`, `ext4`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    public String format;
    public PostVolumesCreateVolumeRequest withFormat(String format) {
        this.format = format;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, Object> labels;
    public PostVolumesCreateVolumeRequest withLabels(java.util.Map<String, Object> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Location to create the Volume in (can be omitted if Server is specified)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public PostVolumesCreateVolumeRequest withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Name of the volume
     */
    @JsonProperty("name")
    public String name;
    public PostVolumesCreateVolumeRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Server to which to attach the Volume once it's created (Volume will be created in the same Location as the server)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("server")
    public Long server;
    public PostVolumesCreateVolumeRequest withServer(Long server) {
        this.server = server;
        return this;
    }
    
    /**
     * Size of the Volume in GB
     */
    @JsonProperty("size")
    public Long size;
    public PostVolumesCreateVolumeRequest withSize(Long size) {
        this.size = size;
        return this;
    }
    
}
