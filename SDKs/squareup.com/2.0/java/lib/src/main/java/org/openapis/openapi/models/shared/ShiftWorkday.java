/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ShiftWorkday - A `Shift` search query filter parameter that sets a range of days that
 * a `Shift` must start or end in before passing the filter condition.
 */
public class ShiftWorkday {
    /**
     * A range defined by two dates. Used for filtering a query for Connect v2
     * objects that have date properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_range")
    public DateRange dateRange;
    public ShiftWorkday withDateRange(DateRange dateRange) {
        this.dateRange = dateRange;
        return this;
    }
    
    /**
     * Location-specific timezones convert workdays to datetime filters.
     * Every location included in the query must have a timezone or this field
     * must be provided as a fallback. Format: the IANA timezone database
     * identifier for the relevant timezone.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_timezone")
    public String defaultTimezone;
    public ShiftWorkday withDefaultTimezone(String defaultTimezone) {
        this.defaultTimezone = defaultTimezone;
        return this;
    }
    
    /**
     * The strategy on which the dates are applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("match_shifts_by")
    public String matchShiftsBy;
    public ShiftWorkday withMatchShiftsBy(String matchShiftsBy) {
        this.matchShiftsBy = matchShiftsBy;
        return this;
    }
    
}
