// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type PhoneUserVoiceMailsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type PhoneUserVoiceMailsPathParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

// PhoneUserVoiceMailsStatusEnum - Status of the voice mail
type PhoneUserVoiceMailsStatusEnum string

const (
	PhoneUserVoiceMailsStatusEnumAll    PhoneUserVoiceMailsStatusEnum = "all"
	PhoneUserVoiceMailsStatusEnumRead   PhoneUserVoiceMailsStatusEnum = "read"
	PhoneUserVoiceMailsStatusEnumUnread PhoneUserVoiceMailsStatusEnum = "unread"
)

func (e *PhoneUserVoiceMailsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "read":
		fallthrough
	case "unread":
		*e = PhoneUserVoiceMailsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUserVoiceMailsStatusEnum: %s", s)
	}
}

type PhoneUserVoiceMailsQueryParams struct {
	// Start date for the query in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the response includes only one month worth of voicemail data. The month defined should fall within the last six months.
	From *types.Date `queryParam:"style=form,explode=true,name=from"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Status of the voice mail
	Status *PhoneUserVoiceMailsStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
}

type PhoneUserVoiceMailsRequest struct {
	PathParams  PhoneUserVoiceMailsPathParams
	QueryParams PhoneUserVoiceMailsQueryParams
	Security    PhoneUserVoiceMailsSecurity
}

// PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum - Status of the voice mail. Can be either 'read' or 'unread'
type PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum string

const (
	PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnumRead   PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum = "read"
	PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnumUnread PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum = "unread"
)

func (e *PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "unread":
		*e = PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum: %s", s)
	}
}

type PhoneUserVoiceMails200ApplicationXMLVoiceMails struct {
	// Contact name of callee
	CalleeName *string
	// Number of callee
	CalleeNumber *string
	// Type of callee's number. 1 - internal | 2 - external
	CalleeNumberType *string
	// Contact name of caller
	CallerName *string
	// Number of caller
	CallerNumber *string
	// Type of caller's number. 1 - internal | 2 - external
	CallerNumberType *string
	// Date the voice mail started
	DateTime *string
	// Download url of attachment
	DownloadURL *string
	// Duration of the voice mail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds.
	Duration *string
	// Id of voice mail
	ID *string
	// Status of the voice mail. Can be either 'read' or 'unread'
	Status *PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum
}

// PhoneUserVoiceMails200ApplicationXML - Phone User Voice Mails
type PhoneUserVoiceMails200ApplicationXML struct {
	// Start date for the query.
	From *types.Date
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// Total number of page
	PageCount *int64
	// Size of each page
	PageSize *int64
	// End date.
	To *types.Date
	// Total number of records
	TotalRecords *int64
	// Voice Mails
	VoiceMails []PhoneUserVoiceMails200ApplicationXMLVoiceMails
}

// PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum - Status of the voice mail. Can be either 'read' or 'unread'
type PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum string

const (
	PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnumRead   PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum = "read"
	PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnumUnread PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum = "unread"
)

func (e *PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "unread":
		*e = PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum: %s", s)
	}
}

type PhoneUserVoiceMails200ApplicationJSONVoiceMails struct {
	// Contact name of callee
	CalleeName *string `json:"callee_name,omitempty"`
	// Number of callee
	CalleeNumber *string `json:"callee_number,omitempty"`
	// Type of callee's number. 1 - internal | 2 - external
	CalleeNumberType *string `json:"callee_number_type,omitempty"`
	// Contact name of caller
	CallerName *string `json:"caller_name,omitempty"`
	// Number of caller
	CallerNumber *string `json:"caller_number,omitempty"`
	// Type of caller's number. 1 - internal | 2 - external
	CallerNumberType *string `json:"caller_number_type,omitempty"`
	// Date the voice mail started
	DateTime *string `json:"date_time,omitempty"`
	// Download url of attachment
	DownloadURL *string `json:"download_url,omitempty"`
	// Duration of the voice mail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds.
	Duration *string `json:"duration,omitempty"`
	// Id of voice mail
	ID *string `json:"id,omitempty"`
	// Status of the voice mail. Can be either 'read' or 'unread'
	Status *PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum `json:"status,omitempty"`
}

// PhoneUserVoiceMails200ApplicationJSON - Phone User Voice Mails
type PhoneUserVoiceMails200ApplicationJSON struct {
	// Start date for the query.
	From *types.Date `json:"from,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// Total number of page
	PageCount *int64 `json:"page_count,omitempty"`
	// Size of each page
	PageSize *int64 `json:"page_size,omitempty"`
	// End date.
	To *types.Date `json:"to,omitempty"`
	// Total number of records
	TotalRecords *int64 `json:"total_records,omitempty"`
	// Voice Mails
	VoiceMails []PhoneUserVoiceMails200ApplicationJSONVoiceMails `json:"voice_mails,omitempty"`
}

type PhoneUserVoiceMailsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// User object returned.
	PhoneUserVoiceMails200ApplicationJSONObject *PhoneUserVoiceMails200ApplicationJSON
}
