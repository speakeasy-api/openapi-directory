/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The state of the milestone.
 */
export enum MilestoneStateEnum {
  Open = "open",
  Closed = "closed",
}

/**
 * A collection of related issues and pull requests.
 */
export class Milestone extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  closedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "closed_issues" })
  closedIssues: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => NullableSimpleUser)
  creator: NullableSimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "due_on" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueOn: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "labels_url" })
  labelsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * The number of the milestone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: number;

  @SpeakeasyMetadata()
  @Expose({ name: "open_issues" })
  openIssues: number;

  /**
   * The state of the milestone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: MilestoneStateEnum;

  /**
   * The title of the milestone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
