/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class DeviceRegistrationWindow extends SpeakeasyBase {
  /**
   * The end date of the current period.
   *
   * @remarks
   *
   * This is based on the value of `startDate` plus the number of days defined by  `periodDays`.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate: Date;

  /**
   * The maximum de/registrations that can be made in a period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit: number;

  /**
   * The number of days a de/registration period runs for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodDays" })
  periodDays: number;

  /**
   * The remaining de/registrations that can be made in the current period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remaining" })
  remaining: number;

  /**
   * The start date of the current period.
   *
   * @remarks
   *
   * This is based on the earliest device de/registrations in the past N days, where
   * N is defined by `periodDays`.
   *
   * If no device has been de/registered then start date will be from the current date.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate: Date;
}
