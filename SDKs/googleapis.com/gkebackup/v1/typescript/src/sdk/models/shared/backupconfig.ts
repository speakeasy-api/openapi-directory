/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionKey } from "./encryptionkey";
import { NamespacedNames } from "./namespacednames";
import { Namespaces } from "./namespaces";
import { Expose, Type } from "class-transformer";

/**
 * BackupConfig defines the configuration of Backups created via this BackupPlan.
 */
export class BackupConfig extends SpeakeasyBase {
  /**
   * If True, include all namespaced resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allNamespaces" })
  allNamespaces?: boolean;

  /**
   * Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  @Type(() => EncryptionKey)
  encryptionKey?: EncryptionKey;

  /**
   * This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeSecrets" })
  includeSecrets?: boolean;

  /**
   * This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeVolumeData" })
  includeVolumeData?: boolean;

  /**
   * A list of namespaced Kubernetes resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedApplications" })
  @Type(() => NamespacedNames)
  selectedApplications?: NamespacedNames;

  /**
   * A list of Kubernetes Namespaces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedNamespaces" })
  @Type(() => Namespaces)
  selectedNamespaces?: Namespaces;
}
