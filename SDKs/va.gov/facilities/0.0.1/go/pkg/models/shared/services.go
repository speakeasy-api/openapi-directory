// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

type ServicesBenefitsEnum string

const (
	ServicesBenefitsEnumApplyingForBenefits                             ServicesBenefitsEnum = "ApplyingForBenefits"
	ServicesBenefitsEnumBurialClaimAssistance                           ServicesBenefitsEnum = "BurialClaimAssistance"
	ServicesBenefitsEnumDisabilityClaimAssistance                       ServicesBenefitsEnum = "DisabilityClaimAssistance"
	ServicesBenefitsEnumEBenefitsRegistrationAssistance                 ServicesBenefitsEnum = "eBenefitsRegistrationAssistance"
	ServicesBenefitsEnumEducationAndCareerCounseling                    ServicesBenefitsEnum = "EducationAndCareerCounseling"
	ServicesBenefitsEnumEducationClaimAssistance                        ServicesBenefitsEnum = "EducationClaimAssistance"
	ServicesBenefitsEnumFamilyMemberClaimAssistance                     ServicesBenefitsEnum = "FamilyMemberClaimAssistance"
	ServicesBenefitsEnumHomelessAssistance                              ServicesBenefitsEnum = "HomelessAssistance"
	ServicesBenefitsEnumInsuranceClaimAssistanceAndFinancialCounseling  ServicesBenefitsEnum = "InsuranceClaimAssistanceAndFinancialCounseling"
	ServicesBenefitsEnumIntegratedDisabilityEvaluationSystemAssistance  ServicesBenefitsEnum = "IntegratedDisabilityEvaluationSystemAssistance"
	ServicesBenefitsEnumPensions                                        ServicesBenefitsEnum = "Pensions"
	ServicesBenefitsEnumPreDischargeClaimAssistance                     ServicesBenefitsEnum = "PreDischargeClaimAssistance"
	ServicesBenefitsEnumTransitionAssistance                            ServicesBenefitsEnum = "TransitionAssistance"
	ServicesBenefitsEnumUpdatingDirectDepositInformation                ServicesBenefitsEnum = "UpdatingDirectDepositInformation"
	ServicesBenefitsEnumVaHomeLoanAssistance                            ServicesBenefitsEnum = "VAHomeLoanAssistance"
	ServicesBenefitsEnumVocationalRehabilitationAndEmploymentAssistance ServicesBenefitsEnum = "VocationalRehabilitationAndEmploymentAssistance"
)

func (e *ServicesBenefitsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ApplyingForBenefits":
		fallthrough
	case "BurialClaimAssistance":
		fallthrough
	case "DisabilityClaimAssistance":
		fallthrough
	case "eBenefitsRegistrationAssistance":
		fallthrough
	case "EducationAndCareerCounseling":
		fallthrough
	case "EducationClaimAssistance":
		fallthrough
	case "FamilyMemberClaimAssistance":
		fallthrough
	case "HomelessAssistance":
		fallthrough
	case "InsuranceClaimAssistanceAndFinancialCounseling":
		fallthrough
	case "IntegratedDisabilityEvaluationSystemAssistance":
		fallthrough
	case "Pensions":
		fallthrough
	case "PreDischargeClaimAssistance":
		fallthrough
	case "TransitionAssistance":
		fallthrough
	case "UpdatingDirectDepositInformation":
		fallthrough
	case "VAHomeLoanAssistance":
		fallthrough
	case "VocationalRehabilitationAndEmploymentAssistance":
		*e = ServicesBenefitsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServicesBenefitsEnum: %s", s)
	}
}

type ServicesHealthEnum string

const (
	ServicesHealthEnumAudiology        ServicesHealthEnum = "Audiology"
	ServicesHealthEnumCardiology       ServicesHealthEnum = "Cardiology"
	ServicesHealthEnumCaregiverSupport ServicesHealthEnum = "CaregiverSupport"
	ServicesHealthEnumCovid19Vaccine   ServicesHealthEnum = "Covid19Vaccine"
	ServicesHealthEnumDentalServices   ServicesHealthEnum = "DentalServices"
	ServicesHealthEnumDermatology      ServicesHealthEnum = "Dermatology"
	ServicesHealthEnumEmergencyCare    ServicesHealthEnum = "EmergencyCare"
	ServicesHealthEnumGastroenterology ServicesHealthEnum = "Gastroenterology"
	ServicesHealthEnumGynecology       ServicesHealthEnum = "Gynecology"
	ServicesHealthEnumMentalHealthCare ServicesHealthEnum = "MentalHealthCare"
	ServicesHealthEnumOphthalmology    ServicesHealthEnum = "Ophthalmology"
	ServicesHealthEnumOptometry        ServicesHealthEnum = "Optometry"
	ServicesHealthEnumOrthopedics      ServicesHealthEnum = "Orthopedics"
	ServicesHealthEnumNutrition        ServicesHealthEnum = "Nutrition"
	ServicesHealthEnumPodiatry         ServicesHealthEnum = "Podiatry"
	ServicesHealthEnumPrimaryCare      ServicesHealthEnum = "PrimaryCare"
	ServicesHealthEnumSpecialtyCare    ServicesHealthEnum = "SpecialtyCare"
	ServicesHealthEnumUrgentCare       ServicesHealthEnum = "UrgentCare"
	ServicesHealthEnumUrology          ServicesHealthEnum = "Urology"
	ServicesHealthEnumWomensHealth     ServicesHealthEnum = "WomensHealth"
)

func (e *ServicesHealthEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Audiology":
		fallthrough
	case "Cardiology":
		fallthrough
	case "CaregiverSupport":
		fallthrough
	case "Covid19Vaccine":
		fallthrough
	case "DentalServices":
		fallthrough
	case "Dermatology":
		fallthrough
	case "EmergencyCare":
		fallthrough
	case "Gastroenterology":
		fallthrough
	case "Gynecology":
		fallthrough
	case "MentalHealthCare":
		fallthrough
	case "Ophthalmology":
		fallthrough
	case "Optometry":
		fallthrough
	case "Orthopedics":
		fallthrough
	case "Nutrition":
		fallthrough
	case "Podiatry":
		fallthrough
	case "PrimaryCare":
		fallthrough
	case "SpecialtyCare":
		fallthrough
	case "UrgentCare":
		fallthrough
	case "Urology":
		fallthrough
	case "WomensHealth":
		*e = ServicesHealthEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServicesHealthEnum: %s", s)
	}
}

type ServicesOtherEnum string

const (
	ServicesOtherEnumOnlineScheduling ServicesOtherEnum = "OnlineScheduling"
)

func (e *ServicesOtherEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OnlineScheduling":
		*e = ServicesOtherEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServicesOtherEnum: %s", s)
	}
}

type Services struct {
	Benefits    []ServicesBenefitsEnum `json:"benefits,omitempty"`
	Health      []ServicesHealthEnum   `json:"health,omitempty"`
	LastUpdated *types.Date            `json:"last_updated,omitempty"`
	Other       []ServicesOtherEnum    `json:"other,omitempty"`
}
