/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * How severe this issue is to the stream.
 */
export enum LiveStreamConfigurationIssueSeverityEnum {
  Info = "info",
  Warning = "warning",
  Error = "error",
}

/**
 * The kind of error happening.
 */
export enum LiveStreamConfigurationIssueTypeEnum {
  GopSizeOver = "gopSizeOver",
  GopSizeLong = "gopSizeLong",
  GopSizeShort = "gopSizeShort",
  OpenGop = "openGop",
  BadContainer = "badContainer",
  AudioBitrateHigh = "audioBitrateHigh",
  AudioBitrateLow = "audioBitrateLow",
  AudioSampleRate = "audioSampleRate",
  BitrateHigh = "bitrateHigh",
  BitrateLow = "bitrateLow",
  AudioCodec = "audioCodec",
  VideoCodec = "videoCodec",
  NoAudioStream = "noAudioStream",
  NoVideoStream = "noVideoStream",
  MultipleVideoStreams = "multipleVideoStreams",
  MultipleAudioStreams = "multipleAudioStreams",
  AudioTooManyChannels = "audioTooManyChannels",
  InterlacedVideo = "interlacedVideo",
  FrameRateHigh = "frameRateHigh",
  ResolutionMismatch = "resolutionMismatch",
  VideoCodecMismatch = "videoCodecMismatch",
  VideoInterlaceMismatch = "videoInterlaceMismatch",
  VideoProfileMismatch = "videoProfileMismatch",
  VideoBitrateMismatch = "videoBitrateMismatch",
  FramerateMismatch = "framerateMismatch",
  GopMismatch = "gopMismatch",
  AudioSampleRateMismatch = "audioSampleRateMismatch",
  AudioStereoMismatch = "audioStereoMismatch",
  AudioCodecMismatch = "audioCodecMismatch",
  AudioBitrateMismatch = "audioBitrateMismatch",
  VideoResolutionSuboptimal = "videoResolutionSuboptimal",
  VideoResolutionUnsupported = "videoResolutionUnsupported",
  VideoIngestionStarved = "videoIngestionStarved",
  VideoIngestionFasterThanRealtime = "videoIngestionFasterThanRealtime",
}

export class LiveStreamConfigurationIssue extends SpeakeasyBase {
  /**
   * The long-form description of the issue and how to resolve it.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The short-form reason for this issue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * How severe this issue is to the stream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: LiveStreamConfigurationIssueSeverityEnum;

  /**
   * The kind of error happening.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: LiveStreamConfigurationIssueTypeEnum;
}
