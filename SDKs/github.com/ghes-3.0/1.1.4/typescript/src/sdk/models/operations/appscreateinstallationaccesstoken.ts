/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AppsCreateInstallationAccessTokenRequestBody extends SpeakeasyBase {
  /**
   * The permissions granted to the user-to-server access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => shared.AppPermissions)
  permissions?: shared.AppPermissions;

  /**
   * List of repository names that the token should have access to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repositories" })
  repositories?: string[];

  /**
   * List of repository IDs that the token should have access to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_ids" })
  repositoryIds?: number[];
}

export class AppsCreateInstallationAccessTokenRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: AppsCreateInstallationAccessTokenRequestBody;

  /**
   * installation_id parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=installation_id",
  })
  installationId: number;
}

/**
 * Preview header missing
 */
export class AppsCreateInstallationAccessToken415ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class AppsCreateInstallationAccessTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Preview header missing
   */
  @SpeakeasyMetadata()
  appsCreateInstallationAccessToken415ApplicationJSONObject?: AppsCreateInstallationAccessToken415ApplicationJSON;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  installationToken?: shared.InstallationToken;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
