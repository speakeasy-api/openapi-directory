/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum FollowUpClientManagementEnum {
  Manager = "manager",
  Adn = "adn",
  Null = "null",
}

export enum FollowUpInvitationStatusEnum {
  Null = "null",
  On = "on",
  Refused = "refused",
  Accepted = "accepted",
  Finished = "finished",
  Expired = "expired",
  WaitingForValidation = "waiting for validation",
}

export class FollowUpInvitation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlayerEnd" })
  playerEnd?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: FollowUpInvitationStatusEnum;
}

export enum FollowUpLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

export enum FollowUpPlayerEnum {
  Guest = "guest",
  Manager = "manager",
  Collaborator = "collaborator",
  Owner = "owner",
  Assistant = "assistant",
}

/**
 * the folder of a person
 */
export class FollowUp extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ArchivalDate" })
  archivalDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Class" })
  class?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientManagement" })
  clientManagement?: FollowUpClientManagementEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Invitation" })
  @Type(() => FollowUpInvitation)
  invitation?: FollowUpInvitation;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: FollowUpLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModificationDate" })
  modificationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Parent" })
  parent?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Player" })
  player?: FollowUpPlayerEnum;
}
