/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The dps messages' message status
 */
export enum DpsMessageDpsMessageMessageStatusEnum {
  Retrieved = "Retrieved",
  Applied = "Applied",
  Unresolved = "Unresolved",
  Ignored = "Ignored",
  Information = "Information",
}

export class DpsMessageDpsMessage extends SpeakeasyBase {
  /**
   * The dps messages' form type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FormType" })
  formType?: string;

  /**
   * The dps messages' issue date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IssueDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issueDate?: Date;

  /**
   * The dps messages' last updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  /**
   * The dps messages' message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  /**
   * The dps messages' message status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MessageStatus" })
  messageStatus?: DpsMessageDpsMessageMessageStatusEnum;

  /**
   * The dps messages' message type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MessageType" })
  messageType?: string;

  /**
   * The dps messages' processing result
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingResult" })
  processingResult?: string;

  /**
   * The dps messages' retrieve date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RetrieveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  retrieveDate?: Date;

  /**
   * The dps messages' sequence number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SequenceNumber" })
  sequenceNumber?: number;
}

/**
 * The dps message object.
 */
export class DpsMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DpsMessage" })
  @Type(() => DpsMessageDpsMessage)
  dpsMessage?: DpsMessageDpsMessage;
}
