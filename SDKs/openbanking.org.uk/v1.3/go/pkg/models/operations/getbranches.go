// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetBranchesRequest struct {
	// Used for conditional request, to retrieve data only if modified since a given date
	IfModifiedSince *string `header:"style=simple,explode=false,name=If-Modified-Since"`
	// Used for conditional request, to retrieve data only if the given Etag value does not match
	IfNoneMatch *string `header:"style=simple,explode=false,name=If-None-Match"`
}

// GetBranchesErrorObject - A standard error response.
type GetBranchesErrorObject struct {
	// Further details describing the error
	Description string `json:"description"`
	// This corresponds to the HTTP status code
	Status string `json:"status"`
	// A short title of the type of error
	Title string `json:"title"`
}

type GetBranches503ErrorObjectDescriptionEnum string

const (
	GetBranches503ErrorObjectDescriptionEnumTheServiceIsTemporarilyUnavailable GetBranches503ErrorObjectDescriptionEnum = "The service is temporarily unavailable."
)

func (e GetBranches503ErrorObjectDescriptionEnum) ToPointer() *GetBranches503ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetBranches503ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "The service is temporarily unavailable.":
		*e = GetBranches503ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches503ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetBranches503ErrorObjectStatusEnum string

const (
	GetBranches503ErrorObjectStatusEnumFiveHundredAndThree GetBranches503ErrorObjectStatusEnum = "503"
)

func (e GetBranches503ErrorObjectStatusEnum) ToPointer() *GetBranches503ErrorObjectStatusEnum {
	return &e
}

func (e *GetBranches503ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "503":
		*e = GetBranches503ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches503ErrorObjectStatusEnum: %v", v)
	}
}

type GetBranches503ErrorObjectTitleEnum string

const (
	GetBranches503ErrorObjectTitleEnumServiceTemporarilyUnavailable GetBranches503ErrorObjectTitleEnum = "Service temporarily unavailable"
)

func (e GetBranches503ErrorObjectTitleEnum) ToPointer() *GetBranches503ErrorObjectTitleEnum {
	return &e
}

func (e *GetBranches503ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Service temporarily unavailable":
		*e = GetBranches503ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches503ErrorObjectTitleEnum: %v", v)
	}
}

// GetBranches503ErrorObject - The service is temporarily unavailable.
type GetBranches503ErrorObject struct {
	Description GetBranches503ErrorObjectDescriptionEnum `json:"description"`
	Status      GetBranches503ErrorObjectStatusEnum      `json:"status"`
	Title       GetBranches503ErrorObjectTitleEnum       `json:"title"`
}

type GetBranches500ErrorObjectDescriptionEnum string

const (
	GetBranches500ErrorObjectDescriptionEnumAnErrorOccurredOnTheServerNoFurtherInformationIsAvailable GetBranches500ErrorObjectDescriptionEnum = "An error occurred on the server. No further information is available."
)

func (e GetBranches500ErrorObjectDescriptionEnum) ToPointer() *GetBranches500ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetBranches500ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "An error occurred on the server. No further information is available.":
		*e = GetBranches500ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches500ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetBranches500ErrorObjectStatusEnum string

const (
	GetBranches500ErrorObjectStatusEnumFiveHundred GetBranches500ErrorObjectStatusEnum = "500"
)

func (e GetBranches500ErrorObjectStatusEnum) ToPointer() *GetBranches500ErrorObjectStatusEnum {
	return &e
}

func (e *GetBranches500ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "500":
		*e = GetBranches500ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches500ErrorObjectStatusEnum: %v", v)
	}
}

type GetBranches500ErrorObjectTitleEnum string

const (
	GetBranches500ErrorObjectTitleEnumInternalServerError GetBranches500ErrorObjectTitleEnum = "Internal server error"
)

func (e GetBranches500ErrorObjectTitleEnum) ToPointer() *GetBranches500ErrorObjectTitleEnum {
	return &e
}

func (e *GetBranches500ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Internal server error":
		*e = GetBranches500ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches500ErrorObjectTitleEnum: %v", v)
	}
}

// GetBranches500ErrorObject - An error occurred on the server. No further information is available.
type GetBranches500ErrorObject struct {
	Description GetBranches500ErrorObjectDescriptionEnum `json:"description"`
	Status      GetBranches500ErrorObjectStatusEnum      `json:"status"`
	Title       GetBranches500ErrorObjectTitleEnum       `json:"title"`
}

type GetBranches429ErrorObjectDescriptionEnum string

const (
	GetBranches429ErrorObjectDescriptionEnumYouHaveRequestedThisResourceTooOftenSlowDown GetBranches429ErrorObjectDescriptionEnum = "You have requested this resource too often. Slow down."
)

func (e GetBranches429ErrorObjectDescriptionEnum) ToPointer() *GetBranches429ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetBranches429ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "You have requested this resource too often. Slow down.":
		*e = GetBranches429ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches429ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetBranches429ErrorObjectStatusEnum string

const (
	GetBranches429ErrorObjectStatusEnumFourHundredAndTwentyNine GetBranches429ErrorObjectStatusEnum = "429"
)

func (e GetBranches429ErrorObjectStatusEnum) ToPointer() *GetBranches429ErrorObjectStatusEnum {
	return &e
}

func (e *GetBranches429ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "429":
		*e = GetBranches429ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches429ErrorObjectStatusEnum: %v", v)
	}
}

type GetBranches429ErrorObjectTitleEnum string

const (
	GetBranches429ErrorObjectTitleEnumTooManyRequests GetBranches429ErrorObjectTitleEnum = "Too many requests"
)

func (e GetBranches429ErrorObjectTitleEnum) ToPointer() *GetBranches429ErrorObjectTitleEnum {
	return &e
}

func (e *GetBranches429ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Too many requests":
		*e = GetBranches429ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches429ErrorObjectTitleEnum: %v", v)
	}
}

// GetBranches429ErrorObject - You have requested this resource too often. Slow down.
type GetBranches429ErrorObject struct {
	Description GetBranches429ErrorObjectDescriptionEnum `json:"description"`
	Status      GetBranches429ErrorObjectStatusEnum      `json:"status"`
	Title       GetBranches429ErrorObjectTitleEnum       `json:"title"`
}

type GetBranches408ErrorObjectDescriptionEnum string

const (
	GetBranches408ErrorObjectDescriptionEnumYourClientHasFailedToSubmitARequestAndATimeoutHasOccurred GetBranches408ErrorObjectDescriptionEnum = "Your client has failed to submit a request, and a timeout has occurred."
)

func (e GetBranches408ErrorObjectDescriptionEnum) ToPointer() *GetBranches408ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetBranches408ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Your client has failed to submit a request, and a timeout has occurred.":
		*e = GetBranches408ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches408ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetBranches408ErrorObjectStatusEnum string

const (
	GetBranches408ErrorObjectStatusEnumFourHundredAndEight GetBranches408ErrorObjectStatusEnum = "408"
)

func (e GetBranches408ErrorObjectStatusEnum) ToPointer() *GetBranches408ErrorObjectStatusEnum {
	return &e
}

func (e *GetBranches408ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "408":
		*e = GetBranches408ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches408ErrorObjectStatusEnum: %v", v)
	}
}

type GetBranches408ErrorObjectTitleEnum string

const (
	GetBranches408ErrorObjectTitleEnumClientTimeout GetBranches408ErrorObjectTitleEnum = "Client timeout"
)

func (e GetBranches408ErrorObjectTitleEnum) ToPointer() *GetBranches408ErrorObjectTitleEnum {
	return &e
}

func (e *GetBranches408ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client timeout":
		*e = GetBranches408ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches408ErrorObjectTitleEnum: %v", v)
	}
}

// GetBranches408ErrorObject - Your client has failed to submit a request, and a timeout has occurred.
type GetBranches408ErrorObject struct {
	Description GetBranches408ErrorObjectDescriptionEnum `json:"description"`
	Status      GetBranches408ErrorObjectStatusEnum      `json:"status"`
	Title       GetBranches408ErrorObjectTitleEnum       `json:"title"`
}

type GetBranches400ErrorObjectDescriptionEnum string

const (
	GetBranches400ErrorObjectDescriptionEnumYouHaveSentARequestWhichCouldNotBeUnderstood GetBranches400ErrorObjectDescriptionEnum = "You have sent a request which could not be understood."
)

func (e GetBranches400ErrorObjectDescriptionEnum) ToPointer() *GetBranches400ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetBranches400ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "You have sent a request which could not be understood.":
		*e = GetBranches400ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches400ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetBranches400ErrorObjectStatusEnum string

const (
	GetBranches400ErrorObjectStatusEnumFourHundred GetBranches400ErrorObjectStatusEnum = "400"
)

func (e GetBranches400ErrorObjectStatusEnum) ToPointer() *GetBranches400ErrorObjectStatusEnum {
	return &e
}

func (e *GetBranches400ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "400":
		*e = GetBranches400ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches400ErrorObjectStatusEnum: %v", v)
	}
}

type GetBranches400ErrorObjectTitleEnum string

const (
	GetBranches400ErrorObjectTitleEnumBadRequest GetBranches400ErrorObjectTitleEnum = "Bad request"
)

func (e GetBranches400ErrorObjectTitleEnum) ToPointer() *GetBranches400ErrorObjectTitleEnum {
	return &e
}

func (e *GetBranches400ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Bad request":
		*e = GetBranches400ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches400ErrorObjectTitleEnum: %v", v)
	}
}

// GetBranches400ErrorObject - You have sent a request which could not be understood.
type GetBranches400ErrorObject struct {
	Description GetBranches400ErrorObjectDescriptionEnum `json:"description"`
	Status      GetBranches400ErrorObjectStatusEnum      `json:"status"`
	Title       GetBranches400ErrorObjectTitleEnum       `json:"title"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum - Information about the accessibility
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumAudioCashMachine  GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "AudioCashMachine"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumAutomaticDoors    GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "AutomaticDoors"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumChairAccess       GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "ChairAccess"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumDriveThru         GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "DriveThru"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumExternalRamp      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "ExternalRamp"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumInductionLoop     GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "InductionLoop"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumInternalRamp      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "InternalRamp"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumLevelAccess       GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "LevelAccess"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumLowerLevelCounter GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "LowerLevelCounter"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnumWheelchairAccess  GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum = "WheelchairAccess"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AudioCashMachine":
		fallthrough
	case "AutomaticDoors":
		fallthrough
	case "ChairAccess":
		fallthrough
	case "DriveThru":
		fallthrough
	case "ExternalRamp":
		fallthrough
	case "InductionLoop":
		fallthrough
	case "InternalRamp":
		fallthrough
	case "LevelAccess":
		fallthrough
	case "LowerLevelCounter":
		fallthrough
	case "WheelchairAccess":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAddress - Postal Address
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAddress struct {
	// Number or Name that identifies the position of a building on a street
	BuildingNumberOrName *string `json:"BuildingNumberOrName,omitempty"`
	// Nation with its own government
	Country string `json:"Country"`
	// Identifies a subdivision of a country such as state, region, county
	CountrySubDivision *string `json:"CountrySubDivision,omitempty"`
	// Directions for customers
	OptionalAddressField *string `json:"OptionalAddressField,omitempty"`
	// Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail
	PostCode *string `json:"PostCode,omitempty"`
	// Name of a street or thoroughfare
	StreetName *string `json:"StreetName,omitempty"`
	// Name of a built-up area, with defined boundaries, and a local government
	TownName *string `json:"TownName,omitempty"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAlternatePhone - Alternative Phone Number
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAlternatePhone struct {
	// Collection of information that identifies a phone number, as defined by telecom services.
	AlternateTelephoneNumber *string `json:"AlternateTelephoneNumber,omitempty"`
	// Description of the telephone number
	AlternateTelephoneNumberDescription *string `json:"AlternateTelephoneNumberDescription,omitempty"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum - Information about branch facilities
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnumBusinessItSupport GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum = "BusinessITSupport"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnumCollectionLockers GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum = "CollectionLockers"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnumMeetingRooms      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum = "MeetingRooms"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnumParking           GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum = "Parking"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnumWifi              GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum = "Wifi"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BusinessITSupport":
		fallthrough
	case "CollectionLockers":
		fallthrough
	case "MeetingRooms":
		fallthrough
	case "Parking":
		fallthrough
	case "Wifi":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum - Information about mediated branch facilities
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumBureauDeChange       GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "BureauDeChange"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumBusinessCounter      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "BusinessCounter"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumCardIssuanceFacility GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "CardIssuanceFacility"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumCounterServices      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "CounterServices"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumDriveThru            GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "DriveThru"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumMortgageAdvisor      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "MortgageAdvisor"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumNightSafe            GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "NightSafe"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumOnDemandCurrency     GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "OnDemandCurrency"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumPremierCounter       GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "PremierCounter"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumVideoBanking         GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "VideoBanking"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnumWheelChairAccess     GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum = "WheelChairAccess"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BureauDeChange":
		fallthrough
	case "BusinessCounter":
		fallthrough
	case "CardIssuanceFacility":
		fallthrough
	case "CounterServices":
		fallthrough
	case "DriveThru":
		fallthrough
	case "MortgageAdvisor":
		fallthrough
	case "NightSafe":
		fallthrough
	case "OnDemandCurrency":
		fallthrough
	case "PremierCounter":
		fallthrough
	case "VideoBanking":
		fallthrough
	case "WheelChairAccess":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum - Information about self service branch services
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumAccountVerificationService     GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "AccountVerificationService"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumAssistedServiceCounter         GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "AssistedServiceCounter"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumBusinessDepositTerminal        GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "BusinessDepositTerminal"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumCashChequeDepositMachineCoin   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "CashChequeDepositMachineCoin"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumCashChequeDepositMachineNoCoin GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "CashChequeDepositMachineNoCoin"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumExternalAtmAudio               GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "ExternalAtmAudio"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumExternalAtmNoAudio             GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "ExternalAtmNoAudio"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumExternalQuickServicePoint      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "ExternalQuickServicePoint"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumInternalAtmAudio               GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "InternalAtmAudio"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumInternalAtmNoAudio             GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "InternalAtmNoAudio"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumInternalQuickServicePoint      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "InternalQuickServicePoint"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumLodgementDevice                GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "LodgementDevice"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumOnlineBankingPoint             GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "OnlineBankingPoint"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumQuickDeposit                   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "QuickDeposit"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumSaturdayCounterService         GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "SaturdayCounterService"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumSelfServiceAccountOpening      GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "SelfServiceAccountOpening"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnumStatementPrinter               GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum = "StatementPrinter"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AccountVerificationService":
		fallthrough
	case "AssistedServiceCounter":
		fallthrough
	case "BusinessDepositTerminal":
		fallthrough
	case "CashChequeDepositMachineCoin":
		fallthrough
	case "CashChequeDepositMachineNoCoin":
		fallthrough
	case "ExternalAtmAudio":
		fallthrough
	case "ExternalAtmNoAudio":
		fallthrough
	case "ExternalQuickServicePoint":
		fallthrough
	case "InternalAtmAudio":
		fallthrough
	case "InternalAtmNoAudio":
		fallthrough
	case "InternalQuickServicePoint":
		fallthrough
	case "LodgementDevice":
		fallthrough
	case "OnlineBankingPoint":
		fallthrough
	case "QuickDeposit":
		fallthrough
	case "SaturdayCounterService":
		fallthrough
	case "SelfServiceAccountOpening":
		fallthrough
	case "StatementPrinter":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum - Information on the type of branch
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnumPhysical GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum = "Physical"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnumMobile   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum = "Mobile"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Physical":
		fallthrough
	case "Mobile":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum - Customer segment which the branch is able to service
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumBusiness  GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Business"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumCorporate GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Corporate"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumPersonal  GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Personal"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumPremier   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Premier"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumPrivate   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Private"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumSelect    GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Select"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumSme       GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "SME"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnumWealth    GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum = "Wealth"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Business":
		fallthrough
	case "Corporate":
		fallthrough
	case "Personal":
		fallthrough
	case "Premier":
		fallthrough
	case "Private":
		fallthrough
	case "Select":
		fallthrough
	case "SME":
		fallthrough
	case "Wealth":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchGeographicLocation - Geographic Coordinates
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchGeographicLocation struct {
	// The Latitude measured in decimal format according to ISO 213
	Latitude string `json:"Latitude"`
	// The longitude measured in decimal format according to ISO 213
	Longitude string `json:"Longitude"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum - Day of the week
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumMonday               GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Monday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumTuesday              GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Tuesday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumWednesday            GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Wednesday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumThursday             GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Thursday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumFriday               GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Friday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumSaturday             GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Saturday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumSunday               GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Sunday"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnumPublicAndBankHoliday GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum = "Public and Bank Holiday"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Monday":
		fallthrough
	case "Tuesday":
		fallthrough
	case "Wednesday":
		fallthrough
	case "Thursday":
		fallthrough
	case "Friday":
		fallthrough
	case "Saturday":
		fallthrough
	case "Sunday":
		fallthrough
	case "Public and Bank Holiday":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum: %v", v)
	}
}

type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimes struct {
	// ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
	ClosingTime string `json:"ClosingTime"`
	// Day of the week
	OpeningDay GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimesOpeningDayEnum `json:"OpeningDay"`
	// ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
	OpeningTime string `json:"OpeningTime"`
	// ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
	UnavailableFinishTime *string `json:"UnavailableFinishTime,omitempty"`
	// ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
	UnavailableStartTime *string `json:"UnavailableStartTime,omitempty"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum - The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnumUk GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum = "UK"
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnumEu GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum = "EU"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UK":
		fallthrough
	case "EU":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrand - Brand
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrand struct {
	// The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted
	TrademarkID string `json:"TrademarkID"`
	// The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)
	TrademarkIPOCode GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrandTrademarkIPOCodeEnum `json:"TrademarkIPOCode"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationParentOrganisationOrganisationName - Organisation Name
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationParentOrganisationOrganisationName struct {
	// Legal Name of the organisation
	LegalName string `json:"LegalName"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationParentOrganisation - Parent organisation
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationParentOrganisation struct {
	// The BIC from the organisation
	Bic *string `json:"BIC,omitempty"`
	// The LEI ID of the organisation
	Lei *string `json:"LEI,omitempty"`
	// Organisation Name
	OrganisationName GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationParentOrganisationOrganisationName `json:"OrganisationName"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisation - Organisation
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisation struct {
	// Brand
	Brand GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationBrand `json:"Brand"`
	// Parent organisation
	ParentOrganisation GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisationParentOrganisation `json:"ParentOrganisation"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchPlannedBranchClosure - Planned branch closure
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchPlannedBranchClosure struct {
	// Date when a branch is due to re-open following temporary closure
	EndDate *string `json:"EndDate,omitempty"`
	// Date when a branch is due to close temporarily or permanently
	StartDate *string `json:"StartDate,omitempty"`
}

type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranch struct {
	// Indicated whether an ATM is at the branch
	ATMAtBranch bool `json:"ATMAtBranch"`
	// Information about the accessibility
	AccessibilityTypes *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAccessibilityTypesEnum `json:"AccessibilityTypes,omitempty"`
	// Postal Address
	Address        GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAddress          `json:"Address"`
	AlternatePhone []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchAlternatePhone `json:"AlternatePhone,omitempty"`
	// Time that the mobile branch is scheduled to arrive
	ArrivalTime *string `json:"ArrivalTime,omitempty"`
	// Description of the branch
	BranchDescription *string `json:"BranchDescription,omitempty"`
	// Information about branch facilities
	BranchFacilitiesName []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchFacilitiesNameEnum `json:"BranchFacilitiesName,omitempty"`
	// Unique and unambiguous identification of a retail branch of a financial institution
	BranchIdentification string `json:"BranchIdentification"`
	// Information about mediated branch facilities
	BranchMediatedServiceName []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchMediatedServiceNameEnum `json:"BranchMediatedServiceName,omitempty"`
	// Name by which a party is known and which is usually used to identify that party
	BranchName *string `json:"BranchName,omitempty"`
	// Any other facilities not mentioned in BranchFacilitiesName
	BranchOtherFacilities []string `json:"BranchOtherFacilities,omitempty"`
	// Mediated Services not described in BranchMediatedServiceName
	BranchOtherMediatedServices []string `json:"BranchOtherMediatedServices,omitempty"`
	// Self Services not described in BranchSelfServeServiceName
	BranchOtherSelfServices []string `json:"BranchOtherSelfServices,omitempty"`
	// Image related to the branch
	BranchPhoto                *string                                                                                          `json:"BranchPhoto,omitempty"`
	BranchSelfServeServiceName []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchSelfServeServiceNameEnum `json:"BranchSelfServeServiceName,omitempty"`
	// Information on the type of branch
	BranchType GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchBranchTypeEnum `json:"BranchType"`
	// Customer segment which the branch is able to service
	CustomerSegment []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchCustomerSegmentEnum `json:"CustomerSegment"`
	// Description on when the mobile branch is available. e.g. The weekend of Glastonbury festival; or Mondays and during the shrimp season also Wednesdays
	DaysOfTheWeek *string `json:"DaysOfTheWeek,omitempty"`
	// Time that the mobile branch is scheduled to depart
	DepartureTime *string `json:"DepartureTime,omitempty"`
	// Collection of information that identifies a FAX number, as defined by telecom services.
	FaxNumber []string `json:"FaxNumber,omitempty"`
	// Geographic Coordinates
	GeographicLocation *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchGeographicLocation `json:"GeographicLocation,omitempty"`
	// Branch Opening Times
	OpeningTimes []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOpeningTimes `json:"OpeningTimes"`
	// Organisation
	Organisation GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchOrganisation `json:"Organisation"`
	// Place where the mobile branch is located, such as between the news agent and the church.
	ParkingLocation      *string                                                                                `json:"ParkingLocation,omitempty"`
	PlannedBranchClosure []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranchPlannedBranchClosure `json:"PlannedBranchClosure,omitempty"`
	// Name of the stop of the mobile branch
	StopName *string `json:"StopName,omitempty"`
	// Collection of information that identifies a phone number, as defined by telecom services.
	TelephoneNumber string `json:"TelephoneNumber"`
}

type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnumUseOfTheApIsAndAnyRelatedDataWillBeSubjectToTheTermsOfTheOpenLicenceAndSubjectToTermsAndConditions GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum = "Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum - Open Banking License
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnumHTTPSWwwOpenbankingOrgUkOpenLicence GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum = "https://www.openbanking.org.uk/open-licence"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "https://www.openbanking.org.uk/open-licence":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum: %v", v)
	}
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum - Open Banking Terms of Use
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum string

const (
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnumHTTPSWwwOpenbankingOrgUkTerms GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum = "https://www.openbanking.org.uk/terms"
)

func (e GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum) ToPointer() *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum {
	return &e
}

func (e *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "https://www.openbanking.org.uk/terms":
		*e = GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum: %v", v)
	}
}

type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaData struct {
	Agreement   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum `json:"Agreement"`
	LastUpdated time.Time                                                                       `json:"LastUpdated"`
	// Open Banking License
	License GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum `json:"License"`
	// Open Banking Terms of Use
	TermsOfUse   GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum `json:"TermsOfUse"`
	TotalResults int64                                                                            `json:"TotalResults"`
}

// GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSON - Successful response with a list of `Branch` data
type GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSON struct {
	Data []GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONBranch `json:"data"`
	Meta GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaData `json:"meta"`
}

type GetBranchesResponse struct {
	// You have sent a request which could not be understood.
	FourHundredErrorObject *GetBranches400ErrorObject
	// Your client has failed to submit a request, and a timeout has occurred.
	FourHundredAndEightErrorObject *GetBranches408ErrorObject
	// You have requested this resource too often. Slow down.
	FourHundredAndTwentyNineErrorObject *GetBranches429ErrorObject
	// An error occurred on the server. No further information is available.
	FiveHundredErrorObject *GetBranches500ErrorObject
	// The service is temporarily unavailable.
	FiveHundredAndThreeErrorObject *GetBranches503ErrorObject
	ContentType                    string
	// A standard error response.
	ErrorObject *GetBranchesErrorObject
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful response with a list of `Branch` data
	GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSONObject *GetBranches200ApplicationPrsOpenbankingOpendataV13PlusJSON
}
