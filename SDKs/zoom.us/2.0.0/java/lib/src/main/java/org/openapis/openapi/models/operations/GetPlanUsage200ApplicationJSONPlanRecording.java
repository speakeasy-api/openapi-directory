/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetPlanUsage200ApplicationJSONPlanRecording - Recording Plan
 */
public class GetPlanUsage200ApplicationJSONPlanRecording {
    /**
     * Recording free storage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("free_storage")
    public String freeStorage;
    public GetPlanUsage200ApplicationJSONPlanRecording withFreeStorage(String freeStorage) {
        this.freeStorage = freeStorage;
        return this;
    }
    
    /**
     * Amount of free storage used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("free_storage_usage")
    public String freeStorageUsage;
    public GetPlanUsage200ApplicationJSONPlanRecording withFreeStorageUsage(String freeStorageUsage) {
        this.freeStorageUsage = freeStorageUsage;
        return this;
    }
    
    /**
     * Recording plan storage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_storage")
    public String planStorage;
    public GetPlanUsage200ApplicationJSONPlanRecording withPlanStorage(String planStorage) {
        this.planStorage = planStorage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_storage_exceed")
    public String planStorageExceed;
    public GetPlanUsage200ApplicationJSONPlanRecording withPlanStorageExceed(String planStorageExceed) {
        this.planStorageExceed = planStorageExceed;
        return this;
    }
    
    /**
     * Recording storage usage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_storage_usage")
    public String planStorageUsage;
    public GetPlanUsage200ApplicationJSONPlanRecording withPlanStorageUsage(String planStorageUsage) {
        this.planStorageUsage = planStorageUsage;
        return this;
    }
    
    /**
     * Recording plan type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GetPlanUsage200ApplicationJSONPlanRecording withType(String type) {
        this.type = type;
        return this;
    }
    
}
