<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DestinyDefinitionsRecordsDestinyRecordDefinition
{
	
    public ?DestinyDefinitionsRecordsDestinyRecordCompletionBlock $completionInfo = null;
    
    /**
     * Many Destiny*Definition contracts - the "first order" entities of Destiny that have their own tables in the Manifest Database - also have displayable information. This is the base class for that display information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition $displayProperties
     */
	
    public ?DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition $displayProperties = null;
    
    /**
     * If this record has an expiration after which it cannot be earned, this is some information about that expiration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyDefinitionsRecordsDestinyRecordExpirationBlock $expirationInfo
     */
	
    public ?DestinyDefinitionsRecordsDestinyRecordExpirationBlock $expirationInfo = null;
    
	
    public ?bool $forTitleGilding = null;
    
    /**
     * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
     * 
     * When entities refer to each other in Destiny content, it is this hash that they are referring to.
     * 
     * @var ?int $hash
     */
	
    public ?int $hash = null;
    
    /**
     * The index of the entity as it was found in the investment tables.
     * 
     * @var ?int $index
     */
	
    public ?int $index = null;
    
    /**
     * Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo $intervalInfo
     */
	
    public ?DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo $intervalInfo = null;
    
	
    public ?int $loreHash = null;
    
    /**
     * $objectiveHashes
     * 
     * @var ?array<int> $objectiveHashes
     */
	
    public ?array $objectiveHashes = null;
    
    /**
     * A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.
     * 
     * @var ?array<int> $parentNodeHashes
     */
	
    public ?array $parentNodeHashes = null;
    
	
    public ?DestinyDefinitionsPresentationDestinyPresentationChildBlock $presentationInfo = null;
    
	
    public ?int $presentationNodeType = null;
    
	
    public ?int $recordValueStyle = null;
    
    /**
     * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
     * 
     * @var ?bool $redacted
     */
	
    public ?bool $redacted = null;
    
    /**
     * Presentation nodes can be restricted by various requirements. This defines the rules of those requirements, and the message(s) to be shown if these requirements aren't met.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock $requirements
     */
	
    public ?DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock $requirements = null;
    
    /**
     * If there is any publicly available information about rewards earned for achieving this record, this is the list of those items.
     * 
     *  However, note that some records intentionally have "hidden" rewards. These will not be returned in this list.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DestinyDestinyItemQuantity> $rewardItems
     */
	
    public ?array $rewardItems = null;
    
    /**
     * Indicates whether this Record's state is determined on a per-character or on an account-wide basis.
     * 
     * @var ?int $scope
     */
	
    public ?int $scope = null;
    
    /**
     * A hint to show a large icon for a reward
     * 
     * @var ?bool $shouldShowLargeIcons
     */
	
    public ?bool $shouldShowLargeIcons = null;
    
	
    public ?DestinyDefinitionsRecordsSchemaRecordStateBlock $stateInfo = null;
    
	
    public ?DestinyDefinitionsRecordsDestinyRecordTitleBlock $titleInfo = null;
    
    /**
     * $traitHashes
     * 
     * @var ?array<int> $traitHashes
     */
	
    public ?array $traitHashes = null;
    
    /**
     * $traitIds
     * 
     * @var ?array<string> $traitIds
     */
	
    public ?array $traitIds = null;
    
	public function __construct()
	{
		$this->completionInfo = null;
		$this->displayProperties = null;
		$this->expirationInfo = null;
		$this->forTitleGilding = null;
		$this->hash = null;
		$this->index = null;
		$this->intervalInfo = null;
		$this->loreHash = null;
		$this->objectiveHashes = null;
		$this->parentNodeHashes = null;
		$this->presentationInfo = null;
		$this->presentationNodeType = null;
		$this->recordValueStyle = null;
		$this->redacted = null;
		$this->requirements = null;
		$this->rewardItems = null;
		$this->scope = null;
		$this->shouldShowLargeIcons = null;
		$this->stateInfo = null;
		$this->titleInfo = null;
		$this->traitHashes = null;
		$this->traitIds = null;
	}
}
