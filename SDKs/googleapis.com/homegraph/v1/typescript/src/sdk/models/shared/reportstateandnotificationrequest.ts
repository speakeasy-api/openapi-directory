/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StateAndNotificationPayload } from "./stateandnotificationpayload";
import { Expose, Type } from "class-transformer";

/**
 * Request type for the [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification) call. It may include states, notifications, or both. States and notifications are defined per `device_id` (for example, "123" and "456" in the following example). Example: ```json { "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf", "agentUserId": "1234", "payload": { "devices": { "states": { "123": { "on": true }, "456": { "on": true, "brightness": 10 } }, } } } ```
 */
export class ReportStateAndNotificationRequest extends SpeakeasyBase {
  /**
   * Required. Third-party user ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agentUserId" })
  agentUserId?: string;

  /**
   * Unique identifier per event (for example, a doorbell press).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventId" })
  eventId?: string;

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followUpToken" })
  followUpToken?: string;

  /**
   * Payload containing the state and notification information for devices.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payload" })
  @Type(() => StateAndNotificationPayload)
  payload?: StateAndNotificationPayload;

  /**
   * Request ID used for debugging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;
}
