/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class JobConfigurationTableCopy {
    /**
     * [Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a 'notFound' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createDisposition")
    public String createDisposition;
    public JobConfigurationTableCopy withCreateDisposition(String createDisposition) {
        this.createDisposition = createDisposition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationEncryptionConfiguration")
    public EncryptionConfiguration destinationEncryptionConfiguration;
    public JobConfigurationTableCopy withDestinationEncryptionConfiguration(EncryptionConfiguration destinationEncryptionConfiguration) {
        this.destinationEncryptionConfiguration = destinationEncryptionConfiguration;
        return this;
    }
    
    /**
     * [Optional] The time when the destination table expires. Expired tables will be deleted and their storage reclaimed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationExpirationTime")
    public Object destinationExpirationTime;
    public JobConfigurationTableCopy withDestinationExpirationTime(Object destinationExpirationTime) {
        this.destinationExpirationTime = destinationExpirationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationTable")
    public TableReference destinationTable;
    public JobConfigurationTableCopy withDestinationTable(TableReference destinationTable) {
        this.destinationTable = destinationTable;
        return this;
    }
    
    /**
     * [Optional] Supported operation types in table copy job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationType")
    public String operationType;
    public JobConfigurationTableCopy withOperationType(String operationType) {
        this.operationType = operationType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceTable")
    public TableReference sourceTable;
    public JobConfigurationTableCopy withSourceTable(TableReference sourceTable) {
        this.sourceTable = sourceTable;
        return this;
    }
    
    /**
     * [Pick one] Source tables to copy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceTables")
    public TableReference[] sourceTables;
    public JobConfigurationTableCopy withSourceTables(TableReference[] sourceTables) {
        this.sourceTables = sourceTables;
        return this;
    }
    
    /**
     * [Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("writeDisposition")
    public String writeDisposition;
    public JobConfigurationTableCopy withWriteDisposition(String writeDisposition) {
        this.writeDisposition = writeDisposition;
        return this;
    }
    
}
