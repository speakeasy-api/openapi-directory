// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchQuantumTasksFilterOperatorEnum string

const (
	SearchQuantumTasksFilterOperatorEnumLt      SearchQuantumTasksFilterOperatorEnum = "LT"
	SearchQuantumTasksFilterOperatorEnumLte     SearchQuantumTasksFilterOperatorEnum = "LTE"
	SearchQuantumTasksFilterOperatorEnumEqual   SearchQuantumTasksFilterOperatorEnum = "EQUAL"
	SearchQuantumTasksFilterOperatorEnumGt      SearchQuantumTasksFilterOperatorEnum = "GT"
	SearchQuantumTasksFilterOperatorEnumGte     SearchQuantumTasksFilterOperatorEnum = "GTE"
	SearchQuantumTasksFilterOperatorEnumBetween SearchQuantumTasksFilterOperatorEnum = "BETWEEN"
)

func (e SearchQuantumTasksFilterOperatorEnum) ToPointer() *SearchQuantumTasksFilterOperatorEnum {
	return &e
}

func (e *SearchQuantumTasksFilterOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LT":
		fallthrough
	case "LTE":
		fallthrough
	case "EQUAL":
		fallthrough
	case "GT":
		fallthrough
	case "GTE":
		fallthrough
	case "BETWEEN":
		*e = SearchQuantumTasksFilterOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchQuantumTasksFilterOperatorEnum: %v", v)
	}
}
