/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LoyaltyProgramRewardDefinition - Provides details about the reward tier discount. DEPRECATED at version 2020-12-16. Discount details
 * are now defined using a catalog pricing rule and other catalog objects. For more information, see
 * [Get discount details for the reward](https://developer.squareup.com/docs/loyalty-api/overview#get-discount-details).
 */
public class LoyaltyProgramRewardDefinition {
    /**
     * The list of catalog objects to which this reward can be applied. They are either all item-variation ids or category ids, depending on the `type` field.
     * DEPRECATED at version 2020-12-16. You can find this information in the `product_set_data.product_ids_any` field
     * of the `PRODUCT_SET` catalog object referenced by the pricing rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_object_ids")
    public String[] catalogObjectIds;
    public LoyaltyProgramRewardDefinition withCatalogObjectIds(String[] catalogObjectIds) {
        this.catalogObjectIds = catalogObjectIds;
        return this;
    }
    
    /**
     * The type of discount the reward tier offers. DEPRECATED at version 2020-12-16. You can find this information
     * in the `discount_data.discount_type` field of the `DISCOUNT` catalog object referenced by the pricing rule.
     */
    @JsonProperty("discount_type")
    public String discountType;
    public LoyaltyProgramRewardDefinition withDiscountType(String discountType) {
        this.discountType = discountType;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixed_discount_money")
    public Money fixedDiscountMoney;
    public LoyaltyProgramRewardDefinition withFixedDiscountMoney(Money fixedDiscountMoney) {
        this.fixedDiscountMoney = fixedDiscountMoney;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_discount_money")
    public Money maxDiscountMoney;
    public LoyaltyProgramRewardDefinition withMaxDiscountMoney(Money maxDiscountMoney) {
        this.maxDiscountMoney = maxDiscountMoney;
        return this;
    }
    
    /**
     * The fixed percentage of the discount. Present if `discount_type` is `FIXED_PERCENTAGE`.
     * For example, a 7.25% off discount will be represented as "7.25". DEPRECATED at version 2020-12-16. You can find this
     * information in the `discount_data.percentage` field of the `DISCOUNT` catalog object referenced by the pricing rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentage_discount")
    public String percentageDiscount;
    public LoyaltyProgramRewardDefinition withPercentageDiscount(String percentageDiscount) {
        this.percentageDiscount = percentageDiscount;
        return this;
    }
    
    /**
     * Indicates the scope of the reward tier. DEPRECATED at version 2020-12-16. You can find this information in the
     * `discount_target_scope` field of the `PRICING_RULE` catalog object and the `product_set_data` field of the `PRODUCT_SET`
     * catalog object referenced by the pricing rule. For `ORDER` scopes, the target scope is `WHOLE_PURCHASE` and `all_products`
     * is true. For `ITEM_VARIATION` and `CATEGORY` scopes, the target scope is `LINE_ITEM` and `product_ids_any` is a list of
     * catalog object IDs of the given type.
     */
    @JsonProperty("scope")
    public String scope;
    public LoyaltyProgramRewardDefinition withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
}
