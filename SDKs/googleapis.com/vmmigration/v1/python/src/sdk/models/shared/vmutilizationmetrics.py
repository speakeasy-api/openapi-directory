"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VMUtilizationMetrics:
    r"""Utilization metrics values for a single VM."""
    
    cpu_average_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpuAveragePercent'), 'exclude': lambda f: f is None }})
    r"""Average CPU usage, percent."""  
    cpu_max_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpuMaxPercent'), 'exclude': lambda f: f is None }})
    r"""Max CPU usage, percent."""  
    disk_io_rate_average_kbps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diskIoRateAverageKbps'), 'exclude': lambda f: f is None }})
    r"""Average disk IO rate, in kilobytes per second."""  
    disk_io_rate_max_kbps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diskIoRateMaxKbps'), 'exclude': lambda f: f is None }})
    r"""Max disk IO rate, in kilobytes per second."""  
    memory_average_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memoryAveragePercent'), 'exclude': lambda f: f is None }})
    r"""Average memory usage, percent."""  
    memory_max_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memoryMaxPercent'), 'exclude': lambda f: f is None }})
    r"""Max memory usage, percent."""  
    network_throughput_average_kbps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkThroughputAverageKbps'), 'exclude': lambda f: f is None }})
    r"""Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second."""  
    network_throughput_max_kbps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkThroughputMaxKbps'), 'exclude': lambda f: f is None }})
    r"""Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second."""  
    