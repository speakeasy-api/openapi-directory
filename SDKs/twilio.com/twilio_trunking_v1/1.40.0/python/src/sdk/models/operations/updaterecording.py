"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import recording_enum_recording_mode_enum as shared_recording_enum_recording_mode_enum
from ..shared import recording_enum_recording_trim_enum as shared_recording_enum_recording_trim_enum
from ..shared import trunking_v1_trunk_recording as shared_trunking_v1_trunk_recording
from typing import Optional

UPDATE_RECORDING_SERVERS = [
	"https://trunking.twilio.com",
]


@dataclasses.dataclass
class UpdateRecordingSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateRecordingUpdateRecordingRequest:
    
    mode: Optional[shared_recording_enum_recording_mode_enum.RecordingEnumRecordingModeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Mode' }})  
    trim: Optional[shared_recording_enum_recording_trim_enum.RecordingEnumRecordingTrimEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Trim' }})  
    

@dataclasses.dataclass
class UpdateRecordingRequest:
    
    trunk_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'TrunkSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Trunk that will have its recording settings updated."""  
    request_body: Optional[UpdateRecordingUpdateRecordingRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateRecordingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    trunking_v1_trunk_recording: Optional[shared_trunking_v1_trunk_recording.TrunkingV1TrunkRecording] = dataclasses.field(default=None)
    r"""Accepted"""  
    