"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var addressrequests_1 = require("./addressrequests");
var inforequests_1 = require("./inforequests");
var subscriptionipnrequests_1 = require("./subscriptionipnrequests");
var transactionrequests_1 = require("./transactionrequests");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = ["https://eu.eth.chaingateway.io/v1"];
/**
 * # Chaingateway.io
 *
 * @remarks
 *
 * REST API to build the bridge between Ethereum and the real world
 *
 * Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.
 *
 * To use our API, you need an API Key (Described as Authorization header in the examples below).
 * To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).
 *
 * For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).
 *
 * If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.addressRequests = new addressrequests_1.AddressRequests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.infoRequests = new inforequests_1.InfoRequests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.subscriptionIPNRequests = new subscriptionipnrequests_1.SubscriptionIPNRequests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.transactionRequests = new transactionrequests_1.TransactionRequests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
