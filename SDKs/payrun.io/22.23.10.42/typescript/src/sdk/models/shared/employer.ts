/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The employers' address
 */
export class EmployerEmployerAddress extends SpeakeasyBase {
  /**
   * The addresss' line 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address1" })
  address1?: string;

  /**
   * The addresss' line 2
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address2" })
  address2?: string;

  /**
   * The addresss' line 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address3" })
  address3?: string;

  /**
   * The addresss' line 4
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address4" })
  address4?: string;

  /**
   * The addresss' country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  /**
   * The addresss' postcode
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Postcode" })
  postcode?: string;
}

/**
 * The employer auto enrolments' pension
 */
export class EmployerEmployerAutoEnrolmentPension extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

/**
 * The employer auto enrolments' primary address
 */
export class EmployerEmployerAutoEnrolmentPrimaryAddress extends SpeakeasyBase {
  /**
   * The addresss' line 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address1" })
  address1?: string;

  /**
   * The addresss' line 2
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address2" })
  address2?: string;

  /**
   * The addresss' line 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address3" })
  address3?: string;

  /**
   * The addresss' line 4
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address4" })
  address4?: string;

  /**
   * The addresss' country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  /**
   * The addresss' postcode
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Postcode" })
  postcode?: string;
}

/**
 * The employer auto enrolments' secondary address
 */
export class EmployerEmployerAutoEnrolmentSecondaryAddress extends SpeakeasyBase {
  /**
   * The addresss' line 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address1" })
  address1?: string;

  /**
   * The addresss' line 2
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address2" })
  address2?: string;

  /**
   * The addresss' line 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address3" })
  address3?: string;

  /**
   * The addresss' line 4
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address4" })
  address4?: string;

  /**
   * The addresss' country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  /**
   * The addresss' postcode
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Postcode" })
  postcode?: string;
}

/**
 * The employers' auto enrolment
 */
export class EmployerEmployerAutoEnrolment extends SpeakeasyBase {
  /**
   * The employer auto enrolments' pension
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Pension" })
  @Type(() => EmployerEmployerAutoEnrolmentPension)
  pension?: EmployerEmployerAutoEnrolmentPension;

  /**
   * The employer auto enrolments' postponement date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PostponementDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  postponementDate?: Date;

  /**
   * The employer auto enrolments' primary address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryAddress" })
  @Type(() => EmployerEmployerAutoEnrolmentPrimaryAddress)
  primaryAddress?: EmployerEmployerAutoEnrolmentPrimaryAddress;

  /**
   * The employer auto enrolments' primary email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryEmail" })
  primaryEmail?: string;

  /**
   * The employer auto enrolments' primary first name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryFirstName" })
  primaryFirstName?: string;

  /**
   * The employer auto enrolments' primary job title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryJobTitle" })
  primaryJobTitle?: string;

  /**
   * The employer auto enrolments' primary last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryLastName" })
  primaryLastName?: string;

  /**
   * The employer auto enrolments' primary telephone
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryTelephone" })
  primaryTelephone?: string;

  /**
   * The employer auto enrolments' re enrolment day offset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReEnrolmentDayOffset" })
  reEnrolmentDayOffset?: number;

  /**
   * The employer auto enrolments' re enrolment month offset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReEnrolmentMonthOffset" })
  reEnrolmentMonthOffset?: number;

  /**
   * The employer auto enrolments' recent opt out re enrolment excluded
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RecentOptOutReEnrolmentExcluded" })
  recentOptOutReEnrolmentExcluded?: boolean;

  /**
   * The employer auto enrolments' secondary address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryAddress" })
  @Type(() => EmployerEmployerAutoEnrolmentSecondaryAddress)
  secondaryAddress?: EmployerEmployerAutoEnrolmentSecondaryAddress;

  /**
   * The employer auto enrolments' secondary email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryEmail" })
  secondaryEmail?: string;

  /**
   * The employer auto enrolments' secondary first name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryFirstName" })
  secondaryFirstName?: string;

  /**
   * The employer auto enrolments' secondary job title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryJobTitle" })
  secondaryJobTitle?: string;

  /**
   * The employer auto enrolments' secondary last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryLastName" })
  secondaryLastName?: string;

  /**
   * The employer auto enrolments' secondary telephone
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryTelephone" })
  secondaryTelephone?: string;

  /**
   * The employer auto enrolments' staging date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StagingDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stagingDate?: Date;
}

/**
 * The employers' bank account
 */
export class EmployerEmployerBankAccount extends SpeakeasyBase {
  /**
   * The bank accounts' account name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountName" })
  accountName?: string;

  /**
   * The bank accounts' account number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountNumber" })
  accountNumber?: string;

  /**
   * The bank accounts' branch name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BranchName" })
  branchName?: string;

  /**
   * The bank accounts' reference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Reference" })
  reference?: string;

  /**
   * The bank accounts' sort code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SortCode" })
  sortCode?: string;
}

/**
 * The hmrc settingss' sender
 */
export enum EmployerEmployerHmrcSettingsSenderEnum {
  Employer = "Employer",
  Individual = "Individual",
  Company = "Company",
  Agent = "Agent",
  Bureau = "Bureau",
  Partnership = "Partnership",
  Trust = "Trust",
  Government = "Government",
  ActingInCapacity = "ActingInCapacity",
  Other = "Other",
}

/**
 * The hmrc settingss' state aid sector
 */
export enum EmployerEmployerHmrcSettingsStateAidSectorEnum {
  Agriculture = "Agriculture",
  FisheriesAquaculture = "FisheriesAquaculture",
  RoadTransport = "RoadTransport",
  Industrial = "Industrial",
  NotApplicable = "NotApplicable",
}

/**
 * The employers' hmrc settings
 */
export class EmployerEmployerHmrcSettings extends SpeakeasyBase {
  /**
   * The hmrc settingss' accounting office ref
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountingOfficeRef" })
  accountingOfficeRef?: string;

  /**
   * The hmrc settingss' c o t a x ref
   */
  @SpeakeasyMetadata()
  @Expose({ name: "COTAXRef" })
  cotaxRef?: string;

  /**
   * The hmrc settingss' contact email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContactEmail" })
  contactEmail?: string;

  /**
   * The hmrc settingss' contact fax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContactFax" })
  contactFax?: string;

  /**
   * The hmrc settingss' contact first name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContactFirstName" })
  contactFirstName?: string;

  /**
   * The hmrc settingss' contact last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContactLastName" })
  contactLastName?: string;

  /**
   * The hmrc settingss' contact telephone
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContactTelephone" })
  contactTelephone?: string;

  /**
   * The hmrc settingss' employment allowance override
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmploymentAllowanceOverride" })
  employmentAllowanceOverride?: number;

  /**
   * The hmrc settingss' password
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Password" })
  password?: string;

  /**
   * The hmrc settingss' s a u t r
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SAUTR" })
  sautr?: string;

  /**
   * The hmrc settingss' sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Sender" })
  sender?: EmployerEmployerHmrcSettingsSenderEnum;

  /**
   * The hmrc settingss' sender id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SenderId" })
  senderId?: string;

  /**
   * The hmrc settingss' state aid sector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StateAidSector" })
  stateAidSector?: EmployerEmployerHmrcSettingsStateAidSectorEnum;

  /**
   * The hmrc settingss' tax office number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxOfficeNumber" })
  taxOfficeNumber?: string;

  /**
   * The hmrc settingss' tax office reference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxOfficeReference" })
  taxOfficeReference?: string;
}

/**
 * The employers' region
 */
export enum EmployerEmployerRegionEnum {
  NotSet = "NotSet",
  England = "England",
  Scotland = "Scotland",
  Wales = "Wales",
}

/**
 * The employers' rule exclusions
 */
export enum EmployerEmployerRuleExclusionsEnum {
  None = "None",
  NiMissingPayInstructionRule = "NiMissingPayInstructionRule",
  TaxMissingPayInstructionRule = "TaxMissingPayInstructionRule",
  TaxCodeUpliftRule = "TaxCodeUpliftRule",
  NiSetExpectedLetterRule = "NiSetExpectedLetterRule",
  NiDateOfBirthChangeRetrospectiveCRule = "NiDateOfBirthChangeRetrospectiveCRule",
  NiDefermentStatusChangeRule = "NiDefermentStatusChangeRule",
  NiEndContractedOutTransferRule = "NiEndContractedOutTransferRule",
  PaymentAfterLeavingTaxCodeRule = "PaymentAfterLeavingTaxCodeRule",
  LeaverEndInstructionsRule = "LeaverEndInstructionsRule",
  P45StudentLoanInstructionRule = "P45StudentLoanInstructionRule",
  P45TaxInstructionRule = "P45TaxInstructionRule",
  P45YtdTaxRule = "P45YtdTaxRule",
  YtdInstructionRule = "YtdInstructionRule",
  TaxCodeRegionChangeRule = "TaxCodeRegionChangeRule",
  AutoEnrolmentStatusChangeRule = "AutoEnrolmentStatusChangeRule",
  EmployeeDeceasedRule = "EmployeeDeceasedRule",
  BenefitInstructionAutoEndRule = "BenefitInstructionAutoEndRule",
}

/**
 * The employers' territory
 */
export enum EmployerEmployerTerritoryEnum {
  UnitedKingdom = "UnitedKingdom",
}

export class EmployerEmployer extends SpeakeasyBase {
  /**
   * The employers' address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address" })
  @Type(() => EmployerEmployerAddress)
  address?: EmployerEmployerAddress;

  /**
   * The employers' apprenticeship levy allowance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApprenticeshipLevyAllowance" })
  apprenticeshipLevyAllowance?: number;

  /**
   * The employers' auto enrolment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AutoEnrolment" })
  @Type(() => EmployerEmployerAutoEnrolment)
  autoEnrolment?: EmployerEmployerAutoEnrolment;

  /**
   * The employers' bacs service user number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BacsServiceUserNumber" })
  bacsServiceUserNumber?: string;

  /**
   * The employers' bank account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankAccount" })
  @Type(() => EmployerEmployerBankAccount)
  bankAccount?: EmployerEmployerBankAccount;

  /**
   * The employers' calculate apprenticeship levy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CalculateApprenticeshipLevy" })
  calculateApprenticeshipLevy?: boolean;

  /**
   * The employers' claim employment allowance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ClaimEmploymentAllowance" })
  claimEmploymentAllowance?: boolean;

  /**
   * The employers' claim small employer relief
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ClaimSmallEmployerRelief" })
  claimSmallEmployerRelief?: boolean;

  /**
   * The employers' effective date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EffectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * The employers' hmrc settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HmrcSettings" })
  @Type(() => EmployerEmployerHmrcSettings)
  hmrcSettings?: EmployerEmployerHmrcSettings;

  /**
   * The employers' meta data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MetaData" })
  metaData?: Record<string, any>;

  /**
   * The employers' name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The employers' next revision date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextRevisionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextRevisionDate?: Date;

  /**
   * The employers' region
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region?: EmployerEmployerRegionEnum;

  /**
   * The employers' revision
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Revision" })
  revision?: number;

  /**
   * The employers' rule exclusions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RuleExclusions" })
  ruleExclusions?: EmployerEmployerRuleExclusionsEnum;

  /**
   * The employers' territory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Territory" })
  territory?: EmployerEmployerTerritoryEnum;
}

/**
 * The employer object.
 */
export class Employer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Employer" })
  @Type(() => EmployerEmployer)
  employer?: EmployerEmployer;
}
