// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// GETJournalEntryDetailTypeStatusEnum - Status of journal entry.
type GETJournalEntryDetailTypeStatusEnum string

const (
	GETJournalEntryDetailTypeStatusEnumCreated   GETJournalEntryDetailTypeStatusEnum = "Created"
	GETJournalEntryDetailTypeStatusEnumCancelled GETJournalEntryDetailTypeStatusEnum = "Cancelled"
)

func (e *GETJournalEntryDetailTypeStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Created":
		fallthrough
	case "Cancelled":
		*e = GETJournalEntryDetailTypeStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETJournalEntryDetailTypeStatusEnum: %s", s)
	}
}

// GETJournalEntryDetailTypeTransferredToAccountingEnum - Status shows whether the journal entry has been transferred to an accounting system.
type GETJournalEntryDetailTypeTransferredToAccountingEnum string

const (
	GETJournalEntryDetailTypeTransferredToAccountingEnumNo         GETJournalEntryDetailTypeTransferredToAccountingEnum = "No"
	GETJournalEntryDetailTypeTransferredToAccountingEnumProcessing GETJournalEntryDetailTypeTransferredToAccountingEnum = "Processing"
	GETJournalEntryDetailTypeTransferredToAccountingEnumYes        GETJournalEntryDetailTypeTransferredToAccountingEnum = "Yes"
	GETJournalEntryDetailTypeTransferredToAccountingEnumError      GETJournalEntryDetailTypeTransferredToAccountingEnum = "Error"
	GETJournalEntryDetailTypeTransferredToAccountingEnumIgnore     GETJournalEntryDetailTypeTransferredToAccountingEnum = "Ignore"
)

func (e *GETJournalEntryDetailTypeTransferredToAccountingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "No":
		fallthrough
	case "Processing":
		fallthrough
	case "Yes":
		fallthrough
	case "Error":
		fallthrough
	case "Ignore":
		*e = GETJournalEntryDetailTypeTransferredToAccountingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETJournalEntryDetailTypeTransferredToAccountingEnum: %s", s)
	}
}

// GETJournalEntryDetailType - Container for custom fields of a Journal Entry object.
type GETJournalEntryDetailType struct {
	// Name of the accounting period that the journal entry belongs to.
	//
	AccountingPeriodName *string `json:"accountingPeriodName,omitempty"`
	// Returns true if the journal entry is aggregating currencies. That is, if the journal entry was created when the `Aggregate transactions with different currencies during a Journal Run` setting was configured to `Yes`. Otherwise, returns `false`.
	//
	AggregateCurrency *bool `json:"aggregateCurrency,omitempty"`
	// Currency used.
	//
	Currency *string `json:"currency,omitempty"`
	// Home currency used.
	//
	HomeCurrency *string `json:"homeCurrency,omitempty"`
	// Date of the journal entry.
	//
	JournalEntryDate *types.Date `json:"journalEntryDate,omitempty"`
	// Key name that represents the list of journal entry items.
	//
	JournalEntryItems []GETJournalEntryItemType `json:"journalEntryItems,omitempty"`
	// Additional information about this record.
	// Character limit: 2,000
	//
	Notes *string `json:"notes,omitempty"`
	// Journal entry number in the format JE-00000001.
	//
	Number *string `json:"number,omitempty"`
	// List of segments that apply to the summary journal entry.
	//
	Segments []GETJournalEntrySegmentType `json:"segments,omitempty"`
	// Status of journal entry.
	//
	Status *GETJournalEntryDetailTypeStatusEnum `json:"status,omitempty"`
	// Returns `true` if the request was processed successfully.
	//
	Success *bool `json:"success,omitempty"`
	// End date of time period included in the journal entry.
	//
	TimePeriodEnd *types.Date `json:"timePeriodEnd,omitempty"`
	// Start date of time period included in the journal entry.
	//
	TimePeriodStart *types.Date `json:"timePeriodStart,omitempty"`
	// Transaction type of the transactions included in the summary journal entry.
	//
	TransactionType *string `json:"transactionType,omitempty"`
	// Date and time that transferredToAccounting was changed to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.
	//
	TransferDateTime *time.Time `json:"transferDateTime,omitempty"`
	// User ID of the person who changed transferredToAccounting to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.
	//
	TransferredBy *string `json:"transferredBy,omitempty"`
	// Status shows whether the journal entry has been transferred to an accounting system.
	TransferredToAccounting *GETJournalEntryDetailTypeTransferredToAccountingEnum `json:"transferredToAccounting,omitempty"`
}
