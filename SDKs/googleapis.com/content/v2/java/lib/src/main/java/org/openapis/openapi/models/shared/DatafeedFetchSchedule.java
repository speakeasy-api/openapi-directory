/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DatafeedFetchSchedule - The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
 */
public class DatafeedFetchSchedule {
    /**
     * The day of the month the feed file should be fetched (1-31).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayOfMonth")
    public Long dayOfMonth;
    public DatafeedFetchSchedule withDayOfMonth(Long dayOfMonth) {
        this.dayOfMonth = dayOfMonth;
        return this;
    }
    
    /**
     * The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fetchUrl")
    public String fetchUrl;
    public DatafeedFetchSchedule withFetchUrl(String fetchUrl) {
        this.fetchUrl = fetchUrl;
        return this;
    }
    
    /**
     * The hour of the day the feed file should be fetched (0-23).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hour")
    public Long hour;
    public DatafeedFetchSchedule withHour(Long hour) {
        this.hour = hour;
        return this;
    }
    
    /**
     * The minute of the hour the feed file should be fetched (0-59). Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minuteOfHour")
    public Long minuteOfHour;
    public DatafeedFetchSchedule withMinuteOfHour(Long minuteOfHour) {
        this.minuteOfHour = minuteOfHour;
        return this;
    }
    
    /**
     * An optional password for fetch_url.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public DatafeedFetchSchedule withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Whether the scheduled fetch is paused or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paused")
    public Boolean paused;
    public DatafeedFetchSchedule withPaused(Boolean paused) {
        this.paused = paused;
        return this;
    }
    
    /**
     * Time zone used for schedule. UTC by default. E.g., "America/Los_Angeles".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;
    public DatafeedFetchSchedule withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    /**
     * An optional user name for fetch_url.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public DatafeedFetchSchedule withUsername(String username) {
        this.username = username;
        return this;
    }
    
    /**
     * The day of the week the feed file should be fetched. Acceptable values are: - "`monday`" - "`tuesday`" - "`wednesday`" - "`thursday`" - "`friday`" - "`saturday`" - "`sunday`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weekday")
    public String weekday;
    public DatafeedFetchSchedule withWeekday(String weekday) {
        this.weekday = weekday;
        return this;
    }
    
}
