// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateCallServerList = []string{
	"https://api.twilio.com",
}

type UpdateCallSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// UpdateCallUpdateCallRequestFallbackMethodEnum - The HTTP method that we should use to request the `fallback_url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
type UpdateCallUpdateCallRequestFallbackMethodEnum string

const (
	UpdateCallUpdateCallRequestFallbackMethodEnumHead   UpdateCallUpdateCallRequestFallbackMethodEnum = "HEAD"
	UpdateCallUpdateCallRequestFallbackMethodEnumGet    UpdateCallUpdateCallRequestFallbackMethodEnum = "GET"
	UpdateCallUpdateCallRequestFallbackMethodEnumPost   UpdateCallUpdateCallRequestFallbackMethodEnum = "POST"
	UpdateCallUpdateCallRequestFallbackMethodEnumPatch  UpdateCallUpdateCallRequestFallbackMethodEnum = "PATCH"
	UpdateCallUpdateCallRequestFallbackMethodEnumPut    UpdateCallUpdateCallRequestFallbackMethodEnum = "PUT"
	UpdateCallUpdateCallRequestFallbackMethodEnumDelete UpdateCallUpdateCallRequestFallbackMethodEnum = "DELETE"
)

func (e *UpdateCallUpdateCallRequestFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateCallUpdateCallRequestFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCallUpdateCallRequestFallbackMethodEnum: %s", s)
	}
}

// UpdateCallUpdateCallRequestMethodEnum - The HTTP method we should use when calling the `url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
type UpdateCallUpdateCallRequestMethodEnum string

const (
	UpdateCallUpdateCallRequestMethodEnumHead   UpdateCallUpdateCallRequestMethodEnum = "HEAD"
	UpdateCallUpdateCallRequestMethodEnumGet    UpdateCallUpdateCallRequestMethodEnum = "GET"
	UpdateCallUpdateCallRequestMethodEnumPost   UpdateCallUpdateCallRequestMethodEnum = "POST"
	UpdateCallUpdateCallRequestMethodEnumPatch  UpdateCallUpdateCallRequestMethodEnum = "PATCH"
	UpdateCallUpdateCallRequestMethodEnumPut    UpdateCallUpdateCallRequestMethodEnum = "PUT"
	UpdateCallUpdateCallRequestMethodEnumDelete UpdateCallUpdateCallRequestMethodEnum = "DELETE"
)

func (e *UpdateCallUpdateCallRequestMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateCallUpdateCallRequestMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCallUpdateCallRequestMethodEnum: %s", s)
	}
}

// UpdateCallUpdateCallRequestStatusCallbackMethodEnum - The HTTP method we should use when requesting the `status_callback` URL. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
type UpdateCallUpdateCallRequestStatusCallbackMethodEnum string

const (
	UpdateCallUpdateCallRequestStatusCallbackMethodEnumHead   UpdateCallUpdateCallRequestStatusCallbackMethodEnum = "HEAD"
	UpdateCallUpdateCallRequestStatusCallbackMethodEnumGet    UpdateCallUpdateCallRequestStatusCallbackMethodEnum = "GET"
	UpdateCallUpdateCallRequestStatusCallbackMethodEnumPost   UpdateCallUpdateCallRequestStatusCallbackMethodEnum = "POST"
	UpdateCallUpdateCallRequestStatusCallbackMethodEnumPatch  UpdateCallUpdateCallRequestStatusCallbackMethodEnum = "PATCH"
	UpdateCallUpdateCallRequestStatusCallbackMethodEnumPut    UpdateCallUpdateCallRequestStatusCallbackMethodEnum = "PUT"
	UpdateCallUpdateCallRequestStatusCallbackMethodEnumDelete UpdateCallUpdateCallRequestStatusCallbackMethodEnum = "DELETE"
)

func (e *UpdateCallUpdateCallRequestStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateCallUpdateCallRequestStatusCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCallUpdateCallRequestStatusCallbackMethodEnum: %s", s)
	}
}

type UpdateCallUpdateCallRequest struct {
	// The HTTP method that we should use to request the `fallback_url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
	FallbackMethod *UpdateCallUpdateCallRequestFallbackMethodEnum `form:"name=FallbackMethod"`
	// The URL that we call using the `fallback_method` if an error occurs when requesting or executing the TwiML at `url`. If an `application_sid` parameter is present, this parameter is ignored.
	FallbackURL *string `form:"name=FallbackUrl"`
	// The HTTP method we should use when calling the `url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
	Method *UpdateCallUpdateCallRequestMethodEnum `form:"name=Method"`
	Status *shared.CallEnumUpdateStatusEnum       `form:"name=Status"`
	// The URL we should call using the `status_callback_method` to send status information to your application. If no `status_callback_event` is specified, we will send the `completed` status. If an `application_sid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).
	StatusCallback *string `form:"name=StatusCallback"`
	// The HTTP method we should use when requesting the `status_callback` URL. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
	StatusCallbackMethod *UpdateCallUpdateCallRequestStatusCallbackMethodEnum `form:"name=StatusCallbackMethod"`
	// The maximum duration of the call in seconds. Constraints depend on account and configuration.
	TimeLimit *int64 `form:"name=TimeLimit"`
	// TwiML instructions for the call Twilio will use without fetching Twiml from url. Twiml and url parameters are mutually exclusive
	Twiml *string `form:"name=Twiml"`
	// The absolute URL that returns the TwiML instructions for the call. We will call this URL using the `method` when the call connects. For more information, see the [Url Parameter](https://www.twilio.com/docs/voice/make-calls#specify-a-url-parameter) section in [Making Calls](https://www.twilio.com/docs/voice/make-calls).
	URL *string `form:"name=Url"`
}

type UpdateCallRequest struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to update.
	AccountSid  string                       `pathParam:"style=simple,explode=false,name=AccountSid"`
	RequestBody *UpdateCallUpdateCallRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The Twilio-provided string that uniquely identifies the Call resource to update
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateCallResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	APIV2010AccountCall *shared.APIV2010AccountCall
}
