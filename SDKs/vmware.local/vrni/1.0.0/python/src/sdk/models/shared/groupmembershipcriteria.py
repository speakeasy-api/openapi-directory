"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipaddressmembershipcriteria as shared_ipaddressmembershipcriteria
from ..shared import searchmembershipcriteria as shared_searchmembershipcriteria
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GroupMembershipCriteriaMembershipTypeEnum(str, Enum):
    SEARCH_MEMBERSHIP_CRITERIA = 'SearchMembershipCriteria'
    IP_ADDRESS_MEMBERSHIP_CRITERIA = 'IPAddressMembershipCriteria'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GroupMembershipCriteria:
    r"""EntityType currently restricted to VirtualMachine"""
    
    ip_address_membership_criteria: Optional[shared_ipaddressmembershipcriteria.IPAddressMembershipCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip_address_membership_criteria'), 'exclude': lambda f: f is None }})
    r"""Ip Address membership definition"""  
    membership_type: Optional[GroupMembershipCriteriaMembershipTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('membership_type'), 'exclude': lambda f: f is None }})  
    search_membership_criteria: Optional[shared_searchmembershipcriteria.SearchMembershipCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_membership_criteria'), 'exclude': lambda f: f is None }})  
    