/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ObservationHeadingGroup } from "./observationheadinggroup";
import { Expose, Transform, Type } from "class-transformer";

export class ObservationHeading extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "decimalPlaces" })
  decimalPlaces?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultPanel" })
  defaultPanel?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultPanelOrder" })
  defaultPanelOrder?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "heading" })
  heading?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "infoLink" })
  infoLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "maxGraph" })
  maxGraph?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "minGraph" })
  minGraph?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "normalRange" })
  normalRange?: string;

  @SpeakeasyMetadata({ elemType: ObservationHeadingGroup })
  @Expose({ name: "observationHeadingGroups" })
  @Type(() => ObservationHeadingGroup)
  observationHeadingGroups?: ObservationHeadingGroup[];

  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units?: string;
}
