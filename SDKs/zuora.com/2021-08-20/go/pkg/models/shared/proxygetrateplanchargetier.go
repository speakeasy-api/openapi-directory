// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type ProxyGetRatePlanChargeTier struct {
	// The ID of the Zuora user who created the RatePlanChargeTier object. **Character limit**: 32 **Values**: automatically generated
	CreatedByID *string `json:"CreatedById,omitempty"`
	//  The date when the RatePlanChargeTier object was created.
	// **Character limit**: 29 **Values**: automatically generated
	CreatedDate *time.Time `json:"CreatedDate,omitempty"`
	//  The end number of a range of units for the tier.
	// **Character limit**: 16 **Values**: any positive decimal value
	EndingUnit *float64 `json:"EndingUnit,omitempty"`
	// Object identifier.
	ID *string `json:"Id,omitempty"`
	//  The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the change model is tiered pricing.
	// **Character limit**: 16 **Values**: any positive decimal value
	Price *float64 `json:"Price,omitempty"`
	//  Indicates if the price is a flat fee or is per unit.
	// **Character limit**: 8 **Values**: `Flat Fee`, `Per Unit`
	PriceFormat *string `json:"PriceFormat,omitempty"`
	//  The ID of the subscription or amendment rate plan charge associated with this tier. You can't create an unassociated tier.
	// **Character limit**: 32 **Values**: inherited from `RatePlanCharge.Id`.
	RatePlanChargeID *string `json:"RatePlanChargeId,omitempty"`
	//  The start number of a range of units for the tier.
	// **Character limit**: 16 **Values**: any positive decimal value
	StartingUnit *float64 `json:"StartingUnit,omitempty"`
	//  A unique number that identifies the tier that the price applies to.
	// **Character limit**: 20 **Values**: automatically generated
	Tier *int `json:"Tier,omitempty"`
	// The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated
	UpdatedByID *string `json:"UpdatedById,omitempty"`
	//  The date when the object was last updated.
	// **Character limit**: 29 **Values**: automatically generated
	UpdatedDate *time.Time `json:"UpdatedDate,omitempty"`
}
