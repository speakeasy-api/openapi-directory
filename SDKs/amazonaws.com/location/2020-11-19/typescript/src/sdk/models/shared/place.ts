/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PlaceGeometry } from "./placegeometry";
import { TimeZone } from "./timezone";
import { Expose, Type } from "class-transformer";

/**
 * <p>Contains details about addresses or points of interest that match the search criteria.</p> <p>Not all details are included with all responses. Some details may only be returned by specific data partners.</p>
 */
export class Place extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AddressNumber" })
  addressNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  /**
   * Places uses a point geometry to specify a location or a Place.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Geometry" })
  @Type(() => PlaceGeometry)
  geometry: PlaceGeometry;

  @SpeakeasyMetadata()
  @Expose({ name: "Interpolated" })
  interpolated?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Label" })
  label?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Municipality" })
  municipality?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Neighborhood" })
  neighborhood?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PostalCode" })
  postalCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Street" })
  street?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubRegion" })
  subRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeZone" })
  @Type(() => TimeZone)
  timeZone?: TimeZone;

  @SpeakeasyMetadata()
  @Expose({ name: "UnitNumber" })
  unitNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UnitType" })
  unitType?: string;
}
