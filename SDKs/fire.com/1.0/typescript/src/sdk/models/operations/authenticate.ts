/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

/**
 * Always `AccessToken`. (This will change to `refresh_token` in a future release.)
 */
export enum AuthenticateAuthenticationGrantTypeEnum {
  AccessToken = "AccessToken",
}

/**
 * Authentication data
 */
export class AuthenticateAuthentication extends SpeakeasyBase {
  /**
   * The Client ID for this API Application
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * The SHA256 hash of the nonce above and the app’s Client Key. The Client Key will only be shown to you when you create the app, so don’t forget to save it somewhere safe. SECRET=( `/bin/echo -n $NONCE$CLIENT_KEY | sha256sum` ).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret?: string;

  /**
   * Always `AccessToken`. (This will change to `refresh_token` in a future release.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grantType" })
  grantType?: AuthenticateAuthenticationGrantTypeEnum;

  /**
   * A random non-repeating number used as a salt for the `clientSecret` below. The simplest nonce is a unix time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonce" })
  nonce?: number;

  /**
   * The Refresh Token for this API Application
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refreshToken" })
  refreshToken?: string;
}

/**
 * Successfully authenticated
 */
export class AuthenticateAccessToken extends SpeakeasyBase {
  /**
   * The App Bearer Access Token you can use in further API calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessToken" })
  accessToken?: string;

  /**
   * The ID of the application you are using.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiApplicationId" })
  apiApplicationId?: number;

  /**
   * The business ID for the business.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "businessId" })
  businessId?: number;

  /**
   * The expiry date and time for this token (ISO-8601).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiry" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiry?: Date;

  /**
   * The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: string[];
}

export class AuthenticateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successfully authenticated
   */
  @SpeakeasyMetadata()
  accessToken?: AuthenticateAccessToken;
}
