/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The reporting related to a harvest order operation
 */
export class HarvestOrderReporting extends SpeakeasyBase {
  /**
   * The marketplace order status forced by BeezUP during the order change oepration. This could happend when there is no status on the marketplace side.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beezUPForcedStatus" })
  beezUPForcedStatus?: string;

  /**
   * BeezUP order status. Unified for all marketplaces.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beezUPStatus" })
  beezUPStatus?: string;

  /**
   * The creation UTC date of the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationUtcDate?: Date;

  /**
   * The warning message during the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * The execution identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionUUID" })
  executionUUID?: string;

  /**
   * The last update UTC date of the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateUtcDate?: Date;

  /**
   * The order marketplace status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketplaceStatus" })
  marketplaceStatus?: string;

  /**
   * The processing status of the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processingStatus" })
  processingStatus?: string;

  /**
   * The warning message during the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warningMessage" })
  warningMessage?: string;
}
