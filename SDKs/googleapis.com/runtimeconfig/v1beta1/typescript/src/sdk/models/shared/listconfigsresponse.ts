/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RuntimeConfig } from "./runtimeconfig";
import { Expose, Type } from "class-transformer";

/**
 * `ListConfigs()` returns the following response. The order of returned objects is arbitrary; that is, it is not ordered in any particular way.
 */
export class ListConfigsResponse extends SpeakeasyBase {
  /**
   * A list of the configurations in the project. The order of returned objects is arbitrary; that is, it is not ordered in any particular way.
   */
  @SpeakeasyMetadata({ elemType: RuntimeConfig })
  @Expose({ name: "configs" })
  @Type(() => RuntimeConfig)
  configs?: RuntimeConfig[];

  /**
   * This token allows you to get the next page of results for list requests. If the number of results is larger than `pageSize`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
