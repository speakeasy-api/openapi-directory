// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum - The type of resource, for example a VPC attachment.
type GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum string

const (
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnumVpc                  GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum = "vpc"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnumVpn                  GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum = "vpn"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnumDirectConnectGateway GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum = "direct-connect-gateway"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnumConnect              GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum = "connect"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnumPeering              GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum = "peering"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnumTgwPeering           GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum = "tgw-peering"
)

func (e *GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum: %s", s)
	}
}

// GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum - The state of the subnet association.
type GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum string

const (
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumPendingAcceptance GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "pendingAcceptance"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumAssociating       GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "associating"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumAssociated        GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "associated"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumDisassociating    GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "disassociating"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumDisassociated     GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "disassociated"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumRejected          GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "rejected"
	GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnumFailed            GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum = "failed"
)

func (e *GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pendingAcceptance":
		fallthrough
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "rejected":
		fallthrough
	case "failed":
		*e = GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum: %s", s)
	}
}

// GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnet - The subnet associated with the transit gateway multicast domain.
type GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnet struct {
	State    *GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum
	SubnetID *string
}

// GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociations - Describes the resources associated with the transit gateway multicast domain.
type GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociations struct {
	ResourceID                 *string
	ResourceOwnerID            *string
	ResourceType               *GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum
	Subnet                     *GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnet
	TransitGatewayAttachmentID *string
}

// GetTransitGatewayMulticastDomainAssociationsResult - Success
type GetTransitGatewayMulticastDomainAssociationsResult struct {
	MulticastDomainAssociations []GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociations
	NextToken                   *string
}
