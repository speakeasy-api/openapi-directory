"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SubscriptionBillingCommitmentEnum(str, Enum):
    r"""The financial commitment the customer has in the product"""
    PAID = 'PAID'
    FREE = 'FREE'
    TRIAL = 'TRIAL'

class SubscriptionBillingPastDueTypesEnum(str, Enum):
    ADDON = 'ADDON'
    BURST = 'BURST'
    SUBSCRIPTION = 'SUBSCRIPTION'

class SubscriptionBillingStatusEnum(str, Enum):
    r"""Whether payments are past due"""
    CURRENT = 'CURRENT'
    PAST_DUE = 'PAST_DUE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionBilling:
    
    commitment: SubscriptionBillingCommitmentEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitment') }})
    r"""The financial commitment the customer has in the product"""  
    renew_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewAt') }})
    r"""The point in time after which the Subscription will bill for automatic renewal"""  
    status: SubscriptionBillingStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Whether payments are past due"""  
    past_due_types: Optional[list[SubscriptionBillingPastDueTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pastDueTypes'), 'exclude': lambda f: f is None }})
    r"""The types of charges that are past due when `status` is PAST_DUE"""  
    