"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import document as shared_document
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AnalyzeSentimentRequestEncodingTypeEnum(str, Enum):
    r"""The encoding type used by the API to calculate sentence offsets for the sentence sentiment."""
    NONE = 'NONE'
    UTF8 = 'UTF8'
    UTF16 = 'UTF16'
    UTF32 = 'UTF32'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyzeSentimentRequest:
    r"""The sentiment analysis request message."""
    
    document: Optional[shared_document.Document] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document'), 'exclude': lambda f: f is None }})
    r"""Represents the input to API methods."""  
    encoding_type: Optional[AnalyzeSentimentRequestEncodingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encodingType'), 'exclude': lambda f: f is None }})
    r"""The encoding type used by the API to calculate sentence offsets for the sentence sentiment."""  
    