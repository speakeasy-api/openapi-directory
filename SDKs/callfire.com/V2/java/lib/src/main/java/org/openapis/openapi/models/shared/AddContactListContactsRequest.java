/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AddContactListContactsRequest - Request object for adding new contacts to an existing contact list
 */
public class AddContactListContactsRequest {
    /**
     * A list of ids of existing contacts in CallFire system
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactIds")
    public Long[] contactIds;
    public AddContactListContactsRequest withContactIds(Long[] contactIds) {
        this.contactIds = contactIds;
        return this;
    }
    
    /**
     * A phone number in E.164 format (11-digit). Examples: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactNumbers")
    public String[] contactNumbers;
    public AddContactListContactsRequest withContactNumbers(String[] contactNumbers) {
        this.contactNumbers = contactNumbers;
        return this;
    }
    
    /**
     * A type of phone number (homePhone, workPhone, mobilePhone). This parameter works together with contactNumbers and specifies which types of numbers are included to a list
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactNumbersField")
    public String contactNumbersField;
    public AddContactListContactsRequest withContactNumbersField(String contactNumbersField) {
        this.contactNumbersField = contactNumbersField;
        return this;
    }
    
    /**
     * A list of new contact objects which need to be added
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contacts")
    public Contact[] contacts;
    public AddContactListContactsRequest withContacts(Contact[] contacts) {
        this.contacts = contacts;
        return this;
    }
    
    /**
     * A flag to indicate how to define property names for contacts. If true, uses the field and property names exactly as defined. If false will assign custom properties and fields to A, B, C, etc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useCustomFields")
    public Boolean useCustomFields;
    public AddContactListContactsRequest withUseCustomFields(Boolean useCustomFields) {
        this.useCustomFields = useCustomFields;
        return this;
    }
    
}
