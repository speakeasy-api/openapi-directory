"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExtendedKeyUsageOptions:
    r"""KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain common OIDs that could be specified as an extended key usage value."""
    
    client_auth: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientAuth'), 'exclude': lambda f: f is None }})
    r"""Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \\"TLS WWW client authentication\\", though regularly used for non-WWW TLS."""  
    code_signing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codeSigning'), 'exclude': lambda f: f is None }})
    r"""Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \\"Signing of downloadable executable code client authentication\\"."""  
    email_protection: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailProtection'), 'exclude': lambda f: f is None }})
    r"""Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \\"Email protection\\"."""  
    ocsp_signing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ocspSigning'), 'exclude': lambda f: f is None }})
    r"""Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \\"Signing OCSP responses\\"."""  
    server_auth: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverAuth'), 'exclude': lambda f: f is None }})
    r"""Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \\"TLS WWW server authentication\\", though regularly used for non-WWW TLS."""  
    time_stamping: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeStamping'), 'exclude': lambda f: f is None }})
    r"""Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \\"Binding the hash of an object to a time\\"."""  
    