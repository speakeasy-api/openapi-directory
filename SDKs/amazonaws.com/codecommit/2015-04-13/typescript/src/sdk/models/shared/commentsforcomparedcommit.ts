/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Comment } from "./comment";
import { Location } from "./location";
import { Expose, Type } from "class-transformer";

/**
 * Returns information about comments on the comparison between two commits.
 */
export class CommentsForComparedCommit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "afterBlobId" })
  afterBlobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "afterCommitId" })
  afterCommitId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beforeBlobId" })
  beforeBlobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beforeCommitId" })
  beforeCommitId?: string;

  @SpeakeasyMetadata({ elemType: Comment })
  @Expose({ name: "comments" })
  @Type(() => Comment)
  comments?: Comment[];

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => Location)
  location?: Location;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryName" })
  repositoryName?: string;
}
