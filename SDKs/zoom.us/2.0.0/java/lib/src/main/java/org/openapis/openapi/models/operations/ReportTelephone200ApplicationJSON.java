/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * ReportTelephone200ApplicationJSON - **HTTP Status Code:** `200`&lt;br&gt;
 * Telephone report returned.&lt;br&gt;
 * This is only available for paid account:{accountId}.&lt;br&gt;
 * The requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.&lt;br&gt;
 * Toll Report feature must be enabled to perform this action. Contact the Zoom Support team for help.
 */
public class ReportTelephone200ApplicationJSON {
    /**
     * Start date for this report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("from")
    public LocalDate from;
    public ReportTelephone200ApplicationJSON withFrom(LocalDate from) {
        this.from = from;
        return this;
    }
    
    /**
     * The page number of the current results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_token")
    public Long nextPageToken;
    public ReportTelephone200ApplicationJSON withNextPageToken(Long nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of pages returned for the request made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_count")
    public Long pageCount;
    public ReportTelephone200ApplicationJSON withPageCount(Long pageCount) {
        this.pageCount = pageCount;
        return this;
    }
    
    /**
     * The number of records returned with a single API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public ReportTelephone200ApplicationJSON withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Array of telephony objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("telephony_usage")
    public ReportTelephone200ApplicationJSONTelephonyUsage[] telephonyUsage;
    public ReportTelephone200ApplicationJSON withTelephonyUsage(ReportTelephone200ApplicationJSONTelephonyUsage[] telephonyUsage) {
        this.telephonyUsage = telephonyUsage;
        return this;
    }
    
    /**
     * End date for this report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("to")
    public LocalDate to;
    public ReportTelephone200ApplicationJSON withTo(LocalDate to) {
        this.to = to;
        return this;
    }
    
    /**
     * The total number of all the records available across pages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_records")
    public Long totalRecords;
    public ReportTelephone200ApplicationJSON withTotalRecords(Long totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }
    
}
