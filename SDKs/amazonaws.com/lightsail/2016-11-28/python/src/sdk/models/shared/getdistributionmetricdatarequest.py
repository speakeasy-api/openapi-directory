"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import distributionmetricname_enum as shared_distributionmetricname_enum
from ..shared import metricstatistic_enum as shared_metricstatistic_enum
from ..shared import metricunit_enum as shared_metricunit_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetDistributionMetricDataRequest:
    
    distribution_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distributionName') }})  
    end_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    metric_name: shared_distributionmetricname_enum.DistributionMetricNameEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricName') }})  
    period: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('period') }})  
    start_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    statistics: list[shared_metricstatistic_enum.MetricStatisticEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statistics') }})  
    unit: shared_metricunit_enum.MetricUnitEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit') }})  
    