// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type NetworkAttributes struct {
	// The copyright of the network
	Copyright *string    `json:"copyright,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The description of the network eventually in HTML format
	Description *string `json:"description,omitempty"`
	// Determines whether `description` is in HTML format or plain.
	DescriptionIsHTML *bool `json:"description_is_html,omitempty"`
	// The description with all HTML markup removed. If the description does not contain markup
	// this is identitcal to `description`.
	//
	DescriptionPlain *string `json:"description_plain,omitempty"`
	// Where to find this network on Facebook
	FacebookURL *string `json:"facebook_url,omitempty"`
	// Where to find this network on Instagram
	InstagramURL *string `json:"instagram_url,omitempty"`
	// Where to find the network on LinkedIn
	LinkedinURL *string `json:"linkedin_url,omitempty"`
	// The name of the network
	Name *string `json:"name,omitempty"`
	// A public point of contact through email
	PublicEmail *string `json:"public_email,omitempty"`
	// If this is `true`, a public web page for this network is available under
	// `https://art19.com/networks/{slug}`, where `slug` is the value of the corresponding attribute.
	// This public page provides details about the network as well as descriptive links to all its
	// series' public pages. If this is `false`, no such public page is available.
	//
	PublicPageEnabled *bool `json:"public_page_enabled,omitempty"`
	// The unique slug for the network also used on its public page for example.
	// This value is unique system-wide amongst all networks _and_ series.
	//
	Slug *string `json:"slug,omitempty"`
	// Where to find the network on Tumblr
	TumblrURL *string `json:"tumblr_url,omitempty"`
	// Where to find the network on Twitter
	TwitterURL *string    `json:"twitter_url,omitempty"`
	UpdatedAt  *time.Time `json:"updated_at,omitempty"`
	// A public website for the network
	WebsiteURL *string `json:"website_url,omitempty"`
}

// NetworkRelationshipsCoverImage - The cover image for the network
type NetworkRelationshipsCoverImage struct {
	Data *ResourceIdentifier `json:"data,omitempty"`
}

// NetworkRelationshipsImages - A collection of images linked to the network. This currently only includes
// the cover image for the network.
type NetworkRelationshipsImages struct {
	Data []ResourceIdentifier `json:"data,omitempty"`
}

// NetworkRelationshipsParent - The parent network of the network
type NetworkRelationshipsParent struct {
	Data *ResourceIdentifier `json:"data,omitempty"`
}

// NetworkRelationshipsSeries - List of series within the network which are accessible to you
type NetworkRelationshipsSeries struct {
	Data []ResourceIdentifier `json:"data,omitempty"`
}

type NetworkRelationships struct {
	// The cover image for the network
	CoverImage *NetworkRelationshipsCoverImage `json:"cover_image,omitempty"`
	// A collection of images linked to the network. This currently only includes
	// the cover image for the network.
	//
	Images *NetworkRelationshipsImages `json:"images,omitempty"`
	// The parent network of the network
	Parent *NetworkRelationshipsParent `json:"parent,omitempty"`
	// List of series within the network which are accessible to you
	Series *NetworkRelationshipsSeries `json:"series,omitempty"`
}

type Network struct {
	Attributes    *NetworkAttributes    `json:"attributes,omitempty"`
	ID            *string               `json:"id,omitempty"`
	Relationships *NetworkRelationships `json:"relationships,omitempty"`
	// The type of resource. This is always `networks`
	Type *string `json:"type,omitempty"`
}
