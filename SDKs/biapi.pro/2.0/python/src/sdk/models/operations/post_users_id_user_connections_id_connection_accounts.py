"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import account as shared_account
from typing import Optional


@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionAccountsRequestBody:
    
    name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'name' }})
    r"""name of account"""  
    balance: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'balance' }})
    r"""balance of account"""  
    iban: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'iban' }})
    r"""IBAN of account"""  
    id_connection: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'id_connection' }})
    r"""the connection to attach to the account"""  
    id_currency: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'id_currency' }})
    r"""the currency of the account (default: 'EUR')"""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'number' }})
    r"""number of account"""  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionAccountsRequest:
    
    id_connection: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_connection', 'style': 'simple', 'explode': False }})  
    id_user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id_user', 'style': 'simple', 'explode': False }})
    r"""Hint: you can use 'me' or 'all'"""  
    request_body: PostUsersIDUserConnectionsIDConnectionAccountsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionAccountsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    account: Optional[shared_account.Account] = dataclasses.field(default=None)
    r"""Successful POST on Account resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    