"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import groupsearchresults as shared_groupsearchresults
from ..shared import sortby_enum as shared_sortby_enum
from ..shared import sortorder_enum as shared_sortorder_enum
from typing import Optional


@dataclasses.dataclass
class ListGroupsRequest:
    
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The number of groups to return.  Defaults to 20."""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The number of groups to skip before starting the result set.  Defaults to 0."""  
    order: Optional[shared_sortorder_enum.SortOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""Sort order, ascending (`asc`) or descending (`desc`)."""  
    orderby: Optional[shared_sortby_enum.SortByEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'orderby', 'style': 'form', 'explode': True }})
    r"""The field to sort by.  Can be one of:
    
    * `name`
    * `createdOn`
    """  
    

@dataclasses.dataclass
class ListGroupsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Common response for all operations that can fail with an unexpected server error."""  
    group_search_results: Optional[shared_groupsearchresults.GroupSearchResults] = dataclasses.field(default=None)
    r"""On a successful response, returns a bounded set of groups."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    