/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Commit - Commit
 */
public class Commit {
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public User author;
    public Commit withAuthor(User author) {
        this.author = author;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commit")
    public RepoCommit commit;
    public Commit withCommit(RepoCommit commit) {
        this.commit = commit;
        return this;
    }
    
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committer")
    public User committer;
    public Commit withCommitter(User committer) {
        this.committer = committer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;
    public Commit withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public CommitAffectedFiles[] files;
    public Commit withFiles(CommitAffectedFiles[] files) {
        this.files = files;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;
    public Commit withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parents")
    public CommitMeta[] parents;
    public Commit withParents(CommitMeta[] parents) {
        this.parents = parents;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sha")
    public String sha;
    public Commit withSha(String sha) {
        this.sha = sha;
        return this;
    }
    
    /**
     * CommitStats is statistics for a RepoCommit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stats")
    public CommitStats stats;
    public Commit withStats(CommitStats stats) {
        this.stats = stats;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public Commit withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
