/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DefaultCacheBehavior - A complex type that describes the default cache behavior if you don't specify a &lt;code&gt;CacheBehavior&lt;/code&gt; element or if request URLs don't match any of the values of &lt;code&gt;PathPattern&lt;/code&gt; in &lt;code&gt;CacheBehavior&lt;/code&gt; elements. You must create exactly one default cache behavior.
 */
public class DefaultCacheBehavior {
    /**
     * &lt;p&gt;A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CloudFront forwards only &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudFront forwards only &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, and &lt;code&gt;OPTIONS&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudFront forwards &lt;code&gt;GET, HEAD, OPTIONS, PUT, PATCH, POST&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.&lt;/p&gt;
     */
    
    public AllowedMethods allowedMethods;
    public DefaultCacheBehavior withAllowedMethods(AllowedMethods allowedMethods) {
        this.allowedMethods = allowedMethods;
        return this;
    }
    
    
    public String cachePolicyId;
    public DefaultCacheBehavior withCachePolicyId(String cachePolicyId) {
        this.cachePolicyId = cachePolicyId;
        return this;
    }
    
    
    public Boolean compress;
    public DefaultCacheBehavior withCompress(Boolean compress) {
        this.compress = compress;
        return this;
    }
    
    
    public Long defaultTTL;
    public DefaultCacheBehavior withDefaultTTL(Long defaultTTL) {
        this.defaultTTL = defaultTTL;
        return this;
    }
    
    
    public String fieldLevelEncryptionId;
    public DefaultCacheBehavior withFieldLevelEncryptionId(String fieldLevelEncryptionId) {
        this.fieldLevelEncryptionId = fieldLevelEncryptionId;
        return this;
    }
    
    
    public DefaultCacheBehaviorForwardedValues forwardedValues;
    public DefaultCacheBehavior withForwardedValues(DefaultCacheBehaviorForwardedValues forwardedValues) {
        this.forwardedValues = forwardedValues;
        return this;
    }
    
    
    public FunctionAssociations functionAssociations;
    public DefaultCacheBehavior withFunctionAssociations(FunctionAssociations functionAssociations) {
        this.functionAssociations = functionAssociations;
        return this;
    }
    
    
    public LambdaFunctionAssociations lambdaFunctionAssociations;
    public DefaultCacheBehavior withLambdaFunctionAssociations(LambdaFunctionAssociations lambdaFunctionAssociations) {
        this.lambdaFunctionAssociations = lambdaFunctionAssociations;
        return this;
    }
    
    
    public Long maxTTL;
    public DefaultCacheBehavior withMaxTTL(Long maxTTL) {
        this.maxTTL = maxTTL;
        return this;
    }
    
    
    public Long minTTL;
    public DefaultCacheBehavior withMinTTL(Long minTTL) {
        this.minTTL = minTTL;
        return this;
    }
    
    
    public String originRequestPolicyId;
    public DefaultCacheBehavior withOriginRequestPolicyId(String originRequestPolicyId) {
        this.originRequestPolicyId = originRequestPolicyId;
        return this;
    }
    
    
    public String realtimeLogConfigArn;
    public DefaultCacheBehavior withRealtimeLogConfigArn(String realtimeLogConfigArn) {
        this.realtimeLogConfigArn = realtimeLogConfigArn;
        return this;
    }
    
    
    public String responseHeadersPolicyId;
    public DefaultCacheBehavior withResponseHeadersPolicyId(String responseHeadersPolicyId) {
        this.responseHeadersPolicyId = responseHeadersPolicyId;
        return this;
    }
    
    
    public Boolean smoothStreaming;
    public DefaultCacheBehavior withSmoothStreaming(Boolean smoothStreaming) {
        this.smoothStreaming = smoothStreaming;
        return this;
    }
    
    
    public String targetOriginId;
    public DefaultCacheBehavior withTargetOriginId(String targetOriginId) {
        this.targetOriginId = targetOriginId;
        return this;
    }
    
    
    public TrustedKeyGroups trustedKeyGroups;
    public DefaultCacheBehavior withTrustedKeyGroups(TrustedKeyGroups trustedKeyGroups) {
        this.trustedKeyGroups = trustedKeyGroups;
        return this;
    }
    
    
    public TrustedSigners trustedSigners;
    public DefaultCacheBehavior withTrustedSigners(TrustedSigners trustedSigners) {
        this.trustedSigners = trustedSigners;
        return this;
    }
    
    
    public ViewerProtocolPolicyEnum viewerProtocolPolicy;
    public DefaultCacheBehavior withViewerProtocolPolicy(ViewerProtocolPolicyEnum viewerProtocolPolicy) {
        this.viewerProtocolPolicy = viewerProtocolPolicy;
        return this;
    }
    
}
