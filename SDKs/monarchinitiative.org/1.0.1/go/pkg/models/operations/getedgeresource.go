// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetEdgeResourcePathParams struct {
	// CURIE e.g. HP:0000465
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetEdgeResourceDirectionEnum - Which direction to traverse (used only if relationship_type is defined)
type GetEdgeResourceDirectionEnum string

const (
	GetEdgeResourceDirectionEnumIncoming GetEdgeResourceDirectionEnum = "INCOMING"
	GetEdgeResourceDirectionEnumOutgoing GetEdgeResourceDirectionEnum = "OUTGOING"
	GetEdgeResourceDirectionEnumBoth     GetEdgeResourceDirectionEnum = "BOTH"
)

func (e *GetEdgeResourceDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INCOMING":
		fallthrough
	case "OUTGOING":
		fallthrough
	case "BOTH":
		*e = GetEdgeResourceDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEdgeResourceDirectionEnum: %s", s)
	}
}

// GetEdgeResourceGraphEnum - Which monarch graph to query
type GetEdgeResourceGraphEnum string

const (
	GetEdgeResourceGraphEnumData     GetEdgeResourceGraphEnum = "data"
	GetEdgeResourceGraphEnumOntology GetEdgeResourceGraphEnum = "ontology"
)

func (e *GetEdgeResourceGraphEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "data":
		fallthrough
	case "ontology":
		*e = GetEdgeResourceGraphEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEdgeResourceGraphEnum: %s", s)
	}
}

type GetEdgeResourceQueryParams struct {
	// How far to traverse for neighbors
	Depth *int64 `queryParam:"style=form,explode=true,name=depth"`
	// Which direction to traverse (used only if relationship_type is defined)
	Direction *GetEdgeResourceDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// Include sub-properties and equivalent properties
	Entail *bool `queryParam:"style=form,explode=true,name=entail"`
	// Which monarch graph to query
	Graph *GetEdgeResourceGraphEnum `queryParam:"style=form,explode=true,name=graph"`
	// Relationship type to traverse
	RelationshipType []string `queryParam:"style=form,explode=true,name=relationship_type"`
}

type GetEdgeResourceRequest struct {
	PathParams  GetEdgeResourcePathParams
	QueryParams GetEdgeResourceQueryParams
}

type GetEdgeResourceResponse struct {
	ContentType string
	// Success
	Graphs      []shared.Graph
	StatusCode  int
	RawResponse *http.Response
}
