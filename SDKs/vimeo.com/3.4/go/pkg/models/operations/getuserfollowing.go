// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUserFollowingDirectionEnum - The sort direction of the results.
type GetUserFollowingDirectionEnum string

const (
	GetUserFollowingDirectionEnumAsc  GetUserFollowingDirectionEnum = "asc"
	GetUserFollowingDirectionEnumDesc GetUserFollowingDirectionEnum = "desc"
)

func (e *GetUserFollowingDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetUserFollowingDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserFollowingDirectionEnum: %s", s)
	}
}

// GetUserFollowingFilterEnum - The attribute by which to filter the results.
type GetUserFollowingFilterEnum string

const (
	GetUserFollowingFilterEnumOnline GetUserFollowingFilterEnum = "online"
)

func (e *GetUserFollowingFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "online":
		*e = GetUserFollowingFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserFollowingFilterEnum: %s", s)
	}
}

// GetUserFollowingSortEnum - The way to sort the results.
type GetUserFollowingSortEnum string

const (
	GetUserFollowingSortEnumAlphabetical GetUserFollowingSortEnum = "alphabetical"
	GetUserFollowingSortEnumDate         GetUserFollowingSortEnum = "date"
)

func (e *GetUserFollowingSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		*e = GetUserFollowingSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserFollowingSortEnum: %s", s)
	}
}

type GetUserFollowingRequest struct {
	// The sort direction of the results.
	Direction *GetUserFollowingDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetUserFollowingFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetUserFollowingSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

type GetUserFollowingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The followed users were returned.
	Users []shared.User
}
