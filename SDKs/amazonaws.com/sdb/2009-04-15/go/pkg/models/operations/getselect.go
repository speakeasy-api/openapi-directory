// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSelectActionEnum
type GETSelectActionEnum string

const (
	GETSelectActionEnumSelect GETSelectActionEnum = "Select"
)

func (e *GETSelectActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Select":
		*e = GETSelectActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSelectActionEnum: %s", s)
	}
}

// GETSelectVersionEnum
type GETSelectVersionEnum string

const (
	GETSelectVersionEnumTwoThousandAndNine0415 GETSelectVersionEnum = "2009-04-15"
)

func (e *GETSelectVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2009-04-15":
		*e = GETSelectVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSelectVersionEnum: %s", s)
	}
}

type GETSelectRequest struct {
	AWSAccessKeyID string              `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action         GETSelectActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.
	ConsistentRead *bool `queryParam:"style=form,explode=true,name=ConsistentRead"`
	// A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The expression used to query the domain.
	SelectExpression string               `queryParam:"style=form,explode=true,name=SelectExpression"`
	Signature        string               `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string               `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string               `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string               `queryParam:"style=form,explode=true,name=Timestamp"`
	Version          GETSelectVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETSelectResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
