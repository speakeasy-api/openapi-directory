// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDetachInstancesActionEnum
type GETDetachInstancesActionEnum string

const (
	GETDetachInstancesActionEnumDetachInstances GETDetachInstancesActionEnum = "DetachInstances"
)

func (e *GETDetachInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DetachInstances":
		*e = GETDetachInstancesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDetachInstancesActionEnum: %s", s)
	}
}

// GETDetachInstancesVersionEnum
type GETDetachInstancesVersionEnum string

const (
	GETDetachInstancesVersionEnumTwoThousandAndEleven0101 GETDetachInstancesVersionEnum = "2011-01-01"
)

func (e *GETDetachInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETDetachInstancesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDetachInstancesVersionEnum: %s", s)
	}
}

type GETDetachInstancesQueryParams struct {
	Action GETDetachInstancesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The IDs of the instances. You can specify up to 20 instances.
	InstanceIds []string `queryParam:"style=form,explode=true,name=InstanceIds"`
	// Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.
	ShouldDecrementDesiredCapacity bool                          `queryParam:"style=form,explode=true,name=ShouldDecrementDesiredCapacity"`
	Version                        GETDetachInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDetachInstancesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDetachInstancesRequest struct {
	QueryParams GETDetachInstancesQueryParams
	Headers     GETDetachInstancesHeaders
}

type GETDetachInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
