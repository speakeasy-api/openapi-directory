/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PlanData } from "./plandata";
import { Expose, Transform, Type } from "class-transformer";

export class ApiUsage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "endsAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endsAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "licenseId" })
  licenseId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organizationId" })
  organizationId?: string;

  @SpeakeasyMetadata({ elemType: PlanData })
  @Expose({ name: "planData" })
  @Type(() => PlanData)
  planData?: PlanData[];

  @SpeakeasyMetadata()
  @Expose({ name: "predictionsMax" })
  predictionsMax?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "predictionsUsed" })
  predictionsUsed?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startsAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startsAt?: Date;
}
