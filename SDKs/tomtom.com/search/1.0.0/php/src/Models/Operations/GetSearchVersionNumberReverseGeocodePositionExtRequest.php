<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSearchVersionNumberReverseGeocodePositionExtRequest
{
    /**
     * Specifies the jsonp callback method.
     * 
     * @var ?string $callback
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=callback')]
    public ?string $callback = null;
    
    /**
     * Expected response format.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ext')]
    public \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext;
    
    /**
     * The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)
     * 
     * @var ?float $heading
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=heading')]
    public ?float $heading = null;
    
    /**
     * If a number is sent in along with the request, the response may include the side of the street (Left/Right) and an offset position for that number.
     * 
     * @var ?string $number
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=number')]
    public ?string $number = null;
    
    /**
     * This is specified as a comma separated string composed of lat., lon.
     * 
     * @var string $position
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=position')]
    public string $position;
    
    /**
     * The maximum distance in meters from the specified position for the reverse geocoder to consider.
     * 
     * @var ?int $radius
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=radius')]
    public ?int $radius = null;
    
    /**
     * Enables return of the road use array for reverse geocodes at street level.
     * 
     * @var ?bool $returnRoadUse
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=returnRoadUse')]
    public ?bool $returnRoadUse = null;
    
    /**
     * To enable return of the posted speed limit (where available).
     * 
     * @var ?bool $returnSpeedLimit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=returnSpeedLimit')]
    public ?bool $returnSpeedLimit = null;
    
    /**
     * Restricts reverse geocodes to a certain type of road use. The road use array for reverse geocodes can be one or more of: ["LimitedAccess", "Arterial", "Terminal", "Ramp", "Rotary", "LocalStreet"].
     * 
     * @var ?string $roadUse
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=roadUse')]
    public ?string $roadUse = null;
    
    /**
     * If the "spatialKeys" flag is set, the response will also contain a proprietary geospatial keys for a specified location.
     * 
     * @var ?bool $spatialKeys
     * @deprecated this field will be removed in a future release, please migrate away from it as soon as possible
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=spatialKeys')]
    public ?bool $spatialKeys = null;
    
    /**
     * Service version number. The current value is 2.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=versionNumber')]
    public \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber;
    
	public function __construct()
	{
		$this->callback = null;
		$this->ext = \OpenAPI\OpenAPI\Models\Shared\ExtEnum::JSON;
		$this->heading = null;
		$this->number = null;
		$this->position = "";
		$this->radius = null;
		$this->returnRoadUse = null;
		$this->returnSpeedLimit = null;
		$this->roadUse = null;
		$this->spatialKeys = null;
		$this->versionNumber = \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum::TWO;
	}
}
