// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLicenseManagerReportGeneratorXAmzTargetEnum
type GetLicenseManagerReportGeneratorXAmzTargetEnum string

const (
	GetLicenseManagerReportGeneratorXAmzTargetEnumAwsLicenseManagerGetLicenseManagerReportGenerator GetLicenseManagerReportGeneratorXAmzTargetEnum = "AWSLicenseManager.GetLicenseManagerReportGenerator"
)

func (e GetLicenseManagerReportGeneratorXAmzTargetEnum) ToPointer() *GetLicenseManagerReportGeneratorXAmzTargetEnum {
	return &e
}

func (e *GetLicenseManagerReportGeneratorXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSLicenseManager.GetLicenseManagerReportGenerator":
		*e = GetLicenseManagerReportGeneratorXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLicenseManagerReportGeneratorXAmzTargetEnum: %v", v)
	}
}

type GetLicenseManagerReportGeneratorRequest struct {
	GetLicenseManagerReportGeneratorRequest shared.GetLicenseManagerReportGeneratorRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                           *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                       *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                          *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                       *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                           *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                       *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                              GetLicenseManagerReportGeneratorXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetLicenseManagerReportGeneratorResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// Success
	GetLicenseManagerReportGeneratorResponse *shared.GetLicenseManagerReportGeneratorResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServerInternalException
	ServerInternalException interface{}
	// ValidationException
	ValidationException interface{}
}
