/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * NotificationAttributes - Attributes for the notification including the path, recipients, and share data. 
 */
public class NotificationAttributes {
    /**
     * Action that triggers notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public NotificationAttributesActionEnum action;
    public NotificationAttributes withAction(NotificationAttributesActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Timestamp of notifiction creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;
    public NotificationAttributes withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Custom message that will be sent to the notification recipients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public NotificationAttributes withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Timestamp of notification modification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modified")
    public OffsetDateTime modified;
    public NotificationAttributes withModified(OffsetDateTime modified) {
        this.modified = modified;
        return this;
    }
    
    /**
     * Name of the item that the notification is set on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NotificationAttributes withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Path to the item that the notification is set on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public NotificationAttributes withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Human readable description of the notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readableDescription")
    public String readableDescription;
    public NotificationAttributes withReadableDescription(String readableDescription) {
        this.readableDescription = readableDescription;
        return this;
    }
    
    /**
     * Human readable description of the notification without item path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readableDescriptionWithoutPath")
    public String readableDescriptionWithoutPath;
    public NotificationAttributes withReadableDescriptionWithoutPath(String readableDescriptionWithoutPath) {
        this.readableDescriptionWithoutPath = readableDescriptionWithoutPath;
        return this;
    }
    
    /**
     * Notification recipients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recipients")
    public NotificationRecipient[] recipients;
    public NotificationAttributes withRecipients(NotificationRecipient[] recipients) {
        this.recipients = recipients;
        return this;
    }
    
    /**
     * Whether or not an email will send when the notification is triggered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendEmail")
    public NotificationAttributesSendEmailEnum sendEmail;
    public NotificationAttributes withSendEmail(NotificationAttributesSendEmailEnum sendEmail) {
        this.sendEmail = sendEmail;
        return this;
    }
    
    /**
     * ID of the share that the notification belogns to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareId")
    public String shareId;
    public NotificationAttributes withShareId(String shareId) {
        this.shareId = shareId;
        return this;
    }
    
    /**
     * Type of the resource the notification is attached to. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public NotificationAttributesTypeEnum type;
    public NotificationAttributes withType(NotificationAttributesTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * ID of the user that the notification belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public String userId;
    public NotificationAttributes withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * Detail on which users can trigger the notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usernames")
    public String[] usernames;
    public NotificationAttributes withUsernames(String[] usernames) {
        this.usernames = usernames;
        return this;
    }
    
}
