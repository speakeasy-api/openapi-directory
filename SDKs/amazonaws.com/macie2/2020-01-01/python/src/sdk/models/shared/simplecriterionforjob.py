"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jobcomparator_enum as shared_jobcomparator_enum
from ..shared import simplecriterionkeyforjob_enum as shared_simplecriterionkeyforjob_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SimpleCriterionForJob:
    r"""Specifies a property-based condition that determines whether an S3 bucket is included or excluded from a classification job."""
    
    comparator: Optional[shared_jobcomparator_enum.JobComparatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comparator'), 'exclude': lambda f: f is None }})  
    key: Optional[shared_simplecriterionkeyforjob_enum.SimpleCriterionKeyForJobEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})  
    values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})  
    