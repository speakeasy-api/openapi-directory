/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2NumericalStatsResult - Result of the numerical stats computation.
 */
public class GooglePrivacyDlpV2NumericalStatsResult {
    /**
     * Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxValue")
    public GooglePrivacyDlpV2Value maxValue;

    public GooglePrivacyDlpV2NumericalStatsResult withMaxValue(GooglePrivacyDlpV2Value maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minValue")
    public GooglePrivacyDlpV2Value minValue;

    public GooglePrivacyDlpV2NumericalStatsResult withMinValue(GooglePrivacyDlpV2Value minValue) {
        this.minValue = minValue;
        return this;
    }
    
    /**
     * List of 99 values that partition the set of field values into 100 equal sized buckets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantileValues")
    public GooglePrivacyDlpV2Value[] quantileValues;

    public GooglePrivacyDlpV2NumericalStatsResult withQuantileValues(GooglePrivacyDlpV2Value[] quantileValues) {
        this.quantileValues = quantileValues;
        return this;
    }
    
    public GooglePrivacyDlpV2NumericalStatsResult(){}
}
