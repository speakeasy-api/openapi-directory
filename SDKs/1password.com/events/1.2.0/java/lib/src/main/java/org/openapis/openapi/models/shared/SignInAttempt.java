/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SignInAttempt - A single sign-in attempt object
 */
public class SignInAttempt {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public SignInAttemptCategoryEnum category;

    public SignInAttempt withCategory(SignInAttemptCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * Metadata gathered about the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client")
    public Client client;

    public SignInAttempt withClient(Client client) {
        this.client = client;
        return this;
    }
    
    /**
     * Country ISO Code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public SignInAttempt withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Additional information about the sign-in attempt
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public Details details;

    public SignInAttempt withDetails(Details details) {
        this.details = details;
        return this;
    }
    
    /**
     * Geolocation Info about the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public Location location;

    public SignInAttempt withLocation(Location location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("session_uuid")
    public String sessionUuid;

    public SignInAttempt withSessionUuid(String sessionUuid) {
        this.sessionUuid = sessionUuid;
        return this;
    }
    
    /**
     * User object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_user")
    public User targetUser;

    public SignInAttempt withTargetUser(User targetUser) {
        this.targetUser = targetUser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public SignInAttempt withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public SignInAttemptTypeEnum type;

    public SignInAttempt withType(SignInAttemptTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;

    public SignInAttempt withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
    public SignInAttempt(){}
}
