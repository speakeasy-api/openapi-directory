/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetEventsRequest {
    /**
     * Limits on `time_created`, Marks the start of a range, optionally use `before` to set the end. Result output excludes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after")
    public OffsetDateTime after;

    public GetEventsRequest withAfter(OffsetDateTime after) {
        this.after = after;
        return this;
    }
    
    /**
     * Limits directly on `id`. Marks the start of a range, optionally use `before_id` to set the end. Result output excludes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after_id")
    public String afterId;

    public GetEventsRequest withAfterId(String afterId) {
        this.afterId = afterId;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the end of a range, optionally use `after` to set the start. Result output excludes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before")
    public String before;

    public GetEventsRequest withBefore(String before) {
        this.before = before;
        return this;
    }
    
    /**
     * Limits directly on `id`. Marks the end of a range, optionally use `after_id` to set the start. Result output excludes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before_id")
    public String beforeId;

    public GetEventsRequest withBeforeId(String beforeId) {
        this.beforeId = beforeId;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the start of a range, optionally use `until` to set the end. Result output includes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from")
    public String from;

    public GetEventsRequest withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Limits on `id`. Marks the start of a range, optionally use `until_id` to set the end. Result output includes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from_id")
    public String fromId;

    public GetEventsRequest withFromId(String fromId) {
        this.fromId = fromId;
        return this;
    }
    
    /**
     * Unique identifier
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id")
    public String id;

    public GetEventsRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Removes `url` fields from output and shows `_id` instead of `_url` in references.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_only")
    public Boolean idOnly;

    public GetEventsRequest withIdOnly(Boolean idOnly) {
        this.idOnly = idOnly;
        return this;
    }
    
    /**
     * Sets the maximum number of returned resources. You may increase this number to large values, keep in mind that query times could become large. We advise you to use the pagination feature whenever you can.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public GetEventsRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Expand a reference into the actual resource (lookup). You may add multiple fields by giving a comma separated value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=populate")
    public String populate;

    public GetEventsRequest withPopulate(String populate) {
        this.populate = populate;
        return this;
    }
    
    /**
     * Removes response envelope with information about query, only sends back a JSON array with the applicable resources.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=results_only")
    public Boolean resultsOnly;

    public GetEventsRequest withResultsOnly(Boolean resultsOnly) {
        this.resultsOnly = resultsOnly;
        return this;
    }
    
    /**
     * Allows you to sort on on or more fields in the resource. You may append a minus sign (`-`) to request reverse order (new to old).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;

    public GetEventsRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Filter on the time the resource was created.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_created")
    public String timeCreated;

    public GetEventsRequest withTimeCreated(String timeCreated) {
        this.timeCreated = timeCreated;
        return this;
    }
    
    /**
     * Filter on the time the event was generated on the device.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_event")
    public String timeEvent;

    public GetEventsRequest withTimeEvent(String timeEvent) {
        this.timeEvent = timeEvent;
        return this;
    }
    
    /**
     * Filter on the time the event will expire.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_expire")
    public String timeExpire;

    public GetEventsRequest withTimeExpire(String timeExpire) {
        this.timeExpire = timeExpire;
        return this;
    }
    
    /**
     * Overrides the default query timeout (in seconds). A value of 0 means unlimited. IMPORTANT: using high timeouts in production code is strongly discouraged as it may lead to stability issues.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timeout_s")
    public Double timeoutS;

    public GetEventsRequest withTimeoutS(Double timeoutS) {
        this.timeoutS = timeoutS;
        return this;
    }
    
    /**
     * Filter on the topic action
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=topic.action")
    public org.openapis.openapi.models.shared.EventTopicActionEnum topicAction;

    public GetEventsRequest withTopicAction(org.openapis.openapi.models.shared.EventTopicActionEnum topicAction) {
        this.topicAction = topicAction;
        return this;
    }
    
    /**
     * Filter on the topic resource id
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=topic.resource")
    public String topicResource;

    public GetEventsRequest withTopicResource(String topicResource) {
        this.topicResource = topicResource;
        return this;
    }
    
    /**
     * Filter on the topic resource type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=topic.resource_type")
    public org.openapis.openapi.models.shared.EventTopicResourceTypeEnum topicResourceType;

    public GetEventsRequest withTopicResourceType(org.openapis.openapi.models.shared.EventTopicResourceTypeEnum topicResourceType) {
        this.topicResourceType = topicResourceType;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the end of a range, optionally use `from` to set the start. Result output includes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=until")
    public String until;

    public GetEventsRequest withUntil(String until) {
        this.until = until;
        return this;
    }
    
    /**
     * Limits on `id`. Marks the end of a range, optionally use `from_id` to set the start. Result output includes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=until_id")
    public String untilId;

    public GetEventsRequest withUntilId(String untilId) {
        this.untilId = untilId;
        return this;
    }
    
    public GetEventsRequest(){}
}
