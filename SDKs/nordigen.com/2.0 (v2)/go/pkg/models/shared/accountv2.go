// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// AccountV2AccountStatusEnum - The processing status of this account.
type AccountV2AccountStatusEnum string

const (
	AccountV2AccountStatusEnumDiscovered AccountV2AccountStatusEnum = "DISCOVERED"
	AccountV2AccountStatusEnumProcessing AccountV2AccountStatusEnum = "PROCESSING"
	AccountV2AccountStatusEnumReady      AccountV2AccountStatusEnum = "READY"
	AccountV2AccountStatusEnumError      AccountV2AccountStatusEnum = "ERROR"
	AccountV2AccountStatusEnumSuspended  AccountV2AccountStatusEnum = "SUSPENDED"
)

func (e *AccountV2AccountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISCOVERED":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "READY":
		fallthrough
	case "ERROR":
		fallthrough
	case "SUSPENDED":
		*e = AccountV2AccountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountV2AccountStatusEnum: %s", s)
	}
}

// AccountV2 - AccountV2Serializer.
type AccountV2 struct {
	// The date & time at which the account object was created.
	Created *time.Time `json:"created,omitempty"`
	// The Account IBAN
	Iban *string `json:"iban,omitempty"`
	// The ID of this Account, used to refer to this account in other API calls.
	ID *string `json:"id,omitempty"`
	// The ASPSP associated with this account.
	InstitutionID *string `json:"institution_id,omitempty"`
	// The date & time at which the account object was last accessed.
	LastAccessed *time.Time `json:"last_accessed,omitempty"`
	// The name of the account owner.
	OwnerName *string `json:"owner_name,omitempty"`
	// The processing status of this account.
	Status *AccountV2AccountStatusEnum `json:"status,omitempty"`
}
