// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type ErrorsGroupCountsPerDaySecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ErrorsGroupCountsPerDayRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// Last date time in data in ISO 8601 date time format
	End *time.Time `queryParam:"style=form,explode=true,name=end"`
	// The id of the error group
	ErrorGroupID string `pathParam:"style=simple,explode=false,name=errorGroupId"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// Start date time in data in ISO 8601 date time format
	Start   time.Time `queryParam:"style=form,explode=true,name=start"`
	Version *string   `queryParam:"style=form,explode=true,name=version"`
}

type ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum string

const (
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumBadRequest          ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumConflict            ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "Conflict"
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumNotAcceptable       ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumNotFound            ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "NotFound"
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumInternalServerError ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumUnauthorized        ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnumTooManyRequests     ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type ErrorsGroupCountsPerDayDefaultApplicationJSONError struct {
	Code    ErrorsGroupCountsPerDayDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                     `json:"message"`
}

// ErrorsGroupCountsPerDayDefaultApplicationJSON - Error code with reason
type ErrorsGroupCountsPerDayDefaultApplicationJSON struct {
	Error ErrorsGroupCountsPerDayDefaultApplicationJSONError `json:"error"`
}

type ErrorsGroupCountsPerDay200ApplicationJSONErrors struct {
	// count of the object
	Count *int64 `json:"count,omitempty"`
	// the ISO 8601 datetime
	Datetime *string `json:"datetime,omitempty"`
}

// ErrorsGroupCountsPerDay200ApplicationJSON - Count of errors by day in the time range and total errors over the time range.
type ErrorsGroupCountsPerDay200ApplicationJSON struct {
	// total error count
	Count *int64 `json:"count,omitempty"`
	// the total error count for day
	Errors []ErrorsGroupCountsPerDay200ApplicationJSONErrors `json:"errors,omitempty"`
}

type ErrorsGroupCountsPerDayResponse struct {
	ContentType string
	// Count of errors by day in the time range and total errors over the time range.
	ErrorsGroupCountsPerDay200ApplicationJSONObject *ErrorsGroupCountsPerDay200ApplicationJSON
	// Error code with reason
	ErrorsGroupCountsPerDayDefaultApplicationJSONObject *ErrorsGroupCountsPerDayDefaultApplicationJSON
	StatusCode                                          int
	RawResponse                                         *http.Response
}
