<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AutoMerge - The status of auto merging a pull request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AutoMerge
{
    /**
     * Commit message for the merge commit.
     * 
     * @var string $commitMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('commit_message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commitMessage;
    
    /**
     * Title for the merge commit message.
     * 
     * @var string $commitTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('commit_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commitTitle;
    
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleUser $enabledBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled_by')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleUser')]
    public SimpleUser $enabledBy;
    
    /**
     * The merge method to use.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AutoMergeMergeMethodEnum $mergeMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('merge_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AutoMergeMergeMethodEnum>')]
    public AutoMergeMergeMethodEnum $mergeMethod;
    
	public function __construct()
	{
		$this->commitMessage = "";
		$this->commitTitle = "";
		$this->enabledBy = new \OpenAPI\OpenAPI\Models\Shared\SimpleUser();
		$this->mergeMethod = \OpenAPI\OpenAPI\Models\Shared\AutoMergeMergeMethodEnum::MERGE;
	}
}
