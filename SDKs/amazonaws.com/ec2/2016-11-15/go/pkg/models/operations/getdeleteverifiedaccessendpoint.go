// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteVerifiedAccessEndpointActionEnum
type GETDeleteVerifiedAccessEndpointActionEnum string

const (
	GETDeleteVerifiedAccessEndpointActionEnumDeleteVerifiedAccessEndpoint GETDeleteVerifiedAccessEndpointActionEnum = "DeleteVerifiedAccessEndpoint"
)

func (e GETDeleteVerifiedAccessEndpointActionEnum) ToPointer() *GETDeleteVerifiedAccessEndpointActionEnum {
	return &e
}

func (e *GETDeleteVerifiedAccessEndpointActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteVerifiedAccessEndpoint":
		*e = GETDeleteVerifiedAccessEndpointActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteVerifiedAccessEndpointActionEnum: %v", v)
	}
}

// GETDeleteVerifiedAccessEndpointVersionEnum
type GETDeleteVerifiedAccessEndpointVersionEnum string

const (
	GETDeleteVerifiedAccessEndpointVersionEnumTwoThousandAndSixteen1115 GETDeleteVerifiedAccessEndpointVersionEnum = "2016-11-15"
)

func (e GETDeleteVerifiedAccessEndpointVersionEnum) ToPointer() *GETDeleteVerifiedAccessEndpointVersionEnum {
	return &e
}

func (e *GETDeleteVerifiedAccessEndpointVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteVerifiedAccessEndpointVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteVerifiedAccessEndpointVersionEnum: %v", v)
	}
}

type GETDeleteVerifiedAccessEndpointRequest struct {
	Action GETDeleteVerifiedAccessEndpointActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
	ClientToken *string `queryParam:"style=form,explode=true,name=ClientToken"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Verified Access endpoint.
	VerifiedAccessEndpointID string                                     `queryParam:"style=form,explode=true,name=VerifiedAccessEndpointId"`
	Version                  GETDeleteVerifiedAccessEndpointVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm            *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteVerifiedAccessEndpointResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
