// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSecurityPolicyXAmzTargetEnum
type GetSecurityPolicyXAmzTargetEnum string

const (
	GetSecurityPolicyXAmzTargetEnumOpenSearchServerlessGetSecurityPolicy GetSecurityPolicyXAmzTargetEnum = "OpenSearchServerless.GetSecurityPolicy"
)

func (e *GetSecurityPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OpenSearchServerless.GetSecurityPolicy":
		*e = GetSecurityPolicyXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSecurityPolicyXAmzTargetEnum: %s", s)
	}
}

type GetSecurityPolicyRequest struct {
	GetSecurityPolicyRequest shared.GetSecurityPolicyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               GetSecurityPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetSecurityPolicyResponse struct {
	ContentType string
	// Success
	GetSecurityPolicyResponse *shared.GetSecurityPolicyResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
