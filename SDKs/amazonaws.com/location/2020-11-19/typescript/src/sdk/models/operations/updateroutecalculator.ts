/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
 */
export enum UpdateRouteCalculatorRequestBodyPricingPlanEnum {
  RequestBasedUsage = "RequestBasedUsage",
  MobileAssetTracking = "MobileAssetTracking",
  MobileAssetManagement = "MobileAssetManagement",
}

export class UpdateRouteCalculatorRequestBody extends SpeakeasyBase {
  /**
   * Updates the description for the route calculator resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PricingPlan" })
  pricingPlan?: UpdateRouteCalculatorRequestBodyPricingPlanEnum;
}

export class UpdateRouteCalculatorRequest extends SpeakeasyBase {
  /**
   * The name of the route calculator resource to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=CalculatorName",
  })
  calculatorName: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateRouteCalculatorRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateRouteCalculatorResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateRouteCalculatorResponse?: shared.UpdateRouteCalculatorResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
