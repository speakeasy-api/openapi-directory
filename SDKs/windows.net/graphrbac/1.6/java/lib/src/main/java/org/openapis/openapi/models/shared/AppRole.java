/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AppRole {
    /**
     * Specifies whether this app role definition can be assigned to users and groups by setting to 'User', or to other applications (that are accessing this application in daemon service scenarios) by setting to 'Application', or to both. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedMemberTypes")
    public String[] allowedMemberTypes;
    public AppRole withAllowedMemberTypes(String[] allowedMemberTypes) {
        this.allowedMemberTypes = allowedMemberTypes;
        return this;
    }
    
    /**
     * Permission help text that appears in the admin app assignment and consent experiences.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public AppRole withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Display name for the permission that appears in the admin consent and app assignment experiences.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public AppRole withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Unique role identifier inside the appRoles collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AppRole withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * When creating or updating a role definition, this must be set to true (which is the default). To delete a role, this must first be set to false. At that point, in a subsequent call, this role may be removed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEnabled")
    public Boolean isEnabled;
    public AppRole withIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }
    
    /**
     * Specifies the value of the roles claim that the application should expect in the authentication and access tokens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;
    public AppRole withValue(String value) {
        this.value = value;
        return this;
    }
    
}
