// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BoxScoreFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type BoxScoreFormatEnum string

const (
	BoxScoreFormatEnumXML  BoxScoreFormatEnum = "xml"
	BoxScoreFormatEnumJSON BoxScoreFormatEnum = "json"
)

func (e BoxScoreFormatEnum) ToPointer() *BoxScoreFormatEnum {
	return &e
}

func (e *BoxScoreFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xml":
		fallthrough
	case "json":
		*e = BoxScoreFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BoxScoreFormatEnum: %v", v)
	}
}

type BoxScoreRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format BoxScoreFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Game ID.
	// Example:<code>100002649</code>.
	Gameid string `pathParam:"style=simple,explode=false,name=gameid"`
}

type BoxScoreResponse struct {
	BoxScores   []shared.BoxScore
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
