/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PropertyReference } from "./propertyreference";
import { Expose, Type } from "class-transformer";

/**
 * The direction to order by. Defaults to `ASCENDING`.
 */
export enum PropertyOrderDirectionEnum {
  DirectionUnspecified = "DIRECTION_UNSPECIFIED",
  Ascending = "ASCENDING",
  Descending = "DESCENDING",
}

/**
 * The desired order for a specific property.
 */
export class PropertyOrder extends SpeakeasyBase {
  /**
   * The direction to order by. Defaults to `ASCENDING`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: PropertyOrderDirectionEnum;

  /**
   * A reference to a property relative to the kind expressions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "property" })
  @Type(() => PropertyReference)
  property?: PropertyReference;
}
