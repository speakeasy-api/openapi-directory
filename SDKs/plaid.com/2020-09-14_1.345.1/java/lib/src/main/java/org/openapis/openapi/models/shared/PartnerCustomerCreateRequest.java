/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PartnerCustomerCreateRequest - Request schema for `/partner/customer/create`.
 */
public class PartnerCustomerCreateRequest {
    /**
     * The end customer's address.
     */
    @JsonProperty("address")
    public java.util.Map<String, Object> address;

    public PartnerCustomerCreateRequest withAddress(java.util.Map<String, Object> address) {
        this.address = address;
        return this;
    }
    
    /**
     * The name of the end customer's application. This will be shown to end users when they go through the Plaid Link flow.
     */
    @JsonProperty("application_name")
    public String applicationName;

    public PartnerCustomerCreateRequest withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }
    
    /**
     * Assets under management for the given end customer. Required for end customers with monthly service commitments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assets_under_management")
    public java.util.Map<String, Object> assetsUnderManagement;

    public PartnerCustomerCreateRequest withAssetsUnderManagement(java.util.Map<String, Object> assetsUnderManagement) {
        this.assetsUnderManagement = assetsUnderManagement;
        return this;
    }
    
    /**
     * The billing contact for the end customer. Defaults to partner's billing contact if omitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billing_contact")
    public java.util.Map<String, Object> billingContact;

    public PartnerCustomerCreateRequest withBillingContact(java.util.Map<String, Object> billingContact) {
        this.billingContact = billingContact;
        return this;
    }
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public PartnerCustomerCreateRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The company name of the end customer being created. This will be used to display the end customer in the Plaid Dashboard. It will not be shown to end users.
     */
    @JsonProperty("company_name")
    public String companyName;

    public PartnerCustomerCreateRequest withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * If `true`, the end customer's default Link customization will be set to match the partner's. You can always change the end customer's Link customization in the Plaid Dashboard. See the [Link Customization docs](https://plaid.com/docs/link/customization/) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("create_link_customization")
    public Boolean createLinkCustomization;

    public PartnerCustomerCreateRequest withCreateLinkCustomization(Boolean createLinkCustomization) {
        this.createLinkCustomization = createLinkCustomization;
        return this;
    }
    
    /**
     * This information is public. Users of your app will see this information when managing connections between your app and their bank accounts in Plaid Portal. Defaults to partner's customer support info if omitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_support_info")
    public java.util.Map<String, Object> customerSupportInfo;

    public PartnerCustomerCreateRequest withCustomerSupportInfo(java.util.Map<String, Object> customerSupportInfo) {
        this.customerSupportInfo = customerSupportInfo;
        return this;
    }
    
    /**
     * Denotes whether the partner has forwarded the Plaid bank addendum to the end customer.
     */
    @JsonProperty("is_bank_addendum_completed")
    public Boolean isBankAddendumCompleted;

    public PartnerCustomerCreateRequest withIsBankAddendumCompleted(Boolean isBankAddendumCompleted) {
        this.isBankAddendumCompleted = isBankAddendumCompleted;
        return this;
    }
    
    /**
     * Denotes whether or not the partner has completed attestation of diligence for the end customer to be created.
     */
    @JsonProperty("is_diligence_attested")
    public Boolean isDiligenceAttested;

    public PartnerCustomerCreateRequest withIsDiligenceAttested(Boolean isDiligenceAttested) {
        this.isDiligenceAttested = isDiligenceAttested;
        return this;
    }
    
    /**
     * The end customer's legal name. This will be shared with financial institutions as part of the OAuth registration process. It will not be shown to end users.
     */
    @JsonProperty("legal_entity_name")
    public String legalEntityName;

    public PartnerCustomerCreateRequest withLegalEntityName(String legalEntityName) {
        this.legalEntityName = legalEntityName;
        return this;
    }
    
    /**
     * Base64-encoded representation of the end customer's logo. Must be a PNG of size 1024x1024 under 4MB. The logo will be shared with financial institutions and shown to the end user during Link flows. A logo is required if `create_link_customization` is `true`. If `create_link_customization` is `false` and the logo is omitted, a stock logo will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logo")
    public String logo;

    public PartnerCustomerCreateRequest withLogo(String logo) {
        this.logo = logo;
        return this;
    }
    
    /**
     * The products to be enabled for the end customer.
     */
    @JsonProperty("products")
    public ProductsEnum[] products;

    public PartnerCustomerCreateRequest withProducts(ProductsEnum[] products) {
        this.products = products;
        return this;
    }
    
    /**
     * A list of URIs indicating the destination(s) where a user can be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. URIs should not contain any query parameters. When used in Production or Development, URIs must use https. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. To modify redirect URIs for an end customer after creating them, go to the end customer's [API page](https://dashboard.plaid.com/team/api) in the Dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirect_uris")
    public String[] redirectUris;

    public PartnerCustomerCreateRequest withRedirectUris(String[] redirectUris) {
        this.redirectUris = redirectUris;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public PartnerCustomerCreateRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * The technical contact for the end customer. Defaults to partner's technical contact if omitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("technical_contact")
    public java.util.Map<String, Object> technicalContact;

    public PartnerCustomerCreateRequest withTechnicalContact(java.util.Map<String, Object> technicalContact) {
        this.technicalContact = technicalContact;
        return this;
    }
    
    /**
     * The end customer's website.
     */
    @JsonProperty("website")
    public String website;

    public PartnerCustomerCreateRequest withWebsite(String website) {
        this.website = website;
        return this;
    }
    
    public PartnerCustomerCreateRequest(@JsonProperty("address") java.util.Map<String, Object> address, @JsonProperty("application_name") String applicationName, @JsonProperty("company_name") String companyName, @JsonProperty("is_bank_addendum_completed") Boolean isBankAddendumCompleted, @JsonProperty("is_diligence_attested") Boolean isDiligenceAttested, @JsonProperty("legal_entity_name") String legalEntityName, @JsonProperty("products") ProductsEnum[] products, @JsonProperty("website") String website) {
        this.address = address;
        this.applicationName = applicationName;
        this.companyName = companyName;
        this.isBankAddendumCompleted = isBankAddendumCompleted;
        this.isDiligenceAttested = isDiligenceAttested;
        this.legalEntityName = legalEntityName;
        this.products = products;
        this.website = website;
  }
}
