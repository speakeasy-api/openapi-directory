"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Finding = void 0;
var utils_1 = require("../../../internal/utils");
var exploitabilitydetails_1 = require("./exploitabilitydetails");
var exploitavailableenum_1 = require("./exploitavailableenum");
var findingstatusenum_1 = require("./findingstatusenum");
var findingtypeenum_1 = require("./findingtypeenum");
var fixavailableenum_1 = require("./fixavailableenum");
var inspectorscoredetails_1 = require("./inspectorscoredetails");
var networkreachabilitydetails_1 = require("./networkreachabilitydetails");
var packagevulnerabilitydetails_1 = require("./packagevulnerabilitydetails");
var remediation_1 = require("./remediation");
var resource_1 = require("./resource");
var severityenum_1 = require("./severityenum");
var class_transformer_1 = require("class-transformer");
/**
 * Details about an Amazon Inspector finding.
 */
var Finding = /** @class */ (function (_super) {
    __extends(Finding, _super);
    function Finding() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "awsAccountId" }),
        __metadata("design:type", String)
    ], Finding.prototype, "awsAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Finding.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exploitAvailable" }),
        __metadata("design:type", String)
    ], Finding.prototype, "exploitAvailable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exploitabilityDetails" }),
        (0, class_transformer_1.Type)(function () { return exploitabilitydetails_1.ExploitabilityDetails; }),
        __metadata("design:type", exploitabilitydetails_1.ExploitabilityDetails)
    ], Finding.prototype, "exploitabilityDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "findingArn" }),
        __metadata("design:type", String)
    ], Finding.prototype, "findingArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "firstObservedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Finding.prototype, "firstObservedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fixAvailable" }),
        __metadata("design:type", String)
    ], Finding.prototype, "fixAvailable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inspectorScore" }),
        __metadata("design:type", Number)
    ], Finding.prototype, "inspectorScore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inspectorScoreDetails" }),
        (0, class_transformer_1.Type)(function () { return inspectorscoredetails_1.InspectorScoreDetails; }),
        __metadata("design:type", inspectorscoredetails_1.InspectorScoreDetails)
    ], Finding.prototype, "inspectorScoreDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastObservedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Finding.prototype, "lastObservedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networkReachabilityDetails" }),
        (0, class_transformer_1.Type)(function () { return networkreachabilitydetails_1.NetworkReachabilityDetails; }),
        __metadata("design:type", networkreachabilitydetails_1.NetworkReachabilityDetails)
    ], Finding.prototype, "networkReachabilityDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageVulnerabilityDetails" }),
        (0, class_transformer_1.Type)(function () { return packagevulnerabilitydetails_1.PackageVulnerabilityDetails; }),
        __metadata("design:type", packagevulnerabilitydetails_1.PackageVulnerabilityDetails)
    ], Finding.prototype, "packageVulnerabilityDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remediation" }),
        (0, class_transformer_1.Type)(function () { return remediation_1.Remediation; }),
        __metadata("design:type", remediation_1.Remediation)
    ], Finding.prototype, "remediation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: resource_1.Resource }),
        (0, class_transformer_1.Expose)({ name: "resources" }),
        (0, class_transformer_1.Type)(function () { return resource_1.Resource; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "resources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "severity" }),
        __metadata("design:type", String)
    ], Finding.prototype, "severity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Finding.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], Finding.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Finding.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Finding.prototype, "updatedAt", void 0);
    return Finding;
}(utils_1.SpeakeasyBase));
exports.Finding = Finding;
