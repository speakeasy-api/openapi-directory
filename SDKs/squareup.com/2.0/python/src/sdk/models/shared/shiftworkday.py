"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import daterange as shared_daterange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShiftWorkday:
    r"""A `Shift` search query filter parameter that sets a range of days that
    a `Shift` must start or end in before passing the filter condition.
    """
    
    date_range: Optional[shared_daterange.DateRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_range'), 'exclude': lambda f: f is None }})
    r"""A range defined by two dates. Used for filtering a query for Connect v2
    objects that have date properties.
    """  
    default_timezone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_timezone'), 'exclude': lambda f: f is None }})
    r"""Location-specific timezones convert workdays to datetime filters.
    Every location included in the query must have a timezone or this field
    must be provided as a fallback. Format: the IANA timezone database
    identifier for the relevant timezone.
    """  
    match_shifts_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('match_shifts_by'), 'exclude': lambda f: f is None }})
    r"""The strategy on which the dates are applied."""  
    