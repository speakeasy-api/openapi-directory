// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetStatusEnum string

const (
	TargetStatusEnumPending    TargetStatusEnum = "Pending"
	TargetStatusEnumInProgress TargetStatusEnum = "InProgress"
	TargetStatusEnumSucceeded  TargetStatusEnum = "Succeeded"
	TargetStatusEnumFailed     TargetStatusEnum = "Failed"
	TargetStatusEnumSkipped    TargetStatusEnum = "Skipped"
	TargetStatusEnumUnknown    TargetStatusEnum = "Unknown"
	TargetStatusEnumReady      TargetStatusEnum = "Ready"
)

func (e TargetStatusEnum) ToPointer() *TargetStatusEnum {
	return &e
}

func (e *TargetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		fallthrough
	case "Skipped":
		fallthrough
	case "Unknown":
		fallthrough
	case "Ready":
		*e = TargetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetStatusEnum: %v", v)
	}
}
