<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GkeNodeConfig - Parameters that describe cluster nodes.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GkeNodeConfig
{
    /**
     * Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GkeNodePoolAcceleratorConfig> $accelerators
     */
	#[\JMS\Serializer\Annotation\SerializedName('accelerators')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GkeNodePoolAcceleratorConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accelerators = null;
    
    /**
     * Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
     * 
     * @var ?string $bootDiskKmsKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('bootDiskKmsKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bootDiskKmsKey = null;
    
    /**
     * Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
     * 
     * @var ?int $localSsdCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('localSsdCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $localSsdCount = null;
    
    /**
     * Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
     * 
     * @var ?string $machineType
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $machineType = null;
    
    /**
     * Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
     * 
     * @var ?string $minCpuPlatform
     */
	#[\JMS\Serializer\Annotation\SerializedName('minCpuPlatform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minCpuPlatform = null;
    
    /**
     * Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     * 
     * @var ?bool $preemptible
     */
	#[\JMS\Serializer\Annotation\SerializedName('preemptible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $preemptible = null;
    
    /**
     * Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     * 
     * @var ?bool $spot
     */
	#[\JMS\Serializer\Annotation\SerializedName('spot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $spot = null;
    
	public function __construct()
	{
		$this->accelerators = null;
		$this->bootDiskKmsKey = null;
		$this->localSsdCount = null;
		$this->machineType = null;
		$this->minCpuPlatform = null;
		$this->preemptible = null;
		$this->spot = null;
	}
}
