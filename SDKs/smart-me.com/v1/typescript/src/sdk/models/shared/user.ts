/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Container Class for the Web API
 */
export class User extends SpeakeasyBase {
  /**
   * The Users created by this users.
   */
  @SpeakeasyMetadata({ elemType: User })
  @Expose({ name: "ChildUsers" })
  @Type(() => User)
  childUsers?: User[];

  /**
   * The EMail Address of the User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Email" })
  email?: string;

  /**
   * The ID of the User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  /**
   * The ID of the user as string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IdAsString" })
  idAsString?: string;

  /**
   * Flag if this User is an Admin User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAdmin" })
  isAdmin?: boolean;

  /**
   * Additional Permissions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Permissions" })
  permissions?: string[];

  /**
   * The Username of the User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Username" })
  username?: string;
}
