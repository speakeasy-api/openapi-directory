"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_v2010_account_connect_app as shared_api_v2010_account_connect_app
from ..shared import connect_app_enum_permission_enum as shared_connect_app_enum_permission_enum
from enum import Enum
from typing import Optional

UPDATE_CONNECT_APP_SERVERS = [
	"https://api.twilio.com",
]


@dataclasses.dataclass
class UpdateConnectAppSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class UpdateConnectAppUpdateConnectAppRequestDeauthorizeCallbackMethodEnum(str, Enum):
    r"""The HTTP method to use when calling `deauthorize_callback_url`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclasses.dataclass
class UpdateConnectAppUpdateConnectAppRequest:
    
    authorize_redirect_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AuthorizeRedirectUrl' }})
    r"""The URL to redirect the user to after we authenticate the user and obtain authorization to access the Connect App."""  
    company_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CompanyName' }})
    r"""The company name to set for the Connect App."""  
    deauthorize_callback_method: Optional[UpdateConnectAppUpdateConnectAppRequestDeauthorizeCallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DeauthorizeCallbackMethod' }})
    r"""The HTTP method to use when calling `deauthorize_callback_url`."""  
    deauthorize_callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DeauthorizeCallbackUrl' }})
    r"""The URL to call using the `deauthorize_callback_method` to de-authorize the Connect App."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Description' }})
    r"""A description of the Connect App."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the resource. It can be up to 64 characters long."""  
    homepage_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'HomepageUrl' }})
    r"""A public URL where users can obtain more information about this Connect App."""  
    permissions: Optional[list[shared_connect_app_enum_permission_enum.ConnectAppEnumPermissionEnum]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Permissions' }})
    r"""A comma-separated list of the permissions you will request from the users of this ConnectApp.  Can include: `get-all` and `post-all`."""  
    

@dataclasses.dataclass
class UpdateConnectAppRequest:
    
    account_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AccountSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to update."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the ConnectApp resource to update."""  
    request_body: Optional[UpdateConnectAppUpdateConnectAppRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateConnectAppResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_v2010_account_connect_app: Optional[shared_api_v2010_account_connect_app.APIV2010AccountConnectApp] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    