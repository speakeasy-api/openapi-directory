/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InterpolationPoint } from "./interpolationpoint";
import { Expose, Type } from "class-transformer";

/**
 * A rule that applies a gradient color scale format, based on the interpolation points listed. The format of a cell will vary based on its contents as compared to the values of the interpolation points.
 */
export class GradientRule extends SpeakeasyBase {
  /**
   * A single interpolation point on a gradient conditional format. These pin the gradient color scale according to the color, type and value chosen.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxpoint" })
  @Type(() => InterpolationPoint)
  maxpoint?: InterpolationPoint;

  /**
   * A single interpolation point on a gradient conditional format. These pin the gradient color scale according to the color, type and value chosen.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "midpoint" })
  @Type(() => InterpolationPoint)
  midpoint?: InterpolationPoint;

  /**
   * A single interpolation point on a gradient conditional format. These pin the gradient color scale according to the color, type and value chosen.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minpoint" })
  @Type(() => InterpolationPoint)
  minpoint?: InterpolationPoint;
}
