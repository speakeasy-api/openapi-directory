// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhysicalConnectorTypeEnum string

const (
	PhysicalConnectorTypeEnumRj45    PhysicalConnectorTypeEnum = "RJ45"
	PhysicalConnectorTypeEnumSfpPlus PhysicalConnectorTypeEnum = "SFP_PLUS"
	PhysicalConnectorTypeEnumQsfp    PhysicalConnectorTypeEnum = "QSFP"
	PhysicalConnectorTypeEnumRj452   PhysicalConnectorTypeEnum = "RJ45_2"
	PhysicalConnectorTypeEnumWifi    PhysicalConnectorTypeEnum = "WIFI"
)

func (e PhysicalConnectorTypeEnum) ToPointer() *PhysicalConnectorTypeEnum {
	return &e
}

func (e *PhysicalConnectorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RJ45":
		fallthrough
	case "SFP_PLUS":
		fallthrough
	case "QSFP":
		fallthrough
	case "RJ45_2":
		fallthrough
	case "WIFI":
		*e = PhysicalConnectorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhysicalConnectorTypeEnum: %v", v)
	}
}
