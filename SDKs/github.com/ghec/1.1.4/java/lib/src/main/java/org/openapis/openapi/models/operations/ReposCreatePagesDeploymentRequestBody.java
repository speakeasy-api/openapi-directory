/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReposCreatePagesDeploymentRequestBody - The object used to create GitHub Pages deployment
 */
public class ReposCreatePagesDeploymentRequestBody {
    /**
     * The URL of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository.
     */
    @JsonProperty("artifact_url")
    public String artifactUrl;
    public ReposCreatePagesDeploymentRequestBody withArtifactUrl(String artifactUrl) {
        this.artifactUrl = artifactUrl;
        return this;
    }
    
    /**
     * The target environment for this GitHub Pages deployment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public String environment;
    public ReposCreatePagesDeploymentRequestBody withEnvironment(String environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * The OIDC token issued by GitHub Actions certifying the origin of the deployment.
     */
    @JsonProperty("oidc_token")
    public String oidcToken;
    public ReposCreatePagesDeploymentRequestBody withOidcToken(String oidcToken) {
        this.oidcToken = oidcToken;
        return this;
    }
    
    /**
     * A unique string that represents the version of the build for this deployment.
     */
    @JsonProperty("pages_build_version")
    public String pagesBuildVersion;
    public ReposCreatePagesDeploymentRequestBody withPagesBuildVersion(String pagesBuildVersion) {
        this.pagesBuildVersion = pagesBuildVersion;
        return this;
    }
    
}
