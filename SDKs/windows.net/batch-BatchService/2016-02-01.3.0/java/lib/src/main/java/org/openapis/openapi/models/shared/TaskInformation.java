/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskInformation - Information about a task running on a compute node.
 */
public class TaskInformation {
    /**
     * Information about the execution of a task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionInfo")
    public TaskExecutionInformation executionInfo;

    public TaskInformation withExecutionInfo(TaskExecutionInformation executionInfo) {
        this.executionInfo = executionInfo;
        return this;
    }
    
    /**
     * The id of the job to which the task belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobId")
    public String jobId;

    public TaskInformation withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }
    
    /**
     * The id of the subtask if the task is a multi-instance task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtaskId")
    public Integer subtaskId;

    public TaskInformation withSubtaskId(Integer subtaskId) {
        this.subtaskId = subtaskId;
        return this;
    }
    
    /**
     * The id of the task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskId")
    public String taskId;

    public TaskInformation withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }
    
    /**
     * The current state of the task.
     */
    @JsonProperty("taskState")
    public TaskInformationTaskStateEnum taskState;

    public TaskInformation withTaskState(TaskInformationTaskStateEnum taskState) {
        this.taskState = taskState;
        return this;
    }
    
    /**
     * The URL of the task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskUrl")
    public String taskUrl;

    public TaskInformation withTaskUrl(String taskUrl) {
        this.taskUrl = taskUrl;
        return this;
    }
    
    public TaskInformation(@JsonProperty("taskState") TaskInformationTaskStateEnum taskState) {
        this.taskState = taskState;
  }
}
