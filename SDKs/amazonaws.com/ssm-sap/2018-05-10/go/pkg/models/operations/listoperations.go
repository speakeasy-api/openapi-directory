// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListOperationsRequestBody struct {
	// The ID of the application.
	ApplicationID string `json:"ApplicationId"`
	// The filters of an operation.
	Filters []shared.Filter `json:"Filters,omitempty"`
	// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. If you do not specify a value for MaxResults, the request returns 50 items per page by default.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The token for the next page of results.
	NextToken *string `json:"NextToken,omitempty"`
}

type ListOperationsRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                   `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListOperationsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListOperationsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListOperationsOutput *shared.ListOperationsOutput
	StatusCode           int
	RawResponse          *http.Response
	// ValidationException
	ValidationException interface{}
}
