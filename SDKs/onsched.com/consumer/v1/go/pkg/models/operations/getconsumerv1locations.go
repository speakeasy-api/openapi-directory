// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetConsumerV1LocationsQueryParams struct {
	// Frienldy Id of location
	FriendlyID *string `queryParam:"style=form,explode=true,name=friendlyId"`
	// Don't include the Primary Location
	IgnorePrimary *bool `queryParam:"style=form,explode=true,name=ignorePrimary"`
	// Page limit, default 20, max 100
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Location name (full or partial)
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Search by distance nearest Geocoords, City, Postal/Zip Code
	NearestTo *string `queryParam:"style=form,explode=true,name=nearestTo"`
	// Starting row of page, default 0
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Maximum distance to display
	Proximity *int `queryParam:"style=form,explode=true,name=proximity"`
	// Locations within a specific region
	RegionID *string `queryParam:"style=form,explode=true,name=regionId"`
	// Locations that offer this service
	ServiceID *string `queryParam:"style=form,explode=true,name=serviceId"`
	// Distance either imperial(miles), metric(kilometers)
	Units *string `queryParam:"style=form,explode=true,name=units"`
}

type GetConsumerV1LocationsRequest struct {
	QueryParams GetConsumerV1LocationsQueryParams
}

type GetConsumerV1LocationsResponse struct {
	ContentType string
	// Success
	LocationListViewModel *shared.LocationListViewModel
	StatusCode            int
	RawResponse           *http.Response
}
