/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserAction } from "./useraction";
import { Expose, Type } from "class-transformer";

/**
 * A notification delivered by the API.
 */
export class Notification extends SpeakeasyBase {
  /**
   * The collection that generated the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collection" })
  collection?: string;

  /**
   * The ID of the item that generated the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: string;

  /**
   * The type of operation that generated the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  operation?: string;

  /**
   * A list of actions taken by the user that triggered the notification.
   */
  @SpeakeasyMetadata({ elemType: UserAction })
  @Expose({ name: "userActions" })
  @Type(() => UserAction)
  userActions?: UserAction[];

  /**
   * The user token provided by the service when it subscribed for notifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userToken" })
  userToken?: string;

  /**
   * The secret verify token provided by the service when it subscribed for notifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verifyToken" })
  verifyToken?: string;
}
