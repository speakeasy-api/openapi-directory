/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateCollectionFromSchemaRequestBodyRelations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class CreateCollectionFromSchemaRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({
    elemType: CreateCollectionFromSchemaRequestBodyRelations,
  })
  @Expose({ name: "relations" })
  @Type(() => CreateCollectionFromSchemaRequestBodyRelations)
  relations?: CreateCollectionFromSchemaRequestBodyRelations[];
}

export class CreateCollectionFromSchemaRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateCollectionFromSchemaRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=apiId",
  })
  apiId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=apiVersionId",
  })
  apiVersionId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=schemaId",
  })
  schemaId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=workspace",
  })
  workspace?: string;
}

export class CreateCollectionFromSchema200ApplicationJSONCollection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}

export class CreateCollectionFromSchema200ApplicationJSONRelations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Create collection from schema
 */
export class CreateCollectionFromSchema200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collection" })
  @Type(() => CreateCollectionFromSchema200ApplicationJSONCollection)
  collection?: CreateCollectionFromSchema200ApplicationJSONCollection;

  @SpeakeasyMetadata({
    elemType: CreateCollectionFromSchema200ApplicationJSONRelations,
  })
  @Expose({ name: "relations" })
  @Type(() => CreateCollectionFromSchema200ApplicationJSONRelations)
  relations?: CreateCollectionFromSchema200ApplicationJSONRelations[];
}

export class CreateCollectionFromSchemaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Create collection from schema
   */
  @SpeakeasyMetadata()
  createCollectionFromSchema200ApplicationJSONObject?: CreateCollectionFromSchema200ApplicationJSON;
}
