// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type QueryMembersRequest struct {
	CreatedAtAfter         *time.Time `json:"created_at_after,omitempty"`
	CreatedAtAfterOrEqual  *time.Time `json:"created_at_after_or_equal,omitempty"`
	CreatedAtBefore        *time.Time `json:"created_at_before,omitempty"`
	CreatedAtBeforeOrEqual *time.Time `json:"created_at_before_or_equal,omitempty"`
	// Filter to apply to members
	FilterConditions map[string]interface{} `json:"filter_conditions"`
	// Channel ID to interact with
	ID *string `json:"id,omitempty"`
	// Number of records to return
	Limit *float64 `json:"limit,omitempty"`
	// List of members to search in distinct channels
	Members []ChannelMember `json:"members,omitempty"`
	// Number of records to offset
	Offset *float64 `json:"offset,omitempty"`
	// Array of sort parameters
	Sort []SortParam `json:"sort,omitempty"`
	// Channel type to interact with
	Type string `json:"type"`
	// Represents chat user
	User      map[string]interface{} `json:"user,omitempty"`
	UserID    *string                `json:"user_id,omitempty"`
	UserIDGt  *string                `json:"user_id_gt,omitempty"`
	UserIDGte *string                `json:"user_id_gte,omitempty"`
	UserIDLt  *string                `json:"user_id_lt,omitempty"`
	UserIDLte *string                `json:"user_id_lte,omitempty"`
}
