/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateServiceServerList = [
  "https://serverless.twilio.com",
] as const;

export class CreateServiceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateServiceCreateServiceRequest extends SpeakeasyBase {
  /**
   * A descriptive string that you create to describe the Service resource. It can be a maximum of 255 characters.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName: string;

  /**
   * Whether to inject Account credentials into a function invocation context. The default value is `true`.
   */
  @SpeakeasyMetadata({ data: "form, name=IncludeCredentials" })
  includeCredentials?: boolean;

  /**
   * Whether the Service's properties and subresources can be edited via the UI. The default value is `false`.
   */
  @SpeakeasyMetadata({ data: "form, name=UiEditable" })
  uiEditable?: boolean;

  /**
   * A user-defined string that uniquely identifies the Service resource. It can be used as an alternative to the `sid` in the URL path to address the Service resource. This value must be 50 characters or less in length and be unique.
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName: string;
}

export class CreateServiceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  serverlessV1Service?: shared.ServerlessV1Service;
}
