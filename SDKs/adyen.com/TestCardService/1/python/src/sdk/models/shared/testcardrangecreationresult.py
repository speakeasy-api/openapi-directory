"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TestCardRangeCreationResultCreationResultCodeEnum(str, Enum):
    r"""Notification message. It informs about the outcome of the operation. Possible values:
    * CREATED
    * ALREADY_EXISTS
    * ERROR
    """
    ALREADY_EXISTS = 'ALREADY_EXISTS'
    CREATED = 'CREATED'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestCardRangeCreationResult:
    
    card_number_range_end: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardNumberRangeEnd') }})
    r"""The last test card number in the generated test card range.
    
    Example: 5432 1234 1234 4321
    """  
    card_number_range_start: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardNumberRangeStart') }})
    r"""The first test card number in the generated test card range.
    
    Example: 5432 1234 1234 1234
    """  
    creation_result_code: TestCardRangeCreationResultCreationResultCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationResultCode') }})
    r"""Notification message. It informs about the outcome of the operation. Possible values:
    * CREATED
    * ALREADY_EXISTS
    * ERROR
    """  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""An optional information message about the result."""  
    