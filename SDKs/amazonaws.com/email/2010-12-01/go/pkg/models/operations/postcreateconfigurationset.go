// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateConfigurationSetActionEnum
type POSTCreateConfigurationSetActionEnum string

const (
	POSTCreateConfigurationSetActionEnumCreateConfigurationSet POSTCreateConfigurationSetActionEnum = "CreateConfigurationSet"
)

func (e POSTCreateConfigurationSetActionEnum) ToPointer() *POSTCreateConfigurationSetActionEnum {
	return &e
}

func (e *POSTCreateConfigurationSetActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateConfigurationSet":
		*e = POSTCreateConfigurationSetActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateConfigurationSetActionEnum: %v", v)
	}
}

// POSTCreateConfigurationSetVersionEnum
type POSTCreateConfigurationSetVersionEnum string

const (
	POSTCreateConfigurationSetVersionEnumTwoThousandAndTen1201 POSTCreateConfigurationSetVersionEnum = "2010-12-01"
)

func (e POSTCreateConfigurationSetVersionEnum) ToPointer() *POSTCreateConfigurationSetVersionEnum {
	return &e
}

func (e *POSTCreateConfigurationSetVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = POSTCreateConfigurationSetVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateConfigurationSetVersionEnum: %v", v)
	}
}

type POSTCreateConfigurationSetRequest struct {
	Action            POSTCreateConfigurationSetActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                `request:"mediaType=text/xml"`
	Version           POSTCreateConfigurationSetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateConfigurationSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
