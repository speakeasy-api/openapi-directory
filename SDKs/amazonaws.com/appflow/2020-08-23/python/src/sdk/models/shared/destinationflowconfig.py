"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectortype_enum as shared_connectortype_enum
from ..shared import destinationconnectorproperties as shared_destinationconnectorproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DestinationFlowConfig:
    r"""Contains information about the configuration of destination connectors present in the flow."""
    
    connector_type: shared_connectortype_enum.ConnectorTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorType') }})  
    destination_connector_properties: shared_destinationconnectorproperties.DestinationConnectorProperties = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationConnectorProperties') }})  
    api_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiVersion'), 'exclude': lambda f: f is None }})  
    connector_profile_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorProfileName'), 'exclude': lambda f: f is None }})  
    