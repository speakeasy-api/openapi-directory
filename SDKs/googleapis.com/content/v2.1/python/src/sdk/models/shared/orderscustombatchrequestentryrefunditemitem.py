"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import monetaryamount as shared_monetaryamount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrdersCustomBatchRequestEntryRefundItemItem:
    
    amount: Optional[shared_monetaryamount.MonetaryAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})  
    full_refund: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullRefund'), 'exclude': lambda f: f is None }})
    r"""If true, the full item will be refunded. If this is true, amount shouldn't be provided and will be ignored."""  
    line_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineItemId'), 'exclude': lambda f: f is None }})
    r"""The ID of the line item. Either lineItemId or productId is required."""  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The ID of the product. This is the REST ID used in the products service. Either lineItemId or productId is required."""  
    quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})
    r"""The number of products that are refunded."""  
    