<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EndpointInfo - For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EndpointInfo
{
    /**
     * Destination IP address.
     * 
     * @var ?string $destinationIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationIp = null;
    
    /**
     * URI of the network where this packet is sent to.
     * 
     * @var ?string $destinationNetworkUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationNetworkUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationNetworkUri = null;
    
    /**
     * Destination port. Only valid when protocol is TCP or UDP.
     * 
     * @var ?int $destinationPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $destinationPort = null;
    
    /**
     * IP protocol in string format, for example: "TCP", "UDP", "ICMP".
     * 
     * @var ?string $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protocol = null;
    
    /**
     * URI of the source telemetry agent this packet originates from.
     * 
     * @var ?string $sourceAgentUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceAgentUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceAgentUri = null;
    
    /**
     * Source IP address.
     * 
     * @var ?string $sourceIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceIp = null;
    
    /**
     * URI of the network where this packet originates from.
     * 
     * @var ?string $sourceNetworkUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceNetworkUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceNetworkUri = null;
    
    /**
     * Source port. Only valid when protocol is TCP or UDP.
     * 
     * @var ?int $sourcePort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourcePort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sourcePort = null;
    
	public function __construct()
	{
		$this->destinationIp = null;
		$this->destinationNetworkUri = null;
		$this->destinationPort = null;
		$this->protocol = null;
		$this->sourceAgentUri = null;
		$this->sourceIp = null;
		$this->sourceNetworkUri = null;
		$this->sourcePort = null;
	}
}
