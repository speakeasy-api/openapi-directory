// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TimesheetStatusEnum string

const (
	TimesheetStatusEnumDraft     TimesheetStatusEnum = "DRAFT"
	TimesheetStatusEnumProcessed TimesheetStatusEnum = "PROCESSED"
	TimesheetStatusEnumApproved  TimesheetStatusEnum = "APPROVED"
	TimesheetStatusEnumRejected  TimesheetStatusEnum = "REJECTED"
	TimesheetStatusEnumRequested TimesheetStatusEnum = "REQUESTED"
)

func (e TimesheetStatusEnum) ToPointer() *TimesheetStatusEnum {
	return &e
}

func (e *TimesheetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRAFT":
		fallthrough
	case "PROCESSED":
		fallthrough
	case "APPROVED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "REQUESTED":
		*e = TimesheetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TimesheetStatusEnum: %v", v)
	}
}
