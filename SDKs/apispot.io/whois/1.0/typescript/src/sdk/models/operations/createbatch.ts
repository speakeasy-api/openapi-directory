/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum CreateBatchRequestBodyOperationEnum {
  Whois = "whois",
  Check = "check",
}

export enum CreateBatchRequestBodyOptionsFormatEnum {
  Raw = "raw",
  Formatted = "formatted",
  Json = "json",
}

export class CreateBatchRequestBodyOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: CreateBatchRequestBodyOptionsFormatEnum;
}

export class CreateBatchRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "domains" })
  domains: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  operation: CreateBatchRequestBodyOperationEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  @Type(() => CreateBatchRequestBodyOptions)
  options?: CreateBatchRequestBodyOptions;
}

export class CreateBatchResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  batch?: shared.Batch;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
