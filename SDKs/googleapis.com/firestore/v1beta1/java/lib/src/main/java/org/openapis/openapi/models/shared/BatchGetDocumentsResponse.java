/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BatchGetDocumentsResponse - The streamed response for Firestore.BatchGetDocuments.
 */
public class BatchGetDocumentsResponse {
    /**
     * A Firestore document. Must not exceed 1 MiB - 4 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("found")
    public Document found;
    public BatchGetDocumentsResponse withFound(Document found) {
        this.found = found;
        return this;
    }
    
    /**
     * A document name that was requested but does not exist. In the format: `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("missing")
    public String missing;
    public BatchGetDocumentsResponse withMissing(String missing) {
        this.missing = missing;
        return this;
    }
    
    /**
     * The time at which the document was read. This may be monotically increasing, in this case the previous documents in the result stream are guaranteed not to have changed between their read_time and this one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;
    public BatchGetDocumentsResponse withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * The transaction that was started as part of this request. Will only be set in the first response, and only if BatchGetDocumentsRequest.new_transaction was set in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transaction")
    public String transaction;
    public BatchGetDocumentsResponse withTransaction(String transaction) {
        this.transaction = transaction;
        return this;
    }
    
}
