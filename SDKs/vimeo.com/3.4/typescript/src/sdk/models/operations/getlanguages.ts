/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The attribute by which to filter the results.
 *
 * @remarks
 *
 * Option descriptions:
 *  * `texttracks` - Only return text track supported languages
 *
 */
export enum GetLanguagesFilterEnum {
  Texttracks = "texttracks",
}

export class GetLanguagesRequest extends SpeakeasyBase {
  /**
   * The attribute by which to filter the results.
   *
   * @remarks
   *
   * Option descriptions:
   *  * `texttracks` - Only return text track supported languages
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: GetLanguagesFilterEnum;
}

export class GetLanguagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The languages were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.Language })
  languages?: shared.Language[];
}
