"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import recoveryinstancedatareplicationerror as shared_recoveryinstancedatareplicationerror
from ..shared import recoveryinstancedatareplicationinforeplicateddisk as shared_recoveryinstancedatareplicationinforeplicateddisk
from ..shared import recoveryinstancedatareplicationinitiation as shared_recoveryinstancedatareplicationinitiation
from ..shared import recoveryinstancedatareplicationstate_enum as shared_recoveryinstancedatareplicationstate_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecoveryInstanceDataReplicationInfo:
    r"""Information about Data Replication"""
    
    data_replication_error: Optional[shared_recoveryinstancedatareplicationerror.RecoveryInstanceDataReplicationError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataReplicationError'), 'exclude': lambda f: f is None }})  
    data_replication_initiation: Optional[shared_recoveryinstancedatareplicationinitiation.RecoveryInstanceDataReplicationInitiation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataReplicationInitiation'), 'exclude': lambda f: f is None }})  
    data_replication_state: Optional[shared_recoveryinstancedatareplicationstate_enum.RecoveryInstanceDataReplicationStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataReplicationState'), 'exclude': lambda f: f is None }})  
    eta_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etaDateTime'), 'exclude': lambda f: f is None }})  
    lag_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lagDuration'), 'exclude': lambda f: f is None }})  
    replicated_disks: Optional[list[shared_recoveryinstancedatareplicationinforeplicateddisk.RecoveryInstanceDataReplicationInfoReplicatedDisk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replicatedDisks'), 'exclude': lambda f: f is None }})  
    staging_availability_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stagingAvailabilityZone'), 'exclude': lambda f: f is None }})  
    