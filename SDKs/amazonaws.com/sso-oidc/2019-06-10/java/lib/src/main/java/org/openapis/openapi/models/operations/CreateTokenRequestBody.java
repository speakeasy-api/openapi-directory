/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateTokenRequestBody {
    /**
     * The unique identifier string for each client. This value should come from the persisted result of the &lt;a&gt;RegisterClient&lt;/a&gt; API.
     */
    @JsonProperty("clientId")
    public String clientId;

    public CreateTokenRequestBody withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * A secret string generated for the client. This value should come from the persisted result of the &lt;a&gt;RegisterClient&lt;/a&gt; API.
     */
    @JsonProperty("clientSecret")
    public String clientSecret;

    public CreateTokenRequestBody withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * The authorization code received from the authorization service. This parameter is required to perform an authorization grant request to get access to a token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;

    public CreateTokenRequestBody withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * Used only when calling this API for the device code grant type. This short-term code is used to identify this authentication attempt. This should come from an in-memory reference to the result of the &lt;a&gt;StartDeviceAuthorization&lt;/a&gt; API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceCode")
    public String deviceCode;

    public CreateTokenRequestBody withDeviceCode(String deviceCode) {
        this.deviceCode = deviceCode;
        return this;
    }
    
    /**
     * &lt;p&gt;Supports grant types for the authorization code, refresh token, and device code request. For device code requests, specify the following value:&lt;/p&gt; &lt;p&gt; &lt;code&gt;urn:ietf:params:oauth:grant-type:&lt;i&gt;device_code&lt;/i&gt; &lt;/code&gt; &lt;/p&gt; &lt;p&gt;For information about how to obtain the device code, see the &lt;a&gt;StartDeviceAuthorization&lt;/a&gt; topic.&lt;/p&gt;
     */
    @JsonProperty("grantType")
    public String grantType;

    public CreateTokenRequestBody withGrantType(String grantType) {
        this.grantType = grantType;
        return this;
    }
    
    /**
     * The location of the application that will receive the authorization code. Users authorize the service to send the request to this location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectUri")
    public String redirectUri;

    public CreateTokenRequestBody withRedirectUri(String redirectUri) {
        this.redirectUri = redirectUri;
        return this;
    }
    
    /**
     * &lt;p&gt;Currently, &lt;code&gt;refreshToken&lt;/code&gt; is not yet implemented and is not supported. For more information about the features and limitations of the current IAM Identity Center OIDC implementation, see &lt;i&gt;Considerations for Using this Guide&lt;/i&gt; in the &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/Welcome.html"&gt;IAM Identity Center OIDC API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The token used to obtain an access token in the event that the access token is invalid or expired.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refreshToken")
    public String refreshToken;

    public CreateTokenRequestBody withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    /**
     * The list of scopes that is defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String[] scope;

    public CreateTokenRequestBody withScope(String[] scope) {
        this.scope = scope;
        return this;
    }
    
    public CreateTokenRequestBody(@JsonProperty("clientId") String clientId, @JsonProperty("clientSecret") String clientSecret, @JsonProperty("grantType") String grantType) {
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.grantType = grantType;
  }
}
