"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountimageimprovementssettings as shared_accountimageimprovementssettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountImageImprovementsInput:
    r"""This improvement will attempt to automatically correct submitted images if they don't meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973)"""
    
    account_image_improvements_settings: Optional[shared_accountimageimprovementssettings.AccountImageImprovementsSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountImageImprovementsSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for the Automatic Image Improvements."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountImageImprovements:
    r"""This improvement will attempt to automatically correct submitted images if they don't meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973)"""
    
    account_image_improvements_settings: Optional[shared_accountimageimprovementssettings.AccountImageImprovementsSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountImageImprovementsSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for the Automatic Image Improvements."""  
    effective_allow_automatic_image_improvements: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effectiveAllowAutomaticImageImprovements'), 'exclude': lambda f: f is None }})
    r"""Output only. The effective value of allow_automatic_image_improvements. If account_image_improvements_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."""  
    