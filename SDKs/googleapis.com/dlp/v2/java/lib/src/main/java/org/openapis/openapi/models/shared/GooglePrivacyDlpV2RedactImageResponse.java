/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2RedactImageResponse - Results of redacting an image.
 */
public class GooglePrivacyDlpV2RedactImageResponse {
    /**
     * If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extractedText")
    public String extractedText;
    public GooglePrivacyDlpV2RedactImageResponse withExtractedText(String extractedText) {
        this.extractedText = extractedText;
        return this;
    }
    
    /**
     * All the findings for a single scanned item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inspectResult")
    public GooglePrivacyDlpV2InspectResult inspectResult;
    public GooglePrivacyDlpV2RedactImageResponse withInspectResult(GooglePrivacyDlpV2InspectResult inspectResult) {
        this.inspectResult = inspectResult;
        return this;
    }
    
    /**
     * The redacted image. The type will be the same as the original image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redactedImage")
    public String redactedImage;
    public GooglePrivacyDlpV2RedactImageResponse withRedactedImage(String redactedImage) {
        this.redactedImage = redactedImage;
        return this;
    }
    
}
