/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SearchResultTextMatches } from "./searchresulttextmatches";
import { Expose, Type } from "class-transformer";

/**
 * Label Search Result Item
 */
export class LabelSearchResultItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default" })
  default: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  @SpeakeasyMetadata({ elemType: SearchResultTextMatches })
  @Expose({ name: "text_matches" })
  @Type(() => SearchResultTextMatches)
  textMatches?: SearchResultTextMatches[];

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
