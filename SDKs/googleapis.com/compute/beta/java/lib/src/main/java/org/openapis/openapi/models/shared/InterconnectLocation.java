/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InterconnectLocation - Represents an Interconnect Attachment (VLAN) Location resource. You can use this resource to find location details about an Interconnect attachment (VLAN). For more information about interconnect attachments, read Creating VLAN Attachments.
 */
public class InterconnectLocation {
    /**
     * [Output Only] The postal address of the Point of Presence, each line in the address is separated by a newline character.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public InterconnectLocation withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * [Output Only] Availability zone for this InterconnectLocation. Within a metropolitan area (metro), maintenance will not be simultaneously scheduled in more than one availability zone. Example: "zone1" or "zone2".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availabilityZone")
    public String availabilityZone;

    public InterconnectLocation withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }
    
    /**
     * [Output Only] Metropolitan area designator that indicates which city an interconnect is located. For example: "Chicago, IL", "Amsterdam, Netherlands".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public InterconnectLocation withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * [Output Only] Continent for this location, which can take one of the following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA - SOUTH_AMERICA 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continent")
    public InterconnectLocationContinentEnum continent;

    public InterconnectLocation withContinent(InterconnectLocationContinentEnum continent) {
        this.continent = continent;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public InterconnectLocation withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * [Output Only] An optional description of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public InterconnectLocation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The name of the provider for this facility (e.g., EQUINIX).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("facilityProvider")
    public String facilityProvider;

    public InterconnectLocation withFacilityProvider(String facilityProvider) {
        this.facilityProvider = facilityProvider;
        return this;
    }
    
    /**
     * [Output Only] A provider-assigned Identifier for this facility (e.g., Ashburn-DC1).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("facilityProviderFacilityId")
    public String facilityProviderFacilityId;

    public InterconnectLocation withFacilityProviderFacilityId(String facilityProviderFacilityId) {
        this.facilityProviderFacilityId = facilityProviderFacilityId;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public InterconnectLocation withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#interconnectLocation for interconnect locations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public InterconnectLocation withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * [Output Only] Name of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public InterconnectLocation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] The peeringdb identifier for this facility (corresponding with a netfac type in peeringdb).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("peeringdbFacilityId")
    public String peeringdbFacilityId;

    public InterconnectLocation withPeeringdbFacilityId(String peeringdbFacilityId) {
        this.peeringdbFacilityId = peeringdbFacilityId;
        return this;
    }
    
    /**
     * [Output Only] A list of InterconnectLocation.RegionInfo objects, that describe parameters pertaining to the relation between this InterconnectLocation and various Google Cloud regions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionInfos")
    public InterconnectLocationRegionInfo[] regionInfos;

    public InterconnectLocation withRegionInfos(InterconnectLocationRegionInfo[] regionInfos) {
        this.regionInfos = regionInfos;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public InterconnectLocation withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] The status of this InterconnectLocation, which can take one of the following values: - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public InterconnectLocationStatusEnum status;

    public InterconnectLocation withStatus(InterconnectLocationStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output Only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportsPzs")
    public Boolean supportsPzs;

    public InterconnectLocation withSupportsPzs(Boolean supportsPzs) {
        this.supportsPzs = supportsPzs;
        return this;
    }
    
    public InterconnectLocation(){}
}
