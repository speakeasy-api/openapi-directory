// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CodespacesCreateWithRepoForAuthenticatedUserPathParams struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type CodespacesCreateWithRepoForAuthenticatedUserRequestBody struct {
	// IP for location auto-detection when proxying a request
	ClientIP *string `json:"client_ip,omitempty"`
	// Path to devcontainer.json config to use for this codespace
	DevcontainerPath *string `json:"devcontainer_path,omitempty"`
	// Display name for this codespace
	DisplayName *string `json:"display_name,omitempty"`
	// Time in minutes before codespace stops from inactivity
	IdleTimeoutMinutes *int64 `json:"idle_timeout_minutes,omitempty"`
	// Location for this codespace. Assigned by IP if not provided
	Location *string `json:"location,omitempty"`
	// Machine type to use for this codespace
	Machine *string `json:"machine,omitempty"`
	// Whether to authorize requested permissions from devcontainer.json
	MultiRepoPermissionsOptOut *bool `json:"multi_repo_permissions_opt_out,omitempty"`
	// Git ref (typically a branch name) for this codespace
	Ref *string `json:"ref,omitempty"`
	// Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
	RetentionPeriodMinutes *int64 `json:"retention_period_minutes,omitempty"`
	// Working directory for this codespace
	WorkingDirectory *string `json:"working_directory,omitempty"`
}

type CodespacesCreateWithRepoForAuthenticatedUserRequest struct {
	PathParams CodespacesCreateWithRepoForAuthenticatedUserPathParams
	Request    CodespacesCreateWithRepoForAuthenticatedUserRequestBody `request:"mediaType=application/json"`
}

// CodespacesCreateWithRepoForAuthenticatedUser503ApplicationJSON - Service unavailable
type CodespacesCreateWithRepoForAuthenticatedUser503ApplicationJSON struct {
	Code             *string `json:"code,omitempty"`
	DocumentationURL *string `json:"documentation_url,omitempty"`
	Message          *string `json:"message,omitempty"`
}

type CodespacesCreateWithRepoForAuthenticatedUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Bad Request
	BasicError *shared.BasicError
	// Response when the codespace was successfully created
	Codespace *shared.Codespace
	// Service unavailable
	CodespacesCreateWithRepoForAuthenticatedUser503ApplicationJSONObject *CodespacesCreateWithRepoForAuthenticatedUser503ApplicationJSON
	// Bad Request
	ScimError *shared.ScimError
}
