// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateConnectorRequestBodyCapacity - Information about the capacity of the connector, whether it is auto scaled or provisioned.
type CreateConnectorRequestBodyCapacity struct {
	AutoScaling         *shared.AutoScaling         `json:"autoScaling,omitempty"`
	ProvisionedCapacity *shared.ProvisionedCapacity `json:"provisionedCapacity,omitempty"`
}

// CreateConnectorRequestBodyKafkaCluster - The details of the Apache Kafka cluster to which the connector is connected.
type CreateConnectorRequestBodyKafkaCluster struct {
	ApacheKafkaCluster *shared.ApacheKafkaCluster `json:"apacheKafkaCluster,omitempty"`
}

// CreateConnectorRequestBodyKafkaClusterClientAuthentication - The client authentication information used in order to authenticate with the Apache Kafka cluster.
type CreateConnectorRequestBodyKafkaClusterClientAuthentication struct {
	AuthenticationType *shared.KafkaClusterClientAuthenticationTypeEnum `json:"authenticationType,omitempty"`
}

// CreateConnectorRequestBodyKafkaClusterEncryptionInTransit - Details of encryption in transit to the Apache Kafka cluster.
type CreateConnectorRequestBodyKafkaClusterEncryptionInTransit struct {
	EncryptionType *shared.KafkaClusterEncryptionInTransitTypeEnum `json:"encryptionType,omitempty"`
}

// CreateConnectorRequestBodyLogDelivery - Details about log delivery.
type CreateConnectorRequestBodyLogDelivery struct {
	WorkerLogDelivery *shared.WorkerLogDelivery `json:"workerLogDelivery,omitempty"`
}

// CreateConnectorRequestBodyWorkerConfiguration - The configuration of the workers, which are the processes that run the connector logic.
type CreateConnectorRequestBodyWorkerConfiguration struct {
	Revision               *int64  `json:"revision,omitempty"`
	WorkerConfigurationArn *string `json:"workerConfigurationArn,omitempty"`
}

type CreateConnectorRequestBody struct {
	// Information about the capacity of the connector, whether it is auto scaled or provisioned.
	Capacity CreateConnectorRequestBodyCapacity `json:"capacity"`
	// A map of keys to values that represent the configuration for the connector.
	ConnectorConfiguration map[string]string `json:"connectorConfiguration"`
	// A summary description of the connector.
	ConnectorDescription *string `json:"connectorDescription,omitempty"`
	// The name of the connector.
	ConnectorName string `json:"connectorName"`
	// The details of the Apache Kafka cluster to which the connector is connected.
	KafkaCluster CreateConnectorRequestBodyKafkaCluster `json:"kafkaCluster"`
	// The client authentication information used in order to authenticate with the Apache Kafka cluster.
	KafkaClusterClientAuthentication CreateConnectorRequestBodyKafkaClusterClientAuthentication `json:"kafkaClusterClientAuthentication"`
	// Details of encryption in transit to the Apache Kafka cluster.
	KafkaClusterEncryptionInTransit CreateConnectorRequestBodyKafkaClusterEncryptionInTransit `json:"kafkaClusterEncryptionInTransit"`
	// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
	KafkaConnectVersion string `json:"kafkaConnectVersion"`
	// Details about log delivery.
	LogDelivery *CreateConnectorRequestBodyLogDelivery `json:"logDelivery,omitempty"`
	// Specifies which plugins to use for the connector.
	Plugins []shared.Plugin `json:"plugins"`
	// The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
	ServiceExecutionRoleArn string `json:"serviceExecutionRoleArn"`
	// The configuration of the workers, which are the processes that run the connector logic.
	WorkerConfiguration *CreateConnectorRequestBodyWorkerConfiguration `json:"workerConfiguration,omitempty"`
}

type CreateConnectorRequest struct {
	RequestBody       CreateConnectorRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateConnectorResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateConnectorResponse *shared.CreateConnectorResponse
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
