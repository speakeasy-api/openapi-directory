/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommentThreadReplies } from "./commentthreadreplies";
import { CommentThreadSnippet } from "./commentthreadsnippet";
import { Expose, Type } from "class-transformer";

/**
 * A *comment thread* represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.
 */
export class CommentThread extends SpeakeasyBase {
  /**
   * Etag of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The ID that YouTube uses to uniquely identify the comment thread.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "youtube#commentThread".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Comments written in (direct or indirect) reply to the top level comment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replies" })
  @Type(() => CommentThreadReplies)
  replies?: CommentThreadReplies;

  /**
   * Basic details about a comment thread.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snippet" })
  @Type(() => CommentThreadSnippet)
  snippet?: CommentThreadSnippet;
}
