/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * InvoiceFullDetailsApiModel - OK
 */
public class InvoiceFullDetailsApiModel {
    /**
     * Security access token used for accessing the invoice anonymously
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessToken")
    public String accessToken;

    public InvoiceFullDetailsApiModel withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * List of invoice activities. Invoice audit log
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Activities")
    public InvoiceActivityApiModel[] activities;

    public InvoiceFullDetailsApiModel withActivities(InvoiceActivityApiModel[] activities) {
        this.activities = activities;
        return this;
    }
    
    /**
     * List of invoice attachments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attachments")
    public InvoiceAttachmentApiModel[] attachments;

    public InvoiceFullDetailsApiModel withAttachments(InvoiceAttachmentApiModel[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Client")
    public ClientDetailsApiModel client;

    public InvoiceFullDetailsApiModel withClient(ClientDetailsApiModel client) {
        this.client = client;
        return this;
    }
    
    /**
     * Indicate from which invoice this invoice has been cloned from
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClonedFromId")
    public Integer clonedFromId;

    public InvoiceFullDetailsApiModel withClonedFromId(Integer clonedFromId) {
        this.clonedFromId = clonedFromId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Currency")
    public CurrencyDetailsApiModel currency;

    public InvoiceFullDetailsApiModel withCurrency(CurrencyDetailsApiModel currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Amount that goes as a discount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DiscountAmount")
    public Double discountAmount;

    public InvoiceFullDetailsApiModel withDiscountAmount(Double discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }
    
    /**
     * Indicates when the invoice will be proclamed as due
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Duedate")
    public OffsetDateTime duedate;

    public InvoiceFullDetailsApiModel withDuedate(OffsetDateTime duedate) {
        this.duedate = duedate;
        return this;
    }
    
    /**
     * Indicate that the invoice allows the user to pay the invoice partially
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnablePartialPayments")
    public Boolean enablePartialPayments;

    public InvoiceFullDetailsApiModel withEnablePartialPayments(Boolean enablePartialPayments) {
        this.enablePartialPayments = enablePartialPayments;
        return this;
    }
    
    /**
     * Invoice id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;

    public InvoiceFullDetailsApiModel withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Hold the id of the invoice category
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceCategoryId")
    public Integer invoiceCategoryId;

    public InvoiceFullDetailsApiModel withInvoiceCategoryId(Integer invoiceCategoryId) {
        this.invoiceCategoryId = invoiceCategoryId;
        return this;
    }
    
    /**
     * Indicates when the invoice was issued
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("IssuedOn")
    public OffsetDateTime issuedOn;

    public InvoiceFullDetailsApiModel withIssuedOn(OffsetDateTime issuedOn) {
        this.issuedOn = issuedOn;
        return this;
    }
    
    /**
     * List of invoice items
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Items")
    public InvoiceItemApiModel[] items;

    public InvoiceFullDetailsApiModel withItems(InvoiceItemApiModel[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Internal note regarding the invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Notes")
    public String notes;

    public InvoiceFullDetailsApiModel withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Unique invoice number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Number")
    public String number;

    public InvoiceFullDetailsApiModel withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * List of enabled payment gateways for this invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentGateways")
    public InvoiceGatewayApiModel[] paymentGateways;

    public InvoiceFullDetailsApiModel withPaymentGateways(InvoiceGatewayApiModel[] paymentGateways) {
        this.paymentGateways = paymentGateways;
        return this;
    }
    
    /**
     * List of invoice payments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Payments")
    public InvoicePaymentApiModel[] payments;

    public InvoiceFullDetailsApiModel withPayments(InvoicePaymentApiModel[] payments) {
        this.payments = payments;
        return this;
    }
    
    /**
     * Unique number generated by the buyer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PoNumber")
    public String poNumber;

    public InvoiceFullDetailsApiModel withPoNumber(String poNumber) {
        this.poNumber = poNumber;
        return this;
    }
    
    /**
     * Definition of invoice recurring profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringProfile")
    public InvoiceRecurringApiModel recurringProfile;

    public InvoiceFullDetailsApiModel withRecurringProfile(InvoiceRecurringApiModel recurringProfile) {
        this.recurringProfile = recurringProfile;
        return this;
    }
    
    /**
     * Hold the id of the recurring profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringProfileId")
    public Integer recurringProfileId;

    public InvoiceFullDetailsApiModel withRecurringProfileId(Integer recurringProfileId) {
        this.recurringProfileId = recurringProfileId;
        return this;
    }
    
    /**
     * Should send email reminders to client?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShouldSendReminders")
    public Boolean shouldSendReminders;

    public InvoiceFullDetailsApiModel withShouldSendReminders(Boolean shouldSendReminders) {
        this.shouldSendReminders = shouldSendReminders;
        return this;
    }
    
    /**
     * Indicate the status of the invoice (paid/unpaid/overdue)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public InvoiceFullDetailsApiModelStatusEnum status;

    public InvoiceFullDetailsApiModel withStatus(InvoiceFullDetailsApiModelStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Total amount of the invoice without tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubTotalAmount")
    public Double subTotalAmount;

    public InvoiceFullDetailsApiModel withSubTotalAmount(Double subTotalAmount) {
        this.subTotalAmount = subTotalAmount;
        return this;
    }
    
    /**
     * Amount that goes to the tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxAmount")
    public Double taxAmount;

    public InvoiceFullDetailsApiModel withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * Terms of agreement
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Terms")
    public String terms;

    public InvoiceFullDetailsApiModel withTerms(String terms) {
        this.terms = terms;
        return this;
    }
    
    /**
     * Total amount of the invoice with tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalAmount")
    public Double totalAmount;

    public InvoiceFullDetailsApiModel withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    public InvoiceFullDetailsApiModel(){}
}
