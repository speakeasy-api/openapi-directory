"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getimportationproductsreportrequesterrorcode as shared_getimportationproductsreportrequesterrorcode
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetImportationProductsReportRequest:
    r"""Get Importation Products Report Request"""
    
    page_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageNumber') }})
    r"""Indicates the page number"""  
    page_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageSize') }})
    r"""Indicate the item count per page"""  
    ean: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ean'), 'exclude': lambda f: f is None }})
    r"""Filter by EAN (equals)"""  
    error_codes: Optional[list[shared_getimportationproductsreportrequesterrorcode.GetImportationProductsReportRequestErrorCode]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCodes'), 'exclude': lambda f: f is None }})
    r"""Get Importation Products Report Request Error Codes"""  
    mpn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mpn'), 'exclude': lambda f: f is None }})
    r"""Filter by MPN (equals)"""  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sku'), 'exclude': lambda f: f is None }})
    r"""Filter by Sku (equals)"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Filter by Title (StartsWith)"""  
    