// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// RateMonetaryValue - A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.
type RateMonetaryValue struct {
	// The monetary amount, in the specified currency.
	Amount   float64      `json:"amount"`
	Currency CurrencyEnum `json:"currency"`
}

// RateRateTypeEnum - The possible rate type values
type RateRateTypeEnum string

const (
	RateRateTypeEnumCheck    RateRateTypeEnum = "check"
	RateRateTypeEnumShipment RateRateTypeEnum = "shipment"
)

func (e *RateRateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "check":
		fallthrough
	case "shipment":
		*e = RateRateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RateRateTypeEnum: %s", s)
	}
}

// RateValidationStatusEnum - The possible validation status values
type RateValidationStatusEnum string

const (
	RateValidationStatusEnumValid       RateValidationStatusEnum = "valid"
	RateValidationStatusEnumInvalid     RateValidationStatusEnum = "invalid"
	RateValidationStatusEnumHasWarnings RateValidationStatusEnum = "has_warnings"
	RateValidationStatusEnumUnknown     RateValidationStatusEnum = "unknown"
)

func (e *RateValidationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "valid":
		fallthrough
	case "invalid":
		fallthrough
	case "has_warnings":
		fallthrough
	case "unknown":
		*e = RateValidationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RateValidationStatusEnum: %s", s)
	}
}

// Rate - A rate
type Rate struct {
	// carrier code
	CarrierCode string `json:"carrier_code"`
	// The carrier delivery days
	CarrierDeliveryDays *string `json:"carrier_delivery_days,omitempty"`
	// carrier friendly name
	CarrierFriendlyName string `json:"carrier_friendly_name"`
	// A string that uniquely identifies the carrier
	CarrierID string `json:"carrier_id"`
	// carrier nickname
	CarrierNickname string `json:"carrier_nickname"`
	// The confirmation amount
	ConfirmationAmount RateMonetaryValue `json:"confirmation_amount"`
	// The number of days estimated for delivery, this will show the _actual_ deliverty
	// time if for example, the package gets shipped on a Friday
	//
	DeliveryDays *int `json:"delivery_days,omitempty"`
	// The error messages
	ErrorMessages         []string   `json:"error_messages"`
	EstimatedDeliveryDate *time.Time `json:"estimated_delivery_date,omitempty"`
	// Indicates if the rate is guaranteed.
	GuaranteedService bool `json:"guaranteed_service"`
	// The insurance amount
	InsuranceAmount RateMonetaryValue `json:"insurance_amount"`
	// Indicates if the rates been negotiated
	NegotiatedRate bool `json:"negotiated_rate"`
	// Any other charges associated with this rate
	OtherAmount RateMonetaryValue `json:"other_amount"`
	// package type that this rate was estimated for
	PackageType string `json:"package_type"`
	// A string that uniquely identifies the rate
	RateID   string           `json:"rate_id"`
	RateType RateRateTypeEnum `json:"rate_type"`
	// service code for the rate
	ServiceCode string `json:"service_code"`
	// service type
	ServiceType string `json:"service_type"`
	// ship date
	ShipDate *time.Time `json:"ship_date,omitempty"`
	// The shipping amount
	ShippingAmount RateMonetaryValue `json:"shipping_amount"`
	// Tariff and additional taxes associated with an international shipment.
	TaxAmount *RateMonetaryValue `json:"tax_amount,omitempty"`
	// Indicates if rate is trackable
	Trackable        bool                     `json:"trackable"`
	ValidationStatus RateValidationStatusEnum `json:"validation_status"`
	// The warning messages
	WarningMessages []string `json:"warning_messages"`
	// Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
	// custom zones that vary depending upon the ship_to and ship_from location
	//
	Zone int `json:"zone"`
}
