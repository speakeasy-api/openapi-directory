// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// SeasonUpcomingFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type SeasonUpcomingFormatEnum string

const (
	SeasonUpcomingFormatEnumXML  SeasonUpcomingFormatEnum = "XML"
	SeasonUpcomingFormatEnumJSON SeasonUpcomingFormatEnum = "JSON"
)

func (e *SeasonUpcomingFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = SeasonUpcomingFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SeasonUpcomingFormatEnum: %s", s)
	}
}

type SeasonUpcomingPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format SeasonUpcomingFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type SeasonUpcomingRequest struct {
	PathParams SeasonUpcomingPathParams
}

type SeasonUpcomingResponse struct {
	ContentType                             string
	SeasonUpcoming200ApplicationJSONInteger *int64
	StatusCode                              int
	RawResponse                             *http.Response
}
