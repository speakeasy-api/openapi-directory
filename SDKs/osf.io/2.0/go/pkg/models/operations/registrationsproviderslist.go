// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type RegistrationsProvidersListRequest struct {
	// The unique identifier of the registration.
	RegistrationID string `pathParam:"style=simple,explode=false,name=registration_id"`
}

// RegistrationsProvidersListFileAttributes - The properties of the file entity.
type RegistrationsProvidersListFileAttributes struct {
	// SOON TO BE DEPRECATED, see relationships checkout.
	Checkout *string
	// Whether or not the current user is allowed to post comments.
	CurrentUserCanComment *bool
	// Version number of the file.
	CurrentVersion *int64
	// The time at which the file was created, as an iso8601 formatted timestamp.
	DateCreated *time.Time
	// The time at which the file was last modified, as an iso8601 formatted timestamp.
	DateModified *time.Time
	// Whether or not deletion of the file is allowed.
	DeleteAllowed *bool
	// Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
	Extra map[string]interface{}
	// Global unique identifier (GUID) for this file (if one has been assigned).
	GUID *string
	// The kind of files object it is (`file` or `folder`).
	Kind *string
	// The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
	LastTouched *time.Time
	// Unix-style path to the file relative to the provider root.
	MaterializedPath *string
	// Name of the file
	Name *string
	// The unique identifier for this file entity for this project and storage provider.
	Path *string
	// The id of the file provider (e.g., `osfstorage`)
	Provider *string
	// Size of the file in bytes.
	Size *int64
	// A list of strings that describe this file, as entered by project contributors.
	Tags []string
}

// RegistrationsProvidersListFileLinks - Links to alternative representations of the file entity.
type RegistrationsProvidersListFileLinks struct {
	// The Waterbutler API route for file deletions.
	Delete *string
	// The Waterbutler API route for file downloads.
	Download *string
	// A link to the page to view a file's information or a folder's contents.
	Info *string
	// The Waterbutler API route for file moves.
	Move *string
	// The Waterbutler API route for creating a new subfolder (does not exist for files).
	NewFolder *string
	// A link to the detail page for the file.
	Self *string
	// The Waterbutler API route for file uploads.
	Upload *string
}

// RegistrationsProvidersListFileRelationships - Links to other entities or entity collections that have a relationship to the file entity.
type RegistrationsProvidersListFileRelationships struct {
	// A link to the user who checked out the file.
	Checkout *string
	// A link to the comments on the file.
	Comments *string
	// A link to the node the file is on.
	Node *string
	// A link to the versions of the file.
	Versions *string
}

type RegistrationsProvidersListFile struct {
	// The properties of the file entity.
	Attributes *RegistrationsProvidersListFileAttributes
	// The identifier of the file entity.
	ID *string
	// Links to alternative representations of the file entity.
	Links *RegistrationsProvidersListFileLinks
	// Links to other entities or entity collections that have a relationship to the file entity.
	Relationships *RegistrationsProvidersListFileRelationships
	// The type identifier of the file entity (`files`).
	Type *string
}

type RegistrationsProvidersListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
