"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import parallelinstruction as shared_parallelinstruction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MapTask:
    r"""MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask's WorkItem. Each instruction must appear in the list before any instructions which depends on its output."""
    
    counter_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('counterPrefix'), 'exclude': lambda f: f is None }})
    r"""Counter prefix that can be used to prefix counters. Not currently used in Dataflow."""  
    instructions: Optional[list[shared_parallelinstruction.ParallelInstruction]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructions'), 'exclude': lambda f: f is None }})
    r"""The instructions in the MapTask."""  
    stage_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stageName'), 'exclude': lambda f: f is None }})
    r"""System-defined name of the stage containing this MapTask. Unique across the workflow."""  
    system_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemName'), 'exclude': lambda f: f is None }})
    r"""System-defined name of this MapTask. Unique across the workflow."""  
    