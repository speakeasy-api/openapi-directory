"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import primarystep as shared_primarystep
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MultiStep:
    r"""Details when multiple steps are run with the same configuration as a group."""
    
    multistep_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multistepNumber'), 'exclude': lambda f: f is None }})
    r"""Unique int given to each step. Ranges from 0(inclusive) to total number of steps(exclusive). The primary step is 0."""  
    primary_step: Optional[shared_primarystep.PrimaryStep] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryStep'), 'exclude': lambda f: f is None }})
    r"""Stores rollup test status of multiple steps that were run as a group and outcome of each individual step."""  
    primary_step_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryStepId'), 'exclude': lambda f: f is None }})
    r"""Step Id of the primary (original) step, which might be this step."""  
    