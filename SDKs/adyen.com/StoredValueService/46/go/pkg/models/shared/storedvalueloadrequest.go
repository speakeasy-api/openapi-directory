// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StoredValueLoadRequestLoadTypeEnum - The type of load you are trying to do, when absent we default to 'Load'
type StoredValueLoadRequestLoadTypeEnum string

const (
	StoredValueLoadRequestLoadTypeEnumMerchandiseReturn StoredValueLoadRequestLoadTypeEnum = "merchandiseReturn"
	StoredValueLoadRequestLoadTypeEnumLoad              StoredValueLoadRequestLoadTypeEnum = "load"
)

func (e *StoredValueLoadRequestLoadTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "merchandiseReturn":
		fallthrough
	case "load":
		*e = StoredValueLoadRequestLoadTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StoredValueLoadRequestLoadTypeEnum: %s", s)
	}
}

// StoredValueLoadRequestShopperInteractionEnum - Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
// For the web service API, Adyen assumes Ecommerce shopper interaction by default.
//
// This field has the following possible values:
// * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
// * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
// * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
// * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
type StoredValueLoadRequestShopperInteractionEnum string

const (
	StoredValueLoadRequestShopperInteractionEnumEcommerce StoredValueLoadRequestShopperInteractionEnum = "Ecommerce"
	StoredValueLoadRequestShopperInteractionEnumContAuth  StoredValueLoadRequestShopperInteractionEnum = "ContAuth"
	StoredValueLoadRequestShopperInteractionEnumMoto      StoredValueLoadRequestShopperInteractionEnum = "Moto"
	StoredValueLoadRequestShopperInteractionEnumPos       StoredValueLoadRequestShopperInteractionEnum = "POS"
)

func (e *StoredValueLoadRequestShopperInteractionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Ecommerce":
		fallthrough
	case "ContAuth":
		fallthrough
	case "Moto":
		fallthrough
	case "POS":
		*e = StoredValueLoadRequestShopperInteractionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StoredValueLoadRequestShopperInteractionEnum: %s", s)
	}
}

type StoredValueLoadRequest struct {
	Amount Amount `json:"amount"`
	// The type of load you are trying to do, when absent we default to 'Load'
	LoadType *StoredValueLoadRequestLoadTypeEnum `json:"loadType,omitempty"`
	// The merchant account identifier, with which you want to process the transaction.
	MerchantAccount string `json:"merchantAccount"`
	// The collection that contains the type of the payment method and its specific information if available
	PaymentMethod            map[string]string `json:"paymentMethod"`
	RecurringDetailReference *string           `json:"recurringDetailReference,omitempty"`
	// The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
	// If you need to provide multiple references for a transaction, separate them with hyphens ("-").
	// Maximum length: 80 characters.
	Reference string `json:"reference"`
	// Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
	// For the web service API, Adyen assumes Ecommerce shopper interaction by default.
	//
	// This field has the following possible values:
	// * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
	// * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
	// * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
	// * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
	ShopperInteraction *StoredValueLoadRequestShopperInteractionEnum `json:"shopperInteraction,omitempty"`
	ShopperReference   *string                                       `json:"shopperReference,omitempty"`
	// The physical store, for which this payment is processed.
	Store *string `json:"store,omitempty"`
}
