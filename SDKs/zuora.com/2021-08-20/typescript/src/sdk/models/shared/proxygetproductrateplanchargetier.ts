/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ProxyGetProductRatePlanChargeTier extends SpeakeasyBase {
  /**
   * The ID of the Zuora user who created the ProductRatePlanChargeTier object. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   * The date when the ProductRatePlanChargeTier object was created. **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   * The code corresponding to the currency for the tier's price. **Character limit**: 3 **Values**: a valid currency code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Currency" })
  currency?: string;

  /**
   * The end number of a range of units for the tier. **Character limit**: 16 **Values**: any positive decimal value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EndingUnit" })
  endingUnit?: number;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   *  The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the charge model is tiered pricing.
   *
   * @remarks
   * **Character limit**: 16 **Values**: a valid currency value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Price" })
  price?: number;

  /**
   * Indicates if pricing is a flat fee or is per unit. This field is for tiered and volume pricing models only. **Character limit**: 8 **Values**: `FlatFee`, `PerUnit` **Note:** The values `Flat Fee` and `Per Unit` (with spaces) is valid for create or update calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PriceFormat" })
  priceFormat?: string;

  /**
   *  The starting number of a range of units for the tier.
   *
   * @remarks
   * **Character limit**: 16 **Values**: any positive decimal value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartingUnit" })
  startingUnit?: number;

  /**
   *  A unique number that identifies the tier that the price applies to.
   *
   * @remarks
   * **Character limit**: 20 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tier" })
  tier?: number;

  /**
   *  The ID of the user who last updated the product rate plan charge tier.
   *
   * @remarks
   * **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   *  The date when the product rate plan charge tier was last updated.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
