// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum - Required. When to log the event.
type GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum string

const (
	GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnumLogConditionUnspecified   GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum = "LOG_CONDITION_UNSPECIFIED"
	GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnumAudienceJoined            GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum = "AUDIENCE_JOINED"
	GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnumAudienceMembershipRenewed GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum = "AUDIENCE_MEMBERSHIP_RENEWED"
)

func (e GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum) ToPointer() *GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum {
	return &e
}

func (e *GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOG_CONDITION_UNSPECIFIED":
		fallthrough
	case "AUDIENCE_JOINED":
		fallthrough
	case "AUDIENCE_MEMBERSHIP_RENEWED":
		*e = GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum: %v", v)
	}
}

// GoogleAnalyticsAdminV1alphaAudienceEventTrigger - Specifies an event to log when a user joins the Audience.
type GoogleAnalyticsAdminV1alphaAudienceEventTrigger struct {
	// Required. The event name that will be logged.
	EventName *string `json:"eventName,omitempty"`
	// Required. When to log the event.
	LogCondition *GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum `json:"logCondition,omitempty"`
}
