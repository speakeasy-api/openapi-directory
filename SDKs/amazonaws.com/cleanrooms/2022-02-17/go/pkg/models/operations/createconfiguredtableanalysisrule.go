// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateConfiguredTableAnalysisRulePathParams struct {
	// The identifier for the configured table to create the analysis rule for. Currently accepts the configured table ID.
	ConfiguredTableIdentifier string `pathParam:"style=simple,explode=false,name=configuredTableIdentifier"`
}

type CreateConfiguredTableAnalysisRuleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRulePolicy - Controls on the query specifications that can be run on a configured table.
type CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRulePolicy struct {
	V1 *shared.ConfiguredTableAnalysisRulePolicyV1 `json:"v1,omitempty"`
}

// CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum - The type of analysis rule. Valid values are AGGREGATION and LIST.
type CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum string

const (
	CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnumAggregation CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum = "AGGREGATION"
	CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnumList        CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum = "LIST"
)

func (e *CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AGGREGATION":
		fallthrough
	case "LIST":
		*e = CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum: %s", s)
	}
}

type CreateConfiguredTableAnalysisRuleRequestBody struct {
	// Controls on the query specifications that can be run on a configured table.
	AnalysisRulePolicy CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRulePolicy `json:"analysisRulePolicy"`
	// The type of analysis rule. Valid values are AGGREGATION and LIST.
	AnalysisRuleType CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum `json:"analysisRuleType"`
}

type CreateConfiguredTableAnalysisRuleRequest struct {
	PathParams CreateConfiguredTableAnalysisRulePathParams
	Headers    CreateConfiguredTableAnalysisRuleHeaders
	Request    CreateConfiguredTableAnalysisRuleRequestBody `request:"mediaType=application/json"`
}

type CreateConfiguredTableAnalysisRuleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateConfiguredTableAnalysisRuleOutput *shared.CreateConfiguredTableAnalysisRuleOutput
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
