/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ObjectT } from "./object";
import { Expose, Type } from "class-transformer";

/**
 * A rewrite response.
 */
export class RewriteResponse extends SpeakeasyBase {
  /**
   * true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "done" })
  done?: boolean;

  /**
   * The kind of item this is.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The total size of the object being copied in bytes. This property is always present in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectSize" })
  objectSize?: string;

  /**
   * An object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => ObjectT)
  resource?: ObjectT;

  /**
   * A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rewriteToken" })
  rewriteToken?: string;

  /**
   * The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalBytesRewritten" })
  totalBytesRewritten?: string;
}
