/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * DestinyMilestonesDestinyPublicMilestone - Information about milestones, presented in a character state-agnostic manner. Combine this data with DestinyMilestoneDefinition to get a full picture of the milestone, which is basically a checklist of things to do in the game. Think of this as GetPublicAdvisors 3.0, for those who used the Destiny 1 API.
 */
public class DestinyMilestonesDestinyPublicMilestone {
    
    public DestinyMilestonesDestinyPublicMilestoneChallengeActivity[] activities;

    public DestinyMilestonesDestinyPublicMilestone withActivities(DestinyMilestonesDestinyPublicMilestoneChallengeActivity[] activities) {
        this.activities = activities;
        return this;
    }
    
    /**
     * A milestone not need have even a single quest, but if there are active quests they will be returned here.
     */
    
    public DestinyMilestonesDestinyPublicMilestoneQuest[] availableQuests;

    public DestinyMilestonesDestinyPublicMilestone withAvailableQuests(DestinyMilestonesDestinyPublicMilestoneQuest[] availableQuests) {
        this.availableQuests = availableQuests;
        return this;
    }
    
    /**
     * If known, this is the date when the Milestone will expire/recycle/end.
     */
    
    public OffsetDateTime endDate;

    public DestinyMilestonesDestinyPublicMilestone withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The hash identifier for the milestone. Use it to look up the DestinyMilestoneDefinition for static data about the Milestone.
     */
    
    public Long milestoneHash;

    public DestinyMilestonesDestinyPublicMilestone withMilestoneHash(Long milestoneHash) {
        this.milestoneHash = milestoneHash;
        return this;
    }
    
    /**
     * Used for ordering milestones in a display to match how we order them in BNet. May pull from static data, or possibly in the future from dynamic information.
     */
    
    public Integer order;

    public DestinyMilestonesDestinyPublicMilestone withOrder(Integer order) {
        this.order = order;
        return this;
    }
    
    /**
     * If known, this is the date when the Milestone started/became active.
     */
    
    public OffsetDateTime startDate;

    public DestinyMilestonesDestinyPublicMilestone withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * Sometimes milestones - or activities active in milestones - will have relevant vendors. These are the vendors that are currently relevant.
     * Deprecated, already, for the sake of the new "vendors" property that has more data. What was I thinking.
     */
    
    public Long[] vendorHashes;

    public DestinyMilestonesDestinyPublicMilestone withVendorHashes(Long[] vendorHashes) {
        this.vendorHashes = vendorHashes;
        return this;
    }
    
    /**
     * This is why we can't have nice things. This is the ordered list of vendors to be shown that relate to this milestone, potentially along with other interesting data.
     */
    
    public DestinyMilestonesDestinyPublicMilestoneVendor[] vendors;

    public DestinyMilestonesDestinyPublicMilestone withVendors(DestinyMilestonesDestinyPublicMilestoneVendor[] vendors) {
        this.vendors = vendors;
        return this;
    }
    
    public DestinyMilestonesDestinyPublicMilestone(){}
}
