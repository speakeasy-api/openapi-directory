// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateAccountRequestPayoutScheduleEnum - The payout schedule of the prospective account.
// >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
type CreateAccountRequestPayoutScheduleEnum string

const (
	CreateAccountRequestPayoutScheduleEnumBiweeklyOn1StAnd15ThAtMidnight CreateAccountRequestPayoutScheduleEnum = "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT"
	CreateAccountRequestPayoutScheduleEnumDaily                          CreateAccountRequestPayoutScheduleEnum = "DAILY"
	CreateAccountRequestPayoutScheduleEnumDailyAu                        CreateAccountRequestPayoutScheduleEnum = "DAILY_AU"
	CreateAccountRequestPayoutScheduleEnumDailyEu                        CreateAccountRequestPayoutScheduleEnum = "DAILY_EU"
	CreateAccountRequestPayoutScheduleEnumDailySg                        CreateAccountRequestPayoutScheduleEnum = "DAILY_SG"
	CreateAccountRequestPayoutScheduleEnumDailyUs                        CreateAccountRequestPayoutScheduleEnum = "DAILY_US"
	CreateAccountRequestPayoutScheduleEnumHold                           CreateAccountRequestPayoutScheduleEnum = "HOLD"
	CreateAccountRequestPayoutScheduleEnumMonthly                        CreateAccountRequestPayoutScheduleEnum = "MONTHLY"
	CreateAccountRequestPayoutScheduleEnumWeekly                         CreateAccountRequestPayoutScheduleEnum = "WEEKLY"
	CreateAccountRequestPayoutScheduleEnumWeeklyOnTueFriMidnight         CreateAccountRequestPayoutScheduleEnum = "WEEKLY_ON_TUE_FRI_MIDNIGHT"
)

func (e *CreateAccountRequestPayoutScheduleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT":
		fallthrough
	case "DAILY":
		fallthrough
	case "DAILY_AU":
		fallthrough
	case "DAILY_EU":
		fallthrough
	case "DAILY_SG":
		fallthrough
	case "DAILY_US":
		fallthrough
	case "HOLD":
		fallthrough
	case "MONTHLY":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "WEEKLY_ON_TUE_FRI_MIDNIGHT":
		*e = CreateAccountRequestPayoutScheduleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccountRequestPayoutScheduleEnum: %s", s)
	}
}

type CreateAccountRequest struct {
	// The code of Account Holder under which to create the account.
	AccountHolderCode string `json:"accountHolderCode"`
	// A description of the account, maximum 256 characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores `_`.
	Description *string `json:"description,omitempty"`
	// The payout schedule of the prospective account.
	// >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
	PayoutSchedule *CreateAccountRequestPayoutScheduleEnum `json:"payoutSchedule,omitempty"`
	// The reason for the payout schedule choice.
	// >Required if the payoutSchedule is `HOLD`.
	PayoutScheduleReason *string `json:"payoutScheduleReason,omitempty"`
}
