"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkflowExecutionOpenCounts:
    r"""Contains the counts of open tasks, child workflow executions and timers for a workflow execution."""
    
    open_activity_tasks: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openActivityTasks') }})  
    open_child_workflow_executions: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openChildWorkflowExecutions') }})  
    open_decision_tasks: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openDecisionTasks') }})  
    open_timers: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openTimers') }})  
    open_lambda_functions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openLambdaFunctions'), 'exclude': lambda f: f is None }})  
    