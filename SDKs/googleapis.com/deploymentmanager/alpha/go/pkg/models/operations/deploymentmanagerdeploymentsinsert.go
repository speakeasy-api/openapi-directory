// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeploymentmanagerDeploymentsInsertSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DeploymentmanagerDeploymentsInsertSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DeploymentmanagerDeploymentsInsertSecurity struct {
	Option1 *DeploymentmanagerDeploymentsInsertSecurityOption1 `security:"option"`
	Option2 *DeploymentmanagerDeploymentsInsertSecurityOption2 `security:"option"`
}

type DeploymentmanagerDeploymentsInsertPathParams struct {
	// The project ID for this request.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

// DeploymentmanagerDeploymentsInsertCreatePolicyEnum - Sets the policy to use for creating new resources.
type DeploymentmanagerDeploymentsInsertCreatePolicyEnum string

const (
	DeploymentmanagerDeploymentsInsertCreatePolicyEnumCreateOrAcquire DeploymentmanagerDeploymentsInsertCreatePolicyEnum = "CREATE_OR_ACQUIRE"
	DeploymentmanagerDeploymentsInsertCreatePolicyEnumAcquire         DeploymentmanagerDeploymentsInsertCreatePolicyEnum = "ACQUIRE"
	DeploymentmanagerDeploymentsInsertCreatePolicyEnumCreate          DeploymentmanagerDeploymentsInsertCreatePolicyEnum = "CREATE"
)

func (e *DeploymentmanagerDeploymentsInsertCreatePolicyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_OR_ACQUIRE":
		fallthrough
	case "ACQUIRE":
		fallthrough
	case "CREATE":
		*e = DeploymentmanagerDeploymentsInsertCreatePolicyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeploymentmanagerDeploymentsInsertCreatePolicyEnum: %s", s)
	}
}

type DeploymentmanagerDeploymentsInsertQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Sets the policy to use for creating new resources.
	CreatePolicy *DeploymentmanagerDeploymentsInsertCreatePolicyEnum `queryParam:"style=form,explode=true,name=createPolicy"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// If set to true, creates a deployment and creates "shell" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. After previewing a deployment, you can deploy your resources by making a request with the `update()` method or you can use the `cancelPreview()` method to cancel the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
	Preview *bool `queryParam:"style=form,explode=true,name=preview"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DeploymentmanagerDeploymentsInsertRequest struct {
	PathParams  DeploymentmanagerDeploymentsInsertPathParams
	QueryParams DeploymentmanagerDeploymentsInsertQueryParams
	Request     *shared.Deployment `request:"mediaType=application/json"`
	Security    DeploymentmanagerDeploymentsInsertSecurity
}

type DeploymentmanagerDeploymentsInsertResponse struct {
	ContentType string
	// Successful response
	Operation   *shared.Operation
	StatusCode  int
	RawResponse *http.Response
}
