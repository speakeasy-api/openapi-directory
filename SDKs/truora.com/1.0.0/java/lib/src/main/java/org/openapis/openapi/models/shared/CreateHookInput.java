/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * CreateHookInput - Creates a hook related to previous created check.
 */
public class CreateHookInput {
    /**
     * Actions you want to be notified. Possible inputs are created, started, and finished or any combination of those three
     */
    @SpeakeasyMetadata("form:name=actions")
    public String[] actions;

    public CreateHookInput withActions(String[] actions) {
        this.actions = actions;
        return this;
    }
    
    /**
     * The entity events the client wants to subscribe
     */
    @SpeakeasyMetadata("form:name=event_type")
    public CreateHookInputEventTypeEnum eventType;

    public CreateHookInput withEventType(CreateHookInputEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * indicates whether the hook is active or not. enabled by default
     */
    @SpeakeasyMetadata("form:name=status")
    public CreateHookInputStatusEnum status;

    public CreateHookInput withStatus(CreateHookInputStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Email address where the notification is to be sent. Required if subscriber_type was set to email
     */
    @SpeakeasyMetadata("form:name=subscriber_address")
    public String subscriberAddress;

    public CreateHookInput withSubscriberAddress(String subscriberAddress) {
        this.subscriberAddress = subscriberAddress;
        return this;
    }
    
    /**
     * Language for the notification to be sent
     */
    @SpeakeasyMetadata("form:name=subscriber_language")
    public CreateHookInputSubscriberLanguageEnum subscriberLanguage;

    public CreateHookInput withSubscriberLanguage(CreateHookInputSubscriberLanguageEnum subscriberLanguage) {
        this.subscriberLanguage = subscriberLanguage;
        return this;
    }
    
    /**
     * Name of the person to be notified
     */
    @SpeakeasyMetadata("form:name=subscriber_name")
    public String subscriberName;

    public CreateHookInput withSubscriberName(String subscriberName) {
        this.subscriberName = subscriberName;
        return this;
    }
    
    /**
     * A platform with an endpoint ready to process the information
     */
    @SpeakeasyMetadata("form:name=subscriber_type")
    public CreateHookInputSubscriberTypeEnum subscriberType;

    public CreateHookInput withSubscriberType(CreateHookInputSubscriberTypeEnum subscriberType) {
        this.subscriberType = subscriberType;
        return this;
    }
    
    /**
     * URL where the notification is to be sent. Required only if subscriber_type is set to web
     */
    @SpeakeasyMetadata("form:name=subscriber_url")
    public String subscriberUrl;

    public CreateHookInput withSubscriberUrl(String subscriberUrl) {
        this.subscriberUrl = subscriberUrl;
        return this;
    }
    
    public CreateHookInput(@JsonProperty("event_type") CreateHookInputEventTypeEnum eventType, @JsonProperty("subscriber_type") CreateHookInputSubscriberTypeEnum subscriberType) {
        this.eventType = eventType;
        this.subscriberType = subscriberType;
  }
}
