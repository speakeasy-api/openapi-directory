// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SavingsPlanRateFilterAttributeEnum string

const (
	SavingsPlanRateFilterAttributeEnumRegion             SavingsPlanRateFilterAttributeEnum = "region"
	SavingsPlanRateFilterAttributeEnumInstanceFamily     SavingsPlanRateFilterAttributeEnum = "instanceFamily"
	SavingsPlanRateFilterAttributeEnumInstanceType       SavingsPlanRateFilterAttributeEnum = "instanceType"
	SavingsPlanRateFilterAttributeEnumProductDescription SavingsPlanRateFilterAttributeEnum = "productDescription"
	SavingsPlanRateFilterAttributeEnumTenancy            SavingsPlanRateFilterAttributeEnum = "tenancy"
	SavingsPlanRateFilterAttributeEnumProductID          SavingsPlanRateFilterAttributeEnum = "productId"
)

func (e SavingsPlanRateFilterAttributeEnum) ToPointer() *SavingsPlanRateFilterAttributeEnum {
	return &e
}

func (e *SavingsPlanRateFilterAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "region":
		fallthrough
	case "instanceFamily":
		fallthrough
	case "instanceType":
		fallthrough
	case "productDescription":
		fallthrough
	case "tenancy":
		fallthrough
	case "productId":
		*e = SavingsPlanRateFilterAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SavingsPlanRateFilterAttributeEnum: %v", v)
	}
}
