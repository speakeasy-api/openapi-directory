"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class UserOrders:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def userorderdetails(self, request: operations.UserorderdetailsRequest) -> operations.UserorderdetailsResponse:
        r"""Retrieve user order details
        Lists all details from a user's order, through client's perspective. 
        
        > Note that these requests are meant to be made by **Call center operator** profiles. Otherwise, they will return only orders from the same email making the request.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.UserorderdetailsRequest, base_url, '/api/oms/user/orders/{orderId}', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.UserorderdetailsRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.UserorderdetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Userorderdetails])
                res.userorderdetails = out

        return res

    def userorderslist(self, request: operations.UserorderslistRequest) -> operations.UserorderslistResponse:
        r"""Retrieve user's orders
        Lists all orders from a given client, filtering by their email. 
        
        > Note that these requests are meant to be made by **Call center operator** profiles. Otherwise, they will return only orders from the same email making the request.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/api/oms/user/orders'
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.UserorderslistRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.UserorderslistResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Userorderslist])
                res.userorderslist = out

        return res

    