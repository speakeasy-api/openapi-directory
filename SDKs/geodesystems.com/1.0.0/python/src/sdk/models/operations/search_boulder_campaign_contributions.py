"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class SearchBoulderCampaignContributionsRequest:
    
    changedate_from: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'changedate.from', 'style': 'form', 'explode': True }})
    r"""Archive change date from"""  
    changedate_to: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'changedate.to', 'style': 'form', 'explode': True }})
    r"""Archive change date to"""  
    createdate_from: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdate.from', 'style': 'form', 'explode': True }})
    r"""Archive create date from"""  
    createdate_to: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdate.to', 'style': 'form', 'explode': True }})
    r"""Archive create date to"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'description', 'style': 'form', 'explode': True }})
    r"""Search description"""  
    filesuffix: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filesuffix', 'style': 'form', 'explode': True }})
    r"""File suffix"""  
    fromdate: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromdate', 'style': 'form', 'explode': True }})
    r"""From date"""  
    group: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'group', 'style': 'form', 'explode': True }})
    r"""Parent entry"""  
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': True }})
    r"""Max number of results"""  
    maxlatitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxlatitude', 'style': 'form', 'explode': True }})
    r"""Northern bounds of search"""  
    maxlongitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxlongitude', 'style': 'form', 'explode': True }})
    r"""Eastern bounds of search"""  
    minlatitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minlatitude', 'style': 'form', 'explode': True }})
    r"""Southern bounds of search"""  
    minlongitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minlongitude', 'style': 'form', 'explode': True }})
    r"""Western bounds of search"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""Search name"""  
    search_db_boulder_campaign_contributions_amended_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.amended_date', 'style': 'form', 'explode': True }})
    r"""Amended Date"""  
    search_db_boulder_campaign_contributions_anonymous: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.anonymous', 'style': 'form', 'explode': True }})
    r"""Anonymous"""  
    search_db_boulder_campaign_contributions_candidate: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.candidate', 'style': 'form', 'explode': True }})
    r"""Candidate"""  
    search_db_boulder_campaign_contributions_city: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.city', 'style': 'form', 'explode': True }})
    r"""City"""  
    search_db_boulder_campaign_contributions_committee: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.committee', 'style': 'form', 'explode': True }})
    r"""Committee"""  
    search_db_boulder_campaign_contributions_committee_num: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.committee_num', 'style': 'form', 'explode': True }})
    r"""Committee Num"""  
    search_db_boulder_campaign_contributions_contribution: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.contribution', 'style': 'form', 'explode': True }})
    r"""Contribution"""  
    search_db_boulder_campaign_contributions_contribution_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.contribution_type', 'style': 'form', 'explode': True }})
    r"""Contribution Type"""  
    search_db_boulder_campaign_contributions_filing_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.filing_date', 'style': 'form', 'explode': True }})
    r"""Filing Date"""  
    search_db_boulder_campaign_contributions_first_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.first_name', 'style': 'form', 'explode': True }})
    r"""First Name"""  
    search_db_boulder_campaign_contributions_from_candidate: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.from_candidate', 'style': 'form', 'explode': True }})
    r"""From Candidate"""  
    search_db_boulder_campaign_contributions_last_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.last_name', 'style': 'form', 'explode': True }})
    r"""Last Name"""  
    search_db_boulder_campaign_contributions_match: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.match', 'style': 'form', 'explode': True }})
    r"""Match"""  
    search_db_boulder_campaign_contributions_official_filing: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.official_filing', 'style': 'form', 'explode': True }})
    r"""Official Filing"""  
    search_db_boulder_campaign_contributions_state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.state', 'style': 'form', 'explode': True }})
    r"""State"""  
    search_db_boulder_campaign_contributions_street: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.street', 'style': 'form', 'explode': True }})
    r"""Street"""  
    search_db_boulder_campaign_contributions_transaction_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.transaction_date', 'style': 'form', 'explode': True }})
    r"""Transaction Date"""  
    search_db_boulder_campaign_contributions_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.type', 'style': 'form', 'explode': True }})
    r"""Type"""  
    search_db_boulder_campaign_contributions_zip: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_boulder_campaign_contributions.zip', 'style': 'form', 'explode': True }})
    r"""Zip"""  
    skip: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'skip', 'style': 'form', 'explode': True }})
    r"""Number to skip"""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'text', 'style': 'form', 'explode': True }})
    r"""Search text"""  
    todate: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'todate', 'style': 'form', 'explode': True }})
    r"""To date"""  
    

@dataclasses.dataclass
class SearchBoulderCampaignContributionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    