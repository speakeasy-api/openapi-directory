/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateSimulationJobRequestBody {
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientRequestToken")
    public String clientRequestToken;

    public CreateSimulationJobRequestBody withClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
        return this;
    }
    
    /**
     * Compute information for the simulation job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compute")
    public CreateSimulationJobRequestBodyCompute compute;

    public CreateSimulationJobRequestBody withCompute(CreateSimulationJobRequestBodyCompute compute) {
        this.compute = compute;
        return this;
    }
    
    /**
     * &lt;p&gt;Specify data sources to mount read-only files from S3 into your simulation. These files are available under &lt;code&gt;/opt/robomaker/datasources/data_source_name&lt;/code&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt;There is a limit of 100 files and a combined size of 25GB for all &lt;code&gt;DataSourceConfig&lt;/code&gt; objects. &lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataSources")
    public org.openapis.openapi.models.shared.DataSourceConfig[] dataSources;

    public CreateSimulationJobRequestBody withDataSources(org.openapis.openapi.models.shared.DataSourceConfig[] dataSources) {
        this.dataSources = dataSources;
        return this;
    }
    
    /**
     * &lt;p&gt;The failure behavior the simulation job.&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;Continue&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Leaves the instance running for its maximum timeout duration after a &lt;code&gt;4XX&lt;/code&gt; error code.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;Fail&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Stop the simulation job and terminate the instance.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureBehavior")
    public CreateSimulationJobRequestBodyFailureBehaviorEnum failureBehavior;

    public CreateSimulationJobRequestBody withFailureBehavior(CreateSimulationJobRequestBodyFailureBehaviorEnum failureBehavior) {
        this.failureBehavior = failureBehavior;
        return this;
    }
    
    /**
     * The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. 
     */
    @JsonProperty("iamRole")
    public String iamRole;

    public CreateSimulationJobRequestBody withIamRole(String iamRole) {
        this.iamRole = iamRole;
        return this;
    }
    
    /**
     * The logging configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfig")
    public CreateSimulationJobRequestBodyLoggingConfig loggingConfig;

    public CreateSimulationJobRequestBody withLoggingConfig(CreateSimulationJobRequestBodyLoggingConfig loggingConfig) {
        this.loggingConfig = loggingConfig;
        return this;
    }
    
    /**
     * The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When &lt;code&gt;maxJobDurationInSeconds&lt;/code&gt; is reached, the simulation job will status will transition to &lt;code&gt;Completed&lt;/code&gt;.
     */
    @JsonProperty("maxJobDurationInSeconds")
    public Long maxJobDurationInSeconds;

    public CreateSimulationJobRequestBody withMaxJobDurationInSeconds(Long maxJobDurationInSeconds) {
        this.maxJobDurationInSeconds = maxJobDurationInSeconds;
        return this;
    }
    
    /**
     * The output location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputLocation")
    public CreateSimulationJobRequestBodyOutputLocation outputLocation;

    public CreateSimulationJobRequestBody withOutputLocation(CreateSimulationJobRequestBodyOutputLocation outputLocation) {
        this.outputLocation = outputLocation;
        return this;
    }
    
    /**
     * The robot application to use in the simulation job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("robotApplications")
    public org.openapis.openapi.models.shared.RobotApplicationConfig[] robotApplications;

    public CreateSimulationJobRequestBody withRobotApplications(org.openapis.openapi.models.shared.RobotApplicationConfig[] robotApplications) {
        this.robotApplications = robotApplications;
        return this;
    }
    
    /**
     * The simulation application to use in the simulation job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("simulationApplications")
    public org.openapis.openapi.models.shared.SimulationApplicationConfig[] simulationApplications;

    public CreateSimulationJobRequestBody withSimulationApplications(org.openapis.openapi.models.shared.SimulationApplicationConfig[] simulationApplications) {
        this.simulationApplications = simulationApplications;
        return this;
    }
    
    /**
     * A map that contains tag keys and tag values that are attached to the simulation job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateSimulationJobRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcConfig")
    public CreateSimulationJobRequestBodyVpcConfig vpcConfig;

    public CreateSimulationJobRequestBody withVpcConfig(CreateSimulationJobRequestBodyVpcConfig vpcConfig) {
        this.vpcConfig = vpcConfig;
        return this;
    }
    
    public CreateSimulationJobRequestBody(@JsonProperty("iamRole") String iamRole, @JsonProperty("maxJobDurationInSeconds") Long maxJobDurationInSeconds) {
        this.iamRole = iamRole;
        this.maxJobDurationInSeconds = maxJobDurationInSeconds;
  }
}
