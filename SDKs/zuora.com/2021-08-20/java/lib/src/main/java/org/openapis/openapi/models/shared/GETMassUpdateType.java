/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GETMassUpdateType {
    /**
     * Type of mass action.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionType")
    public String actionType;
    public GETMassUpdateType withActionType(String actionType) {
        this.actionType = actionType;
        return this;
    }
    
    /**
     * Date and time that the mass action was completed. The format is `yyyy-MM-dd hh:mm:ss`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endedOn")
    public OffsetDateTime endedOn;
    public GETMassUpdateType withEndedOn(OffsetDateTime endedOn) {
        this.endedOn = endedOn;
        return this;
    }
    
    /**
     * Total number of failed records.
     * 
     * This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have failed so far. When the mass action **status** is Pending, this field is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCount")
    public String errorCount;
    public GETMassUpdateType withErrorCount(String errorCount) {
        this.errorCount = errorCount;
        return this;
    }
    
    /**
     * Size of the input file in bytes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputSize")
    public Long inputSize;
    public GETMassUpdateType withInputSize(Long inputSize) {
        this.inputSize = inputSize;
        return this;
    }
    
    /**
     * Size of the response file in bytes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputSize")
    public Long outputSize;
    public GETMassUpdateType withOutputSize(Long outputSize) {
        this.outputSize = outputSize;
        return this;
    }
    
    /**
     * Type of output for the response file. The following table describes the output type.
     * 
     * | Output Type    | Description                         |
     * |----------------|-------------------------------------|
     * | (url:.csv.zip) | URL pointing to a zipped .csv file. |
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputType")
    public String outputType;
    public GETMassUpdateType withOutputType(String outputType) {
        this.outputType = outputType;
        return this;
    }
    
    /**
     * URL to download the response file. The response file is a zipped .csv file. 
     * The response file is identical to the file you uploaded to perform the mass action, with additional columns providing information about the outcome of each record. 
     * This field only returns a value when the mass action **status** is Completed or Stopped. Otherwise, this field is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputURL")
    public String outputURL;
    public GETMassUpdateType withOutputURL(String outputURL) {
        this.outputURL = outputURL;
        return this;
    }
    
    /**
     * Total number of processed records. This field is equal to the sum of `errorCount` and `successCount`.
     * 
     * This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have been processed so far. When the mass action **status** is Pending, this field is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processedCount")
    public String processedCount;
    public GETMassUpdateType withProcessedCount(String processedCount) {
        this.processedCount = processedCount;
        return this;
    }
    
    /**
     * Date and time that Zuora started processing the mass action. The format is `yyyy-MM-dd hh:mm:ss`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startedOn")
    public OffsetDateTime startedOn;
    public GETMassUpdateType withStartedOn(OffsetDateTime startedOn) {
        this.startedOn = startedOn;
        return this;
    }
    
    /**
     * Status of the mass action. The following table describes the mass action statuses.
     * 
     * | Status     | Description                                                                |
     * |------------|----------------------------------------------------------------------------|
     * | Pending    | Mass action has not yet started being processed.                           |
     * | Processing | Mass action is in progress.                                                |
     * | Stopping   | Mass action is in the process of stopping, but has not yet stopped.        |
     * | Stopped    | Mass action has stopped.                                                   |
     * | Completed  | Mass action was successfully completed. There may still be failed records. |
     * | Failed     | Mass action failed. No records are processed. No response file is created. |
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public GETMassUpdateType withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETMassUpdateType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Total number of successful records.
     * This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have succeeded so far. When the mass action **status** is Pending, this field is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("successCount")
    public String successCount;
    public GETMassUpdateType withSuccessCount(String successCount) {
        this.successCount = successCount;
        return this;
    }
    
    /**
     * Total number of records in the uploaded mass action file.
     * When the mass action **status** is Pending, this field is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCount")
    public String totalCount;
    public GETMassUpdateType withTotalCount(String totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
    /**
     * Email of the person who uploaded the mass action file.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploadedBy")
    public String uploadedBy;
    public GETMassUpdateType withUploadedBy(String uploadedBy) {
        this.uploadedBy = uploadedBy;
        return this;
    }
    
    /**
     * Date and time that the mass action file was uploaded. The format is `yyyy-MM-dd hh:mm:ss`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("uploadedOn")
    public OffsetDateTime uploadedOn;
    public GETMassUpdateType withUploadedOn(OffsetDateTime uploadedOn) {
        this.uploadedOn = uploadedOn;
        return this;
    }
    
}
