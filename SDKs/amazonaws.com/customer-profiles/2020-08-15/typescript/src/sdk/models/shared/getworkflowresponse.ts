/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatusEnum } from "./statusenum";
import { WorkflowAttributes } from "./workflowattributes";
import { WorkflowMetrics } from "./workflowmetrics";
import { WorkflowTypeEnum } from "./workflowtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetWorkflowResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Attributes" })
  @Type(() => WorkflowAttributes)
  attributes?: WorkflowAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorDescription" })
  errorDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Metrics" })
  @Type(() => WorkflowMetrics)
  metrics?: WorkflowMetrics;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowId" })
  workflowId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowType" })
  workflowType?: WorkflowTypeEnum;
}
