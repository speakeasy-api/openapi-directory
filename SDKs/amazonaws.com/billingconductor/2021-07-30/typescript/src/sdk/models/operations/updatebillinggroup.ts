/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.
 */
export class UpdateBillingGroupRequestBodyComputationPreference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "PricingPlanArn" })
  pricingPlanArn?: string;
}

/**
 * The status of the billing group. Only one of the valid values can be used.
 */
export enum UpdateBillingGroupRequestBodyStatusEnum {
  Active = "ACTIVE",
  PrimaryAccountMissing = "PRIMARY_ACCOUNT_MISSING",
}

export class UpdateBillingGroupRequestBody extends SpeakeasyBase {
  /**
   * The Amazon Resource Name (ARN) of the billing group being updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn: string;

  /**
   *  The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ComputationPreference" })
  @Type(() => UpdateBillingGroupRequestBodyComputationPreference)
  computationPreference?: UpdateBillingGroupRequestBodyComputationPreference;

  /**
   * A description of the billing group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * The name of the billing group. The names must be unique to each billing group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The status of the billing group. Only one of the valid values can be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: UpdateBillingGroupRequestBodyStatusEnum;
}

export class UpdateBillingGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateBillingGroupRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateBillingGroupResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateBillingGroupOutput?: shared.UpdateBillingGroupOutput;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
