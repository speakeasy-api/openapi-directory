// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeviceEnum - Type of device emulation.
type DeviceEnum string

const (
	DeviceEnumDesktop DeviceEnum = "desktop"
	DeviceEnumMobile  DeviceEnum = "mobile"
	DeviceEnumTablet  DeviceEnum = "tablet"
)

func (e DeviceEnum) ToPointer() *DeviceEnum {
	return &e
}

func (e *DeviceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "desktop":
		fallthrough
	case "mobile":
		fallthrough
	case "tablet":
		*e = DeviceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceEnum: %v", v)
	}
}
