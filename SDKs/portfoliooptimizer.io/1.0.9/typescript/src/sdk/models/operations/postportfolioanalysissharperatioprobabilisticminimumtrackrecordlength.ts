/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody2Portfolios extends SpeakeasyBase {
  /**
   * portfolioValues[t] is the value of the portfolio at the time t
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioValues" })
  portfolioValues: number[];
}

export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody2 extends SpeakeasyBase {
  /**
   * benchmarkValues[t] is the value of the benchmark at the time t; the benchmarkValues array must have the same length as all the portfolioValues arrays
   */
  @SpeakeasyMetadata()
  @Expose({ name: "benchmarkValues" })
  benchmarkValues?: number[];

  /**
   * The confidence level of the minimum track record length, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidenceLevel" })
  confidenceLevel?: number;

  @SpeakeasyMetadata({
    elemType:
      PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody2Portfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(
    () =>
      PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody2Portfolios
  )
  portfolios: PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody2Portfolios[];

  /**
   * The risk free rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "riskFreeRate" })
  riskFreeRate: number;
}

export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1Portfolios extends SpeakeasyBase {
  /**
   * portfolioValues[t] is the value of the portfolio at the time t
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioValues" })
  portfolioValues: number[];
}

export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1 extends SpeakeasyBase {
  /**
   * The Sharpe ratio of the benchmark, in the same sampling frequency as the sampling frequency of the portfolio values
   */
  @SpeakeasyMetadata()
  @Expose({ name: "benchmarkSharpeRatio" })
  benchmarkSharpeRatio: number;

  /**
   * The confidence level of the minimum track record length, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidenceLevel" })
  confidenceLevel?: number;

  @SpeakeasyMetadata({
    elemType:
      PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1Portfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(
    () =>
      PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1Portfolios
  )
  portfolios: PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1Portfolios[];

  /**
   * The risk free rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "riskFreeRate" })
  riskFreeRate: number;
}

export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONPortfolios extends SpeakeasyBase {
  /**
   * The minimum track record length of the portfolio, in number of required arithmetic returns, possibly equal to null in case the minimum track record length does not exist
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioSharpeRatioMinimumTrackRecordLength" })
  portfolioSharpeRatioMinimumTrackRecordLength: number;
}

/**
 * OK
 */
export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(
    () =>
      PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONPortfolios
  )
  portfolios: PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONPortfolios[];
}

export class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONObject?: PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSON;
}
