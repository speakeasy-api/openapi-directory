/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateSubscriptionForEvergreenTerms - Container for the terms and renewal settings of the subscription.
 * 
 */
public class CreateSubscriptionForEvergreenTerms {
    /**
     * Specifies whether the subscription automatically renews at the end of the each term. Only applicable if the type of the first term is `TERMED`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRenew")
    public Boolean autoRenew;
    public CreateSubscriptionForEvergreenTerms withAutoRenew(Boolean autoRenew) {
        this.autoRenew = autoRenew;
        return this;
    }
    
    /**
     * Information about the first term of the subscription.
     * 
     */
    @JsonProperty("initialTerm")
    public CreateSubscriptionForEvergreenTermsInitialTerm initialTerm;
    public CreateSubscriptionForEvergreenTerms withInitialTerm(CreateSubscriptionForEvergreenTermsInitialTerm initialTerm) {
        this.initialTerm = initialTerm;
        return this;
    }
    
    /**
     * Specifies the type of the terms that follow the first term if the subscription is renewed. Only applicable if the type of the first term is `TERMED`.
     * 
     * * `RENEW_WITH_SPECIFIC_TERM` - Each renewal term has a predefined duration. The first entry in `renewalTerms` specifies the duration of the second term of the subscription, the second entry in `renewalTerms` specifies the duration of the third term of the subscription, and so on. The last entry in `renewalTerms` specifies the ultimate duration of each renewal term.
     * * `RENEW_TO_EVERGREEN` - The second term of the subscription does not have a predefined duration.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewalSetting")
    public CreateSubscriptionForEvergreenTermsRenewalSettingEnum renewalSetting;
    public CreateSubscriptionForEvergreenTerms withRenewalSetting(CreateSubscriptionForEvergreenTermsRenewalSettingEnum renewalSetting) {
        this.renewalSetting = renewalSetting;
        return this;
    }
    
    /**
     * List of renewal terms of the subscription. Only applicable if the type of the first term is `TERMED` and the value of the `renewalSetting` field is `RENEW_WITH_SPECIFIC_TERM`.
     * 
     */
    @JsonProperty("renewalTerms")
    public RenewalTerm[] renewalTerms;
    public CreateSubscriptionForEvergreenTerms withRenewalTerms(RenewalTerm[] renewalTerms) {
        this.renewalTerms = renewalTerms;
        return this;
    }
    
}
