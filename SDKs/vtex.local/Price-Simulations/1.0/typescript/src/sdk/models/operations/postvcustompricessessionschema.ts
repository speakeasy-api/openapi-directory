/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostVCustomPricesSessionSchemaRequestBodyFields extends SpeakeasyBase {
  /**
   * Criteria name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Criteria type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * OK
 */
export class PostVCustomPricesSessionSchemaRequestBody extends SpeakeasyBase {
  /**
   * Order Configuration criteria
   */
  @SpeakeasyMetadata({
    elemType: PostVCustomPricesSessionSchemaRequestBodyFields,
  })
  @Expose({ name: "fields" })
  @Type(() => PostVCustomPricesSessionSchemaRequestBodyFields)
  fields: PostVCustomPricesSessionSchemaRequestBodyFields[];

  /**
   * If the custom price should use the user's e-mail to validate it
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useEmail" })
  useEmail?: boolean;
}

export class PostVCustomPricesSessionSchemaRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostVCustomPricesSessionSchemaRequestBody;
}

export class PostVCustomPricesSessionSchemaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  requestBody?: PostVCustomPricesSessionSchemaRequestBody;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
