<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1CpuStatusReport - Provides information about the status of the CPU. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Every 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_CPU_REPORT
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1CpuStatusReport
{
    /**
     * Output only. CPU temperature sample info per CPU core in Celsius
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1CpuTemperatureInfo> $cpuTemperatureInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuTemperatureInfo')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1CpuTemperatureInfo>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $cpuTemperatureInfo = null;
    
    /**
     * Output only. Sample of CPU utilization (0-100 percent).
     * 
     * @var ?int $cpuUtilizationPct
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuUtilizationPct')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuUtilizationPct = null;
    
    /**
     * Output only. The timestamp in milliseconds representing time at which this report was sampled.
     * 
     * @var ?string $reportTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportTime = null;
    
    /**
     * Output only. Frequency the report is sampled.
     * 
     * @var ?string $sampleFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('sampleFrequency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sampleFrequency = null;
    
	public function __construct()
	{
		$this->cpuTemperatureInfo = null;
		$this->cpuUtilizationPct = null;
		$this->reportTime = null;
		$this->sampleFrequency = null;
	}
}
