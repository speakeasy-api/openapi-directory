/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ConsentArtifactSchemaConsent {
    /**
     * A unique consent id in UUID format.
     */
    @JsonProperty("consentId")
    public String consentId;
    public ConsentArtifactSchemaConsent withConsentId(String consentId) {
        this.consentId = consentId;
        return this;
    }
    
    @JsonProperty("data")
    public ConsentArtifactSchemaConsentData data;
    public ConsentArtifactSchemaConsent withData(ConsentArtifactSchemaConsentData data) {
        this.data = data;
        return this;
    }
    
    @JsonProperty("dataConsumer")
    public ConsentArtifactSchemaConsentDataConsumer dataConsumer;
    public ConsentArtifactSchemaConsent withDataConsumer(ConsentArtifactSchemaConsentDataConsumer dataConsumer) {
        this.dataConsumer = dataConsumer;
        return this;
    }
    
    @JsonProperty("dataProvider")
    public ConsentArtifactSchemaConsentDataProvider dataProvider;
    public ConsentArtifactSchemaConsent withDataProvider(ConsentArtifactSchemaConsentDataProvider dataProvider) {
        this.dataProvider = dataProvider;
        return this;
    }
    
    @JsonProperty("permission")
    public ConsentArtifactSchemaConsentPermission permission;
    public ConsentArtifactSchemaConsent withPermission(ConsentArtifactSchemaConsentPermission permission) {
        this.permission = permission;
        return this;
    }
    
    @JsonProperty("purpose")
    public ConsentArtifactSchemaConsentPurpose purpose;
    public ConsentArtifactSchemaConsent withPurpose(ConsentArtifactSchemaConsentPurpose purpose) {
        this.purpose = purpose;
        return this;
    }
    
    /**
     * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;
    public ConsentArtifactSchemaConsent withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonProperty("user")
    public ConsentArtifactSchemaConsentUser user;
    public ConsentArtifactSchemaConsent withUser(ConsentArtifactSchemaConsentUser user) {
        this.user = user;
        return this;
    }
    
}
