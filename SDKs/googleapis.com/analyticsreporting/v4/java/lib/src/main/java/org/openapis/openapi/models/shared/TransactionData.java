/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransactionData - Represents details collected when the visitor performs a transaction on the page.
 */
public class TransactionData {
    /**
     * The transaction ID, supplied by the e-commerce tracking method, for the purchase in the shopping cart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionId")
    public String transactionId;
    public TransactionData withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * The total sale revenue (excluding shipping and tax) of the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionRevenue")
    public Double transactionRevenue;
    public TransactionData withTransactionRevenue(Double transactionRevenue) {
        this.transactionRevenue = transactionRevenue;
        return this;
    }
    
    /**
     * Total cost of shipping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionShipping")
    public Double transactionShipping;
    public TransactionData withTransactionShipping(Double transactionShipping) {
        this.transactionShipping = transactionShipping;
        return this;
    }
    
    /**
     * Total tax for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionTax")
    public Double transactionTax;
    public TransactionData withTransactionTax(Double transactionTax) {
        this.transactionTax = transactionTax;
        return this;
    }
    
}
