<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class MigrationsStartForOrgRequestBody
{
    /**
     * Exclude related items from being returned in the response in order to improve performance of the request. The array can include any of: `"repositories"`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\MigrationsStartForOrgRequestBodyExcludeEnum> $exclude
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\MigrationsStartForOrgRequestBodyExcludeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exclude = null;
    
    /**
     * Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).
     * 
     * @var ?bool $excludeAttachments
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude_attachments')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $excludeAttachments = null;
    
    /**
     * Indicates whether the repository git data should be excluded from the migration.
     * 
     * @var ?bool $excludeGitData
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude_git_data')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $excludeGitData = null;
    
    /**
     * Indicates whether metadata should be excluded and only git source should be included for the migration.
     * 
     * @var ?bool $excludeMetadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude_metadata')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $excludeMetadata = null;
    
    /**
     * Indicates whether projects owned by the organization or users should be excluded. from the migration.
     * 
     * @var ?bool $excludeOwnerProjects
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude_owner_projects')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $excludeOwnerProjects = null;
    
    /**
     * Indicates whether releases should be excluded from the migration (to reduce migration archive file size).
     * 
     * @var ?bool $excludeReleases
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude_releases')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $excludeReleases = null;
    
    /**
     * Indicates whether repositories should be locked (to prevent manipulation) while migrating data.
     * 
     * @var ?bool $lockRepositories
     */
	#[\JMS\Serializer\Annotation\SerializedName('lock_repositories')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $lockRepositories = null;
    
    /**
     * Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
     * 
     * @var ?bool $orgMetadataOnly
     */
	#[\JMS\Serializer\Annotation\SerializedName('org_metadata_only')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $orgMetadataOnly = null;
    
    /**
     * A list of arrays indicating which repositories should be migrated.
     * 
     * @var array<string> $repositories
     */
	#[\JMS\Serializer\Annotation\SerializedName('repositories')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $repositories;
    
	public function __construct()
	{
		$this->exclude = null;
		$this->excludeAttachments = null;
		$this->excludeGitData = null;
		$this->excludeMetadata = null;
		$this->excludeOwnerProjects = null;
		$this->excludeReleases = null;
		$this->lockRepositories = null;
		$this->orgMetadataOnly = null;
		$this->repositories = [];
	}
}
