/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateSettingInitialValues {
    /**
     * A short description for the setting, shown on the Dashboard UI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hint")
    public String hint;

    public CreateSettingInitialValues withHint(String hint) {
        this.hint = hint;
        return this;
    }
    
    /**
     * Optional, initial values of the feature flag or setting in the given Environments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialValues")
    public InitialValue[] initialValues;

    public CreateSettingInitialValues withInitialValues(InitialValue[] initialValues) {
        this.initialValues = initialValues;
        return this;
    }
    
    /**
     * The key of the setting.
     */
    @JsonProperty("key")
    public String key;

    public CreateSettingInitialValues withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The name of the setting, shown on the Dashboard UI.
     */
    @JsonProperty("name")
    public String name;

    public CreateSettingInitialValues withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("settingType")
    public SettingTypeEnum settingType;

    public CreateSettingInitialValues withSettingType(SettingTypeEnum settingType) {
        this.settingType = settingType;
        return this;
    }
    
    /**
     * The IDs of the tags which are attached to the setting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public Long[] tags;

    public CreateSettingInitialValues withTags(Long[] tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateSettingInitialValues(@JsonProperty("key") String key, @JsonProperty("name") String name, @JsonProperty("settingType") SettingTypeEnum settingType) {
        this.key = key;
        this.name = name;
        this.settingType = settingType;
  }
}
