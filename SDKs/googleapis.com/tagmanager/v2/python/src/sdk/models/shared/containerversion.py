"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import builtinvariable as shared_builtinvariable
from ..shared import client as shared_client
from ..shared import container as shared_container
from ..shared import customtemplate as shared_customtemplate
from ..shared import folder as shared_folder
from ..shared import gtagconfig as shared_gtagconfig
from ..shared import tag as shared_tag
from ..shared import trigger as shared_trigger
from ..shared import variable as shared_variable
from ..shared import zone as shared_zone
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContainerVersion:
    r"""Represents a Google Tag Manager Container Version."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""GTM Account ID."""  
    built_in_variable: Optional[list[shared_builtinvariable.BuiltInVariable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('builtInVariable'), 'exclude': lambda f: f is None }})
    r"""The built-in variables in the container that this version was taken from."""  
    client: Optional[list[shared_client.Client]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client'), 'exclude': lambda f: f is None }})
    r"""The clients in the container that this version was taken from."""  
    container: Optional[shared_container.Container] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('container'), 'exclude': lambda f: f is None }})
    r"""Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions."""  
    container_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerId'), 'exclude': lambda f: f is None }})
    r"""GTM Container ID."""  
    container_version_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerVersionId'), 'exclude': lambda f: f is None }})
    r"""The Container Version ID uniquely identifies the GTM Container Version."""  
    custom_template: Optional[list[shared_customtemplate.CustomTemplate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customTemplate'), 'exclude': lambda f: f is None }})
    r"""The custom templates in the container that this version was taken from."""  
    deleted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleted'), 'exclude': lambda f: f is None }})
    r"""A value of true indicates this container version has been deleted."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Container version description. @mutable tagmanager.accounts.containers.versions.update"""  
    fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified."""  
    folder: Optional[list[shared_folder.Folder]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('folder'), 'exclude': lambda f: f is None }})
    r"""The folders in the container that this version was taken from."""  
    gtag_config: Optional[list[shared_gtagconfig.GtagConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gtagConfig'), 'exclude': lambda f: f is None }})
    r"""The Google tag configs in the container that this version was taken from."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Container version display name. @mutable tagmanager.accounts.containers.versions.update"""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""GTM Container Version's API relative path."""  
    tag: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag'), 'exclude': lambda f: f is None }})
    r"""The tags in the container that this version was taken from."""  
    tag_manager_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagManagerUrl'), 'exclude': lambda f: f is None }})
    r"""Auto generated link to the tag manager UI"""  
    trigger: Optional[list[shared_trigger.Trigger]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trigger'), 'exclude': lambda f: f is None }})
    r"""The triggers in the container that this version was taken from."""  
    variable: Optional[list[shared_variable.Variable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variable'), 'exclude': lambda f: f is None }})
    r"""The variables in the container that this version was taken from."""  
    zone: Optional[list[shared_zone.Zone]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zone'), 'exclude': lambda f: f is None }})
    r"""The zones in the container that this version was taken from."""  
    