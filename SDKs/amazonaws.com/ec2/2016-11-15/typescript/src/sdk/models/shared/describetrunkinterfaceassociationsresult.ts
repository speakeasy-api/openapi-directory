/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>.
 */
export enum DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsInterfaceProtocolEnum {
  Vlan = "VLAN",
  Gre = "GRE",
}

/**
 * Describes a tag.
 */
export class DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * <note> <p>Currently available in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Information about an association between a branch network interface with a trunk network interface.</p>
 */
export class DescribeTrunkInterfaceAssociationsResultInterfaceAssociations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  associationId?: string;

  @SpeakeasyMetadata()
  branchInterfaceId?: string;

  @SpeakeasyMetadata()
  greKey?: number;

  @SpeakeasyMetadata()
  interfaceProtocol?: DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsInterfaceProtocolEnum;

  @SpeakeasyMetadata({
    elemType: DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsTags,
  })
  tags?: DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsTags[];

  @SpeakeasyMetadata()
  trunkInterfaceId?: string;

  @SpeakeasyMetadata()
  vlanId?: number;
}

/**
 * Success
 */
export class DescribeTrunkInterfaceAssociationsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeTrunkInterfaceAssociationsResultInterfaceAssociations,
  })
  interfaceAssociations?: DescribeTrunkInterfaceAssociationsResultInterfaceAssociations[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
