"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlefirestoreadminv1beta1indexfield as shared_googlefirestoreadminv1beta1indexfield
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleFirestoreAdminV1beta1IndexStateEnum(str, Enum):
    r"""The state of the index. Output only."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    CREATING = 'CREATING'
    READY = 'READY'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirestoreAdminV1beta1Index:
    r"""An index definition."""
    
    collection_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collectionId'), 'exclude': lambda f: f is None }})
    r"""The collection ID to which this index applies. Required."""  
    fields_: Optional[list[shared_googlefirestoreadminv1beta1indexfield.GoogleFirestoreAdminV1beta1IndexField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields to index."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the index. Output only."""  
    state: Optional[GoogleFirestoreAdminV1beta1IndexStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The state of the index. Output only."""  
    