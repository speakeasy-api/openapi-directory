/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstanceInput - A Filestore instance.
 */
public class InstanceInput {
    /**
     * The description of the instance (2048 characters or less).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public InstanceInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public InstanceInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * File system shares on the instance. For this version, only a single file share is supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileShares")
    public FileShareConfig[] fileShares;

    public InstanceInput withFileShares(FileShareConfig[] fileShares) {
        this.fileShares = fileShares;
        return this;
    }
    
    /**
     * KMS key name used for data encryption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyName")
    public String kmsKeyName;

    public InstanceInput withKmsKeyName(String kmsKeyName) {
        this.kmsKeyName = kmsKeyName;
        return this;
    }
    
    /**
     * Resource labels to represent user provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public InstanceInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * VPC networks to which the instance is connected. For this version, only a single network is supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networks")
    public NetworkConfigInput[] networks;

    public InstanceInput withNetworks(NetworkConfigInput[] networks) {
        this.networks = networks;
        return this;
    }
    
    /**
     * The service tier of the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tier")
    public InstanceTierEnum tier;

    public InstanceInput withTier(InstanceTierEnum tier) {
        this.tier = tier;
        return this;
    }
    
    public InstanceInput(){}
}
