"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import principal as shared_principal
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UnmappedIdentityResolutionStatusCodeEnum(str, Enum):
    r"""The resolution status for the external identity."""
    CODE_UNSPECIFIED = 'CODE_UNSPECIFIED'
    NOT_FOUND = 'NOT_FOUND'
    IDENTITY_SOURCE_NOT_FOUND = 'IDENTITY_SOURCE_NOT_FOUND'
    IDENTITY_SOURCE_MISCONFIGURED = 'IDENTITY_SOURCE_MISCONFIGURED'
    TOO_MANY_MAPPINGS_FOUND = 'TOO_MANY_MAPPINGS_FOUND'
    INTERNAL_ERROR = 'INTERNAL_ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UnmappedIdentity:
    
    external_identity: Optional[shared_principal.Principal] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalIdentity'), 'exclude': lambda f: f is None }})
    r"""Reference to a user, group, or domain."""  
    resolution_status_code: Optional[UnmappedIdentityResolutionStatusCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolutionStatusCode'), 'exclude': lambda f: f is None }})
    r"""The resolution status for the external identity."""  
    