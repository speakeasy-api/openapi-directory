/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BareMetalNodePoolInput - Resource that represents a bare metal node pool.
 */
public class BareMetalNodePoolInput {
    /**
     * Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public BareMetalNodePoolInput withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * The display name for the bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public BareMetalNodePoolInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public BareMetalNodePoolInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Immutable. The bare metal node pool resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public BareMetalNodePoolInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodePoolConfig")
    public BareMetalNodePoolConfig nodePoolConfig;

    public BareMetalNodePoolInput withNodePoolConfig(BareMetalNodePoolConfig nodePoolConfig) {
        this.nodePoolConfig = nodePoolConfig;
        return this;
    }
    
    /**
     * ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ResourceStatus status;

    public BareMetalNodePoolInput withStatus(ResourceStatus status) {
        this.status = status;
        return this;
    }
    
    public BareMetalNodePoolInput(){}
}
