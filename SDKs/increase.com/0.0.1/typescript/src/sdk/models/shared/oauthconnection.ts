/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Whether the connection is active.
 */
export enum OauthConnectionStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * A constant representing the object's type. For this resource it will always be `oauth_connection`.
 */
export enum OauthConnectionTypeEnum {
  OauthConnection = "oauth_connection",
}

/**
 * When a user authorizes your OAuth application, an OAuth Connection object is created.
 */
export class OauthConnection extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp when the OAuth Connection was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The identifier of the Group that has authorized your OAuth application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: string;

  /**
   * The OAuth Connection's identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Whether the connection is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: OauthConnectionStatusEnum;

  /**
   * A constant representing the object's type. For this resource it will always be `oauth_connection`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: OauthConnectionTypeEnum;
}
