/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TimePeriodCompact - A generic Asana Resource, containing a globally unique identifier.
 */
public class TimePeriodCompact {
    /**
     * A string representing the cadence code and the fiscal year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;
    public TimePeriodCompact withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The localized end date of the time period in `YYYY-MM-DD` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_on")
    public String endOn;
    public TimePeriodCompact withEndOn(String endOn) {
        this.endOn = endOn;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;
    public TimePeriodCompact withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period")
    public TimePeriodCompactPeriodEnum period;
    public TimePeriodCompact withPeriod(TimePeriodCompactPeriodEnum period) {
        this.period = period;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;
    public TimePeriodCompact withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The localized start date of the time period in `YYYY-MM-DD` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_on")
    public String startOn;
    public TimePeriodCompact withStartOn(String startOn) {
        this.startOn = startOn;
        return this;
    }
    
}
