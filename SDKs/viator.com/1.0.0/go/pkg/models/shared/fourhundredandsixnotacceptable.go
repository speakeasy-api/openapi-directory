// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FourHundredAndSixNOTACCEPTABLECodeEnum string

const (
	FourHundredAndSixNOTACCEPTABLECodeEnumInvalidHeaderValue FourHundredAndSixNOTACCEPTABLECodeEnum = "INVALID_HEADER_VALUE"
)

func (e FourHundredAndSixNOTACCEPTABLECodeEnum) ToPointer() *FourHundredAndSixNOTACCEPTABLECodeEnum {
	return &e
}

func (e *FourHundredAndSixNOTACCEPTABLECodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVALID_HEADER_VALUE":
		*e = FourHundredAndSixNOTACCEPTABLECodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FourHundredAndSixNOTACCEPTABLECodeEnum: %v", v)
	}
}

// FourHundredAndSixNOTACCEPTABLE - Not Acceptable
type FourHundredAndSixNOTACCEPTABLE struct {
	Code *FourHundredAndSixNOTACCEPTABLECodeEnum `json:"code,omitempty"`
	// Describes which in-header parameter was not acceptable to this system; e.g., 'Invalid value for header: exp-api-key'
	Message *string `json:"message,omitempty"`
	// Timestamp of the request
	//
	//   * e.g.: `2019-09-17T03:20:45.737043Z`
	//
	Timestamp *string `json:"timestamp,omitempty"`
	// Tracking identifier for this error response
	TrackingID *string `json:"trackingId,omitempty"`
}
