"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import addattributesactivity as shared_addattributesactivity
from ..shared import channelactivity as shared_channelactivity
from ..shared import datastoreactivity as shared_datastoreactivity
from ..shared import deviceregistryenrichactivity as shared_deviceregistryenrichactivity
from ..shared import deviceshadowenrichactivity as shared_deviceshadowenrichactivity
from ..shared import filteractivity as shared_filteractivity
from ..shared import lambdaactivity as shared_lambdaactivity
from ..shared import mathactivity as shared_mathactivity
from ..shared import removeattributesactivity as shared_removeattributesactivity
from ..shared import selectattributesactivity as shared_selectattributesactivity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PipelineActivity:
    r"""An activity that performs a transformation on a message."""
    
    add_attributes: Optional[shared_addattributesactivity.AddAttributesActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addAttributes'), 'exclude': lambda f: f is None }})  
    channel: Optional[shared_channelactivity.ChannelActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel'), 'exclude': lambda f: f is None }})  
    datastore: Optional[shared_datastoreactivity.DatastoreActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datastore'), 'exclude': lambda f: f is None }})  
    device_registry_enrich: Optional[shared_deviceregistryenrichactivity.DeviceRegistryEnrichActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceRegistryEnrich'), 'exclude': lambda f: f is None }})  
    device_shadow_enrich: Optional[shared_deviceshadowenrichactivity.DeviceShadowEnrichActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceShadowEnrich'), 'exclude': lambda f: f is None }})  
    filter: Optional[shared_filteractivity.FilterActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})  
    lambda_: Optional[shared_lambdaactivity.LambdaActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambda'), 'exclude': lambda f: f is None }})  
    math: Optional[shared_mathactivity.MathActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('math'), 'exclude': lambda f: f is None }})  
    remove_attributes: Optional[shared_removeattributesactivity.RemoveAttributesActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removeAttributes'), 'exclude': lambda f: f is None }})  
    select_attributes: Optional[shared_selectattributesactivity.SelectAttributesActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selectAttributes'), 'exclude': lambda f: f is None }})  
    