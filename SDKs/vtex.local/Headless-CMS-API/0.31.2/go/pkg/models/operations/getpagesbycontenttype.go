// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetPagesbyContentTypePathParams struct {
	// Builder ID specified in the settings of the CMS app.
	BuilderID string `pathParam:"style=simple,explode=false,name=builderId"`
	// Content Type identifier defined in the FastStore project.
	ContentType string `pathParam:"style=simple,explode=false,name=content-type"`
}

type GetPagesbyContentTypeQueryParams struct {
	// Filter results by a property of the page (e.g., `filters[status]`) or by a nested custom field of the `parameters` object (e.g., `filters[parameters.collection.sort]`).
	// *Replace {field} with the desired property.*
	FiltersField *string `queryParam:"style=form,explode=true,name=filters[{field}]"`
	// Release ID presented in the URL path of a CMS preview.
	ReleaseID *string `queryParam:"style=form,explode=true,name=releaseId"`
	// Version ID presented in the URL path of a CMS preview.
	VersionID *string `queryParam:"style=form,explode=true,name=versionId"`
}

type GetPagesbyContentTypeRequest struct {
	PathParams  GetPagesbyContentTypePathParams
	QueryParams GetPagesbyContentTypeQueryParams
}

// GetPagesbyContentType200ApplicationJSONDataSections - Object with data about a specific section.
type GetPagesbyContentType200ApplicationJSONDataSections struct {
	// Custom field values of the Section. Varies depending on the Section schema defined in the FastStore project.
	Data map[string]interface{} `json:"data,omitempty"`
	// Section ID.
	ID *string `json:"id,omitempty"`
	// Section name.
	Name *string `json:"name,omitempty"`
}

// GetPagesbyContentType200ApplicationJSONData - Object with data from a specific page.
type GetPagesbyContentType200ApplicationJSONData struct {
	// Document ID presented in the URL path of a CMS preview.
	ID *string `json:"id,omitempty"`
	// Name of the page created via the CMS interface.
	Name *string `json:"name,omitempty"`
	// Object with the configuration values of a `configurationSchemaSets` tab. Varies depending on the Content Type schema defined in the FastStore project.
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	// Sections that compose the page.
	Sections []GetPagesbyContentType200ApplicationJSONDataSections `json:"sections,omitempty"`
	// Current status of the page.
	Status *string `json:"status,omitempty"`
	// Name of the Content Type defined in the FastStore project.
	Type *string `json:"type,omitempty"`
	// Version ID.
	VersionID *string `json:"versionId,omitempty"`
	// Version status.
	VersionStatus *string `json:"versionStatus,omitempty"`
}

// GetPagesbyContentType200ApplicationJSON - OK
type GetPagesbyContentType200ApplicationJSON struct {
	// Array with data from all pages of the given Content Type.
	Data []GetPagesbyContentType200ApplicationJSONData `json:"data,omitempty"`
	// Indicates if there are more items to fetch.
	HasNextPage *bool `json:"hasNextPage,omitempty"`
	// Total number of results.
	TotalItems *int64 `json:"totalItems,omitempty"`
}

type GetPagesbyContentTypeResponse struct {
	ContentType string
	// OK
	GetPagesbyContentType200ApplicationJSONObject *GetPagesbyContentType200ApplicationJSON
	StatusCode                                    int
	RawResponse                                   *http.Response
}
