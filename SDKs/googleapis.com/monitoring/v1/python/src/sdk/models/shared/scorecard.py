"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gaugeview as shared_gaugeview
from ..shared import sparkchartview as shared_sparkchartview
from ..shared import threshold as shared_threshold
from ..shared import timeseriesquery as shared_timeseriesquery
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Scorecard:
    r"""A widget showing the latest value of a metric, and how this value relates to one or more thresholds."""
    
    gauge_view: Optional[shared_gaugeview.GaugeView] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gaugeView'), 'exclude': lambda f: f is None }})
    r"""A gauge chart shows where the current value sits within a pre-defined range. The upper and lower bounds should define the possible range of values for the scorecard's query (inclusive)."""  
    spark_chart_view: Optional[shared_sparkchartview.SparkChartView] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sparkChartView'), 'exclude': lambda f: f is None }})
    r"""A sparkChart is a small chart suitable for inclusion in a table-cell or inline in text. This message contains the configuration for a sparkChart to show up on a Scorecard, showing recent trends of the scorecard's timeseries."""  
    thresholds: Optional[list[shared_threshold.Threshold]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholds'), 'exclude': lambda f: f is None }})
    r"""The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)As an example, consider a scorecard with the following four thresholds: { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', } Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state."""  
    time_series_query: Optional[shared_timeseriesquery.TimeSeriesQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeSeriesQuery'), 'exclude': lambda f: f is None }})
    r"""TimeSeriesQuery collects the set of supported methods for querying time series data from the Stackdriver metrics API."""  
    