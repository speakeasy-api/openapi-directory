// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetAdminRecordingsStatus200ApplicationJSONStatusEnum string

const (
	GetAdminRecordingsStatus200ApplicationJSONStatusEnumNeverStarted GetAdminRecordingsStatus200ApplicationJSONStatusEnum = "NeverStarted"
	GetAdminRecordingsStatus200ApplicationJSONStatusEnumRecording    GetAdminRecordingsStatus200ApplicationJSONStatusEnum = "Recording"
	GetAdminRecordingsStatus200ApplicationJSONStatusEnumStopped      GetAdminRecordingsStatus200ApplicationJSONStatusEnum = "Stopped"
)

func (e *GetAdminRecordingsStatus200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NeverStarted":
		fallthrough
	case "Recording":
		fallthrough
	case "Stopped":
		*e = GetAdminRecordingsStatus200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAdminRecordingsStatus200ApplicationJSONStatusEnum: %s", s)
	}
}

// GetAdminRecordingsStatus200ApplicationJSON - Successfully got the record status
type GetAdminRecordingsStatus200ApplicationJSON struct {
	Status *GetAdminRecordingsStatus200ApplicationJSONStatusEnum `json:"status,omitempty"`
}

type GetAdminRecordingsStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successfully got the record status
	GetAdminRecordingsStatus200ApplicationJSONObject *GetAdminRecordingsStatus200ApplicationJSON
}
