"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import flex_v1_insights_questionnaires_category as shared_flex_v1_insights_questionnaires_category
from typing import Optional

UPDATE_INSIGHTS_QUESTIONNAIRES_CATEGORY_SERVERS = [
	"https://flex-api.twilio.com",
]


@dataclasses.dataclass
class UpdateInsightsQuestionnairesCategorySecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateInsightsQuestionnairesCategoryUpdateInsightsQuestionnairesCategoryRequest:
    
    name: str = dataclasses.field(metadata={'form': { 'field_name': 'Name' }})
    r"""The name of this category."""  
    

@dataclasses.dataclass
class UpdateInsightsQuestionnairesCategoryRequest:
    
    category_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'CategoryId', 'style': 'simple', 'explode': False }})
    r"""The ID of the category to be update"""  
    request_body: Optional[UpdateInsightsQuestionnairesCategoryUpdateInsightsQuestionnairesCategoryRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Token', 'style': 'simple', 'explode': False }})
    r"""The Token HTTP request header"""  
    

@dataclasses.dataclass
class UpdateInsightsQuestionnairesCategoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    flex_v1_insights_questionnaires_category: Optional[shared_flex_v1_insights_questionnaires_category.FlexV1InsightsQuestionnairesCategory] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    