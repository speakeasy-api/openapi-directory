// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTRestoreAddressToClassicActionEnum
type POSTRestoreAddressToClassicActionEnum string

const (
	POSTRestoreAddressToClassicActionEnumRestoreAddressToClassic POSTRestoreAddressToClassicActionEnum = "RestoreAddressToClassic"
)

func (e *POSTRestoreAddressToClassicActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RestoreAddressToClassic":
		*e = POSTRestoreAddressToClassicActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRestoreAddressToClassicActionEnum: %s", s)
	}
}

// POSTRestoreAddressToClassicVersionEnum
type POSTRestoreAddressToClassicVersionEnum string

const (
	POSTRestoreAddressToClassicVersionEnumTwoThousandAndSixteen1115 POSTRestoreAddressToClassicVersionEnum = "2016-11-15"
)

func (e *POSTRestoreAddressToClassicVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTRestoreAddressToClassicVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRestoreAddressToClassicVersionEnum: %s", s)
	}
}

type POSTRestoreAddressToClassicQueryParams struct {
	Action  POSTRestoreAddressToClassicActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTRestoreAddressToClassicVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTRestoreAddressToClassicHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTRestoreAddressToClassicRequest struct {
	QueryParams POSTRestoreAddressToClassicQueryParams
	Headers     POSTRestoreAddressToClassicHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTRestoreAddressToClassicResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
