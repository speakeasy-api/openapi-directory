// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSchemaXAmzTargetEnum
type GetSchemaXAmzTargetEnum string

const (
	GetSchemaXAmzTargetEnumAwsGlueGetSchema GetSchemaXAmzTargetEnum = "AWSGlue.GetSchema"
)

func (e *GetSchemaXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.GetSchema":
		*e = GetSchemaXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchemaXAmzTargetEnum: %s", s)
	}
}

type GetSchemaRequest struct {
	GetSchemaInput    shared.GetSchemaInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetSchemaXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetSchemaResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetSchemaResponse *shared.GetSchemaResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
