"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2container as shared_googleprivacydlpv2container
from ..shared import googleprivacydlpv2tableoptions as shared_googleprivacydlpv2tableoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2HybridFindingDetails:
    r"""Populate to associate additional data with each finding."""
    
    container_details: Optional[shared_googleprivacydlpv2container.GooglePrivacyDlpV2Container] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerDetails'), 'exclude': lambda f: f is None }})
    r"""Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record."""  
    file_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileOffset'), 'exclude': lambda f: f is None }})
    r"""Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\\"environment\\" : \\"production\\"` * `\\"pipeline\\" : \\"etl\\"`"""  
    row_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowOffset'), 'exclude': lambda f: f is None }})
    r"""Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position."""  
    table_options: Optional[shared_googleprivacydlpv2tableoptions.GooglePrivacyDlpV2TableOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableOptions'), 'exclude': lambda f: f is None }})
    r"""Instructions regarding the table content being inspected."""  
    