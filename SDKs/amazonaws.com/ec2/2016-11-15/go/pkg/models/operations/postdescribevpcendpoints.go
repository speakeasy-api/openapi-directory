// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeVpcEndpointsActionEnum
type POSTDescribeVpcEndpointsActionEnum string

const (
	POSTDescribeVpcEndpointsActionEnumDescribeVpcEndpoints POSTDescribeVpcEndpointsActionEnum = "DescribeVpcEndpoints"
)

func (e *POSTDescribeVpcEndpointsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeVpcEndpoints":
		*e = POSTDescribeVpcEndpointsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeVpcEndpointsActionEnum: %s", s)
	}
}

// POSTDescribeVpcEndpointsVersionEnum
type POSTDescribeVpcEndpointsVersionEnum string

const (
	POSTDescribeVpcEndpointsVersionEnumTwoThousandAndSixteen1115 POSTDescribeVpcEndpointsVersionEnum = "2016-11-15"
)

func (e *POSTDescribeVpcEndpointsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDescribeVpcEndpointsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeVpcEndpointsVersionEnum: %s", s)
	}
}

type POSTDescribeVpcEndpointsQueryParams struct {
	Action POSTDescribeVpcEndpointsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string                             `queryParam:"style=form,explode=true,name=NextToken"`
	Version   POSTDescribeVpcEndpointsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeVpcEndpointsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeVpcEndpointsRequest struct {
	QueryParams POSTDescribeVpcEndpointsQueryParams
	Headers     POSTDescribeVpcEndpointsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeVpcEndpointsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
