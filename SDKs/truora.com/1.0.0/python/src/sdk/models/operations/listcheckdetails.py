"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import checkdetailsoutput as shared_checkdetailsoutput
from typing import Optional


@dataclasses.dataclass
class ListCheckDetailsSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Truora-API-Key' }})  
    

@dataclasses.dataclass
class ListCheckDetailsRequest:
    
    check_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'check_id', 'style': 'simple', 'explode': False }})
    r"""ID of the Check"""  
    lang: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lang', 'style': 'form', 'explode': True }})
    r"""This parameter is used to specify the language wanted for details, if not specified details will come in their original language."""  
    start_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_key', 'style': 'form', 'explode': True }})
    r"""Start key value for the pagination"""  
    

@dataclasses.dataclass
class ListCheckDetailsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    check_details_output: Optional[shared_checkdetailsoutput.CheckDetailsOutput] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    