// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetConsumerV1ServicesQueryParams struct {
	// Search All Locations, default is false
	AllLocations *bool `queryParam:"style=form,explode=true,name=allLocations"`
	// Filter by default service, default is false
	DefaultService *bool `queryParam:"style=form,explode=true,name=defaultService"`
	// Page limit default 20, max 100
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// id of business location, defaults to primary business location
	LocationID *string `queryParam:"style=form,explode=true,name=locationId"`
	// Filter by Name, supports Partial name search
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Starting row of page, default 0
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter by scope, Company, Location or All, default is All
	Scope *shared.ServicesScopeEnum `queryParam:"style=form,explode=true,name=scope"`
	// Filter by groupId
	ServiceGroupID *int `queryParam:"style=form,explode=true,name=serviceGroupId"`
	// Filter by ServiceId, using this parameter would ignore all other parameters
	ServiceID *string `queryParam:"style=form,explode=true,name=serviceId"`
	// Sort results in Descending Order, default true
	SortDescending *bool `queryParam:"style=form,explode=true,name=sortDescending"`
	// Sort results using Natural Sort or Sorted alphabetically by Service Names, default is natural
	SortOrder *shared.ServiceSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
}

type GetConsumerV1ServicesRequest struct {
	QueryParams GetConsumerV1ServicesQueryParams
}

type GetConsumerV1ServicesResponse struct {
	ContentType string
	// Success
	ServiceListViewModel *shared.ServiceListViewModel
	StatusCode           int
	RawResponse          *http.Response
}
