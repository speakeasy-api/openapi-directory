/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Expose, Transform, Type } from "class-transformer";

export enum HeartbeatResponseStatusEnum {
  Up = "UP",
  Down = "DOWN",
}

/**
 * OK
 */
export class HeartbeatResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: HeartbeatResponseStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;
}
