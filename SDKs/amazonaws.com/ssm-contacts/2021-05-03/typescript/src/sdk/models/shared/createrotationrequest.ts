/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecurrenceSettings } from "./recurrencesettings";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

export class CreateRotationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContactIds" })
  contactIds: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Recurrence" })
  @Type(() => RecurrenceSettings)
  recurrence: RecurrenceSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TimeZoneId" })
  timeZoneId: string;
}
