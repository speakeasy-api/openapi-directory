<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OBWriteInternational3DataInitiationInstructedAmount - Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
 * 
 * Usage: This amount has to be transported unchanged through the transaction chain.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OBWriteInternational3DataInitiationInstructedAmount
{
    /**
     * A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
     * 
     * @var string $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('Amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $amount;
    
    /**
     * A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('Currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
	public function __construct()
	{
		$this->amount = "";
		$this->currency = "";
	}
}
