"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import namevaluepair as shared_namevaluepair
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TaskSchedulingErrorCategoryEnum(str, Enum):
    r"""The category of the task scheduling error."""
    USERERROR = 'usererror'
    SERVERERROR = 'servererror'
    UNMAPPED = 'unmapped'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskSchedulingError:
    r"""Information about an error when scheduling a task."""
    
    category: TaskSchedulingErrorCategoryEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category') }})
    r"""The category of the task scheduling error."""  
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""An identifier for the task scheduling error. Codes are invariant and are intended to be consumed programmatically."""  
    details: Optional[list[shared_namevaluepair.NameValuePair]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})
    r"""The list of additional error details related to the scheduling error."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""A message describing the task scheduling error, intended to be suitable for display in a user interface."""  
    