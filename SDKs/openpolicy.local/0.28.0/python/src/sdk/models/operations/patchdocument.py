"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import four_hundred as shared_four_hundred
from ..shared import four_hundred_and_four as shared_four_hundred_and_four
from ..shared import patchesschema as shared_patchesschema
from typing import Optional


@dataclasses.dataclass
class PatchDocumentRequest:
    
    path: str = dataclasses.field(metadata={'path_param': { 'field_name': 'path', 'style': 'simple', 'explode': False }})
    r"""A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404."""  
    request_body: list[shared_patchesschema.PatchesSchema] = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The list of JSON patch operations."""  
    

@dataclasses.dataclass
class PatchDocumentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    four_hundred: Optional[shared_four_hundred.FourHundred] = dataclasses.field(default=None)
    r"""Bad request"""  
    four_hundred_and_four: Optional[shared_four_hundred_and_four.FourHundredAndFour] = dataclasses.field(default=None)
    r"""Not found (for example, a requested policy module or document does not exist)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    