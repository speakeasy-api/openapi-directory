"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetmeasureResponse = exports.GetmeasureRequest = exports.GetmeasureTypeEnum = exports.GetmeasureScaleEnum = exports.GetmeasureSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var GetmeasureSecurity = /** @class */ (function (_super) {
    __extends(GetmeasureSecurity, _super);
    function GetmeasureSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], GetmeasureSecurity.prototype, "codeOauth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], GetmeasureSecurity.prototype, "passwordOauth", void 0);
    return GetmeasureSecurity;
}(utils_1.SpeakeasyBase));
exports.GetmeasureSecurity = GetmeasureSecurity;
/**
 * Defines the time interval between two measurements.
 *
 * @remarks
 * Possible values :
 * max -> every value stored will be returned
 * 30min -> 1 value every 30 minutes
 * 1hour -> 1 value every hour
 * 3hours -> 1 value every 3 hours
 * 1day -> 1 value per day
 * 1week -> 1 value per week
 * 1month -> 1 value per month
 *
 */
var GetmeasureScaleEnum;
(function (GetmeasureScaleEnum) {
    GetmeasureScaleEnum["Max"] = "max";
    GetmeasureScaleEnum["Thirtymin"] = "30min";
    GetmeasureScaleEnum["Onehour"] = "1hour";
    GetmeasureScaleEnum["Threehours"] = "3hours";
    GetmeasureScaleEnum["Oneday"] = "1day";
    GetmeasureScaleEnum["Oneweek"] = "1week";
    GetmeasureScaleEnum["Onemonth"] = "1month";
})(GetmeasureScaleEnum = exports.GetmeasureScaleEnum || (exports.GetmeasureScaleEnum = {}));
var GetmeasureTypeEnum;
(function (GetmeasureTypeEnum) {
    GetmeasureTypeEnum["Temperature"] = "Temperature";
    GetmeasureTypeEnum["Co2"] = "CO2";
    GetmeasureTypeEnum["Humidity"] = "Humidity";
    GetmeasureTypeEnum["Pressure"] = "Pressure";
    GetmeasureTypeEnum["Noise"] = "Noise";
    GetmeasureTypeEnum["Rain"] = "Rain";
    GetmeasureTypeEnum["WindStrength"] = "WindStrength";
    GetmeasureTypeEnum["WindAngle"] = "WindAngle";
    GetmeasureTypeEnum["Guststrength"] = "Guststrength";
    GetmeasureTypeEnum["GustAngle"] = "GustAngle";
    GetmeasureTypeEnum["SpTemperature"] = "Sp_Temperature";
    GetmeasureTypeEnum["BoilerOn"] = "BoilerOn";
    GetmeasureTypeEnum["BoilerOff"] = "BoilerOff";
    GetmeasureTypeEnum["MinTemp"] = "min_temp";
    GetmeasureTypeEnum["DateMinTemp"] = "date_min_temp";
    GetmeasureTypeEnum["MaxTemp"] = "max_temp";
    GetmeasureTypeEnum["DateMaxTemp"] = "date_max_temp";
    GetmeasureTypeEnum["MinHum"] = "min_hum";
    GetmeasureTypeEnum["DateMinHum"] = "date_min_hum";
    GetmeasureTypeEnum["MaxHum"] = "max_hum";
    GetmeasureTypeEnum["DateMaxHum"] = "date_max_hum";
    GetmeasureTypeEnum["MinPressure"] = "min_pressure";
    GetmeasureTypeEnum["DateMinPressure"] = "date_min_pressure";
    GetmeasureTypeEnum["MaxPressure"] = "max_pressure";
    GetmeasureTypeEnum["DateMaxPressure"] = "date_max_pressure";
    GetmeasureTypeEnum["MinNoise"] = "min_noise";
    GetmeasureTypeEnum["DateMinNoise"] = "date_min_noise";
    GetmeasureTypeEnum["MaxNoise"] = "max_noise";
    GetmeasureTypeEnum["DateMaxNoise"] = "date_max_noise";
    GetmeasureTypeEnum["DateMinCo2"] = "date_min_co2";
    GetmeasureTypeEnum["DateMaxCo2"] = "date_max_co2";
    GetmeasureTypeEnum["DateMaxGust"] = "date_max_gust";
    GetmeasureTypeEnum["SumRain"] = "sum_rain";
    GetmeasureTypeEnum["SumBoilerOn"] = "sum_boiler_on";
    GetmeasureTypeEnum["SumBoilerOff"] = "sum_boiler_off";
})(GetmeasureTypeEnum = exports.GetmeasureTypeEnum || (exports.GetmeasureTypeEnum = {}));
var GetmeasureRequest = /** @class */ (function (_super) {
    __extends(GetmeasureRequest, _super);
    function GetmeasureRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=date_begin",
        }),
        __metadata("design:type", Number)
    ], GetmeasureRequest.prototype, "dateBegin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=date_end",
        }),
        __metadata("design:type", String)
    ], GetmeasureRequest.prototype, "dateEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=device_id",
        }),
        __metadata("design:type", String)
    ], GetmeasureRequest.prototype, "deviceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=limit" }),
        __metadata("design:type", Number)
    ], GetmeasureRequest.prototype, "limit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=module_id",
        }),
        __metadata("design:type", String)
    ], GetmeasureRequest.prototype, "moduleId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=optimize",
        }),
        __metadata("design:type", Boolean)
    ], GetmeasureRequest.prototype, "optimize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=real_time",
        }),
        __metadata("design:type", Boolean)
    ], GetmeasureRequest.prototype, "realTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=scale" }),
        __metadata("design:type", String)
    ], GetmeasureRequest.prototype, "scale", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=false;name=type" }),
        __metadata("design:type", Array)
    ], GetmeasureRequest.prototype, "type", void 0);
    return GetmeasureRequest;
}(utils_1.SpeakeasyBase));
exports.GetmeasureRequest = GetmeasureRequest;
var GetmeasureResponse = /** @class */ (function (_super) {
    __extends(GetmeasureResponse, _super);
    function GetmeasureResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetmeasureResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.NAMeasureResponse)
    ], GetmeasureResponse.prototype, "naMeasureResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetmeasureResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetmeasureResponse.prototype, "rawResponse", void 0);
    return GetmeasureResponse;
}(utils_1.SpeakeasyBase));
exports.GetmeasureResponse = GetmeasureResponse;
