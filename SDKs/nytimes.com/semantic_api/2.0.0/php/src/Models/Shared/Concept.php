<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Concept
{
    /**
     * $ancestors
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConceptRelation> $ancestors
     */
	#[\JMS\Serializer\Annotation\SerializedName('ancestors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConceptRelation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ancestors = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('article_list')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConceptArticleList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConceptArticleList $articleList = null;
    
    /**
     * $combinations
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConceptCombinations> $combinations
     */
	#[\JMS\Serializer\Annotation\SerializedName('combinations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConceptCombinations>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $combinations = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptCreated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $conceptId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptUpdated = null;
    
    /**
     * $descendants
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConceptRelation> $descendants
     */
	#[\JMS\Serializer\Annotation\SerializedName('descendants')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConceptRelation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $descendants = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_times_tag')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $isTimesTag = null;
    
    /**
     * $links
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConceptLinks> $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('links')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConceptLinks>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $links = null;
    
    /**
     * $scopeNotes
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConceptScopeNotes> $scopeNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope_notes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConceptScopeNotes>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scopeNotes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('search_api_query')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $searchApiQuery = null;
    
    /**
     * $taxonomy
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConceptTaxonomy> $taxonomy
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxonomy')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConceptTaxonomy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taxonomy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vernacular')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vernacular = null;
    
	public function __construct()
	{
		$this->ancestors = null;
		$this->articleList = null;
		$this->combinations = null;
		$this->conceptCreated = null;
		$this->conceptId = null;
		$this->conceptName = null;
		$this->conceptStatus = null;
		$this->conceptType = null;
		$this->conceptUpdated = null;
		$this->descendants = null;
		$this->isTimesTag = null;
		$this->links = null;
		$this->scopeNotes = null;
		$this->searchApiQuery = null;
		$this->taxonomy = null;
		$this->vernacular = null;
	}
}
