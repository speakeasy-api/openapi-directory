/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TaskDefinition - The details of a task definition which describes the container and volume definitions of an Amazon Elastic Container Service task. You can specify which Docker images to use, the required resources, and other configurations related to launching the task definition through an Amazon ECS service or task.
 */
public class TaskDefinition {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compatibilities")
    public CompatibilityEnum[] compatibilities;

    public TaskDefinition withCompatibilities(CompatibilityEnum[] compatibilities) {
        this.compatibilities = compatibilities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerDefinitions")
    public ContainerDefinition[] containerDefinitions;

    public TaskDefinition withContainerDefinitions(ContainerDefinition[] containerDefinitions) {
        this.containerDefinitions = containerDefinitions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpu")
    public String cpu;

    public TaskDefinition withCpu(String cpu) {
        this.cpu = cpu;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("deregisteredAt")
    public OffsetDateTime deregisteredAt;

    public TaskDefinition withDeregisteredAt(OffsetDateTime deregisteredAt) {
        this.deregisteredAt = deregisteredAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ephemeralStorage")
    public EphemeralStorage ephemeralStorage;

    public TaskDefinition withEphemeralStorage(EphemeralStorage ephemeralStorage) {
        this.ephemeralStorage = ephemeralStorage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionRoleArn")
    public String executionRoleArn;

    public TaskDefinition withExecutionRoleArn(String executionRoleArn) {
        this.executionRoleArn = executionRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("family")
    public String family;

    public TaskDefinition withFamily(String family) {
        this.family = family;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inferenceAccelerators")
    public InferenceAccelerator[] inferenceAccelerators;

    public TaskDefinition withInferenceAccelerators(InferenceAccelerator[] inferenceAccelerators) {
        this.inferenceAccelerators = inferenceAccelerators;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipcMode")
    public IpcModeEnum ipcMode;

    public TaskDefinition withIpcMode(IpcModeEnum ipcMode) {
        this.ipcMode = ipcMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memory")
    public String memory;

    public TaskDefinition withMemory(String memory) {
        this.memory = memory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkMode")
    public NetworkModeEnum networkMode;

    public TaskDefinition withNetworkMode(NetworkModeEnum networkMode) {
        this.networkMode = networkMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pidMode")
    public PidModeEnum pidMode;

    public TaskDefinition withPidMode(PidModeEnum pidMode) {
        this.pidMode = pidMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placementConstraints")
    public TaskDefinitionPlacementConstraint[] placementConstraints;

    public TaskDefinition withPlacementConstraints(TaskDefinitionPlacementConstraint[] placementConstraints) {
        this.placementConstraints = placementConstraints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("proxyConfiguration")
    public ProxyConfiguration proxyConfiguration;

    public TaskDefinition withProxyConfiguration(ProxyConfiguration proxyConfiguration) {
        this.proxyConfiguration = proxyConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("registeredAt")
    public OffsetDateTime registeredAt;

    public TaskDefinition withRegisteredAt(OffsetDateTime registeredAt) {
        this.registeredAt = registeredAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registeredBy")
    public String registeredBy;

    public TaskDefinition withRegisteredBy(String registeredBy) {
        this.registeredBy = registeredBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiresAttributes")
    public Attribute[] requiresAttributes;

    public TaskDefinition withRequiresAttributes(Attribute[] requiresAttributes) {
        this.requiresAttributes = requiresAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiresCompatibilities")
    public CompatibilityEnum[] requiresCompatibilities;

    public TaskDefinition withRequiresCompatibilities(CompatibilityEnum[] requiresCompatibilities) {
        this.requiresCompatibilities = requiresCompatibilities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revision")
    public Long revision;

    public TaskDefinition withRevision(Long revision) {
        this.revision = revision;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimePlatform")
    public RuntimePlatform runtimePlatform;

    public TaskDefinition withRuntimePlatform(RuntimePlatform runtimePlatform) {
        this.runtimePlatform = runtimePlatform;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public TaskDefinitionStatusEnum status;

    public TaskDefinition withStatus(TaskDefinitionStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskDefinitionArn")
    public String taskDefinitionArn;

    public TaskDefinition withTaskDefinitionArn(String taskDefinitionArn) {
        this.taskDefinitionArn = taskDefinitionArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskRoleArn")
    public String taskRoleArn;

    public TaskDefinition withTaskRoleArn(String taskRoleArn) {
        this.taskRoleArn = taskRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumes")
    public Volume[] volumes;

    public TaskDefinition withVolumes(Volume[] volumes) {
        this.volumes = volumes;
        return this;
    }
    
    public TaskDefinition(){}
}
