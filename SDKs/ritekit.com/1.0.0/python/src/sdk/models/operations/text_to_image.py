"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class TextToImageRequest:
    
    animation: str = dataclasses.field(metadata={'query_param': { 'field_name': 'animation', 'style': 'form', 'explode': True }})
    r"""Animation type: none, rays, glint, circle"""  
    author: str = dataclasses.field(metadata={'query_param': { 'field_name': 'author', 'style': 'form', 'explode': True }})
    r"""Name of the author/source"""  
    author_font: str = dataclasses.field(metadata={'query_param': { 'field_name': 'authorFont', 'style': 'form', 'explode': True }})
    r"""Font-family used for author name"""  
    author_font_color: str = dataclasses.field(metadata={'query_param': { 'field_name': 'authorFontColor', 'style': 'form', 'explode': True }})
    r"""Font color of the author"""  
    background_color: str = dataclasses.field(metadata={'query_param': { 'field_name': 'backgroundColor', 'style': 'form', 'explode': True }})
    r"""Background color for solid background type"""  
    bg_type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'bgType', 'style': 'form', 'explode': True }})
    r"""Background type (gradient/solid)"""  
    brand_logo: str = dataclasses.field(metadata={'query_param': { 'field_name': 'brandLogo', 'style': 'form', 'explode': True }})
    r"""URL of the brand logo"""  
    enable_highlight: int = dataclasses.field(metadata={'query_param': { 'field_name': 'enableHighlight', 'style': 'form', 'explode': True }})
    r"""Enable highlight on quote text"""  
    font_size: int = dataclasses.field(metadata={'query_param': { 'field_name': 'fontSize', 'style': 'form', 'explode': True }})
    r"""Font size for the quote (author font size is calculated automatically)"""  
    gradient_color1: str = dataclasses.field(metadata={'query_param': { 'field_name': 'gradientColor1', 'style': 'form', 'explode': True }})
    r"""First color for gradient background type"""  
    gradient_color2: str = dataclasses.field(metadata={'query_param': { 'field_name': 'gradientColor2', 'style': 'form', 'explode': True }})
    r"""Second color for gradient background type"""  
    gradient_type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'gradientType', 'style': 'form', 'explode': True }})
    r"""Type of gradient background (linear/radial)"""  
    highlight_color: str = dataclasses.field(metadata={'query_param': { 'field_name': 'highlightColor', 'style': 'form', 'explode': True }})
    r"""Color used for highlight"""  
    quote: str = dataclasses.field(metadata={'query_param': { 'field_name': 'quote', 'style': 'form', 'explode': True }})
    r"""Text of the quote"""  
    quote_font: str = dataclasses.field(metadata={'query_param': { 'field_name': 'quoteFont', 'style': 'form', 'explode': True }})
    r"""Font-family used for quote text"""  
    quote_font_color: str = dataclasses.field(metadata={'query_param': { 'field_name': 'quoteFontColor', 'style': 'form', 'explode': True }})
    r"""Font color of the quote text"""  
    show_quote_mark: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'showQuoteMark', 'style': 'form', 'explode': True }})
    r"""showing/hiding quote mark"""  
    

@dataclasses.dataclass
class TextToImageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    