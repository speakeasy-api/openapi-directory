// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCrawlStatisticsUrlsListTypeEnum - URLs list type (crawled URLs or error URLs)
type GetCrawlStatisticsUrlsListTypeEnum string

const (
	GetCrawlStatisticsUrlsListTypeEnumCrawled GetCrawlStatisticsUrlsListTypeEnum = "crawled"
	GetCrawlStatisticsUrlsListTypeEnumErrors  GetCrawlStatisticsUrlsListTypeEnum = "errors"
)

func (e GetCrawlStatisticsUrlsListTypeEnum) ToPointer() *GetCrawlStatisticsUrlsListTypeEnum {
	return &e
}

func (e *GetCrawlStatisticsUrlsListTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crawled":
		fallthrough
	case "errors":
		*e = GetCrawlStatisticsUrlsListTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCrawlStatisticsUrlsListTypeEnum: %v", v)
	}
}

type GetCrawlStatisticsUrlsRequest struct {
	// Analysis' identifier
	AnalysisSlug string `pathParam:"style=simple,explode=false,name=analysis_slug"`
	// URLs list type (crawled URLs or error URLs)
	ListType GetCrawlStatisticsUrlsListTypeEnum `pathParam:"style=simple,explode=false,name=list_type"`
	// Project's identifier
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project_slug"`
	// User's identifier
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type GetCrawlStatisticsUrlsResponse struct {
	ContentType string
	// error payload
	DefaultPayload                                *shared.DefaultPayload
	StatusCode                                    int
	RawResponse                                   *http.Response
	GetCrawlStatisticsUrls200ApplicationJSONAnies []interface{}
}
