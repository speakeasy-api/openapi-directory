/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class CodeScanningOrganizationAlertItems {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CodeScanningOrganizationAlertItems withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dismissed_at")
    public OffsetDateTime dismissedAt;
    public CodeScanningOrganizationAlertItems withDismissedAt(OffsetDateTime dismissedAt) {
        this.dismissedAt = dismissedAt;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonProperty("dismissed_by")
    public NullableSimpleUser dismissedBy;
    public CodeScanningOrganizationAlertItems withDismissedBy(NullableSimpleUser dismissedBy) {
        this.dismissedBy = dismissedBy;
        return this;
    }
    
    /**
     * The dismissal comment associated with the dismissal of the alert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dismissed_comment")
    public String dismissedComment;
    public CodeScanningOrganizationAlertItems withDismissedComment(String dismissedComment) {
        this.dismissedComment = dismissedComment;
        return this;
    }
    
    /**
     * **Required when the state is dismissed.** The reason for dismissing or closing the alert.
     */
    @JsonProperty("dismissed_reason")
    public CodeScanningAlertDismissedReasonEnum dismissedReason;
    public CodeScanningOrganizationAlertItems withDismissedReason(CodeScanningAlertDismissedReasonEnum dismissedReason) {
        this.dismissedReason = dismissedReason;
        return this;
    }
    
    /**
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fixed_at")
    public OffsetDateTime fixedAt;
    public CodeScanningOrganizationAlertItems withFixedAt(OffsetDateTime fixedAt) {
        this.fixedAt = fixedAt;
        return this;
    }
    
    /**
     * The GitHub URL of the alert resource.
     */
    @JsonProperty("html_url")
    public String htmlUrl;
    public CodeScanningOrganizationAlertItems withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * The REST API URL for fetching the list of instances for an alert.
     */
    @JsonProperty("instances_url")
    public String instancesUrl;
    public CodeScanningOrganizationAlertItems withInstancesUrl(String instancesUrl) {
        this.instancesUrl = instancesUrl;
        return this;
    }
    
    @JsonProperty("most_recent_instance")
    public CodeScanningAlertInstance mostRecentInstance;
    public CodeScanningOrganizationAlertItems withMostRecentInstance(CodeScanningAlertInstance mostRecentInstance) {
        this.mostRecentInstance = mostRecentInstance;
        return this;
    }
    
    /**
     * The security alert number.
     */
    @JsonProperty("number")
    public Long number;
    public CodeScanningOrganizationAlertItems withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    /**
     * A GitHub repository.
     */
    @JsonProperty("repository")
    public SimpleRepository repository;
    public CodeScanningOrganizationAlertItems withRepository(SimpleRepository repository) {
        this.repository = repository;
        return this;
    }
    
    @JsonProperty("rule")
    public CodeScanningAlertRule rule;
    public CodeScanningOrganizationAlertItems withRule(CodeScanningAlertRule rule) {
        this.rule = rule;
        return this;
    }
    
    /**
     * State of a code scanning alert.
     */
    @JsonProperty("state")
    public CodeScanningAlertStateEnum state;
    public CodeScanningOrganizationAlertItems withState(CodeScanningAlertStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonProperty("tool")
    public CodeScanningAnalysisTool tool;
    public CodeScanningOrganizationAlertItems withTool(CodeScanningAnalysisTool tool) {
        this.tool = tool;
        return this;
    }
    
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public CodeScanningOrganizationAlertItems withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The REST API URL of the alert resource.
     */
    @JsonProperty("url")
    public String url;
    public CodeScanningOrganizationAlertItems withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
