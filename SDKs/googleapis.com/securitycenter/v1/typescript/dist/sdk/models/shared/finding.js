"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindingInput = exports.Finding = exports.FindingStateEnum = exports.FindingSeverityEnum = exports.FindingMuteEnum = exports.FindingFindingClassEnum = void 0;
var utils_1 = require("../../../internal/utils");
var access_1 = require("./access");
var clouddlpdataprofile_1 = require("./clouddlpdataprofile");
var clouddlpinspection_1 = require("./clouddlpinspection");
var compliance_1 = require("./compliance");
var connection_1 = require("./connection");
var contactdetails_1 = require("./contactdetails");
var container_1 = require("./container");
var database_1 = require("./database");
var exfiltration_1 = require("./exfiltration");
var file_1 = require("./file");
var googlecloudsecuritycenterv1externalsystem_1 = require("./googlecloudsecuritycenterv1externalsystem");
var iambinding_1 = require("./iambinding");
var indicator_1 = require("./indicator");
var kernelrootkit_1 = require("./kernelrootkit");
var kubernetes_1 = require("./kubernetes");
var mitreattack_1 = require("./mitreattack");
var orgpolicyconstraint_1 = require("./orgpolicyconstraint");
var process_1 = require("./process");
var securitymarks_1 = require("./securitymarks");
var vulnerability_1 = require("./vulnerability");
var class_transformer_1 = require("class-transformer");
/**
 * The class of the finding.
 */
var FindingFindingClassEnum;
(function (FindingFindingClassEnum) {
    FindingFindingClassEnum["FindingClassUnspecified"] = "FINDING_CLASS_UNSPECIFIED";
    FindingFindingClassEnum["Threat"] = "THREAT";
    FindingFindingClassEnum["Vulnerability"] = "VULNERABILITY";
    FindingFindingClassEnum["Misconfiguration"] = "MISCONFIGURATION";
    FindingFindingClassEnum["Observation"] = "OBSERVATION";
    FindingFindingClassEnum["SccError"] = "SCC_ERROR";
})(FindingFindingClassEnum = exports.FindingFindingClassEnum || (exports.FindingFindingClassEnum = {}));
/**
 * Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.
 */
var FindingMuteEnum;
(function (FindingMuteEnum) {
    FindingMuteEnum["MuteUnspecified"] = "MUTE_UNSPECIFIED";
    FindingMuteEnum["Muted"] = "MUTED";
    FindingMuteEnum["Unmuted"] = "UNMUTED";
    FindingMuteEnum["Undefined"] = "UNDEFINED";
})(FindingMuteEnum = exports.FindingMuteEnum || (exports.FindingMuteEnum = {}));
/**
 * The severity of the finding. This field is managed by the source that writes the finding.
 */
var FindingSeverityEnum;
(function (FindingSeverityEnum) {
    FindingSeverityEnum["SeverityUnspecified"] = "SEVERITY_UNSPECIFIED";
    FindingSeverityEnum["Critical"] = "CRITICAL";
    FindingSeverityEnum["High"] = "HIGH";
    FindingSeverityEnum["Medium"] = "MEDIUM";
    FindingSeverityEnum["Low"] = "LOW";
})(FindingSeverityEnum = exports.FindingSeverityEnum || (exports.FindingSeverityEnum = {}));
/**
 * The state of the finding.
 */
var FindingStateEnum;
(function (FindingStateEnum) {
    FindingStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    FindingStateEnum["Active"] = "ACTIVE";
    FindingStateEnum["Inactive"] = "INACTIVE";
})(FindingStateEnum = exports.FindingStateEnum || (exports.FindingStateEnum = {}));
/**
 * Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
 */
var Finding = /** @class */ (function (_super) {
    __extends(Finding, _super);
    function Finding() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "access" }),
        (0, class_transformer_1.Type)(function () { return access_1.Access; }),
        __metadata("design:type", access_1.Access)
    ], Finding.prototype, "access", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canonicalName" }),
        __metadata("design:type", String)
    ], Finding.prototype, "canonicalName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category" }),
        __metadata("design:type", String)
    ], Finding.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloudDlpDataProfile" }),
        (0, class_transformer_1.Type)(function () { return clouddlpdataprofile_1.CloudDlpDataProfile; }),
        __metadata("design:type", clouddlpdataprofile_1.CloudDlpDataProfile)
    ], Finding.prototype, "cloudDlpDataProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloudDlpInspection" }),
        (0, class_transformer_1.Type)(function () { return clouddlpinspection_1.CloudDlpInspection; }),
        __metadata("design:type", clouddlpinspection_1.CloudDlpInspection)
    ], Finding.prototype, "cloudDlpInspection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: compliance_1.Compliance }),
        (0, class_transformer_1.Expose)({ name: "compliances" }),
        (0, class_transformer_1.Type)(function () { return compliance_1.Compliance; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "compliances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connection_1.Connection }),
        (0, class_transformer_1.Expose)({ name: "connections" }),
        (0, class_transformer_1.Type)(function () { return connection_1.Connection; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "connections", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: contactdetails_1.ContactDetails }),
        (0, class_transformer_1.Expose)({ name: "contacts" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], contactdetails_1.ContactDetails);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], Finding.prototype, "contacts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: container_1.Container }),
        (0, class_transformer_1.Expose)({ name: "containers" }),
        (0, class_transformer_1.Type)(function () { return container_1.Container; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "containers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], Finding.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "database" }),
        (0, class_transformer_1.Type)(function () { return database_1.Database; }),
        __metadata("design:type", database_1.Database)
    ], Finding.prototype, "database", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Finding.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eventTime" }),
        __metadata("design:type", String)
    ], Finding.prototype, "eventTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exfiltration" }),
        (0, class_transformer_1.Type)(function () { return exfiltration_1.Exfiltration; }),
        __metadata("design:type", exfiltration_1.Exfiltration)
    ], Finding.prototype, "exfiltration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: googlecloudsecuritycenterv1externalsystem_1.GoogleCloudSecuritycenterV1ExternalSystem }),
        (0, class_transformer_1.Expose)({ name: "externalSystems" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], googlecloudsecuritycenterv1externalsystem_1.GoogleCloudSecuritycenterV1ExternalSystem);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], Finding.prototype, "externalSystems", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "externalUri" }),
        __metadata("design:type", String)
    ], Finding.prototype, "externalUri", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: file_1.File }),
        (0, class_transformer_1.Expose)({ name: "files" }),
        (0, class_transformer_1.Type)(function () { return file_1.File; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "findingClass" }),
        __metadata("design:type", String)
    ], Finding.prototype, "findingClass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: iambinding_1.IamBinding }),
        (0, class_transformer_1.Expose)({ name: "iamBindings" }),
        (0, class_transformer_1.Type)(function () { return iambinding_1.IamBinding; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "iamBindings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indicator" }),
        (0, class_transformer_1.Type)(function () { return indicator_1.Indicator; }),
        __metadata("design:type", indicator_1.Indicator)
    ], Finding.prototype, "indicator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kernelRootkit" }),
        (0, class_transformer_1.Type)(function () { return kernelrootkit_1.KernelRootkit; }),
        __metadata("design:type", kernelrootkit_1.KernelRootkit)
    ], Finding.prototype, "kernelRootkit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kubernetes" }),
        (0, class_transformer_1.Type)(function () { return kubernetes_1.Kubernetes; }),
        __metadata("design:type", kubernetes_1.Kubernetes)
    ], Finding.prototype, "kubernetes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mitreAttack" }),
        (0, class_transformer_1.Type)(function () { return mitreattack_1.MitreAttack; }),
        __metadata("design:type", mitreattack_1.MitreAttack)
    ], Finding.prototype, "mitreAttack", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "moduleName" }),
        __metadata("design:type", String)
    ], Finding.prototype, "moduleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mute" }),
        __metadata("design:type", String)
    ], Finding.prototype, "mute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "muteInitiator" }),
        __metadata("design:type", String)
    ], Finding.prototype, "muteInitiator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "muteUpdateTime" }),
        __metadata("design:type", String)
    ], Finding.prototype, "muteUpdateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Finding.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nextSteps" }),
        __metadata("design:type", String)
    ], Finding.prototype, "nextSteps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: orgpolicyconstraint_1.OrgPolicyConstraint }),
        (0, class_transformer_1.Expose)({ name: "orgPolicyConstraints" }),
        (0, class_transformer_1.Type)(function () { return orgpolicyconstraint_1.OrgPolicyConstraint; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "orgPolicyConstraints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parent" }),
        __metadata("design:type", String)
    ], Finding.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parentDisplayName" }),
        __metadata("design:type", String)
    ], Finding.prototype, "parentDisplayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: process_1.Process }),
        (0, class_transformer_1.Expose)({ name: "processes" }),
        (0, class_transformer_1.Type)(function () { return process_1.Process; }),
        __metadata("design:type", Array)
    ], Finding.prototype, "processes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceName" }),
        __metadata("design:type", String)
    ], Finding.prototype, "resourceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "securityMarks" }),
        (0, class_transformer_1.Type)(function () { return securitymarks_1.SecurityMarks; }),
        __metadata("design:type", securitymarks_1.SecurityMarks)
    ], Finding.prototype, "securityMarks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "severity" }),
        __metadata("design:type", String)
    ], Finding.prototype, "severity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceProperties" }),
        __metadata("design:type", Object)
    ], Finding.prototype, "sourceProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], Finding.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vulnerability" }),
        (0, class_transformer_1.Type)(function () { return vulnerability_1.Vulnerability; }),
        __metadata("design:type", vulnerability_1.Vulnerability)
    ], Finding.prototype, "vulnerability", void 0);
    return Finding;
}(utils_1.SpeakeasyBase));
exports.Finding = Finding;
/**
 * Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
 */
var FindingInput = /** @class */ (function (_super) {
    __extends(FindingInput, _super);
    function FindingInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "access" }),
        (0, class_transformer_1.Type)(function () { return access_1.Access; }),
        __metadata("design:type", access_1.Access)
    ], FindingInput.prototype, "access", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canonicalName" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "canonicalName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloudDlpDataProfile" }),
        (0, class_transformer_1.Type)(function () { return clouddlpdataprofile_1.CloudDlpDataProfile; }),
        __metadata("design:type", clouddlpdataprofile_1.CloudDlpDataProfile)
    ], FindingInput.prototype, "cloudDlpDataProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloudDlpInspection" }),
        (0, class_transformer_1.Type)(function () { return clouddlpinspection_1.CloudDlpInspection; }),
        __metadata("design:type", clouddlpinspection_1.CloudDlpInspection)
    ], FindingInput.prototype, "cloudDlpInspection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: compliance_1.Compliance }),
        (0, class_transformer_1.Expose)({ name: "compliances" }),
        (0, class_transformer_1.Type)(function () { return compliance_1.Compliance; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "compliances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connection_1.Connection }),
        (0, class_transformer_1.Expose)({ name: "connections" }),
        (0, class_transformer_1.Type)(function () { return connection_1.Connection; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "connections", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: container_1.Container }),
        (0, class_transformer_1.Expose)({ name: "containers" }),
        (0, class_transformer_1.Type)(function () { return container_1.Container; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "containers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "database" }),
        (0, class_transformer_1.Type)(function () { return database_1.Database; }),
        __metadata("design:type", database_1.Database)
    ], FindingInput.prototype, "database", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eventTime" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "eventTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exfiltration" }),
        (0, class_transformer_1.Type)(function () { return exfiltration_1.Exfiltration; }),
        __metadata("design:type", exfiltration_1.Exfiltration)
    ], FindingInput.prototype, "exfiltration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "externalUri" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "externalUri", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: file_1.File }),
        (0, class_transformer_1.Expose)({ name: "files" }),
        (0, class_transformer_1.Type)(function () { return file_1.File; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "findingClass" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "findingClass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: iambinding_1.IamBinding }),
        (0, class_transformer_1.Expose)({ name: "iamBindings" }),
        (0, class_transformer_1.Type)(function () { return iambinding_1.IamBinding; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "iamBindings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indicator" }),
        (0, class_transformer_1.Type)(function () { return indicator_1.Indicator; }),
        __metadata("design:type", indicator_1.Indicator)
    ], FindingInput.prototype, "indicator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kernelRootkit" }),
        (0, class_transformer_1.Type)(function () { return kernelrootkit_1.KernelRootkit; }),
        __metadata("design:type", kernelrootkit_1.KernelRootkit)
    ], FindingInput.prototype, "kernelRootkit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kubernetes" }),
        (0, class_transformer_1.Type)(function () { return kubernetes_1.Kubernetes; }),
        __metadata("design:type", kubernetes_1.Kubernetes)
    ], FindingInput.prototype, "kubernetes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mitreAttack" }),
        (0, class_transformer_1.Type)(function () { return mitreattack_1.MitreAttack; }),
        __metadata("design:type", mitreattack_1.MitreAttack)
    ], FindingInput.prototype, "mitreAttack", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "moduleName" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "moduleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mute" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "mute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "muteInitiator" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "muteInitiator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nextSteps" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "nextSteps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: orgpolicyconstraint_1.OrgPolicyConstraint }),
        (0, class_transformer_1.Expose)({ name: "orgPolicyConstraints" }),
        (0, class_transformer_1.Type)(function () { return orgpolicyconstraint_1.OrgPolicyConstraint; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "orgPolicyConstraints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parent" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: process_1.Process }),
        (0, class_transformer_1.Expose)({ name: "processes" }),
        (0, class_transformer_1.Type)(function () { return process_1.Process; }),
        __metadata("design:type", Array)
    ], FindingInput.prototype, "processes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceName" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "resourceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "securityMarks" }),
        (0, class_transformer_1.Type)(function () { return securitymarks_1.SecurityMarks; }),
        __metadata("design:type", securitymarks_1.SecurityMarks)
    ], FindingInput.prototype, "securityMarks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "severity" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "severity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceProperties" }),
        __metadata("design:type", Object)
    ], FindingInput.prototype, "sourceProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], FindingInput.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vulnerability" }),
        (0, class_transformer_1.Type)(function () { return vulnerability_1.Vulnerability; }),
        __metadata("design:type", vulnerability_1.Vulnerability)
    ], FindingInput.prototype, "vulnerability", void 0);
    return FindingInput;
}(utils_1.SpeakeasyBase));
exports.FindingInput = FindingInput;
