/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DigitalWalletToken - A Digital Wallet Token is created when a user adds a Card to their Apple Pay or Google Pay app. The Digital Wallet Token can be used for purchases just like a Card.
 */
public class DigitalWalletToken {
    /**
     * The identifier for the Card this Digital Wallet Token belongs to.
     */
    @JsonProperty("card_id")
    public String cardId;
    public DigitalWalletToken withCardId(String cardId) {
        this.cardId = cardId;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public DigitalWalletToken withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The Digital Wallet Token identifier.
     */
    @JsonProperty("id")
    public String id;
    public DigitalWalletToken withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * This indicates if payments can be made with the Digital Wallet Token.
     */
    @JsonProperty("status")
    public DigitalWalletTokenStatusEnum status;
    public DigitalWalletToken withStatus(DigitalWalletTokenStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The digital wallet app being used.
     */
    @JsonProperty("token_requestor")
    public DigitalWalletTokenTokenRequestorEnum tokenRequestor;
    public DigitalWalletToken withTokenRequestor(DigitalWalletTokenTokenRequestorEnum tokenRequestor) {
        this.tokenRequestor = tokenRequestor;
        return this;
    }
    
    /**
     * A constant representing the object's type. For this resource it will always be `digital_wallet_token`.
     */
    @JsonProperty("type")
    public DigitalWalletTokenTypeEnum type;
    public DigitalWalletToken withType(DigitalWalletTokenTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
