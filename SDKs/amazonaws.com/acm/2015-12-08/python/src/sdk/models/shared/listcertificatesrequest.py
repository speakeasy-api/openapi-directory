"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import certificatestatus_enum as shared_certificatestatus_enum
from ..shared import filters as shared_filters
from ..shared import sortby_enum as shared_sortby_enum
from ..shared import sortorder_enum as shared_sortorder_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListCertificatesRequest:
    
    certificate_statuses: Optional[list[shared_certificatestatus_enum.CertificateStatusEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CertificateStatuses'), 'exclude': lambda f: f is None }})  
    includes: Optional[shared_filters.Filters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Includes'), 'exclude': lambda f: f is None }})  
    max_items: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxItems'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    sort_by: Optional[shared_sortby_enum.SortByEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SortBy'), 'exclude': lambda f: f is None }})  
    sort_order: Optional[shared_sortorder_enum.SortOrderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SortOrder'), 'exclude': lambda f: f is None }})  
    