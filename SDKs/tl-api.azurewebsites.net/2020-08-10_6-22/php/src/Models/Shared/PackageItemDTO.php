<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PackageItemDTO - The PackageItemDTO Class.
 * 
 * Contains relevant fields of PackageItem DTO by masking actual Package entity's fields in application.
 *             
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PackageItemDTO
{
    /**
     * Refer to ArticleId in Article table in DB.
     * 
     *             
     * 
     * @var int $articleId
     */
	#[\JMS\Serializer\Annotation\SerializedName('articleId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $articleId;
    
    /**
     * Name of the article(Addon) in a particular package.
     * 
     *              read only
     *             
     * 
     * @var ?string $articleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('articleName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $articleName = null;
    
    /**
     * Number assigned the article(Addon) in a particular package.
     * 
     *              read only
     *             
     * 
     * @var ?int $articleNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('articleNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $articleNumber = null;
    
    /**
     * Price of the article determined from that package.
     * 
     * Price of a same article can be varied from package to package.
     *             
     * 
     * @var ?float $articlePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('articlePrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $articlePrice = null;
    
    /**
     * Number of the installment this article is available to.
     * 
     *             
     * 
     * @var ?int $endOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('endOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $endOrder = null;
    
    /**
     * Is Included in service charge 
     * 
     * @var ?bool $isIncludeServiceInCharge
     */
	#[\JMS\Serializer\Annotation\SerializedName('isIncludeServiceInCharge')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isIncludeServiceInCharge = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('measureUnit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measureUnit = null;
    
    /**
     * How many article(Addon) is available for that package from that type.
     * 
     *             
     * 
     * @var ?float $numberOfItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfItems')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $numberOfItems = null;
    
    /**
     * Number of the installment this article is available from.
     * 
     *             
     * 
     * @var ?int $startOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('startOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $startOrder = null;
    
	public function __construct()
	{
		$this->articleId = 0;
		$this->articleName = null;
		$this->articleNumber = null;
		$this->articlePrice = null;
		$this->endOrder = null;
		$this->isIncludeServiceInCharge = null;
		$this->measureUnit = null;
		$this->numberOfItems = null;
		$this->startOrder = null;
	}
}
