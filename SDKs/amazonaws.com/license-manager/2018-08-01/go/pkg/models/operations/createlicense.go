// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateLicenseXAmzTargetEnum
type CreateLicenseXAmzTargetEnum string

const (
	CreateLicenseXAmzTargetEnumAwsLicenseManagerCreateLicense CreateLicenseXAmzTargetEnum = "AWSLicenseManager.CreateLicense"
)

func (e *CreateLicenseXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSLicenseManager.CreateLicense":
		*e = CreateLicenseXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateLicenseXAmzTargetEnum: %s", s)
	}
}

type CreateLicenseRequest struct {
	CreateLicenseRequest shared.CreateLicenseRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           CreateLicenseXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateLicenseResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// Success
	CreateLicenseResponse *shared.CreateLicenseResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	// RedirectException
	RedirectException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServerInternalException
	ServerInternalException interface{}
	// ValidationException
	ValidationException interface{}
}
