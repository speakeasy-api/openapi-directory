/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ExpiredCertPublicKey extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "algorithm" })
  algorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bits" })
  bits?: number;
}

export class ExpiredCert extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "file_hash" })
  fileHash?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_name" })
  fileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "public_key" })
  @Type(() => ExpiredCertPublicKey)
  publicKey?: ExpiredCertPublicKey;

  @SpeakeasyMetadata()
  @Expose({ name: "subject_name" })
  subjectName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thumb_print" })
  thumbPrint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "valid_from" })
  validFrom?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "valid_to" })
  validTo?: string;
}
