/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ConnectionLog extends SpeakeasyBase {
  /**
   * If fail, contains the error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  /**
   * If fail, error message received from connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_message" })
  errorMessage?: string;

  /**
   * MD5 hash of the exception backtrace
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_uid" })
  errorUid?: string;

  /**
   * Fields for connection in additionalInformationNeeded state with background option
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: string;

  /**
   * ID of the log
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * ID of the connection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_connection" })
  idConnection: number;

  /**
   * ID of the connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_connector" })
  idConnector?: number;

  /**
   * ID of the related connection source
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_source" })
  idSource?: number;

  /**
   * ID of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_user" })
  idUser?: number;

  /**
   * bcrypt hash of the login
   */
  @SpeakeasyMetadata()
  @Expose({ name: "login" })
  login?: string;

  /**
   * In case of bank connection, number of accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nb_accounts" })
  nbAccounts?: number;

  /**
   * If fail, the date represents the next try to connect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_try" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextTry?: Date;

  /**
   * Session folder uid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "session_folder_id" })
  sessionFolderId?: string;

  /**
   * Timestamp when the synchronization has started
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  start?: Date;

  /**
   * Status of user (1 = charged user)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statut" })
  statut?: number;

  /**
   * Timestamp of log, when the synchronization has finished
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  /**
   * Worker used to do synchronization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "worker" })
  worker?: string;
}
