// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GetNetworkWirelessSignalQualityHistoryBandEnum - Filter results by band (either '2.4', '5' or '6').
type GetNetworkWirelessSignalQualityHistoryBandEnum string

const (
	GetNetworkWirelessSignalQualityHistoryBandEnumTwo4 GetNetworkWirelessSignalQualityHistoryBandEnum = "2.4"
	GetNetworkWirelessSignalQualityHistoryBandEnumFive GetNetworkWirelessSignalQualityHistoryBandEnum = "5"
	GetNetworkWirelessSignalQualityHistoryBandEnumSix  GetNetworkWirelessSignalQualityHistoryBandEnum = "6"
)

func (e GetNetworkWirelessSignalQualityHistoryBandEnum) ToPointer() *GetNetworkWirelessSignalQualityHistoryBandEnum {
	return &e
}

func (e *GetNetworkWirelessSignalQualityHistoryBandEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2.4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		*e = GetNetworkWirelessSignalQualityHistoryBandEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkWirelessSignalQualityHistoryBandEnum: %v", v)
	}
}

type GetNetworkWirelessSignalQualityHistoryRequest struct {
	// Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.
	ApTag *string `queryParam:"style=form,explode=true,name=apTag"`
	// Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
	AutoResolution *bool `queryParam:"style=form,explode=true,name=autoResolution"`
	// Filter results by band (either '2.4', '5' or '6').
	Band *GetNetworkWirelessSignalQualityHistoryBandEnum `queryParam:"style=form,explode=true,name=band"`
	// Filter results by network client.
	ClientID *string `queryParam:"style=form,explode=true,name=clientId"`
	// Filter results by device.
	DeviceSerial *string `queryParam:"style=form,explode=true,name=deviceSerial"`
	NetworkID    string  `pathParam:"style=simple,explode=false,name=networkId"`
	// The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
	Resolution *int64 `queryParam:"style=form,explode=true,name=resolution"`
	// Filter results by SSID number.
	Ssid *int64 `queryParam:"style=form,explode=true,name=ssid"`
	// The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 *string `queryParam:"style=form,explode=true,name=t1"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
}

type GetNetworkWirelessSignalQualityHistory200ApplicationJSON struct {
	// The end time of the query range
	EndTs *time.Time `json:"endTs,omitempty"`
	// Received signal strength indicator
	Rssi *int64 `json:"rssi,omitempty"`
	// Signal to noise ratio
	Snr *int64 `json:"snr,omitempty"`
	// The start time of the query range
	StartTs *time.Time `json:"startTs,omitempty"`
}

type GetNetworkWirelessSignalQualityHistoryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkWirelessSignalQualityHistory200ApplicationJSONObjects []GetNetworkWirelessSignalQualityHistory200ApplicationJSON
}
