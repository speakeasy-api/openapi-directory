<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ContainersQuotaInfoSpaceQuota
{
    /**
     * The maximum number of public IP addresses that can be allocated to a space.
     * 
     * @var ?string $floatingIpsMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('floating_ips_max')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $floatingIpsMax = null;
    
    /**
     * The maximum amount of container memory that can be shared across all containers that are created in a space.
     * 
     * @var ?int $ramMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('ram_max')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ramMax = null;
    
    /**
     * The maximum number of private subnets that can be created in one space.
     * 
     * @var ?int $subnetsMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnets_max')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subnetsMax = null;
    
	public function __construct()
	{
		$this->floatingIpsMax = null;
		$this->ramMax = null;
		$this->subnetsMax = null;
	}
}
