/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IndividualNameInput - The Individual Name resource.
 */
public class IndividualNameInput {
    /**
     * The direction used to render the individual's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public IndividualNameDirectionEnum direction;
    public IndividualNameInput withDirection(IndividualNameDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The individual's family name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("familyName")
    public String familyName;
    public IndividualNameInput withFamilyName(String familyName) {
        this.familyName = familyName;
        return this;
    }
    
    /**
     * The individual's formal salutation, for example, "Mr William Smith".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formalSalutation")
    public String formalSalutation;
    public IndividualNameInput withFormalSalutation(String formalSalutation) {
        this.formalSalutation = formalSalutation;
        return this;
    }
    
    /**
     * The individual's given name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("givenName")
    public String givenName;
    public IndividualNameInput withGivenName(String givenName) {
        this.givenName = givenName;
        return this;
    }
    
    /**
     * The individual's informal salutation, for example, "Bill".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("informalSalutation")
    public String informalSalutation;
    public IndividualNameInput withInformalSalutation(String informalSalutation) {
        this.informalSalutation = informalSalutation;
        return this;
    }
    
    /**
     * The individual's middle name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middleName")
    public String middleName;
    public IndividualNameInput withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    /**
     * The individual's name prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namePrefix")
    public IndividualNameNamePrefixEnum namePrefix;
    public IndividualNameInput withNamePrefix(IndividualNameNamePrefixEnum namePrefix) {
        this.namePrefix = namePrefix;
        return this;
    }
    
    /**
     * The individual's name suffix, for example, "Jr" or "Sr".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nameSuffix")
    public String nameSuffix;
    public IndividualNameInput withNameSuffix(String nameSuffix) {
        this.nameSuffix = nameSuffix;
        return this;
    }
    
    /**
     * The name type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nameType")
    public IndividualNameNameTypeEnum nameType;
    public IndividualNameInput withNameType(IndividualNameNameTypeEnum nameType) {
        this.nameType = nameType;
        return this;
    }
    
}
