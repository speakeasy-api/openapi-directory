"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileSurvey = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var ProfileSurvey = /** @class */ (function (_super) {
    __extends(ProfileSurvey, _super);
    function ProfileSurvey() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "current_services" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "currentServices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "daily_proofreading_capacity" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "dailyProofreadingCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "daily_translation_capacity" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "dailyTranslationCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dtp_software" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "dtpSoftware", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "experience" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "experience", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_certified_translator" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "isCertifiedTranslator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_sworn_translator" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "isSwornTranslator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memoq" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "memoq", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memsource" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "memsource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "omegat" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "omegat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "proofreader_experience" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "proofreaderExperience", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provides_creative_writing_service" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "providesCreativeWritingService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provides_postedit_service" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "providesPosteditService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reference" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "reference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sdl_trados" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "sdlTrados", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "skype_id" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "skypeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "smartcat" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "smartcat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "smartling" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "smartling", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "software" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "software", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "specialization" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "specialization", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subtitle_edit" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "subtitleEdit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subtitle_workshop" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "subtitleWorkshop", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "translator_association" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "translatorAssociation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transsuite_2000" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "transsuite2000", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vendor_profile_lsp" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "vendorProfileLsp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wordbee" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "wordbee", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wordfast" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "wordfast", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "work_type" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "workType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "work_with" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "workWith", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "working_as" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "workingAs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "working_timezone" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "workingTimezone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xbench" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "xbench", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xtm" }),
        __metadata("design:type", String)
    ], ProfileSurvey.prototype, "xtm", void 0);
    return ProfileSurvey;
}(utils_1.SpeakeasyBase));
exports.ProfileSurvey = ProfileSurvey;
