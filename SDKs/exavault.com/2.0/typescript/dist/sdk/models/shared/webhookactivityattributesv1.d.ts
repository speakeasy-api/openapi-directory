import { SpeakeasyBase } from "../../../internal/utils";
export declare class WebhookActivityAttributesV1WebhookV1Details extends SpeakeasyBase {
    /**
     * Account master username
     */
    accountName?: string;
    /**
     * Number of times the system has attempted to send
     */
    attempt?: number;
    /**
     * Entry - retry identifier
     */
    attemptId?: string;
    /**
     * Type of related activity
     */
    event?: string;
    /**
     * Type of connection used for related activity
     */
    protocol?: string;
    /**
     * Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or "publ
     */
    username?: string;
}
/**
 * Event type
 */
export declare enum WebhookActivityAttributesV1EventEnum {
    ResourcesUpload = "resources.upload",
    ResourcesDownload = "resources.download",
    ResourcesDelete = "resources.delete",
    ResourcesRename = "resources.rename",
    ResourcesCopy = "resources.copy",
    ResourcesMove = "resources.move",
    ResourcesCompress = "resources.compress",
    ResourcesExtract = "resources.extract",
    ResourcesCreateFolder = "resources.createFolder",
    SharesFormSubmit = "shares.formSubmit"
}
export declare class WebhookActivityAttributesV1 extends SpeakeasyBase {
    /**
     * Unique ID of account
     */
    accountId?: string;
    /**
     * Event - retry identifier
     */
    attemptId?: string;
    /**
     * Date and time of webhook message being generated by system
     */
    created?: string;
    details?: WebhookActivityAttributesV1WebhookV1Details;
    /**
     * The URL the message was sent to
     */
    endpointUrl?: string;
    /**
     * Event type
     */
    event?: WebhookActivityAttributesV1EventEnum;
    /**
     * IP Address of related activity
     */
    ipAddress?: string;
    /**
     * Whether this attempt was a re-send of a previous attempt
     */
    resend?: boolean;
    /**
     * Path of resource that matched webhook
     */
    resourcePath?: string;
    /**
     * Body of web response returned by webhook listener
     */
    response?: string;
    /**
     * HTTP Status Code returned by webhook listener
     */
    status?: number;
    /**
     * Username of related activity
     */
    username?: string;
    /**
     * What version of webhook message is being sent `v1`
     */
    webhookFormat?: string;
    /**
     * Unique ID of webhook configuration
     */
    webhookId?: number;
    /**
     * Path that webhook is watching
     */
    webhookPath?: string;
}
