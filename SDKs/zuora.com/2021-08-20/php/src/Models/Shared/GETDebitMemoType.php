<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GETDebitMemoType - Container for custom fields of a Debit Memo object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GETDebitMemoType
{
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     * 
     * 
     * @var ?string $integrationIdNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('IntegrationId__NS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $integrationIdNS = null;
    
    /**
     * Status of the debit memo's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     * 
     * 
     * @var ?string $integrationStatusNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('IntegrationStatus__NS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $integrationStatusNS = null;
    
    /**
     * Date when the debit memo was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     * 
     * 
     * @var ?string $syncDateNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('SyncDate__NS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $syncDateNS = null;
    
    /**
     * The ID of the customer account associated with the debit memo.
     * 
     * 
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * The total amount of the debit memo.
     * 
     * 
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * Whether debit memos are automatically picked up for processing in the corresponding payment run. 
     * 
     * 
     * By default, debit memos are automatically picked up for processing in the corresponding payment run.
     * 
     * 
     * @var ?bool $autoPay
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoPay')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoPay = null;
    
    /**
     * The balance of the debit memo.
     * 
     * 
     * 
     * @var ?float $balance
     */
	#[\JMS\Serializer\Annotation\SerializedName('balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $balance = null;
    
    /**
     * The amount that is applied to the debit memo.
     * 
     * 
     * 
     * @var ?float $beAppliedAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('beAppliedAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $beAppliedAmount = null;
    
    /**
     * The ID of the Zuora user who cancelled the debit memo.
     * 
     * 
     * 
     * @var ?string $cancelledById
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancelledById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cancelledById = null;
    
    /**
     * The date and time when the debit memo was cancelled, in `yyyy-mm-dd hh:mm:ss` format.
     * 
     * 
     * 
     * @var ?\DateTime $cancelledOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancelledOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $cancelledOn = null;
    
    /**
     * Comments about the debit memo.
     * 
     * 
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * The ID of the Zuora user who created the debit memo.
     * 
     * 
     * 
     * @var ?string $createdById
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdById = null;
    
    /**
     * The date and time when the debit memo was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
     * 
     * 
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     * The date when the debit memo takes effect, in `yyyy-mm-dd` format. For example, 2017-05-20.
     * 
     * 
     * 
     * @var ?\DateTime $debitMemoDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('debitMemoDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $debitMemoDate = null;
    
    /**
     * The date by which the payment for the debit memo is due, in `yyyy-mm-dd` format.
     * 
     * 
     * 
     * @var ?\DateTime $dueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('dueDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dueDate = null;
    
    /**
     * The unique ID of the debit memo.
     * 
     * 
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The ID of the latest PDF file generated for the debit memo.
     * 
     * 
     * 
     * @var ?string $latestPDFFileId
     */
	#[\JMS\Serializer\Annotation\SerializedName('latestPDFFileId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $latestPDFFileId = null;
    
    /**
     * The unique identification number of the debit memo.
     * 
     * 
     * 
     * @var ?string $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
    /**
     * The ID of the Zuora user who posted the debit memo. 
     * 
     * 
     * 
     * @var ?string $postedById
     */
	#[\JMS\Serializer\Annotation\SerializedName('postedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postedById = null;
    
    /**
     * The date and time when the debit memo was posted, in `yyyy-mm-dd hh:mm:ss` format.
     * 
     * 
     * 
     * @var ?\DateTime $postedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('postedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $postedOn = null;
    
    /**
     * A code identifying the reason for the transaction. The value must be an existing reason code or empty.
     * 
     * 
     * 
     * @var ?string $reasonCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('reasonCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reasonCode = null;
    
    /**
     * The ID of a referred invoice.
     * 
     * 
     * 
     * @var ?string $referredInvoiceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('referredInvoiceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $referredInvoiceId = null;
    
    /**
     * The status of the debit memo.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETDebitMemoTypeStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETDebitMemoTypeStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETDebitMemoTypeStatusEnum $status = null;
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     * @var ?bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $success = null;
    
    /**
     * The target date for the debit memo, in `yyyy-mm-dd` format. For example, 2017-07-20.
     * 
     * 
     * 
     * @var ?\DateTime $targetDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $targetDate = null;
    
    /**
     * The amount of taxation.
     * 
     * 
     * 
     * @var ?float $taxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $taxAmount = null;
    
    /**
     * The message about the status of tax calculation related to the debit memo. If tax calculation fails in one debit memo, this field displays the reason for the failure.
     * 
     * 
     * 
     * @var ?string $taxMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxMessage = null;
    
    /**
     * The status of tax calculation related to the debit memo.
     * 
     * 
     * **Note**: This field is only applicable to tax calculation by third-party tax engines.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETDebitMemoTypeTaxStatusEnum $taxStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETDebitMemoTypeTaxStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETDebitMemoTypeTaxStatusEnum $taxStatus = null;
    
    /**
     * The total amount of taxes or VAT for which the customer has an exemption.
     * 
     * 
     * 
     * @var ?float $totalTaxExemptAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalTaxExemptAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalTaxExemptAmount = null;
    
    /**
     * Whether the debit memo was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite. 
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETDebitMemoTypeTransferredToAccountingEnum $transferredToAccounting
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferredToAccounting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETDebitMemoTypeTransferredToAccountingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETDebitMemoTypeTransferredToAccountingEnum $transferredToAccounting = null;
    
    /**
     * The ID of the Zuora user who last updated the debit memo.
     * 
     * 
     * 
     * @var ?string $updatedById
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedById = null;
    
    /**
     * The date and time when the debit memo was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
     * 
     * 
     * 
     * @var ?\DateTime $updatedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedDate = null;
    
	public function __construct()
	{
		$this->integrationIdNS = null;
		$this->integrationStatusNS = null;
		$this->syncDateNS = null;
		$this->accountId = null;
		$this->amount = null;
		$this->autoPay = null;
		$this->balance = null;
		$this->beAppliedAmount = null;
		$this->cancelledById = null;
		$this->cancelledOn = null;
		$this->comment = null;
		$this->createdById = null;
		$this->createdDate = null;
		$this->debitMemoDate = null;
		$this->dueDate = null;
		$this->id = null;
		$this->latestPDFFileId = null;
		$this->number = null;
		$this->postedById = null;
		$this->postedOn = null;
		$this->reasonCode = null;
		$this->referredInvoiceId = null;
		$this->status = null;
		$this->success = null;
		$this->targetDate = null;
		$this->taxAmount = null;
		$this->taxMessage = null;
		$this->taxStatus = null;
		$this->totalTaxExemptAmount = null;
		$this->transferredToAccounting = null;
		$this->updatedById = null;
		$this->updatedDate = null;
	}
}
