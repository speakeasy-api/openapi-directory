<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkSwitchAccessControlListsRequestBodyRules
{
    /**
     * Description of the rule (optional).
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * Destination IP address (in IP or CIDR notation) or 'any'.
     * 
     * @var string $dstCidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('dstCidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $dstCidr;
    
    /**
     * Destination port. Must be in the range of 1-65535 or 'any'. Default is 'any'.
     * 
     * @var ?string $dstPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('dstPort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dstPort = null;
    
    /**
     * IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable only if network supports IPv6. Default value is 'ipv4'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesIpVersionEnum $ipVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipVersion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesIpVersionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkSwitchAccessControlListsRequestBodyRulesIpVersionEnum $ipVersion = null;
    
    /**
     * 'allow' or 'deny' traffic specified by this rule.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesPolicyEnum $policy
     */
	#[\JMS\Serializer\Annotation\SerializedName('policy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesPolicyEnum>')]
    public UpdateNetworkSwitchAccessControlListsRequestBodyRulesPolicyEnum $policy;
    
    /**
     * The type of protocol (must be 'tcp', 'udp', or 'any').
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesProtocolEnum $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesProtocolEnum>')]
    public UpdateNetworkSwitchAccessControlListsRequestBodyRulesProtocolEnum $protocol;
    
    /**
     * Source IP address (in IP or CIDR notation) or 'any'.
     * 
     * @var string $srcCidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('srcCidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $srcCidr;
    
    /**
     * Source port. Must be in the range  of 1-65535 or 'any'. Default is 'any'.
     * 
     * @var ?string $srcPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('srcPort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $srcPort = null;
    
    /**
     * Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'. Default is 'any'.
     * 
     * @var ?string $vlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('vlan')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vlan = null;
    
	public function __construct()
	{
		$this->comment = null;
		$this->dstCidr = "";
		$this->dstPort = null;
		$this->ipVersion = null;
		$this->policy = \OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesPolicyEnum::ALLOW;
		$this->protocol = \OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAccessControlListsRequestBodyRulesProtocolEnum::ANY;
		$this->srcCidr = "";
		$this->srcPort = null;
		$this->vlan = null;
	}
}
