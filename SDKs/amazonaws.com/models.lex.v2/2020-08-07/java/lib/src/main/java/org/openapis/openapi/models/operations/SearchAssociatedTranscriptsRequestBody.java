/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SearchAssociatedTranscriptsRequestBody {
    /**
     * A list of filter objects.
     */
    @JsonProperty("filters")
    public org.openapis.openapi.models.shared.AssociatedTranscriptFilter[] filters;
    public SearchAssociatedTranscriptsRequestBody withFilters(org.openapis.openapi.models.shared.AssociatedTranscriptFilter[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * The maximum number of bot recommendations to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;
    public SearchAssociatedTranscriptsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * If the response from the SearchAssociatedTranscriptsRequest operation contains more results than specified in the maxResults parameter, an index is returned in the response. Use that index in the nextIndex parameter to return the next page of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextIndex")
    public Long nextIndex;
    public SearchAssociatedTranscriptsRequestBody withNextIndex(Long nextIndex) {
        this.nextIndex = nextIndex;
        return this;
    }
    
    /**
     * How SearchResults are ordered. Valid values are Ascending or Descending. The default is Descending.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchOrder")
    public SearchAssociatedTranscriptsRequestBodySearchOrderEnum searchOrder;
    public SearchAssociatedTranscriptsRequestBody withSearchOrder(SearchAssociatedTranscriptsRequestBodySearchOrderEnum searchOrder) {
        this.searchOrder = searchOrder;
        return this;
    }
    
}
