"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import check_suite as shared_check_suite
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChecksCreateSuiteRequestBody:
    
    head_sha: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('head_sha') }})
    r"""The sha of the head commit."""  
    

@dataclasses.dataclass
class ChecksCreateSuiteRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: ChecksCreateSuiteRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ChecksCreateSuiteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    check_suite: Optional[shared_check_suite.CheckSuite] = dataclasses.field(default=None)
    r"""Response when the suite already exists"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    