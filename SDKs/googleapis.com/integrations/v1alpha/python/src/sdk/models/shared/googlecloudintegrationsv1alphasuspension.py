"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprotosuspensionconfig as shared_enterprisecrmeventbusprotosuspensionconfig
from ..shared import googlecloudintegrationsv1alphasuspensionapprovalconfig as shared_googlecloudintegrationsv1alphasuspensionapprovalconfig
from ..shared import googlecloudintegrationsv1alphasuspensionaudit as shared_googlecloudintegrationsv1alphasuspensionaudit
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudIntegrationsV1alphaSuspensionStateEnum(str, Enum):
    r"""Required. State of this suspension, indicating what action a resolver has taken."""
    RESOLUTION_STATE_UNSPECIFIED = 'RESOLUTION_STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    REJECTED = 'REJECTED'
    LIFTED = 'LIFTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaSuspensionInput:
    r"""A record representing a suspension."""
    
    approval_config: Optional[shared_googlecloudintegrationsv1alphasuspensionapprovalconfig.GoogleCloudIntegrationsV1alphaSuspensionApprovalConfigInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approvalConfig'), 'exclude': lambda f: f is None }})
    r"""Configurations for approving the Suspension."""  
    audit: Optional[shared_googlecloudintegrationsv1alphasuspensionaudit.GoogleCloudIntegrationsV1alphaSuspensionAudit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audit'), 'exclude': lambda f: f is None }})
    r"""Contains when and by whom the suspension was resolved."""  
    event_execution_info_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventExecutionInfoId'), 'exclude': lambda f: f is None }})
    r"""Required. ID of the associated execution."""  
    integration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the originating integration."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name for suspensions suspension/{suspension_id}"""  
    state: Optional[GoogleCloudIntegrationsV1alphaSuspensionStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Required. State of this suspension, indicating what action a resolver has taken."""  
    suspension_config: Optional[shared_enterprisecrmeventbusprotosuspensionconfig.EnterpriseCrmEventbusProtoSuspensionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suspensionConfig'), 'exclude': lambda f: f is None }})  
    task_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskId'), 'exclude': lambda f: f is None }})
    r"""Required. Task id of the associated SuspensionTask."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaSuspension:
    r"""A record representing a suspension."""
    
    approval_config: Optional[shared_googlecloudintegrationsv1alphasuspensionapprovalconfig.GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approvalConfig'), 'exclude': lambda f: f is None }})
    r"""Configurations for approving the Suspension."""  
    audit: Optional[shared_googlecloudintegrationsv1alphasuspensionaudit.GoogleCloudIntegrationsV1alphaSuspensionAudit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audit'), 'exclude': lambda f: f is None }})
    r"""Contains when and by whom the suspension was resolved."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Auto-generated."""  
    event_execution_info_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventExecutionInfoId'), 'exclude': lambda f: f is None }})
    r"""Required. ID of the associated execution."""  
    integration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the originating integration."""  
    last_modify_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastModifyTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Auto-generated."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name for suspensions suspension/{suspension_id}"""  
    state: Optional[GoogleCloudIntegrationsV1alphaSuspensionStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Required. State of this suspension, indicating what action a resolver has taken."""  
    suspension_config: Optional[shared_enterprisecrmeventbusprotosuspensionconfig.EnterpriseCrmEventbusProtoSuspensionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suspensionConfig'), 'exclude': lambda f: f is None }})  
    task_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskId'), 'exclude': lambda f: f is None }})
    r"""Required. Task id of the associated SuspensionTask."""  
    