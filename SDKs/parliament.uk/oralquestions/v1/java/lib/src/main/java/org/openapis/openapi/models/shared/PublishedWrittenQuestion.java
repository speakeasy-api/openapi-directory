/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class PublishedWrittenQuestion {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Answer")
    public String answer;

    public PublishedWrittenQuestion withAnswer(String answer) {
        this.answer = answer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AnsweredWhen")
    public OffsetDateTime answeredWhen;

    public PublishedWrittenQuestion withAnsweredWhen(OffsetDateTime answeredWhen) {
        this.answeredWhen = answeredWhen;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnsweringBody")
    public String answeringBody;

    public PublishedWrittenQuestion withAnsweringBody(String answeringBody) {
        this.answeringBody = answeringBody;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnsweringBodyId")
    public Integer answeringBodyId;

    public PublishedWrittenQuestion withAnsweringBodyId(Integer answeringBodyId) {
        this.answeringBodyId = answeringBodyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnsweringMinister")
    public MemberForDate answeringMinister;

    public PublishedWrittenQuestion withAnsweringMinister(MemberForDate answeringMinister) {
        this.answeringMinister = answeringMinister;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnsweringMinisterId")
    public Integer answeringMinisterId;

    public PublishedWrittenQuestion withAnsweringMinisterId(Integer answeringMinisterId) {
        this.answeringMinisterId = answeringMinisterId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnsweringMinisterTitle")
    public String answeringMinisterTitle;

    public PublishedWrittenQuestion withAnsweringMinisterTitle(String answeringMinisterTitle) {
        this.answeringMinisterTitle = answeringMinisterTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AskingMember")
    public MemberForDate askingMember;

    public PublishedWrittenQuestion withAskingMember(MemberForDate askingMember) {
        this.askingMember = askingMember;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AskingMemberId")
    public Integer askingMemberId;

    public PublishedWrittenQuestion withAskingMemberId(Integer askingMemberId) {
        this.askingMemberId = askingMemberId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("DueForAnswer")
    public OffsetDateTime dueForAnswer;

    public PublishedWrittenQuestion withDueForAnswer(OffsetDateTime dueForAnswer) {
        this.dueForAnswer = dueForAnswer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;

    public PublishedWrittenQuestion withId(Integer id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuestionText")
    public String questionText;

    public PublishedWrittenQuestion withQuestionText(String questionText) {
        this.questionText = questionText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuestionType")
    public PublishedWrittenQuestionQuestionTypeEnum questionType;

    public PublishedWrittenQuestion withQuestionType(PublishedWrittenQuestionQuestionTypeEnum questionType) {
        this.questionType = questionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TabledWhen")
    public OffsetDateTime tabledWhen;

    public PublishedWrittenQuestion withTabledWhen(OffsetDateTime tabledWhen) {
        this.tabledWhen = tabledWhen;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UIN")
    public Integer uin;

    public PublishedWrittenQuestion withUin(Integer uin) {
        this.uin = uin;
        return this;
    }
    
    public PublishedWrittenQuestion(){}
}
