// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetTrackingSourcesSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetTrackingSourcesRequest struct {
	// The webinar ID in "**long**" format(represented as int64 data type in JSON).
	WebinarID int64 `pathParam:"style=simple,explode=false,name=webinarId"`
}

type GetTrackingSources200ApplicationXMLTrackingSources struct {
	// Unique Identifier of the tracking source.
	ID *string
	// Number of registrations made from this source.
	RegistrationCount *int64
	// Name of the source (platform) where the registration URL was shared.
	SourceName *string
	// Tracking URL. The URL that was shared for the registration.
	TrackingURL *string
	// Number of visitors who visited the registration page from this source.
	VisitorCount *int64
}

// GetTrackingSources200ApplicationXML - **HTTP Status Code:** `200`
type GetTrackingSources200ApplicationXML struct {
	// The total number of registration records for this Webinar.
	TotalRecords *int64
	// Tracking Sources object.
	TrackingSources []GetTrackingSources200ApplicationXMLTrackingSources
}

type GetTrackingSources200ApplicationJSONTrackingSources struct {
	// Unique Identifier of the tracking source.
	ID *string `json:"id,omitempty"`
	// Number of registrations made from this source.
	RegistrationCount *int64 `json:"registration_count,omitempty"`
	// Name of the source (platform) where the registration URL was shared.
	SourceName *string `json:"source_name,omitempty"`
	// Tracking URL. The URL that was shared for the registration.
	TrackingURL *string `json:"tracking_url,omitempty"`
	// Number of visitors who visited the registration page from this source.
	VisitorCount *int64 `json:"visitor_count,omitempty"`
}

// GetTrackingSources200ApplicationJSON - **HTTP Status Code:** `200`
type GetTrackingSources200ApplicationJSON struct {
	// The total number of registration records for this Webinar.
	TotalRecords *int64 `json:"total_records,omitempty"`
	// Tracking Sources object.
	TrackingSources []GetTrackingSources200ApplicationJSONTrackingSources `json:"tracking_sources,omitempty"`
}

type GetTrackingSourcesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`
	GetTrackingSources200ApplicationJSONObject *GetTrackingSources200ApplicationJSON
}
