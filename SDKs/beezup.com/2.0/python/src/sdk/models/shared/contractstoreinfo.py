"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContractStoreInfo:
    r"""Describe the store information related to the offer."""
    
    additional_store_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalStorePrice'), 'exclude': lambda f: f is None }})
    r"""The additional store price."""  
    max_store_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxStoreCount'), 'exclude': lambda f: f is None }})
    r"""The maximum store count related to the offer."""  
    min_store_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minStoreCount'), 'exclude': lambda f: f is None }})
    r"""The minimum store count related to the offer."""  
    owned_store_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ownedStoreCount'), 'exclude': lambda f: f is None }})
    r"""The owned store count."""  
    store_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeCount'), 'exclude': lambda f: f is None }})
    r"""The store count you want to have in your contract."""  
    store_included: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeIncluded'), 'exclude': lambda f: f is None }})
    r"""The store count included in the offer."""  
    