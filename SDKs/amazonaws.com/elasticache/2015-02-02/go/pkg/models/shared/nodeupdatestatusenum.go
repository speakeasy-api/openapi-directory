// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NodeUpdateStatusEnum string

const (
	NodeUpdateStatusEnumNotApplied     NodeUpdateStatusEnum = "not-applied"
	NodeUpdateStatusEnumWaitingToStart NodeUpdateStatusEnum = "waiting-to-start"
	NodeUpdateStatusEnumInProgress     NodeUpdateStatusEnum = "in-progress"
	NodeUpdateStatusEnumStopping       NodeUpdateStatusEnum = "stopping"
	NodeUpdateStatusEnumStopped        NodeUpdateStatusEnum = "stopped"
	NodeUpdateStatusEnumComplete       NodeUpdateStatusEnum = "complete"
)

func (e *NodeUpdateStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "not-applied":
		fallthrough
	case "waiting-to-start":
		fallthrough
	case "in-progress":
		fallthrough
	case "stopping":
		fallthrough
	case "stopped":
		fallthrough
	case "complete":
		*e = NodeUpdateStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeUpdateStatusEnum: %s", s)
	}
}
