/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetApiV1MediasSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  bearerHeader: string;
}

/**
 * Sorting to be applied to the query. For more info: https://jsonapi.org/format/#fetching-sorting
 */
export enum GetApiV1MediasSortEnum {
  CreatedAt = "created_at",
  MinusCreatedAt = "-created_at",
  OriginalCreatedAt = "original_created_at",
  MinusOriginalCreatedAt = "-original_created_at",
  Name = "name",
  MinusName = "-name",
}

export class GetApiV1MediasRequest extends SpeakeasyBase {
  /**
   * Filters to be applied to the query.
   *
   * @remarks
   *
   * Query params in the url must look like this: "filter[attributeName_*matcher*]"
   *
   * (i.e. filter[name_eq]=chimp%20into%20space)
   *
   * Available matchers can be found here: https://activerecord-hackery.github.io/ransack/getting-started/search-matches/
   *
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=deepObject;explode=true;name=filter",
  })
  filter?: Record<string, any>;

  /**
   * Specify page number and page size for the query
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=deepObject;explode=true;name=page",
  })
  page?: Record<string, any>;

  /**
   * Sorting to be applied to the query. For more info: https://jsonapi.org/format/#fetching-sorting
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetApiV1MediasSortEnum;
}

export class GetApiV1MediasResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
