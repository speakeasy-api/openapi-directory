/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetRealmEventsRequest extends SpeakeasyBase {
  /**
   * App or oauth client name
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client",
  })
  client?: string;

  /**
   * From date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dateFrom",
  })
  dateFrom?: string;

  /**
   * To date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dateTo",
  })
  dateTo?: string;

  /**
   * Paging offset
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=first" })
  first?: number;

  /**
   * IP address
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ipAddress",
  })
  ipAddress?: string;

  /**
   * Maximum results size (defaults to 100)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=max" })
  max?: number;

  /**
   * realm name (not id!)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=realm",
  })
  realm: string;

  /**
   * The types of events to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string[];

  /**
   * User id
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user" })
  user?: string;
}

export class GetRealmEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * success
   */
  @SpeakeasyMetadata({ elemType: shared.EventRepresentation })
  eventRepresentations?: shared.EventRepresentation[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
