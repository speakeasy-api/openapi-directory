// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type APICacheTypeEnum string

const (
	APICacheTypeEnumT2Small   APICacheTypeEnum = "T2_SMALL"
	APICacheTypeEnumT2Medium  APICacheTypeEnum = "T2_MEDIUM"
	APICacheTypeEnumR4Large   APICacheTypeEnum = "R4_LARGE"
	APICacheTypeEnumR4Xlarge  APICacheTypeEnum = "R4_XLARGE"
	APICacheTypeEnumR42Xlarge APICacheTypeEnum = "R4_2XLARGE"
	APICacheTypeEnumR44Xlarge APICacheTypeEnum = "R4_4XLARGE"
	APICacheTypeEnumR48Xlarge APICacheTypeEnum = "R4_8XLARGE"
	APICacheTypeEnumSmall     APICacheTypeEnum = "SMALL"
	APICacheTypeEnumMedium    APICacheTypeEnum = "MEDIUM"
	APICacheTypeEnumLarge     APICacheTypeEnum = "LARGE"
	APICacheTypeEnumXlarge    APICacheTypeEnum = "XLARGE"
	APICacheTypeEnumLarge2X   APICacheTypeEnum = "LARGE_2X"
	APICacheTypeEnumLarge4X   APICacheTypeEnum = "LARGE_4X"
	APICacheTypeEnumLarge8X   APICacheTypeEnum = "LARGE_8X"
	APICacheTypeEnumLarge12X  APICacheTypeEnum = "LARGE_12X"
)

func (e APICacheTypeEnum) ToPointer() *APICacheTypeEnum {
	return &e
}

func (e *APICacheTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "T2_SMALL":
		fallthrough
	case "T2_MEDIUM":
		fallthrough
	case "R4_LARGE":
		fallthrough
	case "R4_XLARGE":
		fallthrough
	case "R4_2XLARGE":
		fallthrough
	case "R4_4XLARGE":
		fallthrough
	case "R4_8XLARGE":
		fallthrough
	case "SMALL":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LARGE":
		fallthrough
	case "XLARGE":
		fallthrough
	case "LARGE_2X":
		fallthrough
	case "LARGE_4X":
		fallthrough
	case "LARGE_8X":
		fallthrough
	case "LARGE_12X":
		*e = APICacheTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APICacheTypeEnum: %v", v)
	}
}
