// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExperimentStatusEnum string

const (
	ExperimentStatusEnumPending    ExperimentStatusEnum = "pending"
	ExperimentStatusEnumInitiating ExperimentStatusEnum = "initiating"
	ExperimentStatusEnumRunning    ExperimentStatusEnum = "running"
	ExperimentStatusEnumCompleted  ExperimentStatusEnum = "completed"
	ExperimentStatusEnumStopping   ExperimentStatusEnum = "stopping"
	ExperimentStatusEnumStopped    ExperimentStatusEnum = "stopped"
	ExperimentStatusEnumFailed     ExperimentStatusEnum = "failed"
)

func (e ExperimentStatusEnum) ToPointer() *ExperimentStatusEnum {
	return &e
}

func (e *ExperimentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "initiating":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		fallthrough
	case "stopping":
		fallthrough
	case "stopped":
		fallthrough
	case "failed":
		*e = ExperimentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExperimentStatusEnum: %v", v)
	}
}
