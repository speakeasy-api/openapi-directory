"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accounttype as shared_accounttype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetUsersIDUserAccountTypesRequest:
    
    id_user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id_user', 'style': 'simple', 'explode': False }})
    r"""Hint: you can use 'me' or 'all'"""  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetUsersIDUserAccountTypes200ApplicationJSON:
    r"""accounttypes"""
    
    accounttypes: list[shared_accounttype.AccountType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounttypes') }})  
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""total number of results"""  
    

@dataclasses.dataclass
class GetUsersIDUserAccountTypesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_users_id_user_account_types_200_application_json_object: Optional[GetUsersIDUserAccountTypes200ApplicationJSON] = dataclasses.field(default=None)
    r"""accounttypes"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    