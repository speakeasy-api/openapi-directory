// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PresenceMessageActionEnum - The event signified by a PresenceMessage.
type PresenceMessageActionEnum string

const (
	PresenceMessageActionEnumAbsent  PresenceMessageActionEnum = "ABSENT"
	PresenceMessageActionEnumPresent PresenceMessageActionEnum = "PRESENT"
	PresenceMessageActionEnumEnter   PresenceMessageActionEnum = "ENTER"
	PresenceMessageActionEnumLeave   PresenceMessageActionEnum = "LEAVE"
	PresenceMessageActionEnumUpdate  PresenceMessageActionEnum = "UPDATE"
)

func (e PresenceMessageActionEnum) ToPointer() *PresenceMessageActionEnum {
	return &e
}

func (e *PresenceMessageActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ABSENT":
		fallthrough
	case "PRESENT":
		fallthrough
	case "ENTER":
		fallthrough
	case "LEAVE":
		fallthrough
	case "UPDATE":
		*e = PresenceMessageActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PresenceMessageActionEnum: %v", v)
	}
}

type PresenceMessage struct {
	// The event signified by a PresenceMessage.
	Action *PresenceMessageActionEnum `json:"action,omitempty"`
	// The client ID of the publisher of this presence update.
	ClientID *string `json:"clientId,omitempty"`
	// The connection ID of the publisher of this presence update.
	ConnectionID *string `json:"connectionId,omitempty"`
	// The presence update payload, if provided.
	Data *string `json:"data,omitempty"`
	// This will typically be empty as all presence updates received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the data payload.
	Encoding *string `json:"encoding,omitempty"`
	// Extras object. Currently only allows for [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example) extra.
	Extras *Extras `json:"extras,omitempty"`
	// Unique ID assigned by Ably to this presence update.
	ID *string `json:"id,omitempty"`
	// Timestamp when the presence update was received by Ably, as milliseconds since the epoch.
	Timestamp *int64 `json:"timestamp,omitempty"`
}
