<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InventoryVaccine - Created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InventoryVaccine
{
    /**
     * ID of `/api/inventory_categories`
     * 
     * @var ?int $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $category = null;
    
    /**
     * Base cost for consumables.
     * 
     * @var ?float $cost
     */
	#[\JMS\Serializer\Annotation\SerializedName('cost')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cost = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * This field can onlyu be changed by creating new patient vaccine record. Current quantity of an inventory vaccine is calculated by subtract number of records pointing to this inventory from the original quantity value.
     * 
     * @var ?int $currentQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_quantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $currentQuantity = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('cvx_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cvxCode = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('doctor')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $doctor;
    
    /**
     * When will the vaccine expire
     * 
     * @var ?string $expiry
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiry')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expiry = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('lot_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lotNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('manufacturer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $manufacturer = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('manufacturer_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $manufacturerCode;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * Default to zero
     * 
     * @var ?int $originalQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_quantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $originalQuantity = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $price = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('price_with_tax')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $priceWithTax = null;
    
    /**
     * Is sales tax applicable to this service/product? Default to false
     * 
     * @var ?bool $salesTaxApplicable
     */
	#[\JMS\Serializer\Annotation\SerializedName('sales_tax_applicable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $salesTaxApplicable = null;
    
    /**
     * Status of vaccine, could be one of `active`, `inactive`, `archived`, `voided`, default to `active`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryVaccineStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InventoryVaccineStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryVaccineStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * Default to `"standard vaccine"`
     * 
     * @var ?string $vaccinationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('vaccination_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vaccinationType = null;
    
	public function __construct()
	{
		$this->category = null;
		$this->cost = null;
		$this->createdAt = null;
		$this->currentQuantity = null;
		$this->cvxCode = null;
		$this->doctor = 0;
		$this->expiry = null;
		$this->id = null;
		$this->lotNumber = null;
		$this->manufacturer = null;
		$this->manufacturerCode = "";
		$this->name = "";
		$this->note = null;
		$this->originalQuantity = null;
		$this->price = null;
		$this->priceWithTax = null;
		$this->salesTaxApplicable = null;
		$this->status = null;
		$this->updatedAt = null;
		$this->vaccinationType = null;
	}
}
