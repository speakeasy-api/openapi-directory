/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SubscriptionItemPriceChangeDetails - Price change related information of a subscription item.
 */
public class SubscriptionItemPriceChangeDetails {
    /**
     * The renewal time at which the price change will become effective for the user. This is subject to change(to a future time) due to cases where the renewal time shifts like pause.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedNewPriceChargeTime")
    public String expectedNewPriceChargeTime;

    public SubscriptionItemPriceChangeDetails withExpectedNewPriceChargeTime(String expectedNewPriceChargeTime) {
        this.expectedNewPriceChargeTime = expectedNewPriceChargeTime;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newPrice")
    public Money newPrice;

    public SubscriptionItemPriceChangeDetails withNewPrice(Money newPrice) {
        this.newPrice = newPrice;
        return this;
    }
    
    /**
     * Price change mode specifies how the subscription item price is changing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceChangeMode")
    public SubscriptionItemPriceChangeDetailsPriceChangeModeEnum priceChangeMode;

    public SubscriptionItemPriceChangeDetails withPriceChangeMode(SubscriptionItemPriceChangeDetailsPriceChangeModeEnum priceChangeMode) {
        this.priceChangeMode = priceChangeMode;
        return this;
    }
    
    /**
     * State the price change is currently in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceChangeState")
    public SubscriptionItemPriceChangeDetailsPriceChangeStateEnum priceChangeState;

    public SubscriptionItemPriceChangeDetails withPriceChangeState(SubscriptionItemPriceChangeDetailsPriceChangeStateEnum priceChangeState) {
        this.priceChangeState = priceChangeState;
        return this;
    }
    
    public SubscriptionItemPriceChangeDetails(){}
}
