/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserInfo } from "./userinfo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Node comment information
 */
export class Comment extends SpeakeasyBase {
  /**
   * Creation date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * User information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  @Type(() => UserInfo)
  createdBy: UserInfo;

  /**
   * Comment ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Determines whether comment was edited or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isChanged" })
  isChanged: boolean;

  /**
   * Determines whether comment was deleted or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDeleted" })
  isDeleted: boolean;

  /**
   * Comment text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text: string;

  /**
   * Modification date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * User information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedBy" })
  @Type(() => UserInfo)
  updatedBy: UserInfo;
}
