"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import createfooterresponse as shared_createfooterresponse
from ..shared import createfootnoteresponse as shared_createfootnoteresponse
from ..shared import createheaderresponse as shared_createheaderresponse
from ..shared import createnamedrangeresponse as shared_createnamedrangeresponse
from ..shared import insertinlineimageresponse as shared_insertinlineimageresponse
from ..shared import insertinlinesheetschartresponse as shared_insertinlinesheetschartresponse
from ..shared import replacealltextresponse as shared_replacealltextresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Response:
    r"""A single response from an update."""
    
    create_footer: Optional[shared_createfooterresponse.CreateFooterResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createFooter'), 'exclude': lambda f: f is None }})
    r"""The result of creating a footer."""  
    create_footnote: Optional[shared_createfootnoteresponse.CreateFootnoteResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createFootnote'), 'exclude': lambda f: f is None }})
    r"""The result of creating a footnote."""  
    create_header: Optional[shared_createheaderresponse.CreateHeaderResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createHeader'), 'exclude': lambda f: f is None }})
    r"""The result of creating a header."""  
    create_named_range: Optional[shared_createnamedrangeresponse.CreateNamedRangeResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createNamedRange'), 'exclude': lambda f: f is None }})
    r"""The result of creating a named range."""  
    insert_inline_image: Optional[shared_insertinlineimageresponse.InsertInlineImageResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insertInlineImage'), 'exclude': lambda f: f is None }})
    r"""The result of inserting an inline image."""  
    insert_inline_sheets_chart: Optional[shared_insertinlinesheetschartresponse.InsertInlineSheetsChartResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insertInlineSheetsChart'), 'exclude': lambda f: f is None }})
    r"""The result of inserting an embedded Google Sheets chart."""  
    replace_all_text: Optional[shared_replacealltextresponse.ReplaceAllTextResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replaceAllText'), 'exclude': lambda f: f is None }})
    r"""The result of replacing text."""  
    