<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SyslogExportRuleSummary - Summary of the newly added syslog export rule.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SyslogExportRuleSummary
{
    /**
     * The ID corresponding to the imported certificate used by the syslog server.
     * 
     * 
     * 
     * @var ?string $certificateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $certificateId = null;
    
    /**
     * Specifies whether TLS should be used to communicate with the syslog server.
     * 
     * 
     * 
     * @var bool $enableTls
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableTls')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enableTls;
    
    /**
     * The syslog message classification based on RFC 5424.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SyslogFacilityEnum $facility
     */
	#[\JMS\Serializer\Annotation\SerializedName('facility')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SyslogFacilityEnum>')]
    public SyslogFacilityEnum $facility;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $hostname;
    
    /**
     * ID corresponding to the syslog export rule.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $port;
    
    /**
     * The network protocol to use, either UDP or TCP.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TransportLayerProtocolEnum $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransportLayerProtocolEnum>')]
    public TransportLayerProtocolEnum $protocol;
    
    /**
     * The syslog message severity based on RFC 5424.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SyslogSeverityEnum $severity
     */
	#[\JMS\Serializer\Annotation\SerializedName('severity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SyslogSeverityEnum>')]
    public SyslogSeverityEnum $severity;
    
	public function __construct()
	{
		$this->certificateId = null;
		$this->enableTls = false;
		$this->facility = \OpenAPI\OpenAPI\Models\Shared\SyslogFacilityEnum::KERNEL;
		$this->hostname = "";
		$this->id = "";
		$this->port = 0;
		$this->protocol = \OpenAPI\OpenAPI\Models\Shared\TransportLayerProtocolEnum::TCP;
		$this->severity = \OpenAPI\OpenAPI\Models\Shared\SyslogSeverityEnum::EMERGENCY;
	}
}
