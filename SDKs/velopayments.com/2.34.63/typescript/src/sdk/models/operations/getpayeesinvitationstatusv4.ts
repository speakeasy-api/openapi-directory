/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPayeesInvitationStatusV4Request extends SpeakeasyBase {
  /**
   * The invitation status of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=invitationStatus",
  })
  invitationStatus?: string;

  /**
   * Page number. Default is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Page size. Default is 25. Max allowable is 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * The UUID of the payee.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=payeeId",
  })
  payeeId?: string;

  /**
   * The account owner Payor ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=payorId",
  })
  payorId: string;
}

export class GetPayeesInvitationStatusV4Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Get Payees with Invitaion status - filters of payeeId and invitationStatus
   */
  @SpeakeasyMetadata()
  pagedPayeeInvitationStatusResponseV4?: shared.PagedPayeeInvitationStatusResponseV4;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid request. See Error message payload for details of failure
   */
  @SpeakeasyMetadata()
  inlineResponse400?: shared.InlineResponse400;

  /**
   * Invalid access token. May be expired or invalid
   */
  @SpeakeasyMetadata()
  inlineResponse401?: shared.InlineResponse401;

  /**
   * The authentication does not have permissions to access the resource
   *
   * @remarks
   * This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
   *
   */
  @SpeakeasyMetadata()
  inlineResponse403?: shared.InlineResponse403;

  /**
   * The resource was not found or is no longer available
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  inlineResponse404?: shared.InlineResponse404;
}
