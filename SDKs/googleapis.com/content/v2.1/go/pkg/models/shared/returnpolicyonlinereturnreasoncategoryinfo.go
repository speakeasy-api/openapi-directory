// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum - The corresponding return label source.
type ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum string

const (
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnumReturnLabelSourceUnspecified ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum = "RETURN_LABEL_SOURCE_UNSPECIFIED"
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnumDownloadAndPrint             ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum = "DOWNLOAD_AND_PRINT"
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnumInTheBox                     ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum = "IN_THE_BOX"
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnumCustomerResponsibility       ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum = "CUSTOMER_RESPONSIBILITY"
)

func (e ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum) ToPointer() *ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum {
	return &e
}

func (e *ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RETURN_LABEL_SOURCE_UNSPECIFIED":
		fallthrough
	case "DOWNLOAD_AND_PRINT":
		fallthrough
	case "IN_THE_BOX":
		fallthrough
	case "CUSTOMER_RESPONSIBILITY":
		*e = ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum: %v", v)
	}
}

// ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum - The return reason category.
type ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum string

const (
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnumReturnReasonCategoryUnspecified ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum = "RETURN_REASON_CATEGORY_UNSPECIFIED"
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnumBuyerRemorse                    ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum = "BUYER_REMORSE"
	ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnumItemDefect                      ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum = "ITEM_DEFECT"
)

func (e ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum) ToPointer() *ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum {
	return &e
}

func (e *ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RETURN_REASON_CATEGORY_UNSPECIFIED":
		fallthrough
	case "BUYER_REMORSE":
		fallthrough
	case "ITEM_DEFECT":
		*e = ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum: %v", v)
	}
}

// ReturnPolicyOnlineReturnReasonCategoryInfo - The return reason category info wrapper.
type ReturnPolicyOnlineReturnReasonCategoryInfo struct {
	// The corresponding return label source.
	ReturnLabelSource *ReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum `json:"returnLabelSource,omitempty"`
	// The return reason category.
	ReturnReasonCategory *ReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum `json:"returnReasonCategory,omitempty"`
	// The return shipping fee. This can either be a fixed fee or a boolean to indicate that the customer pays the actual shipping cost.
	ReturnShippingFee *ReturnPolicyOnlineReturnShippingFee `json:"returnShippingFee,omitempty"`
}
