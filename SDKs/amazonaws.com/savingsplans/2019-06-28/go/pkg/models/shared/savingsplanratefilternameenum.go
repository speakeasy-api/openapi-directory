// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SavingsPlanRateFilterNameEnum string

const (
	SavingsPlanRateFilterNameEnumRegion             SavingsPlanRateFilterNameEnum = "region"
	SavingsPlanRateFilterNameEnumInstanceType       SavingsPlanRateFilterNameEnum = "instanceType"
	SavingsPlanRateFilterNameEnumProductDescription SavingsPlanRateFilterNameEnum = "productDescription"
	SavingsPlanRateFilterNameEnumTenancy            SavingsPlanRateFilterNameEnum = "tenancy"
	SavingsPlanRateFilterNameEnumProductType        SavingsPlanRateFilterNameEnum = "productType"
	SavingsPlanRateFilterNameEnumServiceCode        SavingsPlanRateFilterNameEnum = "serviceCode"
	SavingsPlanRateFilterNameEnumUsageType          SavingsPlanRateFilterNameEnum = "usageType"
	SavingsPlanRateFilterNameEnumOperation          SavingsPlanRateFilterNameEnum = "operation"
)

func (e *SavingsPlanRateFilterNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "region":
		fallthrough
	case "instanceType":
		fallthrough
	case "productDescription":
		fallthrough
	case "tenancy":
		fallthrough
	case "productType":
		fallthrough
	case "serviceCode":
		fallthrough
	case "usageType":
		fallthrough
	case "operation":
		*e = SavingsPlanRateFilterNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SavingsPlanRateFilterNameEnum: %s", s)
	}
}
