"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Any, Optional

class Liens:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def cloudresourcemanager_liens_create(self, request: operations.CloudresourcemanagerLiensCreateRequest, security: operations.CloudresourcemanagerLiensCreateSecurity) -> operations.CloudresourcemanagerLiensCreateResponse:
        r"""Create a Lien which applies to the resource denoted by the `parent` field. Callers of this method will require permission on the `parent` resource. For example, applying to `projects/1234` requires permission `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the number of Liens which may be applied."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v1/liens'
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "lien", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        query_params = utils.get_query_params(operations.CloudresourcemanagerLiensCreateRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('POST', url, params=query_params, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.CloudresourcemanagerLiensCreateResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Lien])
                res.lien = out

        return res

    def cloudresourcemanager_liens_delete(self, request: operations.CloudresourcemanagerLiensDeleteRequest, security: operations.CloudresourcemanagerLiensDeleteSecurity) -> operations.CloudresourcemanagerLiensDeleteResponse:
        r"""Delete a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.updateLiens`."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.CloudresourcemanagerLiensDeleteRequest, base_url, '/v1/{name}', request)
        
        query_params = utils.get_query_params(operations.CloudresourcemanagerLiensDeleteRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('DELETE', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.CloudresourcemanagerLiensDeleteResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[dict[str, Any]])
                res.empty = out

        return res

    def cloudresourcemanager_liens_list(self, request: operations.CloudresourcemanagerLiensListRequest, security: operations.CloudresourcemanagerLiensListSecurity) -> operations.CloudresourcemanagerLiensListResponse:
        r"""List all Liens applied to the `parent` resource. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v1/liens'
        
        query_params = utils.get_query_params(operations.CloudresourcemanagerLiensListRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.CloudresourcemanagerLiensListResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ListLiensResponse])
                res.list_liens_response = out

        return res

    