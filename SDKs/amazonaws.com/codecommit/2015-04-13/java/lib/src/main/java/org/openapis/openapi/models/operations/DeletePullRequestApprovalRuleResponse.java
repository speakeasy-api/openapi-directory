/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DeletePullRequestApprovalRuleResponse {
    /**
     * ApprovalRuleNameRequiredException
     */
    
    public Object approvalRuleNameRequiredException;

    public DeletePullRequestApprovalRuleResponse withApprovalRuleNameRequiredException(Object approvalRuleNameRequiredException) {
        this.approvalRuleNameRequiredException = approvalRuleNameRequiredException;
        return this;
    }
    
    /**
     * CannotDeleteApprovalRuleFromTemplateException
     */
    
    public Object cannotDeleteApprovalRuleFromTemplateException;

    public DeletePullRequestApprovalRuleResponse withCannotDeleteApprovalRuleFromTemplateException(Object cannotDeleteApprovalRuleFromTemplateException) {
        this.cannotDeleteApprovalRuleFromTemplateException = cannotDeleteApprovalRuleFromTemplateException;
        return this;
    }
    
    
    public String contentType;

    public DeletePullRequestApprovalRuleResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.DeletePullRequestApprovalRuleOutput deletePullRequestApprovalRuleOutput;

    public DeletePullRequestApprovalRuleResponse withDeletePullRequestApprovalRuleOutput(org.openapis.openapi.models.shared.DeletePullRequestApprovalRuleOutput deletePullRequestApprovalRuleOutput) {
        this.deletePullRequestApprovalRuleOutput = deletePullRequestApprovalRuleOutput;
        return this;
    }
    
    /**
     * EncryptionIntegrityChecksFailedException
     */
    
    public Object encryptionIntegrityChecksFailedException;

    public DeletePullRequestApprovalRuleResponse withEncryptionIntegrityChecksFailedException(Object encryptionIntegrityChecksFailedException) {
        this.encryptionIntegrityChecksFailedException = encryptionIntegrityChecksFailedException;
        return this;
    }
    
    /**
     * EncryptionKeyAccessDeniedException
     */
    
    public Object encryptionKeyAccessDeniedException;

    public DeletePullRequestApprovalRuleResponse withEncryptionKeyAccessDeniedException(Object encryptionKeyAccessDeniedException) {
        this.encryptionKeyAccessDeniedException = encryptionKeyAccessDeniedException;
        return this;
    }
    
    /**
     * EncryptionKeyDisabledException
     */
    
    public Object encryptionKeyDisabledException;

    public DeletePullRequestApprovalRuleResponse withEncryptionKeyDisabledException(Object encryptionKeyDisabledException) {
        this.encryptionKeyDisabledException = encryptionKeyDisabledException;
        return this;
    }
    
    /**
     * EncryptionKeyNotFoundException
     */
    
    public Object encryptionKeyNotFoundException;

    public DeletePullRequestApprovalRuleResponse withEncryptionKeyNotFoundException(Object encryptionKeyNotFoundException) {
        this.encryptionKeyNotFoundException = encryptionKeyNotFoundException;
        return this;
    }
    
    /**
     * EncryptionKeyUnavailableException
     */
    
    public Object encryptionKeyUnavailableException;

    public DeletePullRequestApprovalRuleResponse withEncryptionKeyUnavailableException(Object encryptionKeyUnavailableException) {
        this.encryptionKeyUnavailableException = encryptionKeyUnavailableException;
        return this;
    }
    
    /**
     * InvalidApprovalRuleNameException
     */
    
    public Object invalidApprovalRuleNameException;

    public DeletePullRequestApprovalRuleResponse withInvalidApprovalRuleNameException(Object invalidApprovalRuleNameException) {
        this.invalidApprovalRuleNameException = invalidApprovalRuleNameException;
        return this;
    }
    
    /**
     * InvalidPullRequestIdException
     */
    
    public Object invalidPullRequestIdException;

    public DeletePullRequestApprovalRuleResponse withInvalidPullRequestIdException(Object invalidPullRequestIdException) {
        this.invalidPullRequestIdException = invalidPullRequestIdException;
        return this;
    }
    
    /**
     * PullRequestAlreadyClosedException
     */
    
    public Object pullRequestAlreadyClosedException;

    public DeletePullRequestApprovalRuleResponse withPullRequestAlreadyClosedException(Object pullRequestAlreadyClosedException) {
        this.pullRequestAlreadyClosedException = pullRequestAlreadyClosedException;
        return this;
    }
    
    /**
     * PullRequestDoesNotExistException
     */
    
    public Object pullRequestDoesNotExistException;

    public DeletePullRequestApprovalRuleResponse withPullRequestDoesNotExistException(Object pullRequestDoesNotExistException) {
        this.pullRequestDoesNotExistException = pullRequestDoesNotExistException;
        return this;
    }
    
    /**
     * PullRequestIdRequiredException
     */
    
    public Object pullRequestIdRequiredException;

    public DeletePullRequestApprovalRuleResponse withPullRequestIdRequiredException(Object pullRequestIdRequiredException) {
        this.pullRequestIdRequiredException = pullRequestIdRequiredException;
        return this;
    }
    
    
    public Integer statusCode;

    public DeletePullRequestApprovalRuleResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DeletePullRequestApprovalRuleResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public DeletePullRequestApprovalRuleResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
