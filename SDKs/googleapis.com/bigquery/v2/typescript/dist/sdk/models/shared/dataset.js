"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dataset = exports.DatasetTags = exports.DatasetAccess = void 0;
var utils_1 = require("../../../internal/utils");
var datasetaccessentry_1 = require("./datasetaccessentry");
var datasetreference_1 = require("./datasetreference");
var encryptionconfiguration_1 = require("./encryptionconfiguration");
var routinereference_1 = require("./routinereference");
var tablereference_1 = require("./tablereference");
var class_transformer_1 = require("class-transformer");
var DatasetAccess = /** @class */ (function (_super) {
    __extends(DatasetAccess, _super);
    function DatasetAccess() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataset" }),
        (0, class_transformer_1.Type)(function () { return datasetaccessentry_1.DatasetAccessEntry; }),
        __metadata("design:type", datasetaccessentry_1.DatasetAccessEntry)
    ], DatasetAccess.prototype, "dataset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domain" }),
        __metadata("design:type", String)
    ], DatasetAccess.prototype, "domain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupByEmail" }),
        __metadata("design:type", String)
    ], DatasetAccess.prototype, "groupByEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iamMember" }),
        __metadata("design:type", String)
    ], DatasetAccess.prototype, "iamMember", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "role" }),
        __metadata("design:type", String)
    ], DatasetAccess.prototype, "role", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routine" }),
        (0, class_transformer_1.Type)(function () { return routinereference_1.RoutineReference; }),
        __metadata("design:type", routinereference_1.RoutineReference)
    ], DatasetAccess.prototype, "routine", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "specialGroup" }),
        __metadata("design:type", String)
    ], DatasetAccess.prototype, "specialGroup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userByEmail" }),
        __metadata("design:type", String)
    ], DatasetAccess.prototype, "userByEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "view" }),
        (0, class_transformer_1.Type)(function () { return tablereference_1.TableReference; }),
        __metadata("design:type", tablereference_1.TableReference)
    ], DatasetAccess.prototype, "view", void 0);
    return DatasetAccess;
}(utils_1.SpeakeasyBase));
exports.DatasetAccess = DatasetAccess;
var DatasetTags = /** @class */ (function (_super) {
    __extends(DatasetTags, _super);
    function DatasetTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tagKey" }),
        __metadata("design:type", String)
    ], DatasetTags.prototype, "tagKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tagValue" }),
        __metadata("design:type", String)
    ], DatasetTags.prototype, "tagValue", void 0);
    return DatasetTags;
}(utils_1.SpeakeasyBase));
exports.DatasetTags = DatasetTags;
/**
 * Successful response
 */
var Dataset = /** @class */ (function (_super) {
    __extends(Dataset, _super);
    function Dataset() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DatasetAccess }),
        (0, class_transformer_1.Expose)({ name: "access" }),
        (0, class_transformer_1.Type)(function () { return DatasetAccess; }),
        __metadata("design:type", Array)
    ], Dataset.prototype, "access", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTime" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datasetReference" }),
        (0, class_transformer_1.Type)(function () { return datasetreference_1.DatasetReference; }),
        __metadata("design:type", datasetreference_1.DatasetReference)
    ], Dataset.prototype, "datasetReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultCollation" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "defaultCollation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultEncryptionConfiguration" }),
        (0, class_transformer_1.Type)(function () { return encryptionconfiguration_1.EncryptionConfiguration; }),
        __metadata("design:type", encryptionconfiguration_1.EncryptionConfiguration)
    ], Dataset.prototype, "defaultEncryptionConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultPartitionExpirationMs" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "defaultPartitionExpirationMs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultRoundingMode" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "defaultRoundingMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultTableExpirationMs" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "defaultTableExpirationMs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "friendlyName" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "friendlyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isCaseInsensitive" }),
        __metadata("design:type", Boolean)
    ], Dataset.prototype, "isCaseInsensitive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], Dataset.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastModifiedTime" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "lastModifiedTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxTimeTravelHours" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "maxTimeTravelHours", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "satisfiesPzs" }),
        __metadata("design:type", Boolean)
    ], Dataset.prototype, "satisfiesPzs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageBillingModel" }),
        __metadata("design:type", String)
    ], Dataset.prototype, "storageBillingModel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DatasetTags }),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        (0, class_transformer_1.Type)(function () { return DatasetTags; }),
        __metadata("design:type", Array)
    ], Dataset.prototype, "tags", void 0);
    return Dataset;
}(utils_1.SpeakeasyBase));
exports.Dataset = Dataset;
