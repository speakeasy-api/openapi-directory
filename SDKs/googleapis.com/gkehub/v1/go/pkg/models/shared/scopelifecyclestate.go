// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScopeLifecycleStateCodeEnum - Output only. The current state of the scope resource.
type ScopeLifecycleStateCodeEnum string

const (
	ScopeLifecycleStateCodeEnumCodeUnspecified ScopeLifecycleStateCodeEnum = "CODE_UNSPECIFIED"
	ScopeLifecycleStateCodeEnumCreating        ScopeLifecycleStateCodeEnum = "CREATING"
	ScopeLifecycleStateCodeEnumReady           ScopeLifecycleStateCodeEnum = "READY"
	ScopeLifecycleStateCodeEnumDeleting        ScopeLifecycleStateCodeEnum = "DELETING"
	ScopeLifecycleStateCodeEnumUpdating        ScopeLifecycleStateCodeEnum = "UPDATING"
)

func (e ScopeLifecycleStateCodeEnum) ToPointer() *ScopeLifecycleStateCodeEnum {
	return &e
}

func (e *ScopeLifecycleStateCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "DELETING":
		fallthrough
	case "UPDATING":
		*e = ScopeLifecycleStateCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScopeLifecycleStateCodeEnum: %v", v)
	}
}

// ScopeLifecycleState - ScopeLifecycleState describes the state of a Scope resource.
type ScopeLifecycleState struct {
	// Output only. The current state of the scope resource.
	Code *ScopeLifecycleStateCodeEnum `json:"code,omitempty"`
}
