<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OBWriteDomesticScheduled2DataInitiation - The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OBWriteDomesticScheduled2DataInitiation
{
    /**
     * Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationCreditorAccount $creditorAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditorAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationCreditorAccount')]
    public OBWriteDomesticScheduled2DataInitiationCreditorAccount $creditorAccount;
    
    /**
     * Information that locates and identifies a specific address, as defined by postal services.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBPostalAddress6 $creditorPostalAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditorPostalAddress')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBPostalAddress6')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBPostalAddress6 $creditorPostalAddress = null;
    
    /**
     * Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationDebtorAccount $debtorAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('DebtorAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationDebtorAccount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteDomesticScheduled2DataInitiationDebtorAccount $debtorAccount = null;
    
    /**
     * Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
     * 
     * Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
     * OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
     * 
     * @var ?string $endToEndIdentification
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndToEndIdentification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endToEndIdentification = null;
    
    /**
     * Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
     * 
     * Usage: This amount has to be transported unchanged through the transaction chain.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationInstructedAmount $instructedAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('InstructedAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationInstructedAmount')]
    public OBWriteDomesticScheduled2DataInitiationInstructedAmount $instructedAmount;
    
    /**
     * Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
     * 
     * Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
     * 
     * @var string $instructionIdentification
     */
	#[\JMS\Serializer\Annotation\SerializedName('InstructionIdentification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $instructionIdentification;
    
    /**
     * User community specific instrument.
     * 
     * Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.
     * 
     * @var ?string $localInstrument
     */
	#[\JMS\Serializer\Annotation\SerializedName('LocalInstrument')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $localInstrument = null;
    
    /**
     * Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationRemittanceInformation $remittanceInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('RemittanceInformation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationRemittanceInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteDomesticScheduled2DataInitiationRemittanceInformation $remittanceInformation = null;
    
    /**
     * Date at which the initiating party requests the clearing agent to process the payment. 
     * 
     * Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     * 
     * @var \DateTime $requestedExecutionDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('RequestedExecutionDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $requestedExecutionDateTime;
    
    /**
     * Additional information that can not be captured in the structured fields and/or any other specific block.
     * 
     * @var ?array<string, mixed> $supplementaryData
     */
	#[\JMS\Serializer\Annotation\SerializedName('SupplementaryData')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $supplementaryData = null;
    
	public function __construct()
	{
		$this->creditorAccount = new \OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationCreditorAccount();
		$this->creditorPostalAddress = null;
		$this->debtorAccount = null;
		$this->endToEndIdentification = null;
		$this->instructedAmount = new \OpenAPI\OpenAPI\Models\Shared\OBWriteDomesticScheduled2DataInitiationInstructedAmount();
		$this->instructionIdentification = "";
		$this->localInstrument = null;
		$this->remittanceInformation = null;
		$this->requestedExecutionDateTime = new \DateTime();
		$this->supplementaryData = null;
	}
}
