// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCrawlStatisticsByFrequencyFrequencyEnum - Aggregation frequency
type GetCrawlStatisticsByFrequencyFrequencyEnum string

const (
	GetCrawlStatisticsByFrequencyFrequencyEnumOnemn   GetCrawlStatisticsByFrequencyFrequencyEnum = "1mn"
	GetCrawlStatisticsByFrequencyFrequencyEnumFivemn  GetCrawlStatisticsByFrequencyFrequencyEnum = "5mn"
	GetCrawlStatisticsByFrequencyFrequencyEnumSixtymn GetCrawlStatisticsByFrequencyFrequencyEnum = "60mn"
)

func (e *GetCrawlStatisticsByFrequencyFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1mn":
		fallthrough
	case "5mn":
		fallthrough
	case "60mn":
		*e = GetCrawlStatisticsByFrequencyFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCrawlStatisticsByFrequencyFrequencyEnum: %s", s)
	}
}

type GetCrawlStatisticsByFrequencyRequest struct {
	// Analysis' identifier
	AnalysisSlug string `pathParam:"style=simple,explode=false,name=analysis_slug"`
	// Aggregation frequency
	Frequency GetCrawlStatisticsByFrequencyFrequencyEnum `queryParam:"style=form,explode=true,name=frequency"`
	// max number of elements to retrieve
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Project's identifier
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project_slug"`
	// User's identifier
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type GetCrawlStatisticsByFrequencyResponse struct {
	ContentType string
	// Successful operation
	CrawlStatisticsTime *shared.CrawlStatisticsTime
	// error payload
	DefaultPayload *shared.DefaultPayload
	StatusCode     int
	RawResponse    *http.Response
}
