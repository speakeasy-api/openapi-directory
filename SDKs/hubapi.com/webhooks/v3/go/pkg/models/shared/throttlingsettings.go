// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ThrottlingSettingsPeriodEnum - Time scale for this setting. Can be either `SECONDLY` (per second) or `ROLLING_MINUTE` (per minute).
type ThrottlingSettingsPeriodEnum string

const (
	ThrottlingSettingsPeriodEnumSecondly      ThrottlingSettingsPeriodEnum = "SECONDLY"
	ThrottlingSettingsPeriodEnumRollingMinute ThrottlingSettingsPeriodEnum = "ROLLING_MINUTE"
)

func (e ThrottlingSettingsPeriodEnum) ToPointer() *ThrottlingSettingsPeriodEnum {
	return &e
}

func (e *ThrottlingSettingsPeriodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SECONDLY":
		fallthrough
	case "ROLLING_MINUTE":
		*e = ThrottlingSettingsPeriodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThrottlingSettingsPeriodEnum: %v", v)
	}
}

// ThrottlingSettings - Configuration details for webhook throttling.
type ThrottlingSettings struct {
	// The maximum number of HTTP requests HubSpot will attempt to make to your app in a given time frame determined by `period`.
	MaxConcurrentRequests int `json:"maxConcurrentRequests"`
	// Time scale for this setting. Can be either `SECONDLY` (per second) or `ROLLING_MINUTE` (per minute).
	Period ThrottlingSettingsPeriodEnum `json:"period"`
}
