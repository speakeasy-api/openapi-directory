"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NewAttendancePeriodRequestAttendances:
    
    break_: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('break') }})
    r"""Break in minutes"""  
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})
    r"""Optional comment"""  
    date_: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Attendance date as YYYY-MM-DD"""  
    employee: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee') }})
    r"""Employee identifier"""  
    end_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_time') }})
    r"""End time as HH:MM"""  
    start_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_time') }})
    r"""Start time as HH:MM"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NewAttendancePeriodRequest:
    r"""List of attendance periods to create"""
    
    attendances: Optional[list[NewAttendancePeriodRequestAttendances]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attendances'), 'exclude': lambda f: f is None }})  
    