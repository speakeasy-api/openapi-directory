/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PostCommentReplyResponse {
    /**
     * ClientRequestTokenRequiredException
     */
    
    public Object clientRequestTokenRequiredException;

    public PostCommentReplyResponse withClientRequestTokenRequiredException(Object clientRequestTokenRequiredException) {
        this.clientRequestTokenRequiredException = clientRequestTokenRequiredException;
        return this;
    }
    
    /**
     * CommentContentRequiredException
     */
    
    public Object commentContentRequiredException;

    public PostCommentReplyResponse withCommentContentRequiredException(Object commentContentRequiredException) {
        this.commentContentRequiredException = commentContentRequiredException;
        return this;
    }
    
    /**
     * CommentContentSizeLimitExceededException
     */
    
    public Object commentContentSizeLimitExceededException;

    public PostCommentReplyResponse withCommentContentSizeLimitExceededException(Object commentContentSizeLimitExceededException) {
        this.commentContentSizeLimitExceededException = commentContentSizeLimitExceededException;
        return this;
    }
    
    /**
     * CommentDoesNotExistException
     */
    
    public Object commentDoesNotExistException;

    public PostCommentReplyResponse withCommentDoesNotExistException(Object commentDoesNotExistException) {
        this.commentDoesNotExistException = commentDoesNotExistException;
        return this;
    }
    
    /**
     * CommentIdRequiredException
     */
    
    public Object commentIdRequiredException;

    public PostCommentReplyResponse withCommentIdRequiredException(Object commentIdRequiredException) {
        this.commentIdRequiredException = commentIdRequiredException;
        return this;
    }
    
    
    public String contentType;

    public PostCommentReplyResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * IdempotencyParameterMismatchException
     */
    
    public Object idempotencyParameterMismatchException;

    public PostCommentReplyResponse withIdempotencyParameterMismatchException(Object idempotencyParameterMismatchException) {
        this.idempotencyParameterMismatchException = idempotencyParameterMismatchException;
        return this;
    }
    
    /**
     * InvalidClientRequestTokenException
     */
    
    public Object invalidClientRequestTokenException;

    public PostCommentReplyResponse withInvalidClientRequestTokenException(Object invalidClientRequestTokenException) {
        this.invalidClientRequestTokenException = invalidClientRequestTokenException;
        return this;
    }
    
    /**
     * InvalidCommentIdException
     */
    
    public Object invalidCommentIdException;

    public PostCommentReplyResponse withInvalidCommentIdException(Object invalidCommentIdException) {
        this.invalidCommentIdException = invalidCommentIdException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.PostCommentReplyOutput postCommentReplyOutput;

    public PostCommentReplyResponse withPostCommentReplyOutput(org.openapis.openapi.models.shared.PostCommentReplyOutput postCommentReplyOutput) {
        this.postCommentReplyOutput = postCommentReplyOutput;
        return this;
    }
    
    
    public Integer statusCode;

    public PostCommentReplyResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PostCommentReplyResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public PostCommentReplyResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
