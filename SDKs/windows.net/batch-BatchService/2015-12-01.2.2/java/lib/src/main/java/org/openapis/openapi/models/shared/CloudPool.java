/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CloudPool - A pool in the Azure Batch service.
 */
public class CloudPool {
    /**
     * Gets or sets whether the pool is resizing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allocationState")
    public CloudPoolAllocationStateEnum allocationState;
    public CloudPool withAllocationState(CloudPoolAllocationStateEnum allocationState) {
        this.allocationState = allocationState;
        return this;
    }
    
    /**
     * Gets or sets the time at which the pool entered its current allocation state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("allocationStateTransitionTime")
    public OffsetDateTime allocationStateTransitionTime;
    public CloudPool withAllocationStateTransitionTime(OffsetDateTime allocationStateTransitionTime) {
        this.allocationStateTransitionTime = allocationStateTransitionTime;
        return this;
    }
    
    /**
     * Gets or sets the list of application packages to be installed on each compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationPackageReferences")
    public ApplicationPackageReference[] applicationPackageReferences;
    public CloudPool withApplicationPackageReferences(ApplicationPackageReference[] applicationPackageReferences) {
        this.applicationPackageReferences = applicationPackageReferences;
        return this;
    }
    
    /**
     * Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleEvaluationInterval")
    public String autoScaleEvaluationInterval;
    public CloudPool withAutoScaleEvaluationInterval(String autoScaleEvaluationInterval) {
        this.autoScaleEvaluationInterval = autoScaleEvaluationInterval;
        return this;
    }
    
    /**
     * Gets or sets a formula for the desired number of compute nodes in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleFormula")
    public String autoScaleFormula;
    public CloudPool withAutoScaleFormula(String autoScaleFormula) {
        this.autoScaleFormula = autoScaleFormula;
        return this;
    }
    
    /**
     * The results and errors from an execution of a pool autoscale formula.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleRun")
    public AutoScaleRun autoScaleRun;
    public CloudPool withAutoScaleRun(AutoScaleRun autoScaleRun) {
        this.autoScaleRun = autoScaleRun;
        return this;
    }
    
    /**
     * Gets or sets the list of certificates to be installed on each compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateReferences")
    public CertificateReference[] certificateReferences;
    public CloudPool withCertificateReferences(CertificateReference[] certificateReferences) {
        this.certificateReferences = certificateReferences;
        return this;
    }
    
    /**
     * Gets or sets the creation time of the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationTime")
    public OffsetDateTime creationTime;
    public CloudPool withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Gets or sets the number of compute nodes currently in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentDedicated")
    public Integer currentDedicated;
    public CloudPool withCurrentDedicated(Integer currentDedicated) {
        this.currentDedicated = currentDedicated;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS Version currently installed on the virtual machines in the pool. This may differ from TargetOSVersion if the pool state is Upgrading.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentOSVersion")
    public String currentOSVersion;
    public CloudPool withCurrentOSVersion(String currentOSVersion) {
        this.currentOSVersion = currentOSVersion;
        return this;
    }
    
    /**
     * Gets or sets the display name for the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public CloudPool withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Gets or sets the ETag of the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eTag")
    public String eTag;
    public CloudPool withETag(String eTag) {
        this.eTag = eTag;
        return this;
    }
    
    /**
     * Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableAutoScale")
    public Boolean enableAutoScale;
    public CloudPool withEnableAutoScale(Boolean enableAutoScale) {
        this.enableAutoScale = enableAutoScale;
        return this;
    }
    
    /**
     * Gets or sets whether the pool permits direct communication between nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableInterNodeCommunication")
    public Boolean enableInterNodeCommunication;
    public CloudPool withEnableInterNodeCommunication(Boolean enableInterNodeCommunication) {
        this.enableInterNodeCommunication = enableInterNodeCommunication;
        return this;
    }
    
    /**
     * Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public CloudPool withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets or sets the last modified time of the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModified")
    public OffsetDateTime lastModified;
    public CloudPool withLastModified(OffsetDateTime lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTasksPerNode")
    public Integer maxTasksPerNode;
    public CloudPool withMaxTasksPerNode(Integer maxTasksPerNode) {
        this.maxTasksPerNode = maxTasksPerNode;
        return this;
    }
    
    /**
     * Gets or sets a list of name-value pairs associated with the pool as metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public MetadataItem[] metadata;
    public CloudPool withMetadata(MetadataItem[] metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osFamily")
    public String osFamily;
    public CloudPool withOsFamily(String osFamily) {
        this.osFamily = osFamily;
        return this;
    }
    
    /**
     * An error that occurred when resizing a pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resizeError")
    public ResizeError resizeError;
    public CloudPool withResizeError(ResizeError resizeError) {
        this.resizeError = resizeError;
        return this;
    }
    
    /**
     * Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resizeTimeout")
    public String resizeTimeout;
    public CloudPool withResizeTimeout(String resizeTimeout) {
        this.resizeTimeout = resizeTimeout;
        return this;
    }
    
    /**
     * A task defined on a pool and run by compute nodes when they join the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTask")
    public StartTask startTask;
    public CloudPool withStartTask(StartTask startTask) {
        this.startTask = startTask;
        return this;
    }
    
    /**
     * Gets or sets the current state of the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public CloudPoolStateEnum state;
    public CloudPool withState(CloudPoolStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Gets or sets the time at which the pool entered its current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("stateTransitionTime")
    public OffsetDateTime stateTransitionTime;
    public CloudPool withStateTransitionTime(OffsetDateTime stateTransitionTime) {
        this.stateTransitionTime = stateTransitionTime;
        return this;
    }
    
    /**
     * Contains utilization and resource usage statistics for the lifetime of a pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stats")
    public PoolStatistics stats;
    public CloudPool withStats(PoolStatistics stats) {
        this.stats = stats;
        return this;
    }
    
    /**
     * Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDedicated")
    public Integer targetDedicated;
    public CloudPool withTargetDedicated(Integer targetDedicated) {
        this.targetDedicated = targetDedicated;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetOSVersion")
    public String targetOSVersion;
    public CloudPool withTargetOSVersion(String targetOSVersion) {
        this.targetOSVersion = targetOSVersion;
        return this;
    }
    
    /**
     * Specifies how tasks should be distributed across compute nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskSchedulingPolicy")
    public TaskSchedulingPolicy taskSchedulingPolicy;
    public CloudPool withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy) {
        this.taskSchedulingPolicy = taskSchedulingPolicy;
        return this;
    }
    
    /**
     * Gets or sets the URL of the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public CloudPool withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmSize")
    public String vmSize;
    public CloudPool withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }
    
}
