"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TruststoreItems:
    
    alias: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alias'), 'exclude': lambda f: f is None }})
    r"""Truststore alias name"""  
    entry_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entryType'), 'exclude': lambda f: f is None }})  
    issuer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuer'), 'exclude': lambda f: f is None }})
    r"""e.g. \\"CN=Admin\\" """  
    not_after: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notAfter'), 'exclude': lambda f: f is None }})
    r"""e.g. \\"Sun Jun 30 23:59:50 AEST 2019\\" """  
    not_before: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notBefore'), 'exclude': lambda f: f is None }})
    r"""e.g. \\"Sun Jul 01 12:00:00 AEST 2018\\" """  
    serial_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serialNumber'), 'exclude': lambda f: f is None }})
    r"""18165099476682912368"""  
    subject: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subject'), 'exclude': lambda f: f is None }})
    r"""e.g. \\"CN=localhost\\" """  
    