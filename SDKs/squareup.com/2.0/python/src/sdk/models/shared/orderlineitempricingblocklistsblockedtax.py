"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderLineItemPricingBlocklistsBlockedTax:
    r"""A tax to block from applying to a line item. The tax must be
    identified by either `tax_uid` or `tax_catalog_object_id`, but not both.
    """
    
    tax_catalog_object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax_catalog_object_id'), 'exclude': lambda f: f is None }})
    r"""The `catalog_object_id` of the tax that should be blocked.
    Use this field to block catalog taxes. For ad hoc taxes, use the 
    `tax_uid` field.
    """  
    tax_uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax_uid'), 'exclude': lambda f: f is None }})
    r"""The `uid` of the tax that should be blocked. Use this field to block
    ad hoc taxes. For catalog, taxes use the `tax_catalog_object_id` field.
    """  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""A unique ID of the `BlockedTax` within the order."""  
    