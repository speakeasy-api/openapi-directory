/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2InfoType } from "./googleprivacydlpv2infotype";
import { GooglePrivacyDlpV2PrimitiveTransformation } from "./googleprivacydlpv2primitivetransformation";
import { Expose, Type } from "class-transformer";

/**
 * A transformation to apply to text that is identified as a specific info_type.
 */
export class GooglePrivacyDlpV2InfoTypeTransformation extends SpeakeasyBase {
  /**
   * InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2InfoType })
  @Expose({ name: "infoTypes" })
  @Type(() => GooglePrivacyDlpV2InfoType)
  infoTypes?: GooglePrivacyDlpV2InfoType[];

  /**
   * A rule for transforming a value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primitiveTransformation" })
  @Type(() => GooglePrivacyDlpV2PrimitiveTransformation)
  primitiveTransformation?: GooglePrivacyDlpV2PrimitiveTransformation;
}
