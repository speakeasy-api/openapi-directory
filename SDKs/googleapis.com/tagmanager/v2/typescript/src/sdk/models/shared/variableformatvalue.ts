/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Parameter } from "./parameter";
import { Expose, Type } from "class-transformer";

/**
 * The option to convert a string-type variable value to either lowercase or uppercase.
 */
export enum VariableFormatValueCaseConversionTypeEnum {
  None = "none",
  Lowercase = "lowercase",
  Uppercase = "uppercase",
}

export class VariableFormatValue extends SpeakeasyBase {
  /**
   * The option to convert a string-type variable value to either lowercase or uppercase.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caseConversionType" })
  caseConversionType?: VariableFormatValueCaseConversionTypeEnum;

  /**
   * Represents a Google Tag Manager Parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "convertFalseToValue" })
  @Type(() => Parameter)
  convertFalseToValue?: Parameter;

  /**
   * Represents a Google Tag Manager Parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "convertNullToValue" })
  @Type(() => Parameter)
  convertNullToValue?: Parameter;

  /**
   * Represents a Google Tag Manager Parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "convertTrueToValue" })
  @Type(() => Parameter)
  convertTrueToValue?: Parameter;

  /**
   * Represents a Google Tag Manager Parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "convertUndefinedToValue" })
  @Type(() => Parameter)
  convertUndefinedToValue?: Parameter;
}
