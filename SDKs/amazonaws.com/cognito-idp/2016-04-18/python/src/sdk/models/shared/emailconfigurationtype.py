"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import emailsendingaccounttype_enum as shared_emailsendingaccounttype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EmailConfigurationType:
    r"""<p>The email configuration of your user pool. The email configuration type sets your preferred sending method, Amazon Web Services Region, and sender for messages from your user pool.</p> <note> <p>Amazon Cognito can send email messages with Amazon Simple Email Service resources in the Amazon Web Services Region where you created your user pool, and in alternate Regions in some cases. For more information on the supported Regions, see <a href=\\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html\\">Email settings for Amazon Cognito user pools</a>.</p> </note>"""
    
    configuration_set: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationSet'), 'exclude': lambda f: f is None }})  
    email_sending_account: Optional[shared_emailsendingaccounttype_enum.EmailSendingAccountTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmailSendingAccount'), 'exclude': lambda f: f is None }})  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('From'), 'exclude': lambda f: f is None }})  
    reply_to_email_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplyToEmailAddress'), 'exclude': lambda f: f is None }})  
    source_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceArn'), 'exclude': lambda f: f is None }})  
    