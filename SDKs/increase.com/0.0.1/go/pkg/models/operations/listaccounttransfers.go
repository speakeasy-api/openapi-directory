// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListAccountTransfersQueryParams struct {
	AccountID           *string    `queryParam:"style=form,explode=true,name=account_id"`
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
}

type ListAccountTransfersRequest struct {
	QueryParams ListAccountTransfersQueryParams
}

type ListAccountTransfersDefaultApplicationJSON13StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListAccountTransfersDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListAccountTransfersDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListAccountTransfersDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON13TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON13TypeEnumRateLimitedError ListAccountTransfersDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListAccountTransfersDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON13 struct {
	Detail     string                                                 `json:"detail"`
	RetryAfter *int64                                                 `json:"retry_after,omitempty"`
	Status     ListAccountTransfersDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                 `json:"title"`
	Type       ListAccountTransfersDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON12StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON12StatusEnumFourHundredAndThree ListAccountTransfersDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListAccountTransfersDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListAccountTransfersDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON12TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON12TypeEnumPrivateFeatureError ListAccountTransfersDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListAccountTransfersDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON12 struct {
	Detail string                                                 `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON11StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON11StatusEnumFourHundredAndFour ListAccountTransfersDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListAccountTransfersDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListAccountTransfersDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON11TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON11TypeEnumObjectNotFoundError ListAccountTransfersDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListAccountTransfersDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON11 struct {
	Detail string                                                 `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON10StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON10StatusEnumFourHundred ListAccountTransfersDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListAccountTransfersDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListAccountTransfersDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON10TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON10TypeEnumMalformedRequestError ListAccountTransfersDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListAccountTransfersDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON10 struct {
	Detail string                                                 `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON9StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON9StatusEnumFourHundred ListAccountTransfersDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListAccountTransfersDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListAccountTransfersDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON9TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON9TypeEnumInvalidParametersError ListAccountTransfersDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListAccountTransfersDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                              `json:"errors,omitempty"`
	Status ListAccountTransfersDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON8StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON8StatusEnumFourHundredAndNine ListAccountTransfersDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListAccountTransfersDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListAccountTransfersDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON8TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON8TypeEnumInvalidOperationError ListAccountTransfersDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListAccountTransfersDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON8 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON7StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON7StatusEnumFourHundredAndOne ListAccountTransfersDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListAccountTransfersDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListAccountTransfersDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON7TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListAccountTransfersDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListAccountTransfersDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON7 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON6StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON6StatusEnumFiveHundred ListAccountTransfersDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListAccountTransfersDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListAccountTransfersDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON6TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON6TypeEnumInternalServerError ListAccountTransfersDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListAccountTransfersDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON6 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON5StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON5StatusEnumFourHundredAndThree ListAccountTransfersDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListAccountTransfersDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListAccountTransfersDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON5TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListAccountTransfersDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListAccountTransfersDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON5 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON4StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListAccountTransfersDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListAccountTransfersDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListAccountTransfersDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON4TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListAccountTransfersDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListAccountTransfersDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON4 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON3StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON3StatusEnumFourHundredAndNine ListAccountTransfersDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListAccountTransfersDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListAccountTransfersDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON3TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListAccountTransfersDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListAccountTransfersDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON3 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON2StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON2StatusEnumFourHundredAndThree ListAccountTransfersDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListAccountTransfersDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListAccountTransfersDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON2TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListAccountTransfersDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListAccountTransfersDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON2 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListAccountTransfersDefaultApplicationJSON1StatusEnum string

const (
	ListAccountTransfersDefaultApplicationJSON1StatusEnumFourHundredAndFour ListAccountTransfersDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListAccountTransfersDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListAccountTransfersDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON1TypeEnum string

const (
	ListAccountTransfersDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListAccountTransfersDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListAccountTransfersDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListAccountTransfersDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountTransfersDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListAccountTransfersDefaultApplicationJSON1 struct {
	Detail string                                                `json:"detail"`
	Status ListAccountTransfersDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ListAccountTransfersDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListAccountTransfersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Transfer List
	AccountTransferList *shared.AccountTransferList
	// Error
	Error interface{}
}
