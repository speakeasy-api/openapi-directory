"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sellereligibilitymultiprogramresponse as shared_sellereligibilitymultiprogramresponse
from typing import Optional


@dataclasses.dataclass
class GetAdvertisingEligibilitySecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAdvertisingEligibilityRequest:
    
    x_ebay_c_marketplace_id: str = dataclasses.field(metadata={'header': { 'field_name': 'X-EBAY-C-MARKETPLACE-ID', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the eBay marketplace for which the seller eligibility status shall be checked.<br /><br /><span class=\\"tablenote\\"><b>Note:</b> This value is case-sensitive.</span>"""  
    program_types: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'program_types', 'style': 'form', 'explode': True }})
    r"""A comma-separated list of eBay advertising programs.<br /><br /><span class=\\"tablenote\\"><b>Tip:</b> See the <a href=\\"/api-docs/sell/account/types/plser:AdvertisingProgramEnum\\"> AdvertisingProgramEnum</a> type for possible values.</span><br /><br />If no programs are specified, the results will be returned for all programs."""  
    

@dataclasses.dataclass
class GetAdvertisingEligibilityResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    seller_eligibility_multi_program_response: Optional[shared_sellereligibilitymultiprogramresponse.SellerEligibilityMultiProgramResponse] = dataclasses.field(default=None)
    r"""Success"""  
    