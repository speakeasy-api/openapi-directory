"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAdsSearchads360V0ServicesSearchSearchAds360StreamRequestSummaryRowSettingEnum(str, Enum):
    r"""Determines whether a summary row will be returned. By default, summary row is not returned. If requested, the summary row will be sent in a response by itself after all other query results are returned."""
    UNSPECIFIED = 'UNSPECIFIED'
    UNKNOWN = 'UNKNOWN'
    NO_SUMMARY_ROW = 'NO_SUMMARY_ROW'
    SUMMARY_ROW_WITH_RESULTS = 'SUMMARY_ROW_WITH_RESULTS'
    SUMMARY_ROW_ONLY = 'SUMMARY_ROW_ONLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAdsSearchads360V0ServicesSearchSearchAds360StreamRequest:
    r"""Request message for SearchAds360Service.SearchStream."""
    
    batch_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchSize'), 'exclude': lambda f: f is None }})
    r"""The number of rows that are returned in each stream response batch. When too large batch is requested, the server may decide to further limit the number of returned rows."""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""Required. The query string."""  
    summary_row_setting: Optional[GoogleAdsSearchads360V0ServicesSearchSearchAds360StreamRequestSummaryRowSettingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summaryRowSetting'), 'exclude': lambda f: f is None }})
    r"""Determines whether a summary row will be returned. By default, summary row is not returned. If requested, the summary row will be sent in a response by itself after all other query results are returned."""  
    