// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSetIdentityFeedbackForwardingEnabledActionEnum
type GETSetIdentityFeedbackForwardingEnabledActionEnum string

const (
	GETSetIdentityFeedbackForwardingEnabledActionEnumSetIdentityFeedbackForwardingEnabled GETSetIdentityFeedbackForwardingEnabledActionEnum = "SetIdentityFeedbackForwardingEnabled"
)

func (e *GETSetIdentityFeedbackForwardingEnabledActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SetIdentityFeedbackForwardingEnabled":
		*e = GETSetIdentityFeedbackForwardingEnabledActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetIdentityFeedbackForwardingEnabledActionEnum: %s", s)
	}
}

// GETSetIdentityFeedbackForwardingEnabledVersionEnum
type GETSetIdentityFeedbackForwardingEnabledVersionEnum string

const (
	GETSetIdentityFeedbackForwardingEnabledVersionEnumTwoThousandAndTen1201 GETSetIdentityFeedbackForwardingEnabledVersionEnum = "2010-12-01"
)

func (e *GETSetIdentityFeedbackForwardingEnabledVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETSetIdentityFeedbackForwardingEnabledVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetIdentityFeedbackForwardingEnabledVersionEnum: %s", s)
	}
}

type GETSetIdentityFeedbackForwardingEnabledRequest struct {
	Action GETSetIdentityFeedbackForwardingEnabledActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Sets whether Amazon SES will forward bounce and complaint notifications as email. <code>true</code> specifies that Amazon SES will forward bounce and complaint notifications as email, in addition to any Amazon SNS topic publishing otherwise specified. <code>false</code> specifies that Amazon SES will publish bounce and complaint notifications only through Amazon SNS. This value can only be set to <code>false</code> when Amazon SNS topics are set for both <code>Bounce</code> and <code>Complaint</code> notification types.
	ForwardingEnabled bool `queryParam:"style=form,explode=true,name=ForwardingEnabled"`
	// The identity for which to set bounce and complaint notification forwarding. Examples: <code>user@example.com</code>, <code>example.com</code>.
	Identity          string                                             `queryParam:"style=form,explode=true,name=Identity"`
	Version           GETSetIdentityFeedbackForwardingEnabledVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETSetIdentityFeedbackForwardingEnabledResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
