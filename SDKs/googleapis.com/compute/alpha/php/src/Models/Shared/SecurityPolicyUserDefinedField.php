<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SecurityPolicyUserDefinedField
{
    /**
     * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SecurityPolicyUserDefinedFieldBaseEnum $base
     */
	#[\JMS\Serializer\Annotation\SerializedName('base')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SecurityPolicyUserDefinedFieldBaseEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SecurityPolicyUserDefinedFieldBaseEnum $base = null;
    
    /**
     * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
     * 
     * @var ?string $mask
     */
	#[\JMS\Serializer\Annotation\SerializedName('mask')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mask = null;
    
    /**
     * The name of this field. Must be unique within the policy.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Offset of the first byte of the field (in network byte order) relative to 'base'.
     * 
     * @var ?int $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offset = null;
    
    /**
     * Size of the field in bytes. Valid values: 1-4.
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
	public function __construct()
	{
		$this->base = null;
		$this->mask = null;
		$this->name = null;
		$this->offset = null;
		$this->size = null;
	}
}
