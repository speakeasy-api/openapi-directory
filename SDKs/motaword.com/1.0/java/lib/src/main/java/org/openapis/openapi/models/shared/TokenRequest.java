/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class TokenRequest {
    /**
     * OAuth2 grant type. Supports 'client_credentials', 'password', 'refresh_token' or 'user_id'.
     */
    @JsonProperty("grant_type")
    @SpeakeasyMetadata("multipartForm:name=grant_type")
    public String grantType;
    public TokenRequest withGrantType(String grantType) {
        this.grantType = grantType;
        return this;
    }
    
    /**
     * MW Account password (to be used in password grant type)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    @SpeakeasyMetadata("multipartForm:name=password")
    public String password;
    public TokenRequest withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Refresh token value for refresh token flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refresh_token")
    @SpeakeasyMetadata("multipartForm:name=refresh_token")
    public String refreshToken;
    public TokenRequest withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    /**
     * Authorization scope. Use 'privileged' for private endpoints.
     */
    @JsonProperty("scope")
    @SpeakeasyMetadata("multipartForm:name=scope")
    public String scope;
    public TokenRequest withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * Value for user_id grant type flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    @SpeakeasyMetadata("multipartForm:name=user_id")
    public Long userId;
    public TokenRequest withUserId(Long userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * MW Account email (to be used in password grant type)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    @SpeakeasyMetadata("multipartForm:name=username")
    public String username;
    public TokenRequest withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
