// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateEntityRequestBodyParentEntityUpdate - The parent entity update request.
type UpdateEntityRequestBodyParentEntityUpdate struct {
	ParentEntityID *string                            `json:"parentEntityId,omitempty"`
	UpdateType     *shared.ParentEntityUpdateTypeEnum `json:"updateType,omitempty"`
}

type UpdateEntityRequestBody struct {
	// An object that maps strings to the component updates in the request. Each string in the mapping must be unique to this object.
	ComponentUpdates map[string]shared.ComponentUpdateRequest `json:"componentUpdates,omitempty"`
	// The description of the entity.
	Description *string `json:"description,omitempty"`
	// The name of the entity.
	EntityName *string `json:"entityName,omitempty"`
	// The parent entity update request.
	ParentEntityUpdate *UpdateEntityRequestBodyParentEntityUpdate `json:"parentEntityUpdate,omitempty"`
}

type UpdateEntityRequest struct {
	RequestBody       UpdateEntityRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The ID of the entity.
	EntityID string `pathParam:"style=simple,explode=false,name=entityId"`
	// The ID of the workspace that contains the entity.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type UpdateEntityResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateEntityResponse *shared.UpdateEntityResponse
	// ValidationException
	ValidationException interface{}
}
