/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * SuggestedTagAndRegionQueryToken - Contains properties we need to fetch suggested tags for. For the first call, Session and continuation set to null.
 * Then on subsequent calls, uses the session/continuation from the previous SuggestedTagAndRegionQuery result to fetch additional results.
 */
public class SuggestedTagAndRegionQueryToken {
    /**
     * Continuation Id for database pagination. Initially null but later used to paginate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continuation")
    @SpeakeasyMetadata("form:name=continuation")
    public String continuation;
    public SuggestedTagAndRegionQueryToken withContinuation(String continuation) {
        this.continuation = continuation;
        return this;
    }
    
    /**
     * Maximum number of results you want to be returned in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxCount")
    @SpeakeasyMetadata("form:name=maxCount")
    public Integer maxCount;
    public SuggestedTagAndRegionQueryToken withMaxCount(Integer maxCount) {
        this.maxCount = maxCount;
        return this;
    }
    
    /**
     * SessionId for database query. Initially set to null but later used to paginate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("session")
    @SpeakeasyMetadata("form:name=session")
    public String session;
    public SuggestedTagAndRegionQueryToken withSession(String session) {
        this.session = session;
        return this;
    }
    
    /**
     * OrderBy. Ordering mechanism for your results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortBy")
    @SpeakeasyMetadata("form:name=sortBy")
    public SuggestedTagAndRegionQueryTokenSortByEnum sortBy;
    public SuggestedTagAndRegionQueryToken withSortBy(SuggestedTagAndRegionQueryTokenSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Existing TagIds in project to filter suggested tags on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagIds")
    @SpeakeasyMetadata("form:name=tagIds")
    public String[] tagIds;
    public SuggestedTagAndRegionQueryToken withTagIds(String[] tagIds) {
        this.tagIds = tagIds;
        return this;
    }
    
    /**
     * Confidence threshold to filter suggested tags on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("threshold")
    @SpeakeasyMetadata("form:name=threshold")
    public Double threshold;
    public SuggestedTagAndRegionQueryToken withThreshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }
    
}
