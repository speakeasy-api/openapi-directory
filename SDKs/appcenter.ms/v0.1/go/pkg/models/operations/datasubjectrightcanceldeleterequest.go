// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type DataSubjectRightCancelDeleteRequestSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type DataSubjectRightCancelDeleteRequestRequestBody struct {
	// Email used for cancel delete with x-authz-bypass headers
	Email string `json:"email"`
}

type DataSubjectRightCancelDeleteRequestRequest struct {
	RequestBody *DataSubjectRightCancelDeleteRequestRequestBody `request:"mediaType=application/json"`
	// Unique request ID (GUID)
	Token string `pathParam:"style=simple,explode=false,name=token"`
}

type DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum string

const (
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumBadRequest          DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumConflict            DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumNotAcceptable       DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumNotFound            DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumInternalServerError DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumUnauthorized        DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnumTooManyRequests     DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DataSubjectRightCancelDeleteRequestDefaultApplicationJSONError struct {
	Code    DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                                 `json:"message"`
}

// DataSubjectRightCancelDeleteRequestDefaultApplicationJSON - Error code with reason
type DataSubjectRightCancelDeleteRequestDefaultApplicationJSON struct {
	Error DataSubjectRightCancelDeleteRequestDefaultApplicationJSONError `json:"error"`
}

type DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum string

const (
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumBadRequest          DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "BadRequest"
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumConflict            DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "Conflict"
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumNotAcceptable       DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "NotAcceptable"
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumNotFound            DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "NotFound"
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumInternalServerError DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "InternalServerError"
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumUnauthorized        DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "Unauthorized"
	DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnumTooManyRequests     DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DataSubjectRightCancelDeleteRequest503ApplicationJSONError struct {
	Code    DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                             `json:"message"`
}

// DataSubjectRightCancelDeleteRequest503ApplicationJSON - Cancel delete request cannot be processed yet.
type DataSubjectRightCancelDeleteRequest503ApplicationJSON struct {
	Error DataSubjectRightCancelDeleteRequest503ApplicationJSONError `json:"error"`
}

// DataSubjectRightCancelDeleteRequest202ApplicationJSON - Data subject right cancel delete request has been accepted.
type DataSubjectRightCancelDeleteRequest202ApplicationJSON struct {
	// ISO 8601 format timestamp of when request was created.
	CreatedAt time.Time `json:"createdAt"`
	// Unique request identifier
	Token string `json:"token"`
}

type DataSubjectRightCancelDeleteRequestResponse struct {
	ContentType string
	// Data subject right cancel delete request has been accepted.
	DataSubjectRightCancelDeleteRequest202ApplicationJSONObject *DataSubjectRightCancelDeleteRequest202ApplicationJSON
	// Cancel delete request cannot be processed yet.
	DataSubjectRightCancelDeleteRequest503ApplicationJSONObject *DataSubjectRightCancelDeleteRequest503ApplicationJSON
	// Error code with reason
	DataSubjectRightCancelDeleteRequestDefaultApplicationJSONObject *DataSubjectRightCancelDeleteRequestDefaultApplicationJSON
	Headers                                                         map[string][]string
	StatusCode                                                      int
	RawResponse                                                     *http.Response
}
