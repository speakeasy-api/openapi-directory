"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import commitment as shared_commitment
from ..shared import scenarioconfig as shared_scenarioconfig
from ..shared import workload as shared_workload
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CostScenario:
    r"""Encapsulates all the information needed to perform a cost estimate. It includes a specification of the Google Cloud usage whose costs are estimated, and configuration options."""
    
    commitments: Optional[list[shared_commitment.Commitment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitments'), 'exclude': lambda f: f is None }})
    r"""New commitments to estimate the costs for. The cost of the commitments will be included in the estimate result and discounts the commitment entitles will be included in the workload cost estimates. A maximum of 100 workloads can be provided."""  
    scenario_config: Optional[shared_scenarioconfig.ScenarioConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scenarioConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration for a CostScenario. Specifies how costs are calculated."""  
    workloads: Optional[list[shared_workload.Workload]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workloads'), 'exclude': lambda f: f is None }})
    r"""The Google Cloud usage whose costs are estimated. A maximum of 100 workloads can be provided."""  
    