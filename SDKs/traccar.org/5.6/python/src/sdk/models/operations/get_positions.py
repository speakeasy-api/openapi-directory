"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import position as shared_position
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetPositionsRequest:
    
    device_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'deviceId', 'style': 'form', 'explode': True }})
    r"""_deviceId_ is optional, but requires the _from_ and _to_ parameters when used"""  
    from_: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""in IS0 8601 format. eg. `1963-11-22T18:30:00Z`"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""To fetch one or more positions. Multiple params can be passed like `id=31&id=42`"""  
    to: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""in IS0 8601 format. eg. `1963-11-22T18:30:00Z`"""  
    

@dataclasses.dataclass
class GetPositionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    positions: Optional[list[shared_position.Position]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    