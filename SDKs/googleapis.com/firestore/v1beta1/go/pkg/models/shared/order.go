// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OrderDirectionEnum - The direction to order by. Defaults to `ASCENDING`.
type OrderDirectionEnum string

const (
	OrderDirectionEnumDirectionUnspecified OrderDirectionEnum = "DIRECTION_UNSPECIFIED"
	OrderDirectionEnumAscending            OrderDirectionEnum = "ASCENDING"
	OrderDirectionEnumDescending           OrderDirectionEnum = "DESCENDING"
)

func (e OrderDirectionEnum) ToPointer() *OrderDirectionEnum {
	return &e
}

func (e *OrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIRECTION_UNSPECIFIED":
		fallthrough
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = OrderDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderDirectionEnum: %v", v)
	}
}

// Order - An order on a field.
type Order struct {
	// The direction to order by. Defaults to `ASCENDING`.
	Direction *OrderDirectionEnum `json:"direction,omitempty"`
	// A reference to a field in a document, ex: `stats.operations`.
	Field *FieldReference `json:"field,omitempty"`
}
