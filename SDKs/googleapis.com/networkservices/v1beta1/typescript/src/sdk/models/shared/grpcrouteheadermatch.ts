/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Optional. Specifies how to match against the value of the header. If not specified, a default value of EXACT is used.
 */
export enum GrpcRouteHeaderMatchTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  Exact = "EXACT",
  RegularExpression = "REGULAR_EXPRESSION",
}

/**
 * A match against a collection of headers.
 */
export class GrpcRouteHeaderMatch extends SpeakeasyBase {
  /**
   * Required. The key of the header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Optional. Specifies how to match against the value of the header. If not specified, a default value of EXACT is used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GrpcRouteHeaderMatchTypeEnum;

  /**
   * Required. The value of the header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
