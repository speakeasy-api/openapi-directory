/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionKey } from "./encryptionkey";
import { ParallelDataConfig } from "./paralleldataconfig";
import { ParallelDataStatusEnum } from "./paralleldatastatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The properties of a parallel data resource.
 */
export class ParallelDataProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * The encryption key used to encrypt this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionKey" })
  @Type(() => EncryptionKey)
  encryptionKey?: EncryptionKey;

  @SpeakeasyMetadata()
  @Expose({ name: "FailedRecordCount" })
  failedRecordCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportedDataSize" })
  importedDataSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportedRecordCount" })
  importedRecordCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestUpdateAttemptAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestUpdateAttemptAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestUpdateAttemptStatus" })
  latestUpdateAttemptStatus?: ParallelDataStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParallelDataConfig" })
  @Type(() => ParallelDataConfig)
  parallelDataConfig?: ParallelDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "SkippedRecordCount" })
  skippedRecordCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceLanguageCode" })
  sourceLanguageCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ParallelDataStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetLanguageCodes" })
  targetLanguageCodes?: string[];
}
