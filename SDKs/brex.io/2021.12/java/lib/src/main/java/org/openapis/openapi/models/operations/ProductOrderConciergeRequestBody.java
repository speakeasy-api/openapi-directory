/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * ProductOrderConciergeRequestBody - Parameters for the concierge order
 */
public class ProductOrderConciergeRequestBody {
    /**
     * Name of the company for which a document should be ordered. (Not required if subjectId is given)
     */
    @SpeakeasyMetadata("form:name=companyName")
    public String companyName;

    public ProductOrderConciergeRequestBody withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Contact E-Mail, will be contacted if concierge costs are exceeding the threshhold configured on your plan
     */
    @SpeakeasyMetadata("form:name=contactEmail")
    public String contactEmail;

    public ProductOrderConciergeRequestBody withContactEmail(String contactEmail) {
        this.contactEmail = contactEmail;
        return this;
    }
    
    /**
     * Contact phone, will be contacted if concierge costs are exceeding the threshhold configured on your plan
     */
    @SpeakeasyMetadata("form:name=contactPhone")
    public String contactPhone;

    public ProductOrderConciergeRequestBody withContactPhone(String contactPhone) {
        this.contactPhone = contactPhone;
        return this;
    }
    
    /**
     * If the concierge cost should require additional confirmation if a threshold is reached (configured on your plan)
     */
    @SpeakeasyMetadata("form:name=costConfirmation")
    public Boolean costConfirmation;

    public ProductOrderConciergeRequestBody withCostConfirmation(Boolean costConfirmation) {
        this.costConfirmation = costConfirmation;
        return this;
    }
    
    /**
     * Two letter ISO code of the country of the company
     */
    @SpeakeasyMetadata("form:name=country")
    public String country;

    public ProductOrderConciergeRequestBody withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * If you want financial data of the company to be retrieved
     */
    @SpeakeasyMetadata("form:name=financialData")
    public Boolean financialData;

    public ProductOrderConciergeRequestBody withFinancialData(Boolean financialData) {
        this.financialData = financialData;
        return this;
    }
    
    /**
     * If you want historical data of the company to be retrieved
     */
    @SpeakeasyMetadata("form:name=historicInformation")
    public Boolean historicInformation;

    public ProductOrderConciergeRequestBody withHistoricInformation(Boolean historicInformation) {
        this.historicInformation = historicInformation;
        return this;
    }
    
    /**
     * Requirements on what document or information should be provided. Please be very precise
     */
    @SpeakeasyMetadata("form:name=informationRequirements")
    public String informationRequirements;

    public ProductOrderConciergeRequestBody withInformationRequirements(String informationRequirements) {
        this.informationRequirements = informationRequirements;
        return this;
    }
    
    /**
     * If the companies residency should be investigated
     */
    @SpeakeasyMetadata("form:name=locationInvestigation")
    public Boolean locationInvestigation;

    public ProductOrderConciergeRequestBody withLocationInvestigation(Boolean locationInvestigation) {
        this.locationInvestigation = locationInvestigation;
        return this;
    }
    
    /**
     * Priority of order: standard/express are allowed
     */
    @SpeakeasyMetadata("form:name=priority")
    public String priority;

    public ProductOrderConciergeRequestBody withPriority(String priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * If you want register data of the company to be retrieved
     */
    @SpeakeasyMetadata("form:name=registerData")
    public Boolean registerData;

    public ProductOrderConciergeRequestBody withRegisterData(Boolean registerData) {
        this.registerData = registerData;
        return this;
    }
    
    /**
     * Registration number of the company for which a document should be ordered. (Not required if subjectId is given)
     */
    @SpeakeasyMetadata("form:name=registerNumber")
    public String registerNumber;

    public ProductOrderConciergeRequestBody withRegisterNumber(String registerNumber) {
        this.registerNumber = registerNumber;
        return this;
    }
    
    /**
     * Kompanyid of the company you want to place the order for
     */
    @SpeakeasyMetadata("form:name=subjectId")
    public String subjectId;

    public ProductOrderConciergeRequestBody withSubjectId(String subjectId) {
        this.subjectId = subjectId;
        return this;
    }
    
    public ProductOrderConciergeRequestBody(){}
}
