/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigurationStatusEnum } from "./configurationstatusenum";
import { FormatEnum } from "./formatenum";
import { ImageGenerationDestinationConfig } from "./imagegenerationdestinationconfig";
import { ImageSelectorTypeEnum } from "./imageselectortypeenum";
import { Expose, Type } from "class-transformer";

/**
 * The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
 */
export class ImageGenerationConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DestinationConfig" })
  @Type(() => ImageGenerationDestinationConfig)
  destinationConfig: ImageGenerationDestinationConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "Format" })
  format: FormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "FormatConfig" })
  formatConfig?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "HeightPixels" })
  heightPixels?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageSelectorType" })
  imageSelectorType: ImageSelectorTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SamplingInterval" })
  samplingInterval: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: ConfigurationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "WidthPixels" })
  widthPixels?: number;
}
