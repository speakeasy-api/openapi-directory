// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CompensationHistogramRequestTypeEnum - Required. Type of the request, representing which field the histogramming should be performed over. A single request can only specify one histogram of each `CompensationHistogramRequestType`.
type CompensationHistogramRequestTypeEnum string

const (
	CompensationHistogramRequestTypeEnumCompensationHistogramRequestTypeUnspecified CompensationHistogramRequestTypeEnum = "COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED"
	CompensationHistogramRequestTypeEnumBase                                        CompensationHistogramRequestTypeEnum = "BASE"
	CompensationHistogramRequestTypeEnumAnnualizedBase                              CompensationHistogramRequestTypeEnum = "ANNUALIZED_BASE"
	CompensationHistogramRequestTypeEnumAnnualizedTotal                             CompensationHistogramRequestTypeEnum = "ANNUALIZED_TOTAL"
)

func (e *CompensationHistogramRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED":
		fallthrough
	case "BASE":
		fallthrough
	case "ANNUALIZED_BASE":
		fallthrough
	case "ANNUALIZED_TOTAL":
		*e = CompensationHistogramRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CompensationHistogramRequestTypeEnum: %s", s)
	}
}

// CompensationHistogramRequest - Input only. Compensation based histogram request.
type CompensationHistogramRequest struct {
	// Input only. Use this field to specify bucketing option for the histogram search response.
	BucketingOption *NumericBucketingOption `json:"bucketingOption,omitempty"`
	// Required. Type of the request, representing which field the histogramming should be performed over. A single request can only specify one histogram of each `CompensationHistogramRequestType`.
	Type *CompensationHistogramRequestTypeEnum `json:"type,omitempty"`
}
