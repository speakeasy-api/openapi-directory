// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImageScanStatusEnum string

const (
	ImageScanStatusEnumPending    ImageScanStatusEnum = "PENDING"
	ImageScanStatusEnumScanning   ImageScanStatusEnum = "SCANNING"
	ImageScanStatusEnumCollecting ImageScanStatusEnum = "COLLECTING"
	ImageScanStatusEnumCompleted  ImageScanStatusEnum = "COMPLETED"
	ImageScanStatusEnumAbandoned  ImageScanStatusEnum = "ABANDONED"
	ImageScanStatusEnumFailed     ImageScanStatusEnum = "FAILED"
	ImageScanStatusEnumTimedOut   ImageScanStatusEnum = "TIMED_OUT"
)

func (e ImageScanStatusEnum) ToPointer() *ImageScanStatusEnum {
	return &e
}

func (e *ImageScanStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "SCANNING":
		fallthrough
	case "COLLECTING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "ABANDONED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMED_OUT":
		*e = ImageScanStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageScanStatusEnum: %v", v)
	}
}
