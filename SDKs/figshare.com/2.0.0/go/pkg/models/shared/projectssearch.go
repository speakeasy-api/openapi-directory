// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectsSearchOrderEnum - The field by which to order.
type ProjectsSearchOrderEnum string

const (
	ProjectsSearchOrderEnumPublishedDate ProjectsSearchOrderEnum = "published_date"
	ProjectsSearchOrderEnumModifiedDate  ProjectsSearchOrderEnum = "modified_date"
	ProjectsSearchOrderEnumViews         ProjectsSearchOrderEnum = "views"
)

func (e *ProjectsSearchOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		*e = ProjectsSearchOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsSearchOrderEnum: %s", s)
	}
}

// ProjectsSearchOrderDirectionEnum - Direction of ordering
type ProjectsSearchOrderDirectionEnum string

const (
	ProjectsSearchOrderDirectionEnumAsc  ProjectsSearchOrderDirectionEnum = "asc"
	ProjectsSearchOrderDirectionEnumDesc ProjectsSearchOrderDirectionEnum = "desc"
)

func (e *ProjectsSearchOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = ProjectsSearchOrderDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsSearchOrderDirectionEnum: %s", s)
	}
}

// ProjectsSearch - Search Parameters
type ProjectsSearch struct {
	// only return collections from this group
	Group *int `json:"group,omitempty"`
	// only return collections from this institution
	Institution *int `json:"institution,omitempty"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `json:"limit,omitempty"`
	// Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	ModifiedSince *string `json:"modified_since,omitempty"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `json:"offset,omitempty"`
	// The field by which to order.
	Order *ProjectsSearchOrderEnum `json:"order,omitempty"`
	// Direction of ordering
	OrderDirection *ProjectsSearchOrderDirectionEnum `json:"order_direction,omitempty"`
	// Page number. Used for pagination with page_size
	Page *int64 `json:"page,omitempty"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `json:"page_size,omitempty"`
	// Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	PublishedSince *string `json:"published_since,omitempty"`
	// Search term
	SearchFor *string `json:"search_for,omitempty"`
}
