/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

export class CreateAFileParametersFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

/**
 * What the File will be used for in Increase's systems.
 */
export enum CreateAFileParametersPurposeEnum {
  CheckImageFront = "check_image_front",
  CheckImageBack = "check_image_back",
  FormSs4 = "form_ss_4",
  IdentityDocument = "identity_document",
  Other = "other",
  TrustFormationDocument = "trust_formation_document",
  DigitalWalletArtwork = "digital_wallet_artwork",
  DigitalWalletAppIcon = "digital_wallet_app_icon",
  EntitySupplementalDocument = "entity_supplemental_document",
}

export class CreateAFileParameters extends SpeakeasyBase {
  /**
   * The description you choose to give the File.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=description" })
  description?: string;

  /**
   * The file contents. This should follow the specifications of [RFC 7578](https://datatracker.ietf.org/doc/html/rfc7578) which defines file transfers for the multipart/form-data protocol.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: CreateAFileParametersFile;

  /**
   * What the File will be used for in Increase's systems.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=purpose" })
  purpose: CreateAFileParametersPurposeEnum;
}
