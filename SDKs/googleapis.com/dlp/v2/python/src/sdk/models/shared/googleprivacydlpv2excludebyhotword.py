"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2proximity as shared_googleprivacydlpv2proximity
from ..shared import googleprivacydlpv2regex as shared_googleprivacydlpv2regex
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2ExcludeByHotword:
    r"""The rule to exclude findings based on a hotword. For record inspection of tables, column names are considered hotwords. An example of this is to exclude a finding if it belongs to a BigQuery column that matches a specific pattern."""
    
    hotword_regex: Optional[shared_googleprivacydlpv2regex.GooglePrivacyDlpV2Regex] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hotwordRegex'), 'exclude': lambda f: f is None }})
    r"""Message defining a custom regular expression."""  
    proximity: Optional[shared_googleprivacydlpv2proximity.GooglePrivacyDlpV2Proximity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proximity'), 'exclude': lambda f: f is None }})
    r"""Message for specifying a window around a finding to apply a detection rule."""  
    