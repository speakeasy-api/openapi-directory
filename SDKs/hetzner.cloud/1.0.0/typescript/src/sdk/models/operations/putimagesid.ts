/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Destination Image type to convert to
 */
export enum PutImagesIdUpdateImageRequestTypeEnum {
  Snapshot = "snapshot",
}

export class PutImagesIdUpdateImageRequest extends SpeakeasyBase {
  /**
   * New description of Image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * User-defined labels (key-value pairs)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, any>;

  /**
   * Destination Image type to convert to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PutImagesIdUpdateImageRequestTypeEnum;
}

export class PutImagesIdRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PutImagesIdUpdateImageRequest;

  /**
   * ID of the Image
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Information about the Server the Image was created from
 */
export class PutImagesId200ApplicationJSONImageCreatedFrom extends SpeakeasyBase {
  /**
   * ID of the Server the Image was created from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Server name at the time the Image was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * Flavor of operating system contained in the Image
 */
export enum PutImagesId200ApplicationJSONImageOsFlavorEnum {
  Ubuntu = "ubuntu",
  Centos = "centos",
  Debian = "debian",
  Fedora = "fedora",
  Unknown = "unknown",
}

/**
 * Protection configuration for the Resource
 */
export class PutImagesId200ApplicationJSONImageProtection extends SpeakeasyBase {
  /**
   * If true, prevents the Resource from being deleted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delete" })
  delete: boolean;
}

/**
 * Whether the Image can be used or if it's still being created or unavailable
 */
export enum PutImagesId200ApplicationJSONImageStatusEnum {
  Available = "available",
  Creating = "creating",
  Unavailable = "unavailable",
}

/**
 * Type of the Image
 */
export enum PutImagesId200ApplicationJSONImageTypeEnum {
  System = "system",
  App = "app",
  Snapshot = "snapshot",
  Backup = "backup",
  Temporary = "temporary",
}

export class PutImagesId200ApplicationJSONImage extends SpeakeasyBase {
  /**
   * ID of Server the Image is bound to. Only set for Images of type `backup`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bound_to" })
  boundTo: number;

  /**
   * Point in time when the Resource was created (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created: string;

  /**
   * Information about the Server the Image was created from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_from" })
  @Type(() => PutImagesId200ApplicationJSONImageCreatedFrom)
  createdFrom: PutImagesId200ApplicationJSONImageCreatedFrom;

  /**
   * Point in time where the Image was deleted (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted: string;

  /**
   * Point in time when the Image is considered to be deprecated (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprecated" })
  deprecated: string;

  /**
   * Description of the Image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Size of the disk contained in the Image in GB
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disk_size" })
  diskSize: number;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_size" })
  imageSize: number;

  /**
   * User-defined labels (key-value pairs)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels: Record<string, string>;

  /**
   * Unique identifier of the Image. This value is only set for system Images.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Flavor of operating system contained in the Image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_flavor" })
  osFlavor: PutImagesId200ApplicationJSONImageOsFlavorEnum;

  /**
   * Operating system version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_version" })
  osVersion: string;

  /**
   * Protection configuration for the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protection" })
  @Type(() => PutImagesId200ApplicationJSONImageProtection)
  protection: PutImagesId200ApplicationJSONImageProtection;

  /**
   * Indicates that rapid deploy of the Image is available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rapid_deploy" })
  rapidDeploy?: boolean;

  /**
   * Whether the Image can be used or if it's still being created or unavailable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: PutImagesId200ApplicationJSONImageStatusEnum;

  /**
   * Type of the Image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PutImagesId200ApplicationJSONImageTypeEnum;
}

/**
 * The image key in the reply contains the modified Image object
 */
export class PutImagesId200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => PutImagesId200ApplicationJSONImage)
  image?: PutImagesId200ApplicationJSONImage;
}

export class PutImagesIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The image key in the reply contains the modified Image object
   */
  @SpeakeasyMetadata()
  putImagesId200ApplicationJSONObject?: PutImagesId200ApplicationJSON;
}
