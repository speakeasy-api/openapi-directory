<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetQuoteSearchRequest
{
    /**
     * Quote Author
     * 
     * @var ?string $author
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=author')]
    public ?string $author = null;
    
    /**
     * Quote Category
     * 
     * @var ?string $category
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=category')]
    public ?string $category = null;
    
    /**
     * Language of the Quote. The language must be supported in our system.
     * 
     * @var ?string $language
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=language')]
    public ?string $language = null;
    
    /**
     * No of quotes to return. The max limit depends on the subscription level.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Quote maximum Length
     * 
     * @var ?int $maxlength
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxlength')]
    public ?int $maxlength = null;
    
    /**
     * Quote minimum Length
     * 
     * @var ?int $minlength
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=minlength')]
    public ?int $minlength = null;
    
    /**
     * Should search private collection? Default searches public collection.
     * 
     * @var ?bool $private
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=private')]
    public ?bool $private = null;
    
    /**
     * keyword to search for in the quote
     * 
     * @var ?string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;
    
    /**
     * Should search only SFW (Safe For Work) quotes?
     * 
     * @var ?bool $sfw
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sfw')]
    public ?bool $sfw = null;
    
	public function __construct()
	{
		$this->author = null;
		$this->category = null;
		$this->language = null;
		$this->limit = null;
		$this->maxlength = null;
		$this->minlength = null;
		$this->private = null;
		$this->query = null;
		$this->sfw = null;
	}
}
