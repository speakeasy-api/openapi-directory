/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AllowanceCharge {
    /**
     * The amount for the allowance or charge, excluding tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountExcludingTax")public Double amountExcludingTax;
    public AllowanceCharge withAmountExcludingTax(Double amountExcludingTax) {
        this.amountExcludingTax = amountExcludingTax;
        return this;
    }
    
    /**
     * DEPRECATED. Use amountExcludingTax. The amount for the allowance or charge, excluding VAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountExcludingVat")public Double amountExcludingVat;
    public AllowanceCharge withAmountExcludingVat(Double amountExcludingVat) {
        this.amountExcludingVat = amountExcludingVat;
        return this;
    }
    
    /**
     * The base amount for the allowance or charge, excluding tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseAmountExcludingTax")public Double baseAmountExcludingTax;
    public AllowanceCharge withBaseAmountExcludingTax(Double baseAmountExcludingTax) {
        this.baseAmountExcludingTax = baseAmountExcludingTax;
        return this;
    }
    
    /**
     * The reason for the allowance or charge, free text
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")public String reason;
    public AllowanceCharge withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * Do not use. Contact Storecove first if you want to use this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasonCode")public String reasonCode;
    public AllowanceCharge withReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")public Tax tax;
    public AllowanceCharge withTax(Tax tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * An array of taxes, duties and fees for this invoice line. At this moment, multiple Tax items is allowed only for IN (India) and US (USA) taxes. All other countries can only have a single Tax item in this array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxesDutiesFees")public Tax[] taxesDutiesFees;
    public AllowanceCharge withTaxesDutiesFees(Tax[] taxesDutiesFees) {
        this.taxesDutiesFees = taxesDutiesFees;
        return this;
    }
    
}
