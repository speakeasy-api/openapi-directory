/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetCharityOrgsRequest {
    /**
     * A header used to specify the eBay marketplace ID.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;EBAY_GB&lt;/code&gt; and &lt;code&gt;EBAY_US&lt;/code&gt;
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-EBAY-C-MARKETPLACE-ID")
    public String xEbayCMarketplaceId;

    public GetCharityOrgsRequest withXEbayCMarketplaceId(String xEbayCMarketplaceId) {
        this.xEbayCMarketplaceId = xEbayCMarketplaceId;
        return this;
    }
    
    /**
     * The number of items, from the result set, returned in a single page.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;1-100&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;20&lt;/code&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public String limit;

    public GetCharityOrgsRequest withLimit(String limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The number of items that will be skipped in the result set. This is used with the &lt;b&gt;limit&lt;/b&gt; field to control the pagination of the output.&lt;br /&gt;&lt;br /&gt;For example, if the &lt;b&gt;offset&lt;/b&gt; is set to &lt;code&gt;0&lt;/code&gt; and the &lt;b&gt;limit&lt;/b&gt; is set to &lt;code&gt;10&lt;/code&gt;, the method will retrieve items 1 through 10 from the list of items returned. If the &lt;b&gt;offset&lt;/b&gt; is set to &lt;code&gt;10&lt;/code&gt; and the &lt;b&gt;limit&lt;/b&gt; is set to &lt;code&gt;10&lt;/code&gt;, the method will retrieve items 11 through 20 from the list of items returned.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;0-10,000&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;0&lt;/code&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public String offset;

    public GetCharityOrgsRequest withOffset(String offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * A query string that matches the keywords in name, mission statement, or description.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;

    public GetCharityOrgsRequest withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * A comma-separated list of charitable organization registration IDs.&lt;br /&gt;&lt;br /&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note: &lt;/b&gt;Do not specify this parameter for query-based searches. Specify either the &lt;b&gt;q&lt;/b&gt; or &lt;b&gt;registration_ids&lt;/b&gt; parameter, but not both.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Maximum Limit:&lt;/b&gt; &lt;code&gt;20&lt;/code&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=registration_ids")
    public String registrationIds;

    public GetCharityOrgsRequest withRegistrationIds(String registrationIds) {
        this.registrationIds = registrationIds;
        return this;
    }
    
    public GetCharityOrgsRequest(@JsonProperty("X-EBAY-C-MARKETPLACE-ID") String xEbayCMarketplaceId) {
        this.xEbayCMarketplaceId = xEbayCMarketplaceId;
  }
}
