/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OnFailure } from "./onfailure";
import { OnSuccess } from "./onsuccess";
import { Expose, Type } from "class-transformer";

/**
 * A configuration object that specifies the destination of an event after Lambda processes it.
 */
export class DestinationConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "OnFailure" })
  @Type(() => OnFailure)
  onFailure?: OnFailure;

  @SpeakeasyMetadata()
  @Expose({ name: "OnSuccess" })
  @Type(() => OnSuccess)
  onSuccess?: OnSuccess;
}
