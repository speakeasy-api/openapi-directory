/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DevicesRegisterUserForDeviceRequestBody - The information for a single iOS device
 */
public class DevicesRegisterUserForDeviceRequestBody {
    /**
     * The device's International Mobile Equipment Identity number. Always empty or undefined at present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imei")
    public String imei;

    public DevicesRegisterUserForDeviceRequestBody withImei(String imei) {
        this.imei = imei;
        return this;
    }
    
    /**
     * The model identifier of the device, in the format iDeviceM,N
     */
    @JsonProperty("model")
    public String model;

    public DevicesRegisterUserForDeviceRequestBody withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * The build number of the last known OS version running on the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os_build")
    public String osBuild;

    public DevicesRegisterUserForDeviceRequestBody withOsBuild(String osBuild) {
        this.osBuild = osBuild;
        return this;
    }
    
    /**
     * The last known OS version running on the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os_version")
    public String osVersion;

    public DevicesRegisterUserForDeviceRequestBody withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * The user ID of the device owner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_id")
    public String ownerId;

    public DevicesRegisterUserForDeviceRequestBody withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * The device's serial number. Always empty or undefined at present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serial")
    public String serial;

    public DevicesRegisterUserForDeviceRequestBody withSerial(String serial) {
        this.serial = serial;
        return this;
    }
    
    /**
     * The Unique Device IDentifier of the device
     */
    @JsonProperty("udid")
    public String udid;

    public DevicesRegisterUserForDeviceRequestBody withUdid(String udid) {
        this.udid = udid;
        return this;
    }
    
    public DevicesRegisterUserForDeviceRequestBody(@JsonProperty("model") String model, @JsonProperty("udid") String udid) {
        this.model = model;
        this.udid = udid;
  }
}
