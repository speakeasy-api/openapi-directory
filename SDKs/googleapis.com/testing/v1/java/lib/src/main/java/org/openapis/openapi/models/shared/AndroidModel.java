/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AndroidModel - A description of an Android device tests may be run on.
 */
public class AndroidModel {
    /**
     * The company that this device is branded with. Example: "Google", "Samsung".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brand")
    public String brand;
    public AndroidModel withBrand(String brand) {
        this.brand = brand;
        return this;
    }
    
    /**
     * The name of the industrial design. This corresponds to android.os.Build.DEVICE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codename")
    public String codename;
    public AndroidModel withCodename(String codename) {
        this.codename = codename;
        return this;
    }
    
    /**
     * Whether this device is virtual or physical.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form")
    public AndroidModelFormEnum form;
    public AndroidModel withForm(AndroidModelFormEnum form) {
        this.form = form;
        return this;
    }
    
    /**
     * Whether this device is a phone, tablet, wearable, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formFactor")
    public AndroidModelFormFactorEnum formFactor;
    public AndroidModel withFormFactor(AndroidModelFormFactorEnum formFactor) {
        this.formFactor = formFactor;
        return this;
    }
    
    /**
     * The unique opaque id for this model. Use this for invoking the TestExecutionService.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AndroidModel withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * True if and only if tests with this model are recorded by stitching together screenshots. See use_low_spec_video_recording in device config.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lowFpsVideoRecording")
    public Boolean lowFpsVideoRecording;
    public AndroidModel withLowFpsVideoRecording(Boolean lowFpsVideoRecording) {
        this.lowFpsVideoRecording = lowFpsVideoRecording;
        return this;
    }
    
    /**
     * The manufacturer of this device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manufacturer")
    public String manufacturer;
    public AndroidModel withManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
        return this;
    }
    
    /**
     * The human-readable marketing name for this device model. Examples: "Nexus 5", "Galaxy S5".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public AndroidModel withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Version-specific information of an Android model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("perVersionInfo")
    public PerAndroidVersionInfo[] perVersionInfo;
    public AndroidModel withPerVersionInfo(PerAndroidVersionInfo[] perVersionInfo) {
        this.perVersionInfo = perVersionInfo;
        return this;
    }
    
    /**
     * Screen density in DPI. This corresponds to ro.sf.lcd_density
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screenDensity")
    public Integer screenDensity;
    public AndroidModel withScreenDensity(Integer screenDensity) {
        this.screenDensity = screenDensity;
        return this;
    }
    
    /**
     * Screen size in the horizontal (X) dimension measured in pixels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screenX")
    public Integer screenX;
    public AndroidModel withScreenX(Integer screenX) {
        this.screenX = screenX;
        return this;
    }
    
    /**
     * Screen size in the vertical (Y) dimension measured in pixels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screenY")
    public Integer screenY;
    public AndroidModel withScreenY(Integer screenY) {
        this.screenY = screenY;
        return this;
    }
    
    /**
     * The list of supported ABIs for this device. This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2. The most preferred ABI is the first element in the list. Elements are optionally prefixed by "version_id:" (where version_id is the id of an AndroidVersion), denoting an ABI that is supported only on a particular version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedAbis")
    public String[] supportedAbis;
    public AndroidModel withSupportedAbis(String[] supportedAbis) {
        this.supportedAbis = supportedAbis;
        return this;
    }
    
    /**
     * The set of Android versions this device supports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedVersionIds")
    public String[] supportedVersionIds;
    public AndroidModel withSupportedVersionIds(String[] supportedVersionIds) {
        this.supportedVersionIds = supportedVersionIds;
        return this;
    }
    
    /**
     * Tags for this dimension. Examples: "default", "preview", "deprecated".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;
    public AndroidModel withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * URL of a thumbnail image (photo) of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailUrl")
    public String thumbnailUrl;
    public AndroidModel withThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
        return this;
    }
    
}
