// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LiveChatUserBannedMessageDetailsBanTypeEnum - The type of ban.
type LiveChatUserBannedMessageDetailsBanTypeEnum string

const (
	LiveChatUserBannedMessageDetailsBanTypeEnumPermanent LiveChatUserBannedMessageDetailsBanTypeEnum = "permanent"
	LiveChatUserBannedMessageDetailsBanTypeEnumTemporary LiveChatUserBannedMessageDetailsBanTypeEnum = "temporary"
)

func (e LiveChatUserBannedMessageDetailsBanTypeEnum) ToPointer() *LiveChatUserBannedMessageDetailsBanTypeEnum {
	return &e
}

func (e *LiveChatUserBannedMessageDetailsBanTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "permanent":
		fallthrough
	case "temporary":
		*e = LiveChatUserBannedMessageDetailsBanTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LiveChatUserBannedMessageDetailsBanTypeEnum: %v", v)
	}
}

type LiveChatUserBannedMessageDetails struct {
	// The duration of the ban. This property is only present if the banType is temporary.
	BanDurationSeconds *string `json:"banDurationSeconds,omitempty"`
	// The type of ban.
	BanType           *LiveChatUserBannedMessageDetailsBanTypeEnum `json:"banType,omitempty"`
	BannedUserDetails *ChannelProfileDetails                       `json:"bannedUserDetails,omitempty"`
}
