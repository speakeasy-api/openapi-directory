"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deviceundertest as shared_deviceundertest
from ..shared import protocol_enum as shared_protocol_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuiteDefinitionConfiguration:
    r"""Gets the suite definition configuration."""
    
    device_permission_role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devicePermissionRoleArn') }})  
    root_group: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rootGroup') }})  
    suite_definition_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suiteDefinitionName') }})  
    devices: Optional[list[shared_deviceundertest.DeviceUnderTest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices'), 'exclude': lambda f: f is None }})  
    intended_for_qualification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intendedForQualification'), 'exclude': lambda f: f is None }})  
    is_long_duration_test: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isLongDurationTest'), 'exclude': lambda f: f is None }})  
    protocol: Optional[shared_protocol_enum.ProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol'), 'exclude': lambda f: f is None }})  
    