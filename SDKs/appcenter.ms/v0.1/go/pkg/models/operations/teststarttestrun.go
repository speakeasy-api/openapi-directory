// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type TestStartTestRunSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type TestStartTestRunPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the test run
	TestRunID string `pathParam:"style=simple,explode=false,name=test_run_id"`
}

// TestStartTestRunTestCloudStartTestRunOptions - Options required to start the test run
type TestStartTestRunTestCloudStartTestRunOptions struct {
	// Device selection string.
	DeviceSelection string `json:"device_selection"`
	// Language that should be used to run tests.
	Language *string `json:"language,omitempty"`
	// Locale that should be used to run tests.
	Locale *string `json:"locale,omitempty"`
	// Test framework used by tests.
	TestFramework string `json:"test_framework"`
	// A JSON dictionary with additional test parameters
	TestParameters map[string]interface{} `json:"test_parameters,omitempty"`
	// Name of the test series.
	TestSeries *string `json:"test_series,omitempty"`
}

type TestStartTestRunRequest struct {
	PathParams TestStartTestRunPathParams
	// Option required to start the test run
	Request  TestStartTestRunTestCloudStartTestRunOptions `request:"mediaType=application/json"`
	Security TestStartTestRunSecurity
}

// TestStartTestRunTestCloudTestRunStartResult - Result of starting a test run
type TestStartTestRunTestCloudTestRunStartResult struct {
	// List with names of accepted devices
	AcceptedDevices []string `json:"accepted_devices,omitempty"`
	// List with names and descriptions of rejected devices
	RejectedDevices []string `json:"rejected_devices,omitempty"`
}

type TestStartTestRunResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TestCloudTestRunStartResult *TestStartTestRunTestCloudTestRunStartResult
}
