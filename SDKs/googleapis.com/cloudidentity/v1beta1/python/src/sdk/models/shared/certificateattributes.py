"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import certificatetemplate as shared_certificatetemplate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CertificateAttributesValidationStateEnum(str, Enum):
    r"""Validation state of this certificate."""
    CERTIFICATE_VALIDATION_STATE_UNSPECIFIED = 'CERTIFICATE_VALIDATION_STATE_UNSPECIFIED'
    VALIDATION_SUCCESSFUL = 'VALIDATION_SUCCESSFUL'
    VALIDATION_FAILED = 'VALIDATION_FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CertificateAttributes:
    r"""Stores information about a certificate."""
    
    certificate_template: Optional[shared_certificatetemplate.CertificateTemplate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateTemplate'), 'exclude': lambda f: f is None }})
    r"""CertificateTemplate (v3 Extension in X.509)."""  
    fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""The encoded certificate fingerprint."""  
    issuer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuer'), 'exclude': lambda f: f is None }})
    r"""The name of the issuer of this certificate."""  
    serial_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serialNumber'), 'exclude': lambda f: f is None }})
    r"""Serial number of the certificate, Example: \\"123456789\\"."""  
    subject: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subject'), 'exclude': lambda f: f is None }})
    r"""The subject name of this certificate."""  
    thumbprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbprint'), 'exclude': lambda f: f is None }})
    r"""The certificate thumbprint."""  
    validation_state: Optional[CertificateAttributesValidationStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationState'), 'exclude': lambda f: f is None }})
    r"""Validation state of this certificate."""  
    validity_expiration_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validityExpirationTime'), 'exclude': lambda f: f is None }})
    r"""Certificate not valid at or after this timestamp."""  
    validity_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validityStartTime'), 'exclude': lambda f: f is None }})
    r"""Certificate not valid before this timestamp."""  
    