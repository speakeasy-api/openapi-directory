<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FlightOfferTravelerPricingFareDetailsBySegment - Fare details of the segment
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FlightOfferTravelerPricingFareDetailsBySegment
{
	#[\JMS\Serializer\Annotation\SerializedName('additionalServices')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FlightOfferTravelerPricingFareDetailsBySegmentAdditionalServicesRequest')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FlightOfferTravelerPricingFareDetailsBySegmentAdditionalServicesRequest $additionalServices = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('allotmentDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FlightOfferTravelerPricingFareDetailsBySegmentAllotmentDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FlightOfferTravelerPricingFareDetailsBySegmentAllotmentDetails $allotmentDetails = null;
    
    /**
     * The name of the Fare Family corresponding to the fares. Only for the GDS provider and if the airline has fare families filled
     * 
     * @var ?string $brandedFare
     */
	#[\JMS\Serializer\Annotation\SerializedName('brandedFare')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $brandedFare = null;
    
    /**
     * quality of service offered in the cabin where the seat is located in this flight. Economy, premium economy, business or first class
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TravelClassEnum $cabin
     */
	#[\JMS\Serializer\Annotation\SerializedName('cabin')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TravelClassEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TravelClassEnum $cabin = null;
    
    /**
     * The code of the booking class, a.k.a. class of service or Reservations/Booking Designator (RBD)
     * 
     * @var ?string $class
     */
	#[\JMS\Serializer\Annotation\SerializedName('class')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $class = null;
    
    /**
     * Fare basis specifying the rules of a fare. Usually, though not always, is composed of the booking class code followed by a set of letters and digits representing other characteristics of the ticket, such as refundability, minimum stay requirements, discounts or special promotional elements.
     * 
     * @var ?string $fareBasis
     */
	#[\JMS\Serializer\Annotation\SerializedName('fareBasis')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fareBasis = null;
    
    /**
     * baggageAllowance
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BaggageAllowance $includedCheckedBags
     */
	#[\JMS\Serializer\Annotation\SerializedName('includedCheckedBags')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BaggageAllowance')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BaggageAllowance $includedCheckedBags = null;
    
    /**
     * True if the corresponding booking class is in an allotment
     * 
     * @var ?bool $isAllotment
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAllotment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAllotment = null;
    
    /**
     * Id of the segment
     * 
     * @var string $segmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('segmentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $segmentId;
    
    /**
     * slice and Dice indicator, such as Local Availability, Sub OnD(Origin and Destination) 1 Availability and Sub OnD 2 Availability
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SliceDiceIndicatorEnum $sliceDiceIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('sliceDiceIndicator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SliceDiceIndicatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SliceDiceIndicatorEnum $sliceDiceIndicator = null;
    
	public function __construct()
	{
		$this->additionalServices = null;
		$this->allotmentDetails = null;
		$this->brandedFare = null;
		$this->cabin = null;
		$this->class = null;
		$this->fareBasis = null;
		$this->includedCheckedBags = null;
		$this->isAllotment = null;
		$this->segmentId = "";
		$this->sliceDiceIndicator = null;
	}
}
