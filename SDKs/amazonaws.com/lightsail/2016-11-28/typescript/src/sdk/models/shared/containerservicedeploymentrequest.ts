/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Container } from "./container";
import { EndpointRequest } from "./endpointrequest";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Describes a container deployment configuration of an Amazon Lightsail container service.</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p>
 */
export class ContainerServiceDeploymentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Container })
  @Expose({ name: "containers" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Container> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Container);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  containers?: Record<string, Container>;

  @SpeakeasyMetadata()
  @Expose({ name: "publicEndpoint" })
  @Type(() => EndpointRequest)
  publicEndpoint?: EndpointRequest;
}
