/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The subscription protocol to which exception notifications are posted.
 */
export enum CreateDatalakeExceptionsSubscriptionRequestBodySubscriptionProtocolEnum {
  Http = "HTTP",
  Https = "HTTPS",
  Email = "EMAIL",
  EmailJson = "EMAIL_JSON",
  Sms = "SMS",
  Sqs = "SQS",
  Lambda = "LAMBDA",
  App = "APP",
  Firehose = "FIREHOSE",
}

export class CreateDatalakeExceptionsSubscriptionRequestBody extends SpeakeasyBase {
  /**
   * The Amazon Web Services account where you want to receive exception notifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationEndpoint" })
  notificationEndpoint: string;

  /**
   * The subscription protocol to which exception notifications are posted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionProtocol" })
  subscriptionProtocol: CreateDatalakeExceptionsSubscriptionRequestBodySubscriptionProtocolEnum;
}

export class CreateDatalakeExceptionsSubscriptionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateDatalakeExceptionsSubscriptionRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateDatalakeExceptionsSubscriptionResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * AccountNotFoundException
   */
  @SpeakeasyMetadata()
  accountNotFoundException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createDatalakeExceptionsSubscriptionResponse?: Record<string, any>;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
