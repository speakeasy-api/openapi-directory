// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartMLLabelingSetGenerationTaskRunXAmzTargetEnum
type StartMLLabelingSetGenerationTaskRunXAmzTargetEnum string

const (
	StartMLLabelingSetGenerationTaskRunXAmzTargetEnumAwsGlueStartMlLabelingSetGenerationTaskRun StartMLLabelingSetGenerationTaskRunXAmzTargetEnum = "AWSGlue.StartMLLabelingSetGenerationTaskRun"
)

func (e StartMLLabelingSetGenerationTaskRunXAmzTargetEnum) ToPointer() *StartMLLabelingSetGenerationTaskRunXAmzTargetEnum {
	return &e
}

func (e *StartMLLabelingSetGenerationTaskRunXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.StartMLLabelingSetGenerationTaskRun":
		*e = StartMLLabelingSetGenerationTaskRunXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartMLLabelingSetGenerationTaskRunXAmzTargetEnum: %v", v)
	}
}

type StartMLLabelingSetGenerationTaskRunRequest struct {
	StartMLLabelingSetGenerationTaskRunRequest shared.StartMLLabelingSetGenerationTaskRunRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                              *string                                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                          *string                                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                             *string                                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                   *string                                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                          *string                                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                              *string                                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                          *string                                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                 StartMLLabelingSetGenerationTaskRunXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartMLLabelingSetGenerationTaskRunResponse struct {
	// ConcurrentRunsExceededException
	ConcurrentRunsExceededException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	StartMLLabelingSetGenerationTaskRunResponse *shared.StartMLLabelingSetGenerationTaskRunResponse
	StatusCode                                  int
	RawResponse                                 *http.Response
}
