"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import segmenttype_enum as shared_segmenttype_enum
from ..shared import shotsegment as shared_shotsegment
from ..shared import technicalcuesegment as shared_technicalcuesegment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentDetection:
    r"""A technical cue or shot detection segment detected in a video. An array of <code>SegmentDetection</code> objects containing all segments detected in a stored video is returned by <a>GetSegmentDetection</a>."""
    
    duration_frames: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DurationFrames'), 'exclude': lambda f: f is None }})  
    duration_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DurationMillis'), 'exclude': lambda f: f is None }})  
    duration_smpte: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DurationSMPTE'), 'exclude': lambda f: f is None }})  
    end_frame_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndFrameNumber'), 'exclude': lambda f: f is None }})  
    end_timecode_smpte: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndTimecodeSMPTE'), 'exclude': lambda f: f is None }})  
    end_timestamp_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndTimestampMillis'), 'exclude': lambda f: f is None }})  
    shot_segment: Optional[shared_shotsegment.ShotSegment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShotSegment'), 'exclude': lambda f: f is None }})  
    start_frame_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartFrameNumber'), 'exclude': lambda f: f is None }})  
    start_timecode_smpte: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartTimecodeSMPTE'), 'exclude': lambda f: f is None }})  
    start_timestamp_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartTimestampMillis'), 'exclude': lambda f: f is None }})  
    technical_cue_segment: Optional[shared_technicalcuesegment.TechnicalCueSegment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TechnicalCueSegment'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_segmenttype_enum.SegmentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    