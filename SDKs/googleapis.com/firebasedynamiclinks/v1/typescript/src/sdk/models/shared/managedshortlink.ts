/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DynamicLinkInfo } from "./dynamiclinkinfo";
import { Expose, Type } from "class-transformer";

export enum ManagedShortLinkFlaggedAttributeEnum {
  UnspecifiedAttribute = "UNSPECIFIED_ATTRIBUTE",
  Spam = "SPAM",
}

/**
 * Visibility status of link.
 */
export enum ManagedShortLinkVisibilityEnum {
  UnspecifiedVisibility = "UNSPECIFIED_VISIBILITY",
  Unarchived = "UNARCHIVED",
  Archived = "ARCHIVED",
  NeverShown = "NEVER_SHOWN",
}

/**
 * Managed Short Link.
 */
export class ManagedShortLink extends SpeakeasyBase {
  /**
   * Creation timestamp of the short link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  creationTime?: string;

  /**
   * Attributes that have been flagged about this short url.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flaggedAttribute" })
  flaggedAttribute?: ManagedShortLinkFlaggedAttributeEnum[];

  /**
   * Information about a Dynamic Link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  @Type(() => DynamicLinkInfo)
  info?: DynamicLinkInfo;

  /**
   * Short durable link url, for example, "https://sample.app.goo.gl/xyz123". Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * Link name defined by the creator. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkName" })
  linkName?: string;

  /**
   * Visibility status of link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: ManagedShortLinkVisibilityEnum;
}
