// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListCallsDirectionEnum - Filter by call direction. For multiple criteria, seperate values by a comma.
type ListCallsDirectionEnum string

const (
	ListCallsDirectionEnumInbound  ListCallsDirectionEnum = "INBOUND"
	ListCallsDirectionEnumOutbound ListCallsDirectionEnum = "OUTBOUND"
)

func (e ListCallsDirectionEnum) ToPointer() *ListCallsDirectionEnum {
	return &e
}

func (e *ListCallsDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INBOUND":
		fallthrough
	case "OUTBOUND":
		*e = ListCallsDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallsDirectionEnum: %v", v)
	}
}

// ListCallsOrderEnum - Sort in either ascending or descending order
type ListCallsOrderEnum string

const (
	ListCallsOrderEnumDesc ListCallsOrderEnum = "DESC"
	ListCallsOrderEnumAsc  ListCallsOrderEnum = "ASC"
)

func (e ListCallsOrderEnum) ToPointer() *ListCallsOrderEnum {
	return &e
}

func (e *ListCallsOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DESC":
		fallthrough
	case "ASC":
		*e = ListCallsOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallsOrderEnum: %v", v)
	}
}

// ListCallsStatesEnum - Filter calls by state. For multiple criteria, seperate values by a comma.
type ListCallsStatesEnum string

const (
	ListCallsStatesEnumInitializing ListCallsStatesEnum = "INITIALIZING"
	ListCallsStatesEnumRinging      ListCallsStatesEnum = "RINGING"
	ListCallsStatesEnumActive       ListCallsStatesEnum = "ACTIVE"
	ListCallsStatesEnumHeld         ListCallsStatesEnum = "HELD"
	ListCallsStatesEnumRemoteHeld   ListCallsStatesEnum = "REMOTE_HELD"
)

func (e ListCallsStatesEnum) ToPointer() *ListCallsStatesEnum {
	return &e
}

func (e *ListCallsStatesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INITIALIZING":
		fallthrough
	case "RINGING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "HELD":
		fallthrough
	case "REMOTE_HELD":
		*e = ListCallsStatesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallsStatesEnum: %v", v)
	}
}

type ListCallsRequest struct {
	// Filter by call direction. For multiple criteria, seperate values by a comma.
	Direction *ListCallsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// Return calls that occurred after this point in time
	FromDate *int64 `queryParam:"style=form,explode=true,name=fromDate"`
	// Page number of calls to return
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Sort in either ascending or descending order
	Order *ListCallsOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// Return this amount of calls in the response
	Size *int64 `queryParam:"style=form,explode=true,name=size"`
	// Sort calls by property
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Filter calls by state. For multiple criteria, seperate values by a comma.
	States *ListCallsStatesEnum `queryParam:"style=form,explode=true,name=states"`
	// Return calls that occurred before this point in time
	ToDate *int64 `queryParam:"style=form,explode=true,name=toDate"`
}

type ListCallsResponse struct {
	// Successful
	Calls       []shared.Call
	ContentType string
	// Bad Request: The client should not repeat the request without modifications
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
}
