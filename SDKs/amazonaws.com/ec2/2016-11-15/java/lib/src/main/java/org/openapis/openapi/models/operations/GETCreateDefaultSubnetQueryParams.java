/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateDefaultSubnetQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateDefaultSubnetActionEnum action;
    public GETCreateDefaultSubnetQueryParams withAction(GETCreateDefaultSubnetActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The Availability Zone in which to create the default subnet.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AvailabilityZone")
    public String availabilityZone;
    public GETCreateDefaultSubnetQueryParams withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETCreateDefaultSubnetQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Indicates whether to create an IPv6 only subnet. If you already have a default subnet for this Availability Zone, you must delete it before you can create an IPv6 only subnet.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Ipv6Native")
    public Boolean ipv6Native;
    public GETCreateDefaultSubnetQueryParams withIpv6Native(Boolean ipv6Native) {
        this.ipv6Native = ipv6Native;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateDefaultSubnetVersionEnum version;
    public GETCreateDefaultSubnetQueryParams withVersion(GETCreateDefaultSubnetVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
