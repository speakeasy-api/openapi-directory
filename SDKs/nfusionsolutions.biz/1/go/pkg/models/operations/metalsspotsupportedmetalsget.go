// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// MetalsSpotSupportedMetalsGETFormatEnum - to override content negotiation specify a value of json or xml
type MetalsSpotSupportedMetalsGETFormatEnum string

const (
	MetalsSpotSupportedMetalsGETFormatEnumJSON MetalsSpotSupportedMetalsGETFormatEnum = "json"
	MetalsSpotSupportedMetalsGETFormatEnumXML  MetalsSpotSupportedMetalsGETFormatEnum = "xml"
)

func (e MetalsSpotSupportedMetalsGETFormatEnum) ToPointer() *MetalsSpotSupportedMetalsGETFormatEnum {
	return &e
}

func (e *MetalsSpotSupportedMetalsGETFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = MetalsSpotSupportedMetalsGETFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsSpotSupportedMetalsGETFormatEnum: %v", v)
	}
}

type MetalsSpotSupportedMetalsGETRequest struct {
	// to override content negotiation specify a value of json or xml
	Format *MetalsSpotSupportedMetalsGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
}

type MetalsSpotSupportedMetalsGETResponse struct {
	Body        []byte
	ContentType string
	// Success
	MetalsSpotSupportedMetalsGET200ApplicationJSONStrings []string
	StatusCode                                            int
	RawResponse                                           *http.Response
}
