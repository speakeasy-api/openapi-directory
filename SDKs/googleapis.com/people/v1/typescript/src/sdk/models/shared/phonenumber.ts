/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FieldMetadata, FieldMetadataInput } from "./fieldmetadata";
import { Expose, Type } from "class-transformer";

/**
 * A person's phone number.
 */
export class PhoneNumber extends SpeakeasyBase {
  /**
   * Output only. The canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canonicalForm" })
  canonicalForm?: string;

  /**
   * Output only. The type of the phone number translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formattedType" })
  formattedType?: string;

  /**
   * Metadata about a field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => FieldMetadata)
  metadata?: FieldMetadata;

  /**
   * The type of the phone number. The type can be custom or one of these predefined values: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * A person's phone number.
 */
export class PhoneNumberInput extends SpeakeasyBase {
  /**
   * Metadata about a field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => FieldMetadataInput)
  metadata?: FieldMetadataInput;

  /**
   * The type of the phone number. The type can be custom or one of these predefined values: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
