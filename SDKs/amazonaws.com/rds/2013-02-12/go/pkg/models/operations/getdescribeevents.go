// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETDescribeEventsActionEnum
type GETDescribeEventsActionEnum string

const (
	GETDescribeEventsActionEnumDescribeEvents GETDescribeEventsActionEnum = "DescribeEvents"
)

func (e *GETDescribeEventsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeEvents":
		*e = GETDescribeEventsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventsActionEnum: %s", s)
	}
}

// GETDescribeEventsSourceTypeEnum
type GETDescribeEventsSourceTypeEnum string

const (
	GETDescribeEventsSourceTypeEnumDbInstance       GETDescribeEventsSourceTypeEnum = "db-instance"
	GETDescribeEventsSourceTypeEnumDbParameterGroup GETDescribeEventsSourceTypeEnum = "db-parameter-group"
	GETDescribeEventsSourceTypeEnumDbSecurityGroup  GETDescribeEventsSourceTypeEnum = "db-security-group"
	GETDescribeEventsSourceTypeEnumDbSnapshot       GETDescribeEventsSourceTypeEnum = "db-snapshot"
)

func (e *GETDescribeEventsSourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "db-instance":
		fallthrough
	case "db-parameter-group":
		fallthrough
	case "db-security-group":
		fallthrough
	case "db-snapshot":
		*e = GETDescribeEventsSourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventsSourceTypeEnum: %s", s)
	}
}

// GETDescribeEventsVersionEnum
type GETDescribeEventsVersionEnum string

const (
	GETDescribeEventsVersionEnumTwoThousandAndThirteen0212 GETDescribeEventsVersionEnum = "2013-02-12"
)

func (e *GETDescribeEventsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-02-12":
		*e = GETDescribeEventsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventsVersionEnum: %s", s)
	}
}

type GETDescribeEventsRequest struct {
	Action            GETDescribeEventsActionEnum      `queryParam:"style=form,explode=true,name=Action"`
	Duration          *int64                           `queryParam:"style=form,explode=true,name=Duration"`
	EndTime           *time.Time                       `queryParam:"style=form,explode=true,name=EndTime"`
	EventCategories   []string                         `queryParam:"style=form,explode=true,name=EventCategories"`
	Marker            *string                          `queryParam:"style=form,explode=true,name=Marker"`
	MaxRecords        *int64                           `queryParam:"style=form,explode=true,name=MaxRecords"`
	SourceIdentifier  *string                          `queryParam:"style=form,explode=true,name=SourceIdentifier"`
	SourceType        *GETDescribeEventsSourceTypeEnum `queryParam:"style=form,explode=true,name=SourceType"`
	StartTime         *time.Time                       `queryParam:"style=form,explode=true,name=StartTime"`
	Version           GETDescribeEventsVersionEnum     `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEventsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
