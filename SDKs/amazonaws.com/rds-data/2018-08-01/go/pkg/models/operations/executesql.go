// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ExecuteSQLRequestBody struct {
	// <p>The Amazon Resource Name (ARN) of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret.</p> <p>For information about creating the secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html">Create a database secret</a>.</p>
	AwsSecretStoreArn string `json:"awsSecretStoreArn"`
	// The name of the database.
	Database *string `json:"database,omitempty"`
	// The ARN of the Aurora Serverless DB cluster.
	DbClusterOrInstanceArn string `json:"dbClusterOrInstanceArn"`
	// The name of the database schema.
	Schema *string `json:"schema,omitempty"`
	// <p>One or more SQL statements to run on the DB cluster.</p> <p>You can separate SQL statements from each other with a semicolon (;). Any valid SQL statement is permitted, including data definition, data manipulation, and commit statements. </p>
	SQLStatements string `json:"sqlStatements"`
}

type ExecuteSQLRequest struct {
	RequestBody       ExecuteSQLRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ExecuteSQLResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	ExecuteSQLResponse *shared.ExecuteSQLResponse
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// ServiceUnavailableError
	ServiceUnavailableError interface{}
	StatusCode              int
	RawResponse             *http.Response
}
