/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OfferingMetadata } from "./offeringmetadata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * offering created
 */
export class OfferingMetadataResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contentId" })
  contentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "coverImageUrl" })
  coverImageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "earlyCloseOffDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  earlyCloseOffDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  end?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "enrollmentLimit" })
  enrollmentLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "hasEarlyCloseOff" })
  hasEarlyCloseOff?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isReadonly" })
  isReadonly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => OfferingMetadata)
  metadata?: OfferingMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * content can contain html
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overview" })
  overview?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  start?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "tasksEnabled" })
  tasksEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "trailerVideoUrl" })
  trailerVideoUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "useRelativeDates" })
  useRelativeDates?: boolean;
}
