/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TerminalCheckout {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonProperty("amount_money")
    public Money amountMoney;
    public TerminalCheckout withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * The ID of the application that created the checkout.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("app_id")
    public String appId;
    public TerminalCheckout withAppId(String appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * Present if the status is `CANCELED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancel_reason")
    public String cancelReason;
    public TerminalCheckout withCancelReason(String cancelReason) {
        this.cancelReason = cancelReason;
        return this;
    }
    
    /**
     * The time when the `TerminalCheckout` was created, as an RFC 3339 timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public TerminalCheckout withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * An RFC 3339 duration, after which the checkout is automatically canceled.
     * A `TerminalCheckout` that is `PENDING` is automatically `CANCELED` and has a cancellation reason
     * of `TIMED_OUT`.
     * 
     * Default: 5 minutes from creation
     * 
     * Maximum: 5 minutes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deadline_duration")
    public String deadlineDuration;
    public TerminalCheckout withDeadlineDuration(String deadlineDuration) {
        this.deadlineDuration = deadlineDuration;
        return this;
    }
    
    @JsonProperty("device_options")
    public DeviceCheckoutOptions deviceOptions;
    public TerminalCheckout withDeviceOptions(DeviceCheckoutOptions deviceOptions) {
        this.deviceOptions = deviceOptions;
        return this;
    }
    
    /**
     * A unique ID for this `TerminalCheckout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public TerminalCheckout withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The location of the device where the `TerminalCheckout` was directed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;
    public TerminalCheckout withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * An optional note to associate with the checkout, as well as with any payments used to complete the checkout.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;
    public TerminalCheckout withNote(String note) {
        this.note = note;
        return this;
    }
    
    /**
     * A list of IDs for payments created by this `TerminalCheckout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_ids")
    public String[] paymentIds;
    public TerminalCheckout withPaymentIds(String[] paymentIds) {
        this.paymentIds = paymentIds;
        return this;
    }
    
    /**
     * The type of payment the terminal should attempt to capture from. Defaults to `CARD_PRESENT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_type")
    public String paymentType;
    public TerminalCheckout withPaymentType(String paymentType) {
        this.paymentType = paymentType;
        return this;
    }
    
    /**
     * An optional user-defined reference ID that can be used to associate
     * this `TerminalCheckout` to another entity in an external system. For example, an order
     * ID generated by a third-party shopping cart. The ID is also associated with any payments
     * used to complete the checkout.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference_id")
    public String referenceId;
    public TerminalCheckout withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     * The status of the `TerminalCheckout`.
     * Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, `COMPLETED`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public TerminalCheckout withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The time when the `TerminalCheckout` was last updated, as an RFC 3339 timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;
    public TerminalCheckout withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
