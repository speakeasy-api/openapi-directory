<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class SearchCatalogRequest
{
    /**
     * Filter by asset type
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\SearchCatalogAssetTypeEnum> $assetType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=asset_type')]
    public ?array $assetType = null;
    
    /**
     * Filter by collection id
     * 
     * @var ?array<string> $collectionId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=collection_id')]
    public ?array $collectionId = null;
    
    /**
     * Page number
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Number of results per page
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * One or more search terms separated by spaces
     * 
     * @var ?string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;
    
    /**
     * Sort by
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchCatalogSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?SearchCatalogSortEnum $sort = null;
    
	public function __construct()
	{
		$this->assetType = null;
		$this->collectionId = null;
		$this->page = null;
		$this->perPage = null;
		$this->query = null;
		$this->sort = null;
	}
}
