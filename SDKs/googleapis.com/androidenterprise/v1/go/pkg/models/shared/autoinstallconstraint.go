// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AutoInstallConstraintChargingStateConstraintEnum - Charging state constraint.
type AutoInstallConstraintChargingStateConstraintEnum string

const (
	AutoInstallConstraintChargingStateConstraintEnumChargingStateConstraintUnspecified AutoInstallConstraintChargingStateConstraintEnum = "chargingStateConstraintUnspecified"
	AutoInstallConstraintChargingStateConstraintEnumChargingNotRequired                AutoInstallConstraintChargingStateConstraintEnum = "chargingNotRequired"
	AutoInstallConstraintChargingStateConstraintEnumChargingRequired                   AutoInstallConstraintChargingStateConstraintEnum = "chargingRequired"
)

func (e *AutoInstallConstraintChargingStateConstraintEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "chargingStateConstraintUnspecified":
		fallthrough
	case "chargingNotRequired":
		fallthrough
	case "chargingRequired":
		*e = AutoInstallConstraintChargingStateConstraintEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoInstallConstraintChargingStateConstraintEnum: %s", s)
	}
}

// AutoInstallConstraintDeviceIdleStateConstraintEnum - Device idle state constraint.
type AutoInstallConstraintDeviceIdleStateConstraintEnum string

const (
	AutoInstallConstraintDeviceIdleStateConstraintEnumDeviceIdleStateConstraintUnspecified AutoInstallConstraintDeviceIdleStateConstraintEnum = "deviceIdleStateConstraintUnspecified"
	AutoInstallConstraintDeviceIdleStateConstraintEnumDeviceIdleNotRequired                AutoInstallConstraintDeviceIdleStateConstraintEnum = "deviceIdleNotRequired"
	AutoInstallConstraintDeviceIdleStateConstraintEnumDeviceIdleRequired                   AutoInstallConstraintDeviceIdleStateConstraintEnum = "deviceIdleRequired"
)

func (e *AutoInstallConstraintDeviceIdleStateConstraintEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deviceIdleStateConstraintUnspecified":
		fallthrough
	case "deviceIdleNotRequired":
		fallthrough
	case "deviceIdleRequired":
		*e = AutoInstallConstraintDeviceIdleStateConstraintEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoInstallConstraintDeviceIdleStateConstraintEnum: %s", s)
	}
}

// AutoInstallConstraintNetworkTypeConstraintEnum - Network type constraint.
type AutoInstallConstraintNetworkTypeConstraintEnum string

const (
	AutoInstallConstraintNetworkTypeConstraintEnumNetworkTypeConstraintUnspecified AutoInstallConstraintNetworkTypeConstraintEnum = "networkTypeConstraintUnspecified"
	AutoInstallConstraintNetworkTypeConstraintEnumAnyNetwork                       AutoInstallConstraintNetworkTypeConstraintEnum = "anyNetwork"
	AutoInstallConstraintNetworkTypeConstraintEnumUnmeteredNetwork                 AutoInstallConstraintNetworkTypeConstraintEnum = "unmeteredNetwork"
)

func (e *AutoInstallConstraintNetworkTypeConstraintEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "networkTypeConstraintUnspecified":
		fallthrough
	case "anyNetwork":
		fallthrough
	case "unmeteredNetwork":
		*e = AutoInstallConstraintNetworkTypeConstraintEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoInstallConstraintNetworkTypeConstraintEnum: %s", s)
	}
}

// AutoInstallConstraint - The auto-install constraint. Defines a set of restrictions for installation. At least one of the fields must be set.
type AutoInstallConstraint struct {
	// Charging state constraint.
	ChargingStateConstraint *AutoInstallConstraintChargingStateConstraintEnum `json:"chargingStateConstraint,omitempty"`
	// Device idle state constraint.
	DeviceIdleStateConstraint *AutoInstallConstraintDeviceIdleStateConstraintEnum `json:"deviceIdleStateConstraint,omitempty"`
	// Network type constraint.
	NetworkTypeConstraint *AutoInstallConstraintNetworkTypeConstraintEnum `json:"networkTypeConstraint,omitempty"`
}
