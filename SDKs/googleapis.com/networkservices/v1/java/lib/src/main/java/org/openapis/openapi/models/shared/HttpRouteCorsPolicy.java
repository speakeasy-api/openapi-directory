/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HttpRouteCorsPolicy - The Specification for allowing client side cross-origin requests.
 */
public class HttpRouteCorsPolicy {
    /**
     * In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowCredentials")
    public Boolean allowCredentials;
    public HttpRouteCorsPolicy withAllowCredentials(Boolean allowCredentials) {
        this.allowCredentials = allowCredentials;
        return this;
    }
    
    /**
     * Specifies the content for Access-Control-Allow-Headers header.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowHeaders")
    public String[] allowHeaders;
    public HttpRouteCorsPolicy withAllowHeaders(String[] allowHeaders) {
        this.allowHeaders = allowHeaders;
        return this;
    }
    
    /**
     * Specifies the content for Access-Control-Allow-Methods header.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowMethods")
    public String[] allowMethods;
    public HttpRouteCorsPolicy withAllowMethods(String[] allowMethods) {
        this.allowMethods = allowMethods;
        return this;
    }
    
    /**
     * Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowOriginRegexes")
    public String[] allowOriginRegexes;
    public HttpRouteCorsPolicy withAllowOriginRegexes(String[] allowOriginRegexes) {
        this.allowOriginRegexes = allowOriginRegexes;
        return this;
    }
    
    /**
     * Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowOrigins")
    public String[] allowOrigins;
    public HttpRouteCorsPolicy withAllowOrigins(String[] allowOrigins) {
        this.allowOrigins = allowOrigins;
        return this;
    }
    
    /**
     * If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;
    public HttpRouteCorsPolicy withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * Specifies the content for Access-Control-Expose-Headers header.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exposeHeaders")
    public String[] exposeHeaders;
    public HttpRouteCorsPolicy withExposeHeaders(String[] exposeHeaders) {
        this.exposeHeaders = exposeHeaders;
        return this;
    }
    
    /**
     * Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxAge")
    public String maxAge;
    public HttpRouteCorsPolicy withMaxAge(String maxAge) {
        this.maxAge = maxAge;
        return this;
    }
    
}
