<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateAssetModelResponse
{
    /**
     * ConflictingOperationException
     * 
     * @var mixed $conflictingOperationException
     */
	
    public mixed $conflictingOperationException = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateAssetModelResponse $createAssetModelResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\CreateAssetModelResponse $createAssetModelResponse = null;
    
    /**
     * InternalFailureException
     * 
     * @var mixed $internalFailureException
     */
	
    public mixed $internalFailureException = null;
    
    /**
     * InvalidRequestException
     * 
     * @var mixed $invalidRequestException
     */
	
    public mixed $invalidRequestException = null;
    
    /**
     * LimitExceededException
     * 
     * @var mixed $limitExceededException
     */
	
    public mixed $limitExceededException = null;
    
    /**
     * ResourceNotFoundException
     * 
     * @var mixed $resourceNotFoundException
     */
	
    public mixed $resourceNotFoundException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * ResourceAlreadyExistsException
     * 
     * @var mixed $resourceAlreadyExistsException
     */
	
    public mixed $resourceAlreadyExistsException = null;
    
    /**
     * ThrottlingException
     * 
     * @var mixed $throttlingException
     */
	
    public mixed $throttlingException = null;
    
	public function __construct()
	{
		$this->conflictingOperationException = null;
		$this->contentType = "";
		$this->createAssetModelResponse = null;
		$this->internalFailureException = null;
		$this->invalidRequestException = null;
		$this->limitExceededException = null;
		$this->resourceNotFoundException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->resourceAlreadyExistsException = null;
		$this->throttlingException = null;
	}
}
