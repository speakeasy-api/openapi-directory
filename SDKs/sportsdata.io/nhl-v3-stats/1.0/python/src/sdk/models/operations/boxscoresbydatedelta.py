"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import boxscore as shared_boxscore
from enum import Enum
from typing import Optional

class BoxScoresByDateDeltaFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class BoxScoresByDateDeltaRequest:
    
    date_: str = dataclasses.field(metadata={'path_param': { 'field_name': 'date', 'style': 'simple', 'explode': False }})
    r"""The date of the game(s).
     <br>Examples: <code>2017-OCT-31</code>, <code>2018-FEB-15</code>.
    """  
    format: BoxScoresByDateDeltaFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    minutes: str = dataclasses.field(metadata={'path_param': { 'field_name': 'minutes', 'style': 'simple', 'explode': False }})
    r"""Only returns player statistics that have changed in the last X minutes.  You specify how many minutes in time to go back.  Valid entries are:
     <code>1</code> or <code>2</code>.
    """  
    

@dataclasses.dataclass
class BoxScoresByDateDeltaResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    box_scores: Optional[list[shared_boxscore.BoxScore]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    