<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateEphemerisRequestBody
{
    /**
     * <p>Whether to set the ephemeris status to <code>ENABLED</code> after validation.</p> <p>Setting this to false will set the ephemeris status to <code>DISABLED</code> after validation.</p>
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Ephemeris data.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateEphemerisRequestBodyEphemeris $ephemeris
     */
	#[\JMS\Serializer\Annotation\SerializedName('ephemeris')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateEphemerisRequestBodyEphemeris')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateEphemerisRequestBodyEphemeris $ephemeris = null;
    
    /**
     * An overall expiration time for the ephemeris in UTC, after which it will become <code>EXPIRED</code>.
     * 
     * @var ?\DateTime $expirationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expirationTime = null;
    
    /**
     * The ARN of a KMS key used to encrypt the ephemeris in Ground Station.
     * 
     * @var ?string $kmsKeyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsKeyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsKeyArn = null;
    
    /**
     * A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * <p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p> <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p> <p>Priority must be 1 or greater</p>
     * 
     * @var ?int $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $priority = null;
    
    /**
     * AWS Ground Station satellite ID for this ephemeris.
     * 
     * @var string $satelliteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('satelliteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $satelliteId;
    
    /**
     * Tags assigned to an ephemeris.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->enabled = null;
		$this->ephemeris = null;
		$this->expirationTime = null;
		$this->kmsKeyArn = null;
		$this->name = "";
		$this->priority = null;
		$this->satelliteId = "";
		$this->tags = null;
	}
}
