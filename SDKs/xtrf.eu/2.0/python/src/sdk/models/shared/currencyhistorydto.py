"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timedto as shared_timedto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CurrencyHistoryDTO:
    r"""Success"""
    
    date_from: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateFrom'), 'exclude': lambda f: f is None }})  
    exchange_rate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchangeRate'), 'exclude': lambda f: f is None }})  
    last_modification: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastModification'), 'exclude': lambda f: f is None }})  
    origin_details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originDetails'), 'exclude': lambda f: f is None }})  
    publication_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicationDate'), 'exclude': lambda f: f is None }})  
    