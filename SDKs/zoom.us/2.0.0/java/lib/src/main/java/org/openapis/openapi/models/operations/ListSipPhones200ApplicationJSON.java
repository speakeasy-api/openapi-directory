/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListSipPhones200ApplicationJSON - **HTTP Status Code:** `200`&lt;br&gt;
 * SIP Phones listed successfully.
 * 
 * **Error Code:** `200`&lt;br&gt;
 * Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
 */
public class ListSipPhones200ApplicationJSON {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_token")
    public String nextPageToken;
    public ListSipPhones200ApplicationJSON withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of pages returned for the request made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_count")
    public Long pageCount;
    public ListSipPhones200ApplicationJSON withPageCount(Long pageCount) {
        this.pageCount = pageCount;
        return this;
    }
    
    /**
     * The page number of the current results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_number")
    public Long pageNumber;
    public ListSipPhones200ApplicationJSON withPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    /**
     * The number of records returned within a single API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public ListSipPhones200ApplicationJSON withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * SIP phones object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phones")
    public ListSipPhones200ApplicationJSONPhones[] phones;
    public ListSipPhones200ApplicationJSON withPhones(ListSipPhones200ApplicationJSONPhones[] phones) {
        this.phones = phones;
        return this;
    }
    
    /**
     * The total number of all the records available across pages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_records")
    public Long totalRecords;
    public ListSipPhones200ApplicationJSON withTotalRecords(Long totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }
    
}
