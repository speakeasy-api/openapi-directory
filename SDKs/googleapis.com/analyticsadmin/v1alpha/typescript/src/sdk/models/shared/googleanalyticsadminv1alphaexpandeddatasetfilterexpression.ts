/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1alphaExpandedDataSetFilter } from "./googleanalyticsadminv1alphaexpandeddatasetfilter";
import { GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList } from "./googleanalyticsadminv1alphaexpandeddatasetfilterexpressionlist";
import { Expose, Type } from "class-transformer";

/**
 * A logical expression of EnhancedDataSet dimension filters.
 */
export class GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression extends SpeakeasyBase {
  /**
   * A list of ExpandedDataSet filter expressions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "andGroup" })
  @Type(() => GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList)
  andGroup?: GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList;

  /**
   * A specific filter for a single dimension
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => GoogleAnalyticsAdminV1alphaExpandedDataSetFilter)
  filter?: GoogleAnalyticsAdminV1alphaExpandedDataSetFilter;

  /**
   * A logical expression of EnhancedDataSet dimension filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notExpression" })
  @Type(() => GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression)
  notExpression?: GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression;
}
