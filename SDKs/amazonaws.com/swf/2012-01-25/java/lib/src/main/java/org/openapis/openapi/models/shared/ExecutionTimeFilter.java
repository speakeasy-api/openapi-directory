/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ExecutionTimeFilter - Used to filter the workflow executions in visibility APIs by various time-based rules. Each parameter, if specified, defines a rule that must be satisfied by each returned query result. The parameter values are in the &lt;a href="https://en.wikipedia.org/wiki/Unix_time"&gt;Unix Time format&lt;/a&gt;. For example: &lt;code&gt;"oldestDate": 1325376070.&lt;/code&gt; 
 */
public class ExecutionTimeFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("latestDate")
    public OffsetDateTime latestDate;

    public ExecutionTimeFilter withLatestDate(OffsetDateTime latestDate) {
        this.latestDate = latestDate;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("oldestDate")
    public OffsetDateTime oldestDate;

    public ExecutionTimeFilter withOldestDate(OffsetDateTime oldestDate) {
        this.oldestDate = oldestDate;
        return this;
    }
    
    public ExecutionTimeFilter(@JsonProperty("oldestDate") OffsetDateTime oldestDate) {
        this.oldestDate = oldestDate;
  }
}
