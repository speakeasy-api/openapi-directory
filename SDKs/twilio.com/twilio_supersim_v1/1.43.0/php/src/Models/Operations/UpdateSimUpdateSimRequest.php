<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class UpdateSimUpdateSimRequest
{
    /**
     * The SID of the Account to which the Sim resource should belong. The Account SID can only be that of the requesting Account or that of a Subaccount of the requesting Account. Only valid when the Sim resource's status is new.
     * 
     * @var ?string $accountSid
     */
	#[SpeakeasyMetadata('form:name=AccountSid')]
    public ?string $accountSid = null;
    
    /**
     * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateSimUpdateSimRequestCallbackMethodEnum $callbackMethod
     */
	#[SpeakeasyMetadata('form:name=CallbackMethod')]
    public ?UpdateSimUpdateSimRequestCallbackMethodEnum $callbackMethod = null;
    
    /**
     * The URL we should call using the `callback_method` after an asynchronous update has finished.
     * 
     * @var ?string $callbackUrl
     */
	#[SpeakeasyMetadata('form:name=CallbackUrl')]
    public ?string $callbackUrl = null;
    
    /**
     * The SID or unique name of the Fleet to which the SIM resource should be assigned.
     * 
     * @var ?string $fleet
     */
	#[SpeakeasyMetadata('form:name=Fleet')]
    public ?string $fleet = null;
    
	#[SpeakeasyMetadata('form:name=Status')]
    public ?\OpenAPI\OpenAPI\Models\Shared\SimEnumStatusUpdateEnum $status = null;
    
    /**
     * An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
     * 
     * @var ?string $uniqueName
     */
	#[SpeakeasyMetadata('form:name=UniqueName')]
    public ?string $uniqueName = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->callbackMethod = null;
		$this->callbackUrl = null;
		$this->fleet = null;
		$this->status = null;
		$this->uniqueName = null;
	}
}
