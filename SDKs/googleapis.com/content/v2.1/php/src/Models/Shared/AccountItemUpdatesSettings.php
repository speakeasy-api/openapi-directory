<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AccountItemUpdatesSettings - Settings for the Automatic Item Updates.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AccountItemUpdatesSettings
{
    /**
     * If availability updates are enabled, any previous availability values get overwritten if Google finds an out-of-stock annotation on the offer's page. If additionally `allow_availability_updates` field is set to true, values get overwritten if Google finds an in-stock annotation on the offerâ€™s page.
     * 
     * @var ?bool $allowAvailabilityUpdates
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowAvailabilityUpdates')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowAvailabilityUpdates = null;
    
    /**
     * If condition updates are enabled, Google always updates item condition with the condition detected from the details of your product.
     * 
     * @var ?bool $allowConditionUpdates
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowConditionUpdates')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowConditionUpdates = null;
    
    /**
     * If price updates are enabled, Google always updates the active price with the crawled information.
     * 
     * @var ?bool $allowPriceUpdates
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowPriceUpdates')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowPriceUpdates = null;
    
    /**
     * If allow_availability_updates is enabled, items are automatically updated in all your Shopping target countries. By default, availability updates will only be applied to items that are 'out of stock' on your website but 'in stock' on Shopping. Set this to true to also update items that are 'in stock' on your website, but 'out of stock' on Google Shopping. In order for this field to have an effect, you must also allow availability updates.
     * 
     * @var ?bool $allowStrictAvailabilityUpdates
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowStrictAvailabilityUpdates')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowStrictAvailabilityUpdates = null;
    
	public function __construct()
	{
		$this->allowAvailabilityUpdates = null;
		$this->allowConditionUpdates = null;
		$this->allowPriceUpdates = null;
		$this->allowStrictAvailabilityUpdates = null;
	}
}
