"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HostConfig:
    
    binds: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Binds'), 'exclude': lambda f: f is None }})
    r"""A list of volumes to be bound to the container. Each volume must be listed in the following format: VOLNAME:/CONTAINER_PATH:rw [ro]."""  
    extra_hosts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExtraHosts'), 'exclude': lambda f: f is None }})
    r"""A list of hostnames/IP mappings to be added to the containerâ€™s /etc/hosts file. Specified in the form [\\"hostname:IP\\"]"""  
    links: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Links'), 'exclude': lambda f: f is None }})
    r"""A list of containers that need to be linked."""  
    port_bindings: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortBindings'), 'exclude': lambda f: f is None }})
    r"""The container ports that you want to expose to the public. Ports need to be specified in the form of &lt;port&gt;/&lt;protocol&gt;: [{ \\"HostIp\\": \\"&lt;IP&gt;\\", \\"HostPort\\": \\"&lt;port&gt;\\" }]"""  
    