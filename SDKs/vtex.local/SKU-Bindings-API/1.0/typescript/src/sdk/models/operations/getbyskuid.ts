/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetbySkuIdRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * SKU's unique identifier in the marketplace.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=skuId",
  })
  skuId: string;
}

/**
 * Object with information about an SKU Binding.
 */
export class GetbySkuId200ApplicationJSON extends SpeakeasyBase {
  /**
   * SKU Binding ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  /**
   * Defines if the SKU binding is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsActive" })
  isActive?: boolean;

  /**
   * Date when the SKU binding was updated for the last time, in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateDate" })
  lastUpdateDate?: string;

  /**
   * Sales policy ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SalesPolicy" })
  salesPolicy?: number;

  /**
   * ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerId" })
  sellerId?: string;

  /**
   * SKU seller ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerSkuId" })
  sellerSkuId?: string;

  /**
   * SKU ID in the VTEX marketplace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StockKeepingUnitId" })
  stockKeepingUnitId?: number;
}

export class GetbySkuIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: GetbySkuId200ApplicationJSON })
  getbySkuId200ApplicationJSONObjects?: GetbySkuId200ApplicationJSON[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
