/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetOrganizationApiRequestsRequest {
    /**
     * Filter the results by the ID of the admin who made the API requests
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=adminId")
    public String adminId;
    public GetOrganizationApiRequestsRequest withAdminId(String adminId) {
        this.adminId = adminId;
        return this;
    }
    
    /**
     * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endingBefore")
    public String endingBefore;
    public GetOrganizationApiRequestsRequest withEndingBefore(String endingBefore) {
        this.endingBefore = endingBefore;
        return this;
    }
    
    /**
     * Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=method")
    public GetOrganizationApiRequestsMethodEnum method;
    public GetOrganizationApiRequestsRequest withMethod(GetOrganizationApiRequestsMethodEnum method) {
        this.method = method;
        return this;
    }
    
    /**
     * Filter the results by one or more operation IDs for the API request
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=operationIds")
    public String[] operationIds;
    public GetOrganizationApiRequestsRequest withOperationIds(String[] operationIds) {
        this.operationIds = operationIds;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=organizationId")
    public String organizationId;
    public GetOrganizationApiRequestsRequest withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * Filter the results by the path of the API requests
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=path")
    public String path;
    public GetOrganizationApiRequestsRequest withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=perPage")
    public Long perPage;
    public GetOrganizationApiRequestsRequest withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Filter the results by the response code of the API requests
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=responseCode")
    public Long responseCode;
    public GetOrganizationApiRequestsRequest withResponseCode(Long responseCode) {
        this.responseCode = responseCode;
        return this;
    }
    
    /**
     * Filter the results by the IP address of the originating API request
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sourceIp")
    public String sourceIp;
    public GetOrganizationApiRequestsRequest withSourceIp(String sourceIp) {
        this.sourceIp = sourceIp;
        return this;
    }
    
    /**
     * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startingAfter")
    public String startingAfter;
    public GetOrganizationApiRequestsRequest withStartingAfter(String startingAfter) {
        this.startingAfter = startingAfter;
        return this;
    }
    
    /**
     * The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=t0")
    public String t0;
    public GetOrganizationApiRequestsRequest withT0(String t0) {
        this.t0 = t0;
        return this;
    }
    
    /**
     * The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=t1")
    public String t1;
    public GetOrganizationApiRequestsRequest withT1(String t1) {
        this.t1 = t1;
        return this;
    }
    
    /**
     * The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timespan")
    public Float timespan;
    public GetOrganizationApiRequestsRequest withTimespan(Float timespan) {
        this.timespan = timespan;
        return this;
    }
    
    /**
     * Filter the results by the user agent string of the API request
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userAgent")
    public String userAgent;
    public GetOrganizationApiRequestsRequest withUserAgent(String userAgent) {
        this.userAgent = userAgent;
        return this;
    }
    
    /**
     * Filter the results by the API version of the API request
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=version")
    public GetOrganizationApiRequestsVersionEnum version;
    public GetOrganizationApiRequestsRequest withVersion(GetOrganizationApiRequestsVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
