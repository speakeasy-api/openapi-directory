/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InsightImpactGraphService } from "./insightimpactgraphservice";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetInsightImpactGraphResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InsightId" })
  insightId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceGraphEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceGraphEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceGraphStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceGraphStartTime?: Date;

  @SpeakeasyMetadata({ elemType: InsightImpactGraphService })
  @Expose({ name: "Services" })
  @Type(() => InsightImpactGraphService)
  services?: InsightImpactGraphService[];

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;
}
