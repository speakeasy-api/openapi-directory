/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FDXHateoasLink } from "./fdxhateoaslink";
import { FDXNotificationCategoryEnum } from "./fdxnotificationcategoryenum";
import { FDXNotificationPayload } from "./fdxnotificationpayload";
import { FDXNotificationPriorityEnum } from "./fdxnotificationpriorityenum";
import { FDXNotificationSeverityEnum } from "./fdxnotificationseverityenum";
import { FDXNotificationTypeEnum } from "./fdxnotificationtypeenum";
import { FDXParty } from "./fdxparty";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload
 */
export class FDXNotification extends SpeakeasyBase {
  /**
   * Category of Notification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category: FDXNotificationCategoryEnum;

  /**
   * Id of notification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationId" })
  notificationId: string;

  /**
   * Custom key-value pairs payload for a notification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationPayload" })
  @Type(() => FDXNotificationPayload)
  notificationPayload: FDXNotificationPayload;

  /**
   * Priority of notification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: FDXNotificationPriorityEnum;

  /**
   * FDX Participant - an entity or person that is a part of a FDX API transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisher" })
  @Type(() => FDXParty)
  publisher: FDXParty;

  /**
   * ISO 8601 date-time in format 'YYYY-MM-DDThh:mm:ss.nnn[Z|[+|-]hh:mm]' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sentOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  sentOn: Date;

  /**
   * Severity level of notification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: FDXNotificationSeverityEnum;

  /**
   * FDX Participant - an entity or person that is a part of a FDX API transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriber" })
  @Type(() => FDXParty)
  subscriber?: FDXParty;

  /**
   * Type of Notification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: FDXNotificationTypeEnum;

  /**
   * REST application constraint (Hypermedia As The Engine Of Application State)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  @Type(() => FDXHateoasLink)
  url?: FDXHateoasLink;
}
