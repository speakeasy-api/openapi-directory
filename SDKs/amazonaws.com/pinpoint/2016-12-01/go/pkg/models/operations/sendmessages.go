// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// SendMessagesRequestBodyMessageRequest - Specifies the configuration and other settings for a message.
type SendMessagesRequestBodyMessageRequest struct {
	Addresses             map[string]shared.AddressConfiguration      `json:"Addresses,omitempty"`
	Context               map[string]string                           `json:"Context,omitempty"`
	Endpoints             map[string]shared.EndpointSendConfiguration `json:"Endpoints,omitempty"`
	MessageConfiguration  *shared.DirectMessageConfiguration          `json:"MessageConfiguration,omitempty"`
	TemplateConfiguration *shared.TemplateConfiguration               `json:"TemplateConfiguration,omitempty"`
	TraceID               *string                                     `json:"TraceId,omitempty"`
}

type SendMessagesRequestBody struct {
	// Specifies the configuration and other settings for a message.
	MessageRequest SendMessagesRequestBodyMessageRequest `json:"MessageRequest"`
}

type SendMessagesRequest struct {
	RequestBody       SendMessagesRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
	ApplicationID string `pathParam:"style=simple,explode=false,name=application-id"`
}

type SendMessagesResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// MethodNotAllowedException
	MethodNotAllowedException interface{}
	// NotFoundException
	NotFoundException interface{}
	// PayloadTooLargeException
	PayloadTooLargeException interface{}
	// Success
	SendMessagesResponse *shared.SendMessagesResponse
	StatusCode           int
	RawResponse          *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
