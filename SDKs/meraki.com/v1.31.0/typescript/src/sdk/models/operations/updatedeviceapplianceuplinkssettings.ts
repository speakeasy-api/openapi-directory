/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Settings for PPPoE Authentication.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1PppoeAuthentication extends SpeakeasyBase {
  /**
   * Whether PPPoE authentication is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Password for PPPoE authentication. This parameter is not returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * Username for PPPoE authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Configuration options for PPPoE.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1Pppoe extends SpeakeasyBase {
  /**
   * Settings for PPPoE Authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1PppoeAuthentication
  )
  authentication?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1PppoeAuthentication;

  /**
   * Whether PPPoE is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv4 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4 extends SpeakeasyBase {
  /**
   * IP address and subnet mask when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4AssignmentModeEnum;

  /**
   * Gateway IP address when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4Nameservers;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv6 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6 extends SpeakeasyBase {
  /**
   * Static address that will override the one(s) received by SLAAC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6AssignmentModeEnum;

  /**
   * Static gateway that will override the one received by autoconf.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6Nameservers;
}

/**
 * SVI settings by protocol.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1Svis extends SpeakeasyBase {
  /**
   * IPv4 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv4" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4
  )
  ipv4?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv4;

  /**
   * IPv6 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6
  )
  ipv6?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1SvisIpv6;
}

/**
 * VLAN tagging settings.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1VlanTagging extends SpeakeasyBase {
  /**
   * Whether VLAN tagging is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The ID of the VLAN to use for VLAN tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

/**
 * WAN 1 settings.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1 extends SpeakeasyBase {
  /**
   * Enable or disable the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Configuration options for PPPoE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pppoe" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1Pppoe
  )
  pppoe?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1Pppoe;

  /**
   * SVI settings by protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "svis" })
  @Type(() => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1Svis)
  svis?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1Svis;

  /**
   * VLAN tagging settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanTagging" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1VlanTagging
  )
  vlanTagging?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1VlanTagging;
}

/**
 * Settings for PPPoE Authentication.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2PppoeAuthentication extends SpeakeasyBase {
  /**
   * Whether PPPoE authentication is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Password for PPPoE authentication. This parameter is not returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * Username for PPPoE authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Configuration options for PPPoE.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2Pppoe extends SpeakeasyBase {
  /**
   * Settings for PPPoE Authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2PppoeAuthentication
  )
  authentication?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2PppoeAuthentication;

  /**
   * Whether PPPoE is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv4 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4 extends SpeakeasyBase {
  /**
   * IP address and subnet mask when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4AssignmentModeEnum;

  /**
   * Gateway IP address when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4Nameservers;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv6 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6 extends SpeakeasyBase {
  /**
   * Static address that will override the one(s) received by SLAAC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6AssignmentModeEnum;

  /**
   * Static gateway that will override the one received by autoconf.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6Nameservers;
}

/**
 * SVI settings by protocol.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2Svis extends SpeakeasyBase {
  /**
   * IPv4 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv4" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4
  )
  ipv4?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv4;

  /**
   * IPv6 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6
  )
  ipv6?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2SvisIpv6;
}

/**
 * VLAN tagging settings.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2VlanTagging extends SpeakeasyBase {
  /**
   * Whether VLAN tagging is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The ID of the VLAN to use for VLAN tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

/**
 * WAN 2 settings.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2 extends SpeakeasyBase {
  /**
   * Enable or disable the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Configuration options for PPPoE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pppoe" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2Pppoe
  )
  pppoe?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2Pppoe;

  /**
   * SVI settings by protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "svis" })
  @Type(() => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2Svis)
  svis?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2Svis;

  /**
   * VLAN tagging settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanTagging" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2VlanTagging
  )
  vlanTagging?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2VlanTagging;
}

/**
 * Interface settings.
 */
export class UpdateDeviceApplianceUplinksSettingsRequestBodyInterfaces extends SpeakeasyBase {
  /**
   * WAN 1 settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan1" })
  @Type(() => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1)
  wan1?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan1;

  /**
   * WAN 2 settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan2" })
  @Type(() => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2)
  wan2?: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfacesWan2;
}

export class UpdateDeviceApplianceUplinksSettingsRequestBody extends SpeakeasyBase {
  /**
   * Interface settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaces" })
  @Type(() => UpdateDeviceApplianceUplinksSettingsRequestBodyInterfaces)
  interfaces: UpdateDeviceApplianceUplinksSettingsRequestBodyInterfaces;
}

export class UpdateDeviceApplianceUplinksSettingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateDeviceApplianceUplinksSettingsRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=serial",
  })
  serial: string;
}

/**
 * Settings for PPPoE Authentication.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1PppoeAuthentication extends SpeakeasyBase {
  /**
   * Whether PPPoE authentication is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Username for PPPoE authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Configuration options for PPPoE.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Pppoe extends SpeakeasyBase {
  /**
   * Settings for PPPoE Authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1PppoeAuthentication
  )
  authentication?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1PppoeAuthentication;

  /**
   * Whether PPPoE is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv4 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4 extends SpeakeasyBase {
  /**
   * IP address and subnet mask when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4AssignmentModeEnum;

  /**
   * Gateway IP address when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4Nameservers;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv6 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6 extends SpeakeasyBase {
  /**
   * Static address that will override the one(s) received by SLAAC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6AssignmentModeEnum;

  /**
   * Static gateway that will override the one received by autoconf.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6Nameservers;
}

/**
 * SVI settings by protocol.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Svis extends SpeakeasyBase {
  /**
   * IPv4 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv4" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4
  )
  ipv4?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4;

  /**
   * IPv6 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6
  )
  ipv6?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6;
}

/**
 * VLAN tagging settings.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1VlanTagging extends SpeakeasyBase {
  /**
   * Whether VLAN tagging is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The ID of the VLAN to use for VLAN tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

/**
 * WAN 1 settings.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1 extends SpeakeasyBase {
  /**
   * Enable or disable the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Configuration options for PPPoE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pppoe" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Pppoe
  )
  pppoe?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Pppoe;

  /**
   * SVI settings by protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "svis" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Svis
  )
  svis?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Svis;

  /**
   * VLAN tagging settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanTagging" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1VlanTagging
  )
  vlanTagging?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1VlanTagging;
}

/**
 * Settings for PPPoE Authentication.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2PppoeAuthentication extends SpeakeasyBase {
  /**
   * Whether PPPoE authentication is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Username for PPPoE authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Configuration options for PPPoE.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Pppoe extends SpeakeasyBase {
  /**
   * Settings for PPPoE Authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2PppoeAuthentication
  )
  authentication?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2PppoeAuthentication;

  /**
   * Whether PPPoE is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv4 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4 extends SpeakeasyBase {
  /**
   * IP address and subnet mask when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4AssignmentModeEnum;

  /**
   * Gateway IP address when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4Nameservers;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv6 settings for static/dynamic mode.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6 extends SpeakeasyBase {
  /**
   * Static address that will override the one(s) received by SLAAC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6AssignmentModeEnum;

  /**
   * Static gateway that will override the one received by autoconf.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6Nameservers
  )
  nameservers?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6Nameservers;
}

/**
 * SVI settings by protocol.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Svis extends SpeakeasyBase {
  /**
   * IPv4 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv4" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4
  )
  ipv4?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4;

  /**
   * IPv6 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6
  )
  ipv6?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6;
}

/**
 * VLAN tagging settings.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2VlanTagging extends SpeakeasyBase {
  /**
   * Whether VLAN tagging is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The ID of the VLAN to use for VLAN tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

/**
 * WAN 2 settings.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2 extends SpeakeasyBase {
  /**
   * Enable or disable the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Configuration options for PPPoE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pppoe" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Pppoe
  )
  pppoe?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Pppoe;

  /**
   * SVI settings by protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "svis" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Svis
  )
  svis?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Svis;

  /**
   * VLAN tagging settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanTagging" })
  @Type(
    () =>
      UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2VlanTagging
  )
  vlanTagging?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2VlanTagging;
}

/**
 * Interface settings.
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfaces extends SpeakeasyBase {
  /**
   * WAN 1 settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan1" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1
  )
  wan1?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1;

  /**
   * WAN 2 settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan2" })
  @Type(
    () => UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2
  )
  wan2?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2;
}

/**
 * Successful operation
 */
export class UpdateDeviceApplianceUplinksSettings200ApplicationJSON extends SpeakeasyBase {
  /**
   * Interface settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaces" })
  @Type(() => UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfaces)
  interfaces?: UpdateDeviceApplianceUplinksSettings200ApplicationJSONInterfaces;
}

export class UpdateDeviceApplianceUplinksSettingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateDeviceApplianceUplinksSettings200ApplicationJSONObject?: UpdateDeviceApplianceUplinksSettings200ApplicationJSON;
}
