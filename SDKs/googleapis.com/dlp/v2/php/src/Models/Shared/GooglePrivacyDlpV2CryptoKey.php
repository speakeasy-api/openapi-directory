<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GooglePrivacyDlpV2CryptoKey - This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GooglePrivacyDlpV2CryptoKey
{
    /**
     * Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2KmsWrappedCryptoKey $kmsWrapped
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsWrapped')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2KmsWrappedCryptoKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2KmsWrappedCryptoKey $kmsWrapped = null;
    
    /**
     * Use this to have a random data crypto key generated. It will be discarded after the request finishes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2TransientCryptoKey $transient
     */
	#[\JMS\Serializer\Annotation\SerializedName('transient')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2TransientCryptoKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2TransientCryptoKey $transient = null;
    
    /**
     * Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2UnwrappedCryptoKey $unwrapped
     */
	#[\JMS\Serializer\Annotation\SerializedName('unwrapped')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2UnwrappedCryptoKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2UnwrappedCryptoKey $unwrapped = null;
    
	public function __construct()
	{
		$this->kmsWrapped = null;
		$this->transient = null;
		$this->unwrapped = null;
	}
}
