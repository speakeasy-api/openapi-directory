/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The Energy Type of this device
 */
export enum DeviceToPostDeviceEnergyTypeEnum {
  MeterTypeUnknown = "MeterTypeUnknown",
  MeterTypeElectricity = "MeterTypeElectricity",
  MeterTypeWater = "MeterTypeWater",
  MeterTypeGas = "MeterTypeGas",
  MeterTypeHeat = "MeterTypeHeat",
  MeterTypeHCA = "MeterTypeHCA",
  MeterTypeAllMeters = "MeterTypeAllMeters",
  MeterTypeTemperature = "MeterTypeTemperature",
  MeterTypeMBusGateway = "MeterTypeMBusGateway",
  MeterTypeRs485Gateway = "MeterTypeRS485Gateway",
  MeterTypeCustomDevice = "MeterTypeCustomDevice",
  MeterTypeCompressedAir = "MeterTypeCompressedAir",
  MeterTypeSolarLog = "MeterTypeSolarLog",
  MeterTypeVirtualMeter = "MeterTypeVirtualMeter",
  MeterTypeWMBusGateway = "MeterTypeWMBusGateway",
}

/**
 * The Sub Type of this Meter.
 */
export enum DeviceToPostMeterSubTypeEnum {
  MeterSubTypeUnknown = "MeterSubTypeUnknown",
  MeterSubTypeCold = "MeterSubTypeCold",
  MeterSubTypeHeat = "MeterSubTypeHeat",
  MeterSubTypeChargingStation = "MeterSubTypeChargingStation",
  MeterSubTypeElectricity = "MeterSubTypeElectricity",
  MeterSubTypeWater = "MeterSubTypeWater",
  MeterSubTypeGas = "MeterSubTypeGas",
  MeterSubTypeElectricityHeat = "MeterSubTypeElectricityHeat",
  MeterSubTypeTemperature = "MeterSubTypeTemperature",
  MeterSubTypeVirtualBattery = "MeterSubTypeVirtualBattery",
}

/**
 * Container Class for the Web API
 */
export class DeviceToPost extends SpeakeasyBase {
  /**
   * The Active Power or current flow rate. In kW or m3/h
   */
  @SpeakeasyMetadata({ data: "form, name=ActivePower" })
  @Expose({ name: "ActivePower" })
  activePower?: number;

  /**
   * The Meter Counter Reading (Total Energy used) in kWh or m3.
   */
  @SpeakeasyMetadata({ data: "form, name=CounterReading" })
  @Expose({ name: "CounterReading" })
  counterReading?: number;

  /**
   * The Meter Counter Reading only export
   */
  @SpeakeasyMetadata({ data: "form, name=CounterReadingExport" })
  @Expose({ name: "CounterReadingExport" })
  counterReadingExport?: number;

  /**
   * The Meter Counter Reading only export (Tariff 1)
   */
  @SpeakeasyMetadata({ data: "form, name=CounterReadingExportT1" })
  @Expose({ name: "CounterReadingExportT1" })
  counterReadingExportT1?: number;

  /**
   * The Meter Counter Reading only export (Tariff 2)
   */
  @SpeakeasyMetadata({ data: "form, name=CounterReadingExportT2" })
  @Expose({ name: "CounterReadingExportT2" })
  counterReadingExportT2?: number;

  /**
   * The Meter Counter Reading Tariff 1 in kWh or m3.
   */
  @SpeakeasyMetadata({ data: "form, name=CounterReadingT1" })
  @Expose({ name: "CounterReadingT1" })
  counterReadingT1?: number;

  /**
   * The Meter Counter Reading Tariff 2 in kWh or m3.
   */
  @SpeakeasyMetadata({ data: "form, name=CounterReadingT2" })
  @Expose({ name: "CounterReadingT2" })
  counterReadingT2?: number;

  /**
   * The Current (in A)
   */
  @SpeakeasyMetadata({ data: "form, name=Current" })
  @Expose({ name: "Current" })
  current?: number;

  /**
   * The Current Phase L1 (in A)
   */
  @SpeakeasyMetadata({ data: "form, name=CurrentL1" })
  @Expose({ name: "CurrentL1" })
  currentL1?: number;

  /**
   * The Current Phase L2 (in A)
   */
  @SpeakeasyMetadata({ data: "form, name=CurrentL2" })
  @Expose({ name: "CurrentL2" })
  currentL2?: number;

  /**
   * The Current Phase L3 (in A)
   */
  @SpeakeasyMetadata({ data: "form, name=CurrentL3" })
  @Expose({ name: "CurrentL3" })
  currentL3?: number;

  /**
   * The Energy Type of this device
   */
  @SpeakeasyMetadata({ data: "form, name=DeviceEnergyType" })
  @Expose({ name: "DeviceEnergyType" })
  deviceEnergyType?: DeviceToPostDeviceEnergyTypeEnum;

  /**
   * The digital input number 1
   */
  @SpeakeasyMetadata({ data: "form, name=DigitalInput1" })
  @Expose({ name: "DigitalInput1" })
  digitalInput1?: boolean;

  /**
   * The ID of the device
   */
  @SpeakeasyMetadata({ data: "form, name=Id" })
  @Expose({ name: "Id" })
  id?: string;

  /**
   * The Sub Type of this Meter.
   */
  @SpeakeasyMetadata({ data: "form, name=MeterSubType" })
  @Expose({ name: "MeterSubType" })
  meterSubType?: DeviceToPostMeterSubTypeEnum;

  /**
   * The Name of the Device
   */
  @SpeakeasyMetadata({ data: "form, name=Name" })
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The Power Factor (cos phi). Range: 0 - 1
   */
  @SpeakeasyMetadata({ data: "form, name=PowerFactor" })
  @Expose({ name: "PowerFactor" })
  powerFactor?: number;

  /**
   * The Power Factor (cos phi) Phase L1. Range: 0 - 1
   */
  @SpeakeasyMetadata({ data: "form, name=PowerFactorL1" })
  @Expose({ name: "PowerFactorL1" })
  powerFactorL1?: number;

  /**
   * The Power Factor (cos phi) Phase L2. Range: 0 - 1
   */
  @SpeakeasyMetadata({ data: "form, name=PowerFactorL2" })
  @Expose({ name: "PowerFactorL2" })
  powerFactorL2?: number;

  /**
   * The Power Factor (cos phi) Phase L3. Range: 0 - 1
   */
  @SpeakeasyMetadata({ data: "form, name=PowerFactorL3" })
  @Expose({ name: "PowerFactorL3" })
  powerFactorL3?: number;

  /**
   * The Serial number
   */
  @SpeakeasyMetadata({ data: "form, name=Serial" })
  @Expose({ name: "Serial" })
  serial?: number;

  /**
   * The Temperature (in degree celsius)
   */
  @SpeakeasyMetadata({ data: "form, name=Temperature" })
  @Expose({ name: "Temperature" })
  temperature?: number;

  /**
   * The Date of the Value (in UTC). If this is null the Server Time is used.
   */
  @SpeakeasyMetadata({
    data: "form, name=ValueDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "ValueDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  valueDate?: Date;

  /**
   * The Voltage (in V)
   */
  @SpeakeasyMetadata({ data: "form, name=Voltage" })
  @Expose({ name: "Voltage" })
  voltage?: number;

  /**
   * The Voltage Phase L1 (in V)
   */
  @SpeakeasyMetadata({ data: "form, name=VoltageL1" })
  @Expose({ name: "VoltageL1" })
  voltageL1?: number;

  /**
   * The Voltage Phase L2 (in V)
   */
  @SpeakeasyMetadata({ data: "form, name=VoltageL2" })
  @Expose({ name: "VoltageL2" })
  voltageL2?: number;

  /**
   * The Voltage Phase L3 (in V)
   */
  @SpeakeasyMetadata({ data: "form, name=VoltageL3" })
  @Expose({ name: "VoltageL3" })
  voltageL3?: number;
}
