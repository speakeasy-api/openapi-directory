// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CourseWorkMaterialAssigneeModeEnum - Assignee mode of the course work material. If unspecified, the default value is `ALL_STUDENTS`.
type CourseWorkMaterialAssigneeModeEnum string

const (
	CourseWorkMaterialAssigneeModeEnumAssigneeModeUnspecified CourseWorkMaterialAssigneeModeEnum = "ASSIGNEE_MODE_UNSPECIFIED"
	CourseWorkMaterialAssigneeModeEnumAllStudents             CourseWorkMaterialAssigneeModeEnum = "ALL_STUDENTS"
	CourseWorkMaterialAssigneeModeEnumIndividualStudents      CourseWorkMaterialAssigneeModeEnum = "INDIVIDUAL_STUDENTS"
)

func (e *CourseWorkMaterialAssigneeModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASSIGNEE_MODE_UNSPECIFIED":
		fallthrough
	case "ALL_STUDENTS":
		fallthrough
	case "INDIVIDUAL_STUDENTS":
		*e = CourseWorkMaterialAssigneeModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CourseWorkMaterialAssigneeModeEnum: %s", s)
	}
}

// CourseWorkMaterialStateEnum - Status of this course work material. If unspecified, the default state is `DRAFT`.
type CourseWorkMaterialStateEnum string

const (
	CourseWorkMaterialStateEnumCourseworkMaterialStateUnspecified CourseWorkMaterialStateEnum = "COURSEWORK_MATERIAL_STATE_UNSPECIFIED"
	CourseWorkMaterialStateEnumPublished                          CourseWorkMaterialStateEnum = "PUBLISHED"
	CourseWorkMaterialStateEnumDraft                              CourseWorkMaterialStateEnum = "DRAFT"
	CourseWorkMaterialStateEnumDeleted                            CourseWorkMaterialStateEnum = "DELETED"
)

func (e *CourseWorkMaterialStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COURSEWORK_MATERIAL_STATE_UNSPECIFIED":
		fallthrough
	case "PUBLISHED":
		fallthrough
	case "DRAFT":
		fallthrough
	case "DELETED":
		*e = CourseWorkMaterialStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CourseWorkMaterialStateEnum: %s", s)
	}
}

// CourseWorkMaterial - Course work material created by a teacher for students of the course
type CourseWorkMaterial struct {
	// Absolute link to this course work material in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.
	AlternateLink *string `json:"alternateLink,omitempty"`
	// Assignee mode of the course work material. If unspecified, the default value is `ALL_STUDENTS`.
	AssigneeMode *CourseWorkMaterialAssigneeModeEnum `json:"assigneeMode,omitempty"`
	// Identifier of the course. Read-only.
	CourseID *string `json:"courseId,omitempty"`
	// Timestamp when this course work material was created. Read-only.
	CreationTime *string `json:"creationTime,omitempty"`
	// Identifier for the user that created the course work material. Read-only.
	CreatorUserID *string `json:"creatorUserId,omitempty"`
	// Optional description of this course work material. The text must be a valid UTF-8 string containing no more than 30,000 characters.
	Description *string `json:"description,omitempty"`
	// Classroom-assigned identifier of this course work material, unique per course. Read-only.
	ID *string `json:"id,omitempty"`
	// Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
	IndividualStudentsOptions *IndividualStudentsOptions `json:"individualStudentsOptions,omitempty"`
	// Additional materials. A course work material must have no more than 20 material items.
	Materials []Material `json:"materials,omitempty"`
	// Optional timestamp when this course work material is scheduled to be published.
	ScheduledTime *string `json:"scheduledTime,omitempty"`
	// Status of this course work material. If unspecified, the default state is `DRAFT`.
	State *CourseWorkMaterialStateEnum `json:"state,omitempty"`
	// Title of this course work material. The title must be a valid UTF-8 string containing between 1 and 3000 characters.
	Title *string `json:"title,omitempty"`
	// Identifier for the topic that this course work material is associated with. Must match an existing topic in the course.
	TopicID *string `json:"topicId,omitempty"`
	// Timestamp of the most recent change to this course work material. Read-only.
	UpdateTime *string `json:"updateTime,omitempty"`
}
