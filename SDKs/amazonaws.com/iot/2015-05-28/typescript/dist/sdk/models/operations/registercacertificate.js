"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegisterCACertificateResponse = exports.RegisterCACertificateRequest = exports.RegisterCACertificateRequestBody = exports.RegisterCACertificateRequestBodyRegistrationConfig = exports.RegisterCACertificateRequestBodyCertificateModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * Describes the certificate mode in which the Certificate Authority (CA) will be registered. If the <code>verificationCertificate</code> field is not provided, set <code>certificateMode</code> to be <code>SNI_ONLY</code>. If the <code>verificationCertificate</code> field is provided, set <code>certificateMode</code> to be <code>DEFAULT</code>. When <code>certificateMode</code> is not provided, it defaults to <code>DEFAULT</code>. All the device certificates that are registered using this CA will be registered in the same certificate mode as the CA. For more information about certificate mode for device certificates, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode"> certificate mode</a>.
 */
var RegisterCACertificateRequestBodyCertificateModeEnum;
(function (RegisterCACertificateRequestBodyCertificateModeEnum) {
    RegisterCACertificateRequestBodyCertificateModeEnum["Default"] = "DEFAULT";
    RegisterCACertificateRequestBodyCertificateModeEnum["SniOnly"] = "SNI_ONLY";
})(RegisterCACertificateRequestBodyCertificateModeEnum = exports.RegisterCACertificateRequestBodyCertificateModeEnum || (exports.RegisterCACertificateRequestBodyCertificateModeEnum = {}));
/**
 * The registration configuration.
 */
var RegisterCACertificateRequestBodyRegistrationConfig = /** @class */ (function (_super) {
    __extends(RegisterCACertificateRequestBodyRegistrationConfig, _super);
    function RegisterCACertificateRequestBodyRegistrationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "roleArn" }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequestBodyRegistrationConfig.prototype, "roleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "templateBody" }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequestBodyRegistrationConfig.prototype, "templateBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "templateName" }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequestBodyRegistrationConfig.prototype, "templateName", void 0);
    return RegisterCACertificateRequestBodyRegistrationConfig;
}(utils_1.SpeakeasyBase));
exports.RegisterCACertificateRequestBodyRegistrationConfig = RegisterCACertificateRequestBodyRegistrationConfig;
var RegisterCACertificateRequestBody = /** @class */ (function (_super) {
    __extends(RegisterCACertificateRequestBody, _super);
    function RegisterCACertificateRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "caCertificate" }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequestBody.prototype, "caCertificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateMode" }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequestBody.prototype, "certificateMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registrationConfig" }),
        (0, class_transformer_1.Type)(function () { return RegisterCACertificateRequestBodyRegistrationConfig; }),
        __metadata("design:type", RegisterCACertificateRequestBodyRegistrationConfig)
    ], RegisterCACertificateRequestBody.prototype, "registrationConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.Tag }),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        (0, class_transformer_1.Type)(function () { return shared.Tag; }),
        __metadata("design:type", Array)
    ], RegisterCACertificateRequestBody.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "verificationCertificate" }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequestBody.prototype, "verificationCertificate", void 0);
    return RegisterCACertificateRequestBody;
}(utils_1.SpeakeasyBase));
exports.RegisterCACertificateRequestBody = RegisterCACertificateRequestBody;
var RegisterCACertificateRequest = /** @class */ (function (_super) {
    __extends(RegisterCACertificateRequest, _super);
    function RegisterCACertificateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", RegisterCACertificateRequestBody)
    ], RegisterCACertificateRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], RegisterCACertificateRequest.prototype, "xAmzSignedHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=allowAutoRegistration",
        }),
        __metadata("design:type", Boolean)
    ], RegisterCACertificateRequest.prototype, "allowAutoRegistration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=setAsActive",
        }),
        __metadata("design:type", Boolean)
    ], RegisterCACertificateRequest.prototype, "setAsActive", void 0);
    return RegisterCACertificateRequest;
}(utils_1.SpeakeasyBase));
exports.RegisterCACertificateRequest = RegisterCACertificateRequest;
var RegisterCACertificateResponse = /** @class */ (function (_super) {
    __extends(RegisterCACertificateResponse, _super);
    function RegisterCACertificateResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "certificateValidationException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterCACertificateResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "internalFailureException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "invalidRequestException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "limitExceededException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.RegisterCACertificateResponse)
    ], RegisterCACertificateResponse.prototype, "registerCACertificateResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "registrationCodeValidationException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "resourceAlreadyExistsException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "resourceNotFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RegisterCACertificateResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "serviceUnavailableException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "throttlingException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegisterCACertificateResponse.prototype, "unauthorizedException", void 0);
    return RegisterCACertificateResponse;
}(utils_1.SpeakeasyBase));
exports.RegisterCACertificateResponse = RegisterCACertificateResponse;
