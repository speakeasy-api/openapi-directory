/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VpnGateway - Represents a HA VPN gateway. HA VPN is a high-availability (HA) Cloud VPN solution that lets you securely connect your on-premises network to your Google Cloud Virtual Private Cloud network through an IPsec VPN connection in a single region. For more information about Cloud HA VPN solutions, see Cloud VPN topologies .
 */
public class VpnGateway {
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public VpnGateway withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public VpnGateway withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The IP family of the gateway IPs for the HA-VPN gateway interfaces. If not specified, IPV4 will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatewayIpVersion")
    public VpnGatewayGatewayIpVersionEnum gatewayIpVersion;

    public VpnGateway withGatewayIpVersion(VpnGatewayGatewayIpVersionEnum gatewayIpVersion) {
        this.gatewayIpVersion = gatewayIpVersion;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public VpnGateway withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public VpnGateway withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A fingerprint for the labels being applied to this VpnGateway, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a VpnGateway.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelFingerprint")
    public String labelFingerprint;

    public VpnGateway withLabelFingerprint(String labelFingerprint) {
        this.labelFingerprint = labelFingerprint;
        return this;
    }
    
    /**
     * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public VpnGateway withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public VpnGateway withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public VpnGateway withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * [Output Only] URL of the region where the VPN gateway resides.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public VpnGateway withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public VpnGateway withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The stack type for this VPN gateway to identify the IP protocols that are enabled. Possible values are: IPV4_ONLY, IPV4_IPV6. If not specified, IPV4_ONLY will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stackType")
    public VpnGatewayStackTypeEnum stackType;

    public VpnGateway withStackType(VpnGatewayStackTypeEnum stackType) {
        this.stackType = stackType;
        return this;
    }
    
    /**
     * The list of VPN interfaces associated with this VPN gateway.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpnInterfaces")
    public VpnGatewayVpnGatewayInterface[] vpnInterfaces;

    public VpnGateway withVpnInterfaces(VpnGatewayVpnGatewayInterface[] vpnInterfaces) {
        this.vpnInterfaces = vpnInterfaces;
        return this;
    }
    
    public VpnGateway(){}
}
