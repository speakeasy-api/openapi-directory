"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FxSummaryV3:
    
    creation_date_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    funding_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingStatus') }})
    r"""Current status of the funding. One of the following values: FUNDED, INSTRUCTED, UNFUNDED"""  
    inverted_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invertedRate') }})  
    quote_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quoteId') }})  
    rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rate') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Current status of the FX Summary. One of the following values: UNQUOTED, QUOTED, EXPIRED, EXECUTED"""  
    total_cost: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalCost') }})  
    total_payment_amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalPaymentAmount') }})  
    payment_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentCurrency'), 'exclude': lambda f: f is None }})
    r"""ISO 3 character currency code"""  
    source_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceCurrency'), 'exclude': lambda f: f is None }})
    r"""ISO 3 character currency code"""  
    