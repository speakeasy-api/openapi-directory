"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class ImportInstanceResultConversionTaskImportInstancePlatformEnum(str, Enum):
    r"""The instance operating system."""
    WINDOWS = 'Windows'

class ImportInstanceResultConversionTaskImportInstanceVolumesImageFormatEnum(str, Enum):
    r"""The disk image format."""
    VMDK = 'VMDK'
    RAW = 'RAW'
    VHD = 'VHD'


@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportInstanceVolumesImage:
    r"""The image."""
    
    checksum: Optional[str] = dataclasses.field(default=None)  
    format: Optional[ImportInstanceResultConversionTaskImportInstanceVolumesImageFormatEnum] = dataclasses.field(default=None)  
    import_manifest_url: Optional[str] = dataclasses.field(default=None)  
    size: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportInstanceVolumesVolume:
    r"""The volume."""
    
    id: Optional[str] = dataclasses.field(default=None)  
    size: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportInstanceVolumes:
    r"""Describes an import volume task."""
    
    availability_zone: Optional[str] = dataclasses.field(default=None)  
    bytes_converted: Optional[int] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    image: Optional[ImportInstanceResultConversionTaskImportInstanceVolumesImage] = dataclasses.field(default=None)  
    status: Optional[str] = dataclasses.field(default=None)  
    status_message: Optional[str] = dataclasses.field(default=None)  
    volume: Optional[ImportInstanceResultConversionTaskImportInstanceVolumesVolume] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportInstance:
    r"""If the task is for importing an instance, this contains information about the import instance task."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    instance_id: Optional[str] = dataclasses.field(default=None)  
    platform: Optional[ImportInstanceResultConversionTaskImportInstancePlatformEnum] = dataclasses.field(default=None)  
    volumes: Optional[list[ImportInstanceResultConversionTaskImportInstanceVolumes]] = dataclasses.field(default=None)  
    
class ImportInstanceResultConversionTaskImportVolumeImageFormatEnum(str, Enum):
    r"""The disk image format."""
    VMDK = 'VMDK'
    RAW = 'RAW'
    VHD = 'VHD'


@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportVolumeImage:
    r"""The image."""
    
    checksum: Optional[str] = dataclasses.field(default=None)  
    format: Optional[ImportInstanceResultConversionTaskImportVolumeImageFormatEnum] = dataclasses.field(default=None)  
    import_manifest_url: Optional[str] = dataclasses.field(default=None)  
    size: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportVolumeVolume:
    r"""The volume."""
    
    id: Optional[str] = dataclasses.field(default=None)  
    size: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResultConversionTaskImportVolume:
    r"""If the task is for importing a volume, this contains information about the import volume task."""
    
    availability_zone: Optional[str] = dataclasses.field(default=None)  
    bytes_converted: Optional[int] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    image: Optional[ImportInstanceResultConversionTaskImportVolumeImage] = dataclasses.field(default=None)  
    volume: Optional[ImportInstanceResultConversionTaskImportVolumeVolume] = dataclasses.field(default=None)  
    
class ImportInstanceResultConversionTaskStateEnum(str, Enum):
    r"""The state of the conversion task."""
    ACTIVE = 'active'
    CANCELLING = 'cancelling'
    CANCELLED = 'cancelled'
    COMPLETED = 'completed'


@dataclasses.dataclass
class ImportInstanceResultConversionTaskTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResultConversionTask:
    r"""Information about the conversion task."""
    
    conversion_task_id: Optional[str] = dataclasses.field(default=None)  
    expiration_time: Optional[str] = dataclasses.field(default=None)  
    import_instance: Optional[ImportInstanceResultConversionTaskImportInstance] = dataclasses.field(default=None)  
    import_volume: Optional[ImportInstanceResultConversionTaskImportVolume] = dataclasses.field(default=None)  
    state: Optional[ImportInstanceResultConversionTaskStateEnum] = dataclasses.field(default=None)  
    status_message: Optional[str] = dataclasses.field(default=None)  
    tags: Optional[list[ImportInstanceResultConversionTaskTags]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImportInstanceResult:
    r"""Success"""
    
    conversion_task: Optional[ImportInstanceResultConversionTask] = dataclasses.field(default=None)  
    