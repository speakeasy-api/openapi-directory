// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CardDisplayPropertyDataTypeEnum - Type of data represented by this property.
type CardDisplayPropertyDataTypeEnum string

const (
	CardDisplayPropertyDataTypeEnumBoolean  CardDisplayPropertyDataTypeEnum = "BOOLEAN"
	CardDisplayPropertyDataTypeEnumCurrency CardDisplayPropertyDataTypeEnum = "CURRENCY"
	CardDisplayPropertyDataTypeEnumDate     CardDisplayPropertyDataTypeEnum = "DATE"
	CardDisplayPropertyDataTypeEnumDatetime CardDisplayPropertyDataTypeEnum = "DATETIME"
	CardDisplayPropertyDataTypeEnumEmail    CardDisplayPropertyDataTypeEnum = "EMAIL"
	CardDisplayPropertyDataTypeEnumLink     CardDisplayPropertyDataTypeEnum = "LINK"
	CardDisplayPropertyDataTypeEnumNumeric  CardDisplayPropertyDataTypeEnum = "NUMERIC"
	CardDisplayPropertyDataTypeEnumString   CardDisplayPropertyDataTypeEnum = "STRING"
	CardDisplayPropertyDataTypeEnumStatus   CardDisplayPropertyDataTypeEnum = "STATUS"
)

func (e CardDisplayPropertyDataTypeEnum) ToPointer() *CardDisplayPropertyDataTypeEnum {
	return &e
}

func (e *CardDisplayPropertyDataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BOOLEAN":
		fallthrough
	case "CURRENCY":
		fallthrough
	case "DATE":
		fallthrough
	case "DATETIME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "LINK":
		fallthrough
	case "NUMERIC":
		fallthrough
	case "STRING":
		fallthrough
	case "STATUS":
		*e = CardDisplayPropertyDataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CardDisplayPropertyDataTypeEnum: %v", v)
	}
}

// CardDisplayProperty - Definition for a card display property.
type CardDisplayProperty struct {
	// Type of data represented by this property.
	DataType CardDisplayPropertyDataTypeEnum `json:"dataType"`
	// The label for this property as you'd like it displayed to users.
	Label string `json:"label"`
	// An internal identifier for this property. This value must be unique TODO.
	Name string `json:"name"`
	// An array of available options that can be displayed. Only used in when `dataType` is `STATUS`.
	Options []DisplayOption `json:"options"`
}
