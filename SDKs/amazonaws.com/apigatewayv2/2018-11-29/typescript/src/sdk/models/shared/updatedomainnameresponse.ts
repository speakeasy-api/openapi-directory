/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DomainNameConfiguration } from "./domainnameconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * The mutual TLS authentication configuration for a custom domain name.
 */
export class UpdateDomainNameResponseMutualTlsAuthentication extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "TruststoreUri" })
  truststoreUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TruststoreVersion" })
  truststoreVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TruststoreWarnings" })
  truststoreWarnings?: string[];
}

/**
 * Success
 */
export class UpdateDomainNameResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiMappingSelectionExpression" })
  apiMappingSelectionExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;

  @SpeakeasyMetadata({ elemType: DomainNameConfiguration })
  @Expose({ name: "DomainNameConfigurations" })
  @Type(() => DomainNameConfiguration)
  domainNameConfigurations?: DomainNameConfiguration[];

  @SpeakeasyMetadata()
  @Expose({ name: "MutualTlsAuthentication" })
  @Type(() => UpdateDomainNameResponseMutualTlsAuthentication)
  mutualTlsAuthentication?: UpdateDomainNameResponseMutualTlsAuthentication;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
