// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StateConditionCodeEnum - The canonical code of the condition.
type StateConditionCodeEnum string

const (
	StateConditionCodeEnumOk                 StateConditionCodeEnum = "OK"
	StateConditionCodeEnumCancelled          StateConditionCodeEnum = "CANCELLED"
	StateConditionCodeEnumUnknown            StateConditionCodeEnum = "UNKNOWN"
	StateConditionCodeEnumInvalidArgument    StateConditionCodeEnum = "INVALID_ARGUMENT"
	StateConditionCodeEnumDeadlineExceeded   StateConditionCodeEnum = "DEADLINE_EXCEEDED"
	StateConditionCodeEnumNotFound           StateConditionCodeEnum = "NOT_FOUND"
	StateConditionCodeEnumAlreadyExists      StateConditionCodeEnum = "ALREADY_EXISTS"
	StateConditionCodeEnumPermissionDenied   StateConditionCodeEnum = "PERMISSION_DENIED"
	StateConditionCodeEnumUnauthenticated    StateConditionCodeEnum = "UNAUTHENTICATED"
	StateConditionCodeEnumResourceExhausted  StateConditionCodeEnum = "RESOURCE_EXHAUSTED"
	StateConditionCodeEnumFailedPrecondition StateConditionCodeEnum = "FAILED_PRECONDITION"
	StateConditionCodeEnumAborted            StateConditionCodeEnum = "ABORTED"
	StateConditionCodeEnumOutOfRange         StateConditionCodeEnum = "OUT_OF_RANGE"
	StateConditionCodeEnumUnimplemented      StateConditionCodeEnum = "UNIMPLEMENTED"
	StateConditionCodeEnumInternal           StateConditionCodeEnum = "INTERNAL"
	StateConditionCodeEnumUnavailable        StateConditionCodeEnum = "UNAVAILABLE"
	StateConditionCodeEnumDataLoss           StateConditionCodeEnum = "DATA_LOSS"
)

func (e StateConditionCodeEnum) ToPointer() *StateConditionCodeEnum {
	return &e
}

func (e *StateConditionCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "INVALID_ARGUMENT":
		fallthrough
	case "DEADLINE_EXCEEDED":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "ALREADY_EXISTS":
		fallthrough
	case "PERMISSION_DENIED":
		fallthrough
	case "UNAUTHENTICATED":
		fallthrough
	case "RESOURCE_EXHAUSTED":
		fallthrough
	case "FAILED_PRECONDITION":
		fallthrough
	case "ABORTED":
		fallthrough
	case "OUT_OF_RANGE":
		fallthrough
	case "UNIMPLEMENTED":
		fallthrough
	case "INTERNAL":
		fallthrough
	case "UNAVAILABLE":
		fallthrough
	case "DATA_LOSS":
		*e = StateConditionCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StateConditionCodeEnum: %v", v)
	}
}

// StateCondition - A condition that is part of the trigger state computation.
type StateCondition struct {
	// The canonical code of the condition.
	Code *StateConditionCodeEnum `json:"code,omitempty"`
	// Human-readable message.
	Message *string `json:"message,omitempty"`
}
