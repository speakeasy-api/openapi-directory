/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class AppSessionsByTimeQueryParams {
    /**
     * (Optional) String
     * 
     * App API identifier retrieved from the Developer Console to limit analytics to a specific app.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=app_id")
    public String appId;
    public AppSessionsByTimeQueryParams withAppId(String appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * (Optional) DateTime (ISO 8601 string)
     * 
     * Point in time when the data series should end - defaults to time of the request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ending_at")
    public String endingAt;
    public AppSessionsByTimeQueryParams withEndingAt(String endingAt) {
        this.endingAt = endingAt;
        return this;
    }
    
    /**
     * (Required) Integer
     * 
     * Max number of units (days or hours) before ending_at to include in the returned series - must be between 1 and 100 inclusive.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=length")
    public String length;
    public AppSessionsByTimeQueryParams withLength(String length) {
        this.length = length;
        return this;
    }
    
    /**
     * (Optional) String
     * 
     * Segment API identifier indicating the analytics enabled segment for which sessions should be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=segment_id")
    public String segmentId;
    public AppSessionsByTimeQueryParams withSegmentId(String segmentId) {
        this.segmentId = segmentId;
        return this;
    }
    
    /**
     * (Optional) String
     * 
     * Unit of time between data points - can be "day" or "hour" (defaults to "day"). 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=unit")
    public String unit;
    public AppSessionsByTimeQueryParams withUnit(String unit) {
        this.unit = unit;
        return this;
    }
    
}
