/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class NotificationsGetAppEmailSettingsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class NotificationsGetAppEmailSettingsRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

/**
 * The status code return by the API. It can be 400 or 404 or 409 or 500.
 */
export enum NotificationsGetAppEmailSettingsDefaultApplicationJSONCodeEnum {
  FourHundred = "400",
  FourHundredAndFour = "404",
  FourHundredAndNine = "409",
  FiveHundred = "500",
}

/**
 * Generic result for any alerting API operation
 */
export class NotificationsGetAppEmailSettingsDefaultApplicationJSON extends SpeakeasyBase {
  /**
   * The status code return by the API. It can be 400 or 404 or 409 or 500.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: NotificationsGetAppEmailSettingsDefaultApplicationJSONCodeEnum;

  /**
   * The reason for the request failed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Unique request identifier for tracking
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;
}

/**
 * Default frequency of event
 */
export enum NotificationsGetAppEmailSettings200ApplicationJSONSettingsDefaultValueEnum {
  Disabled = "Disabled",
  Individual = "Individual",
  Daily = "Daily",
  DailyAndIndividual = "DailyAndIndividual",
}

/**
 * Event Name
 */
export enum NotificationsGetAppEmailSettings200ApplicationJSONSettingsEventTypeEnum {
  CrashNewCrashGroupCreated = "crash_newCrashGroupCreated",
}

/**
 * Frequency of event
 */
export enum NotificationsGetAppEmailSettings200ApplicationJSONSettingsValueEnum {
  Disabled = "Disabled",
  Individual = "Individual",
  Daily = "Daily",
  DailyAndIndividual = "DailyAndIndividual",
  Default = "Default",
}

/**
 * Event Setting
 */
export class NotificationsGetAppEmailSettings200ApplicationJSONSettings extends SpeakeasyBase {
  /**
   * Default frequency of event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "default_value" })
  defaultValue?: NotificationsGetAppEmailSettings200ApplicationJSONSettingsDefaultValueEnum;

  /**
   * Event Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_type" })
  eventType: NotificationsGetAppEmailSettings200ApplicationJSONSettingsEventTypeEnum;

  /**
   * Frequency of event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: NotificationsGetAppEmailSettings200ApplicationJSONSettingsValueEnum;
}

/**
 * Generic result for any alerting API operation
 */
export class NotificationsGetAppEmailSettings200ApplicationJSON extends SpeakeasyBase {
  /**
   * Application ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appId" })
  appId?: string;

  /**
   * The ETag of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eTag" })
  eTag?: string;

  /**
   * Allows to forcefully disable emails on app or user level
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * Unique request identifier for tracking
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  /**
   * The settings the user has for the app
   */
  @SpeakeasyMetadata({
    elemType: NotificationsGetAppEmailSettings200ApplicationJSONSettings,
  })
  @Expose({ name: "settings" })
  @Type(() => NotificationsGetAppEmailSettings200ApplicationJSONSettings)
  settings: NotificationsGetAppEmailSettings200ApplicationJSONSettings[];

  /**
   * The unique id (UUID) of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;

  /**
   * A flag indicating if settings are enabled at user/global level
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_enabled" })
  userEnabled: boolean;
}

export class NotificationsGetAppEmailSettingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  notificationsGetAppEmailSettings200ApplicationJSONObject?: NotificationsGetAppEmailSettings200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  notificationsGetAppEmailSettingsDefaultApplicationJSONObject?: NotificationsGetAppEmailSettingsDefaultApplicationJSON;
}
