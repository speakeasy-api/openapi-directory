/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetBlobs200ApplicationJSON - A JSON object containing a list of blobs
 */
public class GetBlobs200ApplicationJSON {
    /**
     * The maximum number of items in the response (as set in the query or by default).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;
    public GetBlobs200ApplicationJSON withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * The maximum number of items available to return.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count_current")
    public Long countCurrent;
    public GetBlobs200ApplicationJSON withCountCurrent(Long countCurrent) {
        this.countCurrent = countCurrent;
        return this;
    }
    
    /**
     * Becomes false when the number of results is smaller than limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_limited")
    public Boolean isLimited;
    public GetBlobs200ApplicationJSON withIsLimited(Boolean isLimited) {
        this.isLimited = isLimited;
        return this;
    }
    
    /**
     * URL to the next page of items. ( null if none)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_url")
    public String nextUrl;
    public GetBlobs200ApplicationJSON withNextUrl(String nextUrl) {
        this.nextUrl = nextUrl;
        return this;
    }
    
    /**
     * Amount of time, in milliseconds, the request needed to complete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_duration_ms")
    public Long queryDurationMs;
    public GetBlobs200ApplicationJSON withQueryDurationMs(Long queryDurationMs) {
        this.queryDurationMs = queryDurationMs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("results")
    public org.openapis.openapi.models.shared.Blob[] results;
    public GetBlobs200ApplicationJSON withResults(org.openapis.openapi.models.shared.Blob[] results) {
        this.results = results;
        return this;
    }
    
    /**
     * Url to the individual resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public GetBlobs200ApplicationJSON withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
