"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetOrganizationSwitchPortsBySwitchResponse = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSON = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork = exports.GetOrganizationSwitchPortsBySwitchRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetOrganizationSwitchPortsBySwitchRequest = /** @class */ (function (_super) {
    __extends(GetOrganizationSwitchPortsBySwitchRequest, _super);
    function GetOrganizationSwitchPortsBySwitchRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=configurationUpdatedAfter",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "configurationUpdatedAfter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=endingBefore",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "endingBefore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=mac" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "mac", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=false;name=macs" }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "macs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=name" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=networkIds",
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "networkIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=organizationId",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "organizationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=perPage",
        }),
        __metadata("design:type", Number)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "perPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=portProfileIds",
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "portProfileIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=serial",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "serial", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=serials",
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "serials", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=startingAfter",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchRequest.prototype, "startingAfter", void 0);
    return GetOrganizationSwitchPortsBySwitchRequest;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSwitchPortsBySwitchRequest = GetOrganizationSwitchPortsBySwitchRequest;
/**
 * The network that the switch belongs to
 */
var GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork = /** @class */ (function (_super) {
    __extends(GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork, _super);
    function GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork.prototype, "name", void 0);
    return GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork = GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork;
/**
 * The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
 */
var GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum;
(function (GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum) {
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum["CustomAccessPolicy"] = "Custom access policy";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum["MACAllowList"] = "MAC allow list";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum["Open"] = "Open";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum["StickyMACAllowList"] = "Sticky MAC allow list";
})(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum || (exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum = {}));
/**
 * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
 */
var GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum;
(function (GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum) {
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum["BpduGuard"] = "bpdu guard";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum["Disabled"] = "disabled";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum["LoopGuard"] = "loop guard";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum["RootGuard"] = "root guard";
})(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum || (exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum = {}));
/**
 * The type of the switch port ('trunk' or 'access').
 */
var GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum;
(function (GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum) {
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum["Access"] = "access";
    GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum["Trunk"] = "trunk";
})(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum = exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum || (exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum = {}));
var GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts = /** @class */ (function (_super) {
    __extends(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts, _super);
    function GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyType" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "accessPolicyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedVlans" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "allowedVlans", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiation" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "linkNegotiation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "poeEnabled" }),
        __metadata("design:type", Boolean)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "poeEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portId" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "portId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rstpEnabled" }),
        __metadata("design:type", Boolean)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "rstpEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowList" }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "stickyMacAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowListLimit" }),
        __metadata("design:type", Number)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "stickyMacAllowListLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stpGuard" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "stpGuard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", Number)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "vlan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlan" }),
        __metadata("design:type", Number)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts.prototype, "voiceVlan", void 0);
    return GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts = GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts;
var GetOrganizationSwitchPortsBySwitch200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetOrganizationSwitchPortsBySwitch200ApplicationJSON, _super);
    function GetOrganizationSwitchPortsBySwitch200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mac" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSON.prototype, "mac", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "model" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSON.prototype, "model", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork; }),
        __metadata("design:type", GetOrganizationSwitchPortsBySwitch200ApplicationJSONNetwork)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSON.prototype, "network", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts,
        }),
        (0, class_transformer_1.Expose)({ name: "ports" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts; }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSON.prototype, "ports", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial" }),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitch200ApplicationJSON.prototype, "serial", void 0);
    return GetOrganizationSwitchPortsBySwitch200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSwitchPortsBySwitch200ApplicationJSON = GetOrganizationSwitchPortsBySwitch200ApplicationJSON;
var GetOrganizationSwitchPortsBySwitchResponse = /** @class */ (function (_super) {
    __extends(GetOrganizationSwitchPortsBySwitchResponse, _super);
    function GetOrganizationSwitchPortsBySwitchResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetOrganizationSwitchPortsBySwitchResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetOrganizationSwitchPortsBySwitchResponse.prototype, "headers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetOrganizationSwitchPortsBySwitchResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetOrganizationSwitchPortsBySwitchResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetOrganizationSwitchPortsBySwitch200ApplicationJSON,
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSwitchPortsBySwitchResponse.prototype, "getOrganizationSwitchPortsBySwitch200ApplicationJSONObjects", void 0);
    return GetOrganizationSwitchPortsBySwitchResponse;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSwitchPortsBySwitchResponse = GetOrganizationSwitchPortsBySwitchResponse;
