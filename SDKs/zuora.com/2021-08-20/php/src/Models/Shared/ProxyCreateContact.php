<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProxyCreateContact - Container for custom fields of a Contact object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProxyCreateContact
{
    /**
     *  The Zuora account ID associated with this contact. This field is not required when you use the Subscribe call. This field is required for all other calls.
     * 
     * **Character limit: **32 **Values: **a valid account ID 
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     *  The first line of the contact's address, which is often a street address or business name.
     * 
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     * 
     * @var ?string $address1
     */
	#[\JMS\Serializer\Annotation\SerializedName('Address1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address1 = null;
    
    /**
     *  The second line of the contact's address.
     * 
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     * 
     * @var ?string $address2
     */
	#[\JMS\Serializer\Annotation\SerializedName('Address2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address2 = null;
    
    /**
     *  The city of the contact's address.
     * 
     * **Character limit**: 40 **Values: **a string of 40 characters or fewer 
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('City')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     *  The country of the contact's address. 
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('Country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     *  The county. May optionally be used by Zuora Tax to calculate county tax.
     * 
     * **Character limit**: 32 **Values**: a string of 32 characters or fewer 
     * 
     * @var ?string $county
     */
	#[\JMS\Serializer\Annotation\SerializedName('County')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $county = null;
    
    /**
     *  A description for the contact.
     * 
     * **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     *  The contact's fax number.
     * 
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     * 
     * @var ?string $fax
     */
	#[\JMS\Serializer\Annotation\SerializedName('Fax')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fax = null;
    
    /**
     *  The contact's first name.
     * 
     * **Character limit**: 100 **Values**: a string of the contact's first name 
     * 
     * @var string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('FirstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $firstName;
    
    /**
     *  The contact's home phone number.
     * 
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     * 
     * @var ?string $homePhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('HomePhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $homePhone = null;
    
    /**
     *  The contact's last name.
     * 
     * **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     * 
     * @var string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('LastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastName;
    
    /**
     *  The contact's mobile phone number.
     * 
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     * 
     * @var ?string $mobilePhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('MobilePhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mobilePhone = null;
    
    /**
     *  A nickname for the contact.
     * 
     * **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     * 
     * @var ?string $nickName
     */
	#[\JMS\Serializer\Annotation\SerializedName('NickName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nickName = null;
    
    /**
     *  An additional phone number for the contact.
     * 
     * **Character limit**: 40 **Values**: a string of 40 characters or fewer 
     * 
     * @var ?string $otherPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('OtherPhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $otherPhone = null;
    
    /**
     * The type of the `OtherPhone`. **Character limit**: 20 **Values**: `Work`, `Mobile`, `Home`, `Other` 
     * 
     * @var ?string $otherPhoneType
     */
	#[\JMS\Serializer\Annotation\SerializedName('OtherPhoneType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $otherPhoneType = null;
    
    /**
     *  The contact's personal email address.
     * 
     * **Character limit**: 80 **Values**: a string of 80 characters or fewer 
     * 
     * @var ?string $personalEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('PersonalEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $personalEmail = null;
    
    /**
     *  The zip code for the contact's address.
     * 
     * **Character limit:** 20 **Values: **a string of 20 characters or fewer 
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('PostalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     *  The state or province of the contact's address. 
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('State')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * If using Zuora Tax rules 
     * 
     * @var ?string $taxRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('TaxRegion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxRegion = null;
    
    /**
     *  The contact's business email address.
     * 
     * **Character limit**: 80 **Values**: a string of 80 characters or fewer 
     * 
     * @var ?string $workEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('WorkEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workEmail = null;
    
    /**
     *  The contact's business phone number.
     * 
     * **Character limit**: 40 **notes**: -- **Values**: a string of 40 characters or fewer 
     * 
     * @var ?string $workPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('WorkPhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workPhone = null;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->address1 = null;
		$this->address2 = null;
		$this->city = null;
		$this->country = null;
		$this->county = null;
		$this->description = null;
		$this->fax = null;
		$this->firstName = "";
		$this->homePhone = null;
		$this->lastName = "";
		$this->mobilePhone = null;
		$this->nickName = null;
		$this->otherPhone = null;
		$this->otherPhoneType = null;
		$this->personalEmail = null;
		$this->postalCode = null;
		$this->state = null;
		$this->taxRegion = null;
		$this->workEmail = null;
		$this->workPhone = null;
	}
}
