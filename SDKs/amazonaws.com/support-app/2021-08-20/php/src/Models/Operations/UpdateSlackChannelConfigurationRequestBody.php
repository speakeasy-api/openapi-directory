<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateSlackChannelConfigurationRequestBody
{
    /**
     * The channel ID in Slack. This ID identifies a channel within a Slack workspace.
     * 
     * @var string $channelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $channelId;
    
    /**
     * The Slack channel name that you want to update.
     * 
     * @var ?string $channelName
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelName = null;
    
    /**
     * The Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations on Amazon Web Services. For more information, see <a href="https://docs.aws.amazon.com/awssupport/latest/user/support-app-permissions.html">Managing access to the Amazon Web Services Support App</a> in the <i>Amazon Web Services Support User Guide</i>.
     * 
     * @var ?string $channelRoleArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelRoleArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelRoleArn = null;
    
    /**
     * Whether you want to get notified when a support case has a new correspondence.
     * 
     * @var ?bool $notifyOnAddCorrespondenceToCase
     */
	#[\JMS\Serializer\Annotation\SerializedName('notifyOnAddCorrespondenceToCase')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $notifyOnAddCorrespondenceToCase = null;
    
    /**
     * <p>The case severity for a support case that you want to receive notifications.</p> <p>If you specify <code>high</code> or <code>all</code>, at least one of the following parameters must be <code>true</code>:</p> <ul> <li> <p> <code>notifyOnAddCorrespondenceToCase</code> </p> </li> <li> <p> <code>notifyOnCreateOrReopenCase</code> </p> </li> <li> <p> <code>notifyOnResolveCase</code> </p> </li> </ul> <p>If you specify <code>none</code>, any of the following parameters that you specify in your request must be <code>false</code>:</p> <ul> <li> <p> <code>notifyOnAddCorrespondenceToCase</code> </p> </li> <li> <p> <code>notifyOnCreateOrReopenCase</code> </p> </li> <li> <p> <code>notifyOnResolveCase</code> </p> </li> </ul> <note> <p>If you don't specify these parameters in your request, the Amazon Web Services Support App uses the current values by default.</p> </note>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum $notifyOnCaseSeverity
     */
	#[\JMS\Serializer\Annotation\SerializedName('notifyOnCaseSeverity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum $notifyOnCaseSeverity = null;
    
    /**
     * Whether you want to get notified when a support case is created or reopened.
     * 
     * @var ?bool $notifyOnCreateOrReopenCase
     */
	#[\JMS\Serializer\Annotation\SerializedName('notifyOnCreateOrReopenCase')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $notifyOnCreateOrReopenCase = null;
    
    /**
     * Whether you want to get notified when a support case is resolved.
     * 
     * @var ?bool $notifyOnResolveCase
     */
	#[\JMS\Serializer\Annotation\SerializedName('notifyOnResolveCase')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $notifyOnResolveCase = null;
    
    /**
     * The team ID in Slack. This ID uniquely identifies a Slack workspace, such as <code>T012ABCDEFG</code>.
     * 
     * @var string $teamId
     */
	#[\JMS\Serializer\Annotation\SerializedName('teamId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $teamId;
    
	public function __construct()
	{
		$this->channelId = "";
		$this->channelName = null;
		$this->channelRoleArn = null;
		$this->notifyOnAddCorrespondenceToCase = null;
		$this->notifyOnCaseSeverity = null;
		$this->notifyOnCreateOrReopenCase = null;
		$this->notifyOnResolveCase = null;
		$this->teamId = "";
	}
}
