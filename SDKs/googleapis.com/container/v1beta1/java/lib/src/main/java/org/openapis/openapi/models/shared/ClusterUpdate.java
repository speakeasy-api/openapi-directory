/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClusterUpdate - ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.
 */
public class ClusterUpdate {
    /**
     * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredAddonsConfig")
    public AddonsConfig desiredAddonsConfig;
    public ClusterUpdate withDesiredAddonsConfig(AddonsConfig desiredAddonsConfig) {
        this.desiredAddonsConfig = desiredAddonsConfig;
        return this;
    }
    
    /**
     * Configuration for returning group information from authenticators.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredAuthenticatorGroupsConfig")
    public AuthenticatorGroupsConfig desiredAuthenticatorGroupsConfig;
    public ClusterUpdate withDesiredAuthenticatorGroupsConfig(AuthenticatorGroupsConfig desiredAuthenticatorGroupsConfig) {
        this.desiredAuthenticatorGroupsConfig = desiredAuthenticatorGroupsConfig;
        return this;
    }
    
    /**
     * Configuration for Binary Authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredBinaryAuthorization")
    public BinaryAuthorization desiredBinaryAuthorization;
    public ClusterUpdate withDesiredBinaryAuthorization(BinaryAuthorization desiredBinaryAuthorization) {
        this.desiredBinaryAuthorization = desiredBinaryAuthorization;
        return this;
    }
    
    /**
     * ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredClusterAutoscaling")
    public ClusterAutoscaling desiredClusterAutoscaling;
    public ClusterUpdate withDesiredClusterAutoscaling(ClusterAutoscaling desiredClusterAutoscaling) {
        this.desiredClusterAutoscaling = desiredClusterAutoscaling;
        return this;
    }
    
    /**
     * Telemetry integration for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredClusterTelemetry")
    public ClusterTelemetry desiredClusterTelemetry;
    public ClusterUpdate withDesiredClusterTelemetry(ClusterTelemetry desiredClusterTelemetry) {
        this.desiredClusterTelemetry = desiredClusterTelemetry;
        return this;
    }
    
    /**
     * Configuration for fine-grained cost management feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredCostManagementConfig")
    public CostManagementConfig desiredCostManagementConfig;
    public ClusterUpdate withDesiredCostManagementConfig(CostManagementConfig desiredCostManagementConfig) {
        this.desiredCostManagementConfig = desiredCostManagementConfig;
        return this;
    }
    
    /**
     * Configuration of etcd encryption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredDatabaseEncryption")
    public DatabaseEncryption desiredDatabaseEncryption;
    public ClusterUpdate withDesiredDatabaseEncryption(DatabaseEncryption desiredDatabaseEncryption) {
        this.desiredDatabaseEncryption = desiredDatabaseEncryption;
        return this;
    }
    
    /**
     * The desired datapath provider for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredDatapathProvider")
    public ClusterUpdateDesiredDatapathProviderEnum desiredDatapathProvider;
    public ClusterUpdate withDesiredDatapathProvider(ClusterUpdateDesiredDatapathProviderEnum desiredDatapathProvider) {
        this.desiredDatapathProvider = desiredDatapathProvider;
        return this;
    }
    
    /**
     * DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredDefaultSnatStatus")
    public DefaultSnatStatus desiredDefaultSnatStatus;
    public ClusterUpdate withDesiredDefaultSnatStatus(DefaultSnatStatus desiredDefaultSnatStatus) {
        this.desiredDefaultSnatStatus = desiredDefaultSnatStatus;
        return this;
    }
    
    /**
     * DNSConfig contains the desired set of options for configuring clusterDNS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredDnsConfig")
    public DNSConfig desiredDnsConfig;
    public ClusterUpdate withDesiredDnsConfig(DNSConfig desiredDnsConfig) {
        this.desiredDnsConfig = desiredDnsConfig;
        return this;
    }
    
    /**
     * Enable/Disable private endpoint for the cluster's master.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredEnablePrivateEndpoint")
    public Boolean desiredEnablePrivateEndpoint;
    public ClusterUpdate withDesiredEnablePrivateEndpoint(Boolean desiredEnablePrivateEndpoint) {
        this.desiredEnablePrivateEndpoint = desiredEnablePrivateEndpoint;
        return this;
    }
    
    /**
     * GatewayAPIConfig contains the desired config of Gateway API on this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredGatewayApiConfig")
    public GatewayAPIConfig desiredGatewayApiConfig;
    public ClusterUpdate withDesiredGatewayApiConfig(GatewayAPIConfig desiredGatewayApiConfig) {
        this.desiredGatewayApiConfig = desiredGatewayApiConfig;
        return this;
    }
    
    /**
     * GcfsConfig contains configurations of Google Container File System.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredGcfsConfig")
    public GcfsConfig desiredGcfsConfig;
    public ClusterUpdate withDesiredGcfsConfig(GcfsConfig desiredGcfsConfig) {
        this.desiredGcfsConfig = desiredGcfsConfig;
        return this;
    }
    
    /**
     * IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredIdentityServiceConfig")
    public IdentityServiceConfig desiredIdentityServiceConfig;
    public ClusterUpdate withDesiredIdentityServiceConfig(IdentityServiceConfig desiredIdentityServiceConfig) {
        this.desiredIdentityServiceConfig = desiredIdentityServiceConfig;
        return this;
    }
    
    /**
     * The desired image type for the node pool. NOTE: Set the "desired_node_pool" field as well.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredImageType")
    public String desiredImageType;
    public ClusterUpdate withDesiredImageType(String desiredImageType) {
        this.desiredImageType = desiredImageType;
        return this;
    }
    
    /**
     * IntraNodeVisibilityConfig contains the desired config of the intra-node visibility on this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredIntraNodeVisibilityConfig")
    public IntraNodeVisibilityConfig desiredIntraNodeVisibilityConfig;
    public ClusterUpdate withDesiredIntraNodeVisibilityConfig(IntraNodeVisibilityConfig desiredIntraNodeVisibilityConfig) {
        this.desiredIntraNodeVisibilityConfig = desiredIntraNodeVisibilityConfig;
        return this;
    }
    
    /**
     * ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer subsetting on this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredL4ilbSubsettingConfig")
    public ILBSubsettingConfig desiredL4ilbSubsettingConfig;
    public ClusterUpdate withDesiredL4ilbSubsettingConfig(ILBSubsettingConfig desiredL4ilbSubsettingConfig) {
        this.desiredL4ilbSubsettingConfig = desiredL4ilbSubsettingConfig;
        return this;
    }
    
    /**
     * The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredLocations")
    public String[] desiredLocations;
    public ClusterUpdate withDesiredLocations(String[] desiredLocations) {
        this.desiredLocations = desiredLocations;
        return this;
    }
    
    /**
     * LoggingConfig is cluster logging configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredLoggingConfig")
    public LoggingConfig desiredLoggingConfig;
    public ClusterUpdate withDesiredLoggingConfig(LoggingConfig desiredLoggingConfig) {
        this.desiredLoggingConfig = desiredLoggingConfig;
        return this;
    }
    
    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredLoggingService")
    public String desiredLoggingService;
    public ClusterUpdate withDesiredLoggingService(String desiredLoggingService) {
        this.desiredLoggingService = desiredLoggingService;
        return this;
    }
    
    /**
     * Master is the configuration for components on master.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredMaster")
    public java.util.Map<String, Object> desiredMaster;
    public ClusterUpdate withDesiredMaster(java.util.Map<String, Object> desiredMaster) {
        this.desiredMaster = desiredMaster;
        return this;
    }
    
    /**
     * Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredMasterAuthorizedNetworksConfig")
    public MasterAuthorizedNetworksConfig desiredMasterAuthorizedNetworksConfig;
    public ClusterUpdate withDesiredMasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig desiredMasterAuthorizedNetworksConfig) {
        this.desiredMasterAuthorizedNetworksConfig = desiredMasterAuthorizedNetworksConfig;
        return this;
    }
    
    /**
     * The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the default Kubernetes version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredMasterVersion")
    public String desiredMasterVersion;
    public ClusterUpdate withDesiredMasterVersion(String desiredMasterVersion) {
        this.desiredMasterVersion = desiredMasterVersion;
        return this;
    }
    
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredMeshCertificates")
    public MeshCertificates desiredMeshCertificates;
    public ClusterUpdate withDesiredMeshCertificates(MeshCertificates desiredMeshCertificates) {
        this.desiredMeshCertificates = desiredMeshCertificates;
        return this;
    }
    
    /**
     * MonitoringConfig is cluster monitoring configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredMonitoringConfig")
    public MonitoringConfig desiredMonitoringConfig;
    public ClusterUpdate withDesiredMonitoringConfig(MonitoringConfig desiredMonitoringConfig) {
        this.desiredMonitoringConfig = desiredMonitoringConfig;
        return this;
    }
    
    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredMonitoringService")
    public String desiredMonitoringService;
    public ClusterUpdate withDesiredMonitoringService(String desiredMonitoringService) {
        this.desiredMonitoringService = desiredMonitoringService;
        return this;
    }
    
    /**
     * Collection of Compute Engine network tags that can be applied to a node's underlying VM instance. (See `tags` field in [`NodeConfig`](/kubernetes-engine/docs/reference/rest/v1/NodeConfig)).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredNodePoolAutoConfigNetworkTags")
    public NetworkTags desiredNodePoolAutoConfigNetworkTags;
    public ClusterUpdate withDesiredNodePoolAutoConfigNetworkTags(NetworkTags desiredNodePoolAutoConfigNetworkTags) {
        this.desiredNodePoolAutoConfigNetworkTags = desiredNodePoolAutoConfigNetworkTags;
        return this;
    }
    
    /**
     * NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredNodePoolAutoscaling")
    public NodePoolAutoscaling desiredNodePoolAutoscaling;
    public ClusterUpdate withDesiredNodePoolAutoscaling(NodePoolAutoscaling desiredNodePoolAutoscaling) {
        this.desiredNodePoolAutoscaling = desiredNodePoolAutoscaling;
        return this;
    }
    
    /**
     * The node pool to be upgraded. This field is mandatory if "desired_node_version", "desired_image_family", "desired_node_pool_autoscaling", or "desired_workload_metadata_config" is specified and there is more than one node pool on the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredNodePoolId")
    public String desiredNodePoolId;
    public ClusterUpdate withDesiredNodePoolId(String desiredNodePoolId) {
        this.desiredNodePoolId = desiredNodePoolId;
        return this;
    }
    
    /**
     * NodePoolLoggingConfig specifies logging configuration for nodepools.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredNodePoolLoggingConfig")
    public NodePoolLoggingConfig desiredNodePoolLoggingConfig;
    public ClusterUpdate withDesiredNodePoolLoggingConfig(NodePoolLoggingConfig desiredNodePoolLoggingConfig) {
        this.desiredNodePoolLoggingConfig = desiredNodePoolLoggingConfig;
        return this;
    }
    
    /**
     * The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the Kubernetes master version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredNodeVersion")
    public String desiredNodeVersion;
    public ClusterUpdate withDesiredNodeVersion(String desiredNodeVersion) {
        this.desiredNodeVersion = desiredNodeVersion;
        return this;
    }
    
    /**
     * NotificationConfig is the configuration of notifications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredNotificationConfig")
    public NotificationConfig desiredNotificationConfig;
    public ClusterUpdate withDesiredNotificationConfig(NotificationConfig desiredNotificationConfig) {
        this.desiredNotificationConfig = desiredNotificationConfig;
        return this;
    }
    
    /**
     * Configuration for the PodSecurityPolicy feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredPodSecurityPolicyConfig")
    public PodSecurityPolicyConfig desiredPodSecurityPolicyConfig;
    public ClusterUpdate withDesiredPodSecurityPolicyConfig(PodSecurityPolicyConfig desiredPodSecurityPolicyConfig) {
        this.desiredPodSecurityPolicyConfig = desiredPodSecurityPolicyConfig;
        return this;
    }
    
    /**
     * Configuration options for private clusters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredPrivateClusterConfig")
    public PrivateClusterConfig desiredPrivateClusterConfig;
    public ClusterUpdate withDesiredPrivateClusterConfig(PrivateClusterConfig desiredPrivateClusterConfig) {
        this.desiredPrivateClusterConfig = desiredPrivateClusterConfig;
        return this;
    }
    
    /**
     * The desired state of IPv6 connectivity to Google Services.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredPrivateIpv6GoogleAccess")
    public ClusterUpdateDesiredPrivateIpv6GoogleAccessEnum desiredPrivateIpv6GoogleAccess;
    public ClusterUpdate withDesiredPrivateIpv6GoogleAccess(ClusterUpdateDesiredPrivateIpv6GoogleAccessEnum desiredPrivateIpv6GoogleAccess) {
        this.desiredPrivateIpv6GoogleAccess = desiredPrivateIpv6GoogleAccess;
        return this;
    }
    
    /**
     * ProtectConfig defines the flags needed to enable/disable features for the Protect API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredProtectConfig")
    public ProtectConfig desiredProtectConfig;
    public ClusterUpdate withDesiredProtectConfig(ProtectConfig desiredProtectConfig) {
        this.desiredProtectConfig = desiredProtectConfig;
        return this;
    }
    
    /**
     * ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredReleaseChannel")
    public ReleaseChannel desiredReleaseChannel;
    public ClusterUpdate withDesiredReleaseChannel(ReleaseChannel desiredReleaseChannel) {
        this.desiredReleaseChannel = desiredReleaseChannel;
        return this;
    }
    
    /**
     * Configuration for exporting cluster resource usages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredResourceUsageExportConfig")
    public ResourceUsageExportConfig desiredResourceUsageExportConfig;
    public ClusterUpdate withDesiredResourceUsageExportConfig(ResourceUsageExportConfig desiredResourceUsageExportConfig) {
        this.desiredResourceUsageExportConfig = desiredResourceUsageExportConfig;
        return this;
    }
    
    /**
     * Config to block services with externalIPs field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredServiceExternalIpsConfig")
    public ServiceExternalIPsConfig desiredServiceExternalIpsConfig;
    public ClusterUpdate withDesiredServiceExternalIpsConfig(ServiceExternalIPsConfig desiredServiceExternalIpsConfig) {
        this.desiredServiceExternalIpsConfig = desiredServiceExternalIpsConfig;
        return this;
    }
    
    /**
     * Configuration of Shielded Nodes feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredShieldedNodes")
    public ShieldedNodes desiredShieldedNodes;
    public ClusterUpdate withDesiredShieldedNodes(ShieldedNodes desiredShieldedNodes) {
        this.desiredShieldedNodes = desiredShieldedNodes;
        return this;
    }
    
    /**
     * The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredStackType")
    public ClusterUpdateDesiredStackTypeEnum desiredStackType;
    public ClusterUpdate withDesiredStackType(ClusterUpdateDesiredStackTypeEnum desiredStackType) {
        this.desiredStackType = desiredStackType;
        return this;
    }
    
    /**
     * Configuration for Cloud TPU.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredTpuConfig")
    public TpuConfig desiredTpuConfig;
    public ClusterUpdate withDesiredTpuConfig(TpuConfig desiredTpuConfig) {
        this.desiredTpuConfig = desiredTpuConfig;
        return this;
    }
    
    /**
     * VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredVerticalPodAutoscaling")
    public VerticalPodAutoscaling desiredVerticalPodAutoscaling;
    public ClusterUpdate withDesiredVerticalPodAutoscaling(VerticalPodAutoscaling desiredVerticalPodAutoscaling) {
        this.desiredVerticalPodAutoscaling = desiredVerticalPodAutoscaling;
        return this;
    }
    
    /**
     * Configuration for direct-path (via ALTS) with workload identity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredWorkloadAltsConfig")
    public WorkloadALTSConfig desiredWorkloadAltsConfig;
    public ClusterUpdate withDesiredWorkloadAltsConfig(WorkloadALTSConfig desiredWorkloadAltsConfig) {
        this.desiredWorkloadAltsConfig = desiredWorkloadAltsConfig;
        return this;
    }
    
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredWorkloadCertificates")
    public WorkloadCertificates desiredWorkloadCertificates;
    public ClusterUpdate withDesiredWorkloadCertificates(WorkloadCertificates desiredWorkloadCertificates) {
        this.desiredWorkloadCertificates = desiredWorkloadCertificates;
        return this;
    }
    
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredWorkloadIdentityConfig")
    public WorkloadIdentityConfig desiredWorkloadIdentityConfig;
    public ClusterUpdate withDesiredWorkloadIdentityConfig(WorkloadIdentityConfig desiredWorkloadIdentityConfig) {
        this.desiredWorkloadIdentityConfig = desiredWorkloadIdentityConfig;
        return this;
    }
    
    /**
     * The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public ClusterUpdate withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
}
