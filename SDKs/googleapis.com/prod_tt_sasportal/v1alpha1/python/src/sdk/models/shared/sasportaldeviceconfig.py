"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sasportaldeviceairinterface as shared_sasportaldeviceairinterface
from ..shared import sasportaldevicemodel as shared_sasportaldevicemodel
from ..shared import sasportalinstallationparams as shared_sasportalinstallationparams
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SasPortalDeviceConfigCategoryEnum(str, Enum):
    r"""FCC category of the device."""
    DEVICE_CATEGORY_UNSPECIFIED = 'DEVICE_CATEGORY_UNSPECIFIED'
    DEVICE_CATEGORY_A = 'DEVICE_CATEGORY_A'
    DEVICE_CATEGORY_B = 'DEVICE_CATEGORY_B'

class SasPortalDeviceConfigMeasurementCapabilitiesEnum(str, Enum):
    MEASUREMENT_CAPABILITY_UNSPECIFIED = 'MEASUREMENT_CAPABILITY_UNSPECIFIED'
    MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT = 'MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT'
    MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT = 'MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT'

class SasPortalDeviceConfigStateEnum(str, Enum):
    r"""State of the configuration."""
    DEVICE_CONFIG_STATE_UNSPECIFIED = 'DEVICE_CONFIG_STATE_UNSPECIFIED'
    DRAFT = 'DRAFT'
    FINAL = 'FINAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SasPortalDeviceConfig:
    r"""Information about the device configuration."""
    
    air_interface: Optional[shared_sasportaldeviceairinterface.SasPortalDeviceAirInterface] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('airInterface'), 'exclude': lambda f: f is None }})
    r"""Information about the device's air interface."""  
    call_sign: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callSign'), 'exclude': lambda f: f is None }})
    r"""The call sign of the device operator."""  
    category: Optional[SasPortalDeviceConfigCategoryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""FCC category of the device."""  
    installation_params: Optional[shared_sasportalinstallationparams.SasPortalInstallationParams] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installationParams'), 'exclude': lambda f: f is None }})
    r"""Information about the device installation parameters."""  
    is_signed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSigned'), 'exclude': lambda f: f is None }})
    r"""Output only. Whether the configuration has been signed by a CPI."""  
    measurement_capabilities: Optional[list[SasPortalDeviceConfigMeasurementCapabilitiesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurementCapabilities'), 'exclude': lambda f: f is None }})
    r"""Measurement reporting capabilities of the device."""  
    model: Optional[shared_sasportaldevicemodel.SasPortalDeviceModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""Information about the model of the device."""  
    state: Optional[SasPortalDeviceConfigStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State of the configuration."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The last time the device configuration was edited."""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})
    r"""The identifier of a device user."""  
    