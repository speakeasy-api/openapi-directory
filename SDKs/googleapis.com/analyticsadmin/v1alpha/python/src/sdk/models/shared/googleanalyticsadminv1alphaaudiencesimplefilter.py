"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleanalyticsadminv1alphaaudiencefilterexpression as shared_googleanalyticsadminv1alphaaudiencefilterexpression
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaAudienceSimpleFilterScopeEnum(str, Enum):
    r"""Required. Immutable. Specifies the scope for this filter."""
    AUDIENCE_FILTER_SCOPE_UNSPECIFIED = 'AUDIENCE_FILTER_SCOPE_UNSPECIFIED'
    AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT = 'AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT'
    AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION = 'AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION'
    AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS = 'AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaAudienceSimpleFilter:
    r"""Defines a simple filter that a user must satisfy to be a member of the Audience."""
    
    filter_expression: Optional[shared_googleanalyticsadminv1alphaaudiencefilterexpression.GoogleAnalyticsAdminV1alphaAudienceFilterExpression] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterExpression'), 'exclude': lambda f: f is None }})
    r"""A logical expression of Audience dimension, metric, or event filters."""  
    scope: Optional[GoogleAnalyticsAdminV1alphaAudienceSimpleFilterScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. Specifies the scope for this filter."""  
    