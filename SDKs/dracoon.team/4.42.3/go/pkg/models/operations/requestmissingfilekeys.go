// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RequestMissingFileKeysUseKeyEnum - Determines which key should be used (NEW)
type RequestMissingFileKeysUseKeyEnum string

const (
	RequestMissingFileKeysUseKeyEnumRoomRescueKey           RequestMissingFileKeysUseKeyEnum = "room_rescue_key"
	RequestMissingFileKeysUseKeyEnumSystemRescueKey         RequestMissingFileKeysUseKeyEnum = "system_rescue_key"
	RequestMissingFileKeysUseKeyEnumPreviousUserKey         RequestMissingFileKeysUseKeyEnum = "previous_user_key"
	RequestMissingFileKeysUseKeyEnumPreviousRoomRescueKey   RequestMissingFileKeysUseKeyEnum = "previous_room_rescue_key"
	RequestMissingFileKeysUseKeyEnumPreviousSystemRescueKey RequestMissingFileKeysUseKeyEnum = "previous_system_rescue_key"
)

func (e RequestMissingFileKeysUseKeyEnum) ToPointer() *RequestMissingFileKeysUseKeyEnum {
	return &e
}

func (e *RequestMissingFileKeysUseKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "room_rescue_key":
		fallthrough
	case "system_rescue_key":
		fallthrough
	case "previous_user_key":
		fallthrough
	case "previous_room_rescue_key":
		fallthrough
	case "previous_system_rescue_key":
		*e = RequestMissingFileKeysUseKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestMissingFileKeysUseKeyEnum: %v", v)
	}
}

type RequestMissingFileKeysRequest struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// File ID
	FileID *int64 `queryParam:"style=form,explode=true,name=file_id"`
	// Range limit.
	//
	// Maximum 500.
	//
	//  For more results please use paging (`offset` + `limit`).
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Range offset
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Room ID
	RoomID *int64 `queryParam:"style=form,explode=true,name=room_id"`
	// Determines which key should be used (NEW)
	UseKey *RequestMissingFileKeysUseKeyEnum `queryParam:"style=form,explode=true,name=use_key"`
	// User ID
	UserID *int64 `queryParam:"style=form,explode=true,name=user_id"`
}

type RequestMissingFileKeysResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	// OK
	MissingKeysResponse *shared.MissingKeysResponse
	StatusCode          int
	RawResponse         *http.Response
}
