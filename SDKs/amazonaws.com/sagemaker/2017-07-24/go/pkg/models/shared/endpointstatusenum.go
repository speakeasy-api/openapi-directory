// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EndpointStatusEnum string

const (
	EndpointStatusEnumOutOfService   EndpointStatusEnum = "OutOfService"
	EndpointStatusEnumCreating       EndpointStatusEnum = "Creating"
	EndpointStatusEnumUpdating       EndpointStatusEnum = "Updating"
	EndpointStatusEnumSystemUpdating EndpointStatusEnum = "SystemUpdating"
	EndpointStatusEnumRollingBack    EndpointStatusEnum = "RollingBack"
	EndpointStatusEnumInService      EndpointStatusEnum = "InService"
	EndpointStatusEnumDeleting       EndpointStatusEnum = "Deleting"
	EndpointStatusEnumFailed         EndpointStatusEnum = "Failed"
)

func (e EndpointStatusEnum) ToPointer() *EndpointStatusEnum {
	return &e
}

func (e *EndpointStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OutOfService":
		fallthrough
	case "Creating":
		fallthrough
	case "Updating":
		fallthrough
	case "SystemUpdating":
		fallthrough
	case "RollingBack":
		fallthrough
	case "InService":
		fallthrough
	case "Deleting":
		fallthrough
	case "Failed":
		*e = EndpointStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EndpointStatusEnum: %v", v)
	}
}
