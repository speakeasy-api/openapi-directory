/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LandlordAccountingEntryModel } from "./landlordaccountingentrymodel";
import { LandlordAccountingInvoiceModel } from "./landlordaccountinginvoicemodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Landlord Accounting
 */
export class LandlordAccountingModel extends SpeakeasyBase {
  /**
   * Account Balance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountBalance" })
  accountBalance?: number;

  /**
   * Last Payment Made
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastPayment" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastPayment?: Date;

  /**
   * Payment History
   */
  @SpeakeasyMetadata({ elemType: LandlordAccountingEntryModel })
  @Expose({ name: "PaymentHistory" })
  @Type(() => LandlordAccountingEntryModel)
  paymentHistory?: LandlordAccountingEntryModel[];

  /**
   * Statements
   */
  @SpeakeasyMetadata({ elemType: LandlordAccountingInvoiceModel })
  @Expose({ name: "Statements" })
  @Type(() => LandlordAccountingInvoiceModel)
  statements?: LandlordAccountingInvoiceModel[];
}
