/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApplicationComponent - Describes a standalone resource or similarly grouped resources that the application is made up of.
 */
public class ApplicationComponent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComponentName")
    public String componentName;

    public ApplicationComponent withComponentName(String componentName) {
        this.componentName = componentName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComponentRemarks")
    public String componentRemarks;

    public ApplicationComponent withComponentRemarks(String componentRemarks) {
        this.componentRemarks = componentRemarks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DetectedWorkload")
    public java.util.Map<String, java.util.Map<String, String>> detectedWorkload;

    public ApplicationComponent withDetectedWorkload(java.util.Map<String, java.util.Map<String, String>> detectedWorkload) {
        this.detectedWorkload = detectedWorkload;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Monitor")
    public Boolean monitor;

    public ApplicationComponent withMonitor(Boolean monitor) {
        this.monitor = monitor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OsType")
    public OsTypeEnum osType;

    public ApplicationComponent withOsType(OsTypeEnum osType) {
        this.osType = osType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceType")
    public String resourceType;

    public ApplicationComponent withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tier")
    public TierEnum tier;

    public ApplicationComponent withTier(TierEnum tier) {
        this.tier = tier;
        return this;
    }
    
    public ApplicationComponent(){}
}
