/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AdministrativeAction - Describes a specific Amazon FSx administrative action for the current Windows, Lustre, or OpenZFS file system.
 */
public class AdministrativeAction {
    /**
     * &lt;p&gt;Describes the type of administrative action, as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FILE_SYSTEM_UPDATE&lt;/code&gt; - A file system update administrative action initiated from the Amazon FSx console, API (&lt;code&gt;UpdateFileSystem&lt;/code&gt;), or CLI (&lt;code&gt;update-file-system&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;STORAGE_OPTIMIZATION&lt;/code&gt; - After the &lt;code&gt;FILE_SYSTEM_UPDATE&lt;/code&gt; task to increase a file system's storage capacity has been completed successfully, a &lt;code&gt;STORAGE_OPTIMIZATION&lt;/code&gt; task starts. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For Windows and ONTAP, storage optimization is the process of migrating the file system data to newer larger disks.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For Lustre, storage optimization consists of rebalancing the data across the existing and newly added file servers.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can track the storage-optimization progress using the &lt;code&gt;ProgressPercent&lt;/code&gt; property. When &lt;code&gt;STORAGE_OPTIMIZATION&lt;/code&gt; has been completed successfully, the parent &lt;code&gt;FILE_SYSTEM_UPDATE&lt;/code&gt; action status changes to &lt;code&gt;COMPLETED&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-storage-capacity.html"&gt;Managing storage capacity&lt;/a&gt; in the &lt;i&gt;Amazon FSx for Windows File Server User Guide&lt;/i&gt;, &lt;a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/managing-storage-capacity.html"&gt;Managing storage and throughput capacity&lt;/a&gt; in the &lt;i&gt;Amazon FSx for Lustre User Guide&lt;/i&gt;, and &lt;a href="https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/managing-storage-capacity.html"&gt;Managing storage capacity and provisioned IOPS&lt;/a&gt; in the &lt;i&gt;Amazon FSx for NetApp ONTAP User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FILE_SYSTEM_ALIAS_ASSOCIATION&lt;/code&gt; - A file system update to associate a new Domain Name System (DNS) alias with the file system. For more information, see &lt;a href="https://docs.aws.amazon.com/fsx/latest/APIReference/API_AssociateFileSystemAliases.html"&gt; AssociateFileSystemAliases&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FILE_SYSTEM_ALIAS_DISASSOCIATION&lt;/code&gt; - A file system update to disassociate a DNS alias from the file system. For more information, see &lt;a href="https://docs.aws.amazon.com/fsx/latest/APIReference/API_DisassociateFileSystemAliases.html"&gt;DisassociateFileSystemAliases&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;VOLUME_UPDATE&lt;/code&gt; - A volume update to an Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volume initiated from the Amazon FSx console, API (&lt;code&gt;UpdateVolume&lt;/code&gt;), or CLI (&lt;code&gt;update-volume&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;VOLUME_RESTORE&lt;/code&gt; - An Amazon FSx for OpenZFS volume is returned to the state saved by the specified snapshot, initiated from an API (&lt;code&gt;RestoreVolumeFromSnapshot&lt;/code&gt;) or CLI (&lt;code&gt;restore-volume-from-snapshot&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SNAPSHOT_UPDATE&lt;/code&gt; - A snapshot update to an Amazon FSx for OpenZFS volume initiated from the Amazon FSx console, API (&lt;code&gt;UpdateSnapshot&lt;/code&gt;), or CLI (&lt;code&gt;update-snapshot&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RELEASE_NFS_V3_LOCKS&lt;/code&gt; - Tracks the release of Network File System (NFS) V3 locks on an Amazon FSx for OpenZFS file system.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdministrativeActionType")
    public AdministrativeActionTypeEnum administrativeActionType;
    public AdministrativeAction withAdministrativeActionType(AdministrativeActionTypeEnum administrativeActionType) {
        this.administrativeActionType = administrativeActionType;
        return this;
    }
    
    /**
     * Provides information about a failed administrative action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureDetails")
    public AdministrativeActionFailureDetails failureDetails;
    public AdministrativeAction withFailureDetails(AdministrativeActionFailureDetails failureDetails) {
        this.failureDetails = failureDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProgressPercent")
    public Long progressPercent;
    public AdministrativeAction withProgressPercent(Long progressPercent) {
        this.progressPercent = progressPercent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RequestTime")
    public OffsetDateTime requestTime;
    public AdministrativeAction withRequestTime(OffsetDateTime requestTime) {
        this.requestTime = requestTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public StatusEnum status;
    public AdministrativeAction withStatus(StatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetFileSystemValues")
    public FileSystem targetFileSystemValues;
    public AdministrativeAction withTargetFileSystemValues(FileSystem targetFileSystemValues) {
        this.targetFileSystemValues = targetFileSystemValues;
        return this;
    }
    
    /**
     * A snapshot of an Amazon FSx for OpenZFS volume.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetSnapshotValues")
    public Snapshot targetSnapshotValues;
    public AdministrativeAction withTargetSnapshotValues(Snapshot targetSnapshotValues) {
        this.targetSnapshotValues = targetSnapshotValues;
        return this;
    }
    
    /**
     * Describes an Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volume.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetVolumeValues")
    public Volume targetVolumeValues;
    public AdministrativeAction withTargetVolumeValues(Volume targetVolumeValues) {
        this.targetVolumeValues = targetVolumeValues;
        return this;
    }
    
}
