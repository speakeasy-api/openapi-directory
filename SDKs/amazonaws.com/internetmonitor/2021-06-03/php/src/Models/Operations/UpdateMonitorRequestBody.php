<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateMonitorRequestBody
{
    /**
     * A unique, case-sensitive string of up to 64 ASCII characters that you specify to make an idempotent API request. You should not reuse the same client token for other API requests.
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('ClientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * The maximum number of city-network combinations (that is, combinations of a city location and network, such as an ISP) to be monitored for your resources.
     * 
     * @var ?int $maxCityNetworksToMonitor
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaxCityNetworksToMonitor')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxCityNetworksToMonitor = null;
    
    /**
     * <p>The resources to include in a monitor, which you provide as a set of Amazon Resource Names (ARNs).</p> <p>You can add a combination of Amazon Virtual Private Clouds (VPCs) and Amazon CloudFront distributions, or you can add Amazon WorkSpaces directories. You can't add all three types of resources.</p> <note> <p>If you add only VPC resources, at least one VPC must have an Internet Gateway attached to it, to make sure that it has internet connectivity.</p> </note>
     * 
     * @var ?array<string> $resourcesToAdd
     */
	#[\JMS\Serializer\Annotation\SerializedName('ResourcesToAdd')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resourcesToAdd = null;
    
    /**
     * The resources to remove from a monitor, which you provide as a set of Amazon Resource Names (ARNs).
     * 
     * @var ?array<string> $resourcesToRemove
     */
	#[\JMS\Serializer\Annotation\SerializedName('ResourcesToRemove')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resourcesToRemove = null;
    
    /**
     * The status for a monitor. The accepted values for <code>Status</code> with the <code>UpdateMonitor</code> API call are the following: <code>ACTIVE</code> and <code>INACTIVE</code>. The following values are <i>not</i> accepted: <code>PENDING</code>, and <code>ERROR</code>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateMonitorRequestBodyStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateMonitorRequestBodyStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateMonitorRequestBodyStatusEnum $status = null;
    
	public function __construct()
	{
		$this->clientToken = null;
		$this->maxCityNetworksToMonitor = null;
		$this->resourcesToAdd = null;
		$this->resourcesToRemove = null;
		$this->status = null;
	}
}
