/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TemplateContents - Files that make up the template contents of a template type.
 */
public class TemplateContents {
    /**
     * Import files referenced by the main template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imports")
    public ImportFile[] imports;

    public TemplateContents withImports(ImportFile[] imports) {
        this.imports = imports;
        return this;
    }
    
    /**
     * Which interpreter (python or jinja) should be used during expansion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interpreter")
    public TemplateContentsInterpreterEnum interpreter;

    public TemplateContents withInterpreter(TemplateContentsInterpreterEnum interpreter) {
        this.interpreter = interpreter;
        return this;
    }
    
    /**
     * The filename of the mainTemplate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainTemplate")
    public String mainTemplate;

    public TemplateContents withMainTemplate(String mainTemplate) {
        this.mainTemplate = mainTemplate;
        return this;
    }
    
    /**
     * The contents of the template schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schema")
    public String schema;

    public TemplateContents withSchema(String schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * The contents of the main template file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    public String template;

    public TemplateContents withTemplate(String template) {
        this.template = template;
        return this;
    }
    
    public TemplateContents(){}
}
