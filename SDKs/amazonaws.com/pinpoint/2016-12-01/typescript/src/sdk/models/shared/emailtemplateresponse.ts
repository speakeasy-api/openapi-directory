/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TemplateTypeEnum } from "./templatetypeenum";
import { Expose } from "class-transformer";

/**
 * Provides information about the content and settings for a message template that can be used in messages that are sent through the email channel.
 */
export class EmailTemplateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  creationDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultSubstitutions" })
  defaultSubstitutions?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HtmlPart" })
  htmlPart?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  lastModifiedDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecommenderId" })
  recommenderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateDescription" })
  templateDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateName" })
  templateName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateType" })
  templateType: TemplateTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TextPart" })
  textPart?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
