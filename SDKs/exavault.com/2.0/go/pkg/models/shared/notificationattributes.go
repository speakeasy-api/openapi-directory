// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// NotificationAttributesActionEnum - Action that triggers notification.
type NotificationAttributesActionEnum string

const (
	NotificationAttributesActionEnumUpload   NotificationAttributesActionEnum = "upload"
	NotificationAttributesActionEnumDownload NotificationAttributesActionEnum = "download"
	NotificationAttributesActionEnumDelete   NotificationAttributesActionEnum = "delete"
	NotificationAttributesActionEnumAll      NotificationAttributesActionEnum = "all"
)

func (e *NotificationAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "upload":
		fallthrough
	case "download":
		fallthrough
	case "delete":
		fallthrough
	case "all":
		*e = NotificationAttributesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationAttributesActionEnum: %s", s)
	}
}

// NotificationAttributesSendEmailEnum - Whether or not an email will send when the notification is triggered.
type NotificationAttributesSendEmailEnum string

const (
	NotificationAttributesSendEmailEnumTrue  NotificationAttributesSendEmailEnum = "true"
	NotificationAttributesSendEmailEnumFalse NotificationAttributesSendEmailEnum = "false"
)

func (e *NotificationAttributesSendEmailEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		fallthrough
	case "false":
		*e = NotificationAttributesSendEmailEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationAttributesSendEmailEnum: %s", s)
	}
}

// NotificationAttributesTypeEnum - Type of the resource the notification is attached to.
type NotificationAttributesTypeEnum string

const (
	NotificationAttributesTypeEnumFile         NotificationAttributesTypeEnum = "file"
	NotificationAttributesTypeEnumFolder       NotificationAttributesTypeEnum = "folder"
	NotificationAttributesTypeEnumSharedFolder NotificationAttributesTypeEnum = "shared_folder"
	NotificationAttributesTypeEnumSendReceipt  NotificationAttributesTypeEnum = "send_receipt"
	NotificationAttributesTypeEnumShareReceipt NotificationAttributesTypeEnum = "share_receipt"
	NotificationAttributesTypeEnumFileDrop     NotificationAttributesTypeEnum = "file_drop"
)

func (e *NotificationAttributesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "file":
		fallthrough
	case "folder":
		fallthrough
	case "shared_folder":
		fallthrough
	case "send_receipt":
		fallthrough
	case "share_receipt":
		fallthrough
	case "file_drop":
		*e = NotificationAttributesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationAttributesTypeEnum: %s", s)
	}
}

// NotificationAttributes - Attributes for the notification including the path, recipients, and share data.
type NotificationAttributes struct {
	// Action that triggers notification.
	Action *NotificationAttributesActionEnum `json:"action,omitempty"`
	// Timestamp of notifiction creation.
	Created *time.Time `json:"created,omitempty"`
	// Custom message that will be sent to the notification recipients.
	Message *string `json:"message,omitempty"`
	// Timestamp of notification modification.
	Modified *time.Time `json:"modified,omitempty"`
	// Name of the item that the notification is set on.
	Name *string `json:"name,omitempty"`
	// Path to the item that the notification is set on.
	Path *string `json:"path,omitempty"`
	// Human readable description of the notification.
	ReadableDescription *string `json:"readableDescription,omitempty"`
	// Human readable description of the notification without item path.
	ReadableDescriptionWithoutPath *string `json:"readableDescriptionWithoutPath,omitempty"`
	// Notification recipients.
	Recipients []NotificationRecipient `json:"recipients,omitempty"`
	// Whether or not an email will send when the notification is triggered.
	SendEmail *NotificationAttributesSendEmailEnum `json:"sendEmail,omitempty"`
	// ID of the share that the notification belogns to.
	ShareID *string `json:"shareId,omitempty"`
	// Type of the resource the notification is attached to.
	Type *NotificationAttributesTypeEnum `json:"type,omitempty"`
	// ID of the user that the notification belongs to.
	UserID *string `json:"userId,omitempty"`
	// Detail on which users can trigger the notification.
	Usernames []string `json:"usernames,omitempty"`
}
