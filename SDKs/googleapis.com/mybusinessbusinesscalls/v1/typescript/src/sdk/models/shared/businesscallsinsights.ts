/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregateMetrics } from "./aggregatemetrics";
import { Expose, Type } from "class-transformer";

/**
 * The metric for which the value applies.
 */
export enum BusinessCallsInsightsMetricTypeEnum {
  MetricTypeUnspecified = "METRIC_TYPE_UNSPECIFIED",
  AggregateCount = "AGGREGATE_COUNT",
}

/**
 * Insights for calls made to a location.
 */
export class BusinessCallsInsights extends SpeakeasyBase {
  /**
   * Metrics aggregated over the input time range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregateMetrics" })
  @Type(() => AggregateMetrics)
  aggregateMetrics?: AggregateMetrics;

  /**
   * The metric for which the value applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metricType" })
  metricType?: BusinessCallsInsightsMetricTypeEnum;

  /**
   * Required. The resource name of the calls insights. Format: locations/{location}/businesscallsinsights
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
