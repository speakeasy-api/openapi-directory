/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetBatchesBatchItemsBatchItem {
    /**
     * The amount of funds to send. In cent or pence
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Long amount;

    public GetBatchesBatchItemsBatchItem withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The amount of the transfer after fees and taxes. in pence or cent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountAfterCharges")
    public Long amountAfterCharges;

    public GetBatchesBatchItemsBatchItem withAmountAfterCharges(Long amountAfterCharges) {
        this.amountAfterCharges = amountAfterCharges;
        return this;
    }
    
    /**
     * A UUID for this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batchItemUuid")
    public String batchItemUuid;

    public GetBatchesBatchItemsBatchItem withBatchItemUuid(String batchItemUuid) {
        this.batchItemUuid = batchItemUuid;
        return this;
    }
    
    /**
     * The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dateCreated")
    public OffsetDateTime dateCreated;

    public GetBatchesBatchItemsBatchItem withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The fee charged by fire.com for the payment. In pence or cent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feeAmount")
    public Long feeAmount;

    public GetBatchesBatchItemsBatchItem withFeeAmount(Long feeAmount) {
        this.feeAmount = feeAmount;
        return this;
    }
    
    /**
     * The Fire account ID of the source account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icanFrom")
    public Long icanFrom;

    public GetBatchesBatchItemsBatchItem withIcanFrom(Long icanFrom) {
        this.icanFrom = icanFrom;
        return this;
    }
    
    /**
     * The Fire account ID for the fire.com account the funds are sent to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icanTo")
    public Long icanTo;

    public GetBatchesBatchItemsBatchItem withIcanTo(Long icanTo) {
        this.icanTo = icanTo;
        return this;
    }
    
    /**
     * The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdated")
    public OffsetDateTime lastUpdated;

    public GetBatchesBatchItemsBatchItem withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    /**
     * The reference on the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ref")
    public String ref;

    public GetBatchesBatchItemsBatchItem withRef(String ref) {
        this.ref = ref;
        return this;
    }
    
    /**
     * The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refId")
    public Long refId;

    public GetBatchesBatchItemsBatchItem withRefId(Long refId) {
        this.refId = refId;
        return this;
    }
    
    /**
     * The outcome of the attempted transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public GetBatchesBatchItemsBatchItemResult result;

    public GetBatchesBatchItemsBatchItem withResult(GetBatchesBatchItemsBatchItemResult result) {
        this.result = result;
        return this;
    }
    
    /**
     * status of the batch if internal trasnfer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GetBatchesBatchItemsBatchItemStatusEnum status;

    public GetBatchesBatchItemsBatchItem withStatus(GetBatchesBatchItemsBatchItemStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public Long taxAmount;

    public GetBatchesBatchItemsBatchItem withTaxAmount(Long taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    public GetBatchesBatchItemsBatchItem(){}
}
