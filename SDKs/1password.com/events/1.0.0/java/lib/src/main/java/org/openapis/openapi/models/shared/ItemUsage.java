/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ItemUsage - A single item usage object
 */
public class ItemUsage {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public Object action;
    public ItemUsage withAction(Object action) {
        this.action = action;
        return this;
    }
    
    /**
     * Metadata gathered about the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client")
    public Client client;
    public ItemUsage withClient(Client client) {
        this.client = client;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item_uuid")
    public String itemUuid;
    public ItemUsage withItemUuid(String itemUuid) {
        this.itemUuid = itemUuid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;
    public ItemUsage withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("used_version")
    public Long usedVersion;
    public ItemUsage withUsedVersion(Long usedVersion) {
        this.usedVersion = usedVersion;
        return this;
    }
    
    /**
     * User object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;
    public ItemUsage withUser(User user) {
        this.user = user;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;
    public ItemUsage withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vault_uuid")
    public String vaultUuid;
    public ItemUsage withVaultUuid(String vaultUuid) {
        this.vaultUuid = vaultUuid;
        return this;
    }
    
}
