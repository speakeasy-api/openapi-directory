// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ExportTableToPointInTimeXAmzTargetEnum
type ExportTableToPointInTimeXAmzTargetEnum string

const (
	ExportTableToPointInTimeXAmzTargetEnumDynamoDb20120810ExportTableToPointInTime ExportTableToPointInTimeXAmzTargetEnum = "DynamoDB_20120810.ExportTableToPointInTime"
)

func (e ExportTableToPointInTimeXAmzTargetEnum) ToPointer() *ExportTableToPointInTimeXAmzTargetEnum {
	return &e
}

func (e *ExportTableToPointInTimeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20120810.ExportTableToPointInTime":
		*e = ExportTableToPointInTimeXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportTableToPointInTimeXAmzTargetEnum: %v", v)
	}
}

type ExportTableToPointInTimeRequest struct {
	ExportTableToPointInTimeInput shared.ExportTableToPointInTimeInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    ExportTableToPointInTimeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ExportTableToPointInTimeResponse struct {
	ContentType string
	// ExportConflictException
	ExportConflictException interface{}
	// Success
	ExportTableToPointInTimeOutput *shared.ExportTableToPointInTimeOutput
	// InternalServerError
	InternalServerError interface{}
	// InvalidExportTimeException
	InvalidExportTimeException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// PointInTimeRecoveryUnavailableException
	PointInTimeRecoveryUnavailableException interface{}
	StatusCode                              int
	RawResponse                             *http.Response
	// TableNotFoundException
	TableNotFoundException interface{}
}
