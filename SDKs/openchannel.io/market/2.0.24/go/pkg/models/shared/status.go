// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StatusReasonEnum - Text describing the reason for the current status
type StatusReasonEnum string

const (
	StatusReasonEnumProfanity StatusReasonEnum = "profanity"
	StatusReasonEnumSpam      StatusReasonEnum = "spam"
)

func (e *StatusReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "profanity":
		fallthrough
	case "spam":
		*e = StatusReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusReasonEnum: %s", s)
	}
}

// StatusValueEnum - The current status value
type StatusValueEnum string

const (
	StatusValueEnumPending  StatusValueEnum = "pending"
	StatusValueEnumSpam     StatusValueEnum = "spam"
	StatusValueEnumFlagged  StatusValueEnum = "flagged"
	StatusValueEnumApproved StatusValueEnum = "approved"
)

func (e *StatusValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "spam":
		fallthrough
	case "flagged":
		fallthrough
	case "approved":
		*e = StatusValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusValueEnum: %s", s)
	}
}

// Status - The current status of this review
type Status struct {
	// A list of profanity found in this review
	Profanity []Profanity
	// Text describing the reason for the current status
	Reason StatusReasonEnum
	// The current status value
	Value StatusValueEnum
}
