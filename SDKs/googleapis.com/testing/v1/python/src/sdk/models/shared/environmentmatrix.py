"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import androiddevicelist as shared_androiddevicelist
from ..shared import androidmatrix as shared_androidmatrix
from ..shared import iosdevicelist as shared_iosdevicelist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnvironmentMatrix:
    r"""The matrix of environments in which the test is to be executed."""
    
    android_device_list: Optional[shared_androiddevicelist.AndroidDeviceList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidDeviceList'), 'exclude': lambda f: f is None }})
    r"""A list of Android device configurations in which the test is to be executed."""  
    android_matrix: Optional[shared_androidmatrix.AndroidMatrix] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidMatrix'), 'exclude': lambda f: f is None }})
    r"""A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices. Only supported permutations will be instantiated. Invalid permutations (e.g., incompatible models/versions) are ignored."""  
    ios_device_list: Optional[shared_iosdevicelist.IosDeviceList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosDeviceList'), 'exclude': lambda f: f is None }})
    r"""A list of iOS device configurations in which the test is to be executed."""  
    