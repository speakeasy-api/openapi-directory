"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HeavyEquipmentsBuild:
    r"""Describes the Heavy Equipments specification"""
    
    body_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body_type'), 'exclude': lambda f: f is None }})
    r"""Body type of the heavy equipment"""  
    category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""Heavy equipment category"""  
    condition: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""Heavy equipment condition"""  
    drivetrain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drivetrain'), 'exclude': lambda f: f is None }})
    r"""Drivetrain of the heavy equipment"""  
    engine: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine'), 'exclude': lambda f: f is None }})
    r"""Engine of the heavy equipment"""  
    fuel_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fuel_type'), 'exclude': lambda f: f is None }})
    r"""Fuel type of the heavy equipment"""  
    make: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('make'), 'exclude': lambda f: f is None }})
    r"""Heavy equipment Make"""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""Heavy equipment model"""  
    sub_category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sub_category'), 'exclude': lambda f: f is None }})
    r"""Heavy equipment sub_category"""  
    transmission: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transmission'), 'exclude': lambda f: f is None }})
    r"""Transmission of the heavy equipment"""  
    trim: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim'), 'exclude': lambda f: f is None }})
    r"""Trim of the heavy equipment"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})
    r"""Year of the heavy equipment"""  
    