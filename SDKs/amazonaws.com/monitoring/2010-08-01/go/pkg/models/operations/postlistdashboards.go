// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListDashboardsActionEnum
type POSTListDashboardsActionEnum string

const (
	POSTListDashboardsActionEnumListDashboards POSTListDashboardsActionEnum = "ListDashboards"
)

func (e POSTListDashboardsActionEnum) ToPointer() *POSTListDashboardsActionEnum {
	return &e
}

func (e *POSTListDashboardsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListDashboards":
		*e = POSTListDashboardsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListDashboardsActionEnum: %v", v)
	}
}

// POSTListDashboardsVersionEnum
type POSTListDashboardsVersionEnum string

const (
	POSTListDashboardsVersionEnumTwoThousandAndTen0801 POSTListDashboardsVersionEnum = "2010-08-01"
)

func (e POSTListDashboardsVersionEnum) ToPointer() *POSTListDashboardsVersionEnum {
	return &e
}

func (e *POSTListDashboardsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = POSTListDashboardsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListDashboardsVersionEnum: %v", v)
	}
}

type POSTListDashboardsRequest struct {
	Action POSTListDashboardsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	NextToken         *string                       `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTListDashboardsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListDashboardsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
