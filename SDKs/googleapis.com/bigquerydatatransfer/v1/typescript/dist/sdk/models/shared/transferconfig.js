"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferConfig = exports.TransferConfigStateEnum = exports.TransferConfigInput = void 0;
var utils_1 = require("../../../internal/utils");
var emailpreferences_1 = require("./emailpreferences");
var scheduleoptions_1 = require("./scheduleoptions");
var userinfo_1 = require("./userinfo");
var class_transformer_1 = require("class-transformer");
/**
 * Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.
 */
var TransferConfigInput = /** @class */ (function (_super) {
    __extends(TransferConfigInput, _super);
    function TransferConfigInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataRefreshWindowDays" }),
        __metadata("design:type", Number)
    ], TransferConfigInput.prototype, "dataRefreshWindowDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataSourceId" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "dataSourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destinationDatasetId" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "destinationDatasetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disabled" }),
        __metadata("design:type", Boolean)
    ], TransferConfigInput.prototype, "disabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailPreferences" }),
        (0, class_transformer_1.Type)(function () { return emailpreferences_1.EmailPreferences; }),
        __metadata("design:type", emailpreferences_1.EmailPreferences)
    ], TransferConfigInput.prototype, "emailPreferences", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notificationPubsubTopic" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "notificationPubsubTopic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ownerInfo" }),
        (0, class_transformer_1.Type)(function () { return userinfo_1.UserInfo; }),
        __metadata("design:type", userinfo_1.UserInfo)
    ], TransferConfigInput.prototype, "ownerInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "params" }),
        __metadata("design:type", Object)
    ], TransferConfigInput.prototype, "params", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "schedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scheduleOptions" }),
        (0, class_transformer_1.Type)(function () { return scheduleoptions_1.ScheduleOptions; }),
        __metadata("design:type", scheduleoptions_1.ScheduleOptions)
    ], TransferConfigInput.prototype, "scheduleOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userId" }),
        __metadata("design:type", String)
    ], TransferConfigInput.prototype, "userId", void 0);
    return TransferConfigInput;
}(utils_1.SpeakeasyBase));
exports.TransferConfigInput = TransferConfigInput;
/**
 * Output only. State of the most recently updated transfer run.
 */
var TransferConfigStateEnum;
(function (TransferConfigStateEnum) {
    TransferConfigStateEnum["TransferStateUnspecified"] = "TRANSFER_STATE_UNSPECIFIED";
    TransferConfigStateEnum["Pending"] = "PENDING";
    TransferConfigStateEnum["Running"] = "RUNNING";
    TransferConfigStateEnum["Succeeded"] = "SUCCEEDED";
    TransferConfigStateEnum["Failed"] = "FAILED";
    TransferConfigStateEnum["Cancelled"] = "CANCELLED";
})(TransferConfigStateEnum = exports.TransferConfigStateEnum || (exports.TransferConfigStateEnum = {}));
/**
 * Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.
 */
var TransferConfig = /** @class */ (function (_super) {
    __extends(TransferConfig, _super);
    function TransferConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataRefreshWindowDays" }),
        __metadata("design:type", Number)
    ], TransferConfig.prototype, "dataRefreshWindowDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataSourceId" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "dataSourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datasetRegion" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "datasetRegion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destinationDatasetId" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "destinationDatasetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disabled" }),
        __metadata("design:type", Boolean)
    ], TransferConfig.prototype, "disabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailPreferences" }),
        (0, class_transformer_1.Type)(function () { return emailpreferences_1.EmailPreferences; }),
        __metadata("design:type", emailpreferences_1.EmailPreferences)
    ], TransferConfig.prototype, "emailPreferences", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nextRunTime" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "nextRunTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notificationPubsubTopic" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "notificationPubsubTopic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ownerInfo" }),
        (0, class_transformer_1.Type)(function () { return userinfo_1.UserInfo; }),
        __metadata("design:type", userinfo_1.UserInfo)
    ], TransferConfig.prototype, "ownerInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "params" }),
        __metadata("design:type", Object)
    ], TransferConfig.prototype, "params", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "schedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scheduleOptions" }),
        (0, class_transformer_1.Type)(function () { return scheduleoptions_1.ScheduleOptions; }),
        __metadata("design:type", scheduleoptions_1.ScheduleOptions)
    ], TransferConfig.prototype, "scheduleOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updateTime" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "updateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userId" }),
        __metadata("design:type", String)
    ], TransferConfig.prototype, "userId", void 0);
    return TransferConfig;
}(utils_1.SpeakeasyBase));
exports.TransferConfig = TransferConfig;
