/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class GetEc2RecommendationProjectedMetricsResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public GetEc2RecommendationProjectedMetricsResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    
    public String contentType;

    public GetEc2RecommendationProjectedMetricsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetEc2RecommendationProjectedMetricsResponse getEc2RecommendationProjectedMetricsResponse;

    public GetEc2RecommendationProjectedMetricsResponse withGetEc2RecommendationProjectedMetricsResponse(org.openapis.openapi.models.shared.GetEc2RecommendationProjectedMetricsResponse getEc2RecommendationProjectedMetricsResponse) {
        this.getEc2RecommendationProjectedMetricsResponse = getEc2RecommendationProjectedMetricsResponse;
        return this;
    }
    
    /**
     * InternalServerException
     */
    
    public Object internalServerException;

    public GetEc2RecommendationProjectedMetricsResponse withInternalServerException(Object internalServerException) {
        this.internalServerException = internalServerException;
        return this;
    }
    
    /**
     * InvalidParameterValueException
     */
    
    public Object invalidParameterValueException;

    public GetEc2RecommendationProjectedMetricsResponse withInvalidParameterValueException(Object invalidParameterValueException) {
        this.invalidParameterValueException = invalidParameterValueException;
        return this;
    }
    
    /**
     * MissingAuthenticationToken
     */
    
    public Object missingAuthenticationToken;

    public GetEc2RecommendationProjectedMetricsResponse withMissingAuthenticationToken(Object missingAuthenticationToken) {
        this.missingAuthenticationToken = missingAuthenticationToken;
        return this;
    }
    
    /**
     * OptInRequiredException
     */
    
    public Object optInRequiredException;

    public GetEc2RecommendationProjectedMetricsResponse withOptInRequiredException(Object optInRequiredException) {
        this.optInRequiredException = optInRequiredException;
        return this;
    }
    
    
    public Integer statusCode;

    public GetEc2RecommendationProjectedMetricsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public GetEc2RecommendationProjectedMetricsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public GetEc2RecommendationProjectedMetricsResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * ServiceUnavailableException
     */
    
    public Object serviceUnavailableException;

    public GetEc2RecommendationProjectedMetricsResponse withServiceUnavailableException(Object serviceUnavailableException) {
        this.serviceUnavailableException = serviceUnavailableException;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;

    public GetEc2RecommendationProjectedMetricsResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
    public GetEc2RecommendationProjectedMetricsResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
