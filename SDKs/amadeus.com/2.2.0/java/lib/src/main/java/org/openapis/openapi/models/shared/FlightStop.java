/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FlightStop - details of stops for direct or change of gauge flights
 */
public class FlightStop {
    /**
     * arrival at the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("arrivalAt")
    public OffsetDateTime arrivalAt;
    public FlightStop withArrivalAt(OffsetDateTime arrivalAt) {
        this.arrivalAt = arrivalAt;
        return this;
    }
    
    /**
     * departure from the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("departureAt")
    public OffsetDateTime departureAt;
    public FlightStop withDepartureAt(OffsetDateTime departureAt) {
        this.departureAt = departureAt;
        return this;
    }
    
    /**
     * stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;
    public FlightStop withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iataCode")
    public String iataCode;
    public FlightStop withIataCode(String iataCode) {
        this.iataCode = iataCode;
        return this;
    }
    
}
