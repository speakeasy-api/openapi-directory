/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Gets the suite definition configuration.
 */
export class UpdateSuiteDefinitionRequestBodySuiteDefinitionConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "devicePermissionRoleArn" })
  devicePermissionRoleArn?: string;

  @SpeakeasyMetadata({ elemType: shared.DeviceUnderTest })
  @Expose({ name: "devices" })
  @Type(() => shared.DeviceUnderTest)
  devices?: shared.DeviceUnderTest[];

  @SpeakeasyMetadata()
  @Expose({ name: "intendedForQualification" })
  intendedForQualification?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isLongDurationTest" })
  isLongDurationTest?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: shared.ProtocolEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "rootGroup" })
  rootGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "suiteDefinitionName" })
  suiteDefinitionName?: string;
}

export class UpdateSuiteDefinitionRequestBody extends SpeakeasyBase {
  /**
   * Gets the suite definition configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suiteDefinitionConfiguration" })
  @Type(() => UpdateSuiteDefinitionRequestBodySuiteDefinitionConfiguration)
  suiteDefinitionConfiguration: UpdateSuiteDefinitionRequestBodySuiteDefinitionConfiguration;
}

export class UpdateSuiteDefinitionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateSuiteDefinitionRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * Suite definition ID of the test suite to be updated.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=suiteDefinitionId",
  })
  suiteDefinitionId: string;
}

export class UpdateSuiteDefinitionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateSuiteDefinitionResponse?: shared.UpdateSuiteDefinitionResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
