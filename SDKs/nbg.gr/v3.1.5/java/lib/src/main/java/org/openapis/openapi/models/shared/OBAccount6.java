/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * OBAccount6 - Unambiguous identification of the account to which credit and debit entries are made.
 */
public class OBAccount6 {
    /**
     * Provides the details to identify an account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Account")
    public OBCashAccount5[] account;
    public OBAccount6 withAccount(OBCashAccount5[] account) {
        this.account = account;
        return this;
    }
    
    /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     */
    @JsonProperty("AccountId")
    public String accountId;
    public OBAccount6 withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonProperty("AccountSubType")
    public OBExternalAccountSubType1CodeEnum accountSubType;
    public OBAccount6 withAccountSubType(OBExternalAccountSubType1CodeEnum accountSubType) {
        this.accountSubType = accountSubType;
        return this;
    }
    
    @JsonProperty("AccountType")
    public OBExternalAccountType1CodeEnum accountType;
    public OBAccount6 withAccountType(OBExternalAccountType1CodeEnum accountType) {
        this.accountType = accountType;
        return this;
    }
    
    /**
     * Identification of the currency in which the account is held.  Usage: Currency should only be used in case one and the same account number covers several currencies and the initiating party needs to identify which currency needs to be used for settlement on the account.
     */
    @JsonProperty("Currency")
    public String currency;
    public OBAccount6 withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Specifies the description of the account type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public OBAccount6 withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Nickname")
    public String nickname;
    public OBAccount6 withNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }
    
    /**
     * Date on which the account and related basic services are effectively operational for the account owner.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("OpeningDate")
    public OffsetDateTime openingDate;
    public OBAccount6 withOpeningDate(OffsetDateTime openingDate) {
        this.openingDate = openingDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Servicer")
    public OBBranchAndFinancialInstitutionIdentification5 servicer;
    public OBAccount6 withServicer(OBBranchAndFinancialInstitutionIdentification5 servicer) {
        this.servicer = servicer;
        return this;
    }
    
}
