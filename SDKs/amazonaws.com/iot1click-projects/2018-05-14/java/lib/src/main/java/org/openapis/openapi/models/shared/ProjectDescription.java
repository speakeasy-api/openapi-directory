/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProjectDescription - An object providing detailed information for a particular project associated with an AWS account and region.
 */
public class ProjectDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public ProjectDescription withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;

    public ProjectDescription withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ProjectDescription withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placementTemplate")
    public PlacementTemplate placementTemplate;

    public ProjectDescription withPlacementTemplate(PlacementTemplate placementTemplate) {
        this.placementTemplate = placementTemplate;
        return this;
    }
    
    @JsonProperty("projectName")
    public String projectName;

    public ProjectDescription withProjectName(String projectName) {
        this.projectName = projectName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public ProjectDescription withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedDate")
    public OffsetDateTime updatedDate;

    public ProjectDescription withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
    public ProjectDescription(@JsonProperty("createdDate") OffsetDateTime createdDate, @JsonProperty("projectName") String projectName, @JsonProperty("updatedDate") OffsetDateTime updatedDate) {
        this.createdDate = createdDate;
        this.projectName = projectName;
        this.updatedDate = updatedDate;
  }
}
