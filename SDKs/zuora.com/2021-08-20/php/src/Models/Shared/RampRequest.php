<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RampRequest - Container of the ramp definitions. It is used to create, update, or remove the ramp definition for the new subscription.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RampRequest
{
    /**
     * Container for the rate plan charges that are considered as part of the ramp deal.
     * 
     * 
     * * If this field is not specified, all the one-time and recurring regular charges of the new subscription are automatically considered as part of the ramp deal.
     * * If this field is specified, either 'chargeNumber' or 'uniqueToken' must be specified.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RampChargeRequest> $charges
     */
	#[\JMS\Serializer\Annotation\SerializedName('charges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RampChargeRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $charges = null;
    
    /**
     * Whether to remove the ramp definition from the new subscription. If you want to remove the ramp definition, this field is the only required field for the `ramp` object.  
     * 
     * 
     * 
     * @var ?bool $delete
     */
	#[\JMS\Serializer\Annotation\SerializedName('delete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $delete = null;
    
    /**
     * The short description of the ramp.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Container for the intervals that the ramp is split into in its timeline. 
     * 
     * 
     * It is required when you want to create or update the ramp definition. The ramp intervals cannot have any overlap or gap between each other.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RampIntervalRequest> $intervals
     */
	#[\JMS\Serializer\Annotation\SerializedName('intervals')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RampIntervalRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $intervals = null;
    
    /**
     * The name of the ramp.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->charges = null;
		$this->delete = null;
		$this->description = null;
		$this->intervals = null;
		$this->name = null;
	}
}
