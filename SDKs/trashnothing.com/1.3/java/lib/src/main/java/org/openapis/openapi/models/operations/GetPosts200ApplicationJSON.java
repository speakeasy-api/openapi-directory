/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetPosts200ApplicationJSON - The posts and paging data.
 */
public class GetPosts200ApplicationJSON {
    /**
     * The index of the last post being returned (an integer between start_index and num_posts).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_index")
    public Long endIndex;
    public GetPosts200ApplicationJSON withEndIndex(Long endIndex) {
        this.endIndex = endIndex;
        return this;
    }
    
    /**
     * The IDs of the groups that the posts were retrieved from (will be null when no group IDs were used). These IDs may be a subset of the requested group IDs when a request includes group IDs for groups that are not open archives and that the current user is not a member of.  If the open_archive_groups source is used, these IDs may include the IDs of open archive groups that weren't present in the group_ids parameter of the request.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group_ids")
    public String[] groupIds;
    public GetPosts200ApplicationJSON withGroupIds(String[] groupIds) {
        this.groupIds = groupIds;
        return this;
    }
    
    /**
     * The UTC date and time when the current user last viewed the newest posts on the All Posts page (may be null). &lt;br /&gt;&lt;br /&gt; NOTE: For this to be accurate, clients must update the last_listings_view property of the current user every time the user is shown the newest posts on the All Posts page. &lt;br /&gt;&lt;br /&gt; NOTE: For requests using an api key instead of oauth, this field is always null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_listings_view")
    public OffsetDateTime lastListingsView;
    public GetPosts200ApplicationJSON withLastListingsView(OffsetDateTime lastListingsView) {
        this.lastListingsView = lastListingsView;
        return this;
    }
    
    /**
     * The total number of pages available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_pages")
    public Long numPages;
    public GetPosts200ApplicationJSON withNumPages(Long numPages) {
        this.numPages = numPages;
        return this;
    }
    
    /**
     * The total number of posts available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_posts")
    public Long numPosts;
    public GetPosts200ApplicationJSON withNumPosts(Long numPosts) {
        this.numPosts = numPosts;
        return this;
    }
    
    /**
     * The page number of the posts being returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;
    public GetPosts200ApplicationJSON withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of posts being returned per page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per_page")
    public Long perPage;
    public GetPosts200ApplicationJSON withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("posts")
    public org.openapis.openapi.models.shared.Post[] posts;
    public GetPosts200ApplicationJSON withPosts(org.openapis.openapi.models.shared.Post[] posts) {
        this.posts = posts;
        return this;
    }
    
    /**
     * The index of the first post being returned (an integer between 1 and num_posts).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_index")
    public Long startIndex;
    public GetPosts200ApplicationJSON withStartIndex(Long startIndex) {
        this.startIndex = startIndex;
        return this;
    }
    
}
