// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectorCapabilityEnum string

const (
	ConnectorCapabilityEnumVsphere          ConnectorCapabilityEnum = "VSPHERE"
	ConnectorCapabilityEnumScvmm            ConnectorCapabilityEnum = "SCVMM"
	ConnectorCapabilityEnumHypervManager    ConnectorCapabilityEnum = "HYPERV-MANAGER"
	ConnectorCapabilityEnumSnapshotBatching ConnectorCapabilityEnum = "SNAPSHOT_BATCHING"
	ConnectorCapabilityEnumSmsOptimized     ConnectorCapabilityEnum = "SMS_OPTIMIZED"
)

func (e ConnectorCapabilityEnum) ToPointer() *ConnectorCapabilityEnum {
	return &e
}

func (e *ConnectorCapabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VSPHERE":
		fallthrough
	case "SCVMM":
		fallthrough
	case "HYPERV-MANAGER":
		fallthrough
	case "SNAPSHOT_BATCHING":
		fallthrough
	case "SMS_OPTIMIZED":
		*e = ConnectorCapabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectorCapabilityEnum: %v", v)
	}
}
