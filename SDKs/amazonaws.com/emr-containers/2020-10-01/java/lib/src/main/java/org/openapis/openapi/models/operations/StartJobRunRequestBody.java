/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartJobRunRequestBody {
    /**
     * The client idempotency token of the job run request. 
     */
    @JsonProperty("clientToken")
    public String clientToken;
    public StartJobRunRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * A configuration specification to be used to override existing configurations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configurationOverrides")
    public StartJobRunRequestBodyConfigurationOverrides configurationOverrides;
    public StartJobRunRequestBody withConfigurationOverrides(StartJobRunRequestBodyConfigurationOverrides configurationOverrides) {
        this.configurationOverrides = configurationOverrides;
        return this;
    }
    
    /**
     * The execution role ARN for the job run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionRoleArn")
    public String executionRoleArn;
    public StartJobRunRequestBody withExecutionRoleArn(String executionRoleArn) {
        this.executionRoleArn = executionRoleArn;
        return this;
    }
    
    /**
     * Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobDriver")
    public StartJobRunRequestBodyJobDriver jobDriver;
    public StartJobRunRequestBody withJobDriver(StartJobRunRequestBodyJobDriver jobDriver) {
        this.jobDriver = jobDriver;
        return this;
    }
    
    /**
     * The job template ID to be used to start the job run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobTemplateId")
    public String jobTemplateId;
    public StartJobRunRequestBody withJobTemplateId(String jobTemplateId) {
        this.jobTemplateId = jobTemplateId;
        return this;
    }
    
    /**
     * The values of job template parameters to start a job run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobTemplateParameters")
    public java.util.Map<String, String> jobTemplateParameters;
    public StartJobRunRequestBody withJobTemplateParameters(java.util.Map<String, String> jobTemplateParameters) {
        this.jobTemplateParameters = jobTemplateParameters;
        return this;
    }
    
    /**
     * The name of the job run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public StartJobRunRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Amazon EMR release version to use for the job run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releaseLabel")
    public String releaseLabel;
    public StartJobRunRequestBody withReleaseLabel(String releaseLabel) {
        this.releaseLabel = releaseLabel;
        return this;
    }
    
    /**
     * The configuration of the retry policy that the job runs on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryPolicyConfiguration")
    public StartJobRunRequestBodyRetryPolicyConfiguration retryPolicyConfiguration;
    public StartJobRunRequestBody withRetryPolicyConfiguration(StartJobRunRequestBodyRetryPolicyConfiguration retryPolicyConfiguration) {
        this.retryPolicyConfiguration = retryPolicyConfiguration;
        return this;
    }
    
    /**
     * The tags assigned to job runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public StartJobRunRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
