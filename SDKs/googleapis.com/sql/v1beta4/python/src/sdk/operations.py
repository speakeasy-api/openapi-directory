"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class Operations:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def sql_operations_get(self, request: operations.SQLOperationsGetRequest, security: operations.SQLOperationsGetSecurity) -> operations.SQLOperationsGetResponse:
        r"""Retrieves an instance operation that has been performed on an instance."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.SQLOperationsGetRequest, base_url, '/sql/v1beta4/projects/{project}/operations/{operation}', request)
        
        query_params = utils.get_query_params(operations.SQLOperationsGetRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.SQLOperationsGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Operation])
                res.operation = out

        return res

    def sql_operations_list(self, request: operations.SQLOperationsListRequest, security: operations.SQLOperationsListSecurity) -> operations.SQLOperationsListResponse:
        r"""Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.SQLOperationsListRequest, base_url, '/sql/v1beta4/projects/{project}/operations', request)
        
        query_params = utils.get_query_params(operations.SQLOperationsListRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.SQLOperationsListResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OperationsListResponse])
                res.operations_list_response = out

        return res

    