/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountStatusExampleItem } from "./accountstatusexampleitem";
import { Expose, Type } from "class-transformer";

export class AccountStatusDataQualityIssue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  destination?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "displayedValue" })
  displayedValue?: string;

  @SpeakeasyMetadata({ elemType: AccountStatusExampleItem })
  @Expose({ name: "exampleItems" })
  @Type(() => AccountStatusExampleItem)
  exampleItems?: AccountStatusExampleItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastChecked" })
  lastChecked?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "numItems" })
  numItems?: number;

  /**
   *  Acceptable values are: - "`critical`" - "`error`" - "`suggestion`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "submittedValue" })
  submittedValue?: string;
}
