// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetWorkspaceSlugActivitiesSecurity struct {
	Bearer string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// GetWorkspaceSlugActivitiesActivityTypeEnum - Comma separated list of activity types
type GetWorkspaceSlugActivitiesActivityTypeEnum string

const (
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscourseTopicCreated        GetWorkspaceSlugActivitiesActivityTypeEnum = "discourse:topic:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscoursePostLiked           GetWorkspaceSlugActivitiesActivityTypeEnum = "discourse:post:liked"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscourseUserCreated         GetWorkspaceSlugActivitiesActivityTypeEnum = "discourse:user:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscoursePostCreated         GetWorkspaceSlugActivitiesActivityTypeEnum = "discourse:post:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumSlackMessageSent             GetWorkspaceSlugActivitiesActivityTypeEnum = "slack:message:sent"
	GetWorkspaceSlugActivitiesActivityTypeEnumSlackThreadReplied           GetWorkspaceSlugActivitiesActivityTypeEnum = "slack:thread:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumSlackChannelJoined           GetWorkspaceSlugActivitiesActivityTypeEnum = "slack:channel:joined"
	GetWorkspaceSlugActivitiesActivityTypeEnumNoteCreated                  GetWorkspaceSlugActivitiesActivityTypeEnum = "note:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumPostCreated                  GetWorkspaceSlugActivitiesActivityTypeEnum = "post:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumIssuesOpened                 GetWorkspaceSlugActivitiesActivityTypeEnum = "issues:opened"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscordMessageSent           GetWorkspaceSlugActivitiesActivityTypeEnum = "discord:message:sent"
	GetWorkspaceSlugActivitiesActivityTypeEnumIssueCommentCreated          GetWorkspaceSlugActivitiesActivityTypeEnum = "issue_comment:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscordThreadReplied         GetWorkspaceSlugActivitiesActivityTypeEnum = "discord:thread:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumCustomHappened               GetWorkspaceSlugActivitiesActivityTypeEnum = "custom:happened"
	GetWorkspaceSlugActivitiesActivityTypeEnumDevComment                   GetWorkspaceSlugActivitiesActivityTypeEnum = "dev:comment"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscordMessageReplied        GetWorkspaceSlugActivitiesActivityTypeEnum = "discord:message:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscordServerJoined          GetWorkspaceSlugActivitiesActivityTypeEnum = "discord:server:joined"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedConversationStarted   GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:conversation:started"
	GetWorkspaceSlugActivitiesActivityTypeEnumForkCreated                  GetWorkspaceSlugActivitiesActivityTypeEnum = "fork:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedIdeaReplied           GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:idea:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedArticleCreated        GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:article:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscussionsDiscussionCreated GetWorkspaceSlugActivitiesActivityTypeEnum = "discussions:discussion_created"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedQuestionReplied       GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:question:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscussionsComment           GetWorkspaceSlugActivitiesActivityTypeEnum = "discussions:comment"
	GetWorkspaceSlugActivitiesActivityTypeEnumDiscussionsReply             GetWorkspaceSlugActivitiesActivityTypeEnum = "discussions:reply"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedArticleReplied        GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:article:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedQuestionAsked         GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:question:asked"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedConversationReplied   GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:conversation:replied"
	GetWorkspaceSlugActivitiesActivityTypeEnumInsidedIdeaSubmitted         GetWorkspaceSlugActivitiesActivityTypeEnum = "insided:idea:submitted"
	GetWorkspaceSlugActivitiesActivityTypeEnumRedditComment                GetWorkspaceSlugActivitiesActivityTypeEnum = "reddit:comment"
	GetWorkspaceSlugActivitiesActivityTypeEnumRedditPost                   GetWorkspaceSlugActivitiesActivityTypeEnum = "reddit:post"
	GetWorkspaceSlugActivitiesActivityTypeEnumStackoverflowAnswer          GetWorkspaceSlugActivitiesActivityTypeEnum = "stackoverflow:answer"
	GetWorkspaceSlugActivitiesActivityTypeEnumLinkedinComment              GetWorkspaceSlugActivitiesActivityTypeEnum = "linkedin:comment"
	GetWorkspaceSlugActivitiesActivityTypeEnumPullRequestsOpened           GetWorkspaceSlugActivitiesActivityTypeEnum = "pull_requests:opened"
	GetWorkspaceSlugActivitiesActivityTypeEnumPullRequestsMerged           GetWorkspaceSlugActivitiesActivityTypeEnum = "pull_requests:merged"
	GetWorkspaceSlugActivitiesActivityTypeEnumStarCreated                  GetWorkspaceSlugActivitiesActivityTypeEnum = "star:created"
	GetWorkspaceSlugActivitiesActivityTypeEnumStackoverflowQuestion        GetWorkspaceSlugActivitiesActivityTypeEnum = "stackoverflow:question"
	GetWorkspaceSlugActivitiesActivityTypeEnumTweetSent                    GetWorkspaceSlugActivitiesActivityTypeEnum = "tweet:sent"
	GetWorkspaceSlugActivitiesActivityTypeEnumTwitterFollowed              GetWorkspaceSlugActivitiesActivityTypeEnum = "twitter:followed"
	GetWorkspaceSlugActivitiesActivityTypeEnumYoutubeComment               GetWorkspaceSlugActivitiesActivityTypeEnum = "youtube:comment"
)

func (e *GetWorkspaceSlugActivitiesActivityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "discourse:topic:created":
		fallthrough
	case "discourse:post:liked":
		fallthrough
	case "discourse:user:created":
		fallthrough
	case "discourse:post:created":
		fallthrough
	case "slack:message:sent":
		fallthrough
	case "slack:thread:replied":
		fallthrough
	case "slack:channel:joined":
		fallthrough
	case "note:created":
		fallthrough
	case "post:created":
		fallthrough
	case "issues:opened":
		fallthrough
	case "discord:message:sent":
		fallthrough
	case "issue_comment:created":
		fallthrough
	case "discord:thread:replied":
		fallthrough
	case "custom:happened":
		fallthrough
	case "dev:comment":
		fallthrough
	case "discord:message:replied":
		fallthrough
	case "discord:server:joined":
		fallthrough
	case "insided:conversation:started":
		fallthrough
	case "fork:created":
		fallthrough
	case "insided:idea:replied":
		fallthrough
	case "insided:article:created":
		fallthrough
	case "discussions:discussion_created":
		fallthrough
	case "insided:question:replied":
		fallthrough
	case "discussions:comment":
		fallthrough
	case "discussions:reply":
		fallthrough
	case "insided:article:replied":
		fallthrough
	case "insided:question:asked":
		fallthrough
	case "insided:conversation:replied":
		fallthrough
	case "insided:idea:submitted":
		fallthrough
	case "reddit:comment":
		fallthrough
	case "reddit:post":
		fallthrough
	case "stackoverflow:answer":
		fallthrough
	case "linkedin:comment":
		fallthrough
	case "pull_requests:opened":
		fallthrough
	case "pull_requests:merged":
		fallthrough
	case "star:created":
		fallthrough
	case "stackoverflow:question":
		fallthrough
	case "tweet:sent":
		fallthrough
	case "twitter:followed":
		fallthrough
	case "youtube:comment":
		*e = GetWorkspaceSlugActivitiesActivityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugActivitiesActivityTypeEnum: %s", s)
	}
}

// GetWorkspaceSlugActivitiesAffiliationEnum
type GetWorkspaceSlugActivitiesAffiliationEnum string

const (
	GetWorkspaceSlugActivitiesAffiliationEnumMember   GetWorkspaceSlugActivitiesAffiliationEnum = "member"
	GetWorkspaceSlugActivitiesAffiliationEnumTeammate GetWorkspaceSlugActivitiesAffiliationEnum = "teammate"
)

func (e *GetWorkspaceSlugActivitiesAffiliationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "member":
		fallthrough
	case "teammate":
		*e = GetWorkspaceSlugActivitiesAffiliationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugActivitiesAffiliationEnum: %s", s)
	}
}

// GetWorkspaceSlugActivitiesDirectionEnum
type GetWorkspaceSlugActivitiesDirectionEnum string

const (
	GetWorkspaceSlugActivitiesDirectionEnumAsc  GetWorkspaceSlugActivitiesDirectionEnum = "ASC"
	GetWorkspaceSlugActivitiesDirectionEnumDesc GetWorkspaceSlugActivitiesDirectionEnum = "DESC"
)

func (e *GetWorkspaceSlugActivitiesDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetWorkspaceSlugActivitiesDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugActivitiesDirectionEnum: %s", s)
	}
}

// GetWorkspaceSlugActivitiesIdentityEnum
type GetWorkspaceSlugActivitiesIdentityEnum string

const (
	GetWorkspaceSlugActivitiesIdentityEnumGithub    GetWorkspaceSlugActivitiesIdentityEnum = "github"
	GetWorkspaceSlugActivitiesIdentityEnumTwitter   GetWorkspaceSlugActivitiesIdentityEnum = "twitter"
	GetWorkspaceSlugActivitiesIdentityEnumEmail     GetWorkspaceSlugActivitiesIdentityEnum = "email"
	GetWorkspaceSlugActivitiesIdentityEnumDiscourse GetWorkspaceSlugActivitiesIdentityEnum = "discourse"
	GetWorkspaceSlugActivitiesIdentityEnumLinkedin  GetWorkspaceSlugActivitiesIdentityEnum = "linkedin"
	GetWorkspaceSlugActivitiesIdentityEnumDevto     GetWorkspaceSlugActivitiesIdentityEnum = "devto"
	GetWorkspaceSlugActivitiesIdentityEnumSlack     GetWorkspaceSlugActivitiesIdentityEnum = "slack"
	GetWorkspaceSlugActivitiesIdentityEnumDiscord   GetWorkspaceSlugActivitiesIdentityEnum = "discord"
)

func (e *GetWorkspaceSlugActivitiesIdentityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "github":
		fallthrough
	case "twitter":
		fallthrough
	case "email":
		fallthrough
	case "discourse":
		fallthrough
	case "linkedin":
		fallthrough
	case "devto":
		fallthrough
	case "slack":
		fallthrough
	case "discord":
		*e = GetWorkspaceSlugActivitiesIdentityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugActivitiesIdentityEnum: %s", s)
	}
}

// GetWorkspaceSlugActivitiesItemsEnum
type GetWorkspaceSlugActivitiesItemsEnum string

const (
	GetWorkspaceSlugActivitiesItemsEnumTen        GetWorkspaceSlugActivitiesItemsEnum = "10"
	GetWorkspaceSlugActivitiesItemsEnumFifty      GetWorkspaceSlugActivitiesItemsEnum = "50"
	GetWorkspaceSlugActivitiesItemsEnumOneHundred GetWorkspaceSlugActivitiesItemsEnum = "100"
)

func (e *GetWorkspaceSlugActivitiesItemsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "10":
		fallthrough
	case "50":
		fallthrough
	case "100":
		*e = GetWorkspaceSlugActivitiesItemsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugActivitiesItemsEnum: %s", s)
	}
}

// GetWorkspaceSlugActivitiesSortEnum
type GetWorkspaceSlugActivitiesSortEnum string

const (
	GetWorkspaceSlugActivitiesSortEnumOccurredAt GetWorkspaceSlugActivitiesSortEnum = "occurred_at"
	GetWorkspaceSlugActivitiesSortEnumMember     GetWorkspaceSlugActivitiesSortEnum = "member"
)

func (e *GetWorkspaceSlugActivitiesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "occurred_at":
		fallthrough
	case "member":
		*e = GetWorkspaceSlugActivitiesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugActivitiesSortEnum: %s", s)
	}
}

type GetWorkspaceSlugActivitiesRequest struct {
	// Comma separated list of activity types
	ActivityType *GetWorkspaceSlugActivitiesActivityTypeEnum `queryParam:"style=form,explode=true,name=activity_type"`
	Affiliation  *GetWorkspaceSlugActivitiesAffiliationEnum  `queryParam:"style=form,explode=true,name=affiliation"`
	// Comma separated list of cities. The union (OR) of cities is applied.
	Cities *string `queryParam:"style=form,explode=true,name=cities[]"`
	// Comma separated list of companies. The union (OR) of companies is applied.
	Company *string `queryParam:"style=form,explode=true,name=company[]"`
	// Comma separated list of countries. The union (OR) of countries is applied.
	Countries *string                                  `queryParam:"style=form,explode=true,name=countries[]"`
	Direction *GetWorkspaceSlugActivitiesDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// Filter activities before this date. Format: YYYY-MM-DD.
	EndDate  *string                                 `queryParam:"style=form,explode=true,name=end_date"`
	Identity *GetWorkspaceSlugActivitiesIdentityEnum `queryParam:"style=form,explode=true,name=identity"`
	Items    *GetWorkspaceSlugActivitiesItemsEnum    `queryParam:"style=form,explode=true,name=items"`
	// The list of tags to filter against. Separate tags with `,` to do an intersection (AND), or with `|` to do a union (OR)
	MemberTags *string `queryParam:"style=form,explode=true,name=member_tags"`
	// The list of orbit levels to filter against. Accepted values are 1, 2, 3, 4, n. In the request, a format like `23` would include levels 2 and 3. `n` is for members with no orbit level.
	Orbit *string `queryParam:"style=form,explode=true,name=orbit"`
	Page  *string `queryParam:"style=form,explode=true,name=page"`
	// Comma separated list of regions. The union (OR) of regions is applied.
	Regions *string `queryParam:"style=form,explode=true,name=regions[]"`
	// Relative timeframes. Format: this_<integer>_<period>, with period in [days, weeks, months, years]. For example, this_30_days.
	Relative *string                             `queryParam:"style=form,explode=true,name=relative"`
	Sort     *GetWorkspaceSlugActivitiesSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Filter activities after this date. Format: YYYY-MM-DD.
	StartDate *string `queryParam:"style=form,explode=true,name=start_date"`
	// Comma separated list of job titles. The union (OR) of job titles is applied.
	Title *string `queryParam:"style=form,explode=true,name=title[]"`
	// Deprecated in favor of the activity_type parameter.
	Type          *string `queryParam:"style=form,explode=true,name=type"`
	WorkspaceSlug string  `pathParam:"style=simple,explode=false,name=workspace_slug"`
}

type GetWorkspaceSlugActivitiesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
