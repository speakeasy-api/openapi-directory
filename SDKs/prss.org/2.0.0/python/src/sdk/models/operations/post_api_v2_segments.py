"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import segment as shared_segment
from typing import Optional


@dataclasses.dataclass
class PostAPIV2SegmentsSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostAPIV2SegmentsRequestBody:
    
    cd_drive_uri: str = dataclasses.field(metadata={'form': { 'field_name': 'cdDriveUri' }})
    r"""The URI to the segment content in CD Drive. Format should be 'cddrive:id:{value}' or 'cddrive://{path}'."""  
    episode_id: int = dataclasses.field(metadata={'form': { 'field_name': 'episodeId' }})
    r"""The ID of the episode that owns the segment."""  
    segment_number: int = dataclasses.field(metadata={'form': { 'field_name': 'segmentNumber' }})
    r"""The segment number of the segment."""  
    in_cue: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'inCue' }})
    r"""The incue for the segment. Defaults to the program segment incue."""  
    out_cue: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'outCue' }})
    r"""The outcue for the segment. Defaults to the program segment outcue."""  
    

@dataclasses.dataclass
class PostAPIV2SegmentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""The request is missing required data or invalid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    segment: Optional[shared_segment.Segment] = dataclasses.field(default=None)
    r"""The created segment with fields populated."""  
    