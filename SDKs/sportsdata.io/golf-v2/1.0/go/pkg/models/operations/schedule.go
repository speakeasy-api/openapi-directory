// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ScheduleFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ScheduleFormatEnum string

const (
	ScheduleFormatEnumXML  ScheduleFormatEnum = "XML"
	ScheduleFormatEnumJSON ScheduleFormatEnum = "JSON"
)

func (e *ScheduleFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = ScheduleFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScheduleFormatEnum: %s", s)
	}
}

type ScheduleRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ScheduleFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type ScheduleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	Tournaments []shared.Tournament
}
