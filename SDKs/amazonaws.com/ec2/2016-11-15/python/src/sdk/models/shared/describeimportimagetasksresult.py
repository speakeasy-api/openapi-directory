"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeImportImageTasksResultImportImageTasksBootModeEnum(str, Enum):
    r"""The boot mode of the virtual machine."""
    LEGACY_BIOS = 'legacy-bios'
    UEFI = 'uefi'
    UEFI_PREFERRED = 'uefi-preferred'


@dataclasses.dataclass
class DescribeImportImageTasksResultImportImageTasksLicenseSpecifications:
    r"""The response information for license configurations."""
    
    license_configuration_arn: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeImportImageTasksResultImportImageTasksSnapshotDetailsUserBucket:
    r"""The Amazon S3 bucket for the disk image."""
    
    s3_bucket: Optional[str] = dataclasses.field(default=None)  
    s3_key: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeImportImageTasksResultImportImageTasksSnapshotDetails:
    r"""Describes the snapshot created from the imported disk."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    device_name: Optional[str] = dataclasses.field(default=None)  
    disk_image_size: Optional[float] = dataclasses.field(default=None)  
    format: Optional[str] = dataclasses.field(default=None)  
    progress: Optional[str] = dataclasses.field(default=None)  
    snapshot_id: Optional[str] = dataclasses.field(default=None)  
    status: Optional[str] = dataclasses.field(default=None)  
    status_message: Optional[str] = dataclasses.field(default=None)  
    url: Optional[str] = dataclasses.field(default=None)  
    user_bucket: Optional[DescribeImportImageTasksResultImportImageTasksSnapshotDetailsUserBucket] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeImportImageTasksResultImportImageTasksTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeImportImageTasksResultImportImageTasks:
    r"""Describes an import image task."""
    
    architecture: Optional[str] = dataclasses.field(default=None)  
    boot_mode: Optional[DescribeImportImageTasksResultImportImageTasksBootModeEnum] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    encrypted: Optional[bool] = dataclasses.field(default=None)  
    hypervisor: Optional[str] = dataclasses.field(default=None)  
    image_id: Optional[str] = dataclasses.field(default=None)  
    import_task_id: Optional[str] = dataclasses.field(default=None)  
    kms_key_id: Optional[str] = dataclasses.field(default=None)  
    license_specifications: Optional[list[DescribeImportImageTasksResultImportImageTasksLicenseSpecifications]] = dataclasses.field(default=None)  
    license_type: Optional[str] = dataclasses.field(default=None)  
    platform: Optional[str] = dataclasses.field(default=None)  
    progress: Optional[str] = dataclasses.field(default=None)  
    snapshot_details: Optional[list[DescribeImportImageTasksResultImportImageTasksSnapshotDetails]] = dataclasses.field(default=None)  
    status: Optional[str] = dataclasses.field(default=None)  
    status_message: Optional[str] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeImportImageTasksResultImportImageTasksTags]] = dataclasses.field(default=None)  
    usage_operation: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeImportImageTasksResult:
    r"""Success"""
    
    import_image_tasks: Optional[list[DescribeImportImageTasksResultImportImageTasks]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    