/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * KeyUsage.KeyUsageOptions corresponds to the key usage values described in https://tools.ietf.org/html/rfc5280#section-4.2.1.3.
 */
export class KeyUsageOptions extends SpeakeasyBase {
  /**
   * The key may be used to sign certificates.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certSign" })
  certSign?: boolean;

  /**
   * The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentCommitment" })
  contentCommitment?: boolean;

  /**
   * The key may be used sign certificate revocation lists.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crlSign" })
  crlSign?: boolean;

  /**
   * The key may be used to encipher data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataEncipherment" })
  dataEncipherment?: boolean;

  /**
   * The key may be used to decipher only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "decipherOnly" })
  decipherOnly?: boolean;

  /**
   * The key may be used for digital signatures.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digitalSignature" })
  digitalSignature?: boolean;

  /**
   * The key may be used to encipher only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encipherOnly" })
  encipherOnly?: boolean;

  /**
   * The key may be used in a key agreement protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyAgreement" })
  keyAgreement?: boolean;

  /**
   * The key may be used to encipher other keys.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyEncipherment" })
  keyEncipherment?: boolean;
}
