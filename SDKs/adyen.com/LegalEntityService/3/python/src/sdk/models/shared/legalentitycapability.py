"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import capabilitysettings as shared_capabilitysettings
from ..shared import supportingentitycapability as shared_supportingentitycapability
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LegalEntityCapabilityAllowedLevelEnum(str, Enum):
    r"""The capability level that is allowed for the legal entity.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """
    HIGH = 'high'
    LOW = 'low'
    MEDIUM = 'medium'
    NOT_APPLICABLE = 'notApplicable'

class LegalEntityCapabilityRequestedLevelEnum(str, Enum):
    r"""The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """
    HIGH = 'high'
    LOW = 'low'
    MEDIUM = 'medium'
    NOT_APPLICABLE = 'notApplicable'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LegalEntityCapability:
    
    allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful"""  
    allowed_level: Optional[LegalEntityCapabilityAllowedLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedLevel'), 'exclude': lambda f: f is None }})
    r"""The capability level that is allowed for the legal entity.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """  
    allowed_settings: Optional[shared_capabilitysettings.CapabilitySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedSettings'), 'exclude': lambda f: f is None }})  
    requested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requested'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the capability is requested. To check whether the Legal Entity is permitted to use the capability,"""  
    requested_level: Optional[LegalEntityCapabilityRequestedLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedLevel'), 'exclude': lambda f: f is None }})
    r"""The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """  
    requested_settings: Optional[shared_capabilitysettings.CapabilitySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedSettings'), 'exclude': lambda f: f is None }})  
    transfer_instruments: Optional[list[shared_supportingentitycapability.SupportingEntityCapability]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferInstruments'), 'exclude': lambda f: f is None }})
    r"""Capability status for transfer instruments associated with legal entity"""  
    verification_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationStatus'), 'exclude': lambda f: f is None }})
    r"""The status of the verification checks for the capability.
    
    Possible values:
    
    * **pending**: Adyen is running the verification.
    
    * **invalid**: The verification failed. Check if the `errors` array contains more information.
    
    * **valid**: The verification has been successfully completed.
    
    * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
    """  
    