<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ContainerServiceDeployment - <p>Describes a container deployment configuration of an Amazon Lightsail container service.</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ContainerServiceDeployment
{
    /**
     * $containers
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\Container> $containers
     */
	#[\JMS\Serializer\Annotation\SerializedName('containers')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\Container>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $containers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('publicEndpoint')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ContainerServiceEndpoint')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContainerServiceEndpoint $publicEndpoint = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ContainerServiceDeploymentStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContainerServiceDeploymentStateEnum $state = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->containers = null;
		$this->createdAt = null;
		$this->publicEndpoint = null;
		$this->state = null;
		$this->version = null;
	}
}
