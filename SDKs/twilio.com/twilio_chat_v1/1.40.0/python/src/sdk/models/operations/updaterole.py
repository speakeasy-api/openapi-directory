"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import chat_v1_service_role as shared_chat_v1_service_role
from typing import Optional

UPDATE_ROLE_SERVERS = [
	"https://chat.twilio.com",
]


@dataclasses.dataclass
class UpdateRoleSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateRoleUpdateRoleRequest:
    
    permission: list[str] = dataclasses.field(metadata={'form': { 'field_name': 'Permission' }})
    r"""A permission that you grant to the role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type` and are described in the documentation."""  
    

@dataclasses.dataclass
class UpdateRoleRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to update the resource from."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the Role resource to update."""  
    request_body: Optional[UpdateRoleUpdateRoleRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateRoleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    chat_v1_service_role: Optional[shared_chat_v1_service_role.ChatV1ServiceRole] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    