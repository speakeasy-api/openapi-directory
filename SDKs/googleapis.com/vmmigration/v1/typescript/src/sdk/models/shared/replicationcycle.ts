/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CycleStep } from "./cyclestep";
import { MigrationWarning } from "./migrationwarning";
import { Status } from "./status";
import { Expose, Type } from "class-transformer";

/**
 * State of the ReplicationCycle.
 */
export enum ReplicationCycleStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Running = "RUNNING",
  Paused = "PAUSED",
  Failed = "FAILED",
  Succeeded = "SUCCEEDED",
}

/**
 * ReplicationCycle contains information about the current replication cycle status.
 */
export class ReplicationCycle extends SpeakeasyBase {
  /**
   * The cycle's ordinal number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cycleNumber" })
  cycleNumber?: number;

  /**
   * The time the replication cycle has ended.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * The identifier of the ReplicationCycle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progressPercent" })
  progressPercent?: number;

  /**
   * The time the replication cycle has started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * State of the ReplicationCycle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ReplicationCycleStateEnum;

  /**
   * The cycle's steps list representing its progress.
   */
  @SpeakeasyMetadata({ elemType: CycleStep })
  @Expose({ name: "steps" })
  @Type(() => CycleStep)
  steps?: CycleStep[];

  /**
   * The accumulated duration the replication cycle was paused.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalPauseDuration" })
  totalPauseDuration?: string;

  /**
   * Output only. Warnings that occurred during the cycle.
   */
  @SpeakeasyMetadata({ elemType: MigrationWarning })
  @Expose({ name: "warnings" })
  @Type(() => MigrationWarning)
  warnings?: MigrationWarning[];
}

/**
 * ReplicationCycle contains information about the current replication cycle status.
 */
export class ReplicationCycleInput extends SpeakeasyBase {
  /**
   * The cycle's ordinal number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cycleNumber" })
  cycleNumber?: number;

  /**
   * The time the replication cycle has ended.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * The identifier of the ReplicationCycle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progressPercent" })
  progressPercent?: number;

  /**
   * The time the replication cycle has started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * State of the ReplicationCycle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ReplicationCycleStateEnum;

  /**
   * The cycle's steps list representing its progress.
   */
  @SpeakeasyMetadata({ elemType: CycleStep })
  @Expose({ name: "steps" })
  @Type(() => CycleStep)
  steps?: CycleStep[];

  /**
   * The accumulated duration the replication cycle was paused.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalPauseDuration" })
  totalPauseDuration?: string;
}
