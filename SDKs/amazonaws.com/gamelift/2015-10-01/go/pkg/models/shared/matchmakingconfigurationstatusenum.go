// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MatchmakingConfigurationStatusEnum string

const (
	MatchmakingConfigurationStatusEnumCancelled          MatchmakingConfigurationStatusEnum = "CANCELLED"
	MatchmakingConfigurationStatusEnumCompleted          MatchmakingConfigurationStatusEnum = "COMPLETED"
	MatchmakingConfigurationStatusEnumFailed             MatchmakingConfigurationStatusEnum = "FAILED"
	MatchmakingConfigurationStatusEnumPlacing            MatchmakingConfigurationStatusEnum = "PLACING"
	MatchmakingConfigurationStatusEnumQueued             MatchmakingConfigurationStatusEnum = "QUEUED"
	MatchmakingConfigurationStatusEnumRequiresAcceptance MatchmakingConfigurationStatusEnum = "REQUIRES_ACCEPTANCE"
	MatchmakingConfigurationStatusEnumSearching          MatchmakingConfigurationStatusEnum = "SEARCHING"
	MatchmakingConfigurationStatusEnumTimedOut           MatchmakingConfigurationStatusEnum = "TIMED_OUT"
)

func (e MatchmakingConfigurationStatusEnum) ToPointer() *MatchmakingConfigurationStatusEnum {
	return &e
}

func (e *MatchmakingConfigurationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CANCELLED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "PLACING":
		fallthrough
	case "QUEUED":
		fallthrough
	case "REQUIRES_ACCEPTANCE":
		fallthrough
	case "SEARCHING":
		fallthrough
	case "TIMED_OUT":
		*e = MatchmakingConfigurationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MatchmakingConfigurationStatusEnum: %v", v)
	}
}
