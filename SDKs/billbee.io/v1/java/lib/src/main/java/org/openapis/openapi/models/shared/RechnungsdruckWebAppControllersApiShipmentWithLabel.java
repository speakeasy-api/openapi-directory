/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * RechnungsdruckWebAppControllersApiShipmentWithLabel - Details on the order and the shipping methods, that should be used.
 */
public class RechnungsdruckWebAppControllersApiShipmentWithLabel {
    /**
     * Optional parameter to automatically change the orderstate to sent after creating the shipment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ChangeStateToSend")
    @SpeakeasyMetadata("form:name=ChangeStateToSend")
    public Boolean changeStateToSend;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withChangeStateToSend(Boolean changeStateToSend) {
        this.changeStateToSend = changeStateToSend;
        return this;
    }
    
    /**
     * Optional specify a reference text to be included on the label. Works not with all carriers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientReference")
    @SpeakeasyMetadata("form:name=ClientReference")
    public String clientReference;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withClientReference(String clientReference) {
        this.clientReference = clientReference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Dimension")
    @SpeakeasyMetadata("form:name=Dimension,json")
    public BillbeeInterfacesShippingShipmentDataDimensions dimension;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withDimension(BillbeeInterfacesShippingShipmentDataDimensions dimension) {
        this.dimension = dimension;
        return this;
    }
    
    /**
     * The Billbee internal id of the order to ship
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrderId")
    @SpeakeasyMetadata("form:name=OrderId")
    public Long orderId;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withOrderId(Long orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * Optional the name of a connected cloudprinter to send the label to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PrinterName")
    @SpeakeasyMetadata("form:name=PrinterName")
    public String printerName;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withPrinterName(String printerName) {
        this.printerName = printerName;
        return this;
    }
    
    /**
     * the id of the shipping provider product to be used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProductId")
    @SpeakeasyMetadata("form:name=ProductId")
    public Long productId;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withProductId(Long productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * The id of the provider. You can query all providers with the shippingproviders endpoint
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProviderId")
    @SpeakeasyMetadata("form:name=ProviderId")
    public Long providerId;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withProviderId(Long providerId) {
        this.providerId = providerId;
        return this;
    }
    
    /**
     * Optional specify the shipdate to be transmitted to the carrier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ShipDate")
    @SpeakeasyMetadata("form:name=ShipDate")
    public OffsetDateTime shipDate;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withShipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }
    
    /**
     * Optional the shipments weight in gram to override the calculated weight
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WeightInGram")
    @SpeakeasyMetadata("form:name=WeightInGram")
    public Integer weightInGram;

    public RechnungsdruckWebAppControllersApiShipmentWithLabel withWeightInGram(Integer weightInGram) {
        this.weightInGram = weightInGram;
        return this;
    }
    
    public RechnungsdruckWebAppControllersApiShipmentWithLabel(){}
}
