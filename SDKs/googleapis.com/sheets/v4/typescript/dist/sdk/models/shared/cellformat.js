"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CellFormat = exports.CellFormatWrapStrategyEnum = exports.CellFormatVerticalAlignmentEnum = exports.CellFormatTextDirectionEnum = exports.CellFormatHyperlinkDisplayTypeEnum = exports.CellFormatHorizontalAlignmentEnum = void 0;
var utils_1 = require("../../../internal/utils");
var borders_1 = require("./borders");
var color_1 = require("./color");
var colorstyle_1 = require("./colorstyle");
var numberformat_1 = require("./numberformat");
var padding_1 = require("./padding");
var textformat_1 = require("./textformat");
var textrotation_1 = require("./textrotation");
var class_transformer_1 = require("class-transformer");
/**
 * The horizontal alignment of the value in the cell.
 */
var CellFormatHorizontalAlignmentEnum;
(function (CellFormatHorizontalAlignmentEnum) {
    CellFormatHorizontalAlignmentEnum["HorizontalAlignUnspecified"] = "HORIZONTAL_ALIGN_UNSPECIFIED";
    CellFormatHorizontalAlignmentEnum["Left"] = "LEFT";
    CellFormatHorizontalAlignmentEnum["Center"] = "CENTER";
    CellFormatHorizontalAlignmentEnum["Right"] = "RIGHT";
})(CellFormatHorizontalAlignmentEnum = exports.CellFormatHorizontalAlignmentEnum || (exports.CellFormatHorizontalAlignmentEnum = {}));
/**
 * If one exists, how a hyperlink should be displayed in the cell.
 */
var CellFormatHyperlinkDisplayTypeEnum;
(function (CellFormatHyperlinkDisplayTypeEnum) {
    CellFormatHyperlinkDisplayTypeEnum["HyperlinkDisplayTypeUnspecified"] = "HYPERLINK_DISPLAY_TYPE_UNSPECIFIED";
    CellFormatHyperlinkDisplayTypeEnum["Linked"] = "LINKED";
    CellFormatHyperlinkDisplayTypeEnum["PlainText"] = "PLAIN_TEXT";
})(CellFormatHyperlinkDisplayTypeEnum = exports.CellFormatHyperlinkDisplayTypeEnum || (exports.CellFormatHyperlinkDisplayTypeEnum = {}));
/**
 * The direction of the text in the cell.
 */
var CellFormatTextDirectionEnum;
(function (CellFormatTextDirectionEnum) {
    CellFormatTextDirectionEnum["TextDirectionUnspecified"] = "TEXT_DIRECTION_UNSPECIFIED";
    CellFormatTextDirectionEnum["LeftToRight"] = "LEFT_TO_RIGHT";
    CellFormatTextDirectionEnum["RightToLeft"] = "RIGHT_TO_LEFT";
})(CellFormatTextDirectionEnum = exports.CellFormatTextDirectionEnum || (exports.CellFormatTextDirectionEnum = {}));
/**
 * The vertical alignment of the value in the cell.
 */
var CellFormatVerticalAlignmentEnum;
(function (CellFormatVerticalAlignmentEnum) {
    CellFormatVerticalAlignmentEnum["VerticalAlignUnspecified"] = "VERTICAL_ALIGN_UNSPECIFIED";
    CellFormatVerticalAlignmentEnum["Top"] = "TOP";
    CellFormatVerticalAlignmentEnum["Middle"] = "MIDDLE";
    CellFormatVerticalAlignmentEnum["Bottom"] = "BOTTOM";
})(CellFormatVerticalAlignmentEnum = exports.CellFormatVerticalAlignmentEnum || (exports.CellFormatVerticalAlignmentEnum = {}));
/**
 * The wrap strategy for the value in the cell.
 */
var CellFormatWrapStrategyEnum;
(function (CellFormatWrapStrategyEnum) {
    CellFormatWrapStrategyEnum["WrapStrategyUnspecified"] = "WRAP_STRATEGY_UNSPECIFIED";
    CellFormatWrapStrategyEnum["OverflowCell"] = "OVERFLOW_CELL";
    CellFormatWrapStrategyEnum["LegacyWrap"] = "LEGACY_WRAP";
    CellFormatWrapStrategyEnum["Clip"] = "CLIP";
    CellFormatWrapStrategyEnum["Wrap"] = "WRAP";
})(CellFormatWrapStrategyEnum = exports.CellFormatWrapStrategyEnum || (exports.CellFormatWrapStrategyEnum = {}));
/**
 * The format of a cell.
 */
var CellFormat = /** @class */ (function (_super) {
    __extends(CellFormat, _super);
    function CellFormat() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "backgroundColor" }),
        (0, class_transformer_1.Type)(function () { return color_1.Color; }),
        __metadata("design:type", color_1.Color)
    ], CellFormat.prototype, "backgroundColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "backgroundColorStyle" }),
        (0, class_transformer_1.Type)(function () { return colorstyle_1.ColorStyle; }),
        __metadata("design:type", colorstyle_1.ColorStyle)
    ], CellFormat.prototype, "backgroundColorStyle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "borders" }),
        (0, class_transformer_1.Type)(function () { return borders_1.Borders; }),
        __metadata("design:type", borders_1.Borders)
    ], CellFormat.prototype, "borders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "horizontalAlignment" }),
        __metadata("design:type", String)
    ], CellFormat.prototype, "horizontalAlignment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hyperlinkDisplayType" }),
        __metadata("design:type", String)
    ], CellFormat.prototype, "hyperlinkDisplayType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "numberFormat" }),
        (0, class_transformer_1.Type)(function () { return numberformat_1.NumberFormat; }),
        __metadata("design:type", numberformat_1.NumberFormat)
    ], CellFormat.prototype, "numberFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "padding" }),
        (0, class_transformer_1.Type)(function () { return padding_1.Padding; }),
        __metadata("design:type", padding_1.Padding)
    ], CellFormat.prototype, "padding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "textDirection" }),
        __metadata("design:type", String)
    ], CellFormat.prototype, "textDirection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "textFormat" }),
        (0, class_transformer_1.Type)(function () { return textformat_1.TextFormat; }),
        __metadata("design:type", textformat_1.TextFormat)
    ], CellFormat.prototype, "textFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "textRotation" }),
        (0, class_transformer_1.Type)(function () { return textrotation_1.TextRotation; }),
        __metadata("design:type", textrotation_1.TextRotation)
    ], CellFormat.prototype, "textRotation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "verticalAlignment" }),
        __metadata("design:type", String)
    ], CellFormat.prototype, "verticalAlignment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wrapStrategy" }),
        __metadata("design:type", String)
    ], CellFormat.prototype, "wrapStrategy", void 0);
    return CellFormat;
}(utils_1.SpeakeasyBase));
exports.CellFormat = CellFormat;
