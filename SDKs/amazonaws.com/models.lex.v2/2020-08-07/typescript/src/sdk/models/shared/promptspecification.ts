/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { MessageGroup } from "./messagegroup";
import { MessageSelectionStrategyEnum } from "./messageselectionstrategyenum";
import { PromptAttemptSpecification } from "./promptattemptspecification";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Specifies a list of message groups that Amazon Lex sends to a user to elicit a response.
 */
export class PromptSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowInterrupt" })
  allowInterrupt?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "maxRetries" })
  maxRetries: number;

  @SpeakeasyMetadata({ elemType: MessageGroup })
  @Expose({ name: "messageGroups" })
  @Type(() => MessageGroup)
  messageGroups: MessageGroup[];

  @SpeakeasyMetadata()
  @Expose({ name: "messageSelectionStrategy" })
  messageSelectionStrategy?: MessageSelectionStrategyEnum;

  @SpeakeasyMetadata({ elemType: PromptAttemptSpecification })
  @Expose({ name: "promptAttemptsSpecification" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PromptAttemptSpecification> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PromptAttemptSpecification);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  promptAttemptsSpecification?: Record<string, PromptAttemptSpecification>;
}
