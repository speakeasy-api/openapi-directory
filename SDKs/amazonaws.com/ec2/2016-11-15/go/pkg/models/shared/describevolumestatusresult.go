// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeVolumeStatusResultVolumeStatusesActions - Describes a volume status operation code.
type DescribeVolumeStatusResultVolumeStatusesActions struct {
	Code        *string
	Description *string
	EventID     *string
	EventType   *string
}

// DescribeVolumeStatusResultVolumeStatusesAttachmentStatuses - Information about the instances to which the volume is attached.
type DescribeVolumeStatusResultVolumeStatusesAttachmentStatuses struct {
	InstanceID    *string
	IoPerformance *string
}

// DescribeVolumeStatusResultVolumeStatusesEvents - Describes a volume status event.
type DescribeVolumeStatusResultVolumeStatusesEvents struct {
	Description *string
	EventID     *string
	EventType   *string
	InstanceID  *string
	NotAfter    *time.Time
	NotBefore   *time.Time
}

// DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum - The name of the volume status.
type DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum string

const (
	DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnumIoEnabled     DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum = "io-enabled"
	DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnumIoPerformance DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum = "io-performance"
)

func (e *DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "io-enabled":
		fallthrough
	case "io-performance":
		*e = DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum: %s", s)
	}
}

// DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetails - Describes a volume status.
type DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetails struct {
	Name   *DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetailsNameEnum
	Status *string
}

// DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum - The status of the volume.
type DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum string

const (
	DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnumOk               DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum = "ok"
	DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnumImpaired         DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum = "impaired"
	DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnumInsufficientData DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum = "insufficient-data"
)

func (e *DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ok":
		fallthrough
	case "impaired":
		fallthrough
	case "insufficient-data":
		*e = DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum: %s", s)
	}
}

// DescribeVolumeStatusResultVolumeStatusesVolumeStatus - The volume status.
type DescribeVolumeStatusResultVolumeStatusesVolumeStatus struct {
	Details []DescribeVolumeStatusResultVolumeStatusesVolumeStatusDetails
	Status  *DescribeVolumeStatusResultVolumeStatusesVolumeStatusStatusEnum
}

// DescribeVolumeStatusResultVolumeStatuses - Describes the volume status.
type DescribeVolumeStatusResultVolumeStatuses struct {
	Actions            []DescribeVolumeStatusResultVolumeStatusesActions
	AttachmentStatuses []DescribeVolumeStatusResultVolumeStatusesAttachmentStatuses
	AvailabilityZone   *string
	Events             []DescribeVolumeStatusResultVolumeStatusesEvents
	OutpostArn         *string
	VolumeID           *string
	VolumeStatus       *DescribeVolumeStatusResultVolumeStatusesVolumeStatus
}

// DescribeVolumeStatusResult - Success
type DescribeVolumeStatusResult struct {
	NextToken      *string
	VolumeStatuses []DescribeVolumeStatusResultVolumeStatuses
}
