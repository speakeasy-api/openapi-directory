"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import editinventorysourcereadwriteaccessorsrequestadvertisersupdate as shared_editinventorysourcereadwriteaccessorsrequestadvertisersupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EditInventorySourceReadWriteAccessorsRequest:
    r"""Request message for InventorySourceService.EditInventorySourceReadWriteAccessors."""
    
    advertisers_update: Optional[shared_editinventorysourcereadwriteaccessorsrequestadvertisersupdate.EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertisersUpdate'), 'exclude': lambda f: f is None }})
    r"""Update to the list of advertisers with read/write access to the inventory source."""  
    assign_partner: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignPartner'), 'exclude': lambda f: f is None }})
    r"""Set the partner context as read/write accessor of the inventory source. This will remove all other current read/write advertiser accessors."""  
    partner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partnerId'), 'exclude': lambda f: f is None }})
    r"""Required. The partner context by which the accessors change is being made."""  
    