"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class Collectionstatuses:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def content_collectionstatuses_get(self, request: operations.ContentCollectionstatusesGetRequest, security: operations.ContentCollectionstatusesGetSecurity) -> operations.ContentCollectionstatusesGetResponse:
        r"""Gets the status of a collection from your Merchant Center account."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.ContentCollectionstatusesGetRequest, base_url, '/{merchantId}/collectionstatuses/{collectionId}', request)
        
        query_params = utils.get_query_params(operations.ContentCollectionstatusesGetRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ContentCollectionstatusesGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.CollectionStatus])
                res.collection_status = out

        return res

    def content_collectionstatuses_list(self, request: operations.ContentCollectionstatusesListRequest, security: operations.ContentCollectionstatusesListSecurity) -> operations.ContentCollectionstatusesListResponse:
        r"""Lists the statuses of the collections in your Merchant Center account."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.ContentCollectionstatusesListRequest, base_url, '/{merchantId}/collectionstatuses', request)
        
        query_params = utils.get_query_params(operations.ContentCollectionstatusesListRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ContentCollectionstatusesListResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ListCollectionStatusesResponse])
                res.list_collection_statuses_response = out

        return res

    