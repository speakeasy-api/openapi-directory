/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentFilterClause } from "./segmentfilterclause";
import { Expose, Type } from "class-transformer";

/**
 * A list of segment filters in the `OR` group are combined with the logical OR operator.
 */
export class OrFiltersForSegment extends SpeakeasyBase {
  /**
   * List of segment filters to be combined with a `OR` operator.
   */
  @SpeakeasyMetadata({ elemType: SegmentFilterClause })
  @Expose({ name: "segmentFilterClauses" })
  @Type(() => SegmentFilterClause)
  segmentFilterClauses?: SegmentFilterClause[];
}
