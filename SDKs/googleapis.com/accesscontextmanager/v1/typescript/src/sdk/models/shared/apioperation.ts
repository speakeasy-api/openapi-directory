/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MethodSelector } from "./methodselector";
import { Expose, Type } from "class-transformer";

/**
 * Identification for an API Operation.
 */
export class ApiOperation extends SpeakeasyBase {
  /**
   * API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`.
   */
  @SpeakeasyMetadata({ elemType: MethodSelector })
  @Expose({ name: "methodSelectors" })
  @Type(() => MethodSelector)
  methodSelectors?: MethodSelector[];

  /**
   * The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceName" })
  serviceName?: string;
}
