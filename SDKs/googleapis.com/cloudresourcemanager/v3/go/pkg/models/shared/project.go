// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectStateEnum - Output only. The project lifecycle state.
type ProjectStateEnum string

const (
	ProjectStateEnumStateUnspecified ProjectStateEnum = "STATE_UNSPECIFIED"
	ProjectStateEnumActive           ProjectStateEnum = "ACTIVE"
	ProjectStateEnumDeleteRequested  ProjectStateEnum = "DELETE_REQUESTED"
)

func (e ProjectStateEnum) ToPointer() *ProjectStateEnum {
	return &e
}

func (e *ProjectStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETE_REQUESTED":
		*e = ProjectStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectStateEnum: %v", v)
	}
}

// Project - A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources.
type Project struct {
	// Output only. Creation time.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The time at which this resource was requested for deletion.
	DeleteTime *string `json:"deleteTime,omitempty"`
	// Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \[a-z\](\[-a-z0-9\]*\[a-z0-9\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\[a-z\](\[-a-z0-9\]*\[a-z0-9\])?)?. No more than 64 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `"myBusinessDimension" : "businessValue"`
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The unique resource name of the project. It is an int64 generated number prefixed by "projects/". Example: `projects/415104041262`
	Name *string `json:"name,omitempty"`
	// Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`.
	Parent *string `json:"parent,omitempty"`
	// Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`
	ProjectID *string `json:"projectId,omitempty"`
	// Output only. The project lifecycle state.
	State *ProjectStateEnum `json:"state,omitempty"`
	// Output only. The most recent time this resource was modified.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// ProjectInput - A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources.
type ProjectInput struct {
	// Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`
	DisplayName *string `json:"displayName,omitempty"`
	// Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \[a-z\](\[-a-z0-9\]*\[a-z0-9\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\[a-z\](\[-a-z0-9\]*\[a-z0-9\])?)?. No more than 64 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `"myBusinessDimension" : "businessValue"`
	Labels map[string]string `json:"labels,omitempty"`
	// Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`.
	Parent *string `json:"parent,omitempty"`
	// Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`
	ProjectID *string `json:"projectId,omitempty"`
}
