/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BucketizedCount } from "./bucketizedcount";
import { Expose, Type } from "class-transformer";

/**
 * Output only. Custom numeric bucketing result.
 */
export class NumericBucketingResult extends SpeakeasyBase {
  /**
   * Count within each bucket. Its size is the length of NumericBucketingOption.bucket_bounds plus 1.
   */
  @SpeakeasyMetadata({ elemType: BucketizedCount })
  @Expose({ name: "counts" })
  @Type(() => BucketizedCount)
  counts?: BucketizedCount[];

  /**
   * Stores the maximum value of the numeric field. Is populated only if [NumericBucketingOption.requires_min_max] is set to true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxValue" })
  maxValue?: number;

  /**
   * Stores the minimum value of the numeric field. Will be populated only if [NumericBucketingOption.requires_min_max] is set to true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minValue" })
  minValue?: number;
}
