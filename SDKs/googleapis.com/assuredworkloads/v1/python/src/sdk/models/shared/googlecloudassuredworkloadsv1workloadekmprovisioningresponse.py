"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum(str, Enum):
    r"""Indicates Ekm provisioning error if any."""
    EKM_PROVISIONING_ERROR_DOMAIN_UNSPECIFIED = 'EKM_PROVISIONING_ERROR_DOMAIN_UNSPECIFIED'
    UNSPECIFIED_ERROR = 'UNSPECIFIED_ERROR'
    GOOGLE_SERVER_ERROR = 'GOOGLE_SERVER_ERROR'
    EXTERNAL_USER_ERROR = 'EXTERNAL_USER_ERROR'
    EXTERNAL_PARTNER_ERROR = 'EXTERNAL_PARTNER_ERROR'
    TIMEOUT_ERROR = 'TIMEOUT_ERROR'

class GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum(str, Enum):
    r"""Indicates Ekm enrollment Provisioning of a given workload."""
    EKM_PROVISIONING_STATE_UNSPECIFIED = 'EKM_PROVISIONING_STATE_UNSPECIFIED'
    EKM_PROVISIONING_STATE_PENDING = 'EKM_PROVISIONING_STATE_PENDING'
    EKM_PROVISIONING_STATE_FAILED = 'EKM_PROVISIONING_STATE_FAILED'
    EKM_PROVISIONING_STATE_COMPLETED = 'EKM_PROVISIONING_STATE_COMPLETED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponse:
    r"""External key management systems(EKM) Provisioning response"""
    
    ekm_provisioning_error_domain: Optional[GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ekmProvisioningErrorDomain'), 'exclude': lambda f: f is None }})
    r"""Indicates Ekm provisioning error if any."""  
    ekm_provisioning_error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ekmProvisioningErrorMessage'), 'exclude': lambda f: f is None }})
    r"""Detailed error message if Ekm provisioning fails"""  
    ekm_provisioning_state: Optional[GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ekmProvisioningState'), 'exclude': lambda f: f is None }})
    r"""Indicates Ekm enrollment Provisioning of a given workload."""  
    