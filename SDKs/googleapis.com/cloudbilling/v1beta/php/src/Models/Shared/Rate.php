<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Rate - A SKU price consisting of tiered rates.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Rate
{
    /**
     * The service tiers.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RateTier> $tiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('tiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RateTier>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tiers = null;
    
    /**
     * The SKU's pricing unit. For example, if the tier price is $1 per 1000000 Bytes, then this field will show 'By'. The `start_amount` field in each tier will be in this unit.
     * 
     * @var ?string $unit
     */
	#[\JMS\Serializer\Annotation\SerializedName('unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unit = null;
    
    /**
     * The SKU's count for the pricing unit. For example, if the tier price is $1 per 1000000 Bytes, then this column will show 1000000.
     * 
     * @var ?float $unitCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitCount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $unitCount = null;
    
	public function __construct()
	{
		$this->tiers = null;
		$this->unit = null;
		$this->unitCount = null;
	}
}
