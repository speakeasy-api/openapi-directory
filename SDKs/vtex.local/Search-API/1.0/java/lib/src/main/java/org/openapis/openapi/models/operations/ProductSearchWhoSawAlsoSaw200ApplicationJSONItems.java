/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class ProductSearchWhoSawAlsoSaw200ApplicationJSONItems {
    /**
     * Videos.
     */
    @JsonProperty("Videos")
    public Object[] videos;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withVideos(Object[] videos) {
        this.videos = videos;
        return this;
    }
    
    /**
     * SKU complement name.
     */
    @JsonProperty("complementName")
    public String complementName;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withComplementName(String complementName) {
        this.complementName = complementName;
        return this;
    }
    
    /**
     * SKU unique identification code (barcode), accepts up to 13 numerical characters.
     */
    @JsonProperty("ean")
    public String ean;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withEan(String ean) {
        this.ean = ean;
        return this;
    }
    
    /**
     * Estimated date arrival.
     */
    @JsonProperty("estimatedDateArrival")
    public String estimatedDateArrival;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withEstimatedDateArrival(String estimatedDateArrival) {
        this.estimatedDateArrival = estimatedDateArrival;
        return this;
    }
    
    /**
     * Array of information about the SKU image.
     */
    @JsonProperty("images")
    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsImages[] images;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withImages(ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsImages[] images) {
        this.images = images;
        return this;
    }
    
    /**
     * If the SKU is part of a kit.
     */
    @JsonProperty("isKit")
    public Boolean isKit;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withIsKit(Boolean isKit) {
        this.isKit = isKit;
        return this;
    }
    
    /**
     * SKU ID.
     */
    @JsonProperty("itemId")
    public String itemId;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * Array with information of SKUs components from a Kit.
     */
    @JsonProperty("kitItems")
    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsKitItems[] kitItems;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withKitItems(ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsKitItems[] kitItems) {
        this.kitItems = kitItems;
        return this;
    }
    
    /**
     * Used only in cases when you need to convert the unit of measure for sale. In common cases, use 'un'.
     */
    @JsonProperty("measurementUnit")
    public String measurementUnit;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withMeasurementUnit(String measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    /**
     * Modal Type.
     */
    @JsonProperty("modalType")
    public String modalType;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withModalType(String modalType) {
        this.modalType = modalType;
        return this;
    }
    
    /**
     * SKU name.
     */
    @JsonProperty("name")
    public String name;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * SKU complete name.
     */
    @JsonProperty("nameComplete")
    public String nameComplete;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withNameComplete(String nameComplete) {
        this.nameComplete = nameComplete;
        return this;
    }
    
    /**
     * Reference code ID.
     */
    @JsonProperty("referenceId")
    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsReferenceId[] referenceId;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withReferenceId(ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsReferenceId[] referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     * Array of SKU sellers.
     */
    @JsonProperty("sellers")
    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsSellers[] sellers;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withSellers(ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsSellers[] sellers) {
        this.sellers = sellers;
        return this;
    }
    
    /**
     * numerical unit that multiplies the selected quantity of the product when it is inserted in the cart.
     */
    @JsonProperty("unitMultiplier")
    public Double unitMultiplier;

    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems withUnitMultiplier(Double unitMultiplier) {
        this.unitMultiplier = unitMultiplier;
        return this;
    }
    
    public ProductSearchWhoSawAlsoSaw200ApplicationJSONItems(@JsonProperty("Videos") Object[] videos, @JsonProperty("complementName") String complementName, @JsonProperty("ean") String ean, @JsonProperty("estimatedDateArrival") String estimatedDateArrival, @JsonProperty("images") ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsImages[] images, @JsonProperty("isKit") Boolean isKit, @JsonProperty("itemId") String itemId, @JsonProperty("kitItems") ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsKitItems[] kitItems, @JsonProperty("measurementUnit") String measurementUnit, @JsonProperty("modalType") String modalType, @JsonProperty("name") String name, @JsonProperty("nameComplete") String nameComplete, @JsonProperty("referenceId") ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsReferenceId[] referenceId, @JsonProperty("sellers") ProductSearchWhoSawAlsoSaw200ApplicationJSONItemsSellers[] sellers, @JsonProperty("unitMultiplier") Double unitMultiplier) {
        this.videos = videos;
        this.complementName = complementName;
        this.ean = ean;
        this.estimatedDateArrival = estimatedDateArrival;
        this.images = images;
        this.isKit = isKit;
        this.itemId = itemId;
        this.kitItems = kitItems;
        this.measurementUnit = measurementUnit;
        this.modalType = modalType;
        this.name = name;
        this.nameComplete = nameComplete;
        this.referenceId = referenceId;
        this.sellers = sellers;
        this.unitMultiplier = unitMultiplier;
  }
}
