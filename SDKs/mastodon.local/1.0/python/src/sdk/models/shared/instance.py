"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import account as shared_account
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Instance:
    r"""Represents the software instance of Mastodon running on this domain.
    https://docs.joinmastodon.org/entities/instance/
    """
    
    approval_required: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approval_required') }})
    r"""Whether registrations require moderator approval."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""Admin-defined description of the Mastodon site."""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""An email that may be contacted for any inquiries."""  
    invites_enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invites_enabled') }})
    r"""Whether invites are enabled."""  
    languages: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languages') }})
    r"""Primary languages of the website and its staff. ISO 639 Part 1-5 language codes."""  
    registrations: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrations') }})
    r"""Whether registrations are enabled."""  
    short_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('short_description') }})
    r"""A shorter description defined by the admin."""  
    stats: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats') }})
    r"""Statistics about how much information the instance contains."""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""The title of the website."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The domain name of the instance."""  
    urls: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('urls') }})
    r"""URLs of interest for clients apps."""  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""The version of Mastodon installed on the instance."""  
    contact_account: Optional[shared_account.Account] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact_account'), 'exclude': lambda f: f is None }})
    r"""Represents a user of Mastodon and their associated profile.
    https://docs.joinmastodon.org/entities/account/
    """  
    thumbnail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnail'), 'exclude': lambda f: f is None }})
    r"""Banner image for the website."""  
    