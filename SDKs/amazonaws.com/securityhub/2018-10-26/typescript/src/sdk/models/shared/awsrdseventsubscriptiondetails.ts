/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Details about an Amazon RDS event notification subscription. The subscription allows Amazon RDS to post events to an SNS topic.
 */
export class AwsRdsEventSubscriptionDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CustSubscriptionId" })
  custSubscriptionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerAwsId" })
  customerAwsId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EventCategoriesList" })
  eventCategoriesList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "EventSubscriptionArn" })
  eventSubscriptionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SnsTopicArn" })
  snsTopicArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceIdsList" })
  sourceIdsList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SourceType" })
  sourceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionCreationTime" })
  subscriptionCreationTime?: string;
}
