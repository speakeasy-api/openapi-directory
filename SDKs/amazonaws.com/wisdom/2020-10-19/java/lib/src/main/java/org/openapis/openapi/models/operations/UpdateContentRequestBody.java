/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateContentRequestBody {
    /**
     * A key/value map to store attributes without affecting tagging or recommendations. For example, when synchronizing data between an external system and Wisdom, you can store an external version identifier as metadata to utilize for determining drift.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public UpdateContentRequestBody withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The URI for the article. If the knowledge base has a templateUri, setting this argument overrides it for this piece of content. To remove an existing &lt;code&gt;overrideLinkOurUri&lt;/code&gt;, exclude this argument and set &lt;code&gt;removeOverrideLinkOutUri&lt;/code&gt; to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overrideLinkOutUri")
    public String overrideLinkOutUri;

    public UpdateContentRequestBody withOverrideLinkOutUri(String overrideLinkOutUri) {
        this.overrideLinkOutUri = overrideLinkOutUri;
        return this;
    }
    
    /**
     * Unset the existing &lt;code&gt;overrideLinkOutUri&lt;/code&gt; if it exists.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removeOverrideLinkOutUri")
    public Boolean removeOverrideLinkOutUri;

    public UpdateContentRequestBody withRemoveOverrideLinkOutUri(Boolean removeOverrideLinkOutUri) {
        this.removeOverrideLinkOutUri = removeOverrideLinkOutUri;
        return this;
    }
    
    /**
     * The &lt;code&gt;revisionId&lt;/code&gt; of the content resource to update, taken from an earlier call to &lt;code&gt;GetContent&lt;/code&gt;, &lt;code&gt;GetContentSummary&lt;/code&gt;, &lt;code&gt;SearchContent&lt;/code&gt;, or &lt;code&gt;ListContents&lt;/code&gt;. If included, this argument acts as an optimistic lock to ensure content was not modified since it was last read. If it has been modified, this API throws a &lt;code&gt;PreconditionFailedException&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionId")
    public String revisionId;

    public UpdateContentRequestBody withRevisionId(String revisionId) {
        this.revisionId = revisionId;
        return this;
    }
    
    /**
     * The title of the content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public UpdateContentRequestBody withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * A pointer to the uploaded asset. This value is returned by &lt;a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html"&gt;StartContentUpload&lt;/a&gt;. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploadId")
    public String uploadId;

    public UpdateContentRequestBody withUploadId(String uploadId) {
        this.uploadId = uploadId;
        return this;
    }
    
    public UpdateContentRequestBody(){}
}
