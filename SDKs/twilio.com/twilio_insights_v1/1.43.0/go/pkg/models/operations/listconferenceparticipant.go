// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListConferenceParticipantServerList = []string{
	"https://insights.twilio.com",
}

type ListConferenceParticipantSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListConferenceParticipantRequest struct {
	// The unique SID identifier of the Conference.
	ConferenceSid string `pathParam:"style=simple,explode=false,name=ConferenceSid"`
	// Conference events generated by application or participant activity; e.g. `hold`, `mute`, etc.
	Events *string `queryParam:"style=form,explode=true,name=Events"`
	// User-specified label for a participant.
	Label *string `queryParam:"style=form,explode=true,name=Label"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The unique SID identifier of the Participant.
	ParticipantSid *string `queryParam:"style=form,explode=true,name=ParticipantSid"`
}

type ListConferenceParticipantListConferenceParticipantResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListConferenceParticipantListConferenceParticipantResponse - OK
type ListConferenceParticipantListConferenceParticipantResponse struct {
	Meta         *ListConferenceParticipantListConferenceParticipantResponseMeta `json:"meta,omitempty"`
	Participants []shared.InsightsV1ConferenceConferenceParticipant              `json:"participants,omitempty"`
}

type ListConferenceParticipantResponse struct {
	ContentType string
	// OK
	ListConferenceParticipantResponse *ListConferenceParticipantListConferenceParticipantResponse
	StatusCode                        int
	RawResponse                       *http.Response
}
