"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import labelcountersforworkteam as shared_labelcountersforworkteam
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LabelingJobForWorkteamSummary:
    r"""Provides summary information for a work team."""
    
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    job_reference_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobReferenceCode') }})  
    work_requester_account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkRequesterAccountId') }})  
    label_counters: Optional[shared_labelcountersforworkteam.LabelCountersForWorkteam] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LabelCounters'), 'exclude': lambda f: f is None }})  
    labeling_job_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LabelingJobName'), 'exclude': lambda f: f is None }})  
    number_of_human_workers_per_data_object: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfHumanWorkersPerDataObject'), 'exclude': lambda f: f is None }})  
    