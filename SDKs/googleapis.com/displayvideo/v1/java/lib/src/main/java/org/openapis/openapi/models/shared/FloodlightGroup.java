/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FloodlightGroup - A single Floodlight group.
 */
public class FloodlightGroup {
    /**
     * Configuration for custom Active View video viewability metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeViewConfig")
    public ActiveViewVideoViewabilityMetricConfig activeViewConfig;
    public FloodlightGroup withActiveViewConfig(ActiveViewVideoViewabilityMetricConfig activeViewConfig) {
        this.activeViewConfig = activeViewConfig;
        return this;
    }
    
    /**
     * User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to create reporting data that is tailored to your unique business needs. Custom Floodlight variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass to them. You can use them to track virtually any type of data that you collect about your customers, such as the genre of movie that a customer purchases, the country to which the item is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could be used or recognized as personally identifiable information (PII). Example: `custom_variables { fields { "U1": value { number_value: 123.4 }, "U2": value { string_value: "MyVariable2" }, "U3": value { string_value: "MyVariable3" } } }` Acceptable values for keys are "U1" through "U100", inclusive. String values must be less than 64 characters long, and cannot contain the following characters: `"&lt;&gt;`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customVariables")
    public java.util.Map<String, Object> customVariables;
    public FloodlightGroup withCustomVariables(java.util.Map<String, Object> customVariables) {
        this.customVariables = customVariables;
        return this;
    }
    
    /**
     * Required. The display name of the Floodlight group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public FloodlightGroup withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Output only. The unique ID of the Floodlight group. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floodlightGroupId")
    public String floodlightGroupId;
    public FloodlightGroup withFloodlightGroupId(String floodlightGroupId) {
        this.floodlightGroupId = floodlightGroupId;
        return this;
    }
    
    /**
     * Specifies how many days into the past to look when determining whether to record a conversion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lookbackWindow")
    public LookbackWindow lookbackWindow;
    public FloodlightGroup withLookbackWindow(LookbackWindow lookbackWindow) {
        this.lookbackWindow = lookbackWindow;
        return this;
    }
    
    /**
     * Output only. The resource name of the Floodlight group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public FloodlightGroup withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. The web tag type enabled for the Floodlight group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webTagType")
    public FloodlightGroupWebTagTypeEnum webTagType;
    public FloodlightGroup withWebTagType(FloodlightGroupWebTagTypeEnum webTagType) {
        this.webTagType = webTagType;
        return this;
    }
    
}
