// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReposListPublicVisibilityEnum - Specifies the types of repositories to return. This endpoint will only list repositories available to all users on the enterprise.
type ReposListPublicVisibilityEnum string

const (
	ReposListPublicVisibilityEnumAll    ReposListPublicVisibilityEnum = "all"
	ReposListPublicVisibilityEnumPublic ReposListPublicVisibilityEnum = "public"
)

func (e *ReposListPublicVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "public":
		*e = ReposListPublicVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReposListPublicVisibilityEnum: %s", s)
	}
}

type ReposListPublicQueryParams struct {
	// A repository ID. Only return repositories with an ID greater than this ID.
	Since *int64 `queryParam:"style=form,explode=true,name=since"`
	// Specifies the types of repositories to return. This endpoint will only list repositories available to all users on the enterprise.
	Visibility *ReposListPublicVisibilityEnum `queryParam:"style=form,explode=true,name=visibility"`
}

type ReposListPublicRequest struct {
	QueryParams ReposListPublicQueryParams
}

type ReposListPublicResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	MinimalRepositories []shared.MinimalRepository
	// Validation failed
	ValidationError *shared.ValidationError
}
