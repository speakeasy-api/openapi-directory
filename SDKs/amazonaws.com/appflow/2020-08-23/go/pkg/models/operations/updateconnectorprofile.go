// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateConnectorProfileRequestBodyConnectionModeEnum -  Indicates the connection mode and if it is public or private.
type UpdateConnectorProfileRequestBodyConnectionModeEnum string

const (
	UpdateConnectorProfileRequestBodyConnectionModeEnumPublic  UpdateConnectorProfileRequestBodyConnectionModeEnum = "Public"
	UpdateConnectorProfileRequestBodyConnectionModeEnumPrivate UpdateConnectorProfileRequestBodyConnectionModeEnum = "Private"
)

func (e *UpdateConnectorProfileRequestBodyConnectionModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Public":
		fallthrough
	case "Private":
		*e = UpdateConnectorProfileRequestBodyConnectionModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateConnectorProfileRequestBodyConnectionModeEnum: %s", s)
	}
}

// UpdateConnectorProfileRequestBodyConnectorProfileConfig -  Defines the connector-specific configuration and credentials for the connector profile.
type UpdateConnectorProfileRequestBodyConnectorProfileConfig struct {
	ConnectorProfileCredentials *shared.ConnectorProfileCredentials `json:"connectorProfileCredentials,omitempty"`
	ConnectorProfileProperties  *shared.ConnectorProfileProperties  `json:"connectorProfileProperties,omitempty"`
}

type UpdateConnectorProfileRequestBody struct {
	//  Indicates the connection mode and if it is public or private.
	ConnectionMode UpdateConnectorProfileRequestBodyConnectionModeEnum `json:"connectionMode"`
	//  Defines the connector-specific configuration and credentials for the connector profile.
	ConnectorProfileConfig UpdateConnectorProfileRequestBodyConnectorProfileConfig `json:"connectorProfileConfig"`
	//  The name of the connector profile and is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account.
	ConnectorProfileName string `json:"connectorProfileName"`
}

type UpdateConnectorProfileRequest struct {
	RequestBody       UpdateConnectorProfileRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateConnectorProfileResponse struct {
	// ConflictException
	ConflictException interface{}
	// ConnectorAuthenticationException
	ConnectorAuthenticationException interface{}
	ContentType                      string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateConnectorProfileResponse *shared.UpdateConnectorProfileResponse
	// ValidationException
	ValidationException interface{}
}
