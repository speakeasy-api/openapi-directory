<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChartData - The data included in a domain or series.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChartData
{
    /**
     * The aggregation type for the series of a data source chart. Only supported for data source charts.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChartDataAggregateTypeEnum $aggregateType
     */
	#[\JMS\Serializer\Annotation\SerializedName('aggregateType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ChartDataAggregateTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChartDataAggregateTypeEnum $aggregateType = null;
    
    /**
     * An unique identifier that references a data source column.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DataSourceColumnReference $columnReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnReference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DataSourceColumnReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DataSourceColumnReference $columnReference = null;
    
    /**
     * An optional setting on the ChartData of the domain of a data source chart that defines buckets for the values in the domain rather than breaking out each individual value. For example, when plotting a data source chart, you can specify a histogram rule on the domain (it should only contain numeric values), grouping its values into buckets. Any values of a chart series that fall into the same bucket are aggregated based on the aggregate_type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChartGroupRule $groupRule
     */
	#[\JMS\Serializer\Annotation\SerializedName('groupRule')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChartGroupRule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChartGroupRule $groupRule = null;
    
    /**
     * Source ranges for a chart.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChartSourceRange $sourceRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChartSourceRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChartSourceRange $sourceRange = null;
    
	public function __construct()
	{
		$this->aggregateType = null;
		$this->columnReference = null;
		$this->groupRule = null;
		$this->sourceRange = null;
	}
}
