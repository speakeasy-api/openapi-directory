// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateConnectorDefinitionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// A client token used to correlate requests and responses.
	XAmznClientToken *string `header:"style=simple,explode=false,name=X-Amzn-Client-Token"`
}

// CreateConnectorDefinitionRequestBodyInitialVersion - Information about the connector definition version, which is a container for connectors.
type CreateConnectorDefinitionRequestBodyInitialVersion struct {
	Connectors []shared.Connector `json:"Connectors,omitempty"`
}

type CreateConnectorDefinitionRequestBody struct {
	// Information about the connector definition version, which is a container for connectors.
	InitialVersion *CreateConnectorDefinitionRequestBodyInitialVersion `json:"InitialVersion,omitempty"`
	// The name of the connector definition.
	Name *string `json:"Name,omitempty"`
	// The key-value pair for the resource tag.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateConnectorDefinitionRequest struct {
	Headers CreateConnectorDefinitionHeaders
	Request CreateConnectorDefinitionRequestBody `request:"mediaType=application/json"`
}

type CreateConnectorDefinitionResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateConnectorDefinitionResponse *shared.CreateConnectorDefinitionResponse
	StatusCode                        int
	RawResponse                       *http.Response
}
