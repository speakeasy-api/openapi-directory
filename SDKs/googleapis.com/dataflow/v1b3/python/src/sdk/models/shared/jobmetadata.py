"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bigqueryiodetails as shared_bigqueryiodetails
from ..shared import bigtableiodetails as shared_bigtableiodetails
from ..shared import datastoreiodetails as shared_datastoreiodetails
from ..shared import fileiodetails as shared_fileiodetails
from ..shared import pubsubiodetails as shared_pubsubiodetails
from ..shared import sdkversion as shared_sdkversion
from ..shared import spanneriodetails as shared_spanneriodetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobMetadata:
    r"""Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view."""
    
    bigquery_details: Optional[list[shared_bigqueryiodetails.BigQueryIODetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigqueryDetails'), 'exclude': lambda f: f is None }})
    r"""Identification of a BigQuery source used in the Dataflow job."""  
    big_table_details: Optional[list[shared_bigtableiodetails.BigTableIODetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigTableDetails'), 'exclude': lambda f: f is None }})
    r"""Identification of a Cloud Bigtable source used in the Dataflow job."""  
    datastore_details: Optional[list[shared_datastoreiodetails.DatastoreIODetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datastoreDetails'), 'exclude': lambda f: f is None }})
    r"""Identification of a Datastore source used in the Dataflow job."""  
    file_details: Optional[list[shared_fileiodetails.FileIODetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileDetails'), 'exclude': lambda f: f is None }})
    r"""Identification of a File source used in the Dataflow job."""  
    pubsub_details: Optional[list[shared_pubsubiodetails.PubSubIODetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pubsubDetails'), 'exclude': lambda f: f is None }})
    r"""Identification of a Pub/Sub source used in the Dataflow job."""  
    sdk_version: Optional[shared_sdkversion.SDKVersion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sdkVersion'), 'exclude': lambda f: f is None }})
    r"""The version of the SDK used to run the job."""  
    spanner_details: Optional[list[shared_spanneriodetails.SpannerIODetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spannerDetails'), 'exclude': lambda f: f is None }})
    r"""Identification of a Spanner source used in the Dataflow job."""  
    user_display_properties: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userDisplayProperties'), 'exclude': lambda f: f is None }})
    r"""List of display properties to help UI filter jobs."""  
    