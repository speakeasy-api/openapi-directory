// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// GETDescribeAlarmHistoryActionEnum
type GETDescribeAlarmHistoryActionEnum string

const (
	GETDescribeAlarmHistoryActionEnumDescribeAlarmHistory GETDescribeAlarmHistoryActionEnum = "DescribeAlarmHistory"
)

func (e GETDescribeAlarmHistoryActionEnum) ToPointer() *GETDescribeAlarmHistoryActionEnum {
	return &e
}

func (e *GETDescribeAlarmHistoryActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeAlarmHistory":
		*e = GETDescribeAlarmHistoryActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAlarmHistoryActionEnum: %v", v)
	}
}

// GETDescribeAlarmHistoryHistoryItemTypeEnum - The type of alarm histories to retrieve.
type GETDescribeAlarmHistoryHistoryItemTypeEnum string

const (
	GETDescribeAlarmHistoryHistoryItemTypeEnumConfigurationUpdate GETDescribeAlarmHistoryHistoryItemTypeEnum = "ConfigurationUpdate"
	GETDescribeAlarmHistoryHistoryItemTypeEnumStateUpdate         GETDescribeAlarmHistoryHistoryItemTypeEnum = "StateUpdate"
	GETDescribeAlarmHistoryHistoryItemTypeEnumAction              GETDescribeAlarmHistoryHistoryItemTypeEnum = "Action"
)

func (e GETDescribeAlarmHistoryHistoryItemTypeEnum) ToPointer() *GETDescribeAlarmHistoryHistoryItemTypeEnum {
	return &e
}

func (e *GETDescribeAlarmHistoryHistoryItemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ConfigurationUpdate":
		fallthrough
	case "StateUpdate":
		fallthrough
	case "Action":
		*e = GETDescribeAlarmHistoryHistoryItemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAlarmHistoryHistoryItemTypeEnum: %v", v)
	}
}

// GETDescribeAlarmHistoryScanByEnum - Specified whether to return the newest or oldest alarm history first. Specify <code>TimestampDescending</code> to have the newest event history returned first, and specify <code>TimestampAscending</code> to have the oldest history returned first.
type GETDescribeAlarmHistoryScanByEnum string

const (
	GETDescribeAlarmHistoryScanByEnumTimestampDescending GETDescribeAlarmHistoryScanByEnum = "TimestampDescending"
	GETDescribeAlarmHistoryScanByEnumTimestampAscending  GETDescribeAlarmHistoryScanByEnum = "TimestampAscending"
)

func (e GETDescribeAlarmHistoryScanByEnum) ToPointer() *GETDescribeAlarmHistoryScanByEnum {
	return &e
}

func (e *GETDescribeAlarmHistoryScanByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TimestampDescending":
		fallthrough
	case "TimestampAscending":
		*e = GETDescribeAlarmHistoryScanByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAlarmHistoryScanByEnum: %v", v)
	}
}

// GETDescribeAlarmHistoryVersionEnum
type GETDescribeAlarmHistoryVersionEnum string

const (
	GETDescribeAlarmHistoryVersionEnumTwoThousandAndTen0801 GETDescribeAlarmHistoryVersionEnum = "2010-08-01"
)

func (e GETDescribeAlarmHistoryVersionEnum) ToPointer() *GETDescribeAlarmHistoryVersionEnum {
	return &e
}

func (e *GETDescribeAlarmHistoryVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = GETDescribeAlarmHistoryVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAlarmHistoryVersionEnum: %v", v)
	}
}

type GETDescribeAlarmHistoryRequest struct {
	Action GETDescribeAlarmHistoryActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the alarm.
	AlarmName *string `queryParam:"style=form,explode=true,name=AlarmName"`
	// Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.
	AlarmTypes []shared.AlarmTypeEnum `queryParam:"style=form,explode=true,name=AlarmTypes"`
	// The ending date to retrieve alarm history.
	EndDate *time.Time `queryParam:"style=form,explode=true,name=EndDate"`
	// The type of alarm histories to retrieve.
	HistoryItemType *GETDescribeAlarmHistoryHistoryItemTypeEnum `queryParam:"style=form,explode=true,name=HistoryItemType"`
	// The maximum number of alarm history records to retrieve.
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The token returned by a previous call to indicate that there is more data available.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// Specified whether to return the newest or oldest alarm history first. Specify <code>TimestampDescending</code> to have the newest event history returned first, and specify <code>TimestampAscending</code> to have the oldest history returned first.
	ScanBy *GETDescribeAlarmHistoryScanByEnum `queryParam:"style=form,explode=true,name=ScanBy"`
	// The starting date to retrieve alarm history.
	StartDate         *time.Time                         `queryParam:"style=form,explode=true,name=StartDate"`
	Version           GETDescribeAlarmHistoryVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeAlarmHistoryResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
