// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FailedItemReasonEnum string

const (
	FailedItemReasonEnumNotValidArn          FailedItemReasonEnum = "NOT_VALID_ARN"
	FailedItemReasonEnumNotValidPartition    FailedItemReasonEnum = "NOT_VALID_PARTITION"
	FailedItemReasonEnumNotValidRegion       FailedItemReasonEnum = "NOT_VALID_REGION"
	FailedItemReasonEnumNotValidService      FailedItemReasonEnum = "NOT_VALID_SERVICE"
	FailedItemReasonEnumNotValidResourceType FailedItemReasonEnum = "NOT_VALID_RESOURCE_TYPE"
	FailedItemReasonEnumNotValidAccountID    FailedItemReasonEnum = "NOT_VALID_ACCOUNT_ID"
)

func (e FailedItemReasonEnum) ToPointer() *FailedItemReasonEnum {
	return &e
}

func (e *FailedItemReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_VALID_ARN":
		fallthrough
	case "NOT_VALID_PARTITION":
		fallthrough
	case "NOT_VALID_REGION":
		fallthrough
	case "NOT_VALID_SERVICE":
		fallthrough
	case "NOT_VALID_RESOURCE_TYPE":
		fallthrough
	case "NOT_VALID_ACCOUNT_ID":
		*e = FailedItemReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailedItemReasonEnum: %v", v)
	}
}
