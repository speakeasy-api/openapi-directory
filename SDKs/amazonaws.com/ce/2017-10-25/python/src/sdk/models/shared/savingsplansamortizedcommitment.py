"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SavingsPlansAmortizedCommitment:
    r"""The amortized amount of Savings Plans purchased in a specific account during a specific time interval."""
    
    amortized_recurring_commitment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmortizedRecurringCommitment'), 'exclude': lambda f: f is None }})  
    amortized_upfront_commitment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmortizedUpfrontCommitment'), 'exclude': lambda f: f is None }})  
    total_amortized_commitment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalAmortizedCommitment'), 'exclude': lambda f: f is None }})  
    