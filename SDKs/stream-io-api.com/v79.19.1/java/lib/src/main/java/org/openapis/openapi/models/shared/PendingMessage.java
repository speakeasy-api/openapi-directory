/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PendingMessage {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public java.util.Map<String, Object> channel;
    public PendingMessage withChannel(java.util.Map<String, Object> channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Represents any chat message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public java.util.Map<String, Object> message;
    public PendingMessage withMessage(java.util.Map<String, Object> message) {
        this.message = message;
        return this;
    }
    
    /**
     * Additional data attached to the pending message. This data is discarded once the pending message is committed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;
    public PendingMessage withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Represents chat user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;
    public PendingMessage withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
}
