"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import consentartefactreference as shared_consentartefactreference
from ..shared import consentstatus_enum as shared_consentstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HIUConsentNotificationEventNotification:
    
    consent_request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consentRequestId') }})  
    status: shared_consentstatus_enum.ConsentStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    consent_artefacts: Optional[list[shared_consentartefactreference.ConsentArtefactReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consentArtefacts'), 'exclude': lambda f: f is None }})
    r"""if the status is GRANTED or REVOKED, then the consentArtefact references (Ids) must be specified."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HIUConsentNotificationEvent:
    
    notification: HIUConsentNotificationEventNotification = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notification') }})  
    request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId') }})
    r"""a nonce, unique for each HTTP request"""  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"""  
    