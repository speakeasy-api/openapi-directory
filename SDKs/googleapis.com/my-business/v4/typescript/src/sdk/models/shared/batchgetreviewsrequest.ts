/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request message for Reviews.BatchGetReviews.
 */
export class BatchGetReviewsRequest extends SpeakeasyBase {
  /**
   * Whether to ignore rating-only reviews.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ignoreRatingOnlyReviews" })
  ignoreRatingOnlyReviews?: boolean;

  /**
   * A collection of locations to fetch reviews for, specified by their names.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationNames" })
  locationNames?: string[];

  /**
   * Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderBy" })
  orderBy?: string;

  /**
   * How many reviews to fetch per page. The default value is 200.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize?: number;

  /**
   * If specified, it fetches the next page of reviews.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageToken" })
  pageToken?: string;
}
