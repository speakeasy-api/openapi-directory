/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Stop {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public Address address;

    public Stop withAddress(Address address) {
        this.address = address;
        return this;
    }
    
    /**
     * Specifies the duration of the pickup or delivery in seconds, e.g. how long it takes unload items at the customer site.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;

    public Stop withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Group this stop belongs to. See the group relation and [this post](https://discuss.graphhopper.com/t/4040) on how to utilize this.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public String group;

    public Stop withGroup(String group) {
        this.group = group;
        return this;
    }
    
    /**
     * Specifies the preparation time in seconds. It can be used to model parking lot search time since if you have 3 identical locations in a row, it only falls due once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preparation_time")
    public Long preparationTime;

    public Stop withPreparationTime(Long preparationTime) {
        this.preparationTime = preparationTime;
        return this;
    }
    
    /**
     * Specifies an array of time window objects (see time window object below). For example, if an item needs to be delivered between 7am and 10am then specify the array as follows: [ { "earliest": 25200, "latest" : 32400 } ] (starting the day from 0 in seconds).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time_windows")
    public TimeWindow[] timeWindows;

    public Stop withTimeWindows(TimeWindow[] timeWindows) {
        this.timeWindows = timeWindows;
        return this;
    }
    
    public Stop(){}
}
