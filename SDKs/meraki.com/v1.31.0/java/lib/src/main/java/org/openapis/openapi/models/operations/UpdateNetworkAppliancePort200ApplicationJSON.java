/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateNetworkAppliancePort200ApplicationJSON - Successful operation
 */
public class UpdateNetworkAppliancePort200ApplicationJSON {
    /**
     * The name of the policy. Only applicable to Access ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessPolicy")
    public String accessPolicy;
    public UpdateNetworkAppliancePort200ApplicationJSON withAccessPolicy(String accessPolicy) {
        this.accessPolicy = accessPolicy;
        return this;
    }
    
    /**
     * Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedVlans")
    public String allowedVlans;
    public UpdateNetworkAppliancePort200ApplicationJSON withAllowedVlans(String allowedVlans) {
        this.allowedVlans = allowedVlans;
        return this;
    }
    
    /**
     * Whether the trunk port can drop all untagged traffic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dropUntaggedTraffic")
    public Boolean dropUntaggedTraffic;
    public UpdateNetworkAppliancePort200ApplicationJSON withDropUntaggedTraffic(Boolean dropUntaggedTraffic) {
        this.dropUntaggedTraffic = dropUntaggedTraffic;
        return this;
    }
    
    /**
     * The status of the port
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public UpdateNetworkAppliancePort200ApplicationJSON withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Number of the port
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Long number;
    public UpdateNetworkAppliancePort200ApplicationJSON withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    /**
     * The type of the port: 'access' or 'trunk'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public UpdateNetworkAppliancePort200ApplicationJSON withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Long vlan;
    public UpdateNetworkAppliancePort200ApplicationJSON withVlan(Long vlan) {
        this.vlan = vlan;
        return this;
    }
    
}
