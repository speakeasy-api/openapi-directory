/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CalendarTypeEnum } from "./calendartypeenum";
import { ValidationError } from "./validationerror";
import { Expose, Type } from "class-transformer";

export class PayrollCalendar extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CalendarType" })
  calendarType?: CalendarTypeEnum;

  /**
   * Name of the Payroll Calendar
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The date on which employees will be paid for the upcoming pay period (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentDate" })
  paymentDate?: string;

  /**
   * Xero identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayrollCalendarID" })
  payrollCalendarID?: string;

  /**
   * The start date of the upcoming pay period. The end date will be calculated based upon this date, and the calendar type selected (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;

  /**
   * Last modified timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDateUTC" })
  updatedDateUTC?: string;

  /**
   * Displays array of validation error messages from the API
   */
  @SpeakeasyMetadata({ elemType: ValidationError })
  @Expose({ name: "ValidationErrors" })
  @Type(() => ValidationError)
  validationErrors?: ValidationError[];
}

export class PayrollCalendarInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CalendarType" })
  calendarType?: CalendarTypeEnum;

  /**
   * Name of the Payroll Calendar
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The date on which employees will be paid for the upcoming pay period (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentDate" })
  paymentDate?: string;

  /**
   * Xero identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayrollCalendarID" })
  payrollCalendarID?: string;

  /**
   * The start date of the upcoming pay period. The end date will be calculated based upon this date, and the calendar type selected (YYYY-MM-DD)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;

  /**
   * Displays array of validation error messages from the API
   */
  @SpeakeasyMetadata({ elemType: ValidationError })
  @Expose({ name: "ValidationErrors" })
  @Type(() => ValidationError)
  validationErrors?: ValidationError[];
}
