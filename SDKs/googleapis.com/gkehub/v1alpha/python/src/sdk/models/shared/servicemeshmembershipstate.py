"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import servicemeshanalysismessage as shared_servicemeshanalysismessage
from ..shared import servicemeshcontrolplanemanagement as shared_servicemeshcontrolplanemanagement
from ..shared import servicemeshdataplanemanagement as shared_servicemeshdataplanemanagement
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServiceMeshMembershipState:
    r"""**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller."""
    
    analysis_messages: Optional[list[shared_servicemeshanalysismessage.ServiceMeshAnalysisMessage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysisMessages'), 'exclude': lambda f: f is None }})
    r"""Output only. Results of running Service Mesh analyzers."""  
    config_api_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configApiVersion'), 'exclude': lambda f: f is None }})
    r"""The API version (i.e. Istio CRD version) for configuring service mesh in this cluster. This version is influenced by the `default_channel` field."""  
    control_plane_management: Optional[shared_servicemeshcontrolplanemanagement.ServiceMeshControlPlaneManagement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('controlPlaneManagement'), 'exclude': lambda f: f is None }})
    r"""Status of control plane management."""  
    data_plane_management: Optional[shared_servicemeshdataplanemanagement.ServiceMeshDataPlaneManagement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataPlaneManagement'), 'exclude': lambda f: f is None }})
    r"""Status of data plane management. Only reported per-member."""  
    