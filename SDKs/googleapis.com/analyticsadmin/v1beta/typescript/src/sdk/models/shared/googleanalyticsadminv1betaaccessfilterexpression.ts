/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1betaAccessFilter } from "./googleanalyticsadminv1betaaccessfilter";
import { GoogleAnalyticsAdminV1betaAccessFilterExpressionList } from "./googleanalyticsadminv1betaaccessfilterexpressionlist";
import { Expose, Type } from "class-transformer";

/**
 * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
 */
export class GoogleAnalyticsAdminV1betaAccessFilterExpression extends SpeakeasyBase {
  /**
   * An expression to filter dimension or metric values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessFilter" })
  @Type(() => GoogleAnalyticsAdminV1betaAccessFilter)
  accessFilter?: GoogleAnalyticsAdminV1betaAccessFilter;

  /**
   * A list of filter expressions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "andGroup" })
  @Type(() => GoogleAnalyticsAdminV1betaAccessFilterExpressionList)
  andGroup?: GoogleAnalyticsAdminV1betaAccessFilterExpressionList;

  /**
   * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notExpression" })
  @Type(() => GoogleAnalyticsAdminV1betaAccessFilterExpression)
  notExpression?: GoogleAnalyticsAdminV1betaAccessFilterExpression;

  /**
   * A list of filter expressions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orGroup" })
  @Type(() => GoogleAnalyticsAdminV1betaAccessFilterExpressionList)
  orGroup?: GoogleAnalyticsAdminV1betaAccessFilterExpressionList;
}
