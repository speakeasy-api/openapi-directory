"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import paragraphstyle as shared_paragraphstyle
from ..shared import range as shared_range
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateParagraphStyleRequest:
    r"""Update the styling of all paragraphs that overlap with the given range."""
    
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `paragraph_style` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example, to update the paragraph style's alignment property, set `fields` to `\\"alignment\\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset."""  
    paragraph_style: Optional[shared_paragraphstyle.ParagraphStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraphStyle'), 'exclude': lambda f: f is None }})
    r"""Styles that apply to a whole paragraph. Inherited paragraph styles are represented as unset fields in this message. A paragraph style's parent depends on where the paragraph style is defined: * The ParagraphStyle on a Paragraph inherits from the paragraph's corresponding named style type. * The ParagraphStyle on a named style inherits from the normal text named style. * The ParagraphStyle of the normal text named style inherits from the default paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element that's contained in a table may inherit its paragraph style from the table style. If the paragraph style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor."""  
    range: Optional[shared_range.Range] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('range'), 'exclude': lambda f: f is None }})
    r"""Specifies a contiguous range of text."""  
    