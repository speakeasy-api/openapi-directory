"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetBlobByIDRequest:
    
    filename: str = dataclasses.field(metadata={'path_param': { 'field_name': 'filename', 'style': 'simple', 'explode': False }})
    r"""Filename of the blob."""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Unique identifier"""  
    

@dataclasses.dataclass
class GetBlobByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_blob_by_id_200_image_wildcard_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""The stored binary blob"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    