// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LaunchProfileStateEnum string

const (
	LaunchProfileStateEnumCreateInProgress LaunchProfileStateEnum = "CREATE_IN_PROGRESS"
	LaunchProfileStateEnumReady            LaunchProfileStateEnum = "READY"
	LaunchProfileStateEnumUpdateInProgress LaunchProfileStateEnum = "UPDATE_IN_PROGRESS"
	LaunchProfileStateEnumDeleteInProgress LaunchProfileStateEnum = "DELETE_IN_PROGRESS"
	LaunchProfileStateEnumDeleted          LaunchProfileStateEnum = "DELETED"
	LaunchProfileStateEnumDeleteFailed     LaunchProfileStateEnum = "DELETE_FAILED"
	LaunchProfileStateEnumCreateFailed     LaunchProfileStateEnum = "CREATE_FAILED"
	LaunchProfileStateEnumUpdateFailed     LaunchProfileStateEnum = "UPDATE_FAILED"
)

func (e *LaunchProfileStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "READY":
		fallthrough
	case "UPDATE_IN_PROGRESS":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "DELETED":
		fallthrough
	case "DELETE_FAILED":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "UPDATE_FAILED":
		*e = LaunchProfileStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LaunchProfileStateEnum: %s", s)
	}
}
