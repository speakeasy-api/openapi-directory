/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceIdentifier } from "./resourceidentifier";
import { Expose, Transform, Type } from "class-transformer";

/**
 * This will be replaced by the relationship `classification` in a future update.<br/>
 */
export enum ClassificationInclusionAttributesClassificationTypeEnum {
  AlternateFeedType = "AlternateFeedType",
  Genre = "Genre",
  Industry = "Industry",
  Language = "Language",
  MediaRating = "MediaRating",
}

/**
 * This will be replaced by the relationship `classified` in a future update.<br/>
 */
export enum ClassificationInclusionAttributesClassifiedTypeEnum {
  Series = "Series",
  Season = "Season",
  Episode = "Episode",
}

export class ClassificationInclusionAttributes extends SpeakeasyBase {
  /**
   * This will be replaced by the relationship `classification` in a future update.<br/>
   *
   * @remarks
   * The ID of the classification linked to the entity
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification_id" })
  classificationId?: string;

  /**
   * This will be replaced by the relationship `classification` in a future update.<br/>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification_type" })
  classificationType?: ClassificationInclusionAttributesClassificationTypeEnum;

  /**
   * This will be replaced by the relationship `classified` in a future update.<br/>
   *
   * @remarks
   * The ID of the entity linked to the classification
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classified_id" })
  classifiedId?: string;

  /**
   * This will be replaced by the relationship `classified` in a future update.<br/>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classified_type" })
  classifiedType?: ClassificationInclusionAttributesClassifiedTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The position or order of the linked classification within the classified resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position?: number;

  /**
   * When `true` it describes the best classification of a specific type for a given
   *
   * @remarks
   * classified item
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

export class ClassificationInclusionRelationshipsClassification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class ClassificationInclusionRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  @Type(() => ClassificationInclusionRelationshipsClassification)
  classification?: ClassificationInclusionRelationshipsClassification;
}

/**
 * Connects a Classification with a classified item like a Series, Season or Episode.
 *
 * @remarks
 *
 */
export class ClassificationInclusion extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => ClassificationInclusionAttributes)
  attributes?: ClassificationInclusionAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => ClassificationInclusionRelationships)
  relationships?: ClassificationInclusionRelationships;

  /**
   * The type of resource. This is always `classification_inclusion`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
