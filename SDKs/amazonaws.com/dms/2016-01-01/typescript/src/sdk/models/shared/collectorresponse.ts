/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CollectorHealthCheck } from "./collectorhealthcheck";
import { InventoryData } from "./inventorydata";
import { VersionStatusEnum } from "./versionstatusenum";
import { Expose, Type } from "class-transformer";

/**
 * Describes a Fleet Advisor collector.
 */
export class CollectorResponse extends SpeakeasyBase {
  /**
   * Describes the last Fleet Advisor collector health check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CollectorHealthCheck" })
  @Type(() => CollectorHealthCheck)
  collectorHealthCheck?: CollectorHealthCheck;

  @SpeakeasyMetadata()
  @Expose({ name: "CollectorName" })
  collectorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CollectorReferencedId" })
  collectorReferencedId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CollectorVersion" })
  collectorVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  createdDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * Describes a Fleet Advisor collector inventory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InventoryData" })
  @Type(() => InventoryData)
  inventoryData?: InventoryData;

  @SpeakeasyMetadata()
  @Expose({ name: "LastDataReceived" })
  lastDataReceived?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModifiedDate" })
  modifiedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RegisteredDate" })
  registeredDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3BucketName" })
  s3BucketName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceAccessRoleArn" })
  serviceAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VersionStatus" })
  versionStatus?: VersionStatusEnum;
}
