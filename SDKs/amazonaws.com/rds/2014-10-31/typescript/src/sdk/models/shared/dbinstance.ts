/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActivityStreamModeEnum } from "./activitystreammodeenum";
import { ActivityStreamPolicyStatusEnum } from "./activitystreampolicystatusenum";
import { ActivityStreamStatusEnum } from "./activitystreamstatusenum";
import { AutomationModeEnum } from "./automationmodeenum";
import { CertificateDetails } from "./certificatedetails";
import { DBInstanceAutomatedBackupsReplicationList } from "./dbinstanceautomatedbackupsreplicationlist";
import { DBInstanceRoles } from "./dbinstanceroles";
import { DBInstanceStatusInfoList } from "./dbinstancestatusinfolist";
import { DBParameterGroupStatusList } from "./dbparametergroupstatuslist";
import { DBSecurityGroupMembershipList } from "./dbsecuritygroupmembershiplist";
import { DBSubnetGroup } from "./dbsubnetgroup";
import { DomainMembershipList } from "./domainmembershiplist";
import { Endpoint } from "./endpoint";
import { MasterUserSecret } from "./masterusersecret";
import { OptionGroupMembershipList } from "./optiongroupmembershiplist";
import { PendingModifiedValues } from "./pendingmodifiedvalues";
import { ProcessorFeatureList } from "./processorfeaturelist";
import { ReplicaModeEnum } from "./replicamodeenum";
import { TagList } from "./taglist";
import { VpcSecurityGroupMembershipList } from "./vpcsecuritygroupmembershiplist";

/**
 * <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
 */
export class DBInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  activityStreamEngineNativeAuditFieldsIncluded?: boolean;

  @SpeakeasyMetadata()
  activityStreamKinesisStreamName?: string;

  @SpeakeasyMetadata()
  activityStreamKmsKeyId?: string;

  @SpeakeasyMetadata()
  activityStreamMode?: ActivityStreamModeEnum;

  @SpeakeasyMetadata()
  activityStreamPolicyStatus?: ActivityStreamPolicyStatusEnum;

  @SpeakeasyMetadata()
  activityStreamStatus?: ActivityStreamStatusEnum;

  @SpeakeasyMetadata()
  allocatedStorage?: number;

  @SpeakeasyMetadata({ elemType: DBInstanceRoles })
  associatedRoles?: DBInstanceRoles[];

  @SpeakeasyMetadata()
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata()
  automaticRestartTime?: Date;

  @SpeakeasyMetadata()
  automationMode?: AutomationModeEnum;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  awsBackupRecoveryPointArn?: string;

  @SpeakeasyMetadata()
  backupRetentionPeriod?: number;

  @SpeakeasyMetadata()
  backupTarget?: string;

  @SpeakeasyMetadata()
  caCertificateIdentifier?: string;

  @SpeakeasyMetadata()
  certificateDetails?: CertificateDetails;

  @SpeakeasyMetadata()
  characterSetName?: string;

  @SpeakeasyMetadata()
  copyTagsToSnapshot?: boolean;

  @SpeakeasyMetadata()
  customIamInstanceProfile?: string;

  @SpeakeasyMetadata()
  customerOwnedIpEnabled?: boolean;

  @SpeakeasyMetadata()
  dbClusterIdentifier?: string;

  @SpeakeasyMetadata()
  dbInstanceArn?: string;

  @SpeakeasyMetadata({ elemType: DBInstanceAutomatedBackupsReplicationList })
  dbInstanceAutomatedBackupsReplications?: DBInstanceAutomatedBackupsReplicationList[];

  @SpeakeasyMetadata()
  dbInstanceClass?: string;

  @SpeakeasyMetadata()
  dbInstanceIdentifier?: string;

  @SpeakeasyMetadata()
  dbInstanceStatus?: string;

  @SpeakeasyMetadata()
  dbName?: string;

  @SpeakeasyMetadata({ elemType: DBParameterGroupStatusList })
  dbParameterGroups?: DBParameterGroupStatusList[];

  @SpeakeasyMetadata({ elemType: DBSecurityGroupMembershipList })
  dbSecurityGroups?: DBSecurityGroupMembershipList[];

  @SpeakeasyMetadata()
  dbSubnetGroup?: DBSubnetGroup;

  @SpeakeasyMetadata()
  dbSystemId?: string;

  @SpeakeasyMetadata()
  dbInstancePort?: number;

  @SpeakeasyMetadata()
  dbiResourceId?: string;

  @SpeakeasyMetadata()
  deletionProtection?: boolean;

  @SpeakeasyMetadata({ elemType: DomainMembershipList })
  domainMemberships?: DomainMembershipList[];

  @SpeakeasyMetadata()
  enabledCloudwatchLogsExports?: string[];

  @SpeakeasyMetadata()
  endpoint?: Endpoint;

  @SpeakeasyMetadata()
  engine?: string;

  @SpeakeasyMetadata()
  engineVersion?: string;

  @SpeakeasyMetadata()
  enhancedMonitoringResourceArn?: string;

  @SpeakeasyMetadata()
  iamDatabaseAuthenticationEnabled?: boolean;

  @SpeakeasyMetadata()
  instanceCreateTime?: Date;

  @SpeakeasyMetadata()
  iops?: number;

  @SpeakeasyMetadata()
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  latestRestorableTime?: Date;

  @SpeakeasyMetadata()
  licenseModel?: string;

  @SpeakeasyMetadata()
  listenerEndpoint?: Endpoint;

  @SpeakeasyMetadata()
  masterUserSecret?: MasterUserSecret;

  @SpeakeasyMetadata()
  masterUsername?: string;

  @SpeakeasyMetadata()
  maxAllocatedStorage?: number;

  @SpeakeasyMetadata()
  monitoringInterval?: number;

  @SpeakeasyMetadata()
  monitoringRoleArn?: string;

  @SpeakeasyMetadata()
  multiAZ?: boolean;

  @SpeakeasyMetadata()
  ncharCharacterSetName?: string;

  @SpeakeasyMetadata()
  networkType?: string;

  @SpeakeasyMetadata({ elemType: OptionGroupMembershipList })
  optionGroupMemberships?: OptionGroupMembershipList[];

  @SpeakeasyMetadata()
  pendingModifiedValues?: PendingModifiedValues;

  @SpeakeasyMetadata()
  performanceInsightsEnabled?: boolean;

  @SpeakeasyMetadata()
  performanceInsightsKMSKeyId?: string;

  @SpeakeasyMetadata()
  performanceInsightsRetentionPeriod?: number;

  @SpeakeasyMetadata()
  preferredBackupWindow?: string;

  @SpeakeasyMetadata()
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata({ elemType: ProcessorFeatureList })
  processorFeatures?: ProcessorFeatureList[];

  @SpeakeasyMetadata()
  promotionTier?: number;

  @SpeakeasyMetadata()
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  readReplicaDBClusterIdentifiers?: string[];

  @SpeakeasyMetadata()
  readReplicaDBInstanceIdentifiers?: string[];

  @SpeakeasyMetadata()
  readReplicaSourceDBClusterIdentifier?: string;

  @SpeakeasyMetadata()
  readReplicaSourceDBInstanceIdentifier?: string;

  @SpeakeasyMetadata()
  replicaMode?: ReplicaModeEnum;

  @SpeakeasyMetadata()
  resumeFullAutomationModeTime?: Date;

  @SpeakeasyMetadata()
  secondaryAvailabilityZone?: string;

  @SpeakeasyMetadata({ elemType: DBInstanceStatusInfoList })
  statusInfos?: DBInstanceStatusInfoList[];

  @SpeakeasyMetadata()
  storageEncrypted?: boolean;

  @SpeakeasyMetadata()
  storageThroughput?: number;

  @SpeakeasyMetadata()
  storageType?: string;

  /**
   * A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i>
   */
  @SpeakeasyMetadata({ elemType: TagList })
  tagList?: TagList[];

  @SpeakeasyMetadata()
  tdeCredentialArn?: string;

  @SpeakeasyMetadata()
  timezone?: string;

  @SpeakeasyMetadata({ elemType: VpcSecurityGroupMembershipList })
  vpcSecurityGroups?: VpcSecurityGroupMembershipList[];
}
