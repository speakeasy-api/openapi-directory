// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetWorkUnitResultsRequestBody struct {
	// The ID of the plan query operation for which to get results.
	QueryID string `json:"QueryId"`
	// The work unit ID for which to get results. Value generated by enumerating <code>WorkUnitIdMin</code> to <code>WorkUnitIdMax</code> (inclusive) from the <code>WorkUnitRange</code> in the output of <code>GetWorkUnits</code>.
	WorkUnitID int64 `json:"WorkUnitId"`
	// A work token used to query the execution service. Token output from <code>GetWorkUnits</code>.
	WorkUnitToken string `json:"WorkUnitToken"`
}

type GetWorkUnitResultsRequest struct {
	RequestBody       GetWorkUnitResultsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetWorkUnitResultsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// ExpiredException
	ExpiredException interface{}
	// Success
	GetWorkUnitResultsResponse *shared.GetWorkUnitResultsResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ThrottledException
	ThrottledException interface{}
}
