/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class DpsJobInstructionDpsJobInstruction {
    /**
     * The dps job instructions' apply
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Apply")
    public Boolean apply;

    public DpsJobInstructionDpsJobInstruction withApply(Boolean apply) {
        this.apply = apply;
        return this;
    }
    
    /**
     * The dps job instructions' employer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Employer")
    public DpsJobInstructionDpsJobInstructionEmployer employer;

    public DpsJobInstructionDpsJobInstruction withEmployer(DpsJobInstructionDpsJobInstructionEmployer employer) {
        this.employer = employer;
        return this;
    }
    
    /**
     * The dps job instructions' from date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("FromDate")
    public LocalDate fromDate;

    public DpsJobInstructionDpsJobInstruction withFromDate(LocalDate fromDate) {
        this.fromDate = fromDate;
        return this;
    }
    
    /**
     * The dps job instructions' holding date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("HoldingDate")
    public OffsetDateTime holdingDate;

    public DpsJobInstructionDpsJobInstruction withHoldingDate(OffsetDateTime holdingDate) {
        this.holdingDate = holdingDate;
        return this;
    }
    
    /**
     * The dps job instructions' message types
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MessageTypes")
    public DpsJobInstructionDpsJobInstructionType messageTypes;

    public DpsJobInstructionDpsJobInstruction withMessageTypes(DpsJobInstructionDpsJobInstructionType messageTypes) {
        this.messageTypes = messageTypes;
        return this;
    }
    
    /**
     * The dps job instructions' messages to process
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MessagesToProcess")
    public DpsJobInstructionDpsJobInstructionMessage messagesToProcess;

    public DpsJobInstructionDpsJobInstruction withMessagesToProcess(DpsJobInstructionDpsJobInstructionMessage messagesToProcess) {
        this.messagesToProcess = messagesToProcess;
        return this;
    }
    
    /**
     * The dps job instructions' retrieve
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Retrieve")
    public Boolean retrieve;

    public DpsJobInstructionDpsJobInstruction withRetrieve(Boolean retrieve) {
        this.retrieve = retrieve;
        return this;
    }
    
    public DpsJobInstructionDpsJobInstruction(){}
}
