/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BasePlanInput - A single base plan for a subscription.
 */
public class BasePlanInput {
    /**
     * Represents a base plan that automatically renews at the end of its subscription period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRenewingBasePlanType")
    public AutoRenewingBasePlanType autoRenewingBasePlanType;

    public BasePlanInput withAutoRenewingBasePlanType(AutoRenewingBasePlanType autoRenewingBasePlanType) {
        this.autoRenewingBasePlanType = autoRenewingBasePlanType;
        return this;
    }
    
    /**
     * Required. Immutable. The unique identifier of this base plan. Must be unique within the subscription, and conform with RFC-1034. That is, this ID can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 63 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basePlanId")
    public String basePlanId;

    public BasePlanInput withBasePlanId(String basePlanId) {
        this.basePlanId = basePlanId;
        return this;
    }
    
    /**
     * List of up to 20 custom tags specified for this base plan, and returned to the app through the billing library. Subscription offers for this base plan will also receive these offer tags in the billing library.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offerTags")
    public OfferTag[] offerTags;

    public BasePlanInput withOfferTags(OfferTag[] offerTags) {
        this.offerTags = offerTags;
        return this;
    }
    
    /**
     * Pricing information for any new locations Play may launch in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherRegionsConfig")
    public OtherRegionsBasePlanConfig otherRegionsConfig;

    public BasePlanInput withOtherRegionsConfig(OtherRegionsBasePlanConfig otherRegionsConfig) {
        this.otherRegionsConfig = otherRegionsConfig;
        return this;
    }
    
    /**
     * Represents a base plan that does not automatically renew at the end of the base plan, and must be manually renewed by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prepaidBasePlanType")
    public PrepaidBasePlanType prepaidBasePlanType;

    public BasePlanInput withPrepaidBasePlanType(PrepaidBasePlanType prepaidBasePlanType) {
        this.prepaidBasePlanType = prepaidBasePlanType;
        return this;
    }
    
    /**
     * Region-specific information for this base plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionalConfigs")
    public RegionalBasePlanConfig[] regionalConfigs;

    public BasePlanInput withRegionalConfigs(RegionalBasePlanConfig[] regionalConfigs) {
        this.regionalConfigs = regionalConfigs;
        return this;
    }
    
    public BasePlanInput(){}
}
