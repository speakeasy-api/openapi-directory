/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAnalyticsAdminV1betaRunAccessReportRequest - The request for a Data Access Record Report.
 */
public class GoogleAnalyticsAdminV1betaRunAccessReportRequest {
    /**
     * Date ranges of access records to read. If multiple date ranges are requested, each response row will contain a zero based date range index. If two date ranges overlap, the access records for the overlapping days is included in the response rows for both date ranges. Requests are allowed up to 2 date ranges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateRanges")
    public GoogleAnalyticsAdminV1betaAccessDateRange[] dateRanges;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withDateRanges(GoogleAnalyticsAdminV1betaAccessDateRange[] dateRanges) {
        this.dateRanges = dateRanges;
        return this;
    }
    
    /**
     * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensionFilter")
    public GoogleAnalyticsAdminV1betaAccessFilterExpression dimensionFilter;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withDimensionFilter(GoogleAnalyticsAdminV1betaAccessFilterExpression dimensionFilter) {
        this.dimensionFilter = dimensionFilter;
        return this;
    }
    
    /**
     * The dimensions requested and displayed in the response. Requests are allowed up to 9 dimensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public GoogleAnalyticsAdminV1betaAccessDimension[] dimensions;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withDimensions(GoogleAnalyticsAdminV1betaAccessDimension[] dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 100,000 rows per request, no matter how many you ask for. `limit` must be positive. The API may return fewer rows than the requested `limit`, if there aren't as many remaining rows as the `limit`. For instance, there are fewer than 300 possible values for the dimension `country`, so when reporting on only `country`, you can't get more than 300 rows, even if you set `limit` to a higher value. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public String limit;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withLimit(String limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricFilter")
    public GoogleAnalyticsAdminV1betaAccessFilterExpression metricFilter;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withMetricFilter(GoogleAnalyticsAdminV1betaAccessFilterExpression metricFilter) {
        this.metricFilter = metricFilter;
        return this;
    }
    
    /**
     * The metrics requested and displayed in the response. Requests are allowed up to 10 metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics")
    public GoogleAnalyticsAdminV1betaAccessMetric[] metrics;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withMetrics(GoogleAnalyticsAdminV1betaAccessMetric[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * The row count of the start row. The first row is counted as row 0. If offset is unspecified, it is treated as 0. If offset is zero, then this method will return the first page of results with `limit` entries. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public String offset;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withOffset(String offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Specifies how rows are ordered in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderBys")
    public GoogleAnalyticsAdminV1betaAccessOrderBy[] orderBys;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withOrderBys(GoogleAnalyticsAdminV1betaAccessOrderBy[] orderBys) {
        this.orderBys = orderBys;
        return this;
    }
    
    /**
     * Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [AccessQuota](#AccessQuota). For account-level requests, this field must be false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnEntityQuota")
    public Boolean returnEntityQuota;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withReturnEntityQuota(Boolean returnEntityQuota) {
        this.returnEntityQuota = returnEntityQuota;
        return this;
    }
    
    /**
     * This request's time zone if specified. If unspecified, the property's time zone is used. The request's time zone is used to interpret the start &amp; end dates of the report. Formatted as strings from the IANA Time Zone database (https://www.iana.org/time-zones); for example "America/New_York" or "Asia/Tokyo".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;

    public GoogleAnalyticsAdminV1betaRunAccessReportRequest withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    public GoogleAnalyticsAdminV1betaRunAccessReportRequest(){}
}
