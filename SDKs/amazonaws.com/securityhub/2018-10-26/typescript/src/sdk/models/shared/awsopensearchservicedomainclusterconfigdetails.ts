/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails } from "./awsopensearchservicedomainclusterconfigzoneawarenessconfigdetails";
import { Expose, Type } from "class-transformer";

/**
 * Details about the configuration of an OpenSearch cluster.
 */
export class AwsOpenSearchServiceDomainClusterConfigDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DedicatedMasterCount" })
  dedicatedMasterCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DedicatedMasterEnabled" })
  dedicatedMasterEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "DedicatedMasterType" })
  dedicatedMasterType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceCount" })
  instanceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceType" })
  instanceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WarmCount" })
  warmCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "WarmEnabled" })
  warmEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "WarmType" })
  warmType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ZoneAwarenessConfig" })
  @Type(() => AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails)
  zoneAwarenessConfig?: AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "ZoneAwarenessEnabled" })
  zoneAwarenessEnabled?: boolean;
}
