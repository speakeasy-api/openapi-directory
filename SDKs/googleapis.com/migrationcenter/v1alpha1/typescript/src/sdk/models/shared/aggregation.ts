/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregationHistogram } from "./aggregationhistogram";
import { Expose, Type } from "class-transformer";

/**
 * Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.
 */
export class Aggregation extends SpeakeasyBase {
  /**
   * Object count.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: Record<string, any>;

  /**
   * The name of the field on which to aggregate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  field?: string;

  /**
   * Frequency distribution of all field values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency?: Record<string, any>;

  /**
   * Histogram of bucketed assets counts by field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "histogram" })
  @Type(() => AggregationHistogram)
  histogram?: AggregationHistogram;

  /**
   * Sum of field values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sum" })
  sum?: Record<string, any>;
}
