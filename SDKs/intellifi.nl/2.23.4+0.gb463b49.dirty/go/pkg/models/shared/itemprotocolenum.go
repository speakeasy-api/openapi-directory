// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ItemProtocolEnum - Type of protocol that was used to decode this item.
type ItemProtocolEnum string

const (
	ItemProtocolEnumAltbeacon ItemProtocolEnum = "altbeacon"
	ItemProtocolEnumUniwear   ItemProtocolEnum = "uniwear"
	ItemProtocolEnumNfc       ItemProtocolEnum = "nfc"
	ItemProtocolEnumGeneric   ItemProtocolEnum = "generic"
	ItemProtocolEnumEddystone ItemProtocolEnum = "eddystone"
	ItemProtocolEnumEpcgen2   ItemProtocolEnum = "epcgen2"
	ItemProtocolEnumIbeacon   ItemProtocolEnum = "ibeacon"
	ItemProtocolEnumNanoble   ItemProtocolEnum = "nanoble"
)

func (e ItemProtocolEnum) ToPointer() *ItemProtocolEnum {
	return &e
}

func (e *ItemProtocolEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "altbeacon":
		fallthrough
	case "uniwear":
		fallthrough
	case "nfc":
		fallthrough
	case "generic":
		fallthrough
	case "eddystone":
		fallthrough
	case "epcgen2":
		fallthrough
	case "ibeacon":
		fallthrough
	case "nanoble":
		*e = ItemProtocolEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ItemProtocolEnum: %v", v)
	}
}
