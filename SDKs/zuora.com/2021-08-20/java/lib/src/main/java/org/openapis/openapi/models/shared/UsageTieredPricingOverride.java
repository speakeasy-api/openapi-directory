/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UsageTieredPricingOverride - Pricing information about a usage charge that uses the "tiered pricing" charge model. In this charge model, the charge has cumulative pricing tiers that become effective as units are consumed.
 * 
 */
public class UsageTieredPricingOverride {
    /**
     * Specifies how Zuora changes the price of the charge each time the subscription renews.
     * 
     * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceChangeOption")
    public UsageTieredPricingOverridePriceChangeOptionEnum priceChangeOption;
    public UsageTieredPricingOverride withPriceChangeOption(UsageTieredPricingOverridePriceChangeOptionEnum priceChangeOption) {
        this.priceChangeOption = priceChangeOption;
        return this;
    }
    
    /**
     * Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceIncreasePercentage")
    public Double priceIncreasePercentage;
    public UsageTieredPricingOverride withPriceIncreasePercentage(Double priceIncreasePercentage) {
        this.priceIncreasePercentage = priceIncreasePercentage;
        return this;
    }
    
    /**
     * Specifies how Zuora groups usage records when rating usage. See [Usage Rating by Group](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Usage/Usage_Rating_by_Group) for more information.
     *   * ByBillingPeriod (default): The rating is based on all the usages in a billing period.
     *   * ByUsageStartDate: The rating is based on all the usages on the same usage start date. 
     *   * ByUsageRecord: The rating is based on each usage record.
     *   * ByUsageUpload: The rating is based on all the usages in a uploaded usage file (.xls or .csv). If you import a mass usage in a single upload, which contains multiple usage files in .xls or .csv format, usage records are grouped for each usage file.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ratingGroup")
    public UsageTieredPricingOverrideRatingGroupEnum ratingGroup;
    public UsageTieredPricingOverride withRatingGroup(UsageTieredPricingOverrideRatingGroupEnum ratingGroup) {
        this.ratingGroup = ratingGroup;
        return this;
    }
    
    /**
     * List of cumulative pricing tiers in the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tiers")
    public ChargeTier[] tiers;
    public UsageTieredPricingOverride withTiers(ChargeTier[] tiers) {
        this.tiers = tiers;
        return this;
    }
    
}
