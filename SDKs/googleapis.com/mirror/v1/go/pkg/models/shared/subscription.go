// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// Subscription - A subscription to events on a collection.
type Subscription struct {
	// The URL where notifications should be delivered (must start with https://).
	CallbackURL *string `json:"callbackUrl,omitempty"`
	// The collection to subscribe to. Allowed values are:
	// - timeline - Changes in the timeline including insertion, deletion, and updates.
	// - locations - Location updates.
	// - settings - Settings updates.
	Collection *string `json:"collection,omitempty"`
	// The ID of the subscription.
	ID *string `json:"id,omitempty"`
	// The type of resource. This is always mirror#subscription.
	Kind *string `json:"kind,omitempty"`
	// A notification delivered by the API.
	Notification *Notification `json:"notification,omitempty"`
	// A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are:
	// - UPDATE - The item has been updated.
	// - INSERT - A new item has been inserted.
	// - DELETE - The item has been deleted.
	// - MENU_ACTION - A custom menu item has been triggered by the user.
	Operation []string `json:"operation,omitempty"`
	// The time at which this subscription was last modified, formatted according to RFC 3339.
	Updated *time.Time `json:"updated,omitempty"`
	// An opaque token sent to the subscriber in notifications so that it can determine the ID of the user.
	UserToken *string `json:"userToken,omitempty"`
	// A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google.
	VerifyToken *string `json:"verifyToken,omitempty"`
}
