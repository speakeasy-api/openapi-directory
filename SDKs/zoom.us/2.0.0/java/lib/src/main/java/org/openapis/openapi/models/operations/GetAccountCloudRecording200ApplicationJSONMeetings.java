/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetAccountCloudRecording200ApplicationJSONMeetings {
    /**
     * The scheduled duration of the meeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public GetAccountCloudRecording200ApplicationJSONMeetings withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * User ID of the user who is set as the host of the meeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host_id")
    public String hostId;
    public GetAccountCloudRecording200ApplicationJSONMeetings withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * Meeting ID - Unique Identifier of a meeting, also known as Meeting Number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetAccountCloudRecording200ApplicationJSONMeetings withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The total number of recordings retrieved from the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_count")
    public Long recordingCount;
    public GetAccountCloudRecording200ApplicationJSONMeetings withRecordingCount(Long recordingCount) {
        this.recordingCount = recordingCount;
        return this;
    }
    
    /**
     * Recording files object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_files")
    public GetAccountCloudRecording200ApplicationJSONMeetingsRecordingFiles[] recordingFiles;
    public GetAccountCloudRecording200ApplicationJSONMeetings withRecordingFiles(GetAccountCloudRecording200ApplicationJSONMeetingsRecordingFiles[] recordingFiles) {
        this.recordingFiles = recordingFiles;
        return this;
    }
    
    /**
     * The date and time at which the meeting started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("start_time")
    public OffsetDateTime startTime;
    public GetAccountCloudRecording200ApplicationJSONMeetings withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Meeting topic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic")
    public String topic;
    public GetAccountCloudRecording200ApplicationJSONMeetings withTopic(String topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * The total size of the meeting in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_size")
    public Long totalSize;
    public GetAccountCloudRecording200ApplicationJSONMeetings withTotalSize(Long totalSize) {
        this.totalSize = totalSize;
        return this;
    }
    
    /**
     * Universally Unique Identifier of a meeting instance. Each meeting instance will have its own meeting UUID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;
    public GetAccountCloudRecording200ApplicationJSONMeetings withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
