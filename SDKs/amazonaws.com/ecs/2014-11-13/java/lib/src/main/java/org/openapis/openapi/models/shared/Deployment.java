/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Deployment - The details of an Amazon ECS service deployment. This is used only when a service uses the &lt;code&gt;ECS&lt;/code&gt; deployment controller type.
 */
public class Deployment {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capacityProviderStrategy")
    public CapacityProviderStrategyItem[] capacityProviderStrategy;
    public Deployment withCapacityProviderStrategy(CapacityProviderStrategyItem[] capacityProviderStrategy) {
        this.capacityProviderStrategy = capacityProviderStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public Deployment withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredCount")
    public Long desiredCount;
    public Deployment withDesiredCount(Long desiredCount) {
        this.desiredCount = desiredCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedTasks")
    public Long failedTasks;
    public Deployment withFailedTasks(Long failedTasks) {
        this.failedTasks = failedTasks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Deployment withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchType")
    public LaunchTypeEnum launchType;
    public Deployment withLaunchType(LaunchTypeEnum launchType) {
        this.launchType = launchType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfiguration")
    public NetworkConfiguration networkConfiguration;
    public Deployment withNetworkConfiguration(NetworkConfiguration networkConfiguration) {
        this.networkConfiguration = networkConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pendingCount")
    public Long pendingCount;
    public Deployment withPendingCount(Long pendingCount) {
        this.pendingCount = pendingCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformFamily")
    public String platformFamily;
    public Deployment withPlatformFamily(String platformFamily) {
        this.platformFamily = platformFamily;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformVersion")
    public String platformVersion;
    public Deployment withPlatformVersion(String platformVersion) {
        this.platformVersion = platformVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rolloutState")
    public DeploymentRolloutStateEnum rolloutState;
    public Deployment withRolloutState(DeploymentRolloutStateEnum rolloutState) {
        this.rolloutState = rolloutState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rolloutStateReason")
    public String rolloutStateReason;
    public Deployment withRolloutStateReason(String rolloutStateReason) {
        this.rolloutStateReason = rolloutStateReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runningCount")
    public Long runningCount;
    public Deployment withRunningCount(Long runningCount) {
        this.runningCount = runningCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceConnectConfiguration")
    public ServiceConnectConfiguration serviceConnectConfiguration;
    public Deployment withServiceConnectConfiguration(ServiceConnectConfiguration serviceConnectConfiguration) {
        this.serviceConnectConfiguration = serviceConnectConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceConnectResources")
    public ServiceConnectServiceResource[] serviceConnectResources;
    public Deployment withServiceConnectResources(ServiceConnectServiceResource[] serviceConnectResources) {
        this.serviceConnectResources = serviceConnectResources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public Deployment withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskDefinition")
    public String taskDefinition;
    public Deployment withTaskDefinition(String taskDefinition) {
        this.taskDefinition = taskDefinition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public Deployment withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
