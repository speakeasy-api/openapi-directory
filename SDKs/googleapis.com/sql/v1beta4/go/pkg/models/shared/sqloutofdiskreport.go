// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SQLOutOfDiskReportSQLOutOfDiskStateEnum - This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job
type SQLOutOfDiskReportSQLOutOfDiskStateEnum string

const (
	SQLOutOfDiskReportSQLOutOfDiskStateEnumSQLOutOfDiskStateUnspecified SQLOutOfDiskReportSQLOutOfDiskStateEnum = "SQL_OUT_OF_DISK_STATE_UNSPECIFIED"
	SQLOutOfDiskReportSQLOutOfDiskStateEnumNormal                       SQLOutOfDiskReportSQLOutOfDiskStateEnum = "NORMAL"
	SQLOutOfDiskReportSQLOutOfDiskStateEnumSoftShutdown                 SQLOutOfDiskReportSQLOutOfDiskStateEnum = "SOFT_SHUTDOWN"
)

func (e *SQLOutOfDiskReportSQLOutOfDiskStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SQL_OUT_OF_DISK_STATE_UNSPECIFIED":
		fallthrough
	case "NORMAL":
		fallthrough
	case "SOFT_SHUTDOWN":
		*e = SQLOutOfDiskReportSQLOutOfDiskStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SQLOutOfDiskReportSQLOutOfDiskStateEnum: %s", s)
	}
}

// SQLOutOfDiskReport - This message wraps up the information written by out-of-disk detection job.
type SQLOutOfDiskReport struct {
	// The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:
	SQLMinRecommendedIncreaseSizeGb *int `json:"sqlMinRecommendedIncreaseSizeGb,omitempty"`
	// This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job
	SQLOutOfDiskState *SQLOutOfDiskReportSQLOutOfDiskStateEnum `json:"sqlOutOfDiskState,omitempty"`
}
