/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2InspectTemplate } from "./googleprivacydlpv2inspecttemplate";
import { Expose, Type } from "class-transformer";

/**
 * Response message for ListInspectTemplates.
 */
export class GooglePrivacyDlpV2ListInspectTemplatesResponse extends SpeakeasyBase {
  /**
   * List of inspectTemplates, up to page_size in ListInspectTemplatesRequest.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2InspectTemplate })
  @Expose({ name: "inspectTemplates" })
  @Type(() => GooglePrivacyDlpV2InspectTemplate)
  inspectTemplates?: GooglePrivacyDlpV2InspectTemplate[];

  /**
   * If the next page is available then the next page token to be used in following ListInspectTemplates request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
