"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskDefinition = void 0;
var utils_1 = require("../../../internal/utils");
var attribute_1 = require("./attribute");
var containerdefinition_1 = require("./containerdefinition");
var ephemeralstorage_1 = require("./ephemeralstorage");
var inferenceaccelerator_1 = require("./inferenceaccelerator");
var ipcmodeenum_1 = require("./ipcmodeenum");
var networkmodeenum_1 = require("./networkmodeenum");
var pidmodeenum_1 = require("./pidmodeenum");
var proxyconfiguration_1 = require("./proxyconfiguration");
var runtimeplatform_1 = require("./runtimeplatform");
var taskdefinitionplacementconstraint_1 = require("./taskdefinitionplacementconstraint");
var taskdefinitionstatusenum_1 = require("./taskdefinitionstatusenum");
var volume_1 = require("./volume");
var class_transformer_1 = require("class-transformer");
/**
 * The details of a task definition which describes the container and volume definitions of an Amazon Elastic Container Service task. You can specify which Docker images to use, the required resources, and other configurations related to launching the task definition through an Amazon ECS service or task.
 */
var TaskDefinition = /** @class */ (function (_super) {
    __extends(TaskDefinition, _super);
    function TaskDefinition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "compatibilities" }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "compatibilities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: containerdefinition_1.ContainerDefinition }),
        (0, class_transformer_1.Expose)({ name: "containerDefinitions" }),
        (0, class_transformer_1.Type)(function () { return containerdefinition_1.ContainerDefinition; }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "containerDefinitions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cpu" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "cpu", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deregisteredAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TaskDefinition.prototype, "deregisteredAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ephemeralStorage" }),
        (0, class_transformer_1.Type)(function () { return ephemeralstorage_1.EphemeralStorage; }),
        __metadata("design:type", ephemeralstorage_1.EphemeralStorage)
    ], TaskDefinition.prototype, "ephemeralStorage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "executionRoleArn" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "executionRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "family" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "family", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: inferenceaccelerator_1.InferenceAccelerator }),
        (0, class_transformer_1.Expose)({ name: "inferenceAccelerators" }),
        (0, class_transformer_1.Type)(function () { return inferenceaccelerator_1.InferenceAccelerator; }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "inferenceAccelerators", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipcMode" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "ipcMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memory" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "memory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networkMode" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "networkMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pidMode" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "pidMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: taskdefinitionplacementconstraint_1.TaskDefinitionPlacementConstraint }),
        (0, class_transformer_1.Expose)({ name: "placementConstraints" }),
        (0, class_transformer_1.Type)(function () { return taskdefinitionplacementconstraint_1.TaskDefinitionPlacementConstraint; }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "placementConstraints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "proxyConfiguration" }),
        (0, class_transformer_1.Type)(function () { return proxyconfiguration_1.ProxyConfiguration; }),
        __metadata("design:type", proxyconfiguration_1.ProxyConfiguration)
    ], TaskDefinition.prototype, "proxyConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registeredAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TaskDefinition.prototype, "registeredAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registeredBy" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "registeredBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: attribute_1.Attribute }),
        (0, class_transformer_1.Expose)({ name: "requiresAttributes" }),
        (0, class_transformer_1.Type)(function () { return attribute_1.Attribute; }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "requiresAttributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requiresCompatibilities" }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "requiresCompatibilities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revision" }),
        __metadata("design:type", Number)
    ], TaskDefinition.prototype, "revision", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runtimePlatform" }),
        (0, class_transformer_1.Type)(function () { return runtimeplatform_1.RuntimePlatform; }),
        __metadata("design:type", runtimeplatform_1.RuntimePlatform)
    ], TaskDefinition.prototype, "runtimePlatform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taskDefinitionArn" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "taskDefinitionArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taskRoleArn" }),
        __metadata("design:type", String)
    ], TaskDefinition.prototype, "taskRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: volume_1.Volume }),
        (0, class_transformer_1.Expose)({ name: "volumes" }),
        (0, class_transformer_1.Type)(function () { return volume_1.Volume; }),
        __metadata("design:type", Array)
    ], TaskDefinition.prototype, "volumes", void 0);
    return TaskDefinition;
}(utils_1.SpeakeasyBase));
exports.TaskDefinition = TaskDefinition;
