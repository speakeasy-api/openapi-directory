// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListHubContentsXAmzTargetEnum
type ListHubContentsXAmzTargetEnum string

const (
	ListHubContentsXAmzTargetEnumSageMakerListHubContents ListHubContentsXAmzTargetEnum = "SageMaker.ListHubContents"
)

func (e *ListHubContentsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.ListHubContents":
		*e = ListHubContentsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListHubContentsXAmzTargetEnum: %s", s)
	}
}

type ListHubContentsRequest struct {
	ListHubContentsRequest shared.ListHubContentsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             ListHubContentsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListHubContentsResponse struct {
	ContentType string
	// Success
	ListHubContentsResponse *shared.ListHubContentsResponse
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
