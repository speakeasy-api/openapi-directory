"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import zoneboundary as shared_zoneboundary
from ..shared import zonechildcontainer as shared_zonechildcontainer
from ..shared import zonetyperestriction as shared_zonetyperestriction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Zone:
    r"""Represents a Google Tag Manager Zone's contents."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""GTM Account ID."""  
    boundary: Optional[shared_zoneboundary.ZoneBoundary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boundary'), 'exclude': lambda f: f is None }})
    r"""Represents a Zone's boundaries."""  
    child_container: Optional[list[shared_zonechildcontainer.ZoneChildContainer]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('childContainer'), 'exclude': lambda f: f is None }})
    r"""Containers that are children of this Zone."""  
    container_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerId'), 'exclude': lambda f: f is None }})
    r"""GTM Container ID."""  
    fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Zone display name."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""User notes on how to apply this zone in the container."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""GTM Zone's API relative path."""  
    tag_manager_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagManagerUrl'), 'exclude': lambda f: f is None }})
    r"""Auto generated link to the tag manager UI"""  
    type_restriction: Optional[shared_zonetyperestriction.ZoneTypeRestriction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('typeRestriction'), 'exclude': lambda f: f is None }})
    r"""Represents a Zone's type restrictions."""  
    workspace_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workspaceId'), 'exclude': lambda f: f is None }})
    r"""GTM Workspace ID."""  
    zone_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zoneId'), 'exclude': lambda f: f is None }})
    r"""The Zone ID uniquely identifies the GTM Zone."""  
    