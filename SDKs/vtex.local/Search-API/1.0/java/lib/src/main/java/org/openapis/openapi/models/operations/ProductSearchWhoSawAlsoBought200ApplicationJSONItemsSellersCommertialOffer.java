/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer - AKA Commertial Condition.
 */
public class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer {
    /**
     * Use the `IsAvailable` field instead.
     */
    @JsonProperty("AvailableQuantity")
    public Long availableQuantity;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withAvailableQuantity(Long availableQuantity) {
        this.availableQuantity = availableQuantity;
        return this;
    }
    
    /**
     * Array of other products that can be bought together with the product in question.
     */
    @JsonProperty("BuyTogether")
    public Object[] buyTogether;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withBuyTogether(Object[] buyTogether) {
        this.buyTogether = buyTogether;
        return this;
    }
    
    /**
     * Cache version used to call checkout.
     */
    @JsonProperty("CacheVersionUsedToCallCheckout")
    public String cacheVersionUsedToCallCheckout;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withCacheVersionUsedToCallCheckout(String cacheVersionUsedToCallCheckout) {
        this.cacheVersionUsedToCallCheckout = cacheVersionUsedToCallCheckout;
        return this;
    }
    
    /**
     * Delivery SLA samples.
     */
    @JsonProperty("DeliverySlaSamples")
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamples[] deliverySlaSamples;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withDeliverySlaSamples(ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamples[] deliverySlaSamples) {
        this.deliverySlaSamples = deliverySlaSamples;
        return this;
    }
    
    /**
     * Delivery SLA samples per region.
     */
    @JsonProperty("DeliverySlaSamplesPerRegion")
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion deliverySlaSamplesPerRegion;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withDeliverySlaSamplesPerRegion(ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion deliverySlaSamplesPerRegion) {
        this.deliverySlaSamplesPerRegion = deliverySlaSamplesPerRegion;
        return this;
    }
    
    /**
     * Discount hightlight.
     */
    @JsonProperty("DiscountHighLight")
    public Object[] discountHighLight;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withDiscountHighLight(Object[] discountHighLight) {
        this.discountHighLight = discountHighLight;
        return this;
    }
    
    /**
     * Get info error message.
     */
    @JsonProperty("GetInfoErrorMessage")
    public String getInfoErrorMessage;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withGetInfoErrorMessage(String getInfoErrorMessage) {
        this.getInfoErrorMessage = getInfoErrorMessage;
        return this;
    }
    
    /**
     * Array of SKU gifts IDs.
     */
    @JsonProperty("GiftSkuIds")
    public Object[] giftSkuIds;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withGiftSkuIds(Object[] giftSkuIds) {
        this.giftSkuIds = giftSkuIds;
        return this;
    }
    
    /**
     * Installments options.
     */
    @JsonProperty("Installments")
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferInstallments[] installments;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withInstallments(ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferInstallments[] installments) {
        this.installments = installments;
        return this;
    }
    
    /**
     * If the product is available or not.
     */
    @JsonProperty("IsAvailable")
    public Boolean isAvailable;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
        return this;
    }
    
    /**
     * Item metadata attachment.
     */
    @JsonProperty("ItemMetadataAttachment")
    public Object[] itemMetadataAttachment;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withItemMetadataAttachment(Object[] itemMetadataAttachment) {
        this.itemMetadataAttachment = itemMetadataAttachment;
        return this;
    }
    
    /**
     * List price of the product.
     */
    @JsonProperty("ListPrice")
    public Double listPrice;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withListPrice(Double listPrice) {
        this.listPrice = listPrice;
        return this;
    }
    
    /**
     * Payment options.
     */
    @JsonProperty("PaymentOptions")
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptions paymentOptions;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withPaymentOptions(ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptions paymentOptions) {
        this.paymentOptions = paymentOptions;
        return this;
    }
    
    /**
     * Price of the product.
     */
    @JsonProperty("Price")
    public Double price;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Price of the product valid until a certain date.
     */
    @JsonProperty("PriceValidUntil")
    public String priceValidUntil;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withPriceValidUntil(String priceValidUntil) {
        this.priceValidUntil = priceValidUntil;
        return this;
    }
    
    /**
     * Price of the product without discount.
     */
    @JsonProperty("PriceWithoutDiscount")
    public Double priceWithoutDiscount;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withPriceWithoutDiscount(Double priceWithoutDiscount) {
        this.priceWithoutDiscount = priceWithoutDiscount;
        return this;
    }
    
    /**
     * Reward value of the product.
     */
    @JsonProperty("RewardValue")
    public Double rewardValue;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withRewardValue(Double rewardValue) {
        this.rewardValue = rewardValue;
        return this;
    }
    
    /**
     * Trade policy which the product is contained.
     */
    @JsonProperty("SaleChannel")
    public Long saleChannel;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withSaleChannel(Long saleChannel) {
        this.saleChannel = saleChannel;
        return this;
    }
    
    /**
     * Tax of the product.
     */
    @JsonProperty("Tax")
    public Double tax;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withTax(Double tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * Teasers.
     */
    @JsonProperty("Teasers")
    public Object[] teasers;
    public ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer withTeasers(Object[] teasers) {
        this.teasers = teasers;
        return this;
    }
    
}
