/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ResourceStatusScheduling } from "./resourcestatusscheduling";
import { ResourceStatusServiceIntegrationStatus } from "./resourcestatusserviceintegrationstatus";
import { ResourceStatusUpcomingMaintenance } from "./resourcestatusupcomingmaintenance";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains output only fields. Use this sub-message for actual values set on Instance attributes as compared to the value requested by the user (intent) in their instance CRUD calls.
 */
export class ResourceStatus extends SpeakeasyBase {
  /**
   * [Output Only] An opaque ID of the host on which the VM is running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "physicalHost" })
  physicalHost?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "scheduling" })
  @Type(() => ResourceStatusScheduling)
  scheduling?: ResourceStatusScheduling;

  /**
   * [Output Only] Represents the status of the service integration specs defined by the user in instance.serviceIntegrationSpecs.
   */
  @SpeakeasyMetadata({ elemType: ResourceStatusServiceIntegrationStatus })
  @Expose({ name: "serviceIntegrationStatuses" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ResourceStatusServiceIntegrationStatus> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          ResourceStatusServiceIntegrationStatus
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  serviceIntegrationStatuses?: Record<
    string,
    ResourceStatusServiceIntegrationStatus
  >;

  @SpeakeasyMetadata()
  @Expose({ name: "upcomingMaintenance" })
  @Type(() => ResourceStatusUpcomingMaintenance)
  upcomingMaintenance?: ResourceStatusUpcomingMaintenance;
}
