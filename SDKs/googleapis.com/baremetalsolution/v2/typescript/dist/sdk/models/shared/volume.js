"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolumeInput = exports.Volume = exports.VolumeWorkloadProfileEnum = exports.VolumeStorageTypeEnum = exports.VolumeStateEnum = exports.VolumeSnapshotAutoDeleteBehaviorEnum = exports.VolumeProtocolEnum = exports.VolumePerformanceTierEnum = void 0;
var utils_1 = require("../../../internal/utils");
var snapshotreservationdetail_1 = require("./snapshotreservationdetail");
var class_transformer_1 = require("class-transformer");
/**
 * Immutable. Performance tier of the Volume. Default is SHARED.
 */
var VolumePerformanceTierEnum;
(function (VolumePerformanceTierEnum) {
    VolumePerformanceTierEnum["VolumePerformanceTierUnspecified"] = "VOLUME_PERFORMANCE_TIER_UNSPECIFIED";
    VolumePerformanceTierEnum["VolumePerformanceTierShared"] = "VOLUME_PERFORMANCE_TIER_SHARED";
    VolumePerformanceTierEnum["VolumePerformanceTierAssigned"] = "VOLUME_PERFORMANCE_TIER_ASSIGNED";
    VolumePerformanceTierEnum["VolumePerformanceTierHt"] = "VOLUME_PERFORMANCE_TIER_HT";
})(VolumePerformanceTierEnum = exports.VolumePerformanceTierEnum || (exports.VolumePerformanceTierEnum = {}));
/**
 * Output only. Storage protocol for the Volume.
 */
var VolumeProtocolEnum;
(function (VolumeProtocolEnum) {
    VolumeProtocolEnum["ProtocolUnspecified"] = "PROTOCOL_UNSPECIFIED";
    VolumeProtocolEnum["FibreChannel"] = "FIBRE_CHANNEL";
    VolumeProtocolEnum["Nfs"] = "NFS";
})(VolumeProtocolEnum = exports.VolumeProtocolEnum || (exports.VolumeProtocolEnum = {}));
/**
 * The behavior to use when snapshot reserved space is full.
 */
var VolumeSnapshotAutoDeleteBehaviorEnum;
(function (VolumeSnapshotAutoDeleteBehaviorEnum) {
    VolumeSnapshotAutoDeleteBehaviorEnum["SnapshotAutoDeleteBehaviorUnspecified"] = "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED";
    VolumeSnapshotAutoDeleteBehaviorEnum["Disabled"] = "DISABLED";
    VolumeSnapshotAutoDeleteBehaviorEnum["OldestFirst"] = "OLDEST_FIRST";
    VolumeSnapshotAutoDeleteBehaviorEnum["NewestFirst"] = "NEWEST_FIRST";
})(VolumeSnapshotAutoDeleteBehaviorEnum = exports.VolumeSnapshotAutoDeleteBehaviorEnum || (exports.VolumeSnapshotAutoDeleteBehaviorEnum = {}));
/**
 * The state of this storage volume.
 */
var VolumeStateEnum;
(function (VolumeStateEnum) {
    VolumeStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    VolumeStateEnum["Creating"] = "CREATING";
    VolumeStateEnum["Ready"] = "READY";
    VolumeStateEnum["Deleting"] = "DELETING";
    VolumeStateEnum["Updating"] = "UPDATING";
    VolumeStateEnum["CoolOff"] = "COOL_OFF";
})(VolumeStateEnum = exports.VolumeStateEnum || (exports.VolumeStateEnum = {}));
/**
 * The storage type for this volume.
 */
var VolumeStorageTypeEnum;
(function (VolumeStorageTypeEnum) {
    VolumeStorageTypeEnum["StorageTypeUnspecified"] = "STORAGE_TYPE_UNSPECIFIED";
    VolumeStorageTypeEnum["Ssd"] = "SSD";
    VolumeStorageTypeEnum["Hdd"] = "HDD";
})(VolumeStorageTypeEnum = exports.VolumeStorageTypeEnum || (exports.VolumeStorageTypeEnum = {}));
/**
 * The workload profile for the volume.
 */
var VolumeWorkloadProfileEnum;
(function (VolumeWorkloadProfileEnum) {
    VolumeWorkloadProfileEnum["WorkloadProfileUnspecified"] = "WORKLOAD_PROFILE_UNSPECIFIED";
    VolumeWorkloadProfileEnum["Generic"] = "GENERIC";
    VolumeWorkloadProfileEnum["Hana"] = "HANA";
})(VolumeWorkloadProfileEnum = exports.VolumeWorkloadProfileEnum || (exports.VolumeWorkloadProfileEnum = {}));
/**
 * A storage volume.
 */
var Volume = /** @class */ (function (_super) {
    __extends(Volume, _super);
    function Volume() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attached" }),
        __metadata("design:type", Boolean)
    ], Volume.prototype, "attached", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoGrownSizeGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "autoGrownSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bootVolume" }),
        __metadata("design:type", Boolean)
    ], Volume.prototype, "bootVolume", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentSizeGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "currentSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emergencySizeGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "emergencySizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expireTime" }),
        __metadata("design:type", String)
    ], Volume.prototype, "expireTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Volume.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "instances" }),
        __metadata("design:type", Array)
    ], Volume.prototype, "instances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], Volume.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxSizeGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "maxSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Volume.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], Volume.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originallyRequestedSizeGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "originallyRequestedSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "performanceTier" }),
        __metadata("design:type", String)
    ], Volume.prototype, "performanceTier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pod" }),
        __metadata("design:type", String)
    ], Volume.prototype, "pod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protocol" }),
        __metadata("design:type", String)
    ], Volume.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remainingSpaceGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "remainingSpaceGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requestedSizeGib" }),
        __metadata("design:type", String)
    ], Volume.prototype, "requestedSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotAutoDeleteBehavior" }),
        __metadata("design:type", String)
    ], Volume.prototype, "snapshotAutoDeleteBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotEnabled" }),
        __metadata("design:type", Boolean)
    ], Volume.prototype, "snapshotEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotReservationDetail" }),
        (0, class_transformer_1.Type)(function () { return snapshotreservationdetail_1.SnapshotReservationDetail; }),
        __metadata("design:type", snapshotreservationdetail_1.SnapshotReservationDetail)
    ], Volume.prototype, "snapshotReservationDetail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotSchedulePolicy" }),
        __metadata("design:type", String)
    ], Volume.prototype, "snapshotSchedulePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], Volume.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageAggregatePool" }),
        __metadata("design:type", String)
    ], Volume.prototype, "storageAggregatePool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageType" }),
        __metadata("design:type", String)
    ], Volume.prototype, "storageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workloadProfile" }),
        __metadata("design:type", String)
    ], Volume.prototype, "workloadProfile", void 0);
    return Volume;
}(utils_1.SpeakeasyBase));
exports.Volume = Volume;
/**
 * A storage volume.
 */
var VolumeInput = /** @class */ (function (_super) {
    __extends(VolumeInput, _super);
    function VolumeInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoGrownSizeGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "autoGrownSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentSizeGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "currentSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emergencySizeGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "emergencySizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], VolumeInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxSizeGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "maxSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originallyRequestedSizeGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "originallyRequestedSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "performanceTier" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "performanceTier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pod" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "pod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remainingSpaceGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "remainingSpaceGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requestedSizeGib" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "requestedSizeGib", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotAutoDeleteBehavior" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "snapshotAutoDeleteBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotEnabled" }),
        __metadata("design:type", Boolean)
    ], VolumeInput.prototype, "snapshotEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotReservationDetail" }),
        (0, class_transformer_1.Type)(function () { return snapshotreservationdetail_1.SnapshotReservationDetail; }),
        __metadata("design:type", snapshotreservationdetail_1.SnapshotReservationDetail)
    ], VolumeInput.prototype, "snapshotReservationDetail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotSchedulePolicy" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "snapshotSchedulePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageAggregatePool" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "storageAggregatePool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageType" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "storageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workloadProfile" }),
        __metadata("design:type", String)
    ], VolumeInput.prototype, "workloadProfile", void 0);
    return VolumeInput;
}(utils_1.SpeakeasyBase));
exports.VolumeInput = VolumeInput;
