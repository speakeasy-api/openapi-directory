"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CostEstimateAssumptions:
    
    assume3_d_secure_authenticated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assume3DSecureAuthenticated'), 'exclude': lambda f: f is None }})
    r"""If true, the cardholder is expected to successfully authorise via 3D Secure."""  
    assume_level3_data: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assumeLevel3Data'), 'exclude': lambda f: f is None }})
    r"""If true, the transaction is expected to have valid Level 3 data."""  
    installments: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installments'), 'exclude': lambda f: f is None }})
    r"""If not zero, the number of installments."""  
    