<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IndividualNameInput - The Individual Name resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IndividualNameInput
{
    /**
     * The direction used to render the individual's name.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndividualNameDirectionEnum $direction
     */
	#[\JMS\Serializer\Annotation\SerializedName('direction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndividualNameDirectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndividualNameDirectionEnum $direction = null;
    
    /**
     * The individual's family name.
     * 
     * @var ?string $familyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('familyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $familyName = null;
    
    /**
     * The individual's formal salutation, for example, "Mr William Smith".
     * 
     * @var ?string $formalSalutation
     */
	#[\JMS\Serializer\Annotation\SerializedName('formalSalutation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formalSalutation = null;
    
    /**
     * The individual's given name.
     * 
     * @var ?string $givenName
     */
	#[\JMS\Serializer\Annotation\SerializedName('givenName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $givenName = null;
    
    /**
     * The individual's informal salutation, for example, "Bill".
     * 
     * @var ?string $informalSalutation
     */
	#[\JMS\Serializer\Annotation\SerializedName('informalSalutation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $informalSalutation = null;
    
    /**
     * The individual's middle name.
     * 
     * @var ?string $middleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('middleName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $middleName = null;
    
    /**
     * The individual's name prefix.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndividualNameNamePrefixEnum $namePrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('namePrefix')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndividualNameNamePrefixEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndividualNameNamePrefixEnum $namePrefix = null;
    
    /**
     * The individual's name suffix, for example, "Jr" or "Sr".
     * 
     * @var ?string $nameSuffix
     */
	#[\JMS\Serializer\Annotation\SerializedName('nameSuffix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nameSuffix = null;
    
    /**
     * The name type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndividualNameNameTypeEnum $nameType
     */
	#[\JMS\Serializer\Annotation\SerializedName('nameType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndividualNameNameTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndividualNameNameTypeEnum $nameType = null;
    
	public function __construct()
	{
		$this->direction = null;
		$this->familyName = null;
		$this->formalSalutation = null;
		$this->givenName = null;
		$this->informalSalutation = null;
		$this->middleName = null;
		$this->namePrefix = null;
		$this->nameSuffix = null;
		$this->nameType = null;
	}
}
