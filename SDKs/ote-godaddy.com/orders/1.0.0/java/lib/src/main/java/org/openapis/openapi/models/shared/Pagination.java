/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Pagination {
    /**
     * URI to access the first page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first")
    public String first;

    public Pagination withFirst(String first) {
        this.first = first;
        return this;
    }
    
    /**
     * URI to access the last page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last")
    public String last;

    public Pagination withLast(String last) {
        this.last = last;
        return this;
    }
    
    /**
     * URI to access the next page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;

    public Pagination withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * URI to access the previous page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previous")
    public String previous;

    public Pagination withPrevious(String previous) {
        this.previous = previous;
        return this;
    }
    
    /**
     * Number of records available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;

    public Pagination withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public Pagination(){}
}
