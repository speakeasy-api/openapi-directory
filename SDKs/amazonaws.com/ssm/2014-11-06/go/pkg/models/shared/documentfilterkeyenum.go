// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DocumentFilterKeyEnum string

const (
	DocumentFilterKeyEnumName          DocumentFilterKeyEnum = "Name"
	DocumentFilterKeyEnumOwner         DocumentFilterKeyEnum = "Owner"
	DocumentFilterKeyEnumPlatformTypes DocumentFilterKeyEnum = "PlatformTypes"
	DocumentFilterKeyEnumDocumentType  DocumentFilterKeyEnum = "DocumentType"
)

func (e DocumentFilterKeyEnum) ToPointer() *DocumentFilterKeyEnum {
	return &e
}

func (e *DocumentFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Name":
		fallthrough
	case "Owner":
		fallthrough
	case "PlatformTypes":
		fallthrough
	case "DocumentType":
		*e = DocumentFilterKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentFilterKeyEnum: %v", v)
	}
}
