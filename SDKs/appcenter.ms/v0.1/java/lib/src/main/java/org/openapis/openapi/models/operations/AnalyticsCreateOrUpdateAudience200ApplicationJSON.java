/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AnalyticsCreateOrUpdateAudience200ApplicationJSON - Audience definition.
 */
public class AnalyticsCreateOrUpdateAudience200ApplicationJSON {
    /**
     * Custom properties used in the definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_properties")
    public java.util.Map<String, AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum> customProperties;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withCustomProperties(java.util.Map<String, AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum> customProperties) {
        this.customProperties = customProperties;
        return this;
    }
    
    /**
     * Audience definition in OData format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("definition")
    public String definition;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withDefinition(String definition) {
        this.definition = definition;
        return this;
    }
    
    /**
     * Audience description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Estimated audience size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimated_count")
    public Long estimatedCount;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withEstimatedCount(Long estimatedCount) {
        this.estimatedCount = estimatedCount;
        return this;
    }
    
    /**
     * Estimated total audience size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimated_total_count")
    public Long estimatedTotalCount;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withEstimatedTotalCount(Long estimatedTotalCount) {
        this.estimatedTotalCount = estimatedTotalCount;
        return this;
    }
    
    /**
     * Audience name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Audience state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum state;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withState(AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Date the audience was last refreshed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public AnalyticsCreateOrUpdateAudience200ApplicationJSON withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    public AnalyticsCreateOrUpdateAudience200ApplicationJSON(){}
}
