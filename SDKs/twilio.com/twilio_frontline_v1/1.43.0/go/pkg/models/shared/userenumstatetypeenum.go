// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserEnumStateTypeEnum string

const (
	UserEnumStateTypeEnumActive      UserEnumStateTypeEnum = "active"
	UserEnumStateTypeEnumDeactivated UserEnumStateTypeEnum = "deactivated"
)

func (e UserEnumStateTypeEnum) ToPointer() *UserEnumStateTypeEnum {
	return &e
}

func (e *UserEnumStateTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "deactivated":
		*e = UserEnumStateTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserEnumStateTypeEnum: %v", v)
	}
}
