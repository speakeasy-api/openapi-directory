"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoringDestination:
    r"""Configuration of a specific monitoring destination (the producer project or the consumer project)."""
    
    metrics: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section."""  
    monitored_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monitoredResource'), 'exclude': lambda f: f is None }})
    r"""The monitored resource type. The type must be defined in Service.monitored_resources section."""  
    