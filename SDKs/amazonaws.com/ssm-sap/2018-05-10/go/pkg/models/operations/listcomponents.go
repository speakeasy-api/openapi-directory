// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListComponentsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type ListComponentsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListComponentsRequestBody struct {
	// The ID of the application.
	ApplicationID *string `json:"ApplicationId,omitempty"`
	// <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.</p> <p>If you do not specify a value for MaxResults, the request returns 50 items per page by default.</p>
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The token for the next page of results.
	NextToken *string `json:"NextToken,omitempty"`
}

type ListComponentsRequest struct {
	QueryParams ListComponentsQueryParams
	Headers     ListComponentsHeaders
	Request     ListComponentsRequestBody `request:"mediaType=application/json"`
}

type ListComponentsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListComponentsOutput *shared.ListComponentsOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
