// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateCallSecurity struct {
	BearerAuth shared.SchemeBearerAuth `security:"scheme,type=http,subtype=bearer"`
}

type CreateCallRequestBodyType string

const (
	CreateCallRequestBodyTypeCreateCallRequestNcco      CreateCallRequestBodyType = "CreateCallRequestNcco"
	CreateCallRequestBodyTypeCreateCallRequestAnswerURL CreateCallRequestBodyType = "CreateCallRequestAnswerUrl"
)

type CreateCallRequestBody struct {
	CreateCallRequestNcco      *shared.CreateCallRequestNcco
	CreateCallRequestAnswerURL *shared.CreateCallRequestAnswerURL

	Type CreateCallRequestBodyType
}

func CreateCreateCallRequestBodyCreateCallRequestNcco(createCallRequestNcco shared.CreateCallRequestNcco) CreateCallRequestBody {
	typ := CreateCallRequestBodyTypeCreateCallRequestNcco

	return CreateCallRequestBody{
		CreateCallRequestNcco: &createCallRequestNcco,
		Type:                  typ,
	}
}

func CreateCreateCallRequestBodyCreateCallRequestAnswerURL(createCallRequestAnswerURL shared.CreateCallRequestAnswerURL) CreateCallRequestBody {
	typ := CreateCallRequestBodyTypeCreateCallRequestAnswerURL

	return CreateCallRequestBody{
		CreateCallRequestAnswerURL: &createCallRequestAnswerURL,
		Type:                       typ,
	}
}

func (u *CreateCallRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	createCallRequestNcco := new(shared.CreateCallRequestNcco)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createCallRequestNcco); err == nil {
		u.CreateCallRequestNcco = createCallRequestNcco
		u.Type = CreateCallRequestBodyTypeCreateCallRequestNcco
		return nil
	}

	createCallRequestAnswerURL := new(shared.CreateCallRequestAnswerURL)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createCallRequestAnswerURL); err == nil {
		u.CreateCallRequestAnswerURL = createCallRequestAnswerURL
		u.Type = CreateCallRequestBodyTypeCreateCallRequestAnswerURL
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateCallRequestBody) MarshalJSON() ([]byte, error) {
	if u.CreateCallRequestNcco != nil {
		return json.Marshal(u.CreateCallRequestNcco)
	}

	if u.CreateCallRequestAnswerURL != nil {
		return json.Marshal(u.CreateCallRequestAnswerURL)
	}

	return nil, nil
}

type CreateCallRequest struct {
	// Call Details
	Request  *CreateCallRequestBody `request:"mediaType=application/json"`
	Security CreateCallSecurity
}

type CreateCallResponse struct {
	ContentType string
	// Created
	CreateCallResponse *shared.CreateCallResponse
	StatusCode         int
	RawResponse        *http.Response
}
