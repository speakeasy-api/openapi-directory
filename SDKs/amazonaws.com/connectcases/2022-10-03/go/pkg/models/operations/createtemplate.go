// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateTemplateRequestBodyLayoutConfiguration - Object to store configuration of layouts associated to the template.
type CreateTemplateRequestBodyLayoutConfiguration struct {
	DefaultLayout *string `json:"defaultLayout,omitempty"`
}

// CreateTemplateRequestBodyStatusEnum - The status of the template.
type CreateTemplateRequestBodyStatusEnum string

const (
	CreateTemplateRequestBodyStatusEnumActive   CreateTemplateRequestBodyStatusEnum = "Active"
	CreateTemplateRequestBodyStatusEnumInactive CreateTemplateRequestBodyStatusEnum = "Inactive"
)

func (e *CreateTemplateRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Inactive":
		*e = CreateTemplateRequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTemplateRequestBodyStatusEnum: %s", s)
	}
}

type CreateTemplateRequestBody struct {
	// A brief description of the template.
	Description *string `json:"description,omitempty"`
	// Object to store configuration of layouts associated to the template.
	LayoutConfiguration *CreateTemplateRequestBodyLayoutConfiguration `json:"layoutConfiguration,omitempty"`
	// A name for the template. It must be unique per domain.
	Name string `json:"name"`
	// A list of fields that must contain a value for a case to be successfully created with this template.
	RequiredFields []shared.RequiredField `json:"requiredFields,omitempty"`
	// The status of the template.
	Status *CreateTemplateRequestBodyStatusEnum `json:"status,omitempty"`
}

type CreateTemplateRequest struct {
	RequestBody       CreateTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier of the Cases domain.
	DomainID string `pathParam:"style=simple,explode=false,name=domainId"`
}

type CreateTemplateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateTemplateResponse *shared.CreateTemplateResponse
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
