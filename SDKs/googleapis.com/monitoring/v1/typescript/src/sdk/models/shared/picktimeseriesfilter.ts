/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * How to use the ranking to select time series that pass through the filter.
 */
export enum PickTimeSeriesFilterDirectionEnum {
  DirectionUnspecified = "DIRECTION_UNSPECIFIED",
  Top = "TOP",
  Bottom = "BOTTOM",
}

/**
 * ranking_method is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
 */
export enum PickTimeSeriesFilterRankingMethodEnum {
  MethodUnspecified = "METHOD_UNSPECIFIED",
  MethodMean = "METHOD_MEAN",
  MethodMax = "METHOD_MAX",
  MethodMin = "METHOD_MIN",
  MethodSum = "METHOD_SUM",
  MethodLatest = "METHOD_LATEST",
}

/**
 * Describes a ranking-based time series filter. Each input time series is ranked with an aligner. The filter will allow up to num_time_series time series to pass through it, selecting them based on the relative ranking.For example, if ranking_method is METHOD_MEAN,direction is BOTTOM, and num_time_series is 3, then the 3 times series with the lowest mean values will pass through the filter.
 */
export class PickTimeSeriesFilter extends SpeakeasyBase {
  /**
   * How to use the ranking to select time series that pass through the filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: PickTimeSeriesFilterDirectionEnum;

  /**
   * How many time series to allow to pass through the filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numTimeSeries" })
  numTimeSeries?: number;

  /**
   * ranking_method is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rankingMethod" })
  rankingMethod?: PickTimeSeriesFilterRankingMethodEnum;
}
