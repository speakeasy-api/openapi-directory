/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Predicate } from "./predicate";
import { SortProperty } from "./sortproperty";
import { Expose, Type } from "class-transformer";

/**
 * Describes the configuration for binding a component's properties to data.
 */
export class ComponentDataConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "identifiers" })
  identifiers?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model: string;

  @SpeakeasyMetadata()
  @Expose({ name: "predicate" })
  @Type(() => Predicate)
  predicate?: Predicate;

  @SpeakeasyMetadata({ elemType: SortProperty })
  @Expose({ name: "sort" })
  @Type(() => SortProperty)
  sort?: SortProperty[];
}
