// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateCallSecurity struct {
	BearerAuth shared.SchemeBearerAuth `security:"scheme,type=http,subtype=bearer"`
}

type UpdateCallPathParams struct {
	// UUID of the Call
	UUID string `pathParam:"style=simple,explode=false,name=uuid"`
}

type UpdateCallRequestBodyType string

const (
	UpdateCallRequestBodyTypeUpdateCallRequestTransferNcco      UpdateCallRequestBodyType = "UpdateCallRequestTransferNcco"
	UpdateCallRequestBodyTypeUpdateCallRequestTransferAnswerURL UpdateCallRequestBodyType = "UpdateCallRequestTransferAnswerUrl"
	UpdateCallRequestBodyTypeUpdateCallRequestHangup            UpdateCallRequestBodyType = "UpdateCallRequestHangup"
	UpdateCallRequestBodyTypeUpdateCallRequestMute              UpdateCallRequestBodyType = "UpdateCallRequestMute"
	UpdateCallRequestBodyTypeUpdateCallRequestUnmute            UpdateCallRequestBodyType = "UpdateCallRequestUnmute"
	UpdateCallRequestBodyTypeUpdateCallRequestEarmuff           UpdateCallRequestBodyType = "UpdateCallRequestEarmuff"
	UpdateCallRequestBodyTypeUpdateCallRequestUnearmuff         UpdateCallRequestBodyType = "UpdateCallRequestUnearmuff"
)

type UpdateCallRequestBody struct {
	UpdateCallRequestTransferNcco      *shared.UpdateCallRequestTransferNcco
	UpdateCallRequestTransferAnswerURL *shared.UpdateCallRequestTransferAnswerURL
	UpdateCallRequestHangup            *shared.UpdateCallRequestHangup
	UpdateCallRequestMute              *shared.UpdateCallRequestMute
	UpdateCallRequestUnmute            *shared.UpdateCallRequestUnmute
	UpdateCallRequestEarmuff           *shared.UpdateCallRequestEarmuff
	UpdateCallRequestUnearmuff         *shared.UpdateCallRequestUnearmuff

	Type UpdateCallRequestBodyType
}

func CreateUpdateCallRequestBodyUpdateCallRequestTransferNcco(updateCallRequestTransferNcco shared.UpdateCallRequestTransferNcco) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestTransferNcco

	return UpdateCallRequestBody{
		UpdateCallRequestTransferNcco: &updateCallRequestTransferNcco,
		Type:                          typ,
	}
}

func CreateUpdateCallRequestBodyUpdateCallRequestTransferAnswerURL(updateCallRequestTransferAnswerURL shared.UpdateCallRequestTransferAnswerURL) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestTransferAnswerURL

	return UpdateCallRequestBody{
		UpdateCallRequestTransferAnswerURL: &updateCallRequestTransferAnswerURL,
		Type:                               typ,
	}
}

func CreateUpdateCallRequestBodyUpdateCallRequestHangup(updateCallRequestHangup shared.UpdateCallRequestHangup) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestHangup

	return UpdateCallRequestBody{
		UpdateCallRequestHangup: &updateCallRequestHangup,
		Type:                    typ,
	}
}

func CreateUpdateCallRequestBodyUpdateCallRequestMute(updateCallRequestMute shared.UpdateCallRequestMute) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestMute

	return UpdateCallRequestBody{
		UpdateCallRequestMute: &updateCallRequestMute,
		Type:                  typ,
	}
}

func CreateUpdateCallRequestBodyUpdateCallRequestUnmute(updateCallRequestUnmute shared.UpdateCallRequestUnmute) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestUnmute

	return UpdateCallRequestBody{
		UpdateCallRequestUnmute: &updateCallRequestUnmute,
		Type:                    typ,
	}
}

func CreateUpdateCallRequestBodyUpdateCallRequestEarmuff(updateCallRequestEarmuff shared.UpdateCallRequestEarmuff) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestEarmuff

	return UpdateCallRequestBody{
		UpdateCallRequestEarmuff: &updateCallRequestEarmuff,
		Type:                     typ,
	}
}

func CreateUpdateCallRequestBodyUpdateCallRequestUnearmuff(updateCallRequestUnearmuff shared.UpdateCallRequestUnearmuff) UpdateCallRequestBody {
	typ := UpdateCallRequestBodyTypeUpdateCallRequestUnearmuff

	return UpdateCallRequestBody{
		UpdateCallRequestUnearmuff: &updateCallRequestUnearmuff,
		Type:                       typ,
	}
}

func (u *UpdateCallRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	updateCallRequestTransferNcco := new(shared.UpdateCallRequestTransferNcco)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestTransferNcco); err == nil {
		u.UpdateCallRequestTransferNcco = updateCallRequestTransferNcco
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestTransferNcco
		return nil
	}

	updateCallRequestTransferAnswerURL := new(shared.UpdateCallRequestTransferAnswerURL)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestTransferAnswerURL); err == nil {
		u.UpdateCallRequestTransferAnswerURL = updateCallRequestTransferAnswerURL
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestTransferAnswerURL
		return nil
	}

	updateCallRequestHangup := new(shared.UpdateCallRequestHangup)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestHangup); err == nil {
		u.UpdateCallRequestHangup = updateCallRequestHangup
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestHangup
		return nil
	}

	updateCallRequestMute := new(shared.UpdateCallRequestMute)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestMute); err == nil {
		u.UpdateCallRequestMute = updateCallRequestMute
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestMute
		return nil
	}

	updateCallRequestUnmute := new(shared.UpdateCallRequestUnmute)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestUnmute); err == nil {
		u.UpdateCallRequestUnmute = updateCallRequestUnmute
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestUnmute
		return nil
	}

	updateCallRequestEarmuff := new(shared.UpdateCallRequestEarmuff)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestEarmuff); err == nil {
		u.UpdateCallRequestEarmuff = updateCallRequestEarmuff
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestEarmuff
		return nil
	}

	updateCallRequestUnearmuff := new(shared.UpdateCallRequestUnearmuff)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&updateCallRequestUnearmuff); err == nil {
		u.UpdateCallRequestUnearmuff = updateCallRequestUnearmuff
		u.Type = UpdateCallRequestBodyTypeUpdateCallRequestUnearmuff
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u UpdateCallRequestBody) MarshalJSON() ([]byte, error) {
	if u.UpdateCallRequestTransferNcco != nil {
		return json.Marshal(u.UpdateCallRequestTransferNcco)
	}

	if u.UpdateCallRequestTransferAnswerURL != nil {
		return json.Marshal(u.UpdateCallRequestTransferAnswerURL)
	}

	if u.UpdateCallRequestHangup != nil {
		return json.Marshal(u.UpdateCallRequestHangup)
	}

	if u.UpdateCallRequestMute != nil {
		return json.Marshal(u.UpdateCallRequestMute)
	}

	if u.UpdateCallRequestUnmute != nil {
		return json.Marshal(u.UpdateCallRequestUnmute)
	}

	if u.UpdateCallRequestEarmuff != nil {
		return json.Marshal(u.UpdateCallRequestEarmuff)
	}

	if u.UpdateCallRequestUnearmuff != nil {
		return json.Marshal(u.UpdateCallRequestUnearmuff)
	}

	return nil, nil
}

type UpdateCallRequest struct {
	PathParams UpdateCallPathParams
	Request    UpdateCallRequestBody `request:"mediaType=application/json"`
	Security   UpdateCallSecurity
}

type UpdateCallResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
