"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createfilesystemrequest as shared_createfilesystemrequest
from ..shared import createfilesystemresponse as shared_createfilesystemresponse
from enum import Enum
from typing import Any, Optional

class CreateFileSystemXAmzTargetEnum(str, Enum):
    AWS_SIMBA_API_SERVICE_V20180301_CREATE_FILE_SYSTEM = 'AWSSimbaAPIService_v20180301.CreateFileSystem'


@dataclasses.dataclass
class CreateFileSystemRequest:
    
    create_file_system_request: shared_createfilesystemrequest.CreateFileSystemRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: CreateFileSystemXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class CreateFileSystemResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    active_directory_error: Optional[Any] = dataclasses.field(default=None)
    r"""ActiveDirectoryError"""  
    bad_request: Optional[Any] = dataclasses.field(default=None)
    r"""BadRequest"""  
    create_file_system_response: Optional[shared_createfilesystemresponse.CreateFileSystemResponse] = dataclasses.field(default=None)
    r"""Success"""  
    incompatible_parameter_error: Optional[Any] = dataclasses.field(default=None)
    r"""IncompatibleParameterError"""  
    internal_server_error: Optional[Any] = dataclasses.field(default=None)
    r"""InternalServerError"""  
    invalid_export_path: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidExportPath"""  
    invalid_import_path: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidImportPath"""  
    invalid_network_settings: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidNetworkSettings"""  
    invalid_per_unit_storage_throughput: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidPerUnitStorageThroughput"""  
    missing_file_system_configuration: Optional[Any] = dataclasses.field(default=None)
    r"""MissingFileSystemConfiguration"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_limit_exceeded: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceLimitExceeded"""  
    