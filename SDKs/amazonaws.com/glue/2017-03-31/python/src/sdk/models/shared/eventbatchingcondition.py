"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventBatchingCondition:
    r"""Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires."""
    
    batch_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchSize') }})  
    batch_window: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchWindow'), 'exclude': lambda f: f is None }})  
    