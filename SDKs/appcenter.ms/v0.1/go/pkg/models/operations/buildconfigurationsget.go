// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type BuildConfigurationsGetSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// BuildConfigurationsGetFormatEnum - Configuration format
type BuildConfigurationsGetFormatEnum string

const (
	BuildConfigurationsGetFormatEnumYaml BuildConfigurationsGetFormatEnum = "yaml"
	BuildConfigurationsGetFormatEnumJSON BuildConfigurationsGetFormatEnum = "json"
)

func (e *BuildConfigurationsGetFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "yaml":
		fallthrough
	case "json":
		*e = BuildConfigurationsGetFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BuildConfigurationsGetFormatEnum: %s", s)
	}
}

type BuildConfigurationsGetRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The branch name
	Branch string `pathParam:"style=simple,explode=false,name=branch"`
	// Configuration format
	Format *BuildConfigurationsGetFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// BuildConfigurationsGetDefaultApplicationJSON - Bad Request
type BuildConfigurationsGetDefaultApplicationJSON struct {
	Code    string `json:"code"`
	ID      string `json:"id"`
	Message string `json:"message"`
}

// BuildConfigurationsGet200ApplicationJSON - The build configuration in Azure pipeline YAML format
type BuildConfigurationsGet200ApplicationJSON struct {
	// Azure Pipelines YAML file
	Yaml *string `json:"yaml,omitempty"`
}

type BuildConfigurationsGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	BuildConfigurationsGet200ApplicationJSONObject *BuildConfigurationsGet200ApplicationJSON
	// Bad Request
	BuildConfigurationsGetDefaultApplicationJSONObject *BuildConfigurationsGetDefaultApplicationJSON
}
