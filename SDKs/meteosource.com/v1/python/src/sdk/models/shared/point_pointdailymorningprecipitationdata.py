"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PointPointDailyMorningPrecipitationData:
    
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""Total precipitation amount accumulated since last hour. (morning sum)
    Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h
    """  
    type: Optional[bytes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Precipitation type, may be one of:
    
    * `none`, it there is no precipitation
    * `rain`
    * `snow`
    * `rain_snow`
    * `ice pellets`
    * `frozen rain`
    
    Unit: precipitation type
    """  
    