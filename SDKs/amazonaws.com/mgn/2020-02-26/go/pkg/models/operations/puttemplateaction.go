// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutTemplateActionRequestBodyCategoryEnum - Template post migration custom action category.
type PutTemplateActionRequestBodyCategoryEnum string

const (
	PutTemplateActionRequestBodyCategoryEnumDisasterRecovery       PutTemplateActionRequestBodyCategoryEnum = "DISASTER_RECOVERY"
	PutTemplateActionRequestBodyCategoryEnumOperatingSystem        PutTemplateActionRequestBodyCategoryEnum = "OPERATING_SYSTEM"
	PutTemplateActionRequestBodyCategoryEnumLicenseAndSubscription PutTemplateActionRequestBodyCategoryEnum = "LICENSE_AND_SUBSCRIPTION"
	PutTemplateActionRequestBodyCategoryEnumValidation             PutTemplateActionRequestBodyCategoryEnum = "VALIDATION"
	PutTemplateActionRequestBodyCategoryEnumObservability          PutTemplateActionRequestBodyCategoryEnum = "OBSERVABILITY"
	PutTemplateActionRequestBodyCategoryEnumSecurity               PutTemplateActionRequestBodyCategoryEnum = "SECURITY"
	PutTemplateActionRequestBodyCategoryEnumNetworking             PutTemplateActionRequestBodyCategoryEnum = "NETWORKING"
	PutTemplateActionRequestBodyCategoryEnumConfiguration          PutTemplateActionRequestBodyCategoryEnum = "CONFIGURATION"
	PutTemplateActionRequestBodyCategoryEnumBackup                 PutTemplateActionRequestBodyCategoryEnum = "BACKUP"
	PutTemplateActionRequestBodyCategoryEnumOther                  PutTemplateActionRequestBodyCategoryEnum = "OTHER"
)

func (e *PutTemplateActionRequestBodyCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISASTER_RECOVERY":
		fallthrough
	case "OPERATING_SYSTEM":
		fallthrough
	case "LICENSE_AND_SUBSCRIPTION":
		fallthrough
	case "VALIDATION":
		fallthrough
	case "OBSERVABILITY":
		fallthrough
	case "SECURITY":
		fallthrough
	case "NETWORKING":
		fallthrough
	case "CONFIGURATION":
		fallthrough
	case "BACKUP":
		fallthrough
	case "OTHER":
		*e = PutTemplateActionRequestBodyCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutTemplateActionRequestBodyCategoryEnum: %s", s)
	}
}

type PutTemplateActionRequestBody struct {
	// Template post migration custom action ID.
	ActionID string `json:"actionID"`
	// Template post migration custom action name.
	ActionName string `json:"actionName"`
	// Template post migration custom action active status.
	Active *bool `json:"active,omitempty"`
	// Template post migration custom action category.
	Category *PutTemplateActionRequestBodyCategoryEnum `json:"category,omitempty"`
	// Template post migration custom action description.
	Description *string `json:"description,omitempty"`
	// Template post migration custom action document identifier.
	DocumentIdentifier string `json:"documentIdentifier"`
	// Template post migration custom action document version.
	DocumentVersion *string `json:"documentVersion,omitempty"`
	// Template post migration custom action external parameters.
	ExternalParameters map[string]shared.SsmExternalParameter `json:"externalParameters,omitempty"`
	// Launch configuration template ID.
	LaunchConfigurationTemplateID string `json:"launchConfigurationTemplateID"`
	// Template post migration custom action must succeed for cutover.
	MustSucceedForCutover *bool `json:"mustSucceedForCutover,omitempty"`
	// Operating system eligible for this template post migration custom action.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// Template post migration custom action order.
	Order int64 `json:"order"`
	// Template post migration custom action parameters.
	Parameters map[string][]shared.SsmParameterStoreParameter `json:"parameters,omitempty"`
	// Template post migration custom action timeout in seconds.
	TimeoutSeconds *int64 `json:"timeoutSeconds,omitempty"`
}

type PutTemplateActionRequest struct {
	RequestBody       PutTemplateActionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutTemplateActionResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	StatusCode        int
	RawResponse       *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	TemplateActionDocument *shared.TemplateActionDocument
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
