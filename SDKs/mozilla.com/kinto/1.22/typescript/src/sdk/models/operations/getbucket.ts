/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetBucketRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-Match",
  })
  ifMatch?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-None-Match",
  })
  ifNoneMatch?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=_fields",
  })
  fields?: string[];

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * The request is invalid.
 */
export class GetBucketErrorSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "errno" })
  errno: number;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error: string;

  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  info?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class GetBucketObjectSchemaData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collection:schema" })
  collectionSchema?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "group:schema" })
  groupSchema?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "record:schema" })
  recordSchema?: Record<string, any>;
}

export class GetBucketObjectSchemaPermissions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collection:create" })
  collectionCreate?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "group:create" })
  groupCreate?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "read" })
  read?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "write" })
  write?: string[];
}

/**
 * Return the target object.
 */
export class GetBucketObjectSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => GetBucketObjectSchemaData)
  data?: GetBucketObjectSchemaData;

  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => GetBucketObjectSchemaPermissions)
  permissions?: GetBucketObjectSchemaPermissions;
}

export class GetBucketResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The request is invalid.
   */
  @SpeakeasyMetadata()
  errorSchema?: GetBucketErrorSchema;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Return the target object.
   */
  @SpeakeasyMetadata()
  objectSchema?: GetBucketObjectSchema;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
