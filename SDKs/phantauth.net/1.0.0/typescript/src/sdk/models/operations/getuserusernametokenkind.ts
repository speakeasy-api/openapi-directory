/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Token type
 */
export enum GetUserUsernameTokenKindKindEnum {
  Access = "'access'",
  Refresh = "'refresh'",
  Authorization = "'authorization'",
  Id = "'id'",
  Selfie = "'selfie'",
  Plain = "'plain'",
}

export class GetUserUsernameTokenKindRequest extends SpeakeasyBase {
  /**
   * Token type
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=kind",
  })
  kind: GetUserUsernameTokenKindKindEnum;

  /**
   * OpenID Connect scope
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope?: string;

  /**
   * A username or email.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class GetUserUsernameTokenKindResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
