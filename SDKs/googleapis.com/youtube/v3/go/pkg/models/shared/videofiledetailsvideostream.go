// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoFileDetailsVideoStreamRotationEnum - The amount that YouTube needs to rotate the original source content to properly display the video.
type VideoFileDetailsVideoStreamRotationEnum string

const (
	VideoFileDetailsVideoStreamRotationEnumNone             VideoFileDetailsVideoStreamRotationEnum = "none"
	VideoFileDetailsVideoStreamRotationEnumClockwise        VideoFileDetailsVideoStreamRotationEnum = "clockwise"
	VideoFileDetailsVideoStreamRotationEnumUpsideDown       VideoFileDetailsVideoStreamRotationEnum = "upsideDown"
	VideoFileDetailsVideoStreamRotationEnumCounterClockwise VideoFileDetailsVideoStreamRotationEnum = "counterClockwise"
	VideoFileDetailsVideoStreamRotationEnumOther            VideoFileDetailsVideoStreamRotationEnum = "other"
)

func (e *VideoFileDetailsVideoStreamRotationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "clockwise":
		fallthrough
	case "upsideDown":
		fallthrough
	case "counterClockwise":
		fallthrough
	case "other":
		*e = VideoFileDetailsVideoStreamRotationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoFileDetailsVideoStreamRotationEnum: %s", s)
	}
}

// VideoFileDetailsVideoStream - Information about a video stream.
type VideoFileDetailsVideoStream struct {
	// The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.
	AspectRatio *float64 `json:"aspectRatio,omitempty"`
	// The video stream's bitrate, in bits per second.
	BitrateBps *string `json:"bitrateBps,omitempty"`
	// The video codec that the stream uses.
	Codec *string `json:"codec,omitempty"`
	// The video stream's frame rate, in frames per second.
	FrameRateFps *float64 `json:"frameRateFps,omitempty"`
	// The encoded video content's height in pixels.
	HeightPixels *int64 `json:"heightPixels,omitempty"`
	// The amount that YouTube needs to rotate the original source content to properly display the video.
	Rotation *VideoFileDetailsVideoStreamRotationEnum `json:"rotation,omitempty"`
	// A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
	Vendor *string `json:"vendor,omitempty"`
	// The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.
	WidthPixels *int64 `json:"widthPixels,omitempty"`
}
