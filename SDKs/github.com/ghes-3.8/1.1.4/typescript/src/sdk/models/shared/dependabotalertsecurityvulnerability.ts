/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DependabotAlertPackage } from "./dependabotalertpackage";
import { Expose, Type } from "class-transformer";

/**
 * Details pertaining to the package version that patches this vulnerability.
 */
export class DependabotAlertSecurityVulnerabilityFirstPatchedVersion extends SpeakeasyBase {
  /**
   * The package version that patches this vulnerability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier: string;
}

/**
 * The severity of the vulnerability.
 */
export enum DependabotAlertSecurityVulnerabilitySeverityEnum {
  Low = "low",
  Medium = "medium",
  High = "high",
  Critical = "critical",
}

/**
 * Details pertaining to one vulnerable version range for the advisory.
 */
export class DependabotAlertSecurityVulnerability extends SpeakeasyBase {
  /**
   * Details pertaining to the package version that patches this vulnerability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_patched_version" })
  @Type(() => DependabotAlertSecurityVulnerabilityFirstPatchedVersion)
  firstPatchedVersion: DependabotAlertSecurityVulnerabilityFirstPatchedVersion;

  /**
   * Details for the vulnerable package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "package" })
  @Type(() => DependabotAlertPackage)
  package: DependabotAlertPackage;

  /**
   * The severity of the vulnerability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity: DependabotAlertSecurityVulnerabilitySeverityEnum;

  /**
   * Conditions that identify vulnerable versions of this vulnerability's package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vulnerable_version_range" })
  vulnerableVersionRange: string;
}
