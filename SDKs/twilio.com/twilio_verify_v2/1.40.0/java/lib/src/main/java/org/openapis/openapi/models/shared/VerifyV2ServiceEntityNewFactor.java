/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * VerifyV2ServiceEntityNewFactor - Created
 */
public class VerifyV2ServiceEntityNewFactor {
    /**
     * The unique SID identifier of the Account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public VerifyV2ServiceEntityNewFactor withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * Contains the `factor_type` specific secret and metadata.
     * For push, this is `binding.public_key` and `binding.alg`.
     * For totp, this is `binding.secret` and `binding.uri`. The `binding.uri` property is generated following the [google authenticator key URI format](https://github.com/google/google-authenticator/wiki/Key-Uri-Format), and `Factor.friendly_name` is used for the \u201caccountname\u201d value and `Service.friendly_name` or `Service.totp.issuer` is used for the `issuer` value.
     * 
     * 
     * The Binding property is ONLY returned upon Factor creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("binding")
    public Object binding;
    public VerifyV2ServiceEntityNewFactor withBinding(Object binding) {
        this.binding = binding;
        return this;
    }
    
    /**
     * An object that contains configurations specific to a `factor_type`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config")
    public Object config;
    public VerifyV2ServiceEntityNewFactor withConfig(Object config) {
        this.config = config;
        return this;
    }
    
    /**
     * The date that this Factor was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public VerifyV2ServiceEntityNewFactor withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date that this Factor was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public VerifyV2ServiceEntityNewFactor withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The unique SID identifier of the Entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entity_sid")
    public String entitySid;
    public VerifyV2ServiceEntityNewFactor withEntitySid(String entitySid) {
        this.entitySid = entitySid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("factor_type")
    public NewFactorEnumFactorTypesEnum factorType;
    public VerifyV2ServiceEntityNewFactor withFactorType(NewFactorEnumFactorTypesEnum factorType) {
        this.factorType = factorType;
        return this;
    }
    
    /**
     * The friendly name of this Factor. This can be any string up to 64 characters, meant for humans to distinguish between Factors.
     * For `factor_type` `push`, this could be a device name.
     * For `factor_type` `totp`, this value is used as the \u201caccount name\u201d in constructing the `binding.uri` property.
     * At the same time, we recommend avoiding providing PII.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;
    public VerifyV2ServiceEntityNewFactor withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identity")
    public String identity;
    public VerifyV2ServiceEntityNewFactor withIdentity(String identity) {
        this.identity = identity;
        return this;
    }
    
    /**
     * Custom metadata associated with the factor. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{"os": "Android"}`. Can be up to 1024 characters in length.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Object metadata;
    public VerifyV2ServiceEntityNewFactor withMetadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The unique SID identifier of the Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_sid")
    public String serviceSid;
    public VerifyV2ServiceEntityNewFactor withServiceSid(String serviceSid) {
        this.serviceSid = serviceSid;
        return this;
    }
    
    /**
     * A 34 character string that uniquely identifies this Factor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public VerifyV2ServiceEntityNewFactor withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public NewFactorEnumFactorStatusesEnum status;
    public VerifyV2ServiceEntityNewFactor withStatus(NewFactorEnumFactorStatusesEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The URL of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public VerifyV2ServiceEntityNewFactor withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
