// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryFilesetSortByEnum - Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.
//
// Valid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**.
type QueryFilesetSortByEnum string

const (
	QueryFilesetSortByEnumName                   QueryFilesetSortByEnum = "name"
	QueryFilesetSortByEnumHostName               QueryFilesetSortByEnum = "hostName"
	QueryFilesetSortByEnumTemplateID             QueryFilesetSortByEnum = "templateId"
	QueryFilesetSortByEnumEffectiveSLADomainName QueryFilesetSortByEnum = "effectiveSlaDomainName"
	QueryFilesetSortByEnumIncludes               QueryFilesetSortByEnum = "includes"
	QueryFilesetSortByEnumExcludes               QueryFilesetSortByEnum = "excludes"
	QueryFilesetSortByEnumExceptions             QueryFilesetSortByEnum = "exceptions"
)

func (e QueryFilesetSortByEnum) ToPointer() *QueryFilesetSortByEnum {
	return &e
}

func (e *QueryFilesetSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "hostName":
		fallthrough
	case "templateId":
		fallthrough
	case "effectiveSlaDomainName":
		fallthrough
	case "includes":
		fallthrough
	case "excludes":
		fallthrough
	case "exceptions":
		*e = QueryFilesetSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFilesetSortByEnum: %v", v)
	}
}

// QueryFilesetSortOrderEnum - Sort order, either ascending or descending.
type QueryFilesetSortOrderEnum string

const (
	QueryFilesetSortOrderEnumAsc  QueryFilesetSortOrderEnum = "asc"
	QueryFilesetSortOrderEnumDesc QueryFilesetSortOrderEnum = "desc"
)

func (e QueryFilesetSortOrderEnum) ToPointer() *QueryFilesetSortOrderEnum {
	return &e
}

func (e *QueryFilesetSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryFilesetSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFilesetSortOrderEnum: %v", v)
	}
}

type QueryFilesetRequest struct {
	// Filter the summary information based on the ID of the effective SLA Domain inherited by a fileset.
	// Use **_UNPROTECTED_** to only return information for filesets that do not have an effective SLA Domain.
	// Use **_PROTECTED_** to only return information for filesets that do have an effective SLA Domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Filter the summary information based on the ID of the host referenced by the fileset.
	HostID *string `queryParam:"style=form,explode=true,name=host_id"`
	// Retrieve filesets with a host name matching the provided name. The search is performed as a case-insensitive infix search.
	HostName *string `queryParam:"style=form,explode=true,name=host_name"`
	// Filter the summary information based on the relic status of the fileset. Returns both relic and non relic if the parameter is not set.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the summary information to a specified maximum number of filesets.
	//
	// Optionally, use with **_offset_** to start the count at a specified point.
	//
	// Optionally, use with **_sort_by_** to perform sort on given attributes. Include **_sort_order_** to determine the ascending or descending direction of sort.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Retrieve filesets with a name matching the provided name. The search is performed as a case-insensitive infix search.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Starting position in the list of fileset entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries. Use with **_limit_** to retrieve the summary information as smaller groups of entries, e.g. for paging of results.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.
	// Use **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Filter the summary information based on the ID of the host share referenced by the fileset.
	// Use **_NONE_** to only return information for filesets that were not created based on a host share.
	// Use **_ANY_** to only return information for filesets that were created based on a host share.
	ShareID *string `queryParam:"style=form,explode=true,name=share_id"`
	// Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.
	//
	// Valid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**.
	SortBy *QueryFilesetSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryFilesetSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
	// Filter the summary information based on the ID of a fileset template.
	//
	// Use **_NONE_** to only return information for filesets that were not created from a fileset template.
	//
	// Use **_ANY_** to only return information for filesets that were created from a fileset template.
	TemplateID *string `queryParam:"style=form,explode=true,name=template_id"`
}

type QueryFilesetResponse struct {
	ContentType string
	// Summary information for filesets.
	FilesetSummaryListResponse *shared.FilesetSummaryListResponse
	StatusCode                 int
	RawResponse                *http.Response
}
