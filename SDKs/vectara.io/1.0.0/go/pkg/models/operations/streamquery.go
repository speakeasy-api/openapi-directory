// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StreamQuerySecurity struct {
	APIKeyAuth *shared.SchemeAPIKeyAuth `security:"scheme,type=apiKey,subtype=header"`
	OAuth      *shared.SchemeOAuth      `security:"scheme,type=oauth2"`
}

type StreamQueryHeaders struct {
	// The Customer ID to use for the request.
	CustomerID int64 `header:"style=simple,explode=false,name=customer-id"`
}

type StreamQueryRequest struct {
	Headers  StreamQueryHeaders
	Request  shared.ServingBatchQueryRequest `request:"mediaType=application/json"`
	Security StreamQuerySecurity
}

// StreamQueryStreamResultOfServingResponseSet - A successful response.(streaming responses)
type StreamQueryStreamResultOfServingResponseSet struct {
	Error  *shared.GooglerpcStatus    `json:"error,omitempty"`
	Result *shared.ServingResponseSet `json:"result,omitempty"`
}

type StreamQueryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A successful response.(streaming responses)
	StreamResultOfServingResponseSet *StreamQueryStreamResultOfServingResponseSet
	// An unexpected error response.
	GooglerpcStatus *shared.GooglerpcStatus
}
