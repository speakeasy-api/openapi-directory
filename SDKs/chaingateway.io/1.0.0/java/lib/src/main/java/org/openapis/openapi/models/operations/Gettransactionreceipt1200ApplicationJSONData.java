/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Gettransactionreceipt1200ApplicationJSONData {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockHash")
    public String blockHash;

    public Gettransactionreceipt1200ApplicationJSONData withBlockHash(String blockHash) {
        this.blockHash = blockHash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockNumber")
    public String blockNumber;

    public Gettransactionreceipt1200ApplicationJSONData withBlockNumber(String blockNumber) {
        this.blockNumber = blockNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cumulativeGasUsed")
    public String cumulativeGasUsed;

    public Gettransactionreceipt1200ApplicationJSONData withCumulativeGasUsed(String cumulativeGasUsed) {
        this.cumulativeGasUsed = cumulativeGasUsed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveGasPrice")
    public String effectiveGasPrice;

    public Gettransactionreceipt1200ApplicationJSONData withEffectiveGasPrice(String effectiveGasPrice) {
        this.effectiveGasPrice = effectiveGasPrice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;

    public Gettransactionreceipt1200ApplicationJSONData withFrom(String from) {
        this.from = from;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gasUsed")
    public String gasUsed;

    public Gettransactionreceipt1200ApplicationJSONData withGasUsed(String gasUsed) {
        this.gasUsed = gasUsed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logs")
    public Gettransactionreceipt1200ApplicationJSONDataLogs[] logs;

    public Gettransactionreceipt1200ApplicationJSONData withLogs(Gettransactionreceipt1200ApplicationJSONDataLogs[] logs) {
        this.logs = logs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logsBloom")
    public String logsBloom;

    public Gettransactionreceipt1200ApplicationJSONData withLogsBloom(String logsBloom) {
        this.logsBloom = logsBloom;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public Boolean status;

    public Gettransactionreceipt1200ApplicationJSONData withStatus(Boolean status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;

    public Gettransactionreceipt1200ApplicationJSONData withTo(String to) {
        this.to = to;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionHash")
    public String transactionHash;

    public Gettransactionreceipt1200ApplicationJSONData withTransactionHash(String transactionHash) {
        this.transactionHash = transactionHash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionIndex")
    public String transactionIndex;

    public Gettransactionreceipt1200ApplicationJSONData withTransactionIndex(String transactionIndex) {
        this.transactionIndex = transactionIndex;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Gettransactionreceipt1200ApplicationJSONData withType(String type) {
        this.type = type;
        return this;
    }
    
    public Gettransactionreceipt1200ApplicationJSONData(){}
}
