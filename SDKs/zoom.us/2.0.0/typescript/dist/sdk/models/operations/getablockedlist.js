"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetABlockedListResponse = exports.GetABlockedList200ApplicationJSON = exports.GetABlockedList200ApplicationJSONStatusEnum = exports.GetABlockedList200ApplicationJSONMatchTypeEnum = exports.GetABlockedList200ApplicationJSONBlockTypeEnum = exports.GetABlockedList200ApplicationXML = exports.GetABlockedList200ApplicationXMLStatusEnum = exports.GetABlockedList200ApplicationXMLMatchTypeEnum = exports.GetABlockedList200ApplicationXMLBlockTypeEnum = exports.GetABlockedListRequest = exports.GetABlockedListSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetABlockedListSecurity = /** @class */ (function (_super) {
    __extends(GetABlockedListSecurity, _super);
    function GetABlockedListSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], GetABlockedListSecurity.prototype, "oAuth", void 0);
    return GetABlockedListSecurity;
}(utils_1.SpeakeasyBase));
exports.GetABlockedListSecurity = GetABlockedListSecurity;
var GetABlockedListRequest = /** @class */ (function (_super) {
    __extends(GetABlockedListRequest, _super);
    function GetABlockedListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=blockedListId",
        }),
        __metadata("design:type", String)
    ], GetABlockedListRequest.prototype, "blockedListId", void 0);
    return GetABlockedListRequest;
}(utils_1.SpeakeasyBase));
exports.GetABlockedListRequest = GetABlockedListRequest;
/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
var GetABlockedList200ApplicationXMLBlockTypeEnum;
(function (GetABlockedList200ApplicationXMLBlockTypeEnum) {
    GetABlockedList200ApplicationXMLBlockTypeEnum["Inbound"] = "inbound";
    GetABlockedList200ApplicationXMLBlockTypeEnum["Outbound"] = "outbound";
})(GetABlockedList200ApplicationXMLBlockTypeEnum = exports.GetABlockedList200ApplicationXMLBlockTypeEnum || (exports.GetABlockedList200ApplicationXMLBlockTypeEnum = {}));
/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
var GetABlockedList200ApplicationXMLMatchTypeEnum;
(function (GetABlockedList200ApplicationXMLMatchTypeEnum) {
    GetABlockedList200ApplicationXMLMatchTypeEnum["PhoneNumber"] = "phoneNumber";
    GetABlockedList200ApplicationXMLMatchTypeEnum["Prefix"] = "prefix";
})(GetABlockedList200ApplicationXMLMatchTypeEnum = exports.GetABlockedList200ApplicationXMLMatchTypeEnum || (exports.GetABlockedList200ApplicationXMLMatchTypeEnum = {}));
/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
var GetABlockedList200ApplicationXMLStatusEnum;
(function (GetABlockedList200ApplicationXMLStatusEnum) {
    GetABlockedList200ApplicationXMLStatusEnum["Active"] = "active";
    GetABlockedList200ApplicationXMLStatusEnum["Inactive"] = "inactive";
})(GetABlockedList200ApplicationXMLStatusEnum = exports.GetABlockedList200ApplicationXMLStatusEnum || (exports.GetABlockedList200ApplicationXMLStatusEnum = {}));
/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list retrieved successfully.
 */
var GetABlockedList200ApplicationXML = /** @class */ (function (_super) {
    __extends(GetABlockedList200ApplicationXML, _super);
    function GetABlockedList200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationXML.prototype, "blockType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationXML.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationXML.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationXML.prototype, "matchType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationXML.prototype, "phoneNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationXML.prototype, "status", void 0);
    return GetABlockedList200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.GetABlockedList200ApplicationXML = GetABlockedList200ApplicationXML;
/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
var GetABlockedList200ApplicationJSONBlockTypeEnum;
(function (GetABlockedList200ApplicationJSONBlockTypeEnum) {
    GetABlockedList200ApplicationJSONBlockTypeEnum["Inbound"] = "inbound";
    GetABlockedList200ApplicationJSONBlockTypeEnum["Outbound"] = "outbound";
})(GetABlockedList200ApplicationJSONBlockTypeEnum = exports.GetABlockedList200ApplicationJSONBlockTypeEnum || (exports.GetABlockedList200ApplicationJSONBlockTypeEnum = {}));
/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
var GetABlockedList200ApplicationJSONMatchTypeEnum;
(function (GetABlockedList200ApplicationJSONMatchTypeEnum) {
    GetABlockedList200ApplicationJSONMatchTypeEnum["PhoneNumber"] = "phoneNumber";
    GetABlockedList200ApplicationJSONMatchTypeEnum["Prefix"] = "prefix";
})(GetABlockedList200ApplicationJSONMatchTypeEnum = exports.GetABlockedList200ApplicationJSONMatchTypeEnum || (exports.GetABlockedList200ApplicationJSONMatchTypeEnum = {}));
/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
var GetABlockedList200ApplicationJSONStatusEnum;
(function (GetABlockedList200ApplicationJSONStatusEnum) {
    GetABlockedList200ApplicationJSONStatusEnum["Active"] = "active";
    GetABlockedList200ApplicationJSONStatusEnum["Inactive"] = "inactive";
})(GetABlockedList200ApplicationJSONStatusEnum = exports.GetABlockedList200ApplicationJSONStatusEnum || (exports.GetABlockedList200ApplicationJSONStatusEnum = {}));
/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list retrieved successfully.
 */
var GetABlockedList200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetABlockedList200ApplicationJSON, _super);
    function GetABlockedList200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "block_type" }),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationJSON.prototype, "blockType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationJSON.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "match_type" }),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationJSON.prototype, "matchType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "phone_number" }),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationJSON.prototype, "phoneNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GetABlockedList200ApplicationJSON.prototype, "status", void 0);
    return GetABlockedList200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetABlockedList200ApplicationJSON = GetABlockedList200ApplicationJSON;
var GetABlockedListResponse = /** @class */ (function (_super) {
    __extends(GetABlockedListResponse, _super);
    function GetABlockedListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GetABlockedListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetABlockedListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetABlockedListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetABlockedListResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetABlockedList200ApplicationJSON)
    ], GetABlockedListResponse.prototype, "getABlockedList200ApplicationJSONObject", void 0);
    return GetABlockedListResponse;
}(utils_1.SpeakeasyBase));
exports.GetABlockedListResponse = GetABlockedListResponse;
