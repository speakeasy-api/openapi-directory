"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import powerfeed as shared_powerfeed
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DcimPowerFeedsListRequest:
    
    amperage: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amperage', 'style': 'form', 'explode': True }})  
    amperage_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amperage__gt', 'style': 'form', 'explode': True }})  
    amperage_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amperage__gte', 'style': 'form', 'explode': True }})  
    amperage_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amperage__lt', 'style': 'form', 'explode': True }})  
    amperage_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amperage__lte', 'style': 'form', 'explode': True }})  
    amperage_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'amperage__n', 'style': 'form', 'explode': True }})  
    created: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created', 'style': 'form', 'explode': True }})  
    created_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created__gte', 'style': 'form', 'explode': True }})  
    created_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created__lte', 'style': 'form', 'explode': True }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})  
    id_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__gt', 'style': 'form', 'explode': True }})  
    id_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__gte', 'style': 'form', 'explode': True }})  
    id_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__lt', 'style': 'form', 'explode': True }})  
    id_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__lte', 'style': 'form', 'explode': True }})  
    id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__n', 'style': 'form', 'explode': True }})  
    last_updated: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_updated', 'style': 'form', 'explode': True }})  
    last_updated_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_updated__gte', 'style': 'form', 'explode': True }})  
    last_updated_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_updated__lte', 'style': 'form', 'explode': True }})  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of results to return per page."""  
    max_utilization: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_utilization', 'style': 'form', 'explode': True }})  
    max_utilization_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_utilization__gt', 'style': 'form', 'explode': True }})  
    max_utilization_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_utilization__gte', 'style': 'form', 'explode': True }})  
    max_utilization_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_utilization__lt', 'style': 'form', 'explode': True }})  
    max_utilization_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_utilization__lte', 'style': 'form', 'explode': True }})  
    max_utilization_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_utilization__n', 'style': 'form', 'explode': True }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})  
    name_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__ic', 'style': 'form', 'explode': True }})  
    name_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__ie', 'style': 'form', 'explode': True }})  
    name_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__iew', 'style': 'form', 'explode': True }})  
    name_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__isw', 'style': 'form', 'explode': True }})  
    name_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__n', 'style': 'form', 'explode': True }})  
    name_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__nic', 'style': 'form', 'explode': True }})  
    name_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__nie', 'style': 'form', 'explode': True }})  
    name_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__niew', 'style': 'form', 'explode': True }})  
    name_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__nisw', 'style': 'form', 'explode': True }})  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The initial index from which to return the results."""  
    phase: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'phase', 'style': 'form', 'explode': True }})  
    phase_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'phase__n', 'style': 'form', 'explode': True }})  
    power_panel_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'power_panel_id', 'style': 'form', 'explode': True }})  
    power_panel_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'power_panel_id__n', 'style': 'form', 'explode': True }})  
    q: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'q', 'style': 'form', 'explode': True }})  
    rack_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'rack_id', 'style': 'form', 'explode': True }})  
    rack_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'rack_id__n', 'style': 'form', 'explode': True }})  
    region: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region', 'style': 'form', 'explode': True }})  
    region_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region__n', 'style': 'form', 'explode': True }})  
    region_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region_id', 'style': 'form', 'explode': True }})  
    region_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region_id__n', 'style': 'form', 'explode': True }})  
    site: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site', 'style': 'form', 'explode': True }})  
    site_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site__n', 'style': 'form', 'explode': True }})  
    site_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site_id', 'style': 'form', 'explode': True }})  
    site_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site_id__n', 'style': 'form', 'explode': True }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})  
    status_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status__n', 'style': 'form', 'explode': True }})  
    supply: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'supply', 'style': 'form', 'explode': True }})  
    supply_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'supply__n', 'style': 'form', 'explode': True }})  
    tag: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tag', 'style': 'form', 'explode': True }})  
    tag_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tag__n', 'style': 'form', 'explode': True }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})  
    type_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type__n', 'style': 'form', 'explode': True }})  
    voltage: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'voltage', 'style': 'form', 'explode': True }})  
    voltage_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'voltage__gt', 'style': 'form', 'explode': True }})  
    voltage_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'voltage__gte', 'style': 'form', 'explode': True }})  
    voltage_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'voltage__lt', 'style': 'form', 'explode': True }})  
    voltage_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'voltage__lte', 'style': 'form', 'explode': True }})  
    voltage_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'voltage__n', 'style': 'form', 'explode': True }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DcimPowerFeedsList200ApplicationJSON:
    
    count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count') }})  
    results: list[shared_powerfeed.PowerFeed] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results') }})  
    next: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next'), 'exclude': lambda f: f is None }})  
    previous: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previous'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class DcimPowerFeedsListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    dcim_power_feeds_list_200_application_json_object: Optional[DcimPowerFeedsList200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    