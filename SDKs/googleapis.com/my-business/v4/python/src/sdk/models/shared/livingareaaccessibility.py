"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LivingAreaAccessibilityAdaCompliantUnitExceptionEnum(str, Enum):
    r"""ADA compliant unit exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityHearingAccessibleDoorbellExceptionEnum(str, Enum):
    r"""Hearing-accessible doorbell exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityHearingAccessibleFireAlarmExceptionEnum(str, Enum):
    r"""Hearing-accessible fire alarm exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityHearingAccessibleUnitExceptionEnum(str, Enum):
    r"""Hearing-accessible unit exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityMobilityAccessibleBathtubExceptionEnum(str, Enum):
    r"""Mobility-accessible bathtub exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityMobilityAccessibleShowerExceptionEnum(str, Enum):
    r"""Mobility-accessible shower exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityMobilityAccessibleToiletExceptionEnum(str, Enum):
    r"""Mobility-accessible toilet exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LivingAreaAccessibilityMobilityAccessibleUnitExceptionEnum(str, Enum):
    r"""Mobility-accessible unit exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LivingAreaAccessibility:
    r"""Accessibility features of the living area."""
    
    ada_compliant_unit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adaCompliantUnit'), 'exclude': lambda f: f is None }})
    r"""ADA compliant unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues, as determined by legislative policy. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged."""  
    ada_compliant_unit_exception: Optional[LivingAreaAccessibilityAdaCompliantUnitExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adaCompliantUnitException'), 'exclude': lambda f: f is None }})
    r"""ADA compliant unit exception."""  
    hearing_accessible_doorbell: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hearingAccessibleDoorbell'), 'exclude': lambda f: f is None }})
    r"""Hearing-accessible doorbell. A visual indicator(s) of a knock or ring at the door."""  
    hearing_accessible_doorbell_exception: Optional[LivingAreaAccessibilityHearingAccessibleDoorbellExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hearingAccessibleDoorbellException'), 'exclude': lambda f: f is None }})
    r"""Hearing-accessible doorbell exception."""  
    hearing_accessible_fire_alarm: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hearingAccessibleFireAlarm'), 'exclude': lambda f: f is None }})
    r"""Hearing-accessible fire alarm. A device that gives warning of a fire through flashing lights."""  
    hearing_accessible_fire_alarm_exception: Optional[LivingAreaAccessibilityHearingAccessibleFireAlarmExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hearingAccessibleFireAlarmException'), 'exclude': lambda f: f is None }})
    r"""Hearing-accessible fire alarm exception."""  
    hearing_accessible_unit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hearingAccessibleUnit'), 'exclude': lambda f: f is None }})
    r"""Hearing-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with auditory issues."""  
    hearing_accessible_unit_exception: Optional[LivingAreaAccessibilityHearingAccessibleUnitExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hearingAccessibleUnitException'), 'exclude': lambda f: f is None }})
    r"""Hearing-accessible unit exception."""  
    mobility_accessible_bathtub: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleBathtub'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible bathtub. A bathtub that accomodates the physically challenged with additional railings or hand grips, a transfer seat or lift, and/or a door to enable walking into the tub."""  
    mobility_accessible_bathtub_exception: Optional[LivingAreaAccessibilityMobilityAccessibleBathtubExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleBathtubException'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible bathtub exception."""  
    mobility_accessible_shower: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleShower'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible shower. A shower with an enlarged door or access point to accommodate a wheelchair or a waterproof seat for the physically challenged."""  
    mobility_accessible_shower_exception: Optional[LivingAreaAccessibilityMobilityAccessibleShowerExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleShowerException'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible shower exception."""  
    mobility_accessible_toilet: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleToilet'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible toilet. A toilet with a higher seat, grab bars, and/or a larger area around it to accommodate the physically challenged."""  
    mobility_accessible_toilet_exception: Optional[LivingAreaAccessibilityMobilityAccessibleToiletExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleToiletException'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible toilet exception."""  
    mobility_accessible_unit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleUnit'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged."""  
    mobility_accessible_unit_exception: Optional[LivingAreaAccessibilityMobilityAccessibleUnitExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilityAccessibleUnitException'), 'exclude': lambda f: f is None }})
    r"""Mobility-accessible unit exception."""  
    