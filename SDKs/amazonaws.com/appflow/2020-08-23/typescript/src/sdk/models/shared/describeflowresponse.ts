/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationFlowConfig } from "./destinationflowconfig";
import { ExecutionDetails } from "./executiondetails";
import { FlowStatusEnum } from "./flowstatusenum";
import { MetadataCatalogConfig } from "./metadatacatalogconfig";
import { MetadataCatalogDetail } from "./metadatacatalogdetail";
import { SourceFlowConfig } from "./sourceflowconfig";
import { Task } from "./task";
import { TriggerConfig } from "./triggerconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeFlowResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata({ elemType: DestinationFlowConfig })
  @Expose({ name: "destinationFlowConfigList" })
  @Type(() => DestinationFlowConfig)
  destinationFlowConfigList?: DestinationFlowConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "flowArn" })
  flowArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flowName" })
  flowName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flowStatus" })
  flowStatus?: FlowStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "flowStatusMessage" })
  flowStatusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kmsArn" })
  kmsArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastRunExecutionDetails" })
  @Type(() => ExecutionDetails)
  lastRunExecutionDetails?: ExecutionDetails;

  @SpeakeasyMetadata({ elemType: MetadataCatalogDetail })
  @Expose({ name: "lastRunMetadataCatalogDetails" })
  @Type(() => MetadataCatalogDetail)
  lastRunMetadataCatalogDetails?: MetadataCatalogDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedBy" })
  lastUpdatedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadataCatalogConfig" })
  @Type(() => MetadataCatalogConfig)
  metadataCatalogConfig?: MetadataCatalogConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "schemaVersion" })
  schemaVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceFlowConfig" })
  @Type(() => SourceFlowConfig)
  sourceFlowConfig?: SourceFlowConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Task })
  @Expose({ name: "tasks" })
  @Type(() => Task)
  tasks?: Task[];

  @SpeakeasyMetadata()
  @Expose({ name: "triggerConfig" })
  @Type(() => TriggerConfig)
  triggerConfig?: TriggerConfig;
}
