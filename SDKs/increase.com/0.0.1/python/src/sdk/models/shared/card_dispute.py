"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardDisputeCardDisputeAcceptance:
    r"""If the Card Dispute's status is `accepted`, this will contain details of the successful dispute."""
    
    accepted_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accepted_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."""  
    card_dispute_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_dispute_id') }})
    r"""The identifier of the Card Dispute that was accepted."""  
    transaction_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transaction_id') }})
    r"""The identifier of the Transaction that was created to return the disputed funds to your account."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardDisputeCardDisputeRejection:
    r"""If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute."""
    
    card_dispute_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_dispute_id') }})
    r"""The identifier of the Card Dispute that was rejected."""  
    explanation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explanation') }})
    r"""Why the Card Dispute was rejected."""  
    rejected_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rejected_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected."""  
    
class CardDisputeStatusEnum(str, Enum):
    r"""The results of the Dispute investigation."""
    PENDING_REVIEWING = 'pending_reviewing'
    ACCEPTED = 'accepted'
    REJECTED = 'rejected'

class CardDisputeTypeEnum(str, Enum):
    r"""A constant representing the object's type. For this resource it will always be `card_dispute`."""
    CARD_DISPUTE = 'card_dispute'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardDispute:
    r"""If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate."""
    
    acceptance: CardDisputeCardDisputeAcceptance = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptance') }})
    r"""If the Card Dispute's status is `accepted`, this will contain details of the successful dispute."""  
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created."""  
    disputed_transaction_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disputed_transaction_id') }})
    r"""The identifier of the Transaction that was disputed."""  
    explanation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explanation') }})
    r"""Why you disputed the Transaction in question."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The Card Dispute identifier."""  
    rejection: CardDisputeCardDisputeRejection = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rejection') }})
    r"""If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute."""  
    status: CardDisputeStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The results of the Dispute investigation."""  
    type: CardDisputeTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""A constant representing the object's type. For this resource it will always be `card_dispute`."""  
    