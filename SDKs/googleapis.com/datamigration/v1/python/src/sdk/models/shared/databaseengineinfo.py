"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DatabaseEngineInfoEngineEnum(str, Enum):
    r"""Required. Engine type."""
    DATABASE_ENGINE_UNSPECIFIED = 'DATABASE_ENGINE_UNSPECIFIED'
    MYSQL = 'MYSQL'
    POSTGRESQL = 'POSTGRESQL'
    ORACLE = 'ORACLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatabaseEngineInfo:
    r"""The type and version of a source or destination database."""
    
    engine: Optional[DatabaseEngineInfoEngineEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine'), 'exclude': lambda f: f is None }})
    r"""Required. Engine type."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""Required. Engine named version, for example 12.c.1."""  
    