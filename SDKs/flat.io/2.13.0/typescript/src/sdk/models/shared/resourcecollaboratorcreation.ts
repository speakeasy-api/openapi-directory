/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Add a collaborator to a resource.
 */
export class ResourceCollaboratorCreation extends SpeakeasyBase {
  /**
   * `True` if the related user can can manage the current document, i.e. changing the document permissions and deleting the document
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aclAdmin" })
  aclAdmin?: boolean;

  /**
   * `True` if the related user can read the score. (probably true if the user has a permission on the document).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aclRead" })
  aclRead?: boolean;

  /**
   * `True` if the related user can modify the score.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aclWrite" })
  aclWrite?: boolean;

  /**
   * The unique identifier of a Flat group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: string;

  /**
   * The unique identifier of a Flat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;

  /**
   * Fill this field to invite an individual user by email.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userEmail" })
  userEmail?: string;

  /**
   * Token received in an invitation to join the score.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userToken" })
  userToken?: string;
}
