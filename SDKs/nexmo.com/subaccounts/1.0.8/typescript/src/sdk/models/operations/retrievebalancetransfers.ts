/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RetrieveBalanceTransfersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class RetrieveBalanceTransfersRequest extends SpeakeasyBase {
  /**
   * ID of the primary account.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=api_key",
  })
  apiKey: string;

  /**
   * End of the retrieval period. If absent then all transfers until now is returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end_date",
  })
  endDate?: string;

  /**
   * Start of the retrieval period.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start_date",
  })
  startDate: string;

  /**
   * Subaccount to filter by. You may send this multiple times to filter on multiple subaccounts
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=subaccount",
  })
  subaccount?: string;
}

/**
 * Invalid API Key
 */
export class RetrieveBalanceTransfers404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Credential is missing or invalid
 */
export class RetrieveBalanceTransfers401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class RetrieveBalanceTransfersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * List balance transfers response
   */
  @SpeakeasyMetadata()
  listBalanceTransfersResponse?: shared.ListBalanceTransfersResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Action is forbidden
   */
  @SpeakeasyMetadata()
  unprovisionedErrorResponse?: shared.UnprovisionedErrorResponse;

  /**
   * Credential is missing or invalid
   */
  @SpeakeasyMetadata()
  retrieveBalanceTransfers401ApplicationJSONObject?: RetrieveBalanceTransfers401ApplicationJSON;

  /**
   * The account ID provided does not exist in our system or you do not have access
   */
  @SpeakeasyMetadata()
  retrieveBalanceTransfers404ApplicationJSONObject?: RetrieveBalanceTransfers404ApplicationJSON;
}
