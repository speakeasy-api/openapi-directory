/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClustersConfigDump - Envoy's cluster manager fills this message with all currently known clusters. Cluster configuration information can be used to recreate an Envoy configuration by populating all clusters as static clusters or by returning them in a CDS response.
 */
public class ClustersConfigDump {
    /**
     * The dynamically loaded active clusters. These are clusters that are available to service data plane traffic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamicActiveClusters")
    public DynamicCluster[] dynamicActiveClusters;

    public ClustersConfigDump withDynamicActiveClusters(DynamicCluster[] dynamicActiveClusters) {
        this.dynamicActiveClusters = dynamicActiveClusters;
        return this;
    }
    
    /**
     * The dynamically loaded warming clusters. These are clusters that are currently undergoing warming in preparation to service data plane traffic. Note that if attempting to recreate an Envoy configuration from a configuration dump, the warming clusters should generally be discarded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamicWarmingClusters")
    public DynamicCluster[] dynamicWarmingClusters;

    public ClustersConfigDump withDynamicWarmingClusters(DynamicCluster[] dynamicWarmingClusters) {
        this.dynamicWarmingClusters = dynamicWarmingClusters;
        return this;
    }
    
    /**
     * The statically loaded cluster configs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("staticClusters")
    public StaticCluster[] staticClusters;

    public ClustersConfigDump withStaticClusters(StaticCluster[] staticClusters) {
        this.staticClusters = staticClusters;
        return this;
    }
    
    /**
     * This is the :ref:`version_info ` in the last processed CDS discovery response. If there are only static bootstrap clusters, this field will be "".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionInfo")
    public String versionInfo;

    public ClustersConfigDump withVersionInfo(String versionInfo) {
        this.versionInfo = versionInfo;
        return this;
    }
    
    public ClustersConfigDump(){}
}
