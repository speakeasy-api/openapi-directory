/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomEventClickAnnotation } from "./customeventclickannotation";
import { CustomEventImpressionAnnotation } from "./customeventimpressionannotation";
import { CustomEventInsert } from "./customeventinsert";
import { CustomVariable } from "./customvariable";
import { Expose, Type } from "class-transformer";

/**
 * The type of event. If INSERT, the fields in insertEvent need to be populated. If ANNOTATE, the fields in either annotateClickEvent or annotateImpressionEvent need to be populated.
 */
export enum CustomEventEventTypeEnum {
  Unknown = "UNKNOWN",
  Insert = "INSERT",
  Annotate = "ANNOTATE",
}

/**
 * Experimental feature (no support provided) A custom event represents a third party impression, a third party click, an annotation on a first party impression, or an annotation on a first party click.
 */
export class CustomEvent extends SpeakeasyBase {
  /**
   * Annotate a click event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotateClickEvent" })
  @Type(() => CustomEventClickAnnotation)
  annotateClickEvent?: CustomEventClickAnnotation;

  /**
   * Annotate an impression.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotateImpressionEvent" })
  @Type(() => CustomEventImpressionAnnotation)
  annotateImpressionEvent?: CustomEventImpressionAnnotation;

  /**
   * Custom variables associated with the event.
   */
  @SpeakeasyMetadata({ elemType: CustomVariable })
  @Expose({ name: "customVariables" })
  @Type(() => CustomVariable)
  customVariables?: CustomVariable[];

  /**
   * The type of event. If INSERT, the fields in insertEvent need to be populated. If ANNOTATE, the fields in either annotateClickEvent or annotateImpressionEvent need to be populated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType?: CustomEventEventTypeEnum;

  /**
   * Floodlight configuration ID of the advertiser the event is linked to. This is a required field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floodlightConfigurationId" })
  floodlightConfigurationId?: string;

  /**
   * Custom event to be inserted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insertEvent" })
  @Type(() => CustomEventInsert)
  insertEvent?: CustomEventInsert;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "dfareporting#customEvent".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The ordinal of this custom event. This is a required field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ordinal" })
  ordinal?: string;

  /**
   * The timestamp of this custom event, in Unix epoch micros. This is a required field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampMicros" })
  timestampMicros?: string;
}
