// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodeStateEnum - Output only. Current state of the Memcached node.
type NodeStateEnum string

const (
	NodeStateEnumStateUnspecified NodeStateEnum = "STATE_UNSPECIFIED"
	NodeStateEnumCreating         NodeStateEnum = "CREATING"
	NodeStateEnumReady            NodeStateEnum = "READY"
	NodeStateEnumDeleting         NodeStateEnum = "DELETING"
	NodeStateEnumUpdating         NodeStateEnum = "UPDATING"
)

func (e NodeStateEnum) ToPointer() *NodeStateEnum {
	return &e
}

func (e *NodeStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "DELETING":
		fallthrough
	case "UPDATING":
		*e = NodeStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeStateEnum: %v", v)
	}
}

type Node struct {
	// Output only. Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.
	Host *string `json:"host,omitempty"`
	// Output only. Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.
	NodeID     *string             `json:"nodeId,omitempty"`
	Parameters *MemcacheParameters `json:"parameters,omitempty"`
	// Output only. The port number of the Memcached server on this node.
	Port *int `json:"port,omitempty"`
	// Output only. Current state of the Memcached node.
	State *NodeStateEnum `json:"state,omitempty"`
	// Output only. Location (GCP Zone) for the Memcached node.
	Zone *string `json:"zone,omitempty"`
}
