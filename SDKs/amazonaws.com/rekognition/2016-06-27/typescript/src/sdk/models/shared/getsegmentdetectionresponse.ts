/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AudioMetadata } from "./audiometadata";
import { SegmentDetection } from "./segmentdetection";
import { SegmentTypeInfo } from "./segmenttypeinfo";
import { VideoJobStatusEnum } from "./videojobstatusenum";
import { VideoMetadata } from "./videometadata";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class GetSegmentDetectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AudioMetadata })
  @Expose({ name: "AudioMetadata" })
  @Type(() => AudioMetadata)
  audioMetadata?: AudioMetadata[];

  @SpeakeasyMetadata()
  @Expose({ name: "JobStatus" })
  jobStatus?: VideoJobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: SegmentDetection })
  @Expose({ name: "Segments" })
  @Type(() => SegmentDetection)
  segments?: SegmentDetection[];

  @SpeakeasyMetadata({ elemType: SegmentTypeInfo })
  @Expose({ name: "SelectedSegmentTypes" })
  @Type(() => SegmentTypeInfo)
  selectedSegmentTypes?: SegmentTypeInfo[];

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata({ elemType: VideoMetadata })
  @Expose({ name: "VideoMetadata" })
  @Type(() => VideoMetadata)
  videoMetadata?: VideoMetadata[];
}
