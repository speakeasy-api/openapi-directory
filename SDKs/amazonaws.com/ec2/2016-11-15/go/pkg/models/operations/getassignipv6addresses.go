// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAssignIpv6AddressesActionEnum
type GETAssignIpv6AddressesActionEnum string

const (
	GETAssignIpv6AddressesActionEnumAssignIpv6Addresses GETAssignIpv6AddressesActionEnum = "AssignIpv6Addresses"
)

func (e GETAssignIpv6AddressesActionEnum) ToPointer() *GETAssignIpv6AddressesActionEnum {
	return &e
}

func (e *GETAssignIpv6AddressesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AssignIpv6Addresses":
		*e = GETAssignIpv6AddressesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssignIpv6AddressesActionEnum: %v", v)
	}
}

// GETAssignIpv6AddressesVersionEnum
type GETAssignIpv6AddressesVersionEnum string

const (
	GETAssignIpv6AddressesVersionEnumTwoThousandAndSixteen1115 GETAssignIpv6AddressesVersionEnum = "2016-11-15"
)

func (e GETAssignIpv6AddressesVersionEnum) ToPointer() *GETAssignIpv6AddressesVersionEnum {
	return &e
}

func (e *GETAssignIpv6AddressesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETAssignIpv6AddressesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssignIpv6AddressesVersionEnum: %v", v)
	}
}

type GETAssignIpv6AddressesRequest struct {
	Action GETAssignIpv6AddressesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The number of additional IPv6 addresses to assign to the network interface. The specified number of IPv6 addresses are assigned in addition to the existing IPv6 addresses that are already assigned to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.
	Ipv6AddressCount *int64 `queryParam:"style=form,explode=true,name=Ipv6AddressCount"`
	// The IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.
	Ipv6Addresses []string `queryParam:"style=form,explode=true,name=Ipv6Addresses"`
	// One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
	Ipv6Prefix []string `queryParam:"style=form,explode=true,name=Ipv6Prefix"`
	// The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv6Prefixes</code> option.
	Ipv6PrefixCount *int64 `queryParam:"style=form,explode=true,name=Ipv6PrefixCount"`
	// The ID of the network interface.
	NetworkInterfaceID string                            `queryParam:"style=form,explode=true,name=NetworkInterfaceId"`
	Version            GETAssignIpv6AddressesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAssignIpv6AddressesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
