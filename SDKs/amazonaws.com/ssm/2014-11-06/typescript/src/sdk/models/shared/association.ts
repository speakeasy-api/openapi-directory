/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssociationOverview } from "./associationoverview";
import { Target } from "./target";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes an association of a Amazon Web Services Systems Manager document (SSM document) and a managed node.
 */
export class Association extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationName" })
  associationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationVersion" })
  associationVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceId" })
  instanceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastExecutionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastExecutionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Overview" })
  @Type(() => AssociationOverview)
  overview?: AssociationOverview;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduleExpression" })
  scheduleExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduleOffset" })
  scheduleOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetMaps" })
  targetMaps?: Record<string, string[]>[];

  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "Targets" })
  @Type(() => Target)
  targets?: Target[];
}
