// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetBenefitsDocumentUploadDownloadSecurity struct {
	Apikey string `security:"scheme,type=apiKey,subtype=header,name=apikey"`
}

type GetBenefitsDocumentUploadDownloadRequest struct {
	// ID as returned by a previous create upload request
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetBenefitsDocumentUploadDownload500ApplicationJSON - Internal server error
type GetBenefitsDocumentUploadDownload500ApplicationJSON struct {
	// Unambiguous status code. Only present if status = "error"
	//
	// * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
	// * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
	// * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
	// * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
	// * `DOC105` - Invalid or unknown id
	// * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
	// * `DOC107` - Empty payload.
	// * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
	// * `DOC201` - Upload server error.
	// * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
	//
	Code *string `json:"code,omitempty"`
	// Human readable error detail. Only present if status = "error"
	Detail *string `json:"detail,omitempty"`
	// Unambiguous status code. Only present if status = "error"
	//
	// * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
	// * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
	// * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
	// * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
	// * `DOC105` - Invalid or unknown id
	// * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
	// * `DOC107` - Empty payload.
	// * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
	// * `DOC201` - Upload server error.
	// * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
	//
	Status *string `json:"status,omitempty"`
	// Human readable title description.
	Title *string `json:"title,omitempty"`
}

// GetBenefitsDocumentUploadDownload429ApplicationJSON - Too many requests
type GetBenefitsDocumentUploadDownload429ApplicationJSON struct {
	// message
	Message *string `json:"Message,omitempty"`
}

// GetBenefitsDocumentUploadDownload404ApplicationJSON - Not found
type GetBenefitsDocumentUploadDownload404ApplicationJSON struct {
	// Unambiguous status code. Only present if status = "error"
	//
	// * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
	// * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
	// * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
	// * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
	// * `DOC105` - Invalid or unknown id
	// * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
	// * `DOC107` - Empty payload.
	// * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
	// * `DOC201` - Upload server error.
	// * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
	//
	Code *string `json:"code,omitempty"`
	// Human readable error detail. Only present if status = "error"
	Detail *string `json:"detail,omitempty"`
	// Unambiguous status code. Only present if status = "error"
	//
	// * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
	// * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
	// * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
	// * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
	// * `DOC105` - Invalid or unknown id
	// * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
	// * `DOC107` - Empty payload.
	// * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
	// * `DOC201` - Upload server error.
	// * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
	//
	Status *string `json:"status,omitempty"`
	// Human readable title description.
	Title *string `json:"title,omitempty"`
}

// GetBenefitsDocumentUploadDownload403ApplicationJSON - Forbidden
type GetBenefitsDocumentUploadDownload403ApplicationJSON struct {
	// Error detail
	Message *string `json:"Message,omitempty"`
}

// GetBenefitsDocumentUploadDownload401ApplicationJSON - Unauthorized request
type GetBenefitsDocumentUploadDownload401ApplicationJSON struct {
	// Error detail
	Message *string `json:"Message,omitempty"`
}

type GetBenefitsDocumentUploadDownloadResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Zip file with the contents of your payload as parsed by our server
	GetBenefitsDocumentUploadDownload200ApplicationZipBinaryString []byte
	// Unauthorized request
	GetBenefitsDocumentUploadDownload401ApplicationJSONObject *GetBenefitsDocumentUploadDownload401ApplicationJSON
	// Forbidden
	GetBenefitsDocumentUploadDownload403ApplicationJSONObject *GetBenefitsDocumentUploadDownload403ApplicationJSON
	// Not found
	GetBenefitsDocumentUploadDownload404ApplicationJSONObject *GetBenefitsDocumentUploadDownload404ApplicationJSON
	// Too many requests
	GetBenefitsDocumentUploadDownload429ApplicationJSONObject *GetBenefitsDocumentUploadDownload429ApplicationJSON
	// Internal server error
	GetBenefitsDocumentUploadDownload500ApplicationJSONObject *GetBenefitsDocumentUploadDownload500ApplicationJSON
}
