"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsecrrepositoryimagescanningconfigurationdetails as shared_awsecrrepositoryimagescanningconfigurationdetails
from ..shared import awsecrrepositorylifecyclepolicydetails as shared_awsecrrepositorylifecyclepolicydetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEcrRepositoryDetails:
    r"""Provides information about an Amazon Elastic Container Registry repository."""
    
    arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Arn'), 'exclude': lambda f: f is None }})  
    image_scanning_configuration: Optional[shared_awsecrrepositoryimagescanningconfigurationdetails.AwsEcrRepositoryImageScanningConfigurationDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageScanningConfiguration'), 'exclude': lambda f: f is None }})  
    image_tag_mutability: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageTagMutability'), 'exclude': lambda f: f is None }})  
    lifecycle_policy: Optional[shared_awsecrrepositorylifecyclepolicydetails.AwsEcrRepositoryLifecyclePolicyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LifecyclePolicy'), 'exclude': lambda f: f is None }})  
    repository_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RepositoryName'), 'exclude': lambda f: f is None }})  
    repository_policy_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RepositoryPolicyText'), 'exclude': lambda f: f is None }})  
    