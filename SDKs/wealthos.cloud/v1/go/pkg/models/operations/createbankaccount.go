// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type CreateBankAccountSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

// CreateBankAccountRequestBodyAccountStatusEnum - If not populated, will be defaulted to inactive
type CreateBankAccountRequestBodyAccountStatusEnum string

const (
	CreateBankAccountRequestBodyAccountStatusEnumActive   CreateBankAccountRequestBodyAccountStatusEnum = "active"
	CreateBankAccountRequestBodyAccountStatusEnumInactive CreateBankAccountRequestBodyAccountStatusEnum = "inactive"
)

func (e *CreateBankAccountRequestBodyAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = CreateBankAccountRequestBodyAccountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBankAccountRequestBodyAccountStatusEnum: %s", s)
	}
}

// CreateBankAccountRequestBodyDefaultAccountEnum - Only one account should be the default
type CreateBankAccountRequestBodyDefaultAccountEnum string

const (
	CreateBankAccountRequestBodyDefaultAccountEnumYes CreateBankAccountRequestBodyDefaultAccountEnum = "yes"
	CreateBankAccountRequestBodyDefaultAccountEnumNo  CreateBankAccountRequestBodyDefaultAccountEnum = "no"
)

func (e *CreateBankAccountRequestBodyDefaultAccountEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "yes":
		fallthrough
	case "no":
		*e = CreateBankAccountRequestBodyDefaultAccountEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBankAccountRequestBodyDefaultAccountEnum: %s", s)
	}
}

type CreateBankAccountRequestBodyInput struct {
	AccountName string `json:"account_name"`
	// If not populated, will be defaulted to inactive
	AccountStatus *CreateBankAccountRequestBodyAccountStatusEnum `json:"account_status,omitempty"`
	// Unique for the investor
	BankAccountNumber         string  `json:"bank_account_number"`
	BuildingSocietyRollNumber *string `json:"building_society_roll_number,omitempty"`
	// Only one account should be the default
	DefaultAccount CreateBankAccountRequestBodyDefaultAccountEnum `json:"default_account"`
	InvestorID     string                                         `json:"investor_id"`
	SortCode       *string                                        `json:"sort_code,omitempty"`
}

type CreateBankAccountRequest struct {
	RequestBody *CreateBankAccountRequestBodyInput `request:"mediaType=application/json"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// CreateBankAccount500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type CreateBankAccount500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateBankAccount429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type CreateBankAccount429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateBankAccount409ApplicationJSONStatusEnum - Current status of the original request
type CreateBankAccount409ApplicationJSONStatusEnum string

const (
	CreateBankAccount409ApplicationJSONStatusEnumProcessing CreateBankAccount409ApplicationJSONStatusEnum = "PROCESSING"
	CreateBankAccount409ApplicationJSONStatusEnumComplete   CreateBankAccount409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e *CreateBankAccount409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = CreateBankAccount409ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBankAccount409ApplicationJSONStatusEnum: %s", s)
	}
}

// CreateBankAccount409ApplicationJSON - Duplicate request
type CreateBankAccount409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status CreateBankAccount409ApplicationJSONStatusEnum `json:"status"`
}

// CreateBankAccount404ApplicationJSON - The specified resource was not found
type CreateBankAccount404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateBankAccount403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type CreateBankAccount403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateBankAccount401ApplicationJSON - You do not have permissions to access this resource.
type CreateBankAccount401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateBankAccount400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type CreateBankAccount400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateBankAccount201ApplicationJSONAccountStatusEnum - If not populated, will be defaulted to inactive
type CreateBankAccount201ApplicationJSONAccountStatusEnum string

const (
	CreateBankAccount201ApplicationJSONAccountStatusEnumActive   CreateBankAccount201ApplicationJSONAccountStatusEnum = "active"
	CreateBankAccount201ApplicationJSONAccountStatusEnumInactive CreateBankAccount201ApplicationJSONAccountStatusEnum = "inactive"
)

func (e *CreateBankAccount201ApplicationJSONAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = CreateBankAccount201ApplicationJSONAccountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBankAccount201ApplicationJSONAccountStatusEnum: %s", s)
	}
}

// CreateBankAccount201ApplicationJSONDefaultAccountEnum - Only one account should be the default
type CreateBankAccount201ApplicationJSONDefaultAccountEnum string

const (
	CreateBankAccount201ApplicationJSONDefaultAccountEnumYes CreateBankAccount201ApplicationJSONDefaultAccountEnum = "yes"
	CreateBankAccount201ApplicationJSONDefaultAccountEnumNo  CreateBankAccount201ApplicationJSONDefaultAccountEnum = "no"
)

func (e *CreateBankAccount201ApplicationJSONDefaultAccountEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "yes":
		fallthrough
	case "no":
		*e = CreateBankAccount201ApplicationJSONDefaultAccountEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBankAccount201ApplicationJSONDefaultAccountEnum: %s", s)
	}
}

// CreateBankAccount201ApplicationJSON - success
type CreateBankAccount201ApplicationJSON struct {
	AccountName string `json:"account_name"`
	// If not populated, will be defaulted to inactive
	AccountStatus *CreateBankAccount201ApplicationJSONAccountStatusEnum `json:"account_status,omitempty"`
	// system generated id
	BankAccountID *string `json:"bank_account_id,omitempty"`
	// Unique for the investor
	BankAccountNumber         string     `json:"bank_account_number"`
	BuildingSocietyRollNumber *string    `json:"building_society_roll_number,omitempty"`
	CreatedAt                 *time.Time `json:"created_at,omitempty"`
	// Only one account should be the default
	DefaultAccount   CreateBankAccount201ApplicationJSONDefaultAccountEnum `json:"default_account"`
	InvestorID       string                                                `json:"investor_id"`
	ReferenceVersion *int64                                                `json:"reference_version,omitempty"`
	SortCode         *string                                               `json:"sort_code,omitempty"`
	UpdatedAt        *time.Time                                            `json:"updated_at,omitempty"`
}

type CreateBankAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	CreateBankAccount201ApplicationJSONObject *CreateBankAccount201ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	CreateBankAccount400ApplicationJSONObject *CreateBankAccount400ApplicationJSON
	// You do not have permissions to access this resource.
	CreateBankAccount401ApplicationJSONObject *CreateBankAccount401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	CreateBankAccount403ApplicationJSONObject *CreateBankAccount403ApplicationJSON
	// The specified resource was not found
	CreateBankAccount404ApplicationJSONObject *CreateBankAccount404ApplicationJSON
	// Duplicate request
	CreateBankAccount409ApplicationJSONObject *CreateBankAccount409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	CreateBankAccount429ApplicationJSONObject *CreateBankAccount429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	CreateBankAccount500ApplicationJSONObject *CreateBankAccount500ApplicationJSON
}
