"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProfilerConfig:
    r"""Configuration information for Amazon SageMaker Debugger system monitoring, framework profiling, and storage paths."""
    
    disable_profiler: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisableProfiler'), 'exclude': lambda f: f is None }})  
    profiling_interval_in_milliseconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProfilingIntervalInMilliseconds'), 'exclude': lambda f: f is None }})  
    profiling_parameters: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProfilingParameters'), 'exclude': lambda f: f is None }})  
    s3_output_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3OutputPath'), 'exclude': lambda f: f is None }})  
    