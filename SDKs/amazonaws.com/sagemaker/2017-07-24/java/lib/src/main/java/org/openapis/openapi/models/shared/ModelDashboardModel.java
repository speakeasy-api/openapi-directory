/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ModelDashboardModel - A model displayed in the Amazon SageMaker Model Dashboard.
 */
public class ModelDashboardModel {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Endpoints")
    public ModelDashboardEndpoint[] endpoints;

    public ModelDashboardModel withEndpoints(ModelDashboardEndpoint[] endpoints) {
        this.endpoints = endpoints;
        return this;
    }
    
    /**
     * A batch transform job. For information about SageMaker batch transform, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html"&gt;Use Batch Transform&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastBatchTransformJob")
    public TransformJob lastBatchTransformJob;

    public ModelDashboardModel withLastBatchTransformJob(TransformJob lastBatchTransformJob) {
        this.lastBatchTransformJob = lastBatchTransformJob;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Model")
    public Model model;

    public ModelDashboardModel withModel(Model model) {
        this.model = model;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelCard")
    public ModelDashboardModelCard modelCard;

    public ModelDashboardModel withModelCard(ModelDashboardModelCard modelCard) {
        this.modelCard = modelCard;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MonitoringSchedules")
    public ModelDashboardMonitoringSchedule[] monitoringSchedules;

    public ModelDashboardModel withMonitoringSchedules(ModelDashboardMonitoringSchedule[] monitoringSchedules) {
        this.monitoringSchedules = monitoringSchedules;
        return this;
    }
    
    public ModelDashboardModel(){}
}
