/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DetectedProperties } from "./detectedproperties";
import { Encryption } from "./encryption";
import { InputCaptions } from "./inputcaptions";
import { TimeSpan } from "./timespan";
import { Expose, Type } from "class-transformer";

/**
 * Information about the file that you're transcoding.
 */
export class JobInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AspectRatio" })
  aspectRatio?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Container" })
  container?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DetectedProperties" })
  @Type(() => DetectedProperties)
  detectedProperties?: DetectedProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Encryption" })
  @Type(() => Encryption)
  encryption?: Encryption;

  @SpeakeasyMetadata()
  @Expose({ name: "FrameRate" })
  frameRate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InputCaptions" })
  @Type(() => InputCaptions)
  inputCaptions?: InputCaptions;

  @SpeakeasyMetadata()
  @Expose({ name: "Interlaced" })
  interlaced?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Resolution" })
  resolution?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeSpan" })
  @Type(() => TimeSpan)
  timeSpan?: TimeSpan;
}
