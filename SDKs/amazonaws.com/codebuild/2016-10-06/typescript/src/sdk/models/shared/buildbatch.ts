/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuildArtifacts } from "./buildartifacts";
import { BuildBatchPhase } from "./buildbatchphase";
import { BuildGroup } from "./buildgroup";
import { LogsConfig } from "./logsconfig";
import { ProjectBuildBatchConfig } from "./projectbuildbatchconfig";
import { ProjectCache } from "./projectcache";
import { ProjectEnvironment } from "./projectenvironment";
import { ProjectFileSystemLocation } from "./projectfilesystemlocation";
import { ProjectSource } from "./projectsource";
import { ProjectSourceVersion } from "./projectsourceversion";
import { StatusTypeEnum } from "./statustypeenum";
import { VpcConfig } from "./vpcconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about a batch build.
 */
export class BuildBatch extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "artifacts" })
  @Type(() => BuildArtifacts)
  artifacts?: BuildArtifacts;

  /**
   * Contains configuration information about a batch build project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buildBatchConfig" })
  @Type(() => ProjectBuildBatchConfig)
  buildBatchConfig?: ProjectBuildBatchConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "buildBatchNumber" })
  buildBatchNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "buildBatchStatus" })
  buildBatchStatus?: StatusTypeEnum;

  @SpeakeasyMetadata({ elemType: BuildGroup })
  @Expose({ name: "buildGroups" })
  @Type(() => BuildGroup)
  buildGroups?: BuildGroup[];

  @SpeakeasyMetadata()
  @Expose({ name: "buildTimeoutInMinutes" })
  buildTimeoutInMinutes?: number;

  /**
   * Information about the cache for the build project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cache" })
  @Type(() => ProjectCache)
  cache?: ProjectCache;

  @SpeakeasyMetadata()
  @Expose({ name: "complete" })
  complete?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "currentPhase" })
  currentPhase?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "debugSessionEnabled" })
  debugSessionEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  encryptionKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  /**
   * Information about the build environment of the build project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  @Type(() => ProjectEnvironment)
  environment?: ProjectEnvironment;

  @SpeakeasyMetadata({ elemType: ProjectFileSystemLocation })
  @Expose({ name: "fileSystemLocations" })
  @Type(() => ProjectFileSystemLocation)
  fileSystemLocations?: ProjectFileSystemLocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "initiator" })
  initiator?: string;

  /**
   *  Information about logs for a build project. These can be logs in CloudWatch Logs, built in a specified S3 bucket, or both.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logConfig" })
  @Type(() => LogsConfig)
  logConfig?: LogsConfig;

  @SpeakeasyMetadata({ elemType: BuildBatchPhase })
  @Expose({ name: "phases" })
  @Type(() => BuildBatchPhase)
  phases?: BuildBatchPhase[];

  @SpeakeasyMetadata()
  @Expose({ name: "projectName" })
  projectName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "queuedTimeoutInMinutes" })
  queuedTimeoutInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "resolvedSourceVersion" })
  resolvedSourceVersion?: string;

  @SpeakeasyMetadata({ elemType: BuildArtifacts })
  @Expose({ name: "secondaryArtifacts" })
  @Type(() => BuildArtifacts)
  secondaryArtifacts?: BuildArtifacts[];

  @SpeakeasyMetadata({ elemType: ProjectSourceVersion })
  @Expose({ name: "secondarySourceVersions" })
  @Type(() => ProjectSourceVersion)
  secondarySourceVersions?: ProjectSourceVersion[];

  @SpeakeasyMetadata({ elemType: ProjectSource })
  @Expose({ name: "secondarySources" })
  @Type(() => ProjectSource)
  secondarySources?: ProjectSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "serviceRole" })
  serviceRole?: string;

  /**
   * Information about the build input source code for the build project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => ProjectSource)
  source?: ProjectSource;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceVersion" })
  sourceVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * Information about the VPC configuration that CodeBuild accesses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpcConfig" })
  @Type(() => VpcConfig)
  vpcConfig?: VpcConfig;
}
