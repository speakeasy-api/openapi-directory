/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetProjectUsernameProjectQueryParams {
    /**
     * Restricts which builds are returned.
     * Set to "completed", "successful", "failed", "running", or defaults to no filter.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public org.openapis.openapi.models.shared.FilterEnum filter;
    public GetProjectUsernameProjectQueryParams withFilter(org.openapis.openapi.models.shared.FilterEnum filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * The number of builds to return. Maximum 100, defaults to 30.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GetProjectUsernameProjectQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The API returns builds starting from this offset, defaults to 0.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Long offset;
    public GetProjectUsernameProjectQueryParams withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
}
