/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateRelationalDatabaseRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "availabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "masterDatabaseName" })
  masterDatabaseName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "masterUserPassword" })
  masterUserPassword?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "masterUsername" })
  masterUsername: string;

  @SpeakeasyMetadata()
  @Expose({ name: "preferredBackupWindow" })
  preferredBackupWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "preferredMaintenanceWindow" })
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publiclyAccessible" })
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseBlueprintId" })
  relationalDatabaseBlueprintId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseBundleId" })
  relationalDatabaseBundleId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseName" })
  relationalDatabaseName: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
