// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSimilarImagesSecurity struct {
	Basic              *shared.SchemeBasic              `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *shared.SchemeCustomerAccessCode `security:"scheme,type=oauth2"`
}

type GetSimilarImagesLicenseEnum string

const (
	GetSimilarImagesLicenseEnumCommercial GetSimilarImagesLicenseEnum = "commercial"
	GetSimilarImagesLicenseEnumEditorial  GetSimilarImagesLicenseEnum = "editorial"
)

func (e *GetSimilarImagesLicenseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "commercial":
		fallthrough
	case "editorial":
		*e = GetSimilarImagesLicenseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSimilarImagesLicenseEnum: %s", s)
	}
}

// GetSimilarImagesViewEnum - Amount of detail to render in the response
type GetSimilarImagesViewEnum string

const (
	GetSimilarImagesViewEnumMinimal GetSimilarImagesViewEnum = "minimal"
	GetSimilarImagesViewEnumFull    GetSimilarImagesViewEnum = "full"
)

func (e *GetSimilarImagesViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimal":
		fallthrough
	case "full":
		*e = GetSimilarImagesViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSimilarImagesViewEnum: %s", s)
	}
}

type GetSimilarImagesQueryParams struct {
	// The asset ID or upload ID to find similar images for
	AssetID string `queryParam:"style=form,explode=true,name=asset_id"`
	// Language for the keywords and categories in the response
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Show only images with the specified license
	License []GetSimilarImagesLicenseEnum `queryParam:"style=form,explode=true,name=license"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Enable or disable safe search
	Safe *bool `queryParam:"style=form,explode=true,name=safe"`
	// Amount of detail to render in the response
	View *GetSimilarImagesViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type GetSimilarImagesRequest struct {
	QueryParams GetSimilarImagesQueryParams
	Security    GetSimilarImagesSecurity
}

type GetSimilarImagesResponse struct {
	ContentType string
	// OK
	ImageSearchResults *shared.ImageSearchResults
	StatusCode         int
	RawResponse        *http.Response
}
