/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ScoreBasic {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayScore")
    public Long awayScore;

    public ScoreBasic withAwayScore(Long awayScore) {
        this.awayScore = awayScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeam")
    public String awayTeam;

    public ScoreBasic withAwayTeam(String awayTeam) {
        this.awayTeam = awayTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamID")
    public Long awayTeamID;

    public ScoreBasic withAwayTeamID(Long awayTeamID) {
        this.awayTeamID = awayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Canceled")
    public Boolean canceled;

    public ScoreBasic withCanceled(Boolean canceled) {
        this.canceled = canceled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Closed")
    public Boolean closed;

    public ScoreBasic withClosed(Boolean closed) {
        this.closed = closed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Date")
    public String date;

    public ScoreBasic withDate(String date) {
        this.date = date;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public ScoreBasic withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTimeUTC")
    public String dateTimeUTC;

    public ScoreBasic withDateTimeUTC(String dateTimeUTC) {
        this.dateTimeUTC = dateTimeUTC;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public ScoreBasic withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameEndDateTime")
    public String gameEndDateTime;

    public ScoreBasic withGameEndDateTime(String gameEndDateTime) {
        this.gameEndDateTime = gameEndDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;

    public ScoreBasic withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameKey")
    public String gameKey;

    public ScoreBasic withGameKey(String gameKey) {
        this.gameKey = gameKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalAwayTeamID")
    public Long globalAwayTeamID;

    public ScoreBasic withGlobalAwayTeamID(Long globalAwayTeamID) {
        this.globalAwayTeamID = globalAwayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;

    public ScoreBasic withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalHomeTeamID")
    public Long globalHomeTeamID;

    public ScoreBasic withGlobalHomeTeamID(Long globalHomeTeamID) {
        this.globalHomeTeamID = globalHomeTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeScore")
    public Long homeScore;

    public ScoreBasic withHomeScore(Long homeScore) {
        this.homeScore = homeScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeam")
    public String homeTeam;

    public ScoreBasic withHomeTeam(String homeTeam) {
        this.homeTeam = homeTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamID")
    public Long homeTeamID;

    public ScoreBasic withHomeTeamID(Long homeTeamID) {
        this.homeTeamID = homeTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastUpdated")
    public String lastUpdated;

    public ScoreBasic withLastUpdated(String lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quarter")
    public String quarter;

    public ScoreBasic withQuarter(String quarter) {
        this.quarter = quarter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterDescription")
    public String quarterDescription;

    public ScoreBasic withQuarterDescription(String quarterDescription) {
        this.quarterDescription = quarterDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScoreID")
    public Long scoreID;

    public ScoreBasic withScoreID(Long scoreID) {
        this.scoreID = scoreID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public ScoreBasic withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public ScoreBasic withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StadiumID")
    public Long stadiumID;

    public ScoreBasic withStadiumID(Long stadiumID) {
        this.stadiumID = stadiumID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;

    public ScoreBasic withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeRemaining")
    public String timeRemaining;

    public ScoreBasic withTimeRemaining(String timeRemaining) {
        this.timeRemaining = timeRemaining;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Week")
    public Long week;

    public ScoreBasic withWeek(Long week) {
        this.week = week;
        return this;
    }
    
    public ScoreBasic(){}
}
