// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JobMonitoringStatusEnum - Monitoring status of the job break down.
type JobMonitoringStatusEnum string

const (
	JobMonitoringStatusEnumFailure                JobMonitoringStatusEnum = "Failure"
	JobMonitoringStatusEnumSuccess                JobMonitoringStatusEnum = "Success"
	JobMonitoringStatusEnumQueued                 JobMonitoringStatusEnum = "Queued"
	JobMonitoringStatusEnumScheduled              JobMonitoringStatusEnum = "Scheduled"
	JobMonitoringStatusEnumActive                 JobMonitoringStatusEnum = "Active"
	JobMonitoringStatusEnumCanceling              JobMonitoringStatusEnum = "Canceling"
	JobMonitoringStatusEnumCanceled               JobMonitoringStatusEnum = "Canceled"
	JobMonitoringStatusEnumSuccessfulWithWarnings JobMonitoringStatusEnum = "SuccessfulWithWarnings"
	JobMonitoringStatusEnumCancelingScheduled     JobMonitoringStatusEnum = "CancelingScheduled"
)

func (e JobMonitoringStatusEnum) ToPointer() *JobMonitoringStatusEnum {
	return &e
}

func (e *JobMonitoringStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Failure":
		fallthrough
	case "Success":
		fallthrough
	case "Queued":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Active":
		fallthrough
	case "Canceling":
		fallthrough
	case "Canceled":
		fallthrough
	case "SuccessfulWithWarnings":
		fallthrough
	case "CancelingScheduled":
		*e = JobMonitoringStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobMonitoringStatusEnum: %v", v)
	}
}
