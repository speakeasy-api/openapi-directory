// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribePrincipalIDFormatActionEnum
type POSTDescribePrincipalIDFormatActionEnum string

const (
	POSTDescribePrincipalIDFormatActionEnumDescribePrincipalIDFormat POSTDescribePrincipalIDFormatActionEnum = "DescribePrincipalIdFormat"
)

func (e POSTDescribePrincipalIDFormatActionEnum) ToPointer() *POSTDescribePrincipalIDFormatActionEnum {
	return &e
}

func (e *POSTDescribePrincipalIDFormatActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribePrincipalIdFormat":
		*e = POSTDescribePrincipalIDFormatActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribePrincipalIDFormatActionEnum: %v", v)
	}
}

// POSTDescribePrincipalIDFormatVersionEnum
type POSTDescribePrincipalIDFormatVersionEnum string

const (
	POSTDescribePrincipalIDFormatVersionEnumTwoThousandAndSixteen1115 POSTDescribePrincipalIDFormatVersionEnum = "2016-11-15"
)

func (e POSTDescribePrincipalIDFormatVersionEnum) ToPointer() *POSTDescribePrincipalIDFormatVersionEnum {
	return &e
}

func (e *POSTDescribePrincipalIDFormatVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribePrincipalIDFormatVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribePrincipalIDFormatVersionEnum: %v", v)
	}
}

type POSTDescribePrincipalIDFormatRequest struct {
	Action POSTDescribePrincipalIDFormatActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                                  `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                                   `request:"mediaType=text/xml"`
	Version           POSTDescribePrincipalIDFormatVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribePrincipalIDFormatResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
