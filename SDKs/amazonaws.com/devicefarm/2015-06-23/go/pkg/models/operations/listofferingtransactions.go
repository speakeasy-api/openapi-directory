// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListOfferingTransactionsXAmzTargetEnum
type ListOfferingTransactionsXAmzTargetEnum string

const (
	ListOfferingTransactionsXAmzTargetEnumDeviceFarm20150623ListOfferingTransactions ListOfferingTransactionsXAmzTargetEnum = "DeviceFarm_20150623.ListOfferingTransactions"
)

func (e ListOfferingTransactionsXAmzTargetEnum) ToPointer() *ListOfferingTransactionsXAmzTargetEnum {
	return &e
}

func (e *ListOfferingTransactionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.ListOfferingTransactions":
		*e = ListOfferingTransactionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListOfferingTransactionsXAmzTargetEnum: %v", v)
	}
}

type ListOfferingTransactionsRequest struct {
	ListOfferingTransactionsRequest shared.ListOfferingTransactionsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      ListOfferingTransactionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListOfferingTransactionsResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	ListOfferingTransactionsResult *shared.ListOfferingTransactionsResult
	// NotEligibleException
	NotEligibleException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceAccountException
	ServiceAccountException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
