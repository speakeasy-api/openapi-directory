// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValidateAddressEnum - The possible validate address values
type ValidateAddressEnum string

const (
	ValidateAddressEnumNoValidation     ValidateAddressEnum = "no_validation"
	ValidateAddressEnumValidateOnly     ValidateAddressEnum = "validate_only"
	ValidateAddressEnumValidateAndClean ValidateAddressEnum = "validate_and_clean"
)

func (e ValidateAddressEnum) ToPointer() *ValidateAddressEnum {
	return &e
}

func (e *ValidateAddressEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "no_validation":
		fallthrough
	case "validate_only":
		fallthrough
	case "validate_and_clean":
		*e = ValidateAddressEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidateAddressEnum: %v", v)
	}
}
