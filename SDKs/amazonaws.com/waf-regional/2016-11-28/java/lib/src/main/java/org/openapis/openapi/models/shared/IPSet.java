/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IPSet - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;Contains one or more IP addresses or blocks of IP addresses specified in Classless Inter-Domain Routing (CIDR) notation. AWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32. AWS WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and /128.&lt;/p&gt; &lt;p&gt;To specify an individual IP address, you specify the four-part IP address followed by a &lt;code&gt;/32&lt;/code&gt;, for example, 192.0.2.0/32. To block a range of IP addresses, you can specify /8 or any range between /16 through /32 (for IPv4) or /24, /32, /48, /56, /64, or /128 (for IPv6). For more information about CIDR notation, see the Wikipedia entry &lt;a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing"&gt;Classless Inter-Domain Routing&lt;/a&gt;. &lt;/p&gt;
 */
public class IPSet {
    @JsonProperty("IPSetDescriptors")
    public IPSetDescriptor[] ipSetDescriptors;

    public IPSet withIPSetDescriptors(IPSetDescriptor[] ipSetDescriptors) {
        this.ipSetDescriptors = ipSetDescriptors;
        return this;
    }
    
    @JsonProperty("IPSetId")
    public String ipSetId;

    public IPSet withIPSetId(String ipSetId) {
        this.ipSetId = ipSetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public IPSet withName(String name) {
        this.name = name;
        return this;
    }
    
    public IPSet(@JsonProperty("IPSetDescriptors") IPSetDescriptor[] ipSetDescriptors, @JsonProperty("IPSetId") String ipSetId) {
        this.ipSetDescriptors = ipSetDescriptors;
        this.ipSetId = ipSetId;
  }
}
