/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NodeNetworkConfig - Parameters for node pool-level network config.
 */
public class NodeNetworkConfig {
    /**
     * Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither `create_pod_range` or `pod_range` are specified, the cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createPodRange")
    public Boolean createPodRange;
    public NodeNetworkConfig withCreatePodRange(Boolean createPodRange) {
        this.createPodRange = createPodRange;
        return this;
    }
    
    /**
     * Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from cluster.privateClusterConfig.enablePrivateNodes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enablePrivateNodes")
    public Boolean enablePrivateNodes;
    public NodeNetworkConfig withEnablePrivateNodes(Boolean enablePrivateNodes) {
        this.enablePrivateNodes = enablePrivateNodes;
        return this;
    }
    
    /**
     * Configuration of all network bandwidth tiers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkPerformanceConfig")
    public NetworkPerformanceConfig networkPerformanceConfig;
    public NodeNetworkConfig withNetworkPerformanceConfig(NetworkPerformanceConfig networkPerformanceConfig) {
        this.networkPerformanceConfig = networkPerformanceConfig;
        return this;
    }
    
    /**
     * The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to use. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("podIpv4CidrBlock")
    public String podIpv4CidrBlock;
    public NodeNetworkConfig withPodIpv4CidrBlock(String podIpv4CidrBlock) {
        this.podIpv4CidrBlock = podIpv4CidrBlock;
        return this;
    }
    
    /**
     * The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("podRange")
    public String podRange;
    public NodeNetworkConfig withPodRange(String podRange) {
        this.podRange = podRange;
        return this;
    }
    
}
