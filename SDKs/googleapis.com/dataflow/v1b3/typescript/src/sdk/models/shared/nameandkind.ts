/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Counter aggregation kind.
 */
export enum NameAndKindKindEnum {
  Invalid = "INVALID",
  Sum = "SUM",
  Max = "MAX",
  Min = "MIN",
  Mean = "MEAN",
  Or = "OR",
  And = "AND",
  Set = "SET",
  Distribution = "DISTRIBUTION",
  LatestValue = "LATEST_VALUE",
}

/**
 * Basic metadata about a counter.
 */
export class NameAndKind extends SpeakeasyBase {
  /**
   * Counter aggregation kind.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: NameAndKindKindEnum;

  /**
   * Name of the counter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
