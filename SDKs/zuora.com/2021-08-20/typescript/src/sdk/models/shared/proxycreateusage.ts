/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Container for custom fields of a Usage object.
 *
 * @remarks
 *
 */
export class ProxyCreateUsage extends SpeakeasyBase {
  /**
   *  The ID of the account associated with the usage data. This field is only required if no value is specified for the `AccountNumber` field.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a valid account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  /**
   *  The number of the account associated with the usage data. This field is only required if no value is specified for the `AccountId` field.
   *
   * @remarks
   * **Character limit**: 50 **Values**: a valid account number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountNumber" })
  accountNumber?: string;

  /**
   *  The OrginalId of the rate plan charge related to the usage record, e.g., `2c9081a03c63c94c013c6873357a0117` **Character limit**: 32 **Values**: a valid rate plan charge OriginalID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeId" })
  chargeId?: string;

  /**
   * A unique number for the rate plan charge related to the usage record. For example, C-00000007.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeNumber" })
  chargeNumber?: string;

  /**
   * A description of the usage record.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   *  The end date and time of a range of time when usage is tracked. Use this field for reporting; this field doesn't affect usage calculation.
   *
   * @remarks
   * **Character limit**: 29 **Values**: a valid date and time value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EndDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDateTime?: Date;

  /**
   *  Indicates the number of units used.
   *
   * @remarks
   * **Character limit**: 16 **Values**: a valid decimal amount equal to or greater than 0
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Quantity" })
  quantity: number;

  /**
   *  The start date and time of a range of time when usage is tracked. Zuora uses this field value to determine the usage date. Unlike the `EndDateTime`, the `StartDateTime` field does affect usage calculation.
   *
   * @remarks
   * **Character limit**: 29 **Values**: a valid date and time value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime: Date;

  /**
   *  The date when usage was submitted.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubmissionDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submissionDateTime?: Date;

  /**
   * The ID of the subscription that contains the fees related to the usage data.
   *
   * @remarks
   *
   * The ID of a subscription might change when you create amendments to the subscription. It is good practice to use the unique subscription number that you can specify in the `SubscriptionNumber` field.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionId" })
  subscriptionId?: string;

  /**
   * The unique identifier number of the subscription that contains the fees related to the usage data.
   *
   * @remarks
   *
   * It is good practice to use this field when creating usage records.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionNumber" })
  subscriptionNumber?: string;

  /**
   *  Specifies the units to measure usage. Units of measure are configured in the web-based UI. Your values depend on your configuration in **Billing Settings**.
   *
   * @remarks
   * **Character limit**: **Values**: a valid unit of measure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UOM" })
  uom: string;
}
