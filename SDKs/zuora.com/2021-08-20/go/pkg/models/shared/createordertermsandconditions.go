// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateOrderTermsAndConditionsRenewalSettingEnum string

const (
	CreateOrderTermsAndConditionsRenewalSettingEnumRenewWithSpecificTerm CreateOrderTermsAndConditionsRenewalSettingEnum = "RENEW_WITH_SPECIFIC_TERM"
	CreateOrderTermsAndConditionsRenewalSettingEnumRenewToEvergreen      CreateOrderTermsAndConditionsRenewalSettingEnum = "RENEW_TO_EVERGREEN"
)

func (e *CreateOrderTermsAndConditionsRenewalSettingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RENEW_WITH_SPECIFIC_TERM":
		fallthrough
	case "RENEW_TO_EVERGREEN":
		*e = CreateOrderTermsAndConditionsRenewalSettingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrderTermsAndConditionsRenewalSettingEnum: %s", s)
	}
}

// CreateOrderTermsAndConditions - Information about an order action of type `TermsAndConditions`.
type CreateOrderTermsAndConditions struct {
	AutoRenew *bool `json:"autoRenew,omitempty"`
	// The length of the period for the current subscription term.
	LastTerm       *LastTerm                                        `json:"lastTerm,omitempty"`
	RenewalSetting *CreateOrderTermsAndConditionsRenewalSettingEnum `json:"renewalSetting,omitempty"`
	RenewalTerms   []RenewalTerm                                    `json:"renewalTerms,omitempty"`
}
