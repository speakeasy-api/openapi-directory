// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProvisionedProductPlanStatusEnum string

const (
	ProvisionedProductPlanStatusEnumCreateInProgress  ProvisionedProductPlanStatusEnum = "CREATE_IN_PROGRESS"
	ProvisionedProductPlanStatusEnumCreateSuccess     ProvisionedProductPlanStatusEnum = "CREATE_SUCCESS"
	ProvisionedProductPlanStatusEnumCreateFailed      ProvisionedProductPlanStatusEnum = "CREATE_FAILED"
	ProvisionedProductPlanStatusEnumExecuteInProgress ProvisionedProductPlanStatusEnum = "EXECUTE_IN_PROGRESS"
	ProvisionedProductPlanStatusEnumExecuteSuccess    ProvisionedProductPlanStatusEnum = "EXECUTE_SUCCESS"
	ProvisionedProductPlanStatusEnumExecuteFailed     ProvisionedProductPlanStatusEnum = "EXECUTE_FAILED"
)

func (e *ProvisionedProductPlanStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "CREATE_SUCCESS":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "EXECUTE_IN_PROGRESS":
		fallthrough
	case "EXECUTE_SUCCESS":
		fallthrough
	case "EXECUTE_FAILED":
		*e = ProvisionedProductPlanStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProvisionedProductPlanStatusEnum: %s", s)
	}
}
