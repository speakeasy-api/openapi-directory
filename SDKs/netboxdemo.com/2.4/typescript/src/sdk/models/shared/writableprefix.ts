/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Operational status of this prefix
 */
export enum WritablePrefixStatusEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
}

export class WritablePrefixInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * All IP addresses within this prefix are considered usable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_pool" })
  isPool?: boolean;

  /**
   * IPv4 or IPv6 network with mask
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix: string;

  /**
   * The primary function of this prefix
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  site?: number;

  /**
   * Operational status of this prefix
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WritablePrefixStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  vlan?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vrf" })
  vrf?: number;
}
