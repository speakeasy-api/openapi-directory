"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import objectid as shared_objectid
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CertificateExtensionConstraintsKnownExtensionsEnum(str, Enum):
    KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED = 'KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED'
    BASE_KEY_USAGE = 'BASE_KEY_USAGE'
    EXTENDED_KEY_USAGE = 'EXTENDED_KEY_USAGE'
    CA_OPTIONS = 'CA_OPTIONS'
    POLICY_IDS = 'POLICY_IDS'
    AIA_OCSP_SERVERS = 'AIA_OCSP_SERVERS'
    NAME_CONSTRAINTS = 'NAME_CONSTRAINTS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CertificateExtensionConstraints:
    r"""Describes a set of X.509 extensions that may be part of some certificate issuance controls."""
    
    additional_extensions: Optional[list[shared_objectid.ObjectID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalExtensions'), 'exclude': lambda f: f is None }})
    r"""Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions."""  
    known_extensions: Optional[list[CertificateExtensionConstraintsKnownExtensionsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('knownExtensions'), 'exclude': lambda f: f is None }})
    r"""Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions."""  
    