/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Data for validating PIN.
 */
export class EeValidatePinRequest extends SpeakeasyBase {
  /**
   * EE API authorization Token received from GET /ee/token/create.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessToken" })
  accessToken: string;

  /**
   * The pin entered by a user. 6 digits
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pin" })
  pin: string;

  /**
   * The pinReference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pinReference" })
  pinReference: string;

  /**
   * Tracking header to be able to search logs for a specific user requests. If not provided it will be generated. FE should store it for later user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingHeader" })
  trackingHeader?: string;
}
