<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RolloutRuleModel
{
	#[\JMS\Serializer\Annotation\SerializedName('comparator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RolloutRuleComparatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RolloutRuleComparatorEnum $comparator = null;
    
    /**
     * The user attribute to compare.
     * 
     * @var ?string $comparisonAttribute
     */
	#[\JMS\Serializer\Annotation\SerializedName('comparisonAttribute')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comparisonAttribute = null;
    
    /**
     * The value to compare against.
     * 
     * @var ?string $comparisonValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('comparisonValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comparisonValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('segmentComparator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SegmentComparatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SegmentComparatorEnum $segmentComparator = null;
    
    /**
     * The segment to compare against.
     * 
     * @var ?string $segmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('segmentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $segmentId = null;
    
    /**
     * The value to serve when the comparison matches. It must respect the setting type.
     * 
     * @var mixed $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $value = null;
    
	public function __construct()
	{
		$this->comparator = null;
		$this->comparisonAttribute = null;
		$this->comparisonValue = null;
		$this->segmentComparator = null;
		$this->segmentId = null;
		$this->value = null;
	}
}
