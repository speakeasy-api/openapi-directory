/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Response of creating the IDP authentication URL.
 */
export class CreateAuthUriResponse extends SpeakeasyBase {
  /**
   * all providers the user has once used to do federated login
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allProviders" })
  allProviders?: string[];

  /**
   * The URI used by the IDP to authenticate the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authUri" })
  authUri?: string;

  /**
   * True if captcha is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "captchaRequired" })
  captchaRequired?: boolean;

  /**
   * True if the authUri is for user's existing provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "forExistingProvider" })
  forExistingProvider?: boolean;

  /**
   * The fixed string identitytoolkit#CreateAuthUriResponse".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The provider ID of the auth URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: string;

  /**
   * Whether the user is registered if the identifier is an email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registered" })
  registered?: boolean;

  /**
   * Session ID which should be passed in the following verifyAssertion request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  /**
   * All sign-in methods this user has used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signinMethods" })
  signinMethods?: string[];
}
