/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InitialResponseSetting - Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.
 */
public class InitialResponseSetting {
    /**
     *  Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codeHook")
    public DialogCodeHookInvocationSetting codeHook;
    public InitialResponseSetting withCodeHook(DialogCodeHookInvocationSetting codeHook) {
        this.codeHook = codeHook;
        return this;
    }
    
    /**
     * Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditional")
    public ConditionalSpecification conditional;
    public InitialResponseSetting withConditional(ConditionalSpecification conditional) {
        this.conditional = conditional;
        return this;
    }
    
    /**
     * Specifies a list of message groups that Amazon Lex uses to respond the user input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialResponse")
    public ResponseSpecification initialResponse;
    public InitialResponseSetting withInitialResponse(ResponseSpecification initialResponse) {
        this.initialResponse = initialResponse;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextStep")
    public DialogState nextStep;
    public InitialResponseSetting withNextStep(DialogState nextStep) {
        this.nextStep = nextStep;
        return this;
    }
    
}
