"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import transportdependency as shared_transportdependency
from typing import Any, Optional


@dataclasses.dataclass
class ServiceDependency:
    
    ser_name: str = dataclasses.field()
    r"""The name of the service, for example, RNIS, LocationService, etc."""  
    version: str = dataclasses.field()
    r"""The version of the service."""  
    requested_permissions: Optional[list[str]] = dataclasses.field(default=None)
    r"""Requested permissions regarding the access of the application to the service. See clause 8.2 of ETSI GS MEC 009 [4].
    The format of this attribute is left for the data model design stage.
    """  
    ser_category: Optional[Any] = dataclasses.field(default=None)
    r"""See MEC011"""  
    ser_transport_dependencies: Optional[list[shared_transportdependency.TransportDependency]] = dataclasses.field(default=None)
    r"""Indicates transport and serialization format dependencies of consuming the service. Defaults to REST + JSON if absent. See note."""  
    