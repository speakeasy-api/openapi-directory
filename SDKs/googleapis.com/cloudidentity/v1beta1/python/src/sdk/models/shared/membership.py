"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entitykey as shared_entitykey
from ..shared import membershiprole as shared_membershiprole
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MembershipDeliverySettingEnum(str, Enum):
    r"""Output only. Delivery setting associated with the membership."""
    DELIVERY_SETTING_UNSPECIFIED = 'DELIVERY_SETTING_UNSPECIFIED'
    ALL_MAIL = 'ALL_MAIL'
    DIGEST = 'DIGEST'
    DAILY = 'DAILY'
    NONE = 'NONE'
    DISABLED = 'DISABLED'

class MembershipTypeEnum(str, Enum):
    r"""Output only. The type of the membership."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    USER = 'USER'
    SERVICE_ACCOUNT = 'SERVICE_ACCOUNT'
    GROUP = 'GROUP'
    SHARED_DRIVE = 'SHARED_DRIVE'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Membership:
    r"""A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \\"member\\"."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the `Membership` was created."""  
    delivery_setting: Optional[MembershipDeliverySettingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliverySetting'), 'exclude': lambda f: f is None }})
    r"""Output only. Delivery setting associated with the membership."""  
    member_key: Optional[shared_entitykey.EntityKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberKey'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`."""  
    preferred_member_key: Optional[shared_entitykey.EntityKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preferredMemberKey'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s."""  
    roles: Optional[list[shared_membershiprole.MembershipRole]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roles'), 'exclude': lambda f: f is None }})
    r"""The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`."""  
    type: Optional[MembershipTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. The type of the membership."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the `Membership` was last updated."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MembershipInput:
    r"""A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \\"member\\"."""
    
    member_key: Optional[shared_entitykey.EntityKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberKey'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s."""  
    preferred_member_key: Optional[shared_entitykey.EntityKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preferredMemberKey'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s."""  
    roles: Optional[list[shared_membershiprole.MembershipRoleInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roles'), 'exclude': lambda f: f is None }})
    r"""The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`."""  
    