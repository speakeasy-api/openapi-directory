/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillingUpdate } from "./billingupdate";
import { PreviewOrderPricingUpdate } from "./previeworderpricingupdate";
import { PreviewOrderTriggerParams } from "./previewordertriggerparams";
import { Expose, Type } from "class-transformer";

export class PreviewOrderChargeUpdate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billing" })
  @Type(() => BillingUpdate)
  billing?: BillingUpdate;

  /**
   * Read only. Identifies the charge to be updated.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeNumber" })
  chargeNumber?: string;

  /**
   * Container for custom fields of a Rate Plan Charge object.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customFields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Specifies when a charge becomes active.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Type(() => PreviewOrderTriggerParams)
  effectiveDate?: PreviewOrderTriggerParams;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing" })
  @Type(() => PreviewOrderPricingUpdate)
  pricing?: PreviewOrderPricingUpdate;

  /**
   * A unique string to represent the rate plan charge in the order. The unique token is used to perform multiple actions against a newly added rate plan. For example, if you want to add and update a product in the same order, you would assign a unique token to the product rate plan when added and use that token in future order actions.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uniqueToken" })
  uniqueToken?: string;
}
