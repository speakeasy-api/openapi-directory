/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceShareAssociationStatusEnum } from "./resourceshareassociationstatusenum";
import { ResourceShareAssociationTypeEnum } from "./resourceshareassociationtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Describes an association with a resource share and either a principal or a resource.
 */
export class ResourceShareAssociation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "associatedEntity" })
  associatedEntity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "associationType" })
  associationType?: ResourceShareAssociationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "external" })
  external?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceShareArn" })
  resourceShareArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceShareName" })
  resourceShareName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResourceShareAssociationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;
}
