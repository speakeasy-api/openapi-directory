<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/** [Output Only] The status of the VPN tunnel, which can be one of the following: - PROVISIONING: Resource is being allocated for the VPN tunnel. - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. - ESTABLISHED: Secure session is successfully established with the peer VPN. - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. - FAILED: Tunnel creation has failed and the tunnel is not ready to be used. - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel configuration was rejected, can be result of being denied access. - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.  */
enum VpnTunnelStatusEnum: string
{
    case ALLOCATING_RESOURCES = 'ALLOCATING_RESOURCES';
    case AUTHORIZATION_ERROR = 'AUTHORIZATION_ERROR';
    case DEPROVISIONING = 'DEPROVISIONING';
    case ESTABLISHED = 'ESTABLISHED';
    case FAILED = 'FAILED';
    case FIRST_HANDSHAKE = 'FIRST_HANDSHAKE';
    case NEGOTIATION_FAILURE = 'NEGOTIATION_FAILURE';
    case NETWORK_ERROR = 'NETWORK_ERROR';
    case NO_INCOMING_PACKETS = 'NO_INCOMING_PACKETS';
    case PROVISIONING = 'PROVISIONING';
    case REJECTED = 'REJECTED';
    case STOPPED = 'STOPPED';
    case WAITING_FOR_FULL_CONFIG = 'WAITING_FOR_FULL_CONFIG';
}
