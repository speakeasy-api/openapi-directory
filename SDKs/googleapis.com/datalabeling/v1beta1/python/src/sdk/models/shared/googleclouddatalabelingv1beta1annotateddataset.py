"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1annotateddatasetmetadata as shared_googleclouddatalabelingv1beta1annotateddatasetmetadata
from ..shared import googleclouddatalabelingv1beta1labelstats as shared_googleclouddatalabelingv1beta1labelstats
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatalabelingV1beta1AnnotatedDatasetAnnotationSourceEnum(str, Enum):
    r"""Output only. Source of the annotation."""
    ANNOTATION_SOURCE_UNSPECIFIED = 'ANNOTATION_SOURCE_UNSPECIFIED'
    OPERATOR = 'OPERATOR'

class GoogleCloudDatalabelingV1beta1AnnotatedDatasetAnnotationTypeEnum(str, Enum):
    r"""Output only. Type of the annotation. It is specified when starting labeling task."""
    ANNOTATION_TYPE_UNSPECIFIED = 'ANNOTATION_TYPE_UNSPECIFIED'
    IMAGE_CLASSIFICATION_ANNOTATION = 'IMAGE_CLASSIFICATION_ANNOTATION'
    IMAGE_BOUNDING_BOX_ANNOTATION = 'IMAGE_BOUNDING_BOX_ANNOTATION'
    IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION = 'IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION'
    IMAGE_BOUNDING_POLY_ANNOTATION = 'IMAGE_BOUNDING_POLY_ANNOTATION'
    IMAGE_POLYLINE_ANNOTATION = 'IMAGE_POLYLINE_ANNOTATION'
    IMAGE_SEGMENTATION_ANNOTATION = 'IMAGE_SEGMENTATION_ANNOTATION'
    VIDEO_SHOTS_CLASSIFICATION_ANNOTATION = 'VIDEO_SHOTS_CLASSIFICATION_ANNOTATION'
    VIDEO_OBJECT_TRACKING_ANNOTATION = 'VIDEO_OBJECT_TRACKING_ANNOTATION'
    VIDEO_OBJECT_DETECTION_ANNOTATION = 'VIDEO_OBJECT_DETECTION_ANNOTATION'
    VIDEO_EVENT_ANNOTATION = 'VIDEO_EVENT_ANNOTATION'
    TEXT_CLASSIFICATION_ANNOTATION = 'TEXT_CLASSIFICATION_ANNOTATION'
    TEXT_ENTITY_EXTRACTION_ANNOTATION = 'TEXT_ENTITY_EXTRACTION_ANNOTATION'
    GENERAL_CLASSIFICATION_ANNOTATION = 'GENERAL_CLASSIFICATION_ANNOTATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1AnnotatedDataset:
    r"""AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for."""
    
    annotation_source: Optional[GoogleCloudDatalabelingV1beta1AnnotatedDatasetAnnotationSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotationSource'), 'exclude': lambda f: f is None }})
    r"""Output only. Source of the annotation."""  
    annotation_type: Optional[GoogleCloudDatalabelingV1beta1AnnotatedDatasetAnnotationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotationType'), 'exclude': lambda f: f is None }})
    r"""Output only. Type of the annotation. It is specified when starting labeling task."""  
    blocking_resources: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blockingResources'), 'exclude': lambda f: f is None }})
    r"""Output only. The names of any related resources that are blocking changes to the annotated dataset."""  
    completed_example_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completedExampleCount'), 'exclude': lambda f: f is None }})
    r"""Output only. Number of examples that have annotation in the annotated dataset."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time the AnnotatedDataset was created."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Output only. The description of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 10000 characters."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Output only. The display name of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 64 characters."""  
    example_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exampleCount'), 'exclude': lambda f: f is None }})
    r"""Output only. Number of examples in the annotated dataset."""  
    label_stats: Optional[shared_googleclouddatalabelingv1beta1labelstats.GoogleCloudDatalabelingV1beta1LabelStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelStats'), 'exclude': lambda f: f is None }})
    r"""Statistics about annotation specs."""  
    metadata: Optional[shared_googleclouddatalabelingv1beta1annotateddatasetmetadata.GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata on AnnotatedDataset."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. AnnotatedDataset resource name in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}"""  
    