/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NotificationChannelStrategy } from "./notificationchannelstrategy";
import { NotificationRateLimit } from "./notificationratelimit";
import { Expose, Type } from "class-transformer";

/**
 * Control over how the notification channels in notification_channels are notified when this alert fires.
 */
export class AlertStrategy extends SpeakeasyBase {
  /**
   * If an alert policy that was active has no data for this long, any open incidents will close
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoClose" })
  autoClose?: string;

  /**
   * Control how notifications will be sent out, on a per-channel basis.
   */
  @SpeakeasyMetadata({ elemType: NotificationChannelStrategy })
  @Expose({ name: "notificationChannelStrategy" })
  @Type(() => NotificationChannelStrategy)
  notificationChannelStrategy?: NotificationChannelStrategy[];

  /**
   * Control over the rate of notifications sent to this alert policy's notification channels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationRateLimit" })
  @Type(() => NotificationRateLimit)
  notificationRateLimit?: NotificationRateLimit;
}
