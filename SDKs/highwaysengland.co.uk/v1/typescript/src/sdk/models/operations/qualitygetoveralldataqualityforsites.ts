/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class QualityGetOverallDataQualityForSitesRequest extends SpeakeasyBase {
  /**
   * The end date of the report in the format ddmmyyyy (i.e 31012016)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end_date",
  })
  endDate: string;

  /**
   * Get site quality by site id delimited by ,
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sites" })
  sites: string;

  /**
   * The start date of the report in the format ddmmyyyy (i.e 31012016)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start_date",
  })
  startDate: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=version",
  })
  version: string;
}

export class QualityGetOverallDataQualityForSitesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  overallQualityResponse?: shared.OverallQualityResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
