/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly
 */
export enum ManagedCertificateStatusEnum {
  UnspecifiedStatus = "UNSPECIFIED_STATUS",
  Ok = "OK",
  Pending = "PENDING",
  FailedRetryingInternal = "FAILED_RETRYING_INTERNAL",
  FailedRetryingNotVisible = "FAILED_RETRYING_NOT_VISIBLE",
  FailedPermanentlyNotVisible = "FAILED_PERMANENTLY_NOT_VISIBLE",
  FailedRetryingCaaForbidden = "FAILED_RETRYING_CAA_FORBIDDEN",
  FailedRetryingCaaChecking = "FAILED_RETRYING_CAA_CHECKING",
}

/**
 * A certificate managed by App Engine.
 */
export class ManagedCertificate extends SpeakeasyBase {
  /**
   * Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.@OutputOnly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastRenewalTime" })
  lastRenewalTime?: string;

  /**
   * Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ManagedCertificateStatusEnum;
}
