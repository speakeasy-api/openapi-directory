"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import defaultcategoricalhyperparameterrange as shared_defaultcategoricalhyperparameterrange
from ..shared import defaultcontinuoushyperparameterrange as shared_defaultcontinuoushyperparameterrange
from ..shared import defaultintegerhyperparameterrange as shared_defaultintegerhyperparameterrange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DefaultHyperParameterRanges:
    r"""Specifies the hyperparameters and their default ranges. Hyperparameters can be categorical, continuous, or integer-valued."""
    
    categorical_hyper_parameter_ranges: Optional[list[shared_defaultcategoricalhyperparameterrange.DefaultCategoricalHyperParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoricalHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    continuous_hyper_parameter_ranges: Optional[list[shared_defaultcontinuoushyperparameterrange.DefaultContinuousHyperParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('continuousHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    integer_hyper_parameter_ranges: Optional[list[shared_defaultintegerhyperparameterrange.DefaultIntegerHyperParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integerHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    