/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HyperParameterTrainingJobDefinition - Defines the training jobs launched by a hyperparameter tuning job.
 */
public class HyperParameterTrainingJobDefinition {
    @JsonProperty("AlgorithmSpecification")
    public HyperParameterAlgorithmSpecification algorithmSpecification;

    public HyperParameterTrainingJobDefinition withAlgorithmSpecification(HyperParameterAlgorithmSpecification algorithmSpecification) {
        this.algorithmSpecification = algorithmSpecification;
        return this;
    }
    
    /**
     * Contains information about the output location for managed spot training checkpoint data. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CheckpointConfig")
    public CheckpointConfig checkpointConfig;

    public HyperParameterTrainingJobDefinition withCheckpointConfig(CheckpointConfig checkpointConfig) {
        this.checkpointConfig = checkpointConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefinitionName")
    public String definitionName;

    public HyperParameterTrainingJobDefinition withDefinitionName(String definitionName) {
        this.definitionName = definitionName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableInterContainerTrafficEncryption")
    public Boolean enableInterContainerTrafficEncryption;

    public HyperParameterTrainingJobDefinition withEnableInterContainerTrafficEncryption(Boolean enableInterContainerTrafficEncryption) {
        this.enableInterContainerTrafficEncryption = enableInterContainerTrafficEncryption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableManagedSpotTraining")
    public Boolean enableManagedSpotTraining;

    public HyperParameterTrainingJobDefinition withEnableManagedSpotTraining(Boolean enableManagedSpotTraining) {
        this.enableManagedSpotTraining = enableManagedSpotTraining;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableNetworkIsolation")
    public Boolean enableNetworkIsolation;

    public HyperParameterTrainingJobDefinition withEnableNetworkIsolation(Boolean enableNetworkIsolation) {
        this.enableNetworkIsolation = enableNetworkIsolation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public java.util.Map<String, String> environment;

    public HyperParameterTrainingJobDefinition withEnvironment(java.util.Map<String, String> environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * &lt;p&gt;Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The maximum number of items specified for &lt;code&gt;Array Members&lt;/code&gt; refers to the maximum number of hyperparameters for each range and also the maximum for the hyperparameter tuning job itself. That is, the sum of the number of hyperparameters for all the ranges can't exceed the maximum number specified.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterRanges")
    public ParameterRanges hyperParameterRanges;

    public HyperParameterTrainingJobDefinition withHyperParameterRanges(ParameterRanges hyperParameterRanges) {
        this.hyperParameterRanges = hyperParameterRanges;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterTuningResourceConfig")
    public HyperParameterTuningResourceConfig hyperParameterTuningResourceConfig;

    public HyperParameterTrainingJobDefinition withHyperParameterTuningResourceConfig(HyperParameterTuningResourceConfig hyperParameterTuningResourceConfig) {
        this.hyperParameterTuningResourceConfig = hyperParameterTuningResourceConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputDataConfig")
    public Channel[] inputDataConfig;

    public HyperParameterTrainingJobDefinition withInputDataConfig(Channel[] inputDataConfig) {
        this.inputDataConfig = inputDataConfig;
        return this;
    }
    
    @JsonProperty("OutputDataConfig")
    public OutputDataConfig outputDataConfig;

    public HyperParameterTrainingJobDefinition withOutputDataConfig(OutputDataConfig outputDataConfig) {
        this.outputDataConfig = outputDataConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceConfig")
    public ResourceConfig resourceConfig;

    public HyperParameterTrainingJobDefinition withResourceConfig(ResourceConfig resourceConfig) {
        this.resourceConfig = resourceConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RetryStrategy")
    public RetryStrategy retryStrategy;

    public HyperParameterTrainingJobDefinition withRetryStrategy(RetryStrategy retryStrategy) {
        this.retryStrategy = retryStrategy;
        return this;
    }
    
    @JsonProperty("RoleArn")
    public String roleArn;

    public HyperParameterTrainingJobDefinition withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StaticHyperParameters")
    public java.util.Map<String, String> staticHyperParameters;

    public HyperParameterTrainingJobDefinition withStaticHyperParameters(java.util.Map<String, String> staticHyperParameters) {
        this.staticHyperParameters = staticHyperParameters;
        return this;
    }
    
    @JsonProperty("StoppingCondition")
    public StoppingCondition stoppingCondition;

    public HyperParameterTrainingJobDefinition withStoppingCondition(StoppingCondition stoppingCondition) {
        this.stoppingCondition = stoppingCondition;
        return this;
    }
    
    /**
     * Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the &lt;code&gt;Type&lt;/code&gt; parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TuningObjective")
    public HyperParameterTuningJobObjective tuningObjective;

    public HyperParameterTrainingJobDefinition withTuningObjective(HyperParameterTuningJobObjective tuningObjective) {
        this.tuningObjective = tuningObjective;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfig")
    public VpcConfig vpcConfig;

    public HyperParameterTrainingJobDefinition withVpcConfig(VpcConfig vpcConfig) {
        this.vpcConfig = vpcConfig;
        return this;
    }
    
    public HyperParameterTrainingJobDefinition(@JsonProperty("AlgorithmSpecification") HyperParameterAlgorithmSpecification algorithmSpecification, @JsonProperty("OutputDataConfig") OutputDataConfig outputDataConfig, @JsonProperty("RoleArn") String roleArn, @JsonProperty("StoppingCondition") StoppingCondition stoppingCondition) {
        this.algorithmSpecification = algorithmSpecification;
        this.outputDataConfig = outputDataConfig;
        this.roleArn = roleArn;
        this.stoppingCondition = stoppingCondition;
  }
}
