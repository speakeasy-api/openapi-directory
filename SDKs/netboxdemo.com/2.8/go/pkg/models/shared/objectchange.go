// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ObjectChangeActionLabelEnum string

const (
	ObjectChangeActionLabelEnumCreated ObjectChangeActionLabelEnum = "Created"
	ObjectChangeActionLabelEnumUpdated ObjectChangeActionLabelEnum = "Updated"
	ObjectChangeActionLabelEnumDeleted ObjectChangeActionLabelEnum = "Deleted"
)

func (e *ObjectChangeActionLabelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Created":
		fallthrough
	case "Updated":
		fallthrough
	case "Deleted":
		*e = ObjectChangeActionLabelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ObjectChangeActionLabelEnum: %s", s)
	}
}

type ObjectChangeActionValueEnum string

const (
	ObjectChangeActionValueEnumCreate ObjectChangeActionValueEnum = "create"
	ObjectChangeActionValueEnumUpdate ObjectChangeActionValueEnum = "update"
	ObjectChangeActionValueEnumDelete ObjectChangeActionValueEnum = "delete"
)

func (e *ObjectChangeActionValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "create":
		fallthrough
	case "update":
		fallthrough
	case "delete":
		*e = ObjectChangeActionValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ObjectChangeActionValueEnum: %s", s)
	}
}

type ObjectChangeAction struct {
	Label ObjectChangeActionLabelEnum `json:"label"`
	Value ObjectChangeActionValueEnum `json:"value"`
}

type ObjectChange struct {
	Action *ObjectChangeAction `json:"action,omitempty"`
	// Serialize a nested representation of the changed object.
	//
	ChangedObject     map[string]string `json:"changed_object,omitempty"`
	ChangedObjectID   int64             `json:"changed_object_id"`
	ChangedObjectType *string           `json:"changed_object_type,omitempty"`
	ID                *int64            `json:"id,omitempty"`
	ObjectData        *string           `json:"object_data,omitempty"`
	RequestID         *string           `json:"request_id,omitempty"`
	Time              *time.Time        `json:"time,omitempty"`
	User              *NestedUser       `json:"user,omitempty"`
	UserName          *string           `json:"user_name,omitempty"`
}
