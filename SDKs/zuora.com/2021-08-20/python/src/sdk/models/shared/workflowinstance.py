"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class WorkflowInstanceStatusEnum(str, Enum):
    r"""Describes the current state of this workflow instance:
      - Queued: The workflow is in queue for being processed.
      - Processing: The workflow is in process.
    """
    QUEUED = 'Queued'
    PROCESSING = 'Processing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkflowInstance:
    r"""A instance workflow object."""
    
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'exclude': lambda f: f is None }})
    r"""The date and time when the workflow is created, in the `YYYY-MM-DD HH:MM:SS` format."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the workflow."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The run number of this workflow instance"""  
    original_workflow_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originalWorkflowId'), 'exclude': lambda f: f is None }})
    r"""The identifier of the workflow template that is used to create this instance."""  
    status: Optional[WorkflowInstanceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Describes the current state of this workflow instance:
      - Queued: The workflow is in queue for being processed.
      - Processing: The workflow is in process.
    """  
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt'), 'exclude': lambda f: f is None }})
    r"""The date and time the last time when the workflow is updated, in the `YYYY-MM-DD HH:MM:SS` format."""  
    