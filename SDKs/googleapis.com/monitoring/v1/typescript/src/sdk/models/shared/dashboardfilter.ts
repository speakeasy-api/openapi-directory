/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The specified filter type
 */
export enum DashboardFilterFilterTypeEnum {
  FilterTypeUnspecified = "FILTER_TYPE_UNSPECIFIED",
  ResourceLabel = "RESOURCE_LABEL",
  MetricLabel = "METRIC_LABEL",
  UserMetadataLabel = "USER_METADATA_LABEL",
  SystemMetadataLabel = "SYSTEM_METADATA_LABEL",
  Group = "GROUP",
}

/**
 * A filter to reduce the amount of data charted in relevant widgets.
 */
export class DashboardFilter extends SpeakeasyBase {
  /**
   * The specified filter type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterType" })
  filterType?: DashboardFilterFilterTypeEnum;

  /**
   * Required. The key for the label
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labelKey" })
  labelKey?: string;

  /**
   * A variable-length string value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;

  /**
   * The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "templateVariable" })
  templateVariable?: string;
}
