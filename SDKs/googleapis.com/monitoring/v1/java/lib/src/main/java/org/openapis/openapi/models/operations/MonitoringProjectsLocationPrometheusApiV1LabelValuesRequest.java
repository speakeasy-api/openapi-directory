/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end")
    public String end;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withEnd(String end) {
        this.end = end;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The label name for which values are queried.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=label")
    public String label;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Location of the resource information. Has to be "global" now.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=location")
    public String location;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * A list of matchers encoded in the Prometheus label matcher format to constrain the values to series that satisfy them.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=match")
    public String match;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withMatch(String match) {
        this.match = match;
        return this;
    }
    
    /**
     * The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=name")
    public String name;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start")
    public String start;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withStart(String start) {
        this.start = start;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;
    public MonitoringProjectsLocationPrometheusApiV1LabelValuesRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
}
