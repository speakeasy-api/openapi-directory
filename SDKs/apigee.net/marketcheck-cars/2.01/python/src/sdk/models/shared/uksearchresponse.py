"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import carsearchrangefacets as shared_carsearchrangefacets
from ..shared import carsearchstats as shared_carsearchstats
from ..shared import ukbaselisting as shared_ukbaselisting
from ..shared import ukcarsearchfacets as shared_ukcarsearchfacets
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UKSearchResponse:
    r"""Search query response"""
    
    facets: Optional[shared_ukcarsearchfacets.UKCarSearchFacets] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facets'), 'exclude': lambda f: f is None }})  
    listings: Optional[list[shared_ukbaselisting.UKBaseListing]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listings'), 'exclude': lambda f: f is None }})  
    num_found: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num_found'), 'exclude': lambda f: f is None }})
    r"""The number of listings found"""  
    range_facets: Optional[shared_carsearchrangefacets.CarSearchRangeFacets] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('range_facets'), 'exclude': lambda f: f is None }})  
    stats: Optional[shared_carsearchstats.CarSearchStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats'), 'exclude': lambda f: f is None }})  
    