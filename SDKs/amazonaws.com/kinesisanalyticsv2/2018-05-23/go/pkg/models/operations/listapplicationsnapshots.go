// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListApplicationSnapshotsXAmzTargetEnum
type ListApplicationSnapshotsXAmzTargetEnum string

const (
	ListApplicationSnapshotsXAmzTargetEnumKinesisAnalytics20180523ListApplicationSnapshots ListApplicationSnapshotsXAmzTargetEnum = "KinesisAnalytics_20180523.ListApplicationSnapshots"
)

func (e *ListApplicationSnapshotsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KinesisAnalytics_20180523.ListApplicationSnapshots":
		*e = ListApplicationSnapshotsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListApplicationSnapshotsXAmzTargetEnum: %s", s)
	}
}

type ListApplicationSnapshotsRequest struct {
	ListApplicationSnapshotsRequest shared.ListApplicationSnapshotsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      ListApplicationSnapshotsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListApplicationSnapshotsResponse struct {
	ContentType string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// Success
	ListApplicationSnapshotsResponse *shared.ListApplicationSnapshotsResponse
	StatusCode                       int
	RawResponse                      *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
