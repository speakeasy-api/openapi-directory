"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PaymentOptionsCashExceptionEnum(str, Enum):
    r"""Cash exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PaymentOptionsChequeExceptionEnum(str, Enum):
    r"""Cheque exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PaymentOptionsCreditCardExceptionEnum(str, Enum):
    r"""Credit card exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PaymentOptionsDebitCardExceptionEnum(str, Enum):
    r"""Debit card exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PaymentOptionsMobileNfcExceptionEnum(str, Enum):
    r"""Mobile nfc exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentOptions:
    r"""Forms of payment accepted at the property."""
    
    cash: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cash'), 'exclude': lambda f: f is None }})
    r"""Cash. The hotel accepts payment by paper/coin currency."""  
    cash_exception: Optional[PaymentOptionsCashExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cashException'), 'exclude': lambda f: f is None }})
    r"""Cash exception."""  
    cheque: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cheque'), 'exclude': lambda f: f is None }})
    r"""Cheque. The hotel accepts a printed document issued by the guest's bank in the guest's name as a form of payment."""  
    cheque_exception: Optional[PaymentOptionsChequeExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chequeException'), 'exclude': lambda f: f is None }})
    r"""Cheque exception."""  
    credit_card: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditCard'), 'exclude': lambda f: f is None }})
    r"""Credit card. The hotel accepts payment by a card issued by a bank or credit card company. Also known as charge card, debit card, bank card, or charge plate."""  
    credit_card_exception: Optional[PaymentOptionsCreditCardExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditCardException'), 'exclude': lambda f: f is None }})
    r"""Credit card exception."""  
    debit_card: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debitCard'), 'exclude': lambda f: f is None }})
    r"""Debit card. The hotel accepts a bank-issued card that immediately deducts the charged funds from the guest's bank account upon processing."""  
    debit_card_exception: Optional[PaymentOptionsDebitCardExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debitCardException'), 'exclude': lambda f: f is None }})
    r"""Debit card exception."""  
    mobile_nfc: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobileNfc'), 'exclude': lambda f: f is None }})
    r"""Mobile nfc. The hotel has the compatible computer hardware terminal that reads and charges a payment app on the guest's smartphone without requiring the two devices to make physical contact. Also known as Apple Pay, Google Pay, Samsung Pay."""  
    mobile_nfc_exception: Optional[PaymentOptionsMobileNfcExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobileNfcException'), 'exclude': lambda f: f is None }})
    r"""Mobile nfc exception."""  
    