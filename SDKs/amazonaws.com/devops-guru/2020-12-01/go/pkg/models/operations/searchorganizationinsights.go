// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// SearchOrganizationInsightsRequestBodyFilters -  Filters you can use to specify which events are returned when <code>ListEvents</code> is called.
type SearchOrganizationInsightsRequestBodyFilters struct {
	//  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks.
	ResourceCollection *shared.ResourceCollection `json:"ResourceCollection,omitempty"`
	// A collection of the names of Amazon Web Services services.
	ServiceCollection *shared.ServiceCollection    `json:"ServiceCollection,omitempty"`
	Severities        []shared.InsightSeverityEnum `json:"Severities,omitempty"`
	Statuses          []shared.InsightStatusEnum   `json:"Statuses,omitempty"`
}

// SearchOrganizationInsightsRequestBodyStartTimeRange -  A time range used to specify when the behavior of an insight or anomaly started.
type SearchOrganizationInsightsRequestBodyStartTimeRange struct {
	FromTime *time.Time `json:"FromTime,omitempty"`
	ToTime   *time.Time `json:"ToTime,omitempty"`
}

// SearchOrganizationInsightsRequestBodyTypeEnum -  The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>).
type SearchOrganizationInsightsRequestBodyTypeEnum string

const (
	SearchOrganizationInsightsRequestBodyTypeEnumReactive  SearchOrganizationInsightsRequestBodyTypeEnum = "REACTIVE"
	SearchOrganizationInsightsRequestBodyTypeEnumProactive SearchOrganizationInsightsRequestBodyTypeEnum = "PROACTIVE"
)

func (e *SearchOrganizationInsightsRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REACTIVE":
		fallthrough
	case "PROACTIVE":
		*e = SearchOrganizationInsightsRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchOrganizationInsightsRequestBodyTypeEnum: %s", s)
	}
}

type SearchOrganizationInsightsRequestBody struct {
	// The ID of the Amazon Web Services account.
	AccountIds []string `json:"AccountIds"`
	//  Filters you can use to specify which events are returned when <code>ListEvents</code> is called.
	Filters *SearchOrganizationInsightsRequestBodyFilters `json:"Filters,omitempty"`
	// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
	NextToken *string `json:"NextToken,omitempty"`
	//  A time range used to specify when the behavior of an insight or anomaly started.
	StartTimeRange SearchOrganizationInsightsRequestBodyStartTimeRange `json:"StartTimeRange"`
	//  The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>).
	Type SearchOrganizationInsightsRequestBodyTypeEnum `json:"Type"`
}

type SearchOrganizationInsightsRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                               `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       SearchOrganizationInsightsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type SearchOrganizationInsightsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	SearchOrganizationInsightsResponse *shared.SearchOrganizationInsightsResponse
	StatusCode                         int
	RawResponse                        *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
