// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETModifyCapacityReservationActionEnum
type GETModifyCapacityReservationActionEnum string

const (
	GETModifyCapacityReservationActionEnumModifyCapacityReservation GETModifyCapacityReservationActionEnum = "ModifyCapacityReservation"
)

func (e *GETModifyCapacityReservationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyCapacityReservation":
		*e = GETModifyCapacityReservationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCapacityReservationActionEnum: %s", s)
	}
}

// GETModifyCapacityReservationEndDateTypeEnum - <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>.</p> </li> </ul>
type GETModifyCapacityReservationEndDateTypeEnum string

const (
	GETModifyCapacityReservationEndDateTypeEnumUnlimited GETModifyCapacityReservationEndDateTypeEnum = "unlimited"
	GETModifyCapacityReservationEndDateTypeEnumLimited   GETModifyCapacityReservationEndDateTypeEnum = "limited"
)

func (e *GETModifyCapacityReservationEndDateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unlimited":
		fallthrough
	case "limited":
		*e = GETModifyCapacityReservationEndDateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCapacityReservationEndDateTypeEnum: %s", s)
	}
}

// GETModifyCapacityReservationVersionEnum
type GETModifyCapacityReservationVersionEnum string

const (
	GETModifyCapacityReservationVersionEnumTwoThousandAndSixteen1115 GETModifyCapacityReservationVersionEnum = "2016-11-15"
)

func (e *GETModifyCapacityReservationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETModifyCapacityReservationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCapacityReservationVersionEnum: %s", s)
	}
}

type GETModifyCapacityReservationRequest struct {
	// Reserved. Capacity Reservations you have created are accepted by default.
	Accept *bool                                  `queryParam:"style=form,explode=true,name=Accept"`
	Action GETModifyCapacityReservationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Reserved for future use.
	AdditionalInfo *string `queryParam:"style=form,explode=true,name=AdditionalInfo"`
	// The ID of the Capacity Reservation.
	CapacityReservationID string `queryParam:"style=form,explode=true,name=CapacityReservationId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// <p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to <code>expired</code> when it reaches its end date and time.</p> <p>The Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p> <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</p>
	EndDate *time.Time `queryParam:"style=form,explode=true,name=EndDate"`
	// <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>.</p> </li> </ul>
	EndDateType *GETModifyCapacityReservationEndDateTypeEnum `queryParam:"style=form,explode=true,name=EndDateType"`
	// The number of instances for which to reserve capacity. The number of instances can't be increased or decreased by more than <code>1000</code> in a single request.
	InstanceCount     *int64                                  `queryParam:"style=form,explode=true,name=InstanceCount"`
	Version           GETModifyCapacityReservationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyCapacityReservationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
