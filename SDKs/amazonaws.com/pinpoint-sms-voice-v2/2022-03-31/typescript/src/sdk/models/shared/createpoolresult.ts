/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MessageTypeEnum } from "./messagetypeenum";
import { PoolStatusEnum } from "./poolstatusenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class CreatePoolResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeletionProtectionEnabled" })
  deletionProtectionEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MessageType" })
  messageType?: MessageTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OptOutListName" })
  optOutListName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PoolArn" })
  poolArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PoolId" })
  poolId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SelfManagedOptOutsEnabled" })
  selfManagedOptOutsEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "SharedRoutesEnabled" })
  sharedRoutesEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: PoolStatusEnum;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TwoWayChannelArn" })
  twoWayChannelArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TwoWayEnabled" })
  twoWayEnabled?: boolean;
}
