// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type KeyStorageSecurityStandardEnum string

const (
	KeyStorageSecurityStandardEnumFips1402Level2OrHigher KeyStorageSecurityStandardEnum = "FIPS_140_2_LEVEL_2_OR_HIGHER"
	KeyStorageSecurityStandardEnumFips1402Level3OrHigher KeyStorageSecurityStandardEnum = "FIPS_140_2_LEVEL_3_OR_HIGHER"
)

func (e KeyStorageSecurityStandardEnum) ToPointer() *KeyStorageSecurityStandardEnum {
	return &e
}

func (e *KeyStorageSecurityStandardEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FIPS_140_2_LEVEL_2_OR_HIGHER":
		fallthrough
	case "FIPS_140_2_LEVEL_3_OR_HIGHER":
		*e = KeyStorageSecurityStandardEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyStorageSecurityStandardEnum: %v", v)
	}
}
