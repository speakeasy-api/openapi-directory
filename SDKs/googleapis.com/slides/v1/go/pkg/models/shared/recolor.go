// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecolorNameEnum - The name of the recolor effect. The name is determined from the `recolor_stops` by matching the gradient against the colors in the page's current color scheme. This property is read-only.
type RecolorNameEnum string

const (
	RecolorNameEnumNone      RecolorNameEnum = "NONE"
	RecolorNameEnumLight1    RecolorNameEnum = "LIGHT1"
	RecolorNameEnumLight2    RecolorNameEnum = "LIGHT2"
	RecolorNameEnumLight3    RecolorNameEnum = "LIGHT3"
	RecolorNameEnumLight4    RecolorNameEnum = "LIGHT4"
	RecolorNameEnumLight5    RecolorNameEnum = "LIGHT5"
	RecolorNameEnumLight6    RecolorNameEnum = "LIGHT6"
	RecolorNameEnumLight7    RecolorNameEnum = "LIGHT7"
	RecolorNameEnumLight8    RecolorNameEnum = "LIGHT8"
	RecolorNameEnumLight9    RecolorNameEnum = "LIGHT9"
	RecolorNameEnumLight10   RecolorNameEnum = "LIGHT10"
	RecolorNameEnumDark1     RecolorNameEnum = "DARK1"
	RecolorNameEnumDark2     RecolorNameEnum = "DARK2"
	RecolorNameEnumDark3     RecolorNameEnum = "DARK3"
	RecolorNameEnumDark4     RecolorNameEnum = "DARK4"
	RecolorNameEnumDark5     RecolorNameEnum = "DARK5"
	RecolorNameEnumDark6     RecolorNameEnum = "DARK6"
	RecolorNameEnumDark7     RecolorNameEnum = "DARK7"
	RecolorNameEnumDark8     RecolorNameEnum = "DARK8"
	RecolorNameEnumDark9     RecolorNameEnum = "DARK9"
	RecolorNameEnumDark10    RecolorNameEnum = "DARK10"
	RecolorNameEnumGrayscale RecolorNameEnum = "GRAYSCALE"
	RecolorNameEnumNegative  RecolorNameEnum = "NEGATIVE"
	RecolorNameEnumSepia     RecolorNameEnum = "SEPIA"
	RecolorNameEnumCustom    RecolorNameEnum = "CUSTOM"
)

func (e RecolorNameEnum) ToPointer() *RecolorNameEnum {
	return &e
}

func (e *RecolorNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "LIGHT1":
		fallthrough
	case "LIGHT2":
		fallthrough
	case "LIGHT3":
		fallthrough
	case "LIGHT4":
		fallthrough
	case "LIGHT5":
		fallthrough
	case "LIGHT6":
		fallthrough
	case "LIGHT7":
		fallthrough
	case "LIGHT8":
		fallthrough
	case "LIGHT9":
		fallthrough
	case "LIGHT10":
		fallthrough
	case "DARK1":
		fallthrough
	case "DARK2":
		fallthrough
	case "DARK3":
		fallthrough
	case "DARK4":
		fallthrough
	case "DARK5":
		fallthrough
	case "DARK6":
		fallthrough
	case "DARK7":
		fallthrough
	case "DARK8":
		fallthrough
	case "DARK9":
		fallthrough
	case "DARK10":
		fallthrough
	case "GRAYSCALE":
		fallthrough
	case "NEGATIVE":
		fallthrough
	case "SEPIA":
		fallthrough
	case "CUSTOM":
		*e = RecolorNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecolorNameEnum: %v", v)
	}
}

// Recolor - A recolor effect applied on an image.
type Recolor struct {
	// The name of the recolor effect. The name is determined from the `recolor_stops` by matching the gradient against the colors in the page's current color scheme. This property is read-only.
	Name *RecolorNameEnum `json:"name,omitempty"`
	// The recolor effect is represented by a gradient, which is a list of color stops. The colors in the gradient will replace the corresponding colors at the same position in the color palette and apply to the image. This property is read-only.
	RecolorStops []ColorStop `json:"recolorStops,omitempty"`
}
