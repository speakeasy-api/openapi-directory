/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PUTSpecificDateAllocationType - Container for custom fields of a Revenue Event object.
 * 
 */
public class PUTSpecificDateAllocationType {
    /**
     * The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public String amount;
    public PUTSpecificDateAllocationType withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The recognition date on which to distribute revenue for milestone-based recognition.
     * 
     * Type: date in `yyyy-mm-dd` format.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("distributeOn")
    public LocalDate distributeOn;
    public PUTSpecificDateAllocationType withDistributeOn(LocalDate distributeOn) {
        this.distributeOn = distributeOn;
        return this;
    }
    
    /**
     * How to distribute the revenue for milestone-based recognition. 
     */
    @JsonProperty("distributionType")
    public PUTSpecificDateAllocationTypeDistributionTypeEnum distributionType;
    public PUTSpecificDateAllocationType withDistributionType(PUTSpecificDateAllocationTypeDistributionTypeEnum distributionType) {
        this.distributionType = distributionType;
        return this;
    }
    
    /**
     * Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings &gt; Finance &gt; Configure Revenue Event Types** in the Zuora UI.
     * 
     * Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public PUTSpecificDateAllocationTypeEventTypeEnum eventType;
    public PUTSpecificDateAllocationType withEventType(PUTSpecificDateAllocationTypeEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings &gt; Finance &gt; Configure Revenue Event Types** in the Zuora UI.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypeSystemId")
    public String eventTypeSystemId;
    public PUTSpecificDateAllocationType withEventTypeSystemId(String eventTypeSystemId) {
        this.eventTypeSystemId = eventTypeSystemId;
        return this;
    }
    
    /**
     * Additional information about this record.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public PUTSpecificDateAllocationType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Percentage of the total recognition amount or total undistributed to distribute.
     * 
     * Required if distributionType is either:
     * * specific date (delta percent total)
     * * specific date (delta percent undistributed)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentage")
    public String percentage;
    public PUTSpecificDateAllocationType withPercentage(String percentage) {
        this.percentage = percentage;
        return this;
    }
    
}
