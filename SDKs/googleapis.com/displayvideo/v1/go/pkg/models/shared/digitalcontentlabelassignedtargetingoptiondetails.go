// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum - Output only. The display name of the digital content label rating tier.
type DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum string

const (
	DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnumContentRatingTierUnspecified      DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum = "CONTENT_RATING_TIER_UNSPECIFIED"
	DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnumContentRatingTierUnrated          DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum = "CONTENT_RATING_TIER_UNRATED"
	DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnumContentRatingTierGeneral          DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum = "CONTENT_RATING_TIER_GENERAL"
	DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnumContentRatingTierParentalGuidance DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum = "CONTENT_RATING_TIER_PARENTAL_GUIDANCE"
	DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnumContentRatingTierTeens            DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum = "CONTENT_RATING_TIER_TEENS"
	DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnumContentRatingTierMature           DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum = "CONTENT_RATING_TIER_MATURE"
)

func (e *DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONTENT_RATING_TIER_UNSPECIFIED":
		fallthrough
	case "CONTENT_RATING_TIER_UNRATED":
		fallthrough
	case "CONTENT_RATING_TIER_GENERAL":
		fallthrough
	case "CONTENT_RATING_TIER_PARENTAL_GUIDANCE":
		fallthrough
	case "CONTENT_RATING_TIER_TEENS":
		fallthrough
	case "CONTENT_RATING_TIER_MATURE":
		*e = DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum: %s", s)
	}
}

// DigitalContentLabelAssignedTargetingOptionDetails - Targeting details for digital content label. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.
type DigitalContentLabelAssignedTargetingOptionDetails struct {
	// Output only. The display name of the digital content label rating tier.
	ContentRatingTier *DigitalContentLabelAssignedTargetingOptionDetailsContentRatingTierEnum `json:"contentRatingTier,omitempty"`
	// Required. ID of the digital content label to be EXCLUDED.
	ExcludedTargetingOptionID *string `json:"excludedTargetingOptionId,omitempty"`
}

// DigitalContentLabelAssignedTargetingOptionDetailsInput - Targeting details for digital content label. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.
type DigitalContentLabelAssignedTargetingOptionDetailsInput struct {
	// Required. ID of the digital content label to be EXCLUDED.
	ExcludedTargetingOptionID *string `json:"excludedTargetingOptionId,omitempty"`
}
