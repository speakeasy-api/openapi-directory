// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type MerchantCancellationHeaders struct {
	// Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
	//
	AcceptLanguage string `header:"style=simple,explode=false,name=Accept-Language"`
}

type MerchantCancellationRequestBodyCancelItems struct {
	// **cancellation code** that describes the reason for the cancellation
	// - see: [Suggested cancellation codes](#suggested-cancellation-codes)
	//
	CancelCode *string `json:"cancelCode,omitempty"`
	// **natural-language description** of the reason for cancellation (a reason must be provided if `cancelCode` is `62` or `66`)
	CancelDescription *string `json:"cancelDescription,omitempty"`
	// **alphanumeric reference code** of the distributor item
	DistributorItemRef *string `json:"distributorItemRef,omitempty"`
	// **numeric identifier** of item to cancel in itinerary
	ItemID *int64 `json:"itemId,omitempty"`
}

type MerchantCancellationRequestBody struct {
	// **array** of objects detailing itinerary items to cancel
	CancelItems []MerchantCancellationRequestBodyCancelItems `json:"cancelItems,omitempty"`
	// **itinerary reference identifier** (partner defined) for the booking to cancel
	DistributorRef *string `json:"distributorRef,omitempty"`
	// **numeric identifier** for the itinerary
	ItineraryID *int64 `json:"itineraryId,omitempty"`
}

type MerchantCancellationRequest struct {
	Headers MerchantCancellationHeaders
	Request *MerchantCancellationRequestBody `request:"mediaType=application/json"`
}

type MerchantCancellation400ApplicationJSONData struct {
	// **natural-language description** for this response (see response codes table)
	CancellationResponseDescription *string `json:"cancellationResponseDescription,omitempty"`
	// **status code** for this response (see response codes table)
	CancellationResponseStatusCode *string `json:"cancellationResponseStatusCode,omitempty"`
	// **alphanumeric reference code** of the distributor item
	DistributorItemRef *string `json:"distributorItemRef,omitempty"`
	// **identifier** for the item to cancel
	ItemID *string `json:"itemId,omitempty"`
}

// MerchantCancellation400ApplicationJSON - Error
type MerchantCancellation400ApplicationJSON struct {
	Data *MerchantCancellation400ApplicationJSONData `json:"data,omitempty"`
	// **timestamp** of *this* response
	DateStamp *string `json:"dateStamp,omitempty"`
	// **array** of error codes pertaining to *this* error
	// - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
	//
	ErrorCodes []string `json:"errorCodes,omitempty"`
	// **array** of error message strings
	ErrorMessage []interface{} `json:"errorMessage,omitempty"`
	// **array** of error message strings in plain text
	ErrorMessageText *string `json:"errorMessageText,omitempty"`
	// **name** of *this* type of error
	ErrorName *string `json:"errorName,omitempty"`
	// **reference number** of *this* error
	ErrorReference *string `json:"errorReference,omitempty"`
	// **code** specifying the type of error
	ErrorType *string `json:"errorType,omitempty"`
	// ignore (Viator only)
	ExtraInfo map[string]interface{} `json:"extraInfo,omitempty"`
	// ignore (Viator only)
	ExtraObject map[string]interface{} `json:"extraObject,omitempty"`
	// **boolean indicator** of *this* request's outcome
	// - `true`: the request was successful with no errors
	// - `false`: an error was encountered
	//
	Success *bool `json:"success,omitempty"`
	// **number** of results available for *this* service
	//
	TotalCount *int64 `json:"totalCount,omitempty"`
	// **unique numeric id** of the server that processed *this* request
	Vmid *string `json:"vmid,omitempty"`
}

type MerchantCancellation200ApplicationJSONDataCancelItems struct {
	// See Response codes table
	CancellationResponseDescription *string `json:"cancellationResponseDescription,omitempty"`
	// See [cancellation response codes table](#cancellation-response-status-codes-and-their-meanings)
	CancellationResponseStatusCode *string `json:"cancellationResponseStatusCode,omitempty"`
	// **alphanumeric reference code** of the distributor item
	DistributorItemRef *string `json:"distributorItemRef,omitempty"`
	// **numeric identifier** of the item to cancel
	ItemID *string `json:"itemId,omitempty"`
}

type MerchantCancellation200ApplicationJSONData struct {
	// **array** of items to be cancelled
	CancelItems []MerchantCancellation200ApplicationJSONDataCancelItems `json:"cancelItems,omitempty"`
	// **reference code** for the distributor
	DistributorRef *string `json:"distributorRef,omitempty"`
	// **numeric** identifier for the itinerary
	ItineraryID *int64 `json:"itineraryId,omitempty"`
}

// MerchantCancellation200ApplicationJSON - Success
type MerchantCancellation200ApplicationJSON struct {
	Data *MerchantCancellation200ApplicationJSONData `json:"data,omitempty"`
	// **timestamp** of *this* response
	DateStamp *string `json:"dateStamp,omitempty"`
	// **array** of error codes pertaining to *this* error
	// - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
	//
	ErrorCodes []string `json:"errorCodes,omitempty"`
	// **array** of error message strings
	ErrorMessage []interface{} `json:"errorMessage,omitempty"`
	// **array** of error message strings in plain text
	ErrorMessageText *string `json:"errorMessageText,omitempty"`
	// **name** of *this* type of error
	ErrorName *string `json:"errorName,omitempty"`
	// **reference number** of *this* error
	ErrorReference *string `json:"errorReference,omitempty"`
	// **code** specifying the type of error
	ErrorType *string `json:"errorType,omitempty"`
	// ignore (Viator only)
	ExtraInfo map[string]interface{} `json:"extraInfo,omitempty"`
	// ignore (Viator only)
	ExtraObject map[string]interface{} `json:"extraObject,omitempty"`
	// **boolean indicator** of *this* request's outcome
	// - `true`: the request was successful with no errors
	// - `false`: an error was encountered
	//
	Success *bool `json:"success,omitempty"`
	// **number** of results available for *this* service
	//
	TotalCount *int64 `json:"totalCount,omitempty"`
	// **unique numeric id** of the server that processed *this* request
	Vmid *string `json:"vmid,omitempty"`
}

type MerchantCancellationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	MerchantCancellation200ApplicationJSONObject *MerchantCancellation200ApplicationJSON
	// Error
	MerchantCancellation400ApplicationJSONObject *MerchantCancellation400ApplicationJSON
}
