"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import legacy_error as shared_legacy_error
from ..shared import video as shared_video
from enum import Enum
from typing import Optional

class SearchVideosDirectionEnum(str, Enum):
    r"""The sort direction of the results."""
    ASC = 'asc'
    DESC = 'desc'

class SearchVideosFilterEnum(str, Enum):
    r"""The attribute by which to filter the results. `CC` and related filters target videos with the corresponding Creative Commons licenses. For more information, see our [Creative Commons](https://vimeo.com/creativecommons) page."""
    CC = 'CC'
    CC_BY = 'CC-BY'
    CC_BY_NC = 'CC-BY-NC'
    CC_BY_NC_ND = 'CC-BY-NC-ND'
    CC_BY_NC_SA = 'CC-BY-NC-SA'
    CC_BY_ND = 'CC-BY-ND'
    CC_BY_SA = 'CC-BY-SA'
    CC0 = 'CC0'
    CATEGORIES = 'categories'
    DURATION = 'duration'
    IN_PROGRESS = 'in-progress'
    MINIMUM_LIKES = 'minimum_likes'
    TRENDING = 'trending'
    UPLOAD_DATE = 'upload_date'

class SearchVideosSortEnum(str, Enum):
    r"""The way to sort the results."""
    ALPHABETICAL = 'alphabetical'
    COMMENTS = 'comments'
    DATE = 'date'
    DURATION = 'duration'
    LIKES = 'likes'
    PLAYS = 'plays'
    RELEVANT = 'relevant'


@dataclasses.dataclass
class SearchVideosRequest:
    
    query: str = dataclasses.field(metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""Search query."""  
    direction: Optional[SearchVideosDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""The sort direction of the results."""  
    filter: Optional[SearchVideosFilterEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""The attribute by which to filter the results. `CC` and related filters target videos with the corresponding Creative Commons licenses. For more information, see our [Creative Commons](https://vimeo.com/creativecommons) page."""  
    links: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'links', 'style': 'form', 'explode': True }})
    r"""A comma-separated list of video URLs to find."""  
    page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The page number of the results to show."""  
    per_page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""The number of items to show on each page of results, up to a maximum of 100."""  
    sort: Optional[SearchVideosSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""The way to sort the results."""  
    uris: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uris', 'style': 'form', 'explode': True }})
    r"""The comma-separated list of videos to find."""  
    

@dataclasses.dataclass
class SearchVideosResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""* Error code 2101: Either the `uris` or `links` parameter has filtering or sorting arguments.
    * Error code 2204: There is a problem with the batch request.
    """  
    legacy_error: Optional[shared_legacy_error.LegacyError] = dataclasses.field(default=None)
    r"""* Search is disabled.
    * Error code 7300: There was an internal search error.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    videos: Optional[list[shared_video.Video]] = dataclasses.field(default=None)
    r"""The search results were returned."""  
    