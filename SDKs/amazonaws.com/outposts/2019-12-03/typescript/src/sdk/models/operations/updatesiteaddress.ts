/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  Information about an address.
 */
export class UpdateSiteAddressRequestBodyAddress extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AddressLine1" })
  addressLine1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AddressLine2" })
  addressLine2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AddressLine3" })
  addressLine3?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "City" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContactName" })
  contactName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContactPhoneNumber" })
  contactPhoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CountryCode" })
  countryCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DistrictOrCounty" })
  districtOrCounty?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Municipality" })
  municipality?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PostalCode" })
  postalCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StateOrRegion" })
  stateOrRegion?: string;
}

/**
 *  The type of the address.
 */
export enum UpdateSiteAddressRequestBodyAddressTypeEnum {
  ShippingAddress = "SHIPPING_ADDRESS",
  OperatingAddress = "OPERATING_ADDRESS",
}

export class UpdateSiteAddressRequestBody extends SpeakeasyBase {
  /**
   *  Information about an address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Address" })
  @Type(() => UpdateSiteAddressRequestBodyAddress)
  address: UpdateSiteAddressRequestBodyAddress;

  /**
   *  The type of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AddressType" })
  addressType: UpdateSiteAddressRequestBodyAddressTypeEnum;
}

export class UpdateSiteAddressRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateSiteAddressRequestBody;

  /**
   *  The ID or the Amazon Resource Name (ARN) of the site.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=SiteId",
  })
  siteId: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateSiteAddressResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateSiteAddressOutput?: shared.UpdateSiteAddressOutput;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
