// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BatchStatusEnum - The possible batch status values
type BatchStatusEnum string

const (
	BatchStatusEnumOpen                BatchStatusEnum = "open"
	BatchStatusEnumQueued              BatchStatusEnum = "queued"
	BatchStatusEnumProcessing          BatchStatusEnum = "processing"
	BatchStatusEnumCompleted           BatchStatusEnum = "completed"
	BatchStatusEnumCompletedWithErrors BatchStatusEnum = "completed_with_errors"
	BatchStatusEnumArchived            BatchStatusEnum = "archived"
	BatchStatusEnumNotifying           BatchStatusEnum = "notifying"
	BatchStatusEnumInvalid             BatchStatusEnum = "invalid"
)

func (e BatchStatusEnum) ToPointer() *BatchStatusEnum {
	return &e
}

func (e *BatchStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "open":
		fallthrough
	case "queued":
		fallthrough
	case "processing":
		fallthrough
	case "completed":
		fallthrough
	case "completed_with_errors":
		fallthrough
	case "archived":
		fallthrough
	case "notifying":
		fallthrough
	case "invalid":
		*e = BatchStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchStatusEnum: %v", v)
	}
}
