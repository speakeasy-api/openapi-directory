// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntitlementRelatedEntityTypeEnum - The type of the entity to add this entitlement to
type EntitlementRelatedEntityTypeEnum string

const (
	EntitlementRelatedEntityTypeEnumEvent      EntitlementRelatedEntityTypeEnum = "event"
	EntitlementRelatedEntityTypeEnumVenue      EntitlementRelatedEntityTypeEnum = "venue"
	EntitlementRelatedEntityTypeEnumAttraction EntitlementRelatedEntityTypeEnum = "attraction"
)

func (e EntitlementRelatedEntityTypeEnum) ToPointer() *EntitlementRelatedEntityTypeEnum {
	return &e
}

func (e *EntitlementRelatedEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "event":
		fallthrough
	case "venue":
		fallthrough
	case "attraction":
		*e = EntitlementRelatedEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntitlementRelatedEntityTypeEnum: %v", v)
	}
}

// EntitlementSourceEnum - Source of the extension, where it came from
type EntitlementSourceEnum string

const (
	EntitlementSourceEnumTicketmaster EntitlementSourceEnum = "ticketmaster"
)

func (e EntitlementSourceEnum) ToPointer() *EntitlementSourceEnum {
	return &e
}

func (e *EntitlementSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ticketmaster":
		*e = EntitlementSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntitlementSourceEnum: %v", v)
	}
}

// Entitlement - This class defines an entitlement data on the Publish API
type Entitlement struct {
	// The actual entitlements information to add to the entity
	Data map[string]interface{} `json:"data"`
	// Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided
	RelatedEntityID *string `json:"relatedEntityId,omitempty"`
	// Source
	RelatedEntitySource *Source `json:"relatedEntitySource,omitempty"`
	// The type of the entity to add this entitlement to
	RelatedEntityType EntitlementRelatedEntityTypeEnum `json:"relatedEntityType"`
	// Source of the extension, where it came from
	Source EntitlementSourceEnum `json:"source"`
	// Version of the entitlements. Version is to prevent to override an entitlements with an older one
	VersionNumber *int64 `json:"versionNumber,omitempty"`
}
