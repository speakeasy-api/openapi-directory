"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import v3_resultoutlet as shared_v3_resultoutlet
from ..shared import v3_resultroute as shared_v3_resultroute
from ..shared import v3_resultstop as shared_v3_resultstop
from ..shared import v3_status as shared_v3_status
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3SearchResult:
    r"""Stops, routes and myki ticket outlets that contain the search term (note: stops and routes are ordered by route_type by default)."""
    
    outlets: Optional[list[shared_v3_resultoutlet.V3ResultOutlet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlets'), 'exclude': lambda f: f is None }})
    r"""myki ticket outlets"""  
    routes: Optional[list[shared_v3_resultroute.V3ResultRoute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routes'), 'exclude': lambda f: f is None }})
    r"""Train lines, tram routes, bus routes, regional coach routes, Night Bus routes"""  
    status: Optional[shared_v3_status.V3Status] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    stops: Optional[list[shared_v3_resultstop.V3ResultStop]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stops'), 'exclude': lambda f: f is None }})
    r"""Train stations, tram stops, bus stops, regional coach stops or Night Bus stops"""  
    