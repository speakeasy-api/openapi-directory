/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UrlMapTestHeader } from "./urlmaptestheader";
import { Expose, Type } from "class-transformer";

export class TestFailure extends SpeakeasyBase {
  /**
   * The actual output URL evaluated by a load balancer containing the scheme, host, path and query parameters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actualOutputUrl" })
  actualOutputUrl?: string;

  /**
   * Actual HTTP status code for rule with `urlRedirect` calculated by load balancer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actualRedirectResponseCode" })
  actualRedirectResponseCode?: number;

  /**
   * BackendService or BackendBucket returned by load balancer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actualService" })
  actualService?: string;

  /**
   * The expected output URL evaluated by a load balancer containing the scheme, host, path and query parameters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedOutputUrl" })
  expectedOutputUrl?: string;

  /**
   * Expected HTTP status code for rule with `urlRedirect` calculated by load balancer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedRedirectResponseCode" })
  expectedRedirectResponseCode?: number;

  /**
   * Expected BackendService or BackendBucket resource the given URL should be mapped to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedService" })
  expectedService?: string;

  /**
   * HTTP headers of the request.
   */
  @SpeakeasyMetadata({ elemType: UrlMapTestHeader })
  @Expose({ name: "headers" })
  @Type(() => UrlMapTestHeader)
  headers?: UrlMapTestHeader[];

  /**
   * Host portion of the URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host?: string;

  /**
   * Path portion including query parameters in the URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;
}
