"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeVpcEndpointServicesResultServiceDetailsPayerResponsibilityEnum(str, Enum):
    r"""The payer responsibility."""
    SERVICE_OWNER = 'ServiceOwner'

class DescribeVpcEndpointServicesResultServiceDetailsPrivateDNSNameVerificationStateEnum(str, Enum):
    r"""<p>The verification state of the VPC endpoint service.</p> <p>Consumers of the endpoint service cannot use the private name when the state is not <code>verified</code>.</p>"""
    PENDING_VERIFICATION = 'pendingVerification'
    VERIFIED = 'verified'
    FAILED = 'failed'


@dataclasses.dataclass
class DescribeVpcEndpointServicesResultServiceDetailsPrivateDNSNames:
    r"""Information about the Private DNS name for interface endpoints."""
    
    private_dns_name: Optional[str] = dataclasses.field(default=None)  
    
class DescribeVpcEndpointServicesResultServiceDetailsServiceTypeServiceTypeEnum(str, Enum):
    r"""The type of service."""
    INTERFACE = 'Interface'
    GATEWAY = 'Gateway'
    GATEWAY_LOAD_BALANCER = 'GatewayLoadBalancer'


@dataclasses.dataclass
class DescribeVpcEndpointServicesResultServiceDetailsServiceType:
    r"""Describes the type of service for a VPC endpoint."""
    
    service_type: Optional[DescribeVpcEndpointServicesResultServiceDetailsServiceTypeServiceTypeEnum] = dataclasses.field(default=None)  
    
class DescribeVpcEndpointServicesResultServiceDetailsSupportedIPAddressTypesEnum(str, Enum):
    IPV4 = 'ipv4'
    IPV6 = 'ipv6'


@dataclasses.dataclass
class DescribeVpcEndpointServicesResultServiceDetailsTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeVpcEndpointServicesResultServiceDetails:
    r"""Describes a VPC endpoint service."""
    
    acceptance_required: Optional[bool] = dataclasses.field(default=None)  
    availability_zones: Optional[list[str]] = dataclasses.field(default=None)  
    base_endpoint_dns_names: Optional[list[str]] = dataclasses.field(default=None)  
    manages_vpc_endpoints: Optional[bool] = dataclasses.field(default=None)  
    owner: Optional[str] = dataclasses.field(default=None)  
    payer_responsibility: Optional[DescribeVpcEndpointServicesResultServiceDetailsPayerResponsibilityEnum] = dataclasses.field(default=None)  
    private_dns_name: Optional[str] = dataclasses.field(default=None)  
    private_dns_names: Optional[list[DescribeVpcEndpointServicesResultServiceDetailsPrivateDNSNames]] = dataclasses.field(default=None)  
    private_dns_name_verification_state: Optional[DescribeVpcEndpointServicesResultServiceDetailsPrivateDNSNameVerificationStateEnum] = dataclasses.field(default=None)  
    service_id: Optional[str] = dataclasses.field(default=None)  
    service_name: Optional[str] = dataclasses.field(default=None)  
    service_type: Optional[list[DescribeVpcEndpointServicesResultServiceDetailsServiceType]] = dataclasses.field(default=None)  
    supported_ip_address_types: Optional[list[DescribeVpcEndpointServicesResultServiceDetailsSupportedIPAddressTypesEnum]] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeVpcEndpointServicesResultServiceDetailsTags]] = dataclasses.field(default=None)  
    vpc_endpoint_policy_supported: Optional[bool] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeVpcEndpointServicesResult:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None)  
    service_details: Optional[list[DescribeVpcEndpointServicesResultServiceDetails]] = dataclasses.field(default=None)  
    service_names: Optional[list[str]] = dataclasses.field(default=None)  
    