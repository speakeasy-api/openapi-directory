// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PredictUkCarPriceTransmissionEnum - Transmission on the car
type PredictUkCarPriceTransmissionEnum string

const (
	PredictUkCarPriceTransmissionEnumManual    PredictUkCarPriceTransmissionEnum = "Manual"
	PredictUkCarPriceTransmissionEnumAutomatic PredictUkCarPriceTransmissionEnum = "Automatic"
)

func (e *PredictUkCarPriceTransmissionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Manual":
		fallthrough
	case "Automatic":
		*e = PredictUkCarPriceTransmissionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PredictUkCarPriceTransmissionEnum: %s", s)
	}
}

type PredictUkCarPriceRequest struct {
	// The API Authentication Key. Mandatory with all API calls.
	APIKey *string `queryParam:"style=form,explode=true,name=api_key"`
	// Base exterior color of the car
	BaseExteriorColor *string `queryParam:"style=form,explode=true,name=base_exterior_color"`
	// City mileage of the car
	CityMpg *float64 `queryParam:"style=form,explode=true,name=city_mpg"`
	// Combiined mileage of the car
	CombinedMpg *float64 `queryParam:"style=form,explode=true,name=combined_mpg"`
	// Number of cylinders in the vehicle
	Cylinders *int64 `queryParam:"style=form,explode=true,name=cylinders"`
	// Number of doors in the vehicle
	Doors *int64 `queryParam:"style=form,explode=true,name=doors"`
	// Drivetrain on the car
	Drivetrain *string `queryParam:"style=form,explode=true,name=drivetrain"`
	// Engine Size of the car
	EngineSize *float64 `queryParam:"style=form,explode=true,name=engine_size"`
	// Fuel type of the car
	FuelType *string `queryParam:"style=form,explode=true,name=fuel_type"`
	// Highway mileage
	HighwayMpg *float64 `queryParam:"style=form,explode=true,name=highway_mpg"`
	// Latitude component of the location
	Latitude *float64 `queryParam:"style=form,explode=true,name=latitude"`
	// Longitude component of the location
	Longitude *float64 `queryParam:"style=form,explode=true,name=longitude"`
	// Car's make
	Make *string `queryParam:"style=form,explode=true,name=make"`
	// miles vehicle has driven in total
	Miles *int64 `queryParam:"style=form,explode=true,name=miles"`
	// Car's model
	Model *string `queryParam:"style=form,explode=true,name=model"`
	// Transmission on the car
	Transmission *PredictUkCarPriceTransmissionEnum `queryParam:"style=form,explode=true,name=transmission"`
	// Car's trim
	Trim *string `queryParam:"style=form,explode=true,name=trim"`
	// Predict price for a VRM
	Vrm *string `queryParam:"style=form,explode=true,name=vrm"`
	// Car manufacturing year
	Year *int64 `queryParam:"style=form,explode=true,name=year"`
	// Location zip
	Zip *string `queryParam:"style=form,explode=true,name=zip"`
}

type PredictUkCarPriceResponse struct {
	ContentType string
	// Error
	Error *shared.Error
	// Predicted price of the car along with it's specifications
	PricePrediction *shared.PricePrediction
	StatusCode      int
	RawResponse     *http.Response
}
