/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRecommenderV1beta1InsightRecommendationReference } from "./googlecloudrecommenderv1beta1insightrecommendationreference";
import { GoogleCloudRecommenderV1beta1InsightStateInfo } from "./googlecloudrecommenderv1beta1insightstateinfo";
import { Expose, Type } from "class-transformer";

/**
 * Category being targeted by the insight.
 */
export enum GoogleCloudRecommenderV1beta1InsightCategoryEnum {
  CategoryUnspecified = "CATEGORY_UNSPECIFIED",
  Cost = "COST",
  Security = "SECURITY",
  Performance = "PERFORMANCE",
  Manageability = "MANAGEABILITY",
  Sustainability = "SUSTAINABILITY",
  Reliability = "RELIABILITY",
}

/**
 * Insight's severity.
 */
export enum GoogleCloudRecommenderV1beta1InsightSeverityEnum {
  SeverityUnspecified = "SEVERITY_UNSPECIFIED",
  Low = "LOW",
  Medium = "MEDIUM",
  High = "HIGH",
  Critical = "CRITICAL",
}

/**
 * An insight along with the information used to derive the insight. The insight may have associated recommendations as well.
 */
export class GoogleCloudRecommenderV1beta1Insight extends SpeakeasyBase {
  /**
   * Recommendations derived from this insight.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudRecommenderV1beta1InsightRecommendationReference,
  })
  @Expose({ name: "associatedRecommendations" })
  @Type(() => GoogleCloudRecommenderV1beta1InsightRecommendationReference)
  associatedRecommendations?: GoogleCloudRecommenderV1beta1InsightRecommendationReference[];

  /**
   * Category being targeted by the insight.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: GoogleCloudRecommenderV1beta1InsightCategoryEnum;

  /**
   * A struct of custom fields to explain the insight. Example: "grantedPermissionsCount": "1000"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: Record<string, any>;

  /**
   * Free-form human readable summary in English. The maximum length is 500 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Fingerprint of the Insight. Provides optimistic locking when updating states.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Insight subtype. Insight content schema will be stable for a given subtype.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insightSubtype" })
  insightSubtype?: string;

  /**
   * Timestamp of the latest data used to generate the insight.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastRefreshTime" })
  lastRefreshTime?: string;

  /**
   * Name of the insight.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "observationPeriod" })
  observationPeriod?: string;

  /**
   * Insight's severity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: GoogleCloudRecommenderV1beta1InsightSeverityEnum;

  /**
   * Information related to insight state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateInfo" })
  @Type(() => GoogleCloudRecommenderV1beta1InsightStateInfo)
  stateInfo?: GoogleCloudRecommenderV1beta1InsightStateInfo;

  /**
   * Fully qualified resource names that this insight is targeting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetResources" })
  targetResources?: string[];
}
