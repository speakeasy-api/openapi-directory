"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import automlcandidategenerationconfig as shared_automlcandidategenerationconfig
from ..shared import automldatasplitconfig as shared_automldatasplitconfig
from ..shared import automljobcompletioncriteria as shared_automljobcompletioncriteria
from ..shared import automlmode_enum as shared_automlmode_enum
from ..shared import automlsecurityconfig as shared_automlsecurityconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoMLJobConfig:
    r"""A collection of settings used for an AutoML job."""
    
    candidate_generation_config: Optional[shared_automlcandidategenerationconfig.AutoMLCandidateGenerationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CandidateGenerationConfig'), 'exclude': lambda f: f is None }})  
    completion_criteria: Optional[shared_automljobcompletioncriteria.AutoMLJobCompletionCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompletionCriteria'), 'exclude': lambda f: f is None }})  
    data_split_config: Optional[shared_automldatasplitconfig.AutoMLDataSplitConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSplitConfig'), 'exclude': lambda f: f is None }})  
    mode: Optional[shared_automlmode_enum.AutoMLModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Mode'), 'exclude': lambda f: f is None }})  
    security_config: Optional[shared_automlsecurityconfig.AutoMLSecurityConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityConfig'), 'exclude': lambda f: f is None }})  
    