// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventCodeEnum string

const (
	EventCodeEnumGenericEvent                               EventCodeEnum = "GENERIC_EVENT"
	EventCodeEnumFleetCreated                               EventCodeEnum = "FLEET_CREATED"
	EventCodeEnumFleetDeleted                               EventCodeEnum = "FLEET_DELETED"
	EventCodeEnumFleetScalingEvent                          EventCodeEnum = "FLEET_SCALING_EVENT"
	EventCodeEnumFleetStateDownloading                      EventCodeEnum = "FLEET_STATE_DOWNLOADING"
	EventCodeEnumFleetStateValidating                       EventCodeEnum = "FLEET_STATE_VALIDATING"
	EventCodeEnumFleetStateBuilding                         EventCodeEnum = "FLEET_STATE_BUILDING"
	EventCodeEnumFleetStateActivating                       EventCodeEnum = "FLEET_STATE_ACTIVATING"
	EventCodeEnumFleetStateActive                           EventCodeEnum = "FLEET_STATE_ACTIVE"
	EventCodeEnumFleetStateError                            EventCodeEnum = "FLEET_STATE_ERROR"
	EventCodeEnumFleetInitializationFailed                  EventCodeEnum = "FLEET_INITIALIZATION_FAILED"
	EventCodeEnumFleetBinaryDownloadFailed                  EventCodeEnum = "FLEET_BINARY_DOWNLOAD_FAILED"
	EventCodeEnumFleetValidationLaunchPathNotFound          EventCodeEnum = "FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND"
	EventCodeEnumFleetValidationExecutableRuntimeFailure    EventCodeEnum = "FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE"
	EventCodeEnumFleetValidationTimedOut                    EventCodeEnum = "FLEET_VALIDATION_TIMED_OUT"
	EventCodeEnumFleetActivationFailed                      EventCodeEnum = "FLEET_ACTIVATION_FAILED"
	EventCodeEnumFleetActivationFailedNoInstances           EventCodeEnum = "FLEET_ACTIVATION_FAILED_NO_INSTANCES"
	EventCodeEnumFleetNewGameSessionProtectionPolicyUpdated EventCodeEnum = "FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED"
	EventCodeEnumServerProcessInvalidPath                   EventCodeEnum = "SERVER_PROCESS_INVALID_PATH"
	EventCodeEnumServerProcessSDKInitializationTimeout      EventCodeEnum = "SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT"
	EventCodeEnumServerProcessProcessReadyTimeout           EventCodeEnum = "SERVER_PROCESS_PROCESS_READY_TIMEOUT"
	EventCodeEnumServerProcessCrashed                       EventCodeEnum = "SERVER_PROCESS_CRASHED"
	EventCodeEnumServerProcessTerminatedUnhealthy           EventCodeEnum = "SERVER_PROCESS_TERMINATED_UNHEALTHY"
	EventCodeEnumServerProcessForceTerminated               EventCodeEnum = "SERVER_PROCESS_FORCE_TERMINATED"
	EventCodeEnumServerProcessProcessExitTimeout            EventCodeEnum = "SERVER_PROCESS_PROCESS_EXIT_TIMEOUT"
	EventCodeEnumGameSessionActivationTimeout               EventCodeEnum = "GAME_SESSION_ACTIVATION_TIMEOUT"
	EventCodeEnumFleetCreationExtractingBuild               EventCodeEnum = "FLEET_CREATION_EXTRACTING_BUILD"
	EventCodeEnumFleetCreationRunningInstaller              EventCodeEnum = "FLEET_CREATION_RUNNING_INSTALLER"
	EventCodeEnumFleetCreationValidatingRuntimeConfig       EventCodeEnum = "FLEET_CREATION_VALIDATING_RUNTIME_CONFIG"
	EventCodeEnumFleetVpcPeeringSucceeded                   EventCodeEnum = "FLEET_VPC_PEERING_SUCCEEDED"
	EventCodeEnumFleetVpcPeeringFailed                      EventCodeEnum = "FLEET_VPC_PEERING_FAILED"
	EventCodeEnumFleetVpcPeeringDeleted                     EventCodeEnum = "FLEET_VPC_PEERING_DELETED"
	EventCodeEnumInstanceInterrupted                        EventCodeEnum = "INSTANCE_INTERRUPTED"
	EventCodeEnumInstanceRecycled                           EventCodeEnum = "INSTANCE_RECYCLED"
)

func (e *EventCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GENERIC_EVENT":
		fallthrough
	case "FLEET_CREATED":
		fallthrough
	case "FLEET_DELETED":
		fallthrough
	case "FLEET_SCALING_EVENT":
		fallthrough
	case "FLEET_STATE_DOWNLOADING":
		fallthrough
	case "FLEET_STATE_VALIDATING":
		fallthrough
	case "FLEET_STATE_BUILDING":
		fallthrough
	case "FLEET_STATE_ACTIVATING":
		fallthrough
	case "FLEET_STATE_ACTIVE":
		fallthrough
	case "FLEET_STATE_ERROR":
		fallthrough
	case "FLEET_INITIALIZATION_FAILED":
		fallthrough
	case "FLEET_BINARY_DOWNLOAD_FAILED":
		fallthrough
	case "FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND":
		fallthrough
	case "FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE":
		fallthrough
	case "FLEET_VALIDATION_TIMED_OUT":
		fallthrough
	case "FLEET_ACTIVATION_FAILED":
		fallthrough
	case "FLEET_ACTIVATION_FAILED_NO_INSTANCES":
		fallthrough
	case "FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED":
		fallthrough
	case "SERVER_PROCESS_INVALID_PATH":
		fallthrough
	case "SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT":
		fallthrough
	case "SERVER_PROCESS_PROCESS_READY_TIMEOUT":
		fallthrough
	case "SERVER_PROCESS_CRASHED":
		fallthrough
	case "SERVER_PROCESS_TERMINATED_UNHEALTHY":
		fallthrough
	case "SERVER_PROCESS_FORCE_TERMINATED":
		fallthrough
	case "SERVER_PROCESS_PROCESS_EXIT_TIMEOUT":
		fallthrough
	case "GAME_SESSION_ACTIVATION_TIMEOUT":
		fallthrough
	case "FLEET_CREATION_EXTRACTING_BUILD":
		fallthrough
	case "FLEET_CREATION_RUNNING_INSTALLER":
		fallthrough
	case "FLEET_CREATION_VALIDATING_RUNTIME_CONFIG":
		fallthrough
	case "FLEET_VPC_PEERING_SUCCEEDED":
		fallthrough
	case "FLEET_VPC_PEERING_FAILED":
		fallthrough
	case "FLEET_VPC_PEERING_DELETED":
		fallthrough
	case "INSTANCE_INTERRUPTED":
		fallthrough
	case "INSTANCE_RECYCLED":
		*e = EventCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EventCodeEnum: %s", s)
	}
}
