/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CalculateLoyaltyPointsRequest - A request to calculate the points that a buyer can earn from 
 * a specified purchase.
 */
public class CalculateLoyaltyPointsRequest {
    /**
     * The [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) ID for which to calculate the points.
     * Specify this field if your application uses the Orders API to process orders.
     * Otherwise, specify the `transaction_amount_money`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_id")
    public String orderId;
    public CalculateLoyaltyPointsRequest withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transaction_amount_money")
    public Money transactionAmountMoney;
    public CalculateLoyaltyPointsRequest withTransactionAmountMoney(Money transactionAmountMoney) {
        this.transactionAmountMoney = transactionAmountMoney;
        return this;
    }
    
}
