/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Shape - A PageElement kind representing a generic shape that does not have a more specific classification.
 */
public class Shape {
    /**
     * The placeholder information that uniquely identifies a placeholder shape.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placeholder")
    public Placeholder placeholder;
    public Shape withPlaceholder(Placeholder placeholder) {
        this.placeholder = placeholder;
        return this;
    }
    
    /**
     * The properties of a Shape. If the shape is a placeholder shape as determined by the placeholder field, then these properties may be inherited from a parent placeholder shape. Determining the rendered value of the property depends on the corresponding property_state field value. Any text autofit settings on the shape are automatically deactivated by requests that can impact how text fits in the shape.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shapeProperties")
    public ShapeProperties shapeProperties;
    public Shape withShapeProperties(ShapeProperties shapeProperties) {
        this.shapeProperties = shapeProperties;
        return this;
    }
    
    /**
     * The type of the shape.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shapeType")
    public ShapeShapeTypeEnum shapeType;
    public Shape withShapeType(ShapeShapeTypeEnum shapeType) {
        this.shapeType = shapeType;
        return this;
    }
    
    /**
     * The general text content. The text must reside in a compatible shape (e.g. text box or rectangle) or a table cell in a page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public TextContent text;
    public Shape withText(TextContent text) {
        this.text = text;
        return this;
    }
    
}
