/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ConfigRecommendationOptimizationTypeEnum } from "./configrecommendationoptimizationtypeenum";
import { Cost } from "./cost";
import { DisruptionCompliance } from "./disruptioncompliance";
import { HaArchitectureEnum } from "./haarchitectureenum";
import { RecommendationDisruptionCompliance } from "./recommendationdisruptioncompliance";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Defines a configuration recommendation.
 */
export class ConfigRecommendation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appComponentName" })
  appComponentName?: string;

  @SpeakeasyMetadata({ elemType: DisruptionCompliance })
  @Expose({ name: "compliance" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, DisruptionCompliance> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], DisruptionCompliance);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  compliance?: Record<string, DisruptionCompliance>;

  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  @Type(() => Cost)
  cost?: Cost;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "haArchitecture" })
  haArchitecture?: HaArchitectureEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "optimizationType" })
  optimizationType: ConfigRecommendationOptimizationTypeEnum;

  @SpeakeasyMetadata({ elemType: RecommendationDisruptionCompliance })
  @Expose({ name: "recommendationCompliance" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, RecommendationDisruptionCompliance> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          RecommendationDisruptionCompliance
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  recommendationCompliance?: Record<string, RecommendationDisruptionCompliance>;

  @SpeakeasyMetadata()
  @Expose({ name: "referenceId" })
  referenceId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "suggestedChanges" })
  suggestedChanges?: string[];
}
