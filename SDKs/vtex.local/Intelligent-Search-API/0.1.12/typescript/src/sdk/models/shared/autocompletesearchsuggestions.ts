/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class AutocompleteSearchSuggestionsSearchesAttributes extends SpeakeasyBase {
  /**
   * Facet key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Human-readable format of the facet key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labelKey" })
  labelKey?: string;

  /**
   * Human-readable format of the facet value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labelValue" })
  labelValue?: string;

  /**
   * Facet value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class AutocompleteSearchSuggestionsSearches extends SpeakeasyBase {
  /**
   * List of facets in which the term can be searched.
   */
  @SpeakeasyMetadata({
    elemType: AutocompleteSearchSuggestionsSearchesAttributes,
  })
  @Expose({ name: "attributes" })
  @Type(() => AutocompleteSearchSuggestionsSearchesAttributes)
  attributes?: AutocompleteSearchSuggestionsSearchesAttributes[];

  /**
   * Number of times the term was searched.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Search term.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "term" })
  term?: string;
}

/**
 * OK
 */
export class AutocompleteSearchSuggestions extends SpeakeasyBase {
  /**
   * List of suggested facets and terms.
   */
  @SpeakeasyMetadata({ elemType: AutocompleteSearchSuggestionsSearches })
  @Expose({ name: "searches" })
  @Type(() => AutocompleteSearchSuggestionsSearches)
  searches?: AutocompleteSearchSuggestionsSearches[];
}
