// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateApplicationActionEnum
type GETUpdateApplicationActionEnum string

const (
	GETUpdateApplicationActionEnumUpdateApplication GETUpdateApplicationActionEnum = "UpdateApplication"
)

func (e *GETUpdateApplicationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateApplication":
		*e = GETUpdateApplicationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateApplicationActionEnum: %s", s)
	}
}

// GETUpdateApplicationVersionEnum
type GETUpdateApplicationVersionEnum string

const (
	GETUpdateApplicationVersionEnumTwoThousandAndTen1201 GETUpdateApplicationVersionEnum = "2010-12-01"
)

func (e *GETUpdateApplicationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETUpdateApplicationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateApplicationVersionEnum: %s", s)
	}
}

type GETUpdateApplicationQueryParams struct {
	Action GETUpdateApplicationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.
	ApplicationName string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// <p>A new description for the application.</p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description.</p>
	Description *string                         `queryParam:"style=form,explode=true,name=Description"`
	Version     GETUpdateApplicationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETUpdateApplicationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateApplicationRequest struct {
	QueryParams GETUpdateApplicationQueryParams
	Headers     GETUpdateApplicationHeaders
}

type GETUpdateApplicationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
