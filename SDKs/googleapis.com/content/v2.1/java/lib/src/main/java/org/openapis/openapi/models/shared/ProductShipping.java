/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProductShipping {
    /**
     * The CLDR territory code of the country to which an item will ship.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public ProductShipping withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The location where the shipping is applicable, represented by a location group name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationGroupName")
    public String locationGroupName;

    public ProductShipping withLocationGroupName(String locationGroupName) {
        this.locationGroupName = locationGroupName;
        return this;
    }
    
    /**
     * The numeric ID of a location that the shipping rate applies to as defined in the Google Ads API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationId")
    public String locationId;

    public ProductShipping withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * Maximum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxHandlingTime")
    public String maxHandlingTime;

    public ProductShipping withMaxHandlingTime(String maxHandlingTime) {
        this.maxHandlingTime = maxHandlingTime;
        return this;
    }
    
    /**
     * Maximum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTransitTime")
    public String maxTransitTime;

    public ProductShipping withMaxTransitTime(String maxTransitTime) {
        this.maxTransitTime = maxTransitTime;
        return this;
    }
    
    /**
     * Minimum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. minHandlingTime can only be present together with maxHandlingTime; but it's not required if maxHandlingTime is present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minHandlingTime")
    public String minHandlingTime;

    public ProductShipping withMinHandlingTime(String minHandlingTime) {
        this.minHandlingTime = minHandlingTime;
        return this;
    }
    
    /**
     * Minimum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. minTransitTime can only be present together with maxTransitTime; but it's not required if maxTransitTime is present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minTransitTime")
    public String minTransitTime;

    public ProductShipping withMinTransitTime(String minTransitTime) {
        this.minTransitTime = minTransitTime;
        return this;
    }
    
    /**
     * The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;

    public ProductShipping withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Price price;

    public ProductShipping withPrice(Price price) {
        this.price = price;
        return this;
    }
    
    /**
     * The geographic region to which a shipping rate applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public ProductShipping withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * A free-form description of the service class or delivery speed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;

    public ProductShipping withService(String service) {
        this.service = service;
        return this;
    }
    
    public ProductShipping(){}
}
