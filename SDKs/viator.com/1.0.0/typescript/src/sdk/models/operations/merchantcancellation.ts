/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class MerchantCancellationRequestBodyCancelItems extends SpeakeasyBase {
  /**
   * **cancellation code** that describes the reason for the cancellation
   *
   * @remarks
   * - see: [Suggested cancellation codes](#suggested-cancellation-codes)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelCode" })
  cancelCode?: string;

  /**
   * **natural-language description** of the reason for cancellation (a reason must be provided if `cancelCode` is `62` or `66`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelDescription" })
  cancelDescription?: string;

  /**
   * **alphanumeric reference code** of the distributor item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributorItemRef" })
  distributorItemRef?: string;

  /**
   * **numeric identifier** of item to cancel in itinerary
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: number;
}

export class MerchantCancellationRequestBody extends SpeakeasyBase {
  /**
   * **array** of objects detailing itinerary items to cancel
   */
  @SpeakeasyMetadata({ elemType: MerchantCancellationRequestBodyCancelItems })
  @Expose({ name: "cancelItems" })
  @Type(() => MerchantCancellationRequestBodyCancelItems)
  cancelItems?: MerchantCancellationRequestBodyCancelItems[];

  /**
   * **itinerary reference identifier** (partner defined) for the booking to cancel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributorRef" })
  distributorRef?: string;

  /**
   * **numeric identifier** for the itinerary
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itineraryId" })
  itineraryId?: number;
}

export class MerchantCancellationRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: MerchantCancellationRequestBody;
}

export class MerchantCancellation400ApplicationJSONData extends SpeakeasyBase {
  /**
   * **natural-language description** for this response (see response codes table)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellationResponseDescription" })
  cancellationResponseDescription?: string;

  /**
   * **status code** for this response (see response codes table)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellationResponseStatusCode" })
  cancellationResponseStatusCode?: string;

  /**
   * **alphanumeric reference code** of the distributor item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributorItemRef" })
  distributorItemRef?: string;

  /**
   * **identifier** for the item to cancel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: string;
}

/**
 * Error
 */
export class MerchantCancellation400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => MerchantCancellation400ApplicationJSONData)
  data?: MerchantCancellation400ApplicationJSONData;

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class MerchantCancellation200ApplicationJSONDataCancelItems extends SpeakeasyBase {
  /**
   * See Response codes table
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellationResponseDescription" })
  cancellationResponseDescription?: string;

  /**
   * See [cancellation response codes table](#cancellation-response-status-codes-and-their-meanings)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellationResponseStatusCode" })
  cancellationResponseStatusCode?: string;

  /**
   * **alphanumeric reference code** of the distributor item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributorItemRef" })
  distributorItemRef?: string;

  /**
   * **numeric identifier** of the item to cancel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: string;
}

export class MerchantCancellation200ApplicationJSONData extends SpeakeasyBase {
  /**
   * **array** of items to be cancelled
   */
  @SpeakeasyMetadata({
    elemType: MerchantCancellation200ApplicationJSONDataCancelItems,
  })
  @Expose({ name: "cancelItems" })
  @Type(() => MerchantCancellation200ApplicationJSONDataCancelItems)
  cancelItems?: MerchantCancellation200ApplicationJSONDataCancelItems[];

  /**
   * **reference code** for the distributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributorRef" })
  distributorRef?: string;

  /**
   * **numeric** identifier for the itinerary
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itineraryId" })
  itineraryId?: number;
}

/**
 * Success
 */
export class MerchantCancellation200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => MerchantCancellation200ApplicationJSONData)
  data?: MerchantCancellation200ApplicationJSONData;

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class MerchantCancellationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  merchantCancellation200ApplicationJSONObject?: MerchantCancellation200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  merchantCancellation400ApplicationJSONObject?: MerchantCancellation400ApplicationJSON;
}
