"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PasswordPolicyType:
    r"""The password policy type."""
    
    minimum_length: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumLength'), 'exclude': lambda f: f is None }})  
    require_lowercase: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequireLowercase'), 'exclude': lambda f: f is None }})  
    require_numbers: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequireNumbers'), 'exclude': lambda f: f is None }})  
    require_symbols: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequireSymbols'), 'exclude': lambda f: f is None }})  
    require_uppercase: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequireUppercase'), 'exclude': lambda f: f is None }})  
    temporary_password_validity_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TemporaryPasswordValidityDays'), 'exclude': lambda f: f is None }})  
    