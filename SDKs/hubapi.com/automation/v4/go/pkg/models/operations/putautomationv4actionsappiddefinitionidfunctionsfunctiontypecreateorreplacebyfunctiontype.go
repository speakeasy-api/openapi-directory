// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeSecurity struct {
	DeveloperHapikey string `security:"scheme,type=apiKey,subtype=query,name=hapikey"`
}

// PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum - The type of function. This determines when the function will be called.
type PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum string

const (
	PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnumPreActionExecution PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum = "PRE_ACTION_EXECUTION"
	PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnumPreFetchOptions    PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum = "PRE_FETCH_OPTIONS"
	PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnumPostFetchOptions   PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum = "POST_FETCH_OPTIONS"
)

func (e *PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRE_ACTION_EXECUTION":
		fallthrough
	case "PRE_FETCH_OPTIONS":
		fallthrough
	case "POST_FETCH_OPTIONS":
		*e = PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum: %s", s)
	}
}

type PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeRequest struct {
	// The function source code. Must be valid JavaScript code.
	RequestBody string `request:"mediaType=text/plain"`
	AppID       int    `pathParam:"style=simple,explode=false,name=appId"`
	// The ID of the custom workflow action.
	DefinitionID string `pathParam:"style=simple,explode=false,name=definitionId"`
	// The type of function. This determines when the function will be called.
	FunctionType PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeFunctionTypeEnum `pathParam:"style=simple,explode=false,name=functionType"`
}

type PutAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeCreateOrReplaceByFunctionTypeResponse struct {
	// successful operation
	ActionFunctionIdentifier *shared.ActionFunctionIdentifier
	Body                     []byte
	ContentType              string
	StatusCode               int
	RawResponse              *http.Response
}
