/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataConnector } from "./dataconnector";
import { ScopeEnum } from "./scopeenum";
import { Expose, Type } from "class-transformer";

/**
 * The function response.
 */
export class FunctionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "implementedBy" })
  @Type(() => DataConnector)
  implementedBy?: DataConnector;

  @SpeakeasyMetadata()
  @Expose({ name: "isInherited" })
  isInherited?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "requiredProperties" })
  requiredProperties?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: ScopeEnum;
}
