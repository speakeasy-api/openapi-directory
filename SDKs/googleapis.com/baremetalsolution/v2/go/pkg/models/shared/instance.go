// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceStateEnum - Output only. The state of the server.
type InstanceStateEnum string

const (
	InstanceStateEnumStateUnspecified InstanceStateEnum = "STATE_UNSPECIFIED"
	InstanceStateEnumProvisioning     InstanceStateEnum = "PROVISIONING"
	InstanceStateEnumRunning          InstanceStateEnum = "RUNNING"
	InstanceStateEnumDeleted          InstanceStateEnum = "DELETED"
	InstanceStateEnumUpdating         InstanceStateEnum = "UPDATING"
	InstanceStateEnumStarting         InstanceStateEnum = "STARTING"
	InstanceStateEnumStopping         InstanceStateEnum = "STOPPING"
	InstanceStateEnumShutdown         InstanceStateEnum = "SHUTDOWN"
)

func (e InstanceStateEnum) ToPointer() *InstanceStateEnum {
	return &e
}

func (e *InstanceStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PROVISIONING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "DELETED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "STARTING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "SHUTDOWN":
		*e = InstanceStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceStateEnum: %v", v)
	}
}

// InstanceWorkloadProfileEnum - The workload profile for the instance.
type InstanceWorkloadProfileEnum string

const (
	InstanceWorkloadProfileEnumWorkloadProfileUnspecified InstanceWorkloadProfileEnum = "WORKLOAD_PROFILE_UNSPECIFIED"
	InstanceWorkloadProfileEnumWorkloadProfileGeneric     InstanceWorkloadProfileEnum = "WORKLOAD_PROFILE_GENERIC"
	InstanceWorkloadProfileEnumWorkloadProfileHana        InstanceWorkloadProfileEnum = "WORKLOAD_PROFILE_HANA"
)

func (e InstanceWorkloadProfileEnum) ToPointer() *InstanceWorkloadProfileEnum {
	return &e
}

func (e *InstanceWorkloadProfileEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WORKLOAD_PROFILE_UNSPECIFIED":
		fallthrough
	case "WORKLOAD_PROFILE_GENERIC":
		fallthrough
	case "WORKLOAD_PROFILE_HANA":
		*e = InstanceWorkloadProfileEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceWorkloadProfileEnum: %v", v)
	}
}

// Instance - A server.
type Instance struct {
	// Output only. Create a time stamp.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The firmware version for the instance.
	FirmwareVersion *string `json:"firmwareVersion,omitempty"`
	// True if you enable hyperthreading for the server, otherwise false. The default value is false.
	HyperthreadingEnabled *bool `json:"hyperthreadingEnabled,omitempty"`
	// Output only. An identifier for the `Instance`, generated by the backend.
	ID *string `json:"id,omitempty"`
	// Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
	InteractiveSerialConsoleEnabled *bool `json:"interactiveSerialConsoleEnabled,omitempty"`
	// Labels as key value pairs.
	Labels map[string]string `json:"labels,omitempty"`
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
	LogicalInterfaces []GoogleCloudBaremetalsolutionV2LogicalInterface `json:"logicalInterfaces,omitempty"`
	// Output only. Text field about info for logging in.
	LoginInfo *string `json:"loginInfo,omitempty"`
	// Immutable. List of LUNs associated with this server.
	Luns []Lun `json:"luns,omitempty"`
	// Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	MachineType *string `json:"machineType,omitempty"`
	// Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
	Name *string `json:"name,omitempty"`
	// Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
	NetworkTemplate *string `json:"networkTemplate,omitempty"`
	// Output only. List of networks associated with this server.
	Networks []Network `json:"networks,omitempty"`
	// The OS image currently installed on the server.
	OsImage *string `json:"osImage,omitempty"`
	// Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
	Pod *string `json:"pod,omitempty"`
	// Output only. The state of the server.
	State *InstanceStateEnum `json:"state,omitempty"`
	// Output only. Update a time stamp.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
	Volumes []Volume `json:"volumes,omitempty"`
	// The workload profile for the instance.
	WorkloadProfile *InstanceWorkloadProfileEnum `json:"workloadProfile,omitempty"`
}

// InstanceInput - A server.
type InstanceInput struct {
	// True if you enable hyperthreading for the server, otherwise false. The default value is false.
	HyperthreadingEnabled *bool `json:"hyperthreadingEnabled,omitempty"`
	// Labels as key value pairs.
	Labels map[string]string `json:"labels,omitempty"`
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
	LogicalInterfaces []GoogleCloudBaremetalsolutionV2LogicalInterface `json:"logicalInterfaces,omitempty"`
	// Immutable. List of LUNs associated with this server.
	Luns []LunInput `json:"luns,omitempty"`
	// Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	MachineType *string `json:"machineType,omitempty"`
	// Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
	Name *string `json:"name,omitempty"`
	// Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
	NetworkTemplate *string `json:"networkTemplate,omitempty"`
	// The OS image currently installed on the server.
	OsImage *string `json:"osImage,omitempty"`
	// Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
	Pod *string `json:"pod,omitempty"`
	// Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
	Volumes []VolumeInput `json:"volumes,omitempty"`
	// The workload profile for the instance.
	WorkloadProfile *InstanceWorkloadProfileEnum `json:"workloadProfile,omitempty"`
}
