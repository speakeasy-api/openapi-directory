/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETCreateEndpointAccessActionEnum {
  CreateEndpointAccess = "CreateEndpointAccess",
}

export enum GETCreateEndpointAccessVersionEnum {
  TwoThousandAndTwelve1201 = "2012-12-01",
}

export class GETCreateEndpointAccessRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETCreateEndpointAccessActionEnum;

  /**
   * The cluster identifier of the cluster to access.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ClusterIdentifier",
  })
  clusterIdentifier?: string;

  /**
   * <p>The Redshift-managed VPC endpoint name.</p> <p>An endpoint name must contain 1-30 characters. Valid characters are A-Z, a-z, 0-9, and hyphen(-). The first character must be a letter. The name can't contain two consecutive hyphens or end with a hyphen.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EndpointName",
  })
  endpointName: string;

  /**
   * The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ResourceOwner",
  })
  resourceOwner?: string;

  /**
   * The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SubnetGroupName",
  })
  subnetGroupName: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETCreateEndpointAccessVersionEnum;

  /**
   * The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VpcSecurityGroupIds",
  })
  vpcSecurityGroupIds?: string[];

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETCreateEndpointAccessResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
