"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import security as shared_security
from typing import Any, Optional


@dataclasses.dataclass
class GetAddonLinkersLinkerKeyValuesValueIDSecurity:
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    basic: Optional[shared_security.SchemeBasic] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    oauth2: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAddonLinkersLinkerKeyValuesValueIDRequest:
    
    linker_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'linker_key', 'style': 'simple', 'explode': False }})
    r"""The unique key of a [linker module](/cloud/bitbucket/modules/linker/)
    as defined in an application descriptor.
    """  
    value_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'value_id', 'style': 'simple', 'explode': False }})
    r"""The numeric ID of the linker value."""  
    

@dataclasses.dataclass
class GetAddonLinkersLinkerKeyValuesValueIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Authentication must use app JWT"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    