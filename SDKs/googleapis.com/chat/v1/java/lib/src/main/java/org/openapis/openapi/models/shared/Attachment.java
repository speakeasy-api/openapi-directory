/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Attachment - An attachment in Google Chat.
 */
public class Attachment {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attachmentDataRef")
    public AttachmentDataRef attachmentDataRef;
    public Attachment withAttachmentDataRef(AttachmentDataRef attachmentDataRef) {
        this.attachmentDataRef = attachmentDataRef;
        return this;
    }
    
    /**
     * The original file name for the content, not the full path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentName")
    public String contentName;
    public Attachment withContentName(String contentName) {
        this.contentName = contentName;
        return this;
    }
    
    /**
     * The content type (MIME type) of the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentType")
    public String contentType;
    public Attachment withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Output only. The download URL which should be used to allow a human user to download the attachment. Chat apps should not use this URL to download attachment content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downloadUri")
    public String downloadUri;
    public Attachment withDownloadUri(String downloadUri) {
        this.downloadUri = downloadUri;
        return this;
    }
    
    /**
     * A reference to the data of a drive attachment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("driveDataRef")
    public DriveDataRef driveDataRef;
    public Attachment withDriveDataRef(DriveDataRef driveDataRef) {
        this.driveDataRef = driveDataRef;
        return this;
    }
    
    /**
     * Resource name of the attachment, in the form "spaces/* /messages/* /attachments/*".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Attachment withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The source of the attachment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public AttachmentSourceEnum source;
    public Attachment withSource(AttachmentSourceEnum source) {
        this.source = source;
        return this;
    }
    
    /**
     * Output only. The thumbnail URL which should be used to preview the attachment to a human user. Chat apps should not use this URL to download attachment content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailUri")
    public String thumbnailUri;
    public Attachment withThumbnailUri(String thumbnailUri) {
        this.thumbnailUri = thumbnailUri;
        return this;
    }
    
}
