/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class LicenseItemsProductsEndpoints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "consoleUrl" })
  consoleUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webApiUrl" })
  webApiUrl?: string;
}

/**
 * Object representing products of licenses
 */
export class LicenseItemsProducts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "domains" })
  domains?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "endpoints" })
  @Type(() => LicenseItemsProductsEndpoints)
  endpoints?: LicenseItemsProductsEndpoints;

  /**
   * ID of the product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name of the product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object representing licenses
 */
export class LicenseItems extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "expiration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiration?: Date;

  /**
   * ID of the category of the license
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * If the license is purchased
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPurchased" })
  isPurchased?: boolean;

  /**
   * Name of the category of the license
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Array of products
   */
  @SpeakeasyMetadata({ elemType: LicenseItemsProducts })
  @Expose({ name: "products" })
  @Type(() => LicenseItemsProducts)
  products?: LicenseItemsProducts[];
}
