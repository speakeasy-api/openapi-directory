// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImageStatusEnum string

const (
	ImageStatusEnumPending      ImageStatusEnum = "PENDING"
	ImageStatusEnumCreating     ImageStatusEnum = "CREATING"
	ImageStatusEnumBuilding     ImageStatusEnum = "BUILDING"
	ImageStatusEnumTesting      ImageStatusEnum = "TESTING"
	ImageStatusEnumDistributing ImageStatusEnum = "DISTRIBUTING"
	ImageStatusEnumIntegrating  ImageStatusEnum = "INTEGRATING"
	ImageStatusEnumAvailable    ImageStatusEnum = "AVAILABLE"
	ImageStatusEnumCancelled    ImageStatusEnum = "CANCELLED"
	ImageStatusEnumFailed       ImageStatusEnum = "FAILED"
	ImageStatusEnumDeprecated   ImageStatusEnum = "DEPRECATED"
	ImageStatusEnumDeleted      ImageStatusEnum = "DELETED"
)

func (e ImageStatusEnum) ToPointer() *ImageStatusEnum {
	return &e
}

func (e *ImageStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "CREATING":
		fallthrough
	case "BUILDING":
		fallthrough
	case "TESTING":
		fallthrough
	case "DISTRIBUTING":
		fallthrough
	case "INTEGRATING":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DEPRECATED":
		fallthrough
	case "DELETED":
		*e = ImageStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageStatusEnum: %v", v)
	}
}
