/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The IPv6 settings of the interface.
 */
export class CreateDeviceSwitchRoutingInterfaceRequestBodyIpv6 extends SpeakeasyBase {
  /**
   * The IPv6 address of the interface. Required if assignmentMode is 'static'. Must not be included if           assignmentMode is 'eui-64'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The IPv6 assignment mode for the interface. Can be either 'eui-64' or 'static'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: string;

  /**
   * The IPv6 default gateway of the interface. Required if prefix is defined and this is the first           interface with IPv6 configured for the switch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The IPv6 prefix of the interface. Required if IPv6 object is included.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;
}

/**
 * Enable multicast support if, multicast routing between VLANs is required. Options are:         'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'.
 */
export enum CreateDeviceSwitchRoutingInterfaceRequestBodyMulticastRoutingEnum {
  IGMPSnoopingQuerier = "IGMP snooping querier",
  Disabled = "disabled",
  Enabled = "enabled",
}

/**
 * The OSPF routing settings of the interface.
 */
export class CreateDeviceSwitchRoutingInterfaceRequestBodyOspfSettings extends SpeakeasyBase {
  /**
   * The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an           existing OSPF area. Defaults to 'disabled'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "area" })
  area?: string;

  /**
   * The path cost for this interface. Defaults to 1, but can be increased up to 65535           to give lower priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost?: number;

  /**
   * When enabled, OSPF will not run on the interface, but the subnet will still be advertised.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPassiveEnabled" })
  isPassiveEnabled?: boolean;
}

/**
 * The OSPFv3 routing settings of the interface.
 */
export class CreateDeviceSwitchRoutingInterfaceRequestBodyOspfV3 extends SpeakeasyBase {
  /**
   * The OSPFv3 area to which this interface should belong. Can be either 'disabled' or the identifier of an           existing OSPFv3 area. Defaults to 'disabled'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "area" })
  area?: string;

  /**
   * The path cost for this interface. Defaults to 1, but can be increased up to 65535           to give lower priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost?: number;

  /**
   * When enabled, OSPFv3 will not run on the interface, but the subnet will still be advertised.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPassiveEnabled" })
  isPassiveEnabled?: boolean;
}

export class CreateDeviceSwitchRoutingInterfaceRequestBody extends SpeakeasyBase {
  /**
   * The next hop for any traffic that isn't going to a directly connected subnet or over a static route.         This IP address must exist in a subnet with a routed interface. Required if this is the first IPv4 interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultGateway" })
  defaultGateway?: string;

  /**
   * The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same         as the switch's management IP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaceIp" })
  interfaceIp?: string;

  /**
   * The IPv6 settings of the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(() => CreateDeviceSwitchRoutingInterfaceRequestBodyIpv6)
  ipv6?: CreateDeviceSwitchRoutingInterfaceRequestBodyIpv6;

  /**
   * Enable multicast support if, multicast routing between VLANs is required. Options are:         'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multicastRouting" })
  multicastRouting?: CreateDeviceSwitchRoutingInterfaceRequestBodyMulticastRoutingEnum;

  /**
   * A friendly name or description for the interface or VLAN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The OSPF routing settings of the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ospfSettings" })
  @Type(() => CreateDeviceSwitchRoutingInterfaceRequestBodyOspfSettings)
  ospfSettings?: CreateDeviceSwitchRoutingInterfaceRequestBodyOspfSettings;

  /**
   * The OSPFv3 routing settings of the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ospfV3" })
  @Type(() => CreateDeviceSwitchRoutingInterfaceRequestBodyOspfV3)
  ospfV3?: CreateDeviceSwitchRoutingInterfaceRequestBodyOspfV3;

  /**
   * The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnet" })
  subnet?: string;

  /**
   * The VLAN this routed interface is on. VLAN must be between 1 and 4094.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

export class CreateDeviceSwitchRoutingInterfaceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateDeviceSwitchRoutingInterfaceRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=serial",
  })
  serial: string;
}

/**
 * IPv6 addressing
 */
export class CreateDeviceSwitchRoutingInterface201ApplicationJSONIpv6 extends SpeakeasyBase {
  /**
   * IPv6 address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Assignment mode
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: string;

  /**
   * IPv6 gateway
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * IPv6 subnet
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;
}

/**
 * IPv4 OSPF Settings
 */
export class CreateDeviceSwitchRoutingInterface201ApplicationJSONOspfSettings extends SpeakeasyBase {
  /**
   * Area id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "area" })
  area?: string;

  /**
   * OSPF Cost
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost?: number;

  /**
   * Disable sending Hello packets on this interface's IPv4 area
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPassiveEnabled" })
  isPassiveEnabled?: boolean;
}

/**
 * IPv6 OSPF Settings
 */
export class CreateDeviceSwitchRoutingInterface201ApplicationJSONOspfV3 extends SpeakeasyBase {
  /**
   * Area id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "area" })
  area?: string;

  /**
   * OSPF Cost
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost?: number;

  /**
   * Disable sending Hello packets on this interface's IPv6 area
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPassiveEnabled" })
  isPassiveEnabled?: boolean;
}

/**
 * Successful operation
 */
export class CreateDeviceSwitchRoutingInterface201ApplicationJSON extends SpeakeasyBase {
  /**
   * IPv4 default gateway
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultGateway" })
  defaultGateway?: string;

  /**
   * The id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaceId" })
  interfaceId?: string;

  /**
   * IPv4 address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaceIp" })
  interfaceIp?: string;

  /**
   * IPv6 addressing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(() => CreateDeviceSwitchRoutingInterface201ApplicationJSONIpv6)
  ipv6?: CreateDeviceSwitchRoutingInterface201ApplicationJSONIpv6;

  /**
   * Multicast routing status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multicastRouting" })
  multicastRouting?: string;

  /**
   * The name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * IPv4 OSPF Settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ospfSettings" })
  @Type(() => CreateDeviceSwitchRoutingInterface201ApplicationJSONOspfSettings)
  ospfSettings?: CreateDeviceSwitchRoutingInterface201ApplicationJSONOspfSettings;

  /**
   * IPv6 OSPF Settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ospfV3" })
  @Type(() => CreateDeviceSwitchRoutingInterface201ApplicationJSONOspfV3)
  ospfV3?: CreateDeviceSwitchRoutingInterface201ApplicationJSONOspfV3;

  /**
   * IPv4 subnet
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnet" })
  subnet?: string;

  /**
   * VLAN id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

export class CreateDeviceSwitchRoutingInterfaceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createDeviceSwitchRoutingInterface201ApplicationJSONObject?: CreateDeviceSwitchRoutingInterface201ApplicationJSON;
}
