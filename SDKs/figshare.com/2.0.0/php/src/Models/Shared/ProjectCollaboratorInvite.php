<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProjectCollaboratorInvite - viewer or collaborator role. User user_id or email of user
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProjectCollaboratorInvite
{
    /**
     * Text sent when inviting the user to the project
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * Collaborator email
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Role of the the collaborator inside the project
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ProjectCollaboratorInviteRoleNameEnum $roleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('role_name')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProjectCollaboratorInviteRoleNameEnum>')]
    public ProjectCollaboratorInviteRoleNameEnum $roleName;
    
    /**
     * User id of the collaborator
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
	public function __construct()
	{
		$this->comment = null;
		$this->email = null;
		$this->roleName = \OpenAPI\OpenAPI\Models\Shared\ProjectCollaboratorInviteRoleNameEnum::VIEWER;
		$this->userId = null;
	}
}
