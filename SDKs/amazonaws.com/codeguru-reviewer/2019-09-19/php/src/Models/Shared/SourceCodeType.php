<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SourceCodeType - Specifies the source code that is analyzed in a code review.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SourceCodeType
{
	#[\JMS\Serializer\Annotation\SerializedName('BranchDiff')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BranchDiffSourceCodeType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BranchDiffSourceCodeType $branchDiff = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CommitDiff')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommitDiffSourceCodeType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommitDiffSourceCodeType $commitDiff = null;
    
    /**
     * A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a> that specifies the tip of a branch in an associated repository.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RepositoryHeadSourceCodeType $repositoryHead
     */
	#[\JMS\Serializer\Annotation\SerializedName('RepositoryHead')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RepositoryHeadSourceCodeType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RepositoryHeadSourceCodeType $repositoryHead = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RequestMetadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RequestMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RequestMetadata $requestMetadata = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('S3BucketRepository')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\S3BucketRepository')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?S3BucketRepository $s3BucketRepository = null;
    
	public function __construct()
	{
		$this->branchDiff = null;
		$this->commitDiff = null;
		$this->repositoryHead = null;
		$this->requestMetadata = null;
		$this->s3BucketRepository = null;
	}
}
