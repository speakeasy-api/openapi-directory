// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AccountTokenByCodeRequestScopesEnum string

const (
	AccountTokenByCodeRequestScopesEnumCatalog  AccountTokenByCodeRequestScopesEnum = "Catalog"
	AccountTokenByCodeRequestScopesEnumCommerce AccountTokenByCodeRequestScopesEnum = "Commerce"
	AccountTokenByCodeRequestScopesEnumSettings AccountTokenByCodeRequestScopesEnum = "Settings"
	AccountTokenByCodeRequestScopesEnumPlayback AccountTokenByCodeRequestScopesEnum = "Playback"
)

func (e *AccountTokenByCodeRequestScopesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Catalog":
		fallthrough
	case "Commerce":
		fallthrough
	case "Settings":
		fallthrough
	case "Playback":
		*e = AccountTokenByCodeRequestScopesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountTokenByCodeRequestScopesEnum: %s", s)
	}
}

// AccountTokenByCodeRequest - The device id e.g. serial number and authorization code.
type AccountTokenByCodeRequest struct {
	// The generated device authorization code.
	Code string `json:"code"`
	// The unique identifier for the device e.g. serial number.
	ID string `json:"id"`
	// The scope(s) of the token(s) required.
	Scopes []AccountTokenByCodeRequestScopesEnum `json:"scopes"`
}
