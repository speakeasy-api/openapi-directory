/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Not allowed to perform operation
 */
export class GetEvents403ApplicationJSON extends SpeakeasyBase {
  /**
   * Error message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;
}

/**
 * Access token is missing or invalid
 */
export class GetEvents401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;
}

/**
 * Event list
 */
export class GetEvents200ApplicationJSON extends SpeakeasyBase {
  /**
   * Number of objects in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Number of objects per page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length?: number;

  /**
   * Current page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  /**
   * Number of pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_total" })
  pageTotal?: number;

  /**
   * Event objects
   */
  @SpeakeasyMetadata({ elemType: shared.Event })
  @Expose({ name: "results" })
  @Type(() => shared.Event)
  results?: shared.Event[];
}

export class GetEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Event list
   */
  @SpeakeasyMetadata()
  getEvents200ApplicationJSONObject?: GetEvents200ApplicationJSON;

  /**
   * Access token is missing or invalid
   */
  @SpeakeasyMetadata()
  getEvents401ApplicationJSONObject?: GetEvents401ApplicationJSON;

  /**
   * Not allowed to perform operation
   */
  @SpeakeasyMetadata()
  getEvents403ApplicationJSONObject?: GetEvents403ApplicationJSON;
}
