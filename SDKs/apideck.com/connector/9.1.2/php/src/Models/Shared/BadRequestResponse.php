<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BadRequestResponse - Bad Request
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BadRequestResponse
{
    /**
     * Contains parameter or domain specific information related to the error and why it occurred.
     * 
     * @var mixed $detail
     */
	#[\JMS\Serializer\Annotation\SerializedName('detail')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $detail = null;
    
    /**
     * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
     * 
     * @var ?string $error
     */
	#[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $error = null;
    
    /**
     * A human-readable message providing more details about the error.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Link to documentation of error type
     * 
     * @var ?string $ref
     */
	#[\JMS\Serializer\Annotation\SerializedName('ref')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ref = null;
    
    /**
     * HTTP status code
     * 
     * @var ?float $statusCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('status_code')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $statusCode = null;
    
    /**
     * The type of error returned
     * 
     * @var ?string $typeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('type_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeName = null;
    
	public function __construct()
	{
		$this->detail = null;
		$this->error = null;
		$this->message = null;
		$this->ref = null;
		$this->statusCode = null;
		$this->typeName = null;
	}
}
