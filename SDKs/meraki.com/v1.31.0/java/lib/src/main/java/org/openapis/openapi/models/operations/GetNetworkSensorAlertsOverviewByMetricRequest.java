/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetNetworkSensorAlertsOverviewByMetricRequest {
    /**
     * The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=interval")
    public Long interval;
    public GetNetworkSensorAlertsOverviewByMetricRequest withInterval(Long interval) {
        this.interval = interval;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=networkId")
    public String networkId;
    public GetNetworkSensorAlertsOverviewByMetricRequest withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }
    
    /**
     * The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=t0")
    public String t0;
    public GetNetworkSensorAlertsOverviewByMetricRequest withT0(String t0) {
        this.t0 = t0;
        return this;
    }
    
    /**
     * The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=t1")
    public String t1;
    public GetNetworkSensorAlertsOverviewByMetricRequest withT1(String t1) {
        this.t1 = t1;
        return this;
    }
    
    /**
     * The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timespan")
    public Float timespan;
    public GetNetworkSensorAlertsOverviewByMetricRequest withTimespan(Float timespan) {
        this.timespan = timespan;
        return this;
    }
    
}
