/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ThingConnectivity } from "./thingconnectivity";
import { Expose, Type } from "class-transformer";

/**
 * The thing search index document.
 */
export class ThingDocument extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "connectivity" })
  @Type(() => ThingConnectivity)
  connectivity?: ThingConnectivity;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceDefender" })
  deviceDefender?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shadow" })
  shadow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thingGroupNames" })
  thingGroupNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "thingId" })
  thingId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thingName" })
  thingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thingTypeName" })
  thingTypeName?: string;
}
