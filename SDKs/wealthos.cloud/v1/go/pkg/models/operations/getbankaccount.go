// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetBankAccountSecurity struct {
	APISecretKey shared.SchemeAPISecretKey `security:"scheme,type=apiKey,subtype=header"`
}

type GetBankAccountPathParams struct {
	// Bank Account Id
	BankAccountID string `pathParam:"style=simple,explode=false,name=bank_account_id"`
}

type GetBankAccountHeaders struct {
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

type GetBankAccountRequest struct {
	PathParams GetBankAccountPathParams
	Headers    GetBankAccountHeaders
	Security   GetBankAccountSecurity
}

// GetBankAccount500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type GetBankAccount500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetBankAccount429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type GetBankAccount429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetBankAccount409ApplicationJSONStatusEnum - Current status of the original request
type GetBankAccount409ApplicationJSONStatusEnum string

const (
	GetBankAccount409ApplicationJSONStatusEnumProcessing GetBankAccount409ApplicationJSONStatusEnum = "PROCESSING"
	GetBankAccount409ApplicationJSONStatusEnumComplete   GetBankAccount409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e *GetBankAccount409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = GetBankAccount409ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBankAccount409ApplicationJSONStatusEnum: %s", s)
	}
}

// GetBankAccount409ApplicationJSON - Duplicate request
type GetBankAccount409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status GetBankAccount409ApplicationJSONStatusEnum `json:"status"`
}

// GetBankAccount404ApplicationJSON - The specified resource was not found
type GetBankAccount404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetBankAccount403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type GetBankAccount403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetBankAccount401ApplicationJSON - You do not have permissions to access this resource.
type GetBankAccount401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetBankAccount400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type GetBankAccount400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetBankAccount200ApplicationJSONAccountStatusEnum - If not populated, will be defaulted to inactive
type GetBankAccount200ApplicationJSONAccountStatusEnum string

const (
	GetBankAccount200ApplicationJSONAccountStatusEnumActive   GetBankAccount200ApplicationJSONAccountStatusEnum = "active"
	GetBankAccount200ApplicationJSONAccountStatusEnumInactive GetBankAccount200ApplicationJSONAccountStatusEnum = "inactive"
)

func (e *GetBankAccount200ApplicationJSONAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = GetBankAccount200ApplicationJSONAccountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBankAccount200ApplicationJSONAccountStatusEnum: %s", s)
	}
}

// GetBankAccount200ApplicationJSONDefaultAccountEnum - Only one account should be the default
type GetBankAccount200ApplicationJSONDefaultAccountEnum string

const (
	GetBankAccount200ApplicationJSONDefaultAccountEnumYes GetBankAccount200ApplicationJSONDefaultAccountEnum = "yes"
	GetBankAccount200ApplicationJSONDefaultAccountEnumNo  GetBankAccount200ApplicationJSONDefaultAccountEnum = "no"
)

func (e *GetBankAccount200ApplicationJSONDefaultAccountEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "yes":
		fallthrough
	case "no":
		*e = GetBankAccount200ApplicationJSONDefaultAccountEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBankAccount200ApplicationJSONDefaultAccountEnum: %s", s)
	}
}

// GetBankAccount200ApplicationJSON - success
type GetBankAccount200ApplicationJSON struct {
	AccountName string `json:"account_name"`
	// If not populated, will be defaulted to inactive
	AccountStatus *GetBankAccount200ApplicationJSONAccountStatusEnum `json:"account_status,omitempty"`
	// system generated id
	BankAccountID *string `json:"bank_account_id,omitempty"`
	// Unique for the investor
	BankAccountNumber         string     `json:"bank_account_number"`
	BuildingSocietyRollNumber *string    `json:"building_society_roll_number,omitempty"`
	CreatedAt                 *time.Time `json:"created_at,omitempty"`
	// Only one account should be the default
	DefaultAccount   GetBankAccount200ApplicationJSONDefaultAccountEnum `json:"default_account"`
	InvestorID       string                                             `json:"investor_id"`
	ReferenceVersion *int64                                             `json:"reference_version,omitempty"`
	SortCode         *string                                            `json:"sort_code,omitempty"`
	UpdatedAt        *time.Time                                         `json:"updated_at,omitempty"`
}

type GetBankAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	GetBankAccount200ApplicationJSONObject *GetBankAccount200ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	GetBankAccount400ApplicationJSONObject *GetBankAccount400ApplicationJSON
	// You do not have permissions to access this resource.
	GetBankAccount401ApplicationJSONObject *GetBankAccount401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	GetBankAccount403ApplicationJSONObject *GetBankAccount403ApplicationJSON
	// The specified resource was not found
	GetBankAccount404ApplicationJSONObject *GetBankAccount404ApplicationJSON
	// Duplicate request
	GetBankAccount409ApplicationJSONObject *GetBankAccount409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	GetBankAccount429ApplicationJSONObject *GetBankAccount429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	GetBankAccount500ApplicationJSONObject *GetBankAccount500ApplicationJSON
}
