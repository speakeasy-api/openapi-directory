// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum - Indicates whether an address is residential.
type SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum string

const (
	SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnumUnknown SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum = "unknown"
	SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnumYes     SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum = "yes"
	SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnumNo      SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum = "no"
)

func (e SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum) ToPointer() *SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum {
	return &e
}

func (e *SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown":
		fallthrough
	case "yes":
		fallthrough
	case "no":
		*e = SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum: %v", v)
	}
}

// SchedulePickupResponseBodyPartialAddress - A complete or partial mailing address.
type SchedulePickupResponseBodyPartialAddress struct {
	// The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
	//
	AddressLine1 string `json:"address_line1"`
	// The second line of the street address.  For some addresses, this line may not be needed.
	//
	AddressLine2 *string `json:"address_line2,omitempty"`
	// The third line of the street address.  For some addresses, this line may not be needed.
	//
	AddressLine3 *string `json:"address_line3,omitempty"`
	// Indicates whether this is a residential address.
	AddressResidentialIndicator SchedulePickupResponseBodyPartialAddressAddressResidentialIndicatorEnum `json:"address_residential_indicator"`
	// The name of the city or locality
	CityLocality string `json:"city_locality"`
	// If this is a business address, then the company name should be specified here.
	//
	CompanyName *string `json:"company_name,omitempty"`
	// The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
	//
	CountryCode string `json:"country_code"`
	// Email for the address owner.
	//
	Email *string `json:"email,omitempty"`
	// The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
	//
	Name string `json:"name"`
	// The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
	//
	Phone      string `json:"phone"`
	PostalCode string `json:"postal_code"`
	// The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
	//
	StateProvince string `json:"state_province"`
}

// SchedulePickupResponseBodyOutput - An error response body
type SchedulePickupResponseBodyOutput struct {
	// The date and time that the pickup was cancelled in ShipEngine.
	CancelledAt *time.Time `json:"cancelled_at,omitempty"`
	// The carrier_id associated with the pickup
	CarrierID *string `json:"carrier_id,omitempty"`
	// The carrier confirmation number for the scheduled pickup.
	ConfirmationNumber *string         `json:"confirmation_number,omitempty"`
	ContactDetails     *ContactDetails `json:"contact_details,omitempty"`
	// The date and time that the pickup was created in ShipEngine.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The errors associated with the failed API call
	Errors []Error `json:"errors"`
	// Label IDs that will be included in the pickup request
	LabelIds      []string                                  `json:"label_ids,omitempty"`
	PickupAddress *SchedulePickupResponseBodyPartialAddress `json:"pickup_address,omitempty"`
	PickupID      *string                                   `json:"pickup_id,omitempty"`
	// Used by some carriers to give special instructions for a package pickup
	PickupNotes *string `json:"pickup_notes,omitempty"`
	// An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
	//
	PickupWindows []PickupWindows `json:"pickup_windows,omitempty"`
	// A UUID that uniquely identifies the request id.
	// This can be given to the support team to help debug non-trivial issues that may occur
	//
	RequestID string `json:"request_id"`
	// The warehouse_id associated with the pickup
	WarehouseID *string `json:"warehouse_id,omitempty"`
}
