// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCallAnalyticsCategoryXAmzTargetEnum
type CreateCallAnalyticsCategoryXAmzTargetEnum string

const (
	CreateCallAnalyticsCategoryXAmzTargetEnumTranscribeCreateCallAnalyticsCategory CreateCallAnalyticsCategoryXAmzTargetEnum = "Transcribe.CreateCallAnalyticsCategory"
)

func (e CreateCallAnalyticsCategoryXAmzTargetEnum) ToPointer() *CreateCallAnalyticsCategoryXAmzTargetEnum {
	return &e
}

func (e *CreateCallAnalyticsCategoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Transcribe.CreateCallAnalyticsCategory":
		*e = CreateCallAnalyticsCategoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCallAnalyticsCategoryXAmzTargetEnum: %v", v)
	}
}

type CreateCallAnalyticsCategoryRequest struct {
	CreateCallAnalyticsCategoryRequest shared.CreateCallAnalyticsCategoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         CreateCallAnalyticsCategoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateCallAnalyticsCategoryResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateCallAnalyticsCategoryResponse *shared.CreateCallAnalyticsCategoryResponse
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
