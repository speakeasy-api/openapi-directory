// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETSendQuotaActionEnum
type GETGETSendQuotaActionEnum string

const (
	GETGETSendQuotaActionEnumGetSendQuota GETGETSendQuotaActionEnum = "GetSendQuota"
)

func (e GETGETSendQuotaActionEnum) ToPointer() *GETGETSendQuotaActionEnum {
	return &e
}

func (e *GETGETSendQuotaActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetSendQuota":
		*e = GETGETSendQuotaActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETSendQuotaActionEnum: %v", v)
	}
}

// GETGETSendQuotaVersionEnum
type GETGETSendQuotaVersionEnum string

const (
	GETGETSendQuotaVersionEnumTwoThousandAndTen1201 GETGETSendQuotaVersionEnum = "2010-12-01"
)

func (e GETGETSendQuotaVersionEnum) ToPointer() *GETGETSendQuotaVersionEnum {
	return &e
}

func (e *GETGETSendQuotaVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETGETSendQuotaVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETSendQuotaVersionEnum: %v", v)
	}
}

type GETGETSendQuotaRequest struct {
	Action            GETGETSendQuotaActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version           GETGETSendQuotaVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETSendQuotaResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
