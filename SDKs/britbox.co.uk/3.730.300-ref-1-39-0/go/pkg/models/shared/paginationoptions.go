// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaginationOptionsItemTypeEnum - Specific item type filter.
type PaginationOptionsItemTypeEnum string

const (
	PaginationOptionsItemTypeEnumMovie       PaginationOptionsItemTypeEnum = "movie"
	PaginationOptionsItemTypeEnumShow        PaginationOptionsItemTypeEnum = "show"
	PaginationOptionsItemTypeEnumSeason      PaginationOptionsItemTypeEnum = "season"
	PaginationOptionsItemTypeEnumEpisode     PaginationOptionsItemTypeEnum = "episode"
	PaginationOptionsItemTypeEnumProgram     PaginationOptionsItemTypeEnum = "program"
	PaginationOptionsItemTypeEnumLink        PaginationOptionsItemTypeEnum = "link"
	PaginationOptionsItemTypeEnumTrailer     PaginationOptionsItemTypeEnum = "trailer"
	PaginationOptionsItemTypeEnumChannel     PaginationOptionsItemTypeEnum = "channel"
	PaginationOptionsItemTypeEnumCustomAsset PaginationOptionsItemTypeEnum = "customAsset"
)

func (e PaginationOptionsItemTypeEnum) ToPointer() *PaginationOptionsItemTypeEnum {
	return &e
}

func (e *PaginationOptionsItemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "movie":
		fallthrough
	case "show":
		fallthrough
	case "season":
		fallthrough
	case "episode":
		fallthrough
	case "program":
		fallthrough
	case "link":
		fallthrough
	case "trailer":
		fallthrough
	case "channel":
		fallthrough
	case "customAsset":
		*e = PaginationOptionsItemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaginationOptionsItemTypeEnum: %v", v)
	}
}

// PaginationOptionsOrderEnum - The applied sort order if any.
type PaginationOptionsOrderEnum string

const (
	PaginationOptionsOrderEnumAsc  PaginationOptionsOrderEnum = "asc"
	PaginationOptionsOrderEnumDesc PaginationOptionsOrderEnum = "desc"
)

func (e PaginationOptionsOrderEnum) ToPointer() *PaginationOptionsOrderEnum {
	return &e
}

func (e *PaginationOptionsOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = PaginationOptionsOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaginationOptionsOrderEnum: %v", v)
	}
}

// PaginationOptionsOrderByEnum - The applied sort ordering property if any.
type PaginationOptionsOrderByEnum string

const (
	PaginationOptionsOrderByEnumAz          PaginationOptionsOrderByEnum = "a-z"
	PaginationOptionsOrderByEnumReleaseYear PaginationOptionsOrderByEnum = "release-year"
	PaginationOptionsOrderByEnumDateAdded   PaginationOptionsOrderByEnum = "date-added"
)

func (e PaginationOptionsOrderByEnum) ToPointer() *PaginationOptionsOrderByEnum {
	return &e
}

func (e *PaginationOptionsOrderByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "a-z":
		fallthrough
	case "release-year":
		fallthrough
	case "date-added":
		*e = PaginationOptionsOrderByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaginationOptionsOrderByEnum: %v", v)
	}
}

type PaginationOptions struct {
	// Items filtered by whether they've been fully watched or not.
	//
	// Only available on the `/account/profile/watched/list` endpoint currently.
	//
	Completed *bool `json:"completed,omitempty"`
	// Specific item type filter.
	ItemType *PaginationOptionsItemTypeEnum `json:"itemType,omitempty"`
	// The maximum rating (inclusive) of items returned, e.g. 'AUOFLC-PG'.
	MaxRating *string `json:"maxRating,omitempty"`
	// The applied sort order if any.
	Order *PaginationOptionsOrderEnum `json:"order,omitempty"`
	// The applied sort ordering property if any.
	OrderBy *PaginationOptionsOrderByEnum `json:"orderBy,omitempty"`
	// The number of items to return in a list page.
	PageSize *int `json:"pageSize,omitempty"`
}
