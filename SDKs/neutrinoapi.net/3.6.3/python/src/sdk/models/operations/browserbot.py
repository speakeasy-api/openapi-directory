"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import browserbotresponse as shared_browserbotresponse
from typing import Optional


@dataclasses.dataclass
class BrowserBotRequestBody:
    
    url: str = dataclasses.field(metadata={'form': { 'field_name': 'url' }})
    r"""The URL to load"""  
    delay: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'delay' }})
    r"""Delay in seconds to wait before capturing any page data, executing selectors or JavaScript"""  
    exec: Optional[list[str]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'exec' }})
    r"""Execute JavaScript on the website. This parameter accepts JavaScript as either a string containing JavaScript or for sending multiple separate statements a JSON array or POST array can also be used. If a statement returns any value it will be returned in the 'exec-results' response. You can also use the following specially defined user interaction functions: <br> <br> <div> sleep(seconds); Just wait/sleep for the specified number of seconds. <br>click('selector'); Click on the first element matching the given selector. <br>focus('selector'); Focus on the first element matching the given selector. <br>keys('characters'); Send the specified keyboard characters. Use click() or focus() first to send keys to a specific element. <br>enter(); Send the Enter key. <br>tab(); Send the Tab key. <br> </div>"""  
    ignore_certificate_errors: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ignore-certificate-errors' }})
    r"""Ignore any TLS/SSL certificate errors and load the page anyway"""  
    selector: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'selector' }})
    r"""Extract content from the page DOM using this selector. Commonly known as a CSS selector, you can find a good reference <a href=\\"https://www.w3schools.com/cssref/css_selectors.asp\\">here</a>"""  
    timeout: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'timeout' }})
    r"""Timeout in seconds. Give up if still trying to load the page after this number of seconds"""  
    user_agent: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'user-agent' }})
    r"""Override the browsers default user-agent string with this one"""  
    

@dataclasses.dataclass
class BrowserBotResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Your API request has been rejected. Check error code for details"""  
    browser_bot_response: Optional[shared_browserbotresponse.BrowserBotResponse] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    