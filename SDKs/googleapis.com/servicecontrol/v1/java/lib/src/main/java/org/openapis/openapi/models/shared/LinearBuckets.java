/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LinearBuckets - Describing buckets with constant width.
 */
public class LinearBuckets {
    /**
     * The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numFiniteBuckets")
    public Integer numFiniteBuckets;
    public LinearBuckets withNumFiniteBuckets(Integer numFiniteBuckets) {
        this.numFiniteBuckets = numFiniteBuckets;
        return this;
    }
    
    /**
     * The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Double offset;
    public LinearBuckets withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be strictly positive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Double width;
    public LinearBuckets withWidth(Double width) {
        this.width = width;
        return this;
    }
    
}
