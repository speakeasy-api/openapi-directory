/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class FetchTaskQueueStatisticsRequest {
    /**
     * Only calculate statistics from this date and time and earlier, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EndDate")
    public OffsetDateTime endDate;

    public FetchTaskQueueStatisticsRequest withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * Only calculate statistics since this many minutes in the past. The default is 15 minutes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Minutes")
    public Long minutes;

    public FetchTaskQueueStatisticsRequest withMinutes(Long minutes) {
        this.minutes = minutes;
        return this;
    }
    
    /**
     * A comma separated list of values that describes the thresholds, in seconds, to calculate statistics on. For each threshold specified, the number of Tasks canceled and reservations accepted above and below the specified thresholds in seconds are computed.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SplitByWaitTime")
    public String splitByWaitTime;

    public FetchTaskQueueStatisticsRequest withSplitByWaitTime(String splitByWaitTime) {
        this.splitByWaitTime = splitByWaitTime;
        return this;
    }
    
    /**
     * Only calculate statistics from this date and time and later, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=StartDate")
    public OffsetDateTime startDate;

    public FetchTaskQueueStatisticsRequest withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * Only calculate real-time and cumulative statistics for the specified TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TaskChannel")
    public String taskChannel;

    public FetchTaskQueueStatisticsRequest withTaskChannel(String taskChannel) {
        this.taskChannel = taskChannel;
        return this;
    }
    
    /**
     * The SID of the TaskQueue for which to fetch statistics.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=TaskQueueSid")
    public String taskQueueSid;

    public FetchTaskQueueStatisticsRequest withTaskQueueSid(String taskQueueSid) {
        this.taskQueueSid = taskQueueSid;
        return this;
    }
    
    /**
     * The SID of the Workspace with the TaskQueue to fetch.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=WorkspaceSid")
    public String workspaceSid;

    public FetchTaskQueueStatisticsRequest withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
    public FetchTaskQueueStatisticsRequest(@JsonProperty("TaskQueueSid") String taskQueueSid, @JsonProperty("WorkspaceSid") String workspaceSid) {
        this.taskQueueSid = taskQueueSid;
        this.workspaceSid = workspaceSid;
  }
}
