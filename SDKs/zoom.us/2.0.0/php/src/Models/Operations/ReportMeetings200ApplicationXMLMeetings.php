<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ReportMeetings200ApplicationXMLMeetings
{
    /**
     * Custom keys and values assigned to the meeting.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\ReportMeetings200ApplicationXMLMeetingsCustomKeys> $customKeys
     */
	
    public ?array $customKeys = null;
    
    /**
     * Meeting duration.
     * 
     * @var ?int $duration
     */
	
    public ?int $duration = null;
    
    /**
     * Meeting end time.
     * 
     * @var ?\DateTime $endTime
     */
	
    public ?\DateTime $endTime = null;
    
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):            Unique identifier of the meeting in "**long**" format(represented as int64
     * 
     * data type in JSON), also known as the meeting number.
     * 
     * 
     * @var ?int $id
     */
	
    public ?int $id = null;
    
    /**
     * Number of meeting participants.
     * 
     * @var ?int $participantsCount
     */
	
    public ?int $participantsCount = null;
    
    /**
     * Indicates whether the meeting was created directly through Zoom or through an API request.
     * 
     * @var ?string $source
     */
	
    public ?string $source = null;
    
    /**
     * Meeting start time.
     * 
     * @var ?\DateTime $startTime
     */
	
    public ?\DateTime $startTime = null;
    
    /**
     * Meeting topic.
     * 
     * @var ?string $topic
     */
	
    public ?string $topic = null;
    
    /**
     * Sum of meeting minutes from all participants in the meeting.
     * 
     * @var ?int $totalMinutes
     */
	
    public ?int $totalMinutes = null;
    
    /**
     * 
     * Meeting Type:<br> `1` - Instant Meeting<br> `2` - Scheduled Meeting<br> `3` - Recurring Meeting with no fixed time.<br>
     * `4` - This value is returned if the meeting was started using a Personal Meeting ID. <br>
     * `8` - Recurring Meeting with a fixed time. 
     * 
     * @var ?int $type
     */
	
    public ?int $type = null;
    
    /**
     * User email.
     * 
     * @var ?string $userEmail
     */
	
    public ?string $userEmail = null;
    
    /**
     * User display name.
     * 
     * @var ?string $userName
     */
	
    public ?string $userName = null;
    
    /**
     * Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
     * 
     * @var ?string $uuid
     */
	
    public ?string $uuid = null;
    
	public function __construct()
	{
		$this->customKeys = null;
		$this->duration = null;
		$this->endTime = null;
		$this->id = null;
		$this->participantsCount = null;
		$this->source = null;
		$this->startTime = null;
		$this->topic = null;
		$this->totalMinutes = null;
		$this->type = null;
		$this->userEmail = null;
		$this->userName = null;
		$this->uuid = null;
	}
}
