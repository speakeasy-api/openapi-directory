/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CampaignSound - Represents a sound recording from account's sound library which can be used in different API operations
 */
public class CampaignSound {
    /**
     * The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created")
    public Long created;
    public CampaignSound withCreated(Long created) {
        this.created = created;
        return this;
    }
    
    /**
     * True if the same sound file exists in a sound library of account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duplicate")
    public Boolean duplicate;
    public CampaignSound withDuplicate(Boolean duplicate) {
        this.duplicate = duplicate;
        return this;
    }
    
    /**
     * An id of a sound file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public CampaignSound withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Length of a sound in seconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lengthInSeconds")
    public Integer lengthInSeconds;
    public CampaignSound withLengthInSeconds(Integer lengthInSeconds) {
        this.lengthInSeconds = lengthInSeconds;
        return this;
    }
    
    /**
     * A name of a sound file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CampaignSound withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A current status of a sound, available values: UPLOAD - uploading is in progress, RECORDING - recording of sound is in progress, ACTIVE - sound is ready, FAILED, ARCHIVED - sound was archived, SCRUBBED - sound was scrubbed 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CampaignSoundStatusEnum status;
    public CampaignSound withStatus(CampaignSoundStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
