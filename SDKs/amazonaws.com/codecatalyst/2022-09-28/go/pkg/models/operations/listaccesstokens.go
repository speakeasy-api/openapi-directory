// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListAccessTokensQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListAccessTokensRequestBody struct {
	// The maximum number of results to show in a single call to this API. If the number of results is larger than the number you specified, the response will include a <code>NextToken</code> element, which you can use to obtain additional results.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// A token returned from a call to this API to indicate the next batch of results to return, if any.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListAccessTokensRequest struct {
	QueryParams ListAccessTokensQueryParams
	Request     ListAccessTokensRequestBody `request:"mediaType=application/json"`
}

type ListAccessTokensResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	ListAccessTokensResponse *shared.ListAccessTokensResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
