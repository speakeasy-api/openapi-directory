/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class CustomEventLinksSelf extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class CustomEventLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => CustomEventLinksSelf)
  self?: CustomEventLinksSelf;
}

/**
 * Custom
 */
export class CustomEvent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => CustomEventLinks)
  links?: CustomEventLinks;

  /**
   * The body of your `custom` event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: Record<string, any>;

  /**
   * The member ID of the sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * The ID of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The time that the event happened
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * The event type (`custom:<YOUR_IDENTIFIER>`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
