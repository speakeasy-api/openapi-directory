/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PeeringInput - Represents a Managed Service for Microsoft Active Directory Peering.
 */
public class PeeringInput {
    /**
     * Required. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizedNetwork")
    public String authorizedNetwork;
    public PeeringInput withAuthorizedNetwork(String authorizedNetwork) {
        this.authorizedNetwork = authorizedNetwork;
        return this;
    }
    
    /**
     * Required. Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form: `projects/{project_id}/locations/global/domains/{domain_name}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainResource")
    public String domainResource;
    public PeeringInput withDomainResource(String domainResource) {
        this.domainResource = domainResource;
        return this;
    }
    
    /**
     * Optional. Resource labels to represent user-provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public PeeringInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
}
