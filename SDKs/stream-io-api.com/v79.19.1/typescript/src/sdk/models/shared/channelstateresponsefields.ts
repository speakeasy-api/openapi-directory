/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelMember } from "./channelmember";
import { PendingMessage } from "./pendingmessage";
import { Read } from "./read";
import { Expose, Transform, Type } from "class-transformer";

export class ChannelStateResponseFields extends SpeakeasyBase {
  /**
   * Represents channel in chat
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: Record<string, any>;

  /**
   * Whether this channel is hidden or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden?: boolean;

  /**
   * Messages before this date are hidden from the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hide_messages_before" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  hideMessagesBefore?: Date;

  /**
   * List of channel members
   */
  @SpeakeasyMetadata({ elemType: ChannelMember })
  @Expose({ name: "members" })
  @Type(() => ChannelMember)
  members: ChannelMember[];

  @SpeakeasyMetadata()
  @Expose({ name: "membership" })
  @Type(() => ChannelMember)
  membership?: ChannelMember;

  /**
   * List of channel messages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messages" })
  messages: Record<string, any>[];

  /**
   * Pending messages that this user has sent
   */
  @SpeakeasyMetadata({ elemType: PendingMessage })
  @Expose({ name: "pending_messages" })
  @Type(() => PendingMessage)
  pendingMessages?: PendingMessage[];

  /**
   * List of pinned messages in the channel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pinned_messages" })
  pinnedMessages: Record<string, any>[];

  /**
   * List of read states
   */
  @SpeakeasyMetadata({ elemType: Read })
  @Expose({ name: "read" })
  @Type(() => Read)
  read?: Read[];

  /**
   * Number of channel watchers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "watcher_count" })
  watcherCount?: number;

  /**
   * List of user who is watching the channel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "watchers" })
  watchers?: Record<string, any>[];
}
