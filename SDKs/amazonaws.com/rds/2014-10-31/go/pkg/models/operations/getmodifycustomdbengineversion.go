// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyCustomDBEngineVersionActionEnum
type GETModifyCustomDBEngineVersionActionEnum string

const (
	GETModifyCustomDBEngineVersionActionEnumModifyCustomDbEngineVersion GETModifyCustomDBEngineVersionActionEnum = "ModifyCustomDBEngineVersion"
)

func (e GETModifyCustomDBEngineVersionActionEnum) ToPointer() *GETModifyCustomDBEngineVersionActionEnum {
	return &e
}

func (e *GETModifyCustomDBEngineVersionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyCustomDBEngineVersion":
		*e = GETModifyCustomDBEngineVersionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCustomDBEngineVersionActionEnum: %v", v)
	}
}

// GETModifyCustomDBEngineVersionStatusEnum - <p>The availability status to be assigned to the CEV. Valid values are as follows:</p> <dl> <dt>available</dt> <dd> <p>You can use this CEV to create a new RDS Custom DB instance.</p> </dd> <dt>inactive</dt> <dd> <p>You can create a new RDS Custom instance by restoring a DB snapshot with this CEV. You can't patch or create new instances with this CEV.</p> </dd> </dl> <p>You can change any status to any status. A typical reason to change status is to prevent the accidental use of a CEV, or to make a deprecated CEV eligible for use again. For example, you might change the status of your CEV from <code>available</code> to <code>inactive</code>, and from <code>inactive</code> back to <code>available</code>. To change the availability status of the CEV, it must not currently be in use by an RDS Custom instance, snapshot, or automated backup.</p>
type GETModifyCustomDBEngineVersionStatusEnum string

const (
	GETModifyCustomDBEngineVersionStatusEnumAvailable             GETModifyCustomDBEngineVersionStatusEnum = "available"
	GETModifyCustomDBEngineVersionStatusEnumInactive              GETModifyCustomDBEngineVersionStatusEnum = "inactive"
	GETModifyCustomDBEngineVersionStatusEnumInactiveExceptRestore GETModifyCustomDBEngineVersionStatusEnum = "inactive-except-restore"
)

func (e GETModifyCustomDBEngineVersionStatusEnum) ToPointer() *GETModifyCustomDBEngineVersionStatusEnum {
	return &e
}

func (e *GETModifyCustomDBEngineVersionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "inactive":
		fallthrough
	case "inactive-except-restore":
		*e = GETModifyCustomDBEngineVersionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCustomDBEngineVersionStatusEnum: %v", v)
	}
}

// GETModifyCustomDBEngineVersionVersionEnum
type GETModifyCustomDBEngineVersionVersionEnum string

const (
	GETModifyCustomDBEngineVersionVersionEnumTwoThousandAndFourteen1031 GETModifyCustomDBEngineVersionVersionEnum = "2014-10-31"
)

func (e GETModifyCustomDBEngineVersionVersionEnum) ToPointer() *GETModifyCustomDBEngineVersionVersionEnum {
	return &e
}

func (e *GETModifyCustomDBEngineVersionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETModifyCustomDBEngineVersionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCustomDBEngineVersionVersionEnum: %v", v)
	}
}

type GETModifyCustomDBEngineVersionRequest struct {
	Action GETModifyCustomDBEngineVersionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// An optional description of your CEV.
	Description *string `queryParam:"style=form,explode=true,name=Description"`
	// The DB engine. The only supported values are <code>custom-oracle-ee</code> and <code>custom-oracle-ee-cdb</code>.
	Engine string `queryParam:"style=form,explode=true,name=Engine"`
	// The custom engine version (CEV) that you want to modify. This option is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Amazon Web Services Region.
	EngineVersion string `queryParam:"style=form,explode=true,name=EngineVersion"`
	// <p>The availability status to be assigned to the CEV. Valid values are as follows:</p> <dl> <dt>available</dt> <dd> <p>You can use this CEV to create a new RDS Custom DB instance.</p> </dd> <dt>inactive</dt> <dd> <p>You can create a new RDS Custom instance by restoring a DB snapshot with this CEV. You can't patch or create new instances with this CEV.</p> </dd> </dl> <p>You can change any status to any status. A typical reason to change status is to prevent the accidental use of a CEV, or to make a deprecated CEV eligible for use again. For example, you might change the status of your CEV from <code>available</code> to <code>inactive</code>, and from <code>inactive</code> back to <code>available</code>. To change the availability status of the CEV, it must not currently be in use by an RDS Custom instance, snapshot, or automated backup.</p>
	Status            *GETModifyCustomDBEngineVersionStatusEnum `queryParam:"style=form,explode=true,name=Status"`
	Version           GETModifyCustomDBEngineVersionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyCustomDBEngineVersionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
