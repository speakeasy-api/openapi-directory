/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
 */
export enum GetOccupantsNearOutputFormatLocationDescriptorEnum {
  Any = "any",
  AccessPoint = "accessPoint",
  FrontDoorPoint = "frontDoorPoint",
  ParcelPoint = "parcelPoint",
  RooftopPoint = "rooftopPoint",
  RoutingPoint = "routingPoint",
}

/**
 * Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
 *
 * @remarks
 *
 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
 */
export enum GetOccupantsNearOutputFormatOutputFormatEnum {
  Json = "json",
  Geojson = "geojson",
  Xhtml = "xhtml",
  Kml = "kml",
  Gml = "gml",
  Csv = "csv",
  Shpz = "shpz",
}

/**
 * The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
 */
export enum GetOccupantsNearOutputFormatOutputSrsEnum {
  FourThousandThreeHundredAndTwentySix = "4326",
  FourThousandTwoHundredAndSixtyNine = "4269",
  ThreeThousandAndFive = "3005",
  TwentySixThousandNineHundredAndSeven = "26907",
  TwentySixThousandNineHundredAndEight = "26908",
  TwentySixThousandNineHundredAndNine = "26909",
  TwentySixThousandNineHundredAndTen = "26910",
  TwentySixThousandNineHundredAndEleven = "26911",
}

export class GetOccupantsNearOutputFormatRequest extends SpeakeasyBase {
  /**
   * If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=brief" })
  brief?: boolean;

  /**
   * Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locationDescriptor",
  })
  locationDescriptor?: GetOccupantsNearOutputFormatLocationDescriptorEnum;

  /**
   * The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxDistance",
  })
  maxDistance?: number;

  /**
   * The maximum number of search results to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: number;

  /**
   * Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
   *
   * @remarks
   *
   * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=outputFormat",
  })
  outputFormat: GetOccupantsNearOutputFormatOutputFormatEnum;

  /**
   * The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=outputSRS",
  })
  outputSRS?: GetOccupantsNearOutputFormatOutputSrsEnum;

  /**
   * The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=point" })
  point: string;

  /**
   * The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=setBack",
  })
  setBack?: number;

  /**
   * Example: schools;courts;employment<br>A list of tags separated by semicolons.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tags" })
  tags?: string;
}

export class GetOccupantsNearOutputFormatResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
