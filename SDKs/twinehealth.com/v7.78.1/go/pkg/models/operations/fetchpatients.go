// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FetchPatientsRequest struct {
	// If not specified, return all patients. If set to 'true' return only archived patients, if set to 'false', return only patients who are not archived.
	FilterArchived *bool `queryParam:"style=form,explode=true,name=filter[archived]"`
	// The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
	//
	FilterCreatedAt *string `queryParam:"style=form,explode=true,name=filter[created_at]"`
	// Comma-separated list of group ids. Note that either `filter[group]` or `filter[organization]` must be specified.
	FilterGroups *string `queryParam:"style=form,explode=true,name=filter[groups]"`
	// Identifier system (example: "MyEHR") - requires a "filter[identifier][value]" parameter
	FilterIdentifierSystem *string `queryParam:"style=form,explode=true,name=filter[identifier][system]"`
	// Identifier value (example: "12345") - requires a "filter[identifier][system]" parameter
	FilterIdentifierValue *string `queryParam:"style=form,explode=true,name=filter[identifier][value]"`
	// Fitbit Plus organization id. Note that either `filter[group]` or `filter[organization]` must be specified.
	FilterOrganization *string `queryParam:"style=form,explode=true,name=filter[organization]"`
	// The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
	//
	FilterUpdatedAt *string `queryParam:"style=form,explode=true,name=filter[updated_at]"`
	// Page cursor
	PageCursor *string `queryParam:"style=form,explode=true,name=page[cursor]"`
	// Page limit
	PageLimit *int64 `queryParam:"style=form,explode=true,name=page[limit]"`
	// Page number
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Page size
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
}

type FetchPatientsResponse struct {
	ContentType string
	// Unauthorized
	FetchErrorResponse *shared.FetchErrorResponse
	// OK
	FetchPatientsResponse *shared.FetchPatientsResponse
	StatusCode            int
	RawResponse           *http.Response
}
