"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanConfig = exports.ScanConfigUserAgentEnum = exports.ScanConfigRiskLevelEnum = exports.ScanConfigExportToSecurityCommandCenterEnum = void 0;
var utils_1 = require("../../../internal/utils");
var authentication_1 = require("./authentication");
var schedule_1 = require("./schedule");
var class_transformer_1 = require("class-transformer");
/**
 * Controls export of scan configurations and results to Security Command Center.
 */
var ScanConfigExportToSecurityCommandCenterEnum;
(function (ScanConfigExportToSecurityCommandCenterEnum) {
    ScanConfigExportToSecurityCommandCenterEnum["ExportToSecurityCommandCenterUnspecified"] = "EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED";
    ScanConfigExportToSecurityCommandCenterEnum["Enabled"] = "ENABLED";
    ScanConfigExportToSecurityCommandCenterEnum["Disabled"] = "DISABLED";
})(ScanConfigExportToSecurityCommandCenterEnum = exports.ScanConfigExportToSecurityCommandCenterEnum || (exports.ScanConfigExportToSecurityCommandCenterEnum = {}));
/**
 * The risk level selected for the scan
 */
var ScanConfigRiskLevelEnum;
(function (ScanConfigRiskLevelEnum) {
    ScanConfigRiskLevelEnum["RiskLevelUnspecified"] = "RISK_LEVEL_UNSPECIFIED";
    ScanConfigRiskLevelEnum["Normal"] = "NORMAL";
    ScanConfigRiskLevelEnum["Low"] = "LOW";
})(ScanConfigRiskLevelEnum = exports.ScanConfigRiskLevelEnum || (exports.ScanConfigRiskLevelEnum = {}));
/**
 * The user agent used during scanning.
 */
var ScanConfigUserAgentEnum;
(function (ScanConfigUserAgentEnum) {
    ScanConfigUserAgentEnum["UserAgentUnspecified"] = "USER_AGENT_UNSPECIFIED";
    ScanConfigUserAgentEnum["ChromeLinux"] = "CHROME_LINUX";
    ScanConfigUserAgentEnum["ChromeAndroid"] = "CHROME_ANDROID";
    ScanConfigUserAgentEnum["SafariIphone"] = "SAFARI_IPHONE";
})(ScanConfigUserAgentEnum = exports.ScanConfigUserAgentEnum || (exports.ScanConfigUserAgentEnum = {}));
/**
 * A ScanConfig resource contains the configurations to launch a scan.
 */
var ScanConfig = /** @class */ (function (_super) {
    __extends(ScanConfig, _super);
    function ScanConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication" }),
        (0, class_transformer_1.Type)(function () { return authentication_1.Authentication; }),
        __metadata("design:type", authentication_1.Authentication)
    ], ScanConfig.prototype, "authentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blacklistPatterns" }),
        __metadata("design:type", Array)
    ], ScanConfig.prototype, "blacklistPatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], ScanConfig.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exportToSecurityCommandCenter" }),
        __metadata("design:type", String)
    ], ScanConfig.prototype, "exportToSecurityCommandCenter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ignoreHttpStatusErrors" }),
        __metadata("design:type", Boolean)
    ], ScanConfig.prototype, "ignoreHttpStatusErrors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "managedScan" }),
        __metadata("design:type", Boolean)
    ], ScanConfig.prototype, "managedScan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxQps" }),
        __metadata("design:type", Number)
    ], ScanConfig.prototype, "maxQps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ScanConfig.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "riskLevel" }),
        __metadata("design:type", String)
    ], ScanConfig.prototype, "riskLevel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule" }),
        (0, class_transformer_1.Type)(function () { return schedule_1.Schedule; }),
        __metadata("design:type", schedule_1.Schedule)
    ], ScanConfig.prototype, "schedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startingUrls" }),
        __metadata("design:type", Array)
    ], ScanConfig.prototype, "startingUrls", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticIpScan" }),
        __metadata("design:type", Boolean)
    ], ScanConfig.prototype, "staticIpScan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userAgent" }),
        __metadata("design:type", String)
    ], ScanConfig.prototype, "userAgent", void 0);
    return ScanConfig;
}(utils_1.SpeakeasyBase));
exports.ScanConfig = ScanConfig;
