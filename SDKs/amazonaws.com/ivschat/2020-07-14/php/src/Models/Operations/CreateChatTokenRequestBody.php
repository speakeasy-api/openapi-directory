<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateChatTokenRequestBody
{
    /**
     * Application-provided attributes to encode into the token and attach to a chat session. Map keys and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total.
     * 
     * @var ?array<string, string> $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('attributes')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributes = null;
    
    /**
     * Set of capabilities that the user is allowed to perform in the room. Default: None (the capability to view messages is implicitly included in all requests).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ChatTokenCapabilityEnum> $capabilities
     */
	#[\JMS\Serializer\Annotation\SerializedName('capabilities')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ChatTokenCapabilityEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $capabilities = null;
    
    /**
     * Identifier of the room that the client is trying to access. Currently this must be an ARN. 
     * 
     * @var string $roomIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('roomIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $roomIdentifier;
    
    /**
     * Session duration (in minutes), after which the session expires. Default: 60 (1 hour).
     * 
     * @var ?int $sessionDurationInMinutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('sessionDurationInMinutes')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sessionDurationInMinutes = null;
    
    /**
     * Application-provided ID that uniquely identifies the user associated with this token. This can be any UTF-8 encoded text.
     * 
     * @var string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('userId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $userId;
    
	public function __construct()
	{
		$this->attributes = null;
		$this->capabilities = null;
		$this->roomIdentifier = "";
		$this->sessionDurationInMinutes = null;
		$this->userId = "";
	}
}
