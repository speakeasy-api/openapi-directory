// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClusterStateReplicationStateEnum - Output only. The state of replication for the table in this cluster.
type ClusterStateReplicationStateEnum string

const (
	ClusterStateReplicationStateEnumStateNotKnown        ClusterStateReplicationStateEnum = "STATE_NOT_KNOWN"
	ClusterStateReplicationStateEnumInitializing         ClusterStateReplicationStateEnum = "INITIALIZING"
	ClusterStateReplicationStateEnumPlannedMaintenance   ClusterStateReplicationStateEnum = "PLANNED_MAINTENANCE"
	ClusterStateReplicationStateEnumUnplannedMaintenance ClusterStateReplicationStateEnum = "UNPLANNED_MAINTENANCE"
	ClusterStateReplicationStateEnumReady                ClusterStateReplicationStateEnum = "READY"
	ClusterStateReplicationStateEnumReadyOptimizing      ClusterStateReplicationStateEnum = "READY_OPTIMIZING"
)

func (e *ClusterStateReplicationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_NOT_KNOWN":
		fallthrough
	case "INITIALIZING":
		fallthrough
	case "PLANNED_MAINTENANCE":
		fallthrough
	case "UNPLANNED_MAINTENANCE":
		fallthrough
	case "READY":
		fallthrough
	case "READY_OPTIMIZING":
		*e = ClusterStateReplicationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterStateReplicationStateEnum: %s", s)
	}
}

// ClusterState - The state of a table's data in a particular cluster.
type ClusterState struct {
	// Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS.
	EncryptionInfo []EncryptionInfo `json:"encryptionInfo,omitempty"`
	// Output only. The state of replication for the table in this cluster.
	ReplicationState *ClusterStateReplicationStateEnum `json:"replicationState,omitempty"`
}
