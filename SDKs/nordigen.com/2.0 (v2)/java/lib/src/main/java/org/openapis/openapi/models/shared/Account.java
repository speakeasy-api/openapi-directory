/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Account - The representation of a bank account.
 */
public class Account {
    /**
     * The date &amp; time at which the account object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public Account withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * The Account IBAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;

    public Account withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * The ID of this Account, used to refer to this account in other API calls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Account withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ASPSP associated with this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("institution_id")
    public String institutionId;

    public Account withInstitutionId(String institutionId) {
        this.institutionId = institutionId;
        return this;
    }
    
    /**
     * The date &amp; time at which the account object was last accessed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_accessed")
    public OffsetDateTime lastAccessed;

    public Account withLastAccessed(OffsetDateTime lastAccessed) {
        this.lastAccessed = lastAccessed;
        return this;
    }
    
    /**
     * The name of the account owner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_name")
    public String ownerName;

    public Account withOwnerName(String ownerName) {
        this.ownerName = ownerName;
        return this;
    }
    
    /**
     * The processing status of this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public AccountAccountStatusEnum status;

    public Account withStatus(AccountAccountStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public Account(){}
}
