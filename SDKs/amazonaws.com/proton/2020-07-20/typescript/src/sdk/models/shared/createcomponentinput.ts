/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateComponentInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentName" })
  environmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "manifest" })
  manifest: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceInstanceName" })
  serviceInstanceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceName" })
  serviceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceSpec" })
  serviceSpec?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "templateFile" })
  templateFile: string;
}
