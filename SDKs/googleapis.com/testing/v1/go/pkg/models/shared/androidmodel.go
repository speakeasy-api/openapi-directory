// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AndroidModelFormEnum - Whether this device is virtual or physical.
type AndroidModelFormEnum string

const (
	AndroidModelFormEnumDeviceFormUnspecified AndroidModelFormEnum = "DEVICE_FORM_UNSPECIFIED"
	AndroidModelFormEnumVirtual               AndroidModelFormEnum = "VIRTUAL"
	AndroidModelFormEnumPhysical              AndroidModelFormEnum = "PHYSICAL"
	AndroidModelFormEnumEmulator              AndroidModelFormEnum = "EMULATOR"
)

func (e AndroidModelFormEnum) ToPointer() *AndroidModelFormEnum {
	return &e
}

func (e *AndroidModelFormEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVICE_FORM_UNSPECIFIED":
		fallthrough
	case "VIRTUAL":
		fallthrough
	case "PHYSICAL":
		fallthrough
	case "EMULATOR":
		*e = AndroidModelFormEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AndroidModelFormEnum: %v", v)
	}
}

// AndroidModelFormFactorEnum - Whether this device is a phone, tablet, wearable, etc.
type AndroidModelFormFactorEnum string

const (
	AndroidModelFormFactorEnumDeviceFormFactorUnspecified AndroidModelFormFactorEnum = "DEVICE_FORM_FACTOR_UNSPECIFIED"
	AndroidModelFormFactorEnumPhone                       AndroidModelFormFactorEnum = "PHONE"
	AndroidModelFormFactorEnumTablet                      AndroidModelFormFactorEnum = "TABLET"
	AndroidModelFormFactorEnumWearable                    AndroidModelFormFactorEnum = "WEARABLE"
)

func (e AndroidModelFormFactorEnum) ToPointer() *AndroidModelFormFactorEnum {
	return &e
}

func (e *AndroidModelFormFactorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVICE_FORM_FACTOR_UNSPECIFIED":
		fallthrough
	case "PHONE":
		fallthrough
	case "TABLET":
		fallthrough
	case "WEARABLE":
		*e = AndroidModelFormFactorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AndroidModelFormFactorEnum: %v", v)
	}
}

// AndroidModel - A description of an Android device tests may be run on.
type AndroidModel struct {
	// The company that this device is branded with. Example: "Google", "Samsung".
	Brand *string `json:"brand,omitempty"`
	// The name of the industrial design. This corresponds to android.os.Build.DEVICE.
	Codename *string `json:"codename,omitempty"`
	// Whether this device is virtual or physical.
	Form *AndroidModelFormEnum `json:"form,omitempty"`
	// Whether this device is a phone, tablet, wearable, etc.
	FormFactor *AndroidModelFormFactorEnum `json:"formFactor,omitempty"`
	// The unique opaque id for this model. Use this for invoking the TestExecutionService.
	ID *string `json:"id,omitempty"`
	// True if and only if tests with this model are recorded by stitching together screenshots. See use_low_spec_video_recording in device config.
	LowFpsVideoRecording *bool `json:"lowFpsVideoRecording,omitempty"`
	// The manufacturer of this device.
	Manufacturer *string `json:"manufacturer,omitempty"`
	// The human-readable marketing name for this device model. Examples: "Nexus 5", "Galaxy S5".
	Name *string `json:"name,omitempty"`
	// Version-specific information of an Android model.
	PerVersionInfo []PerAndroidVersionInfo `json:"perVersionInfo,omitempty"`
	// Screen density in DPI. This corresponds to ro.sf.lcd_density
	ScreenDensity *int `json:"screenDensity,omitempty"`
	// Screen size in the horizontal (X) dimension measured in pixels.
	ScreenX *int `json:"screenX,omitempty"`
	// Screen size in the vertical (Y) dimension measured in pixels.
	ScreenY *int `json:"screenY,omitempty"`
	// The list of supported ABIs for this device. This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2. The most preferred ABI is the first element in the list. Elements are optionally prefixed by "version_id:" (where version_id is the id of an AndroidVersion), denoting an ABI that is supported only on a particular version.
	SupportedAbis []string `json:"supportedAbis,omitempty"`
	// The set of Android versions this device supports.
	SupportedVersionIds []string `json:"supportedVersionIds,omitempty"`
	// Tags for this dimension. Examples: "default", "preview", "deprecated".
	Tags []string `json:"tags,omitempty"`
	// URL of a thumbnail image (photo) of the device.
	ThumbnailURL *string `json:"thumbnailUrl,omitempty"`
}
