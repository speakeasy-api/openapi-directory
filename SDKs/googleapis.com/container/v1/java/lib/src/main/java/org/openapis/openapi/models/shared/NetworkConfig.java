/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NetworkConfig - NetworkConfig reports the relative names of network &amp; subnetwork.
 */
public class NetworkConfig {
    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datapathProvider")
    public NetworkConfigDatapathProviderEnum datapathProvider;

    public NetworkConfig withDatapathProvider(NetworkConfigDatapathProviderEnum datapathProvider) {
        this.datapathProvider = datapathProvider;
        return this;
    }
    
    /**
     * DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultSnatStatus")
    public DefaultSnatStatus defaultSnatStatus;

    public NetworkConfig withDefaultSnatStatus(DefaultSnatStatus defaultSnatStatus) {
        this.defaultSnatStatus = defaultSnatStatus;
        return this;
    }
    
    /**
     * DNSConfig contains the desired set of options for configuring clusterDNS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsConfig")
    public DNSConfig dnsConfig;

    public NetworkConfig withDnsConfig(DNSConfig dnsConfig) {
        this.dnsConfig = dnsConfig;
        return this;
    }
    
    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableIntraNodeVisibility")
    public Boolean enableIntraNodeVisibility;

    public NetworkConfig withEnableIntraNodeVisibility(Boolean enableIntraNodeVisibility) {
        this.enableIntraNodeVisibility = enableIntraNodeVisibility;
        return this;
    }
    
    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableL4ilbSubsetting")
    public Boolean enableL4ilbSubsetting;

    public NetworkConfig withEnableL4ilbSubsetting(Boolean enableL4ilbSubsetting) {
        this.enableL4ilbSubsetting = enableL4ilbSubsetting;
        return this;
    }
    
    /**
     * GatewayAPIConfig contains the desired config of Gateway API on this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatewayApiConfig")
    public GatewayAPIConfig gatewayApiConfig;

    public NetworkConfig withGatewayApiConfig(GatewayAPIConfig gatewayApiConfig) {
        this.gatewayApiConfig = gatewayApiConfig;
        return this;
    }
    
    /**
     * Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public NetworkConfig withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateIpv6GoogleAccess")
    public NetworkConfigPrivateIpv6GoogleAccessEnum privateIpv6GoogleAccess;

    public NetworkConfig withPrivateIpv6GoogleAccess(NetworkConfigPrivateIpv6GoogleAccessEnum privateIpv6GoogleAccess) {
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        return this;
    }
    
    /**
     * Config to block services with externalIPs field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceExternalIpsConfig")
    public ServiceExternalIPsConfig serviceExternalIpsConfig;

    public NetworkConfig withServiceExternalIpsConfig(ServiceExternalIPsConfig serviceExternalIpsConfig) {
        this.serviceExternalIpsConfig = serviceExternalIpsConfig;
        return this;
    }
    
    /**
     * Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;

    public NetworkConfig withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    public NetworkConfig(){}
}
