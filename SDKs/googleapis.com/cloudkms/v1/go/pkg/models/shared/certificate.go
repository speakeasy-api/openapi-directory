// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Certificate - A Certificate represents an X.509 certificate used to authenticate HTTPS connections to EKM replicas.
type Certificate struct {
	// Output only. The issuer distinguished name in RFC 2253 format. Only present if parsed is true.
	Issuer *string `json:"issuer,omitempty"`
	// Output only. The certificate is not valid after this time. Only present if parsed is true.
	NotAfterTime *string `json:"notAfterTime,omitempty"`
	// Output only. The certificate is not valid before this time. Only present if parsed is true.
	NotBeforeTime *string `json:"notBeforeTime,omitempty"`
	// Output only. True if the certificate was parsed successfully.
	Parsed *bool `json:"parsed,omitempty"`
	// Required. The raw certificate bytes in DER format.
	RawDer *string `json:"rawDer,omitempty"`
	// Output only. The certificate serial number as a hex string. Only present if parsed is true.
	SerialNumber *string `json:"serialNumber,omitempty"`
	// Output only. The SHA-256 certificate fingerprint as a hex string. Only present if parsed is true.
	Sha256Fingerprint *string `json:"sha256Fingerprint,omitempty"`
	// Output only. The subject distinguished name in RFC 2253 format. Only present if parsed is true.
	Subject *string `json:"subject,omitempty"`
	// Output only. The subject Alternative DNS names. Only present if parsed is true.
	SubjectAlternativeDNSNames []string `json:"subjectAlternativeDnsNames,omitempty"`
}

// CertificateInput - A Certificate represents an X.509 certificate used to authenticate HTTPS connections to EKM replicas.
type CertificateInput struct {
	// Required. The raw certificate bytes in DER format.
	RawDer *string `json:"rawDer,omitempty"`
}
