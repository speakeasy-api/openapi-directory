/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class NewAttendancePeriodRequestAttendances extends SpeakeasyBase {
  /**
   * Break in minutes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "break" })
  break: number;

  /**
   * Optional comment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment: string;

  /**
   * Attendance date as YYYY-MM-DD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date: Date;

  /**
   * Employee identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee" })
  employee: number;

  /**
   * End time as HH:MM
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_time" })
  endTime: string;

  /**
   * Start time as HH:MM
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  startTime: string;
}

/**
 * List of attendance periods to create
 */
export class NewAttendancePeriodRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: NewAttendancePeriodRequestAttendances })
  @Expose({ name: "attendances" })
  @Type(() => NewAttendancePeriodRequestAttendances)
  attendances?: NewAttendancePeriodRequestAttendances[];
}
