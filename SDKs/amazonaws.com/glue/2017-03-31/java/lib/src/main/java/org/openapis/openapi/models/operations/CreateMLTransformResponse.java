/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateMLTransformResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public CreateMLTransformResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * AlreadyExistsException
     */
    
    public Object alreadyExistsException;

    public CreateMLTransformResponse withAlreadyExistsException(Object alreadyExistsException) {
        this.alreadyExistsException = alreadyExistsException;
        return this;
    }
    
    
    public String contentType;

    public CreateMLTransformResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateMLTransformResponse createMLTransformResponse;

    public CreateMLTransformResponse withCreateMLTransformResponse(org.openapis.openapi.models.shared.CreateMLTransformResponse createMLTransformResponse) {
        this.createMLTransformResponse = createMLTransformResponse;
        return this;
    }
    
    /**
     * IdempotentParameterMismatchException
     */
    
    public Object idempotentParameterMismatchException;

    public CreateMLTransformResponse withIdempotentParameterMismatchException(Object idempotentParameterMismatchException) {
        this.idempotentParameterMismatchException = idempotentParameterMismatchException;
        return this;
    }
    
    /**
     * InternalServiceException
     */
    
    public Object internalServiceException;

    public CreateMLTransformResponse withInternalServiceException(Object internalServiceException) {
        this.internalServiceException = internalServiceException;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;

    public CreateMLTransformResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    /**
     * OperationTimeoutException
     */
    
    public Object operationTimeoutException;

    public CreateMLTransformResponse withOperationTimeoutException(Object operationTimeoutException) {
        this.operationTimeoutException = operationTimeoutException;
        return this;
    }
    
    /**
     * ResourceNumberLimitExceededException
     */
    
    public Object resourceNumberLimitExceededException;

    public CreateMLTransformResponse withResourceNumberLimitExceededException(Object resourceNumberLimitExceededException) {
        this.resourceNumberLimitExceededException = resourceNumberLimitExceededException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateMLTransformResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateMLTransformResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public CreateMLTransformResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
