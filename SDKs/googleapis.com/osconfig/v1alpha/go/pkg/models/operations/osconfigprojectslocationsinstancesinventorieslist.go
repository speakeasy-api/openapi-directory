// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type OsconfigProjectsLocationsInstancesInventoriesListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// OsconfigProjectsLocationsInstancesInventoriesListViewEnum - Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC.
type OsconfigProjectsLocationsInstancesInventoriesListViewEnum string

const (
	OsconfigProjectsLocationsInstancesInventoriesListViewEnumInventoryViewUnspecified OsconfigProjectsLocationsInstancesInventoriesListViewEnum = "INVENTORY_VIEW_UNSPECIFIED"
	OsconfigProjectsLocationsInstancesInventoriesListViewEnumBasic                    OsconfigProjectsLocationsInstancesInventoriesListViewEnum = "BASIC"
	OsconfigProjectsLocationsInstancesInventoriesListViewEnumFull                     OsconfigProjectsLocationsInstancesInventoriesListViewEnum = "FULL"
)

func (e *OsconfigProjectsLocationsInstancesInventoriesListViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INVENTORY_VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "FULL":
		*e = OsconfigProjectsLocationsInstancesInventoriesListViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OsconfigProjectsLocationsInstancesInventoriesListViewEnum: %s", s)
	}
}

type OsconfigProjectsLocationsInstancesInventoriesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// If provided, this field specifies the criteria that must be met by a `Inventory` API resource to be included in the response.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of results to return.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// A pagination token returned from a previous call to `ListInventories` that indicates where this listing should continue from.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided.
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC.
	View *OsconfigProjectsLocationsInstancesInventoriesListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type OsconfigProjectsLocationsInstancesInventoriesListResponse struct {
	ContentType string
	// Successful response
	ListInventoriesResponse *shared.ListInventoriesResponse
	StatusCode              int
	RawResponse             *http.Response
}
