/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostSpacesSpaceIdPersonsIdCallForDocumentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export class PostSpacesSpaceIdPersonsIdCallForDocumentRequest extends SpeakeasyBase {
  /**
   * Infos to invite
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  callForDocument: shared.CallForDocument;

  /**
   * Id of the person or memberId
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

/**
 * Id of the folder of the person invited
 */
export class PostSpacesSpaceIdPersonsIdCallForDocument201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostSpacesSpaceIdPersonsIdCallForDocumentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of the folder of the person invited
   */
  @SpeakeasyMetadata()
  postSpacesSpaceIdPersonsIdCallForDocument201ApplicationJSONObject?: PostSpacesSpaceIdPersonsIdCallForDocument201ApplicationJSON;
}
