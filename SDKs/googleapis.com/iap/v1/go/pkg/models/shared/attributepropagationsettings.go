// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AttributePropagationSettingsOutputCredentialsEnum string

const (
	AttributePropagationSettingsOutputCredentialsEnumOutputCredentialsUnspecified AttributePropagationSettingsOutputCredentialsEnum = "OUTPUT_CREDENTIALS_UNSPECIFIED"
	AttributePropagationSettingsOutputCredentialsEnumHeader                       AttributePropagationSettingsOutputCredentialsEnum = "HEADER"
	AttributePropagationSettingsOutputCredentialsEnumJwt                          AttributePropagationSettingsOutputCredentialsEnum = "JWT"
	AttributePropagationSettingsOutputCredentialsEnumRctoken                      AttributePropagationSettingsOutputCredentialsEnum = "RCTOKEN"
)

func (e *AttributePropagationSettingsOutputCredentialsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OUTPUT_CREDENTIALS_UNSPECIFIED":
		fallthrough
	case "HEADER":
		fallthrough
	case "JWT":
		fallthrough
	case "RCTOKEN":
		*e = AttributePropagationSettingsOutputCredentialsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AttributePropagationSettingsOutputCredentialsEnum: %s", s)
	}
}

// AttributePropagationSettings - Configuration for propagating attributes to applications protected by IAP.
type AttributePropagationSettings struct {
	// Whether the provided attribute propagation settings should be evaluated on user requests. If set to true, attributes returned from the expression will be propagated in the set output credentials.
	Enable *bool `json:"enable,omitempty"`
	// Raw string CEL expression. Must return a list of attributes. Maximum of 45 attributes can be selected. Expressions can select different attribute types from `attributes`: `attributes.saml_attributes`, `attributes.iap_attributes`. Limited functions are supported: - filter: .filter(, ) -> returns a subset of where is true for every item - in: in -> returns true if contains - selectByName: .selectByName() -> returns the attribute in with the given name, otherwise returns empty. - emitAs: .emitAs() -> sets the name field to the given for propagation in selected output credentials. - strict: .strict() -> ignore the `x-goog-iap-attr-` prefix for the provided attribute when propagating via the `HEADER` output credential, i.e. request headers. - append: .append() OR .append() -> append the provided or onto the end of Example expression: attributes.saml_attributes.filter(x, x.name in ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())
	Expression *string `json:"expression,omitempty"`
	// Which output credentials attributes selected by the CEL expression should be propagated in. All attributes will be fully duplicated in each selected output credential.
	OutputCredentials []AttributePropagationSettingsOutputCredentialsEnum `json:"outputCredentials,omitempty"`
}
