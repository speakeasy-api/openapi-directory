"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metadata as shared_metadata
from ..shared import phase as shared_phase
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RolloutApprovalStateEnum(str, Enum):
    r"""Output only. Approval state of the `Rollout`."""
    APPROVAL_STATE_UNSPECIFIED = 'APPROVAL_STATE_UNSPECIFIED'
    NEEDS_APPROVAL = 'NEEDS_APPROVAL'
    DOES_NOT_NEED_APPROVAL = 'DOES_NOT_NEED_APPROVAL'
    APPROVED = 'APPROVED'
    REJECTED = 'REJECTED'

class RolloutDeployFailureCauseEnum(str, Enum):
    r"""Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress."""
    FAILURE_CAUSE_UNSPECIFIED = 'FAILURE_CAUSE_UNSPECIFIED'
    CLOUD_BUILD_UNAVAILABLE = 'CLOUD_BUILD_UNAVAILABLE'
    EXECUTION_FAILED = 'EXECUTION_FAILED'
    DEADLINE_EXCEEDED = 'DEADLINE_EXCEEDED'
    RELEASE_FAILED = 'RELEASE_FAILED'
    RELEASE_ABANDONED = 'RELEASE_ABANDONED'
    VERIFICATION_CONFIG_NOT_FOUND = 'VERIFICATION_CONFIG_NOT_FOUND'
    CLOUD_BUILD_REQUEST_FAILED = 'CLOUD_BUILD_REQUEST_FAILED'

class RolloutStateEnum(str, Enum):
    r"""Output only. Current state of the `Rollout`."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    IN_PROGRESS = 'IN_PROGRESS'
    PENDING_APPROVAL = 'PENDING_APPROVAL'
    APPROVAL_REJECTED = 'APPROVAL_REJECTED'
    PENDING = 'PENDING'
    PENDING_RELEASE = 'PENDING_RELEASE'
    CANCELLING = 'CANCELLING'
    CANCELLED = 'CANCELLED'
    HALTED = 'HALTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Rollout:
    r"""A `Rollout` resource in the Google Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`."""
    
    annotations: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotations'), 'exclude': lambda f: f is None }})
    r"""User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations."""  
    approval_state: Optional[RolloutApprovalStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approvalState'), 'exclude': lambda f: f is None }})
    r"""Output only. Approval state of the `Rollout`."""  
    approve_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approveTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `Rollout` was approved."""  
    controller_rollout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('controllerRollout'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the `ControllerRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `Rollout` was created."""  
    deploy_end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployEndTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `Rollout` finished deploying."""  
    deploy_failure_cause: Optional[RolloutDeployFailureCauseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployFailureCause'), 'exclude': lambda f: f is None }})
    r"""Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress."""  
    deploying_build: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployingBuild'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`."""  
    deploy_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployStartTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `Rollout` started deploying."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the `Rollout` for user purposes. Max length is 255 characters."""  
    enqueue_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enqueueTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `Rollout` was enqueued."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."""  
    failure_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureReason'), 'exclude': lambda f: f is None }})
    r"""Output only. Additional information about the rollout failure, if available."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."""  
    metadata: Optional[shared_metadata.Metadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata includes information associated with a `Rollout`."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."""  
    phases: Optional[list[shared_phase.Phase]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phases'), 'exclude': lambda f: f is None }})
    r"""Output only. The phases that represent the workflows of this `Rollout`."""  
    state: Optional[RolloutStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. Current state of the `Rollout`."""  
    target_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetId'), 'exclude': lambda f: f is None }})
    r"""Required. The ID of Target to which this `Rollout` is deploying."""  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""Output only. Unique identifier of the `Rollout`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RolloutInput:
    r"""A `Rollout` resource in the Google Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`."""
    
    annotations: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotations'), 'exclude': lambda f: f is None }})
    r"""User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the `Rollout` for user purposes. Max length is 255 characters."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."""  
    target_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetId'), 'exclude': lambda f: f is None }})
    r"""Required. The ID of Target to which this `Rollout` is deploying."""  
    