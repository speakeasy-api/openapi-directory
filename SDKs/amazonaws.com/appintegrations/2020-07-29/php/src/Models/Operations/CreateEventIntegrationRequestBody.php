<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateEventIntegrationRequestBody
{
    /**
     * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('ClientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * The description of the event integration.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The EventBridge bus.
     * 
     * @var string $eventBridgeBus
     */
	#[\JMS\Serializer\Annotation\SerializedName('EventBridgeBus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventBridgeBus;
    
    /**
     * The event filter.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateEventIntegrationRequestBodyEventFilter $eventFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('EventFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateEventIntegrationRequestBodyEventFilter')]
    public CreateEventIntegrationRequestBodyEventFilter $eventFilter;
    
    /**
     * The name of the event integration.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->clientToken = null;
		$this->description = null;
		$this->eventBridgeBus = "";
		$this->eventFilter = new \OpenAPI\OpenAPI\Models\Operations\CreateEventIntegrationRequestBodyEventFilter();
		$this->name = "";
		$this->tags = null;
	}
}
