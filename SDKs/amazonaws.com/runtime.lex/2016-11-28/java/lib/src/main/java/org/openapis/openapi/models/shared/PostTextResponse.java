/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PostTextResponse - Success
 */
public class PostTextResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeContexts")
    public ActiveContext[] activeContexts;
    public PostTextResponse withActiveContexts(ActiveContext[] activeContexts) {
        this.activeContexts = activeContexts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternativeIntents")
    public PredictedIntent[] alternativeIntents;
    public PostTextResponse withAlternativeIntents(PredictedIntent[] alternativeIntents) {
        this.alternativeIntents = alternativeIntents;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("botVersion")
    public String botVersion;
    public PostTextResponse withBotVersion(String botVersion) {
        this.botVersion = botVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dialogState")
    public DialogStateEnum dialogState;
    public PostTextResponse withDialogState(DialogStateEnum dialogState) {
        this.dialogState = dialogState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intentName")
    public String intentName;
    public PostTextResponse withIntentName(String intentName) {
        this.intentName = intentName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public PostTextResponse withMessage(String message) {
        this.message = message;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messageFormat")
    public MessageFormatTypeEnum messageFormat;
    public PostTextResponse withMessageFormat(MessageFormatTypeEnum messageFormat) {
        this.messageFormat = messageFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nluIntentConfidence")
    public IntentConfidence nluIntentConfidence;
    public PostTextResponse withNluIntentConfidence(IntentConfidence nluIntentConfidence) {
        this.nluIntentConfidence = nluIntentConfidence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseCard")
    public ResponseCard responseCard;
    public PostTextResponse withResponseCard(ResponseCard responseCard) {
        this.responseCard = responseCard;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sentimentResponse")
    public SentimentResponse sentimentResponse;
    public PostTextResponse withSentimentResponse(SentimentResponse sentimentResponse) {
        this.sentimentResponse = sentimentResponse;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sessionAttributes")
    public java.util.Map<String, String> sessionAttributes;
    public PostTextResponse withSessionAttributes(java.util.Map<String, String> sessionAttributes) {
        this.sessionAttributes = sessionAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sessionId")
    public String sessionId;
    public PostTextResponse withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slotToElicit")
    public String slotToElicit;
    public PostTextResponse withSlotToElicit(String slotToElicit) {
        this.slotToElicit = slotToElicit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slots")
    public java.util.Map<String, String> slots;
    public PostTextResponse withSlots(java.util.Map<String, String> slots) {
        this.slots = slots;
        return this;
    }
    
}
