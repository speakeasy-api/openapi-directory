// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InventoryCategoryCategoryTypeEnum - Can be one of `"vaccine"`, `"product"` or `"service"`
type InventoryCategoryCategoryTypeEnum string

const (
	InventoryCategoryCategoryTypeEnumVaccine InventoryCategoryCategoryTypeEnum = "vaccine"
	InventoryCategoryCategoryTypeEnumProduct InventoryCategoryCategoryTypeEnum = "product"
	InventoryCategoryCategoryTypeEnumService InventoryCategoryCategoryTypeEnum = "service"
)

func (e InventoryCategoryCategoryTypeEnum) ToPointer() *InventoryCategoryCategoryTypeEnum {
	return &e
}

func (e *InventoryCategoryCategoryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vaccine":
		fallthrough
	case "product":
		fallthrough
	case "service":
		*e = InventoryCategoryCategoryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventoryCategoryCategoryTypeEnum: %v", v)
	}
}

// InventoryCategory - OK
type InventoryCategory struct {
	// If the category is archived or not
	Archived *bool `json:"archived,omitempty"`
	// Can be one of `"vaccine"`, `"product"` or `"service"`
	CategoryType *InventoryCategoryCategoryTypeEnum `json:"category_type,omitempty"`
	CreatedAt    *string                            `json:"created_at,omitempty"`
	Doctor       *string                            `json:"doctor,omitempty"`
	ID           *int64                             `json:"id,omitempty"`
	// Name of the inventory category
	Name      *string `json:"name,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}
