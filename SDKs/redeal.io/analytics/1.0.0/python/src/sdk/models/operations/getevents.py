"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import eventrecord as shared_eventrecord
from enum import Enum
from typing import Optional

class GetEventsTypeEnum(str, Enum):
    r"""type of records to return"""
    ALL = 'all'
    CLICKS = 'clicks'
    CONTACTS = 'contacts'


@dataclasses.dataclass
class GetEventsRequest:
    
    company: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'company', 'style': 'form', 'explode': True }})
    r"""pass an optional company Id"""  
    deal: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'deal', 'style': 'form', 'explode': True }})
    r"""pass an optional deal Id"""  
    nexttoken: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'nexttoken', 'style': 'form', 'explode': True }})
    r"""next token to start returning records from"""  
    queryexecutionid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'queryexecutionid', 'style': 'form', 'explode': True }})
    r"""id of execution to get more records based on next token"""  
    site: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site', 'style': 'form', 'explode': True }})
    r"""pass an optional site Id"""  
    type: Optional[GetEventsTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""type of records to return"""  
    

@dataclasses.dataclass
class GetEventsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    event_records: Optional[list[shared_eventrecord.EventRecord]] = dataclasses.field(default=None)
    r"""analytics results matching criteria"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    