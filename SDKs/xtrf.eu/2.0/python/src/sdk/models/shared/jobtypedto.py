"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class JobTypeDTORelationToLanguageEnum(str, Enum):
    LANGUAGE_COMBINATION_RELATED = 'LANGUAGE_COMBINATION_RELATED'
    SOURCE_LANGUAGE_RELATED_ONLY = 'SOURCE_LANGUAGE_RELATED_ONLY'
    TARGET_LANGUAGE_RELATED_ONLY = 'TARGET_LANGUAGE_RELATED_ONLY'
    LANGUAGE_INDEPENDENT = 'LANGUAGE_INDEPENDENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobTypeDTO:
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""should this value be available on the XTRF selection lists"""  
    calculation_unit_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calculationUnitIds'), 'exclude': lambda f: f is None }})  
    default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default'), 'exclude': lambda f: f is None }})
    r"""should this value be set by default in XTRF selection lists"""  
    files_needed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filesNeeded'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""internal identifier"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""localised name (formatted in the current user's locale)"""  
    preferred: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preferred'), 'exclude': lambda f: f is None }})
    r"""should this value be available on the top of XTRF selection lists, in the Preferred section"""  
    provided_by_client: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('providedByClient'), 'exclude': lambda f: f is None }})  
    relation_to_language: Optional[JobTypeDTORelationToLanguageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relationToLanguage'), 'exclude': lambda f: f is None }})  
    vendor_productivity: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorProductivity'), 'exclude': lambda f: f is None }})  
    vendor_productivity_calculation_unit_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorProductivityCalculationUnitId'), 'exclude': lambda f: f is None }})  
    