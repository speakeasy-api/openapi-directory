// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PostClickwrapsRequestBodyUseWithBundlesEnum - Use this Clickwrap for Bundles?
type PostClickwrapsRequestBodyUseWithBundlesEnum string

const (
	PostClickwrapsRequestBodyUseWithBundlesEnumNone      PostClickwrapsRequestBodyUseWithBundlesEnum = "none"
	PostClickwrapsRequestBodyUseWithBundlesEnumAvailable PostClickwrapsRequestBodyUseWithBundlesEnum = "available"
	PostClickwrapsRequestBodyUseWithBundlesEnumRequire   PostClickwrapsRequestBodyUseWithBundlesEnum = "require"
)

func (e PostClickwrapsRequestBodyUseWithBundlesEnum) ToPointer() *PostClickwrapsRequestBodyUseWithBundlesEnum {
	return &e
}

func (e *PostClickwrapsRequestBodyUseWithBundlesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "available":
		fallthrough
	case "require":
		*e = PostClickwrapsRequestBodyUseWithBundlesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostClickwrapsRequestBodyUseWithBundlesEnum: %v", v)
	}
}

// PostClickwrapsRequestBodyUseWithInboxesEnum - Use this Clickwrap for Inboxes?
type PostClickwrapsRequestBodyUseWithInboxesEnum string

const (
	PostClickwrapsRequestBodyUseWithInboxesEnumNone      PostClickwrapsRequestBodyUseWithInboxesEnum = "none"
	PostClickwrapsRequestBodyUseWithInboxesEnumAvailable PostClickwrapsRequestBodyUseWithInboxesEnum = "available"
	PostClickwrapsRequestBodyUseWithInboxesEnumRequire   PostClickwrapsRequestBodyUseWithInboxesEnum = "require"
)

func (e PostClickwrapsRequestBodyUseWithInboxesEnum) ToPointer() *PostClickwrapsRequestBodyUseWithInboxesEnum {
	return &e
}

func (e *PostClickwrapsRequestBodyUseWithInboxesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "available":
		fallthrough
	case "require":
		*e = PostClickwrapsRequestBodyUseWithInboxesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostClickwrapsRequestBodyUseWithInboxesEnum: %v", v)
	}
}

// PostClickwrapsRequestBodyUseWithUsersEnum - Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.
type PostClickwrapsRequestBodyUseWithUsersEnum string

const (
	PostClickwrapsRequestBodyUseWithUsersEnumNone    PostClickwrapsRequestBodyUseWithUsersEnum = "none"
	PostClickwrapsRequestBodyUseWithUsersEnumRequire PostClickwrapsRequestBodyUseWithUsersEnum = "require"
)

func (e PostClickwrapsRequestBodyUseWithUsersEnum) ToPointer() *PostClickwrapsRequestBodyUseWithUsersEnum {
	return &e
}

func (e *PostClickwrapsRequestBodyUseWithUsersEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "require":
		*e = PostClickwrapsRequestBodyUseWithUsersEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostClickwrapsRequestBodyUseWithUsersEnum: %v", v)
	}
}

type PostClickwrapsRequestBody struct {
	// Body text of Clickwrap (supports Markdown formatting).
	Body *string `multipartForm:"name=body"`
	// Name of the Clickwrap agreement (used when selecting from multiple Clickwrap agreements.)
	Name *string `multipartForm:"name=name"`
	// Use this Clickwrap for Bundles?
	UseWithBundles *PostClickwrapsRequestBodyUseWithBundlesEnum `multipartForm:"name=use_with_bundles"`
	// Use this Clickwrap for Inboxes?
	UseWithInboxes *PostClickwrapsRequestBodyUseWithInboxesEnum `multipartForm:"name=use_with_inboxes"`
	// Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.
	UseWithUsers *PostClickwrapsRequestBodyUseWithUsersEnum `multipartForm:"name=use_with_users"`
}

type PostClickwrapsResponse struct {
	// The Clickwraps object.
	ClickwrapEntity *shared.ClickwrapEntity
	ContentType     string
	StatusCode      int
	RawResponse     *http.Response
}
