/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchTeamMembersFilter - Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied
 * between the individual fields, and `OR` logic is applied within list-based fields.
 * For example, setting this filter value:
 * ```
 * filter = (locations_ids = ["A", "B"], status = ACTIVE)
 * ```
 * returns only active team members assigned to either location "A" or "B".
 */
public class SearchTeamMembersFilter {
    /**
     * When present, filters by team members assigned to the specified locations.
     * When empty, includes team members assigned to any location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_ids")
    public String[] locationIds;
    public SearchTeamMembersFilter withLocationIds(String[] locationIds) {
        this.locationIds = locationIds;
        return this;
    }
    
    /**
     * When present, filters by team members who match the given status.
     * When empty, includes team members of all statuses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public SearchTeamMembersFilter withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
