// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetOperationXAmzTargetEnum
type GetOperationXAmzTargetEnum string

const (
	GetOperationXAmzTargetEnumRoute53AutoNamingV20170314GetOperation GetOperationXAmzTargetEnum = "Route53AutoNaming_v20170314.GetOperation"
)

func (e *GetOperationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53AutoNaming_v20170314.GetOperation":
		*e = GetOperationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOperationXAmzTargetEnum: %s", s)
	}
}

type GetOperationRequest struct {
	GetOperationRequest shared.GetOperationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          GetOperationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetOperationResponse struct {
	ContentType string
	// Success
	GetOperationResponse *shared.GetOperationResponse
	// InvalidInput
	InvalidInput interface{}
	// OperationNotFound
	OperationNotFound interface{}
	StatusCode        int
	RawResponse       *http.Response
}
