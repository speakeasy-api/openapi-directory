/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Project cards represent a scope of work.
 */
export class ProjectCard extends SpeakeasyBase {
  /**
   * Whether or not the card is archived
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "column_name" })
  columnName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "column_url" })
  columnUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "content_url" })
  contentUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => NullableSimpleUser)
  creator: NullableSimpleUser;

  /**
   * The project card's ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note: string;

  @SpeakeasyMetadata()
  @Expose({ name: "project_id" })
  projectId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "project_url" })
  projectUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
