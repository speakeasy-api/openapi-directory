/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PaymentInstrument - OK - the request has succeeded.
 */
public class PaymentInstrument {
    /**
     * The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id) associated with the payment instrument.
     */
    @JsonProperty("balanceAccountId")
    public String balanceAccountId;

    public PaymentInstrument withBalanceAccountId(String balanceAccountId) {
        this.balanceAccountId = balanceAccountId;
        return this;
    }
    
    /**
     * Contains the business account details. Returned when you create a payment instrument with `type` **bankAccount**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccount")
    public Object bankAccount;

    public PaymentInstrument withBankAccount(Object bankAccount) {
        this.bankAccount = bankAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card")
    public Card card;

    public PaymentInstrument withCard(Card card) {
        this.card = card;
        return this;
    }
    
    /**
     * Your description for the payment instrument, maximum 300 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public PaymentInstrument withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The unique identifier of the payment instrument.
     */
    @JsonProperty("id")
    public String id;

    public PaymentInstrument withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the payment instrument is issued. For example, **NL** or **US**.
     */
    @JsonProperty("issuingCountryCode")
    public String issuingCountryCode;

    public PaymentInstrument withIssuingCountryCode(String issuingCountryCode) {
        this.issuingCountryCode = issuingCountryCode;
        return this;
    }
    
    /**
     * The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id) to which the payment instrument belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentInstrumentGroupId")
    public String paymentInstrumentGroupId;

    public PaymentInstrument withPaymentInstrumentGroupId(String paymentInstrumentGroupId) {
        this.paymentInstrumentGroupId = paymentInstrumentGroupId;
        return this;
    }
    
    /**
     * Your reference for the payment instrument, maximum 150 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public PaymentInstrument withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **Active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **Requested**.
     * 
     * Possible values: 
     * 
     *  * **Active**:  The payment instrument is active and can be used to make payments. 
     * 
     *  * **Requested**: The payment instrument has been requested. This state is applicable for physical cards. 
     * 
     * * **Inactive**: The payment instrument is inactive and cannot be used to make payments. 
     * 
     *  * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments. 
     * 
     *  * **Closed**: The payment instrument is permanently closed. This action cannot be undone. 
     * 
     * * **Stolen** 
     * 
     *  * **Lost**
     * 
     *  
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PaymentInstrumentStatusEnum status;

    public PaymentInstrument withStatus(PaymentInstrumentStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Type of payment instrument.
     * 
     * Possible value: **card**, **bankAccount**. 
     */
    @JsonProperty("type")
    public PaymentInstrumentTypeEnum type;

    public PaymentInstrument withType(PaymentInstrumentTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public PaymentInstrument(@JsonProperty("balanceAccountId") String balanceAccountId, @JsonProperty("id") String id, @JsonProperty("issuingCountryCode") String issuingCountryCode, @JsonProperty("type") PaymentInstrumentTypeEnum type) {
        this.balanceAccountId = balanceAccountId;
        this.id = id;
        this.issuingCountryCode = issuingCountryCode;
        this.type = type;
  }
}
