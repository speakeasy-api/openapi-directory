/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A single selector statement in an advanced event selector.
 */
export class AdvancedFieldSelector extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndsWith" })
  endsWith?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Equals" })
  equals?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Field" })
  field: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotEndsWith" })
  notEndsWith?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "NotEquals" })
  notEquals?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "NotStartsWith" })
  notStartsWith?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "StartsWith" })
  startsWith?: string[];
}
