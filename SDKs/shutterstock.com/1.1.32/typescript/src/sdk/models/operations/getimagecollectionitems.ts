/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetImageCollectionItemsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode: string;
}

/**
 * Sort order
 */
export enum GetImageCollectionItemsSortEnum {
  Newest = "newest",
  Oldest = "oldest",
}

export class GetImageCollectionItemsRequest extends SpeakeasyBase {
  /**
   * Collection ID
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Page number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Code to retrieve the contents of a shared collection
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=share_code",
  })
  shareCode?: string;

  /**
   * Sort order
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetImageCollectionItemsSortEnum;
}

export class GetImageCollectionItemsResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  collectionItemDataList?: shared.CollectionItemDataList;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
