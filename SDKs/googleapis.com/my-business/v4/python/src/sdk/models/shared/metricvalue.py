"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensionalmetricvalue as shared_dimensionalmetricvalue
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MetricValueMetricEnum(str, Enum):
    r"""The metric for which the value applies."""
    METRIC_UNSPECIFIED = 'METRIC_UNSPECIFIED'
    ALL = 'ALL'
    QUERIES_DIRECT = 'QUERIES_DIRECT'
    QUERIES_INDIRECT = 'QUERIES_INDIRECT'
    QUERIES_CHAIN = 'QUERIES_CHAIN'
    VIEWS_MAPS = 'VIEWS_MAPS'
    VIEWS_SEARCH = 'VIEWS_SEARCH'
    ACTIONS_WEBSITE = 'ACTIONS_WEBSITE'
    ACTIONS_PHONE = 'ACTIONS_PHONE'
    ACTIONS_DRIVING_DIRECTIONS = 'ACTIONS_DRIVING_DIRECTIONS'
    PHOTOS_VIEWS_MERCHANT = 'PHOTOS_VIEWS_MERCHANT'
    PHOTOS_VIEWS_CUSTOMERS = 'PHOTOS_VIEWS_CUSTOMERS'
    PHOTOS_COUNT_MERCHANT = 'PHOTOS_COUNT_MERCHANT'
    PHOTOS_COUNT_CUSTOMERS = 'PHOTOS_COUNT_CUSTOMERS'
    LOCAL_POST_VIEWS_SEARCH = 'LOCAL_POST_VIEWS_SEARCH'
    LOCAL_POST_ACTIONS_CALL_TO_ACTION = 'LOCAL_POST_ACTIONS_CALL_TO_ACTION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetricValue:
    r"""A value for a single Metric from a starting time."""
    
    dimensional_values: Optional[list[shared_dimensionalmetricvalue.DimensionalMetricValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensionalValues'), 'exclude': lambda f: f is None }})
    r"""Dimensional values for this metric."""  
    metric: Optional[MetricValueMetricEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metric'), 'exclude': lambda f: f is None }})
    r"""The metric for which the value applies."""  
    total_value: Optional[shared_dimensionalmetricvalue.DimensionalMetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalValue'), 'exclude': lambda f: f is None }})
    r"""A value for a single metric with a given time dimension."""  
    