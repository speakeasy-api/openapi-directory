"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class ChargeRevenueSummaries:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_crs_by_crs_number(self, request: operations.GETCRSByCRSNumberRequest) -> operations.GETCRSByCRSNumberResponse:
        r"""List all details of a charge revenue summary
        Retrieves the details of a charge revenue summary by specifying the charge revenue summary number. The response includes all revenue items associated with the charge revenue summary.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETCRSByCRSNumberRequest, base_url, '/v1/charge-revenue-summaries/{crs-number}', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETCRSByCRSNumberResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETChargeRSDetailType])
                res.get_charge_rs_detail_type = out

        return res

    def get_crs_by_charge_id(self, request: operations.GETCRSByChargeIDRequest) -> operations.GETCRSByChargeIDResponse:
        r"""Retrieve a charge revenue summary by charge ID
        Retrieves the details of a charge revenue summary by specifying the subscription charge ID. This response retrieves all revenue items associated with a charge revenue summary.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETCRSByChargeIDRequest, base_url, '/v1/charge-revenue-summaries/subscription-charges/{charge-key}', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETCRSByChargeIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETChargeRSDetailType])
                res.get_charge_rs_detail_type = out

        return res

    