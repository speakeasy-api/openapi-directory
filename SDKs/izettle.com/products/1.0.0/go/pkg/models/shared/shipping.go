// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ShippingShippingPricingModelEnum string

const (
	ShippingShippingPricingModelEnumFree     ShippingShippingPricingModelEnum = "FREE"
	ShippingShippingPricingModelEnumStandard ShippingShippingPricingModelEnum = "STANDARD"
)

func (e ShippingShippingPricingModelEnum) ToPointer() *ShippingShippingPricingModelEnum {
	return &e
}

func (e *ShippingShippingPricingModelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FREE":
		fallthrough
	case "STANDARD":
		*e = ShippingShippingPricingModelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ShippingShippingPricingModelEnum: %v", v)
	}
}

type Shipping struct {
	ShippingPricingModel *ShippingShippingPricingModelEnum `json:"shippingPricingModel,omitempty"`
	Weight               *Weight                           `json:"weight,omitempty"`
	WeightInGrams        *int64                            `json:"weightInGrams,omitempty"`
}
