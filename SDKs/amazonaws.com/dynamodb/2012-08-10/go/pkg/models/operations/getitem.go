// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetItemXAmzTargetEnum
type GetItemXAmzTargetEnum string

const (
	GetItemXAmzTargetEnumDynamoDb20120810GetItem GetItemXAmzTargetEnum = "DynamoDB_20120810.GetItem"
)

func (e *GetItemXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20120810.GetItem":
		*e = GetItemXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetItemXAmzTargetEnum: %s", s)
	}
}

type GetItemHeaders struct {
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetItemXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetItemRequest struct {
	Headers GetItemHeaders
	Request shared.GetItemInput `request:"mediaType=application/json"`
}

type GetItemResponse struct {
	ContentType string
	// Success
	GetItemOutput *shared.GetItemOutput
	// InternalServerError
	InternalServerError interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	StatusCode           int
	RawResponse          *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
