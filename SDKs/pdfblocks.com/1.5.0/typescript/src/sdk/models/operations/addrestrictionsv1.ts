/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The algorithm used to encrypt the PDF document.
 */
export enum AddRestrictionsV1RequestBodyEncryptionAlgorithmEnum {
  Aes128 = "AES-128",
  Aes256 = "AES-256",
}

export class AddRestrictionsV1RequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class AddRestrictionsV1RequestBody extends SpeakeasyBase {
  /**
   * If false, accessibility programs can't read the text or images of the document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_accessibility" })
  allowAccessibility?: boolean;

  /**
   * If false, the user can't assemble or manipulate the document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_assemble_document" })
  allowAssembleDocument?: boolean;

  /**
   * If false, the user can't change the content of the document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_change_content" })
  allowChangeContent?: boolean;

  /**
   * If false, the user can't add, edit or modify annotations or fill form fields.
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=allow_comment_and_fill_form",
  })
  allowCommentAndFillForm?: boolean;

  /**
   * If false, the user can't copy text and images to the clipboard.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_copy_content" })
  allowCopyContent?: boolean;

  /**
   * If false, the user can't fill forms fields.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_fill_form" })
  allowFillForm?: boolean;

  /**
   * If false, the user can't print the document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_print" })
  allowPrint?: boolean;

  /**
   * If false, the user can't print the document in high resolution.
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=allow_print_high_resolution",
  })
  allowPrintHighResolution?: boolean;

  /**
   * The algorithm used to encrypt the PDF document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=encryption_algorithm" })
  encryptionAlgorithm?: AddRestrictionsV1RequestBodyEncryptionAlgorithmEnum;

  /**
   * The input PDF document
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: AddRestrictionsV1RequestBodyFile;

  /**
   * The password required to open and change permissions of the PDF document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=owner_password" })
  ownerPassword: string;

  /**
   * The password required to open the PDF document. If the `user_password` is not set, the user will be able to open the document without a password.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=user_password" })
  userPassword?: string;
}

/**
 * Error
 */
export class AddRestrictionsV14XXApplicationProblemPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AddRestrictionsV1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The document was processed succesfully.
   */
  @SpeakeasyMetadata()
  addRestrictionsV1200ApplicationPdfBinaryString?: Uint8Array;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  addRestrictionsV14XXApplicationProblemPlusJsonObject?: AddRestrictionsV14XXApplicationProblemPlusJson;
}
