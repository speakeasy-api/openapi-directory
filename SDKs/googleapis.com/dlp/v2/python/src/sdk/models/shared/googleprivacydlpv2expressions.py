"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2conditions as shared_googleprivacydlpv2conditions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GooglePrivacyDlpV2ExpressionsLogicalOperatorEnum(str, Enum):
    r"""The operator to apply to the result of conditions. Default and currently only supported value is `AND`."""
    LOGICAL_OPERATOR_UNSPECIFIED = 'LOGICAL_OPERATOR_UNSPECIFIED'
    AND = 'AND'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2Expressions:
    r"""An expression, consisting of an operator and conditions."""
    
    conditions: Optional[shared_googleprivacydlpv2conditions.GooglePrivacyDlpV2Conditions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conditions'), 'exclude': lambda f: f is None }})
    r"""A collection of conditions."""  
    logical_operator: Optional[GooglePrivacyDlpV2ExpressionsLogicalOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logicalOperator'), 'exclude': lambda f: f is None }})
    r"""The operator to apply to the result of conditions. Default and currently only supported value is `AND`."""  
    