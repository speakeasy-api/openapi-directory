/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ShiftFilter } from "./shiftfilter";
import { ShiftSort } from "./shiftsort";
import { Expose, Type } from "class-transformer";

/**
 * The parameters of a `Shift` search query, which includes filter and sort options.
 */
export class ShiftQuery extends SpeakeasyBase {
  /**
   * Defines a filter used in a search for `Shift` records. `AND` logic is
   *
   * @remarks
   * used by Square's servers to apply each filter property specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => ShiftFilter)
  filter?: ShiftFilter;

  /**
   * Sets the sort order of search results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort" })
  @Type(() => ShiftSort)
  sort?: ShiftSort;
}
