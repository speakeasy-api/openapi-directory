// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartConfigurationSessionRequestBody struct {
	// The application ID or the application name.
	ApplicationIdentifier string `json:"ApplicationIdentifier"`
	// The configuration profile ID or the configuration profile name.
	ConfigurationProfileIdentifier string `json:"ConfigurationProfileIdentifier"`
	// The environment ID or the environment name.
	EnvironmentIdentifier string `json:"EnvironmentIdentifier"`
	// Sets a constraint on a session. If you specify a value of, for example, 60 seconds, then the client that established the session can't call <a>GetLatestConfiguration</a> more frequently than every 60 seconds.
	RequiredMinimumPollIntervalInSeconds *int64 `json:"RequiredMinimumPollIntervalInSeconds,omitempty"`
}

type StartConfigurationSessionRequest struct {
	RequestBody       StartConfigurationSessionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartConfigurationSessionResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartConfigurationSessionResponse *shared.StartConfigurationSessionResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
