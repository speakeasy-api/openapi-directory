// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum - The direction for the route table announcement.
type CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum string

const (
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnumOutgoing CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum = "outgoing"
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnumIncoming CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum = "incoming"
)

func (e CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum) ToPointer() *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum {
	return &e
}

func (e *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "outgoing":
		fallthrough
	case "incoming":
		*e = CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum: %v", v)
	}
}

// CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum - The state of the transit gateway announcement.
type CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum string

const (
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnumAvailable CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum = "available"
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnumPending   CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum = "pending"
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnumFailing   CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum = "failing"
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnumFailed    CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum = "failed"
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnumDeleting  CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum = "deleting"
	CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnumDeleted   CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum = "deleted"
)

func (e CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum) ToPointer() *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum {
	return &e
}

func (e *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "pending":
		fallthrough
	case "failing":
		fallthrough
	case "failed":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum: %v", v)
	}
}

// CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementTags - Describes a tag.
type CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementTags struct {
	Key   *string
	Value *string
}

// CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncement - Provides details about the transit gateway route table announcement.
type CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncement struct {
	AnnouncementDirection                  *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementAnnouncementDirectionEnum
	CoreNetworkID                          *string
	CreationTime                           *time.Time
	PeerCoreNetworkID                      *string
	PeerTransitGatewayID                   *string
	PeeringAttachmentID                    *string
	State                                  *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementStateEnum
	Tags                                   []CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncementTags
	TransitGatewayID                       *string
	TransitGatewayRouteTableAnnouncementID *string
	TransitGatewayRouteTableID             *string
}

// CreateTransitGatewayRouteTableAnnouncementResult - Success
type CreateTransitGatewayRouteTableAnnouncementResult struct {
	TransitGatewayRouteTableAnnouncement *CreateTransitGatewayRouteTableAnnouncementResultTransitGatewayRouteTableAnnouncement
}
