/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Scope specifies the upgrade scope which upgrades are blocked by the exclusion.
 */
export enum MaintenanceExclusionOptionsScopeEnum {
  NoUpgrades = "NO_UPGRADES",
  NoMinorUpgrades = "NO_MINOR_UPGRADES",
  NoMinorOrNodeUpgrades = "NO_MINOR_OR_NODE_UPGRADES",
}

/**
 * Represents the Maintenance exclusion option.
 */
export class MaintenanceExclusionOptions extends SpeakeasyBase {
  /**
   * Scope specifies the upgrade scope which upgrades are blocked by the exclusion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: MaintenanceExclusionOptionsScopeEnum;
}
