// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionAuthorizationTypeEnum string

const (
	ConnectionAuthorizationTypeEnumBasic                  ConnectionAuthorizationTypeEnum = "BASIC"
	ConnectionAuthorizationTypeEnumOauthClientCredentials ConnectionAuthorizationTypeEnum = "OAUTH_CLIENT_CREDENTIALS"
	ConnectionAuthorizationTypeEnumAPIKey                 ConnectionAuthorizationTypeEnum = "API_KEY"
)

func (e ConnectionAuthorizationTypeEnum) ToPointer() *ConnectionAuthorizationTypeEnum {
	return &e
}

func (e *ConnectionAuthorizationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BASIC":
		fallthrough
	case "OAUTH_CLIENT_CREDENTIALS":
		fallthrough
	case "API_KEY":
		*e = ConnectionAuthorizationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionAuthorizationTypeEnum: %v", v)
	}
}
