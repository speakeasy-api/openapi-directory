<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DbLogReportSummary
{
    /**
     * Type of database.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\DatabaseTypeEnum $databaseType
     */
	#[\JMS\Serializer\Annotation\SerializedName('databaseType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DatabaseTypeEnum>')]
    public DatabaseTypeEnum $databaseType;
    
    /**
     * ID of the SLA Domain controlling the database protection.
     * 
     * @var string $effectiveSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainId;
    
    /**
     * Name of the SLA Domain controlling the database protection.
     * 
     * @var string $effectiveSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainName;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Time, in UTC, of the last database backup.
     * 
     * @var ?\DateTime $lastSnapshotTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastSnapshotTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastSnapshotTime = null;
    
    /**
     * Latest point in time, in UTC, to which the database can be restored.
     * 
     * @var ?\DateTime $latestRecoveryTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('latestRecoveryTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $latestRecoveryTime = null;
    
    /**
     * Location of the customer database. For a standalone SQL database, this includes the host and instance name.
     * 
     * @var string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $location;
    
    /**
     * Amount of time, in seconds, that has elapsed since the next expected log backup.
     * 
     * @var ?int $logBackupDelay
     */
	#[\JMS\Serializer\Annotation\SerializedName('logBackupDelay')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $logBackupDelay = null;
    
    /**
     * Frequency, in seconds, of the database log backup.
     * 
     * @var ?int $logBackupFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('logBackupFrequency')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $logBackupFrequency = null;
    
    /**
     * Name of the database.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * ID of the primary Rubrik cluster on which the database is located.
     * 
     * @var string $primaryClusterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryClusterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryClusterId;
    
	public function __construct()
	{
		$this->databaseType = \OpenAPI\OpenAPI\Models\Shared\DatabaseTypeEnum::ORACLE;
		$this->effectiveSlaDomainId = "";
		$this->effectiveSlaDomainName = "";
		$this->id = "";
		$this->lastSnapshotTime = null;
		$this->latestRecoveryTime = null;
		$this->location = "";
		$this->logBackupDelay = null;
		$this->logBackupFrequency = null;
		$this->name = "";
		$this->primaryClusterId = "";
	}
}
