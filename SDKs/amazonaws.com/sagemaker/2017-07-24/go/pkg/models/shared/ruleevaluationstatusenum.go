// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RuleEvaluationStatusEnum string

const (
	RuleEvaluationStatusEnumInProgress    RuleEvaluationStatusEnum = "InProgress"
	RuleEvaluationStatusEnumNoIssuesFound RuleEvaluationStatusEnum = "NoIssuesFound"
	RuleEvaluationStatusEnumIssuesFound   RuleEvaluationStatusEnum = "IssuesFound"
	RuleEvaluationStatusEnumError         RuleEvaluationStatusEnum = "Error"
	RuleEvaluationStatusEnumStopping      RuleEvaluationStatusEnum = "Stopping"
	RuleEvaluationStatusEnumStopped       RuleEvaluationStatusEnum = "Stopped"
)

func (e RuleEvaluationStatusEnum) ToPointer() *RuleEvaluationStatusEnum {
	return &e
}

func (e *RuleEvaluationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InProgress":
		fallthrough
	case "NoIssuesFound":
		fallthrough
	case "IssuesFound":
		fallthrough
	case "Error":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		*e = RuleEvaluationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleEvaluationStatusEnum: %v", v)
	}
}
