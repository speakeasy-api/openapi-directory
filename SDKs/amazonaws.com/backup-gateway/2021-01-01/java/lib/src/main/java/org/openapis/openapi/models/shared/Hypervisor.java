/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Hypervisor - &lt;p&gt;Represents the hypervisor's permissions to which the gateway will connect.&lt;/p&gt; &lt;p&gt;A hypervisor is hardware, software, or firmware that creates and manages virtual machines, and allocates resources to them.&lt;/p&gt;
 */
public class Hypervisor {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Host")
    public String host;

    public Hypervisor withHost(String host) {
        this.host = host;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HypervisorArn")
    public String hypervisorArn;

    public Hypervisor withHypervisorArn(String hypervisorArn) {
        this.hypervisorArn = hypervisorArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKeyArn")
    public String kmsKeyArn;

    public Hypervisor withKmsKeyArn(String kmsKeyArn) {
        this.kmsKeyArn = kmsKeyArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Hypervisor withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public HypervisorStateEnum state;

    public Hypervisor withState(HypervisorStateEnum state) {
        this.state = state;
        return this;
    }
    
    public Hypervisor(){}
}
