/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ExportAdvisoriesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-rh-identity",
  })
  rhIdentity: string;
}

export class ExportAdvisoriesRequest extends SpeakeasyBase {
  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[advisory_type]",
  })
  filterAdvisoryType?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[applicable_systems]",
  })
  filterApplicableSystems?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[description]",
  })
  filterDescription?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[id]",
  })
  filterId?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[public_date]",
  })
  filterPublicDate?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[severity]",
  })
  filterSeverity?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[synopsis]",
  })
  filterSynopsis?: string;

  /**
   * Find matching text
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;
}

export class ExportAdvisoriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.ControllersAdvisoryInlineItem })
  controllersAdvisoryInlineItems?: shared.ControllersAdvisoryInlineItem[];
}
