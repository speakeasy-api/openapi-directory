// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum
type PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum string

const (
	PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnumServiceQuotasV20190624PutServiceQuotaIncreaseRequestIntoTemplate PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum = "ServiceQuotasV20190624.PutServiceQuotaIncreaseRequestIntoTemplate"
)

func (e PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum) ToPointer() *PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum {
	return &e
}

func (e *PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ServiceQuotasV20190624.PutServiceQuotaIncreaseRequestIntoTemplate":
		*e = PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum: %v", v)
	}
}

type PutServiceQuotaIncreaseRequestIntoTemplateRequest struct {
	PutServiceQuotaIncreaseRequestIntoTemplateRequest shared.PutServiceQuotaIncreaseRequestIntoTemplateRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                     *string                                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                                 *string                                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                    *string                                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                          *string                                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                                 *string                                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                     *string                                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                                 *string                                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                        PutServiceQuotaIncreaseRequestIntoTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutServiceQuotaIncreaseRequestIntoTemplateResponse struct {
	// AWSServiceAccessNotEnabledException
	AWSServiceAccessNotEnabledException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// DependencyAccessDeniedException
	DependencyAccessDeniedException interface{}
	// IllegalArgumentException
	IllegalArgumentException interface{}
	// NoAvailableOrganizationException
	NoAvailableOrganizationException interface{}
	// NoSuchResourceException
	NoSuchResourceException interface{}
	// Success
	PutServiceQuotaIncreaseRequestIntoTemplateResponse *shared.PutServiceQuotaIncreaseRequestIntoTemplateResponse
	// QuotaExceededException
	QuotaExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ServiceException
	ServiceException interface{}
	// TemplatesNotAvailableInRegionException
	TemplatesNotAvailableInRegionException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
