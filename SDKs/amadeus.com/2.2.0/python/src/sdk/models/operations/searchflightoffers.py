"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import collection_meta as shared_collection_meta
from ..shared import dictionaries as shared_dictionaries
from ..shared import error_400 as shared_error_400
from ..shared import error_500 as shared_error_500
from ..shared import flightoffer as shared_flightoffer
from ..shared import getflightoffersquery as shared_getflightoffersquery
from ..shared import issue as shared_issue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class SearchFlightOffersRequest:
    
    get_flight_offers_query: shared_getflightoffersquery.GetFlightOffersQuery = dataclasses.field(metadata={'request': { 'media_type': 'application/vnd.amadeus+json' }})
    r"""list of criteria to retrieve a list of flight offers"""  
    x_http_method_override: str = dataclasses.field(metadata={'header': { 'field_name': 'X-HTTP-Method-Override', 'style': 'simple', 'explode': False }})
    r"""the HTTP method to apply"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchFlightOffersSuccess:
    r"""Successful Operation"""
    
    data: list[shared_flightoffer.FlightOffer] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})  
    dictionaries: Optional[shared_dictionaries.Dictionaries] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dictionaries'), 'exclude': lambda f: f is None }})  
    meta: Optional[shared_collection_meta.CollectionMeta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})  
    warnings: Optional[list[shared_issue.Issue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warnings'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class SearchFlightOffersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_400: Optional[shared_error_400.Error400] = dataclasses.field(default=None)
    r"""code    | title
    ------- | ------------------------------------- 
    425     | INVALID DATE
    477     | INVALID FORMAT
    2668    | PARAMETER COMBINATION INVALID/RESTRICTED
    4926    | INVALID DATA RECEIVED
    10661   | MAXIMUM NUMBER OF OCCURRENCES EXCEEDED 
    32171   | MANDATORY DATA MISSING
    """  
    error_500: Optional[shared_error_500.Error500] = dataclasses.field(default=None)
    r"""Unexpected error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    success: Optional[SearchFlightOffersSuccess] = dataclasses.field(default=None)
    r"""Successful Operation"""  
    