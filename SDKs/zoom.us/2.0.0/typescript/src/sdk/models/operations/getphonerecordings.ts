/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetPhoneRecordingsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetPhoneRecordingsRequest extends SpeakeasyBase {
  /**
   * Start date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format. The date range defined by the from and to parameters should only be one month as the report includes only one month worth of data at once.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=from" })
  from?: string;

  /**
   * The current page number of returned records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The owner type. The allowed values are null, `user`, or `callQueue`. The default is null. If null, returns all owner types.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=owner_type",
  })
  ownerType?: string;

  /**
   * The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * The recording type. The allowed values are null, `OnDemand`, or `Automatic`. The default is null. If null, returns all recording types.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=recording_type",
  })
  recordingType?: string;

  /**
   * The site ID. The default is `All sites`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=site_id",
  })
  siteId?: string;

  /**
   * End date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format, the same formats supported by the `from` parameter.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
  to?: string;
}

/**
 * Specifies the callee' number type.<br>
 *
 * @remarks
 * `1` - internal<br>
 * `2` - external<br>
 */
export enum GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum {
  One = "1",
  Two = "2",
}

/**
 * Specifies the type of the caller number.<br>
 *
 * @remarks
 *
 * `1` - internal<br>
 * `2` - external<br>
 */
export enum GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum {
  One = "1",
  Two = "2",
}

/**
 * The direction of the call. Values: `inbound` or `outbound`.
 */
export enum GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum {
  Inbound = "inbound",
  Outbound = "outbound",
}

/**
 * The owner type: `user` or `call queue`.
 */
export enum GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum {
  User = "user",
  CallQueue = "call queue",
}

/**
 * The owner of the recording.
 */
export class GetPhoneRecordings200ApplicationXMLRecordingsOwner extends SpeakeasyBase {
  /**
   * The extension number associated to the call number.
   */
  @SpeakeasyMetadata()
  extensionNumber?: string;

  /**
   * The owner's ID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the owner.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * The owner type: `user` or `call queue`.
   */
  @SpeakeasyMetadata()
  type?: GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum;
}

export class GetPhoneRecordings200ApplicationXMLRecordingsSite extends SpeakeasyBase {
  /**
   * The site ID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * The site name.
   */
  @SpeakeasyMetadata()
  name?: string;
}

export class GetPhoneRecordings200ApplicationXMLRecordings extends SpeakeasyBase {
  /**
   * The contact name of the callee.
   */
  @SpeakeasyMetadata()
  calleeName?: string;

  /**
   * The phone number of the callee.
   */
  @SpeakeasyMetadata()
  calleeNumber?: string;

  /**
   * Specifies the callee' number type.<br>
   *
   * @remarks
   * `1` - internal<br>
   * `2` - external<br>
   */
  @SpeakeasyMetadata()
  calleeNumberType?: GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum;

  /**
   * The contact name of the caller.
   */
  @SpeakeasyMetadata()
  callerName?: string;

  /**
   * The phone number associated to the caller.
   */
  @SpeakeasyMetadata()
  callerNumber?: string;

  /**
   * Specifies the type of the caller number.<br>
   *
   * @remarks
   *
   * `1` - internal<br>
   * `2` - external<br>
   */
  @SpeakeasyMetadata()
  callerNumberType?: GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum;

  /**
   * The date and time when the recording was received.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  /**
   * The direction of the call. Values: `inbound` or `outbound`.
   */
  @SpeakeasyMetadata()
  direction?: GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum;

  /**
   * The download URL for the recording.
   */
  @SpeakeasyMetadata()
  downloadUrl?: string;

  /**
   * The duration of the recording.
   */
  @SpeakeasyMetadata()
  duration?: number;

  /**
   * Unique identifier of the recording.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * The owner of the recording.
   */
  @SpeakeasyMetadata()
  owner?: GetPhoneRecordings200ApplicationXMLRecordingsOwner;

  /**
   * The recording type. The allowed values are `OnDemand` or `Automatic`.
   */
  @SpeakeasyMetadata()
  recordingType?: string;

  @SpeakeasyMetadata()
  site?: GetPhoneRecordings200ApplicationXMLRecordingsSite;
}

/**
 * **HTTP Status Code** `200`<br>
 *
 * @remarks
 * OK.
 */
export class GetPhoneRecordings200ApplicationXML extends SpeakeasyBase {
  /**
   * The current page number of returned records.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: GetPhoneRecordings200ApplicationXMLRecordings,
  })
  recordings?: GetPhoneRecordings200ApplicationXMLRecordings[];

  /**
   * Total number of records returned.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Specifies the callee' number type.<br>
 *
 * @remarks
 * `1` - internal<br>
 * `2` - external<br>
 */
export enum GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum {
  One = "1",
  Two = "2",
}

/**
 * Specifies the type of the caller number.<br>
 *
 * @remarks
 *
 * `1` - internal<br>
 * `2` - external<br>
 */
export enum GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum {
  One = "1",
  Two = "2",
}

/**
 * The direction of the call. Values: `inbound` or `outbound`.
 */
export enum GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum {
  Inbound = "inbound",
  Outbound = "outbound",
}

/**
 * The owner type: `user` or `call queue`.
 */
export enum GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum {
  User = "user",
  CallQueue = "call queue",
}

/**
 * The owner of the recording.
 */
export class GetPhoneRecordings200ApplicationJSONRecordingsOwner extends SpeakeasyBase {
  /**
   * The extension number associated to the call number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  /**
   * The owner's ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The owner type: `user` or `call queue`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum;
}

export class GetPhoneRecordings200ApplicationJSONRecordingsSite extends SpeakeasyBase {
  /**
   * The site ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The site name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class GetPhoneRecordings200ApplicationJSONRecordings extends SpeakeasyBase {
  /**
   * The contact name of the callee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_name" })
  calleeName?: string;

  /**
   * The phone number of the callee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_number" })
  calleeNumber?: string;

  /**
   * Specifies the callee' number type.<br>
   *
   * @remarks
   * `1` - internal<br>
   * `2` - external<br>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_number_type" })
  calleeNumberType?: GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum;

  /**
   * The contact name of the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_name" })
  callerName?: string;

  /**
   * The phone number associated to the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_number" })
  callerNumber?: string;

  /**
   * Specifies the type of the caller number.<br>
   *
   * @remarks
   *
   * `1` - internal<br>
   * `2` - external<br>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_number_type" })
  callerNumberType?: GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum;

  /**
   * The date and time when the recording was received.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  /**
   * The direction of the call. Values: `inbound` or `outbound`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum;

  /**
   * The download URL for the recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download_url" })
  downloadUrl?: string;

  /**
   * The duration of the recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * Unique identifier of the recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The owner of the recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => GetPhoneRecordings200ApplicationJSONRecordingsOwner)
  owner?: GetPhoneRecordings200ApplicationJSONRecordingsOwner;

  /**
   * The recording type. The allowed values are `OnDemand` or `Automatic`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_type" })
  recordingType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => GetPhoneRecordings200ApplicationJSONRecordingsSite)
  site?: GetPhoneRecordings200ApplicationJSONRecordingsSite;
}

/**
 * **HTTP Status Code** `200`<br>
 *
 * @remarks
 * OK.
 */
export class GetPhoneRecordings200ApplicationJSON extends SpeakeasyBase {
  /**
   * The current page number of returned records.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: GetPhoneRecordings200ApplicationJSONRecordings,
  })
  @Expose({ name: "recordings" })
  @Type(() => GetPhoneRecordings200ApplicationJSONRecordings)
  recordings?: GetPhoneRecordings200ApplicationJSONRecordings[];

  /**
   * Total number of records returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class GetPhoneRecordingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code** `200`<br>
   *
   * @remarks
   * OK.
   */
  @SpeakeasyMetadata()
  getPhoneRecordings200ApplicationJSONObject?: GetPhoneRecordings200ApplicationJSON;

  /**
   * **HTTP Response Code:** `400`<br>
   *
   * @remarks
   * The template name you entered already exists. Provide a new name for the template and try again.<br>
   *
   * **Error Code:** `300`<br>
   * Validation failed. You provided an incorrect value for the template type. Provide a valid value and try again.
   */
  @SpeakeasyMetadata()
  getPhoneRecordings400ApplicationJSONAny?: any;
}
