/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReadOptions - The options shared by read requests.
 */
public class ReadOptions {
    /**
     * Options for beginning a new transaction. Transactions can be created explicitly with calls to Datastore.BeginTransaction or implicitly by setting ReadOptions.new_transaction in read requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newTransaction")
    public TransactionOptions newTransaction;
    public ReadOptions withNewTransaction(TransactionOptions newTransaction) {
        this.newTransaction = newTransaction;
        return this;
    }
    
    /**
     * The non-transactional read consistency to use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readConsistency")
    public ReadOptionsReadConsistencyEnum readConsistency;
    public ReadOptions withReadConsistency(ReadOptionsReadConsistencyEnum readConsistency) {
        this.readConsistency = readConsistency;
        return this;
    }
    
    /**
     * Reads entities as they were at the given time. This may not be older than 270 seconds. This value is only supported for Cloud Firestore in Datastore mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;
    public ReadOptions withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * The identifier of the transaction in which to read. A transaction identifier is returned by a call to Datastore.BeginTransaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transaction")
    public String transaction;
    public ReadOptions withTransaction(String transaction) {
        this.transaction = transaction;
        return this;
    }
    
}
