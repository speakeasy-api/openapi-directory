"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class UserDeleteActionEnum(str, Enum):
    r"""Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`"""
    DISASSOCIATE = 'disassociate'
    DELETE = 'delete'


@dataclasses.dataclass
class UserDeleteRequest:
    
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."""  
    action: Optional[UserDeleteActionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'action', 'style': 'form', 'explode': True }})
    r"""Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`"""  
    transfer_email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transfer_email', 'style': 'form', 'explode': True }})
    r"""Transfer email."""  
    transfer_meeting: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transfer_meeting', 'style': 'form', 'explode': True }})
    r"""Transfer meeting."""  
    transfer_recording: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transfer_recording', 'style': 'form', 'explode': True }})
    r"""Transfer recording."""  
    transfer_webinar: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transfer_webinar', 'style': 'form', 'explode': True }})
    r"""Transfer webinar."""  
    

@dataclasses.dataclass
class UserDeleteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    