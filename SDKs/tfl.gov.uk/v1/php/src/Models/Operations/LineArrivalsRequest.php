<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class LineArrivalsRequest
{
    /**
     * Optional. Id of destination stop
     * 
     * @var ?string $destinationStationId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=destinationStationId')]
    public ?string $destinationStationId = null;
    
    /**
     * Optional. The direction of travel. Can be inbound or outbound or all. If left blank, and destinationStopId is set, will default to all
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\LineArrivalsDirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?LineArrivalsDirectionEnum $direction = null;
    
    /**
     * A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.
     * 
     * @var array<string> $ids
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ids')]
    public array $ids;
    
    /**
     * Optional. Id of stop to get arrival predictions for (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)
     * 
     * @var string $stopPointId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=stopPointId')]
    public string $stopPointId;
    
	public function __construct()
	{
		$this->destinationStationId = null;
		$this->direction = null;
		$this->ids = [];
		$this->stopPointId = "";
	}
}
