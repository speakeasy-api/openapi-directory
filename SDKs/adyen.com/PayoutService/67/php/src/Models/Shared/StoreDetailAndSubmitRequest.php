<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class StoreDetailAndSubmitRequest
{
    /**
     * This field contains additional data, which may be required for a particular request.
     * 
     * @var ?array<string, string> $additionalData
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalData')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
	#[\JMS\Serializer\Annotation\SerializedName('bank')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BankAccount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BankAccount $bank = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('billingAddress')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Address')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Address $billingAddress = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('card')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Card')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Card $card = null;
    
    /**
     * The date of birth.
     * 
     * Format: [ISO-8601](https://www.w3.org/TR/NOTE-datetime); example: YYYY-MM-DD
     * For Paysafecard it must be the same as used when registering the Paysafecard account.
     * > This field is mandatory for natural persons.
     * 
     * @var \DateTime $dateOfBirth
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateOfBirth')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $dateOfBirth;
    
    /**
     * The type of the entity the payout is processed for.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\StoreDetailAndSubmitRequestEntityTypeEnum $entityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StoreDetailAndSubmitRequestEntityTypeEnum>')]
    public StoreDetailAndSubmitRequestEntityTypeEnum $entityType;
    
    /**
     * An integer value that is added to the normal fraud score. The value can be either positive or negative.
     * 
     * @var ?int $fraudOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('fraudOffset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fraudOffset = null;
    
    /**
     * The merchant account identifier, with which you want to process the transaction.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
    /**
     * The shopper's nationality.
     * 
     * 
     * A valid value is an ISO 2-character country code (e.g. 'NL').
     * 
     * @var string $nationality
     */
	#[\JMS\Serializer\Annotation\SerializedName('nationality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nationality;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurring')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Recurring')]
    public Recurring $recurring;
    
    /**
     * The merchant reference for this payment. This reference will be used in all communication to the merchant about the status of the payout. Although it is a good idea to make sure it is unique, this is not a requirement.
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * The name of the brand to make a payout to.
     * 
     * 
     * For Paysafecard it must be set to `paysafecard`.
     * 
     * @var ?string $selectedBrand
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedBrand')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selectedBrand = null;
    
    /**
     * The shopper's email address.
     * 
     * @var string $shopperEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shopperEmail;
    
	#[\JMS\Serializer\Annotation\SerializedName('shopperName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Name $shopperName = null;
    
    /**
     * The shopper's reference for the payment transaction.
     * 
     * @var string $shopperReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shopperReference;
    
    /**
     * The description of this payout. This description is shown on the bank statement of the shopper (if this is supported by the chosen payment method).
     * 
     * @var ?string $shopperStatement
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperStatement')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperStatement = null;
    
    /**
     * The shopper's social security number.
     * 
     * @var ?string $socialSecurityNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('socialSecurityNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $socialSecurityNumber = null;
    
    /**
     * The shopper's phone number.
     * 
     * @var ?string $telephoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('telephoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $telephoneNumber = null;
    
	public function __construct()
	{
		$this->additionalData = null;
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->bank = null;
		$this->billingAddress = null;
		$this->card = null;
		$this->dateOfBirth = new \DateTime();
		$this->entityType = \OpenAPI\OpenAPI\Models\Shared\StoreDetailAndSubmitRequestEntityTypeEnum::NATURAL_PERSON;
		$this->fraudOffset = null;
		$this->merchantAccount = "";
		$this->nationality = "";
		$this->recurring = new \OpenAPI\OpenAPI\Models\Shared\Recurring();
		$this->reference = "";
		$this->selectedBrand = null;
		$this->shopperEmail = "";
		$this->shopperName = null;
		$this->shopperReference = "";
		$this->shopperStatement = null;
		$this->socialSecurityNumber = null;
		$this->telephoneNumber = null;
	}
}
