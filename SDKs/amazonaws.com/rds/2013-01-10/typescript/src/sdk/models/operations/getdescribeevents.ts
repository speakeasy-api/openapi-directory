/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETDescribeEventsActionEnum {
  DescribeEvents = "DescribeEvents",
}

export enum GETDescribeEventsSourceTypeEnum {
  DbInstance = "db-instance",
  DbParameterGroup = "db-parameter-group",
  DbSecurityGroup = "db-security-group",
  DbSnapshot = "db-snapshot",
}

export enum GETDescribeEventsVersionEnum {
  TwoThousandAndThirteen0110 = "2013-01-10",
}

export class GETDescribeEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETDescribeEventsActionEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Duration",
  })
  duration?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EndTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endTime?: Date;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EventCategories",
  })
  eventCategories?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Marker",
  })
  marker?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxRecords",
  })
  maxRecords?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SourceIdentifier",
  })
  sourceIdentifier?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SourceType",
  })
  sourceType?: GETDescribeEventsSourceTypeEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=StartTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startTime?: Date;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETDescribeEventsVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETDescribeEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
