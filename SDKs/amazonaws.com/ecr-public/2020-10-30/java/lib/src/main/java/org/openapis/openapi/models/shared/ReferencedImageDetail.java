/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ReferencedImageDetail - An object that describes the image tag details that are returned by a &lt;a&gt;DescribeImageTags&lt;/a&gt; action.
 */
public class ReferencedImageDetail {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("artifactMediaType")
    public String artifactMediaType;

    public ReferencedImageDetail withArtifactMediaType(String artifactMediaType) {
        this.artifactMediaType = artifactMediaType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageDigest")
    public String imageDigest;

    public ReferencedImageDetail withImageDigest(String imageDigest) {
        this.imageDigest = imageDigest;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageManifestMediaType")
    public String imageManifestMediaType;

    public ReferencedImageDetail withImageManifestMediaType(String imageManifestMediaType) {
        this.imageManifestMediaType = imageManifestMediaType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("imagePushedAt")
    public OffsetDateTime imagePushedAt;

    public ReferencedImageDetail withImagePushedAt(OffsetDateTime imagePushedAt) {
        this.imagePushedAt = imagePushedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageSizeInBytes")
    public Long imageSizeInBytes;

    public ReferencedImageDetail withImageSizeInBytes(Long imageSizeInBytes) {
        this.imageSizeInBytes = imageSizeInBytes;
        return this;
    }
    
    public ReferencedImageDetail(){}
}
