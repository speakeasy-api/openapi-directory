<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Permission - Contains information about the permissions and type of access allowed with regards to a Google Drive object. This is a subset of the fields contained in a corresponding Drive Permissions object.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Permission
{
    /**
     * The name of the user or group the permission applies to.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The ID for this permission. Corresponds to the Drive API's permission ID returned as part of the Drive Permissions resource.
     * 
     * @var ?string $permissionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $permissionId = null;
    
    /**
     * Indicates the Google Drive permissions role. The role determines a user's ability to read, write, or comment on the file.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PermissionRoleEnum $role
     */
	#[\JMS\Serializer\Annotation\SerializedName('role')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PermissionRoleEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PermissionRoleEnum $role = null;
    
    /**
     * Indicates how widely permissions are granted.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PermissionTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PermissionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PermissionTypeEnum $type = null;
    
    /**
     * A representation of a user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\User $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\User')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?User $user = null;
    
    /**
     * Whether the permission requires a link to the file.
     * 
     * @var ?bool $withLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('withLink')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $withLink = null;
    
	public function __construct()
	{
		$this->name = null;
		$this->permissionId = null;
		$this->role = null;
		$this->type = null;
		$this->user = null;
		$this->withLink = null;
	}
}
