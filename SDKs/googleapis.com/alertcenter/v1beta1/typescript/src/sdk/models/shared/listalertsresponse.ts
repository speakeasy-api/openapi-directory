/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Alert } from "./alert";
import { Expose, Type } from "class-transformer";

/**
 * Response message for an alert listing request.
 */
export class ListAlertsResponse extends SpeakeasyBase {
  /**
   * The list of alerts.
   */
  @SpeakeasyMetadata({ elemType: Alert })
  @Expose({ name: "alerts" })
  @Type(() => Alert)
  alerts?: Alert[];

  /**
   * The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
