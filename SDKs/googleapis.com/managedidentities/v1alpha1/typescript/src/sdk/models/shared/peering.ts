/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents a Managed Microsoft Identities Peering.
 */
export class PeeringInput extends SpeakeasyBase {
  /**
   * Required. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorizedNetwork" })
  authorizedNetwork?: string;

  /**
   * Required. Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form: `projects/{project_id}/locations/global/domains/{domain_name}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainResource" })
  domainResource?: string;

  /**
   * Optional. Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;
}

/**
 * Output only. The current state of this Peering.
 */
export enum PeeringStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Connected = "CONNECTED",
  Disconnected = "DISCONNECTED",
  Deleting = "DELETING",
}

/**
 * Represents a Managed Microsoft Identities Peering.
 */
export class Peering extends SpeakeasyBase {
  /**
   * Required. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorizedNetwork" })
  authorizedNetwork?: string;

  /**
   * Output only. The time the instance was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Required. Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form: `projects/{project_id}/locations/global/domains/{domain_name}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainResource" })
  domainResource?: string;

  /**
   * Optional. Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. Unique name of the peering in this scope including projects and location using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The current state of this Peering.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: PeeringStateEnum;

  /**
   * Output only. Additional information about the current status of this peering, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  /**
   * Output only. Last update time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
