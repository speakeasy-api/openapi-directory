/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContributorProfile - Contributor profile data
 */
public class ContributorProfile {
    /**
     * Short description of the contributors' library
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("about")
    public String about;
    public ContributorProfile withAbout(String about) {
        this.about = about;
        return this;
    }
    
    /**
     * Type of content that the contributor specializes in (photographer, illustrator, etc)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contributor_type")
    public String[] contributorType;
    public ContributorProfile withContributorType(String[] contributorType) {
        this.contributorType = contributorType;
        return this;
    }
    
    /**
     * Preferred name to be displayed for the contributor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;
    public ContributorProfile withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * List of equipment used by the contributor (Canon EOS 5D Mark II, etc)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("equipment")
    public String[] equipment;
    public ContributorProfile withEquipment(String[] equipment) {
        this.equipment = equipment;
        return this;
    }
    
    /**
     * Contributor ID
     */
    @JsonProperty("id")
    public String id;
    public ContributorProfile withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Country code representing the contributor's locale
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public ContributorProfile withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Web URL for the contributors' profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portfolio_url")
    public String portfolioUrl;
    public ContributorProfile withPortfolioUrl(String portfolioUrl) {
        this.portfolioUrl = portfolioUrl;
        return this;
    }
    
    /**
     * Contributor profile social media links
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("social_media")
    public ContributorProfileSocialMedia socialMedia;
    public ContributorProfile withSocialMedia(ContributorProfileSocialMedia socialMedia) {
        this.socialMedia = socialMedia;
        return this;
    }
    
    /**
     * List of styles that the contributor specializes in (lifestyle, mixed media, etc)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("styles")
    public String[] styles;
    public ContributorProfile withStyles(String[] styles) {
        this.styles = styles;
        return this;
    }
    
    /**
     * Generic list of subjects for contributors' work (food_and_drink, holiday, people, etc)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjects")
    public String[] subjects;
    public ContributorProfile withSubjects(String[] subjects) {
        this.subjects = subjects;
        return this;
    }
    
    /**
     * Personal website for the contributor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("website")
    public String website;
    public ContributorProfile withWebsite(String website) {
        this.website = website;
        return this;
    }
    
}
