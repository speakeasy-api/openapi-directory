"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import address_residential_indicator_enum as shared_address_residential_indicator_enum
from ..shared import delivery_confirmation_enum as shared_delivery_confirmation_enum
from ..shared import dimensions as shared_dimensions
from ..shared import weight as shared_weight
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EstimateRatesRequestBody:
    r"""A rate estimate request body"""
    
    from_city_locality: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from_city_locality') }})
    r"""from postal code"""  
    from_country_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from_country_code') }})  
    from_postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from_postal_code') }})  
    from_state_province: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from_state_province') }})
    r"""From state province"""  
    ship_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ship_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""ship date"""  
    to_city_locality: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_city_locality') }})
    r"""The city locality the package is being shipped to"""  
    to_country_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_country_code') }})  
    to_postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_postal_code') }})  
    to_state_province: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_state_province') }})
    r"""To state province"""  
    weight: shared_weight.Weight = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight') }})
    r"""The weight of the package"""  
    address_residential_indicator: Optional[shared_address_residential_indicator_enum.AddressResidentialIndicatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_residential_indicator'), 'exclude': lambda f: f is None }})  
    confirmation: Optional[shared_delivery_confirmation_enum.DeliveryConfirmationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confirmation'), 'exclude': lambda f: f is None }})  
    dimensions: Optional[shared_dimensions.Dimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""The dimensions of the package"""  
    