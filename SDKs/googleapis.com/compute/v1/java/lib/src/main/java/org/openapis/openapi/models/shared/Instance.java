/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Instance - Represents an Instance resource. An instance is a virtual machine that is hosted on Google Cloud Platform. For more information, read Virtual Machine Instances.
 */
public class Instance {
    /**
     * Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advancedMachineFeatures")
    public AdvancedMachineFeatures advancedMachineFeatures;
    public Instance withAdvancedMachineFeatures(AdvancedMachineFeatures advancedMachineFeatures) {
        this.advancedMachineFeatures = advancedMachineFeatures;
        return this;
    }
    
    /**
     * Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canIpForward")
    public Boolean canIpForward;
    public Instance withCanIpForward(Boolean canIpForward) {
        this.canIpForward = canIpForward;
        return this;
    }
    
    /**
     * A set of Confidential Instance options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidentialInstanceConfig")
    public ConfidentialInstanceConfig confidentialInstanceConfig;
    public Instance withConfidentialInstanceConfig(ConfidentialInstanceConfig confidentialInstanceConfig) {
        this.confidentialInstanceConfig = confidentialInstanceConfig;
        return this;
    }
    
    /**
     * [Output Only] The CPU platform used by this instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuPlatform")
    public String cpuPlatform;
    public Instance withCpuPlatform(String cpuPlatform) {
        this.cpuPlatform = cpuPlatform;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public Instance withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * Whether the resource should be protected against deletion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deletionProtection")
    public Boolean deletionProtection;
    public Instance withDeletionProtection(Boolean deletionProtection) {
        this.deletionProtection = deletionProtection;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Instance withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Array of disks associated with this instance. Persistent disks must be created before you can assign them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disks")
    public AttachedDisk[] disks;
    public Instance withDisks(AttachedDisk[] disks) {
        this.disks = disks;
        return this;
    }
    
    /**
     * A set of Display Device options
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayDevice")
    public DisplayDevice displayDevice;
    public Instance withDisplayDevice(DisplayDevice displayDevice) {
        this.displayDevice = displayDevice;
        return this;
    }
    
    /**
     * Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public Instance withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * A list of the type and count of accelerator cards attached to the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guestAccelerators")
    public AcceleratorConfig[] guestAccelerators;
    public Instance withGuestAccelerators(AcceleratorConfig[] guestAccelerators) {
        this.guestAccelerators = guestAccelerators;
        return this;
    }
    
    /**
     * Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;
    public Instance withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Instance withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyRevocationActionType")
    public InstanceKeyRevocationActionTypeEnum keyRevocationActionType;
    public Instance withKeyRevocationActionType(InstanceKeyRevocationActionTypeEnum keyRevocationActionType) {
        this.keyRevocationActionType = keyRevocationActionType;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#instance for instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Instance withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelFingerprint")
    public String labelFingerprint;
    public Instance withLabelFingerprint(String labelFingerprint) {
        this.labelFingerprint = labelFingerprint;
        return this;
    }
    
    /**
     * Labels to apply to this instance. These can be later modified by the setLabels method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Instance withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * [Output Only] Last start timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastStartTimestamp")
    public String lastStartTimestamp;
    public Instance withLastStartTimestamp(String lastStartTimestamp) {
        this.lastStartTimestamp = lastStartTimestamp;
        return this;
    }
    
    /**
     * [Output Only] Last stop timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastStopTimestamp")
    public String lastStopTimestamp;
    public Instance withLastStopTimestamp(String lastStopTimestamp) {
        this.lastStopTimestamp = lastStopTimestamp;
        return this;
    }
    
    /**
     * [Output Only] Last suspended timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastSuspendedTimestamp")
    public String lastSuspendedTimestamp;
    public Instance withLastSuspendedTimestamp(String lastSuspendedTimestamp) {
        this.lastSuspendedTimestamp = lastSuspendedTimestamp;
        return this;
    }
    
    /**
     * Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineType")
    public String machineType;
    public Instance withMachineType(String machineType) {
        this.machineType = machineType;
        return this;
    }
    
    /**
     * A metadata key/value entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Metadata metadata;
    public Instance withMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minCpuPlatform")
    public String minCpuPlatform;
    public Instance withMinCpuPlatform(String minCpuPlatform) {
        this.minCpuPlatform = minCpuPlatform;
        return this;
    }
    
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Instance withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkInterfaces")
    public NetworkInterface[] networkInterfaces;
    public Instance withNetworkInterfaces(NetworkInterface[] networkInterfaces) {
        this.networkInterfaces = networkInterfaces;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkPerformanceConfig")
    public NetworkPerformanceConfig networkPerformanceConfig;
    public Instance withNetworkPerformanceConfig(NetworkPerformanceConfig networkPerformanceConfig) {
        this.networkPerformanceConfig = networkPerformanceConfig;
        return this;
    }
    
    /**
     * Additional instance params.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("params")
    public InstanceParams params;
    public Instance withParams(InstanceParams params) {
        this.params = params;
        return this;
    }
    
    /**
     * The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateIpv6GoogleAccess")
    public InstancePrivateIpv6GoogleAccessEnum privateIpv6GoogleAccess;
    public Instance withPrivateIpv6GoogleAccess(InstancePrivateIpv6GoogleAccessEnum privateIpv6GoogleAccess) {
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        return this;
    }
    
    /**
     * Specifies the reservations that this instance can consume from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservationAffinity")
    public ReservationAffinity reservationAffinity;
    public Instance withReservationAffinity(ReservationAffinity reservationAffinity) {
        this.reservationAffinity = reservationAffinity;
        return this;
    }
    
    /**
     * Resource policies applied to this instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourcePolicies")
    public String[] resourcePolicies;
    public Instance withResourcePolicies(String[] resourcePolicies) {
        this.resourcePolicies = resourcePolicies;
        return this;
    }
    
    /**
     * Contains output only fields. Use this sub-message for actual values set on Instance attributes as compared to the value requested by the user (intent) in their instance CRUD calls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceStatus")
    public ResourceStatus resourceStatus;
    public Instance withResourceStatus(ResourceStatus resourceStatus) {
        this.resourceStatus = resourceStatus;
        return this;
    }
    
    /**
     * [Output Only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public Instance withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * Sets the scheduling options for an Instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduling")
    public Scheduling scheduling;
    public Instance withScheduling(Scheduling scheduling) {
        this.scheduling = scheduling;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Instance withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccounts")
    public ServiceAccount[] serviceAccounts;
    public Instance withServiceAccounts(ServiceAccount[] serviceAccounts) {
        this.serviceAccounts = serviceAccounts;
        return this;
    }
    
    /**
     * A set of Shielded Instance options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shieldedInstanceConfig")
    public ShieldedInstanceConfig shieldedInstanceConfig;
    public Instance withShieldedInstanceConfig(ShieldedInstanceConfig shieldedInstanceConfig) {
        this.shieldedInstanceConfig = shieldedInstanceConfig;
        return this;
    }
    
    /**
     * The policy describes the baseline against which Instance boot integrity is measured.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shieldedInstanceIntegrityPolicy")
    public ShieldedInstanceIntegrityPolicy shieldedInstanceIntegrityPolicy;
    public Instance withShieldedInstanceIntegrityPolicy(ShieldedInstanceIntegrityPolicy shieldedInstanceIntegrityPolicy) {
        this.shieldedInstanceIntegrityPolicy = shieldedInstanceIntegrityPolicy;
        return this;
    }
    
    /**
     * Source machine image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceMachineImage")
    public String sourceMachineImage;
    public Instance withSourceMachineImage(String sourceMachineImage) {
        this.sourceMachineImage = sourceMachineImage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceMachineImageEncryptionKey")
    public CustomerEncryptionKey sourceMachineImageEncryptionKey;
    public Instance withSourceMachineImageEncryptionKey(CustomerEncryptionKey sourceMachineImageEncryptionKey) {
        this.sourceMachineImageEncryptionKey = sourceMachineImageEncryptionKey;
        return this;
    }
    
    /**
     * [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startRestricted")
    public Boolean startRestricted;
    public Instance withStartRestricted(Boolean startRestricted) {
        this.startRestricted = startRestricted;
        return this;
    }
    
    /**
     * [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public InstanceStatusEnum status;
    public Instance withStatus(InstanceStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output Only] An optional, human-readable explanation of the status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;
    public Instance withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    /**
     * A set of instance tags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public Tags tags;
    public Instance withTags(Tags tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * [Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public Instance withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
