/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelColumnConfiguration } from "./channelcolumnconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * The channel column
 */
export class ChannelColumn extends SpeakeasyBase {
  /**
   * The channel column description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelColumnDescription" })
  channelColumnDescription?: string;

  /**
   * The channel column identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelColumnId" })
  channelColumnId: string;

  /**
   * The channel column name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelColumnName" })
  channelColumnName: string;

  /**
   * The channel column configuration. The BeezUP Column Name is optional. If the BeezUP column is mapped we will indicate the data type and column importance of the BeezUP column.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  @Type(() => ChannelColumnConfiguration)
  configuration: ChannelColumnConfiguration;

  /**
   * The position of the column starting from 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position: number;

  /**
   * The restricted values. The key will be the restricted value identifier (format:guid) and the value will be the restriced value
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictedValues" })
  restrictedValues?: Record<string, string>;

  /**
   * Indicates if this column must shown in the mapping page or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showInMapping" })
  showInMapping: boolean;
}
