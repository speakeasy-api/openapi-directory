/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputParallelism } from "./inputparallelism";
import { InputProcessingConfiguration } from "./inputprocessingconfiguration";
import { KinesisFirehoseInput } from "./kinesisfirehoseinput";
import { KinesisStreamsInput } from "./kinesisstreamsinput";
import { SourceSchema } from "./sourceschema";
import { Expose, Type } from "class-transformer";

/**
 * When you configure the application input, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html">Configuring Application Input</a>.
 */
export class Input extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "InputParallelism" })
  @Type(() => InputParallelism)
  inputParallelism?: InputParallelism;

  @SpeakeasyMetadata()
  @Expose({ name: "InputProcessingConfiguration" })
  @Type(() => InputProcessingConfiguration)
  inputProcessingConfiguration?: InputProcessingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "InputSchema" })
  @Type(() => SourceSchema)
  inputSchema: SourceSchema;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisFirehoseInput" })
  @Type(() => KinesisFirehoseInput)
  kinesisFirehoseInput?: KinesisFirehoseInput;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisStreamsInput" })
  @Type(() => KinesisStreamsInput)
  kinesisStreamsInput?: KinesisStreamsInput;

  @SpeakeasyMetadata()
  @Expose({ name: "NamePrefix" })
  namePrefix: string;
}
