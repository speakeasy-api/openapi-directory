// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTAssignPrivateNatGatewayAddressActionEnum
type POSTAssignPrivateNatGatewayAddressActionEnum string

const (
	POSTAssignPrivateNatGatewayAddressActionEnumAssignPrivateNatGatewayAddress POSTAssignPrivateNatGatewayAddressActionEnum = "AssignPrivateNatGatewayAddress"
)

func (e *POSTAssignPrivateNatGatewayAddressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AssignPrivateNatGatewayAddress":
		*e = POSTAssignPrivateNatGatewayAddressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAssignPrivateNatGatewayAddressActionEnum: %s", s)
	}
}

// POSTAssignPrivateNatGatewayAddressVersionEnum
type POSTAssignPrivateNatGatewayAddressVersionEnum string

const (
	POSTAssignPrivateNatGatewayAddressVersionEnumTwoThousandAndSixteen1115 POSTAssignPrivateNatGatewayAddressVersionEnum = "2016-11-15"
)

func (e *POSTAssignPrivateNatGatewayAddressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTAssignPrivateNatGatewayAddressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAssignPrivateNatGatewayAddressVersionEnum: %s", s)
	}
}

type POSTAssignPrivateNatGatewayAddressQueryParams struct {
	Action  POSTAssignPrivateNatGatewayAddressActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTAssignPrivateNatGatewayAddressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTAssignPrivateNatGatewayAddressHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTAssignPrivateNatGatewayAddressRequest struct {
	QueryParams POSTAssignPrivateNatGatewayAddressQueryParams
	Headers     POSTAssignPrivateNatGatewayAddressHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTAssignPrivateNatGatewayAddressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
