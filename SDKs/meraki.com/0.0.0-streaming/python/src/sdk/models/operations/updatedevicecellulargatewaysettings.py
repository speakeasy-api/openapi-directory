"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceCellularGatewaySettingsRequestBodyFixedIPAssignments:
    
    ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip') }})
    r"""The IP address you want to assign to a specific server or device"""  
    mac: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mac') }})
    r"""The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A descriptive name of the assignment"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceCellularGatewaySettingsRequestBodyReservedIPRanges:
    
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})
    r"""Comment explaining the reserved IP range"""  
    end: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end') }})
    r"""Ending IP included in the reserved range of IPs"""  
    start: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start') }})
    r"""Starting IP included in the reserved range of IPs"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceCellularGatewaySettingsRequestBody:
    
    fixed_ip_assignments: Optional[list[UpdateDeviceCellularGatewaySettingsRequestBodyFixedIPAssignments]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedIpAssignments'), 'exclude': lambda f: f is None }})
    r"""list of all fixed IP assignments for a single MG"""  
    reserved_ip_ranges: Optional[list[UpdateDeviceCellularGatewaySettingsRequestBodyReservedIPRanges]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservedIpRanges'), 'exclude': lambda f: f is None }})
    r"""list of all reserved IP ranges for a single MG"""  
    

@dataclasses.dataclass
class UpdateDeviceCellularGatewaySettingsRequest:
    
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateDeviceCellularGatewaySettingsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateDeviceCellularGatewaySettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_device_cellular_gateway_settings_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    