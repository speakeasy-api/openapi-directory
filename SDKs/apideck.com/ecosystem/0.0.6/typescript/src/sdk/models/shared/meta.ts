/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Cursors to navigate to previous or next pages through the API
 */
export class MetaCursors extends SpeakeasyBase {
  /**
   * Cursor to navigate to the current page of results through the API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  current?: string;

  /**
   * Cursor to navigate to the next page of results through the API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * Cursor to navigate to the previous page of results through the API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;
}

/**
 * Response metadata
 */
export class Meta extends SpeakeasyBase {
  /**
   * Cursors to navigate to previous or next pages through the API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursors" })
  @Type(() => MetaCursors)
  cursors?: MetaCursors;

  /**
   * Number of items returned in the data property of the response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "items_on_page" })
  itemsOnPage?: number;
}
