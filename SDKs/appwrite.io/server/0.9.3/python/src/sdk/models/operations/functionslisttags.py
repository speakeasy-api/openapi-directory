"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import taglist as shared_taglist
from typing import Optional


@dataclasses.dataclass
class FunctionsListTagsSecurity:
    
    key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Key' }})  
    project: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Project' }})  
    

@dataclasses.dataclass
class FunctionsListTagsRequest:
    
    function_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'functionId', 'style': 'simple', 'explode': False }})
    r"""Function unique ID."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Results limit value. By default will return maximum 25 results. Maximum of 100 results allowed per request."""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Results offset. The default value is 0. Use this param to manage pagination."""  
    order_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'orderType', 'style': 'form', 'explode': True }})
    r"""Order result by ASC or DESC order."""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""Search term to filter your list results. Max length: 256 chars."""  
    

@dataclasses.dataclass
class FunctionsListTagsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tag_list: Optional[shared_taglist.TagList] = dataclasses.field(default=None)
    r"""Tags List"""  
    