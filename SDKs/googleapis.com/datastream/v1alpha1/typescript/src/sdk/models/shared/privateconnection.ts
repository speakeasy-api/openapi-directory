/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { VpcPeeringConfig } from "./vpcpeeringconfig";
import { Expose, Type } from "class-transformer";

/**
 * Output only. The state of the Private Connection.
 */
export enum PrivateConnectionStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Created = "CREATED",
  Failed = "FAILED",
  Deleting = "DELETING",
  FailedToDelete = "FAILED_TO_DELETE",
}

/**
 * The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.
 */
export class PrivateConnection extends SpeakeasyBase {
  /**
   * Output only. The create time of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Required. Display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Represent a user-facing Error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  /**
   * Labels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. The resource's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The state of the Private Connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: PrivateConnectionStateEnum;

  /**
   * Output only. The update time of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpcPeeringConfig" })
  @Type(() => VpcPeeringConfig)
  vpcPeeringConfig?: VpcPeeringConfig;
}

/**
 * The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.
 */
export class PrivateConnectionInput extends SpeakeasyBase {
  /**
   * Required. Display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Represent a user-facing Error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  /**
   * Labels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpcPeeringConfig" })
  @Type(() => VpcPeeringConfig)
  vpcPeeringConfig?: VpcPeeringConfig;
}
