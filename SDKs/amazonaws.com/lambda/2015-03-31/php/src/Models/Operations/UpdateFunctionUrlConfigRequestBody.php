<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateFunctionUrlConfigRequestBody
{
    /**
     * The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html">Security and auth model for Lambda function URLs</a>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateFunctionUrlConfigRequestBodyAuthTypeEnum $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('AuthType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateFunctionUrlConfigRequestBodyAuthTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateFunctionUrlConfigRequestBodyAuthTypeEnum $authType = null;
    
    /**
     * The <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">cross-origin resource sharing (CORS)</a> settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateFunctionUrlConfigRequestBodyCors $cors
     */
	#[\JMS\Serializer\Annotation\SerializedName('Cors')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateFunctionUrlConfigRequestBodyCors')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateFunctionUrlConfigRequestBodyCors $cors = null;
    
	public function __construct()
	{
		$this->authType = null;
		$this->cors = null;
	}
}
