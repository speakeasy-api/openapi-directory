"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AppInvitationsUpdatePermissionsSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    
class AppInvitationsUpdatePermissionsRequestBodyPermissionsEnum(str, Enum):
    MANAGER = 'manager'
    DEVELOPER = 'developer'
    VIEWER = 'viewer'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppInvitationsUpdatePermissionsRequestBody:
    r"""The value to update the user permission in the invite."""
    
    permissions: list[AppInvitationsUpdatePermissionsRequestBodyPermissionsEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions') }})
    r"""The permissions the user has for the app in the invitation"""  
    

@dataclasses.dataclass
class AppInvitationsUpdatePermissionsRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    request_body: AppInvitationsUpdatePermissionsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The value to update the user permission in the invite."""  
    user_email: str = dataclasses.field(metadata={'path_param': { 'field_name': 'user_email', 'style': 'simple', 'explode': False }})
    r"""The email of the user to invite"""  
    
class AppInvitationsUpdatePermissionsDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppInvitationsUpdatePermissionsDefaultApplicationJSONError:
    
    code: AppInvitationsUpdatePermissionsDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppInvitationsUpdatePermissionsDefaultApplicationJSON:
    r"""Error"""
    
    error: AppInvitationsUpdatePermissionsDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclasses.dataclass
class AppInvitationsUpdatePermissionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    app_invitations_update_permissions_default_application_json_object: Optional[AppInvitationsUpdatePermissionsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    