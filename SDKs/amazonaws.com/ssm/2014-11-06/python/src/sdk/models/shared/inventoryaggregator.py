"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inventorygroup as shared_inventorygroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InventoryAggregator:
    r"""Specifies the inventory type and attribute for the aggregation execution."""
    
    aggregators: Optional[list[InventoryAggregator]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Aggregators'), 'exclude': lambda f: f is None }})  
    expression: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Expression'), 'exclude': lambda f: f is None }})  
    groups: Optional[list[shared_inventorygroup.InventoryGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Groups'), 'exclude': lambda f: f is None }})  
    