<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DestinyComponentsKiosksDestinyKioskItem
{
    /**
     * If true, the user can not only see the item, but they can acquire it. It is possible that a user can see a kiosk item and not be able to acquire it.
     * 
     * @var ?bool $canAcquire
     */
	
    public ?bool $canAcquire = null;
    
    /**
     * Indexes into failureStrings for the Vendor, indicating the reasons why it failed if any.
     * 
     * @var ?array<int> $failureIndexes
     */
	
    public ?array $failureIndexes = null;
    
    /**
     * I may regret naming it this way - but this represents when an item has an objective that doesn't serve a beneficial purpose, but rather is used for "flavor" or additional information. For instance, when Emblems track specific stats, those stats are represented as Objectives on the item.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyComponentsKiosksDestinyKioskItemFlavorObjective $flavorObjective
     */
	
    public ?DestinyComponentsKiosksDestinyKioskItemFlavorObjective $flavorObjective = null;
    
    /**
     * The index of the item in the related DestinyVendorDefintion's itemList property, representing the sale.
     * 
     * @var ?int $index
     */
	
    public ?int $index = null;
    
	public function __construct()
	{
		$this->canAcquire = null;
		$this->failureIndexes = null;
		$this->flavorObjective = null;
		$this->index = null;
	}
}
