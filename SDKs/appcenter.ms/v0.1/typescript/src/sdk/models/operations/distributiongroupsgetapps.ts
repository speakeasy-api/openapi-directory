/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DistributionGroupsGetAppsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class DistributionGroupsGetAppsRequest extends SpeakeasyBase {
  /**
   * The name of the distribution group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=distribution_group_name",
  })
  distributionGroupName: string;

  /**
   * The organization's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=org_name",
  })
  orgName: string;
}

/**
 * The OS the app will be running on
 */
export enum DistributionGroupsGetApps200ApplicationJSONOsEnum {
  Android = "Android",
  IOS = "iOS",
  MacOS = "macOS",
  Tizen = "Tizen",
  TvOS = "tvOS",
  Windows = "Windows",
  Linux = "Linux",
  Custom = "Custom",
}

/**
 * The owner type. Can either be 'org' or 'user'
 */
export enum DistributionGroupsGetApps200ApplicationJSONOwnerTypeEnum {
  Org = "org",
  User = "user",
}

/**
 * The information about the app's owner
 */
export class DistributionGroupsGetApps200ApplicationJSONOwner extends SpeakeasyBase {
  /**
   * The avatar URL of the owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl?: string;

  /**
   * The owner's display name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The owner's email address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The unique id (UUID) of the owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The unique name that used to identify the owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The owner type. Can either be 'org' or 'user'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: DistributionGroupsGetApps200ApplicationJSONOwnerTypeEnum;
}

export class DistributionGroupsGetApps200ApplicationJSON extends SpeakeasyBase {
  /**
   * The description of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The display name of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The string representation of the source of the app's icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon_source" })
  iconSource?: string;

  /**
   * The string representation of the URL pointing to the app's icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon_url" })
  iconUrl?: string;

  /**
   * The unique ID (UUID) of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The name of the app used in URLs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: string;

  /**
   * The OS the app will be running on
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os" })
  os: DistributionGroupsGetApps200ApplicationJSONOsEnum;

  /**
   * The information about the app's owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => DistributionGroupsGetApps200ApplicationJSONOwner)
  owner: DistributionGroupsGetApps200ApplicationJSONOwner;

  /**
   * The platform of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: string;

  /**
   * A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
   */
  @SpeakeasyMetadata()
  @Expose({ name: "release_type" })
  releaseType?: string;
}

export class DistributionGroupsGetAppsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: DistributionGroupsGetApps200ApplicationJSON })
  distributionGroupsGetApps200ApplicationJSONAnies?: DistributionGroupsGetApps200ApplicationJSON[];
}
