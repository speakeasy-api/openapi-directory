"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TransferParametersSupportedPrivacyEnum(str, Enum):
    CONTACT_PRIVACY_UNSPECIFIED = 'CONTACT_PRIVACY_UNSPECIFIED'
    PUBLIC_CONTACT_DATA = 'PUBLIC_CONTACT_DATA'
    PRIVATE_CONTACT_DATA = 'PRIVATE_CONTACT_DATA'
    REDACTED_CONTACT_DATA = 'REDACTED_CONTACT_DATA'

class TransferParametersTransferLockStateEnum(str, Enum):
    r"""Indicates whether the domain is protected by a transfer lock. For a transfer to succeed, this must show `UNLOCKED`. To unlock a domain, go to its current registrar."""
    TRANSFER_LOCK_STATE_UNSPECIFIED = 'TRANSFER_LOCK_STATE_UNSPECIFIED'
    UNLOCKED = 'UNLOCKED'
    LOCKED = 'LOCKED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferParameters:
    r"""Parameters required to transfer a domain from another registrar."""
    
    current_registrar: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentRegistrar'), 'exclude': lambda f: f is None }})
    r"""The registrar that currently manages the domain."""  
    current_registrar_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentRegistrarUri'), 'exclude': lambda f: f is None }})
    r"""The URL of the registrar that currently manages the domain."""  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domainName'), 'exclude': lambda f: f is None }})
    r"""The domain name. Unicode domain names are expressed in Punycode format."""  
    name_servers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameServers'), 'exclude': lambda f: f is None }})
    r"""The name servers that currently store the configuration of the domain."""  
    supported_privacy: Optional[list[TransferParametersSupportedPrivacyEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportedPrivacy'), 'exclude': lambda f: f is None }})
    r"""Contact privacy options that the domain supports."""  
    transfer_lock_state: Optional[TransferParametersTransferLockStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferLockState'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the domain is protected by a transfer lock. For a transfer to succeed, this must show `UNLOCKED`. To unlock a domain, go to its current registrar."""  
    yearly_price: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('yearlyPrice'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money with its currency type."""  
    