/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * ResultFormattedResultsRuleResults - The enum-like identifier for this rule. For instance "EnableKeepAlive" or "AvoidCssImport". Not localized.
 */
public class ResultFormattedResultsRuleResults {
    /**
     * List of rule groups that this rule belongs to. Each entry in the list is one of "SPEED" or "USABILITY".
     */
    
    public String[] groups;

    public ResultFormattedResultsRuleResults withGroups(String[] groups) {
        this.groups = groups;
        return this;
    }
    
    /**
     * Localized name of the rule, intended for presentation to a user.
     */
    
    public String localizedRuleName;

    public ResultFormattedResultsRuleResults withLocalizedRuleName(String localizedRuleName) {
        this.localizedRuleName = localizedRuleName;
        return this;
    }
    
    /**
     * The impact (unbounded floating point value) that implementing the suggestions for this rule would have on making the page faster. Impact is comparable between rules to determine which rule's suggestions would have a higher or lower impact on making a page faster. For instance, if enabling compression would save 1MB, while optimizing images would save 500kB, the enable compression rule would have 2x the impact of the image optimization rule, all other things being equal.
     */
    
    public Double ruleImpact;

    public ResultFormattedResultsRuleResults withRuleImpact(Double ruleImpact) {
        this.ruleImpact = ruleImpact;
        return this;
    }
    
    
    public PagespeedApiFormatStringV2 summary;

    public ResultFormattedResultsRuleResults withSummary(PagespeedApiFormatStringV2 summary) {
        this.summary = summary;
        return this;
    }
    
    /**
     * List of blocks of URLs. Each block may contain a heading and a list of URLs. Each URL may optionally include additional details.
     */
    
    public ResultFormattedResultsRuleResultsUrlBlocks[] urlBlocks;

    public ResultFormattedResultsRuleResults withUrlBlocks(ResultFormattedResultsRuleResultsUrlBlocks[] urlBlocks) {
        this.urlBlocks = urlBlocks;
        return this;
    }
    
    public ResultFormattedResultsRuleResults(){}
}
