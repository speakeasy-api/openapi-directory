// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeletePublicIpv4PoolActionEnum
type GETDeletePublicIpv4PoolActionEnum string

const (
	GETDeletePublicIpv4PoolActionEnumDeletePublicIpv4Pool GETDeletePublicIpv4PoolActionEnum = "DeletePublicIpv4Pool"
)

func (e GETDeletePublicIpv4PoolActionEnum) ToPointer() *GETDeletePublicIpv4PoolActionEnum {
	return &e
}

func (e *GETDeletePublicIpv4PoolActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeletePublicIpv4Pool":
		*e = GETDeletePublicIpv4PoolActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeletePublicIpv4PoolActionEnum: %v", v)
	}
}

// GETDeletePublicIpv4PoolVersionEnum
type GETDeletePublicIpv4PoolVersionEnum string

const (
	GETDeletePublicIpv4PoolVersionEnumTwoThousandAndSixteen1115 GETDeletePublicIpv4PoolVersionEnum = "2016-11-15"
)

func (e GETDeletePublicIpv4PoolVersionEnum) ToPointer() *GETDeletePublicIpv4PoolVersionEnum {
	return &e
}

func (e *GETDeletePublicIpv4PoolVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeletePublicIpv4PoolVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeletePublicIpv4PoolVersionEnum: %v", v)
	}
}

type GETDeletePublicIpv4PoolRequest struct {
	Action GETDeletePublicIpv4PoolActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the public IPv4 pool you want to delete.
	PoolID            string                             `queryParam:"style=form,explode=true,name=PoolId"`
	Version           GETDeletePublicIpv4PoolVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeletePublicIpv4PoolResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
