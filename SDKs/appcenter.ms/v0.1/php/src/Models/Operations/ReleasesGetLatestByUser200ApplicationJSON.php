<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * ReleasesGetLatestByUser200ApplicationJSON - Details of an uploaded release
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class ReleasesGetLatestByUser200ApplicationJSON
{
    /**
     * The release's minimum required Android API level.
     * 
     * @var ?string $androidMinApiLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('android_min_api_level')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $androidMinApiLevel = null;
    
    /**
     * The app's display name.
     * 
     * @var string $appDisplayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_display_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appDisplayName;
    
    /**
     * A URL to the app's icon.
     * 
     * @var string $appIconUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_icon_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appIconUrl;
    
    /**
     * The app's name (extracted from the uploaded release).
     * 
     * @var string $appName
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appName;
    
    /**
     * The app's OS.
     * 
     * @var ?string $appOs
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_os')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appOs = null;
    
    /**
     * Contains metadata about the build that produced the release being uploaded
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONBuild $build
     */
	#[\JMS\Serializer\Annotation\SerializedName('build')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONBuild')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReleasesGetLatestByUser200ApplicationJSONBuild $build = null;
    
    /**
     * The identifier of the apps bundle.
     * 
     * @var ?string $bundleIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('bundle_identifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bundleIdentifier = null;
    
    /**
     * In calls that allow passing `udid` in the query string, this value determines if a release can be re-signed. When true, after a re-sign, the tester will be able to install the release from his registered devices. Will not be returned for non-iOS platforms.
     * 
     * @var ?bool $canResign
     */
	#[\JMS\Serializer\Annotation\SerializedName('can_resign')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canResign = null;
    
    /**
     * OBSOLETE. Will be removed in next version. The destination type.<br>
     * 
     * <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br>
     * <b>store</b>: The release distributed to external stores and distribution_stores details will be returned.<br>
     * <b>tester</b>: The release distributed testers details will be returned.<br>
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDestinationTypeEnum $destinationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDestinationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReleasesGetLatestByUser200ApplicationJSONDestinationTypeEnum $destinationType = null;
    
    /**
     * A list of distribution groups or stores.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDestinations> $destinations
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDestinations>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $destinations = null;
    
    /**
     * The release's device family.
     * 
     * @var ?string $deviceFamily
     */
	#[\JMS\Serializer\Annotation\SerializedName('device_family')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceFamily = null;
    
    /**
     * OBSOLETE. Will be removed in next version. A list of distribution groups that are associated with this release.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDistributionGroups> $distributionGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('distribution_groups')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDistributionGroups>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $distributionGroups = null;
    
    /**
     * OBSOLETE. Will be removed in next version. A list of distribution stores that are associated with this release.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDistributionStores> $distributionStores
     */
	#[\JMS\Serializer\Annotation\SerializedName('distribution_stores')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONDistributionStores>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $distributionStores = null;
    
    /**
     * The URL that hosts the binary for this release.
     * 
     * @var ?string $downloadUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('download_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $downloadUrl = null;
    
    /**
     * This value determines the whether a release currently is enabled or disabled.
     * 
     * @var bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enabled;
    
    /**
     * MD5 checksum of the release binary.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * ID identifying this unique release.
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`
     * 
     * @var ?string $installUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('install_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $installUrl = null;
    
    /**
     * This value determines if a release is external or not.
     * 
     * @var ?bool $isExternalBuild
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_external_build')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isExternalBuild = null;
    
    /**
     * A flag that determines whether the release's provisioning profile is still extracted or not.
     * 
     * @var ?bool $isProvisioningProfileSyncing
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_provisioning_profile_syncing')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isProvisioningProfileSyncing = null;
    
    /**
     * In calls that allow passing `udid` in the query string, this value will hold the provisioning status of that UDID in this release. Will be ignored for non-iOS platforms.
     * 
     * @var ?bool $isUdidProvisioned
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_udid_provisioned')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isUdidProvisioned = null;
    
    /**
     * The release's minimum required operating system.
     * 
     * @var ?string $minOs
     */
	#[\JMS\Serializer\Annotation\SerializedName('min_os')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minOs = null;
    
    /**
     * The release's origin
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONOriginEnum $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONOriginEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReleasesGetLatestByUser200ApplicationJSONOriginEnum $origin = null;
    
    /**
     * Hashes for the packages.
     * 
     * @var ?array<string> $packageHashes
     */
	#[\JMS\Serializer\Annotation\SerializedName('package_hashes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $packageHashes = null;
    
    /**
     * expiration date of provisioning profile in UTC format.
     * 
     * @var ?string $provisioningProfileExpiryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('provisioning_profile_expiry_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisioningProfileExpiryDate = null;
    
    /**
     * The release's provisioning profile name.
     * 
     * @var ?string $provisioningProfileName
     */
	#[\JMS\Serializer\Annotation\SerializedName('provisioning_profile_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisioningProfileName = null;
    
    /**
     * The type of the provisioning profile for the requested app version.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONProvisioningProfileTypeEnum $provisioningProfileType
     */
	#[\JMS\Serializer\Annotation\SerializedName('provisioning_profile_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ReleasesGetLatestByUser200ApplicationJSONProvisioningProfileTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReleasesGetLatestByUser200ApplicationJSONProvisioningProfileTypeEnum $provisioningProfileType = null;
    
    /**
     * The release's release notes.
     * 
     * @var ?string $releaseNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('release_notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $releaseNotes = null;
    
    /**
     * The URL that hosts the secondary binary for this release, such as the apk file for aab releases.
     * 
     * @var ?string $secondaryDownloadUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondary_download_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secondaryDownloadUrl = null;
    
    /**
     * The release's short version.<br>
     * 
     * For iOS: CFBundleShortVersionString from info.plist.
     * For Android: android:versionName from AppManifest.xml.
     * 
     * 
     * @var string $shortVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('short_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shortVersion;
    
    /**
     * The release's size in bytes.
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
    /**
     * Status of the release.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * UTC time in ISO 8601 format of the uploaded time.
     * 
     * @var string $uploadedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('uploaded_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uploadedAt;
    
    /**
     * The release's version.<br>
     * 
     * For iOS: CFBundleVersion from info.plist.
     * For Android: android:versionCode from AppManifest.xml.
     * 
     * 
     * @var string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $version;
    
	public function __construct()
	{
		$this->androidMinApiLevel = null;
		$this->appDisplayName = "";
		$this->appIconUrl = "";
		$this->appName = "";
		$this->appOs = null;
		$this->build = null;
		$this->bundleIdentifier = null;
		$this->canResign = null;
		$this->destinationType = null;
		$this->destinations = null;
		$this->deviceFamily = null;
		$this->distributionGroups = null;
		$this->distributionStores = null;
		$this->downloadUrl = null;
		$this->enabled = false;
		$this->fingerprint = null;
		$this->id = 0;
		$this->installUrl = null;
		$this->isExternalBuild = null;
		$this->isProvisioningProfileSyncing = null;
		$this->isUdidProvisioned = null;
		$this->minOs = null;
		$this->origin = null;
		$this->packageHashes = null;
		$this->provisioningProfileExpiryDate = null;
		$this->provisioningProfileName = null;
		$this->provisioningProfileType = null;
		$this->releaseNotes = null;
		$this->secondaryDownloadUrl = null;
		$this->shortVersion = "";
		$this->size = null;
		$this->status = null;
		$this->uploadedAt = "";
		$this->version = "";
	}
}
