/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Entity {
    /**
     * Administrative name (region).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("administrative")
    public String administrative;

    public Entity withAdministrative(String administrative) {
        this.administrative = administrative;
        return this;
    }
    
    /**
     * City name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public Entity withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Country name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public Entity withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * [Two-letter ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countrycode")
    public String countrycode;

    public Entity withCountrycode(String countrycode) {
        this.countrycode = countrycode;
        return this;
    }
    
    /**
     * County name (department).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("county")
    public String county;

    public Entity withCounty(String county) {
        this.county = county;
        return this;
    }
    
    /**
     * Name of the current entity with highlighted matched words.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("highlight")
    public String highlight;

    public Entity withHighlight(String highlight) {
        this.highlight = highlight;
        return this;
    }
    
    /**
     * Latitude.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lat")
    public Double lat;

    public Entity withLat(Double lat) {
        this.lat = lat;
        return this;
    }
    
    /**
     * Longitude.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lng")
    public Double lng;

    public Entity withLng(Double lng) {
        this.lng = lng;
        return this;
    }
    
    /**
     * Name of the current entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Entity withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Population number of the entity city.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("population")
    public Long population;

    public Entity withPopulation(Long population) {
        this.population = population;
        return this;
    }
    
    /**
     * Type of the entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public EntityTypeEnum type;

    public Entity withType(EntityTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Postcodes associated with the entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zipcode")
    public String[] zipcode;

    public Entity withZipcode(String[] zipcode) {
        this.zipcode = zipcode;
        return this;
    }
    
    public Entity(){}
}
