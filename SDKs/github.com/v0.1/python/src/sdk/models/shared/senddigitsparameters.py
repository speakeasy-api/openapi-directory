"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class SendDigitsParametersLegEnum(str, Enum):
    r"""Call leg(s) to which DTMFs will be sent; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable."""
    ALEG = 'aleg'
    BLEG = 'bleg'
    BOTH = 'both'


@dataclasses.dataclass
class SendDigitsParameters:
    r"""POST parameters"""
    
    call_uuid: str = dataclasses.field(metadata={'form': { 'field_name': 'CallUUID' }})
    r"""Unique identifier of the call to send DTMF to"""  
    digits: str = dataclasses.field(metadata={'form': { 'field_name': 'Digits' }})
    r"""DTMF tones to be sent; each occurrence of `w` implies a 0.5 seconds delay whereas `W` will apply a whole second delay. To alter the tone duration (by default, 2000ms), append `@` and the length in milliseconds at the end of the string"""  
    leg: Optional[SendDigitsParametersLegEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Leg' }})
    r"""Call leg(s) to which DTMFs will be sent; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable."""  
    