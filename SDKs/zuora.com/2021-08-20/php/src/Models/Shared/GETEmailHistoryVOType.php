<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GETEmailHistoryVOType
{
    /**
     * Blind carbon copy recipients of the email.
     * 
     * 
     * 
     * @var ?string $bcc
     */
	#[\JMS\Serializer\Annotation\SerializedName('bcc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bcc = null;
    
    /**
     * Carbon Copy recipients of the email.
     * 
     * 
     * 
     * @var ?string $cc
     */
	#[\JMS\Serializer\Annotation\SerializedName('cc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cc = null;
    
    /**
     * null if the content of result is "OK". A description of the error if the content of result is not "OK".
     * 
     * 
     * 
     * @var ?string $errorMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorMessage = null;
    
    /**
     * The event category of the email.
     * 
     * 
     * 
     * @var ?string $eventCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventCategory')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventCategory = null;
    
    /**
     * The sender of the email.
     * 
     * 
     * 
     * @var ?string $fromEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromEmail = null;
    
    /**
     * The name of the notification.
     * 
     * 
     * 
     * @var ?string $notification
     */
	#[\JMS\Serializer\Annotation\SerializedName('notification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notification = null;
    
    /**
     * The reply-to address as configured in the email template.
     * 
     * 
     * 
     * @var ?string $replyTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyTo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyTo = null;
    
    /**
     * The result from the mail server of sending the email.
     * 
     * 
     * 
     * @var ?string $result
     */
	#[\JMS\Serializer\Annotation\SerializedName('result')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $result = null;
    
    /**
     * The date and time the email was sent.
     * 
     * 
     * 
     * @var ?string $sendTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('sendTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sendTime = null;
    
    /**
     * The subject of the email.
     * 
     * 
     * 
     * @var ?string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subject = null;
    
    /**
     * The intended recipient of the email.
     * 
     * 
     * 
     * @var ?string $toEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('toEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $toEmail = null;
    
	public function __construct()
	{
		$this->bcc = null;
		$this->cc = null;
		$this->errorMessage = null;
		$this->eventCategory = null;
		$this->fromEmail = null;
		$this->notification = null;
		$this->replyTo = null;
		$this->result = null;
		$this->sendTime = null;
		$this->subject = null;
		$this->toEmail = null;
	}
}
