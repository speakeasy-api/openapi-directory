/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Permit } from "./permit";
import { Expose, Type } from "class-transformer";

export class CreatePermitRequest extends SpeakeasyBase {
  /**
   * The merchant account identifier, with which you want to process the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantAccount" })
  merchantAccount: string;

  /**
   * The permits to create for this recurring contract.
   */
  @SpeakeasyMetadata({ elemType: Permit })
  @Expose({ name: "permits" })
  @Type(() => Permit)
  permits: Permit[];

  /**
   * The recurring contract the new permits will use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recurringDetailReference" })
  recurringDetailReference: string;

  /**
   * The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperReference" })
  shopperReference: string;
}
