// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type LicenseImagesSecurity struct {
	CustomerAccessCode string `security:"scheme,type=oauth2,name=Authorization"`
}

// LicenseImagesFormatEnum - (Deprecated) Image format
type LicenseImagesFormatEnum string

const (
	LicenseImagesFormatEnumEps LicenseImagesFormatEnum = "eps"
	LicenseImagesFormatEnumJpg LicenseImagesFormatEnum = "jpg"
)

func (e *LicenseImagesFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "eps":
		fallthrough
	case "jpg":
		*e = LicenseImagesFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseImagesFormatEnum: %s", s)
	}
}

// LicenseImagesSizeEnum - Image size
type LicenseImagesSizeEnum string

const (
	LicenseImagesSizeEnumSmall  LicenseImagesSizeEnum = "small"
	LicenseImagesSizeEnumMedium LicenseImagesSizeEnum = "medium"
	LicenseImagesSizeEnumHuge   LicenseImagesSizeEnum = "huge"
	LicenseImagesSizeEnumVector LicenseImagesSizeEnum = "vector"
	LicenseImagesSizeEnumCustom LicenseImagesSizeEnum = "custom"
)

func (e *LicenseImagesSizeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "huge":
		fallthrough
	case "vector":
		fallthrough
	case "custom":
		*e = LicenseImagesSizeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseImagesSizeEnum: %s", s)
	}
}

type LicenseImagesRequest struct {
	// List of images to request licenses for and information about each license transaction; these values override the defaults in the query parameters
	LicenseImageRequest shared.LicenseImageRequest `request:"mediaType=application/json"`
	// (Deprecated) Image format
	Format *LicenseImagesFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// Search ID that was provided in the results of an image search
	SearchID *string `queryParam:"style=form,explode=true,name=search_id"`
	// Image size
	Size *LicenseImagesSizeEnum `queryParam:"style=form,explode=true,name=size"`
	// Subscription ID to use to license the image
	SubscriptionID *string `queryParam:"style=form,explode=true,name=subscription_id"`
}

type LicenseImagesResponse struct {
	ContentType string
	// OK
	LicenseImageResultDataList *shared.LicenseImageResultDataList
	StatusCode                 int
	RawResponse                *http.Response
}
