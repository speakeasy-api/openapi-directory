// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteLicenseXAmzTargetEnum
type DeleteLicenseXAmzTargetEnum string

const (
	DeleteLicenseXAmzTargetEnumAwsLicenseManagerDeleteLicense DeleteLicenseXAmzTargetEnum = "AWSLicenseManager.DeleteLicense"
)

func (e DeleteLicenseXAmzTargetEnum) ToPointer() *DeleteLicenseXAmzTargetEnum {
	return &e
}

func (e *DeleteLicenseXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSLicenseManager.DeleteLicense":
		*e = DeleteLicenseXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteLicenseXAmzTargetEnum: %v", v)
	}
}

type DeleteLicenseRequest struct {
	DeleteLicenseRequest shared.DeleteLicenseRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           DeleteLicenseXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteLicenseResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	DeleteLicenseResponse *shared.DeleteLicenseResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	// RedirectException
	RedirectException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServerInternalException
	ServerInternalException interface{}
	// ValidationException
	ValidationException interface{}
}
