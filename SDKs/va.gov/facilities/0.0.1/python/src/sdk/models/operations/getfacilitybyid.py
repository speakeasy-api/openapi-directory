"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import facilityreadresponse as shared_facilityreadresponse
from ..shared import genericerror as shared_genericerror
from ..shared import geofacilityreadresponse as shared_geofacilityreadresponse
from typing import Optional


@dataclasses.dataclass
class GetFacilityByIDSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'apikey' }})  
    

@dataclasses.dataclass
class GetFacilityByIDRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Facility ID, in the form `<prefix>_<station>`, where prefix is one of \\"vha\\", \\"vba\\", \\"nca\\", or \\"vc\\", for health facility, benefits, cemetery, or vet center, respectively."""  
    

@dataclasses.dataclass
class GetFacilityByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Bad request - invalid or missing query parameters"""  
    facility_read_response: Optional[shared_facilityreadresponse.FacilityReadResponse] = dataclasses.field(default=None)
    r"""Success"""  
    generic_error: Optional[shared_genericerror.GenericError] = dataclasses.field(default=None)
    r"""Missing API token"""  
    geo_facility_read_response: Optional[shared_geofacilityreadresponse.GeoFacilityReadResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    