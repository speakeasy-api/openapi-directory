"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScoutingObservation = exports.ScoutingObservationTimespanEnum = exports.ScoutingObservationStatusEnum = exports.ScoutingObservationLocationDisplayColorEnum = void 0;
var utils_1 = require("../../../internal/utils");
var geometry_1 = require("./geometry");
var scoutingtag_1 = require("./scoutingtag");
var class_transformer_1 = require("class-transformer");
/**
 * Color of scouting pin assigned in the Climate FieldView app.
 *
 * @remarks
 * Limited in the Ux to a set of RGB values.
 * * #307af7
 * * #38d753
 * * #b037e4
 * * #ef3e3e
 * * #f7ec41
 * * #ff8439
 * * #808080
 *
 */
var ScoutingObservationLocationDisplayColorEnum;
(function (ScoutingObservationLocationDisplayColorEnum) {
    ScoutingObservationLocationDisplayColorEnum["Number307af7"] = "#307af7";
    ScoutingObservationLocationDisplayColorEnum["Number38d753"] = "#38d753";
    ScoutingObservationLocationDisplayColorEnum["NumberB037e4"] = "#b037e4";
    ScoutingObservationLocationDisplayColorEnum["NumberEf3e3e"] = "#ef3e3e";
    ScoutingObservationLocationDisplayColorEnum["NumberF7ec41"] = "#f7ec41";
    ScoutingObservationLocationDisplayColorEnum["NumberFf8439"] = "#ff8439";
    ScoutingObservationLocationDisplayColorEnum["Number808080"] = "#808080";
})(ScoutingObservationLocationDisplayColorEnum = exports.ScoutingObservationLocationDisplayColorEnum || (exports.ScoutingObservationLocationDisplayColorEnum = {}));
/**
 * The status of the scouting observation For example : ACTIVE, DELETED
 */
var ScoutingObservationStatusEnum;
(function (ScoutingObservationStatusEnum) {
    ScoutingObservationStatusEnum["Active"] = "ACTIVE";
    ScoutingObservationStatusEnum["Deleted"] = "DELETED";
})(ScoutingObservationStatusEnum = exports.ScoutingObservationStatusEnum || (exports.ScoutingObservationStatusEnum = {}));
/**
 * Permanent or seasonal
 */
var ScoutingObservationTimespanEnum;
(function (ScoutingObservationTimespanEnum) {
    ScoutingObservationTimespanEnum["Permanent"] = "PERMANENT";
    ScoutingObservationTimespanEnum["Seasonal"] = "SEASONAL";
})(ScoutingObservationTimespanEnum = exports.ScoutingObservationTimespanEnum || (exports.ScoutingObservationTimespanEnum = {}));
/**
 * Returns the requested scouting observation.
 */
var ScoutingObservation = /** @class */ (function (_super) {
    __extends(ScoutingObservation, _super);
    function ScoutingObservation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "endTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ScoutingObservation.prototype, "endTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fieldIds" }),
        __metadata("design:type", Array)
    ], ScoutingObservation.prototype, "fieldIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ScoutingObservation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        (0, class_transformer_1.Type)(function () { return geometry_1.Geometry; }),
        __metadata("design:type", geometry_1.Geometry)
    ], ScoutingObservation.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locationDisplayColor" }),
        __metadata("design:type", String)
    ], ScoutingObservation.prototype, "locationDisplayColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "note" }),
        __metadata("design:type", String)
    ], ScoutingObservation.prototype, "note", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ScoutingObservation.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], ScoutingObservation.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: scoutingtag_1.ScoutingTag }),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        (0, class_transformer_1.Type)(function () { return scoutingtag_1.ScoutingTag; }),
        __metadata("design:type", Array)
    ], ScoutingObservation.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timespan" }),
        __metadata("design:type", String)
    ], ScoutingObservation.prototype, "timespan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], ScoutingObservation.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ScoutingObservation.prototype, "updatedAt", void 0);
    return ScoutingObservation;
}(utils_1.SpeakeasyBase));
exports.ScoutingObservation = ScoutingObservation;
