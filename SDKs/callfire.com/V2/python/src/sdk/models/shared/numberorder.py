"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import numberorderitem as shared_numberorderitem
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NumberOrderStatusEnum(str, Enum):
    r"""A current status of an order. Available values: NEW, PROCESSING, FINISHED, ERRORED, VOID, WAIT_FOR_PAYMENT, REJECTED"""
    PROCESSING = 'PROCESSING'
    FINISHED = 'FINISHED'
    PAYMENT_ERROR = 'PAYMENT_ERROR'
    VOID = 'VOID'
    WAIT_FOR_PAYMENT = 'WAIT_FOR_PAYMENT'
    PARTIALLY_ADJUSTED = 'PARTIALLY_ADJUSTED'
    ADJUSTED = 'ADJUSTED'
    NEW = 'NEW'
    ERRORED = 'ERRORED'
    APPROVE_TIER_ONE = 'APPROVE_TIER_ONE'
    APPROVE_TIER_TWO = 'APPROVE_TIER_TWO'
    REJECTED = 'REJECTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NumberOrder:
    r"""Represents an order created on the CallFire platform"""
    
    created: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'exclude': lambda f: f is None }})
    r"""The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""An id of an order"""  
    keywords: Optional[shared_numberorderitem.NumberOrderItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keywords'), 'exclude': lambda f: f is None }})
    r"""Represents an order item of a particular order"""  
    local_numbers: Optional[shared_numberorderitem.NumberOrderItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localNumbers'), 'exclude': lambda f: f is None }})
    r"""Represents an order item of a particular order"""  
    sales_tax: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesTax'), 'exclude': lambda f: f is None }})
    r"""~"""  
    status: Optional[NumberOrderStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""A current status of an order. Available values: NEW, PROCESSING, FINISHED, ERRORED, VOID, WAIT_FOR_PAYMENT, REJECTED"""  
    summary: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summary'), 'exclude': lambda f: f is None }})
    r"""~"""  
    toll_free_numbers: Optional[shared_numberorderitem.NumberOrderItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tollFreeNumbers'), 'exclude': lambda f: f is None }})
    r"""Represents an order item of a particular order"""  
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""~"""  
    total_cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalCost'), 'exclude': lambda f: f is None }})
    r"""A total cost of an order"""  
    