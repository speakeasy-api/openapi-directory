/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VideoConfiguration - Object specifying a stream\u2019s video configuration, as set up by the broadcaster (usually in an encoder). This is part of the &lt;a&gt;IngestConfiguration&lt;/a&gt; object and used for monitoring stream health.
 */
public class VideoConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avcLevel")
    public String avcLevel;
    public VideoConfiguration withAvcLevel(String avcLevel) {
        this.avcLevel = avcLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avcProfile")
    public String avcProfile;
    public VideoConfiguration withAvcProfile(String avcProfile) {
        this.avcProfile = avcProfile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codec")
    public String codec;
    public VideoConfiguration withCodec(String codec) {
        this.codec = codec;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encoder")
    public String encoder;
    public VideoConfiguration withEncoder(String encoder) {
        this.encoder = encoder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetBitrate")
    public Long targetBitrate;
    public VideoConfiguration withTargetBitrate(Long targetBitrate) {
        this.targetBitrate = targetBitrate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetFramerate")
    public Long targetFramerate;
    public VideoConfiguration withTargetFramerate(Long targetFramerate) {
        this.targetFramerate = targetFramerate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoHeight")
    public Long videoHeight;
    public VideoConfiguration withVideoHeight(Long videoHeight) {
        this.videoHeight = videoHeight;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoWidth")
    public Long videoWidth;
    public VideoConfiguration withVideoWidth(Long videoWidth) {
        this.videoWidth = videoWidth;
        return this;
    }
    
}
