/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Object that indicates if the term was misspelled and suggests a possible correction.
 */
export class CorrectionCorrection extends SpeakeasyBase {
  /**
   * Whether the API was able to suggest a correction (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "correction" })
  correction?: boolean;

  /**
   * The same as `text`, but it highlights the corrected word. Useful when there is more than one word.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "highlighted" })
  highlighted?: string;

  /**
   * Whether the term was misspelled (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "misspelled" })
  misspelled?: boolean;

  /**
   * The corrected term. If the API was not able to correct the term, it will show the original search term.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;
}

/**
 * OK
 */
export class Correction extends SpeakeasyBase {
  /**
   * Object that indicates if the term was misspelled and suggests a possible correction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "correction" })
  @Type(() => CorrectionCorrection)
  correction?: CorrectionCorrection;
}
