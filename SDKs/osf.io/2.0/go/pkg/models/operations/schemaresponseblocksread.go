// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type SchemaResponseBlocksReadRequest struct {
	// The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
	SchemaResponseID string `pathParam:"style=simple,explode=false,name=schema_response_id"`
}

// SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum - A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend.
type SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum string

const (
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumPageHeading       SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "page-heading"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumSectionHeading    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "section-heading"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumSubsectionHeading SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "subsection-heading"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumParagraph         SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "paragraph"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumQuestionLabel     SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "question-label"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumShortTextInput    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "short-text-input"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumLongTextInput     SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "long-text-input"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumFileInput         SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "file-input"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumContributorsInput SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "contributors-input"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumSingleSelectInput SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "single-select-input"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumMultiSelectInput  SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "multi-select-input"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumSelectInputOption SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "select-input-option"
	SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnumSelectOtherOption SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = "select-other-option"
)

func (e SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum) ToPointer() *SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum {
	return &e
}

func (e *SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "page-heading":
		fallthrough
	case "section-heading":
		fallthrough
	case "subsection-heading":
		fallthrough
	case "paragraph":
		fallthrough
	case "question-label":
		fallthrough
	case "short-text-input":
		fallthrough
	case "long-text-input":
		fallthrough
	case "file-input":
		fallthrough
	case "contributors-input":
		fallthrough
	case "single-select-input":
		fallthrough
	case "multi-select-input":
		fallthrough
	case "select-input-option":
		fallthrough
	case "select-other-option":
		*e = SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum: %v", v)
	}
}

// SchemaResponseBlocksReadRegistrationSchemaBlockAttributes - The attributes of the Registration Schema Block.
type SchemaResponseBlocksReadRegistrationSchemaBlockAttributes struct {
	// A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend.
	BlockType *SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum
	// The text that will accompany the UI element displayed on this Registration Schema Block.
	DisplayText *string
	// The text that will accompany the UI element displayed on this Registration Schema Block.
	ExampleText *string
	// Integer beginning at zero that represents the order of Registration Schema Block in the Registration Schema.
	Index *int64
	// This string is the the block key for the Registration Schema Block's corresponding block on the Schema Response.
	RegistrationResponseKey *string
	// Bool that represents if this field is required for creation of a Schema Response.
	Required *bool
	// This string indicates if a block is part of a block group, block groups may contain the different options dropdown menu or a group of inputs and display elements that are validated together.
	SchemaBlockGroupKey *string
}

// SchemaResponseBlocksReadRegistrationSchemaBlockLinks - URLs to alternative representations of the  Registration Schema Block.
type SchemaResponseBlocksReadRegistrationSchemaBlockLinks struct {
	// A link to the detail page for a Registration Schema Block.
	Self *string
}

// SchemaResponseBlocksReadRegistrationSchemaBlockRelationships - Links to other entities or entity collections that have a relationship to the Schema Response Action.
type SchemaResponseBlocksReadRegistrationSchemaBlockRelationships struct {
	// A link to the schema the the Registration Schema Block is on.
	Schema *string
}

// SchemaResponseBlocksReadRegistrationSchemaBlock - OK
type SchemaResponseBlocksReadRegistrationSchemaBlock struct {
	// The attributes of the Registration Schema Block.
	Attributes *SchemaResponseBlocksReadRegistrationSchemaBlockAttributes
	// The unique identifier of the Registration Schema Block.
	ID *string
	// URLs to alternative representations of the  Registration Schema Block.
	Links *SchemaResponseBlocksReadRegistrationSchemaBlockLinks
	// Links to other entities or entity collections that have a relationship to the Schema Response Action.
	Relationships *SchemaResponseBlocksReadRegistrationSchemaBlockRelationships
	// The type identifier of the Registration Schema Block (`schema-blocks`).
	Type *string
}

type SchemaResponseBlocksReadResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
