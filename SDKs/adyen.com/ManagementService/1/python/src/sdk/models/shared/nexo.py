"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventurl as shared_eventurl
from ..shared import key as shared_key
from ..shared import notificationurl as shared_notificationurl
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Nexo:
    
    display_urls: Optional[shared_notificationurl.NotificationURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayUrls'), 'exclude': lambda f: f is None }})  
    encryption_key: Optional[shared_key.Key] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryptionKey'), 'exclude': lambda f: f is None }})  
    event_urls: Optional[shared_eventurl.EventURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventUrls'), 'exclude': lambda f: f is None }})  
    nexo_event_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nexoEventUrls'), 'exclude': lambda f: f is None }})
    r"""One or more URLs to send event messages to when using Terminal API."""  
    