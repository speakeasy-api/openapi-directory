/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
 */
export enum SeasonTeamsFormatEnum {
  Xml = "xml",
  Json = "json",
}

export class SeasonTeamsRequest extends SpeakeasyBase {
  /**
   * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: SeasonTeamsFormatEnum;

  /**
   * Unique FantasyData Season ID. SeasonIDs can be found in the Competition Hierarchy (League Hierarchy).
   *
   * @remarks
   * Examples: <code>1</code>, <code>2</code>, <code>3</code>, etc
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=seasonid",
  })
  seasonid: string;
}

export class SeasonTeamsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata({ elemType: shared.SeasonTeam })
  seasonTeams?: shared.SeasonTeam[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
