/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Channel - A *channel* resource contains information about a YouTube channel.
 */
public class Channel {
    /**
     * The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auditDetails")
    public ChannelAuditDetails auditDetails;

    public Channel withAuditDetails(ChannelAuditDetails auditDetails) {
        this.auditDetails = auditDetails;
        return this;
    }
    
    /**
     * Branding properties of a YouTube channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brandingSettings")
    public ChannelBrandingSettings brandingSettings;

    public Channel withBrandingSettings(ChannelBrandingSettings brandingSettings) {
        this.brandingSettings = brandingSettings;
        return this;
    }
    
    /**
     * Details about the content of a channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentDetails")
    public ChannelContentDetails contentDetails;

    public Channel withContentDetails(ChannelContentDetails contentDetails) {
        this.contentDetails = contentDetails;
        return this;
    }
    
    /**
     * The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentOwnerDetails")
    public ChannelContentOwnerDetails contentOwnerDetails;

    public Channel withContentOwnerDetails(ChannelContentOwnerDetails contentOwnerDetails) {
        this.contentOwnerDetails = contentOwnerDetails;
        return this;
    }
    
    /**
     * The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversionPings")
    public ChannelConversionPings conversionPings;

    public Channel withConversionPings(ChannelConversionPings conversionPings) {
        this.conversionPings = conversionPings;
        return this;
    }
    
    /**
     * Etag of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Channel withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The ID that YouTube uses to uniquely identify the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Channel withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "youtube#channel".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Channel withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Localizations for different languages
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localizations")
    public java.util.Map<String, ChannelLocalization> localizations;

    public Channel withLocalizations(java.util.Map<String, ChannelLocalization> localizations) {
        this.localizations = localizations;
        return this;
    }
    
    /**
     * Basic details about a channel, including title, description and thumbnails.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snippet")
    public ChannelSnippet snippet;

    public Channel withSnippet(ChannelSnippet snippet) {
        this.snippet = snippet;
        return this;
    }
    
    /**
     * Statistics about a channel: number of subscribers, number of videos in the channel, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statistics")
    public ChannelStatistics statistics;

    public Channel withStatistics(ChannelStatistics statistics) {
        this.statistics = statistics;
        return this;
    }
    
    /**
     * JSON template for the status part of a channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ChannelStatus status;

    public Channel withStatus(ChannelStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Freebase topic information related to the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topicDetails")
    public ChannelTopicDetails topicDetails;

    public Channel withTopicDetails(ChannelTopicDetails topicDetails) {
        this.topicDetails = topicDetails;
        return this;
    }
    
    public Channel(){}
}
