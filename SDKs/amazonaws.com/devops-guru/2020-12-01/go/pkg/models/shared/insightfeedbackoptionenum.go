// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InsightFeedbackOptionEnum string

const (
	InsightFeedbackOptionEnumValidCollection      InsightFeedbackOptionEnum = "VALID_COLLECTION"
	InsightFeedbackOptionEnumRecommendationUseful InsightFeedbackOptionEnum = "RECOMMENDATION_USEFUL"
	InsightFeedbackOptionEnumAlertTooSensitive    InsightFeedbackOptionEnum = "ALERT_TOO_SENSITIVE"
	InsightFeedbackOptionEnumDataNoisyAnomaly     InsightFeedbackOptionEnum = "DATA_NOISY_ANOMALY"
	InsightFeedbackOptionEnumDataIncorrect        InsightFeedbackOptionEnum = "DATA_INCORRECT"
)

func (e *InsightFeedbackOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALID_COLLECTION":
		fallthrough
	case "RECOMMENDATION_USEFUL":
		fallthrough
	case "ALERT_TOO_SENSITIVE":
		fallthrough
	case "DATA_NOISY_ANOMALY":
		fallthrough
	case "DATA_INCORRECT":
		*e = InsightFeedbackOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsightFeedbackOptionEnum: %s", s)
	}
}
