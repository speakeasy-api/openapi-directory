<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Service - Represents a Service or API definition as registred into Microcks repository
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Service
{
    /**
     * Unique identifier for this Service or API
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Metadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Metadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Metadata $metadata = null;
    
    /**
     * Distinct name for this Service or API (maybe shared among many versions)
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Set of Operations for Service or API
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Operation> $operations
     */
	#[\JMS\Serializer\Annotation\SerializedName('operations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Operation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $operations = null;
    
    /**
     * Service or API Type
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ServiceTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ServiceTypeEnum>')]
    public ServiceTypeEnum $type;
    
    /**
     * Distinct version for a named Service or API
     * 
     * @var string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $version;
    
    /**
     * Associated Xml Namespace in case of Xml based Service
     * 
     * @var ?string $xmlNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('xmlNS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $xmlNS = null;
    
	public function __construct()
	{
		$this->id = null;
		$this->metadata = null;
		$this->name = "";
		$this->operations = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\ServiceTypeEnum::REST;
		$this->version = "";
		$this->xmlNS = null;
	}
}
