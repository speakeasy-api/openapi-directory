/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ActionFunctionIdentifier } from "./actionfunctionidentifier";
import { ActionLabels } from "./actionlabels";
import { InputFieldDefinition } from "./inputfielddefinition";
import { ObjectRequestOptions } from "./objectrequestoptions";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Configuration for custom workflow action.
 */
export class ExtensionActionDefinition extends SpeakeasyBase {
  /**
   * The URL that will accept an HTTPS request each time workflows executes the custom action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actionUrl" })
  actionUrl: string;

  /**
   * The date that this custom action was archived, if the custom action is archived.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archivedAt" })
  archivedAt?: number;

  /**
   * A list of functions associated with the custom workflow action.
   */
  @SpeakeasyMetadata({ elemType: ActionFunctionIdentifier })
  @Expose({ name: "functions" })
  @Type(() => ActionFunctionIdentifier)
  functions: ActionFunctionIdentifier[];

  /**
   * The ID of the custom action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * A list of dependencies between the input fields. These configure when the input fields should be visible.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputFieldDependencies" })
  inputFieldDependencies?: any[];

  /**
   * The list of input fields to display in this custom action.
   */
  @SpeakeasyMetadata({ elemType: InputFieldDefinition })
  @Expose({ name: "inputFields" })
  @Type(() => InputFieldDefinition)
  inputFields: InputFieldDefinition[];

  /**
   * The user-facing labels for the custom action.
   */
  @SpeakeasyMetadata({ elemType: ActionLabels })
  @Expose({ name: "labels" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ActionLabels> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ActionLabels);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  labels: Record<string, ActionLabels>;

  /**
   * Configures what properties of the enrolled CRM object are included in the action execution request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectRequestOptions" })
  @Type(() => ObjectRequestOptions)
  objectRequestOptions?: ObjectRequestOptions;

  /**
   * The object types that this custom action supports.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectTypes" })
  objectTypes: string[];

  /**
   * Whether this custom action is published to customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published" })
  published: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "revisionId" })
  revisionId: string;
}
