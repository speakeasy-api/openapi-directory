/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoalRequestInput - A generic Asana Resource, containing a globally unique identifier.
 */
public class GoalRequestInput {
    /**
     * The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("due_on")
    public String dueOn;
    public GoalRequestInput withDueOn(String dueOn) {
        this.dueOn = dueOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("followers")
    public String[] followers;
    public GoalRequestInput withFollowers(String[] followers) {
        this.followers = followers;
        return this;
    }
    
    /**
     * The notes of the goal with formatting as HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_notes")
    public String htmlNotes;
    public GoalRequestInput withHtmlNotes(String htmlNotes) {
        this.htmlNotes = htmlNotes;
        return this;
    }
    
    /**
     * *Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspace\u2019s goals) or not. If it isn\u2019t a workspace-level goal, it is a team-level goal, and is associated with the goal\u2019s team.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_workspace_level")
    public Boolean isWorkspaceLevel;
    public GoalRequestInput withIsWorkspaceLevel(Boolean isWorkspaceLevel) {
        this.isWorkspaceLevel = isWorkspaceLevel;
        return this;
    }
    
    /**
     * True if the goal is liked by the authorized user, false if not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liked")
    public Boolean liked;
    public GoalRequestInput withLiked(Boolean liked) {
        this.liked = liked;
        return this;
    }
    
    /**
     * The name of the goal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoalRequestInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Free-form textual information associated with the goal (i.e. its description).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public GoalRequestInput withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The `gid` of a user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public String owner;
    public GoalRequestInput withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_on")
    public String startOn;
    public GoalRequestInput withStartOn(String startOn) {
        this.startOn = startOn;
        return this;
    }
    
    /**
     * The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect "On Track", "At Risk", and "Off Track", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`.
     * *Note* you can only write to this property if `metric` is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public GoalRequestInput withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * *Conditional*. This property is only present when the `workspace` provided is an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team")
    public String team;
    public GoalRequestInput withTeam(String team) {
        this.team = team;
        return this;
    }
    
    /**
     * The `gid` of a time period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time_period")
    public String timePeriod;
    public GoalRequestInput withTimePeriod(String timePeriod) {
        this.timePeriod = timePeriod;
        return this;
    }
    
    /**
     * The `gid` of a workspace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace")
    public String workspace;
    public GoalRequestInput withWorkspace(String workspace) {
        this.workspace = workspace;
        return this;
    }
    
}
