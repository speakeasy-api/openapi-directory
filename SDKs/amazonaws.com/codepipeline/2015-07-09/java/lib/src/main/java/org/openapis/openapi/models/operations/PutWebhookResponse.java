/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PutWebhookResponse {
    /**
     * ConcurrentModificationException
     */
    
    public Object concurrentModificationException;

    public PutWebhookResponse withConcurrentModificationException(Object concurrentModificationException) {
        this.concurrentModificationException = concurrentModificationException;
        return this;
    }
    
    
    public String contentType;

    public PutWebhookResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InvalidTagsException
     */
    
    public Object invalidTagsException;

    public PutWebhookResponse withInvalidTagsException(Object invalidTagsException) {
        this.invalidTagsException = invalidTagsException;
        return this;
    }
    
    /**
     * InvalidWebhookAuthenticationParametersException
     */
    
    public Object invalidWebhookAuthenticationParametersException;

    public PutWebhookResponse withInvalidWebhookAuthenticationParametersException(Object invalidWebhookAuthenticationParametersException) {
        this.invalidWebhookAuthenticationParametersException = invalidWebhookAuthenticationParametersException;
        return this;
    }
    
    /**
     * InvalidWebhookFilterPatternException
     */
    
    public Object invalidWebhookFilterPatternException;

    public PutWebhookResponse withInvalidWebhookFilterPatternException(Object invalidWebhookFilterPatternException) {
        this.invalidWebhookFilterPatternException = invalidWebhookFilterPatternException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public PutWebhookResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * PipelineNotFoundException
     */
    
    public Object pipelineNotFoundException;

    public PutWebhookResponse withPipelineNotFoundException(Object pipelineNotFoundException) {
        this.pipelineNotFoundException = pipelineNotFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.PutWebhookOutput putWebhookOutput;

    public PutWebhookResponse withPutWebhookOutput(org.openapis.openapi.models.shared.PutWebhookOutput putWebhookOutput) {
        this.putWebhookOutput = putWebhookOutput;
        return this;
    }
    
    
    public Integer statusCode;

    public PutWebhookResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PutWebhookResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TooManyTagsException
     */
    
    public Object tooManyTagsException;

    public PutWebhookResponse withTooManyTagsException(Object tooManyTagsException) {
        this.tooManyTagsException = tooManyTagsException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;

    public PutWebhookResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
    public PutWebhookResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
