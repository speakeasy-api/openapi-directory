/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - Successful response
 */
public class User {
    /**
     * Profile summary information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("about")
    public String about;
    public User withAbout(String about) {
        this.about = about;
        return this;
    }
    
    /**
     * The container of blogs for this user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blogs")
    public UserBlogs blogs;
    public User withBlogs(UserBlogs blogs) {
        this.blogs = blogs;
        return this;
    }
    
    /**
     * The timestamp of when this profile was created, in seconds since epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created")
    public String created;
    public User withCreated(String created) {
        this.created = created;
        return this;
    }
    
    /**
     * The display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public User withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The identifier for this User.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public User withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The kind of this entity. Always blogger#user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public User withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * This user's locale
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public UserLocale locale;
    public User withLocale(UserLocale locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * The API REST URL to fetch this resource from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public User withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The user's profile page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public User withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
