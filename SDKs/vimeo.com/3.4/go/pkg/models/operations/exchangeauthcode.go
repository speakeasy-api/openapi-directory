// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ExchangeAuthCodeRequestBodyGrantTypeEnum - The grant type. Must be set to `authorization_code`.
type ExchangeAuthCodeRequestBodyGrantTypeEnum string

const (
	ExchangeAuthCodeRequestBodyGrantTypeEnumAuthorizationCode ExchangeAuthCodeRequestBodyGrantTypeEnum = "authorization_code"
)

func (e *ExchangeAuthCodeRequestBodyGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "authorization_code":
		*e = ExchangeAuthCodeRequestBodyGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExchangeAuthCodeRequestBodyGrantTypeEnum: %s", s)
	}
}

type ExchangeAuthCodeRequestBody struct {
	// The authorization code received from the authorization server.
	Code string `json:"code"`
	// The grant type. Must be set to `authorization_code`.
	GrantType ExchangeAuthCodeRequestBodyGrantTypeEnum `json:"grant_type"`
	// The redirect URI. Must match the URI from `/oauth/authorize`.
	RedirectURI string `json:"redirect_uri"`
}

type ExchangeAuthCodeRequest struct {
	Request ExchangeAuthCodeRequestBody `request:"mediaType=application/vnd.vimeo.auth+json"`
}

type ExchangeAuthCodeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The authorization code was exchanged.
	Auth *shared.Auth
	// * The grant type is invalid.
	// * The authorization code is invalid.
	// * The redirect URI doesn't match the URI to create the authorization code.
	AuthError *shared.AuthError
}
