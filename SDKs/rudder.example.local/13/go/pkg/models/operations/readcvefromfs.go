// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// ReadCVEfromFS200ApplicationJSONActionEnum - The id of the action
type ReadCVEfromFS200ApplicationJSONActionEnum string

const (
	ReadCVEfromFS200ApplicationJSONActionEnumReadCvEfromFs ReadCVEfromFS200ApplicationJSONActionEnum = "readCVEfromFS"
)

func (e *ReadCVEfromFS200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "readCVEfromFS":
		*e = ReadCVEfromFS200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReadCVEfromFS200ApplicationJSONActionEnum: %s", s)
	}
}

type ReadCVEfromFS200ApplicationJSONData struct {
	CVEs int64 `json:"CVEs"`
}

// ReadCVEfromFS200ApplicationJSONResultEnum - Result of the request
type ReadCVEfromFS200ApplicationJSONResultEnum string

const (
	ReadCVEfromFS200ApplicationJSONResultEnumSuccess ReadCVEfromFS200ApplicationJSONResultEnum = "success"
	ReadCVEfromFS200ApplicationJSONResultEnumError   ReadCVEfromFS200ApplicationJSONResultEnum = "error"
)

func (e *ReadCVEfromFS200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ReadCVEfromFS200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReadCVEfromFS200ApplicationJSONResultEnum: %s", s)
	}
}

// ReadCVEfromFS200ApplicationJSON - updated CVE count
type ReadCVEfromFS200ApplicationJSON struct {
	// The id of the action
	Action ReadCVEfromFS200ApplicationJSONActionEnum `json:"action"`
	Data   ReadCVEfromFS200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result ReadCVEfromFS200ApplicationJSONResultEnum `json:"result"`
}

type ReadCVEfromFSResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// updated CVE count
	ReadCVEfromFS200ApplicationJSONObject *ReadCVEfromFS200ApplicationJSON
}
