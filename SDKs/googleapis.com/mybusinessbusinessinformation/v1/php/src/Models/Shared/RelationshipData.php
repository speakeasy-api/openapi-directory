<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RelationshipData - Information of all parent and children locations related to this one.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RelationshipData
{
    /**
     * The list of children locations that this location has relations with.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RelevantLocation> $childrenLocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('childrenLocations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RelevantLocation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $childrenLocations = null;
    
    /**
     * The resource name of the Chain that this location is member of. How to find Chain ID
     * 
     * @var ?string $parentChain
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentChain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentChain = null;
    
    /**
     * Information about another location that is related to current one. The relation can be any one of DEPARTMENT_OF or INDEPENDENT_ESTABLISHMENT_OF, and the location specified here can be on either side (parent/child) of the location.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RelevantLocation $parentLocation
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentLocation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RelevantLocation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RelevantLocation $parentLocation = null;
    
	public function __construct()
	{
		$this->childrenLocations = null;
		$this->parentChain = null;
		$this->parentLocation = null;
	}
}
