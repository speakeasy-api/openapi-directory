<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * QueryOperator - The definition of a operator that can be used in a Search/Suggest request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class QueryOperator
{
    /**
     * Display name of the operator
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Potential list of values for the opeatror field. This field is only filled when we can safely enumerate all the possible values of this operator.
     * 
     * @var ?array<string> $enumValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('enumValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $enumValues = null;
    
    /**
     * Indicates the operator name that can be used to isolate the property using the greater-than operator.
     * 
     * @var ?string $greaterThanOperatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('greaterThanOperatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $greaterThanOperatorName = null;
    
    /**
     * Can this operator be used to get facets.
     * 
     * @var ?bool $isFacetable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFacetable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFacetable = null;
    
    /**
     * Indicates if multiple values can be set for this property.
     * 
     * @var ?bool $isRepeatable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRepeatable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRepeatable = null;
    
    /**
     * Will the property associated with this facet be returned as part of search results.
     * 
     * @var ?bool $isReturnable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isReturnable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isReturnable = null;
    
    /**
     * Can this operator be used to sort results.
     * 
     * @var ?bool $isSortable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSortable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSortable = null;
    
    /**
     * Can get suggestions for this field.
     * 
     * @var ?bool $isSuggestable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSuggestable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSuggestable = null;
    
    /**
     * Indicates the operator name that can be used to isolate the property using the less-than operator.
     * 
     * @var ?string $lessThanOperatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('lessThanOperatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lessThanOperatorName = null;
    
    /**
     * The name of the object corresponding to the operator. This field is only filled for schema-specific operators, and is unset for common operators.
     * 
     * @var ?string $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectType = null;
    
    /**
     * The name of the operator.
     * 
     * @var ?string $operatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('operatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operatorName = null;
    
    /**
     * The type of the operator.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\QueryOperatorTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\QueryOperatorTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?QueryOperatorTypeEnum $type = null;
    
	public function __construct()
	{
		$this->displayName = null;
		$this->enumValues = null;
		$this->greaterThanOperatorName = null;
		$this->isFacetable = null;
		$this->isRepeatable = null;
		$this->isReturnable = null;
		$this->isSortable = null;
		$this->isSuggestable = null;
		$this->lessThanOperatorName = null;
		$this->objectType = null;
		$this->operatorName = null;
		$this->type = null;
	}
}
