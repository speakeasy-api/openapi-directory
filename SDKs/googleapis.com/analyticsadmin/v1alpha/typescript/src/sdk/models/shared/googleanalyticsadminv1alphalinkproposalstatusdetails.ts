/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The source of this proposal.
 */
export enum GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum {
  LinkProposalInitiatingProductUnspecified = "LINK_PROPOSAL_INITIATING_PRODUCT_UNSPECIFIED",
  GoogleAnalytics = "GOOGLE_ANALYTICS",
  LinkedProduct = "LINKED_PRODUCT",
}

/**
 * Output only. The state of this proposal.
 */
export enum GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum {
  LinkProposalStateUnspecified = "LINK_PROPOSAL_STATE_UNSPECIFIED",
  AwaitingReviewFromGoogleAnalytics = "AWAITING_REVIEW_FROM_GOOGLE_ANALYTICS",
  AwaitingReviewFromLinkedProduct = "AWAITING_REVIEW_FROM_LINKED_PRODUCT",
  Withdrawn = "WITHDRAWN",
  Declined = "DECLINED",
  Expired = "EXPIRED",
  Obsolete = "OBSOLETE",
}

/**
 * Status information for a link proposal.
 */
export class GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails extends SpeakeasyBase {
  /**
   * Output only. The source of this proposal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkProposalInitiatingProduct" })
  linkProposalInitiatingProduct?: GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum;

  /**
   * Output only. The state of this proposal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkProposalState" })
  linkProposalState?: GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum;

  /**
   * Output only. The email address of the user that proposed this linkage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestorEmail" })
  requestorEmail?: string;
}
