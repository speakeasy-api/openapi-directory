/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * InstancePatchState - Defines the high-level patch compliance state for a managed node, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the managed node.
 */
public class InstancePatchState {
    @JsonProperty("BaselineId")
    public String baselineId;
    public InstancePatchState withBaselineId(String baselineId) {
        this.baselineId = baselineId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CriticalNonCompliantCount")
    public Long criticalNonCompliantCount;
    public InstancePatchState withCriticalNonCompliantCount(Long criticalNonCompliantCount) {
        this.criticalNonCompliantCount = criticalNonCompliantCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailedCount")
    public Long failedCount;
    public InstancePatchState withFailedCount(Long failedCount) {
        this.failedCount = failedCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstallOverrideList")
    public String installOverrideList;
    public InstancePatchState withInstallOverrideList(String installOverrideList) {
        this.installOverrideList = installOverrideList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstalledCount")
    public Long installedCount;
    public InstancePatchState withInstalledCount(Long installedCount) {
        this.installedCount = installedCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstalledOtherCount")
    public Long installedOtherCount;
    public InstancePatchState withInstalledOtherCount(Long installedOtherCount) {
        this.installedOtherCount = installedOtherCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstalledPendingRebootCount")
    public Long installedPendingRebootCount;
    public InstancePatchState withInstalledPendingRebootCount(Long installedPendingRebootCount) {
        this.installedPendingRebootCount = installedPendingRebootCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstalledRejectedCount")
    public Long installedRejectedCount;
    public InstancePatchState withInstalledRejectedCount(Long installedRejectedCount) {
        this.installedRejectedCount = installedRejectedCount;
        return this;
    }
    
    @JsonProperty("InstanceId")
    public String instanceId;
    public InstancePatchState withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastNoRebootInstallOperationTime")
    public OffsetDateTime lastNoRebootInstallOperationTime;
    public InstancePatchState withLastNoRebootInstallOperationTime(OffsetDateTime lastNoRebootInstallOperationTime) {
        this.lastNoRebootInstallOperationTime = lastNoRebootInstallOperationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MissingCount")
    public Long missingCount;
    public InstancePatchState withMissingCount(Long missingCount) {
        this.missingCount = missingCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotApplicableCount")
    public Long notApplicableCount;
    public InstancePatchState withNotApplicableCount(Long notApplicableCount) {
        this.notApplicableCount = notApplicableCount;
        return this;
    }
    
    @JsonProperty("Operation")
    public PatchOperationTypeEnum operation;
    public InstancePatchState withOperation(PatchOperationTypeEnum operation) {
        this.operation = operation;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("OperationEndTime")
    public OffsetDateTime operationEndTime;
    public InstancePatchState withOperationEndTime(OffsetDateTime operationEndTime) {
        this.operationEndTime = operationEndTime;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("OperationStartTime")
    public OffsetDateTime operationStartTime;
    public InstancePatchState withOperationStartTime(OffsetDateTime operationStartTime) {
        this.operationStartTime = operationStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OtherNonCompliantCount")
    public Long otherNonCompliantCount;
    public InstancePatchState withOtherNonCompliantCount(Long otherNonCompliantCount) {
        this.otherNonCompliantCount = otherNonCompliantCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OwnerInformation")
    public String ownerInformation;
    public InstancePatchState withOwnerInformation(String ownerInformation) {
        this.ownerInformation = ownerInformation;
        return this;
    }
    
    @JsonProperty("PatchGroup")
    public String patchGroup;
    public InstancePatchState withPatchGroup(String patchGroup) {
        this.patchGroup = patchGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RebootOption")
    public RebootOptionEnum rebootOption;
    public InstancePatchState withRebootOption(RebootOptionEnum rebootOption) {
        this.rebootOption = rebootOption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityNonCompliantCount")
    public Long securityNonCompliantCount;
    public InstancePatchState withSecurityNonCompliantCount(Long securityNonCompliantCount) {
        this.securityNonCompliantCount = securityNonCompliantCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnapshotId")
    public String snapshotId;
    public InstancePatchState withSnapshotId(String snapshotId) {
        this.snapshotId = snapshotId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UnreportedNotApplicableCount")
    public Long unreportedNotApplicableCount;
    public InstancePatchState withUnreportedNotApplicableCount(Long unreportedNotApplicableCount) {
        this.unreportedNotApplicableCount = unreportedNotApplicableCount;
        return this;
    }
    
}
