"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class OffersLoungesByLocationGetSecurity:
    
    auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class OffersLoungesByLocationGetRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""http header: application/json or application/xml (Acceptable values are: \\"application/json\\", \\"application/xml\\")"""  
    location: str = dataclasses.field(metadata={'path_param': { 'field_name': 'location', 'style': 'simple', 'explode': False }})
    r"""3-leter IATA airport or city code (e.g. 'ZRH')"""  
    cabin_class: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cabinClass', 'style': 'form', 'explode': True }})
    r"""Cabin class: 'M', 'E', 'C', 'F' (Acceptable values are: \\"\\", \\"M\\", \\"E\\", \\"C\\", \\"F\\")"""  
    lang: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lang', 'style': 'form', 'explode': True }})
    r"""Language code."""  
    tier_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tierCode', 'style': 'form', 'explode': True }})
    r"""Frequent flyer level ('FTL', 'SGC', 'SEN', 'HON') (Acceptable values are: \\"\\", \\"FTL\\", \\"SGC\\", \\"SEN\\", \\"HON\\")"""  
    

@dataclasses.dataclass
class OffersLoungesByLocationGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    offers_lounges_by_location_get_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    