/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.function.Function;
import java.util.stream.Collectors;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Gdpr {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Gdpr(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    public org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestResponse dataSubjectRightCancelDeleteRequest(org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestRequest request, org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestRequest.class, baseUrl, "/v0.1/user/dsr/delete/{token}/cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestResponse res = new org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestResponse() {{
            dataSubjectRightCancelDeleteRequest202ApplicationJSONObject = null;
            dataSubjectRightCancelDeleteRequest503ApplicationJSONObject = null;
            dataSubjectRightCancelDeleteRequestDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequest202ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequest202ApplicationJSON.class);
                res.dataSubjectRightCancelDeleteRequest202ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 503) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequest503ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequest503ApplicationJSON.class);
                res.dataSubjectRightCancelDeleteRequest503ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightCancelDeleteRequestDefaultApplicationJSON.class);
                res.dataSubjectRightCancelDeleteRequestDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestResponse dataSubjectRightCancelExportRequest(org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestRequest request, org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestRequest.class, baseUrl, "/v0.1/user/dsr/export/{token}/cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestResponse res = new org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestResponse() {{
            dataSubjectRightCancelExportRequest202ApplicationJSONObject = null;
            dataSubjectRightCancelExportRequest503ApplicationJSONObject = null;
            dataSubjectRightCancelExportRequestDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequest202ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequest202ApplicationJSON.class);
                res.dataSubjectRightCancelExportRequest202ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 503) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequest503ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequest503ApplicationJSON.class);
                res.dataSubjectRightCancelExportRequest503ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightCancelExportRequestDefaultApplicationJSON.class);
                res.dataSubjectRightCancelExportRequestDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DataSubjectRightDeleteRequestResponse dataSubjectRightDeleteRequest() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/user/dsr/delete");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DataSubjectRightDeleteRequestResponse res = new org.openapis.openapi.models.operations.DataSubjectRightDeleteRequestResponse() {{
            dataSubjectRightDeleteRequest202ApplicationJSONObject = null;
            dataSubjectRightDeleteRequestDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightDeleteRequest202ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightDeleteRequest202ApplicationJSON.class);
                res.dataSubjectRightDeleteRequest202ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightDeleteRequestDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightDeleteRequestDefaultApplicationJSON.class);
                res.dataSubjectRightDeleteRequestDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestResponse dataSubjectRightDeleteStatusRequest(org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestRequest request, org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestRequest.class, baseUrl, "/v0.1/user/dsr/delete/{token}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestResponse res = new org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestResponse() {{
            dataSubjectRightDeleteStatusRequest200ApplicationJSONObject = null;
            dataSubjectRightDeleteStatusRequestDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequest200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequest200ApplicationJSON.class);
                res.dataSubjectRightDeleteStatusRequest200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightDeleteStatusRequestDefaultApplicationJSON.class);
                res.dataSubjectRightDeleteStatusRequestDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DataSubjectRightExportRequestResponse dataSubjectRightExportRequest() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/user/dsr/export");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DataSubjectRightExportRequestResponse res = new org.openapis.openapi.models.operations.DataSubjectRightExportRequestResponse() {{
            dataSubjectRightExportRequest202ApplicationJSONObject = null;
            dataSubjectRightExportRequestDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightExportRequest202ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightExportRequest202ApplicationJSON.class);
                res.dataSubjectRightExportRequest202ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightExportRequestDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightExportRequestDefaultApplicationJSON.class);
                res.dataSubjectRightExportRequestDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestResponse dataSubjectRightExportStatusRequest(org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestRequest request, org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestRequest.class, baseUrl, "/v0.1/user/dsr/export/{token}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestResponse res = new org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestResponse() {{
            dataSubjectRightExportStatusRequest200ApplicationJSONObject = null;
            dataSubjectRightExportStatusRequestDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequest200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequest200ApplicationJSON.class);
                res.dataSubjectRightExportStatusRequest200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DataSubjectRightExportStatusRequestDefaultApplicationJSON.class);
                res.dataSubjectRightExportStatusRequestDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }
}