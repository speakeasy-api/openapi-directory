/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MatchmakingConfiguration - Guidelines for use with FlexMatch to match players into games. All matchmaking requests must specify a matchmaking configuration.
 */
public class MatchmakingConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AcceptanceRequired")
    public Boolean acceptanceRequired;

    public MatchmakingConfiguration withAcceptanceRequired(Boolean acceptanceRequired) {
        this.acceptanceRequired = acceptanceRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AcceptanceTimeoutSeconds")
    public Long acceptanceTimeoutSeconds;

    public MatchmakingConfiguration withAcceptanceTimeoutSeconds(Long acceptanceTimeoutSeconds) {
        this.acceptanceTimeoutSeconds = acceptanceTimeoutSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalPlayerCount")
    public Long additionalPlayerCount;

    public MatchmakingConfiguration withAdditionalPlayerCount(Long additionalPlayerCount) {
        this.additionalPlayerCount = additionalPlayerCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BackfillMode")
    public BackfillModeEnum backfillMode;

    public MatchmakingConfiguration withBackfillMode(BackfillModeEnum backfillMode) {
        this.backfillMode = backfillMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConfigurationArn")
    public String configurationArn;

    public MatchmakingConfiguration withConfigurationArn(String configurationArn) {
        this.configurationArn = configurationArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public MatchmakingConfiguration withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomEventData")
    public String customEventData;

    public MatchmakingConfiguration withCustomEventData(String customEventData) {
        this.customEventData = customEventData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public MatchmakingConfiguration withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FlexMatchMode")
    public FlexMatchModeEnum flexMatchMode;

    public MatchmakingConfiguration withFlexMatchMode(FlexMatchModeEnum flexMatchMode) {
        this.flexMatchMode = flexMatchMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameProperties")
    public GameProperty[] gameProperties;

    public MatchmakingConfiguration withGameProperties(GameProperty[] gameProperties) {
        this.gameProperties = gameProperties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameSessionData")
    public String gameSessionData;

    public MatchmakingConfiguration withGameSessionData(String gameSessionData) {
        this.gameSessionData = gameSessionData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameSessionQueueArns")
    public String[] gameSessionQueueArns;

    public MatchmakingConfiguration withGameSessionQueueArns(String[] gameSessionQueueArns) {
        this.gameSessionQueueArns = gameSessionQueueArns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public MatchmakingConfiguration withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationTarget")
    public String notificationTarget;

    public MatchmakingConfiguration withNotificationTarget(String notificationTarget) {
        this.notificationTarget = notificationTarget;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequestTimeoutSeconds")
    public Long requestTimeoutSeconds;

    public MatchmakingConfiguration withRequestTimeoutSeconds(Long requestTimeoutSeconds) {
        this.requestTimeoutSeconds = requestTimeoutSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RuleSetArn")
    public String ruleSetArn;

    public MatchmakingConfiguration withRuleSetArn(String ruleSetArn) {
        this.ruleSetArn = ruleSetArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RuleSetName")
    public String ruleSetName;

    public MatchmakingConfiguration withRuleSetName(String ruleSetName) {
        this.ruleSetName = ruleSetName;
        return this;
    }
    
    public MatchmakingConfiguration(){}
}
