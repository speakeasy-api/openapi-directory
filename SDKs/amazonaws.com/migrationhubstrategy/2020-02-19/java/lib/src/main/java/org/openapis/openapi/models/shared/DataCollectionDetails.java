/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DataCollectionDetails -  Detailed information about an assessment. 
 */
public class DataCollectionDetails {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("completionTime")
    public OffsetDateTime completionTime;

    public DataCollectionDetails withCompletionTime(OffsetDateTime completionTime) {
        this.completionTime = completionTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failed")
    public Long failed;

    public DataCollectionDetails withFailed(Long failed) {
        this.failed = failed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inProgress")
    public Long inProgress;

    public DataCollectionDetails withInProgress(Long inProgress) {
        this.inProgress = inProgress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servers")
    public Long servers;

    public DataCollectionDetails withServers(Long servers) {
        this.servers = servers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;

    public DataCollectionDetails withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public AssessmentStatusEnum status;

    public DataCollectionDetails withStatus(AssessmentStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;

    public DataCollectionDetails withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Long success;

    public DataCollectionDetails withSuccess(Long success) {
        this.success = success;
        return this;
    }
    
    public DataCollectionDetails(){}
}
