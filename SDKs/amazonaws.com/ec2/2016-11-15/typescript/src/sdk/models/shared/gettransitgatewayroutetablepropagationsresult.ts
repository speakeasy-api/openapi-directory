/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The type of resource. Note that the <code>tgw-peering</code> resource type has been deprecated.
 */
export enum GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagationsResourceTypeEnum {
  Vpc = "vpc",
  Vpn = "vpn",
  DirectConnectGateway = "direct-connect-gateway",
  Connect = "connect",
  Peering = "peering",
  TgwPeering = "tgw-peering",
}

/**
 * The state of the resource.
 */
export enum GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagationsStateEnum {
  Enabling = "enabling",
  Enabled = "enabled",
  Disabling = "disabling",
  Disabled = "disabled",
}

/**
 * Describes a route table propagation.
 */
export class GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagationsResourceTypeEnum;

  @SpeakeasyMetadata()
  state?: GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagationsStateEnum;

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;

  @SpeakeasyMetadata()
  transitGatewayRouteTableAnnouncementId?: string;
}

/**
 * Success
 */
export class GetTransitGatewayRouteTablePropagationsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType:
      GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagations,
  })
  transitGatewayRouteTablePropagations?: GetTransitGatewayRouteTablePropagationsResultTransitGatewayRouteTablePropagations[];
}
