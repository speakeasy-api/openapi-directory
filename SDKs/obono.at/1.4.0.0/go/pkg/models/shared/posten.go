// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PostenSatzEnum string

const (
	PostenSatzEnumNormal      PostenSatzEnum = "NORMAL"
	PostenSatzEnumErmaessigt1 PostenSatzEnum = "ERMAESSIGT1"
	PostenSatzEnumErmaessigt2 PostenSatzEnum = "ERMAESSIGT2"
	PostenSatzEnumBesonders   PostenSatzEnum = "BESONDERS"
	PostenSatzEnumNull        PostenSatzEnum = "NULL"
)

func (e PostenSatzEnum) ToPointer() *PostenSatzEnum {
	return &e
}

func (e *PostenSatzEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NORMAL":
		fallthrough
	case "ERMAESSIGT1":
		fallthrough
	case "ERMAESSIGT2":
		fallthrough
	case "BESONDERS":
		fallthrough
	case "NULL":
		*e = PostenSatzEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostenSatzEnum: %v", v)
	}
}

type Posten struct {
	Bezeichnung string `json:"Bezeichnung"`
	// The amount in cents
	BruttoBetrag             int64   `json:"BruttoBetrag"`
	ExternerBelegBelegkreis  *string `json:"Externer-Beleg-Belegkreis,omitempty"`
	ExternerBelegBezeichnung *string `json:"Externer-Beleg-Bezeichnung,omitempty"`
	ExternerBelegReferenz    *string `json:"Externer-Beleg-Referenz,omitempty"`
	Menge                    int64   `json:"Menge"`
	// The amount in cents
	NettoBetrag int64          `json:"NettoBetrag"`
	Satz        PostenSatzEnum `json:"Satz"`
}
