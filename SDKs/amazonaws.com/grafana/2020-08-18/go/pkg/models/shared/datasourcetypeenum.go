// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataSourceTypeEnum string

const (
	DataSourceTypeEnumAmazonOpensearchService DataSourceTypeEnum = "AMAZON_OPENSEARCH_SERVICE"
	DataSourceTypeEnumCloudwatch              DataSourceTypeEnum = "CLOUDWATCH"
	DataSourceTypeEnumPrometheus              DataSourceTypeEnum = "PROMETHEUS"
	DataSourceTypeEnumXray                    DataSourceTypeEnum = "XRAY"
	DataSourceTypeEnumTimestream              DataSourceTypeEnum = "TIMESTREAM"
	DataSourceTypeEnumSitewise                DataSourceTypeEnum = "SITEWISE"
	DataSourceTypeEnumAthena                  DataSourceTypeEnum = "ATHENA"
	DataSourceTypeEnumRedshift                DataSourceTypeEnum = "REDSHIFT"
	DataSourceTypeEnumTwinmaker               DataSourceTypeEnum = "TWINMAKER"
)

func (e DataSourceTypeEnum) ToPointer() *DataSourceTypeEnum {
	return &e
}

func (e *DataSourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AMAZON_OPENSEARCH_SERVICE":
		fallthrough
	case "CLOUDWATCH":
		fallthrough
	case "PROMETHEUS":
		fallthrough
	case "XRAY":
		fallthrough
	case "TIMESTREAM":
		fallthrough
	case "SITEWISE":
		fallthrough
	case "ATHENA":
		fallthrough
	case "REDSHIFT":
		fallthrough
	case "TWINMAKER":
		*e = DataSourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSourceTypeEnum: %v", v)
	}
}
