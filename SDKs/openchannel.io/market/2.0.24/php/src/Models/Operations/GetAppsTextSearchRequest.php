<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetAppsTextSearchRequest
{
    /**
     * A JSON array containing all the fields to be searched through. Example: ['name', 'customData.description']
     * 
     * @var string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public string $fields;
    
    /**
     * Whether this result should only contain apps that are owned by this user
     * 
     * @var ?bool $isOwned
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=isOwned')]
    public ?bool $isOwned = null;
    
    /**
     * The maximum number of results to return per page
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * The result set page number to be returned
     * 
     * @var ?int $pageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageNumber')]
    public ?int $pageNumber = null;
    
    /**
     * A query document. Example: {'name':'MyApp'} matches all the documents that have the name 'MyApp'
     * 
     * @var ?string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;
    
    /**
     * The text to search for.
     * 
     * @var string $text
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=text')]
    public string $text;
    
    /**
     * The unique id of the user requesting this resource
     * 
     * @var ?string $userId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userId')]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->fields = "";
		$this->isOwned = null;
		$this->limit = null;
		$this->pageNumber = null;
		$this->query = null;
		$this->text = "";
		$this->userId = null;
	}
}
