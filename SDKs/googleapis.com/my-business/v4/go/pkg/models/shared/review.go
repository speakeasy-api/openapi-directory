// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReviewStarRatingEnum - The star rating of the review.
type ReviewStarRatingEnum string

const (
	ReviewStarRatingEnumStarRatingUnspecified ReviewStarRatingEnum = "STAR_RATING_UNSPECIFIED"
	ReviewStarRatingEnumOne                   ReviewStarRatingEnum = "ONE"
	ReviewStarRatingEnumTwo                   ReviewStarRatingEnum = "TWO"
	ReviewStarRatingEnumThree                 ReviewStarRatingEnum = "THREE"
	ReviewStarRatingEnumFour                  ReviewStarRatingEnum = "FOUR"
	ReviewStarRatingEnumFive                  ReviewStarRatingEnum = "FIVE"
)

func (e *ReviewStarRatingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STAR_RATING_UNSPECIFIED":
		fallthrough
	case "ONE":
		fallthrough
	case "TWO":
		fallthrough
	case "THREE":
		fallthrough
	case "FOUR":
		fallthrough
	case "FIVE":
		*e = ReviewStarRatingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReviewStarRatingEnum: %s", s)
	}
}

// Review - Output only. Represents a review for a location.
type Review struct {
	// The body of the review as plain text with markups.
	Comment *string `json:"comment,omitempty"`
	// The timestamp for when the review was written.
	CreateTime *string `json:"createTime,omitempty"`
	// The resource name. For Review it is of the form `accounts/{account_id}/locations/{location_id}/reviews/{review_id}`
	Name *string `json:"name,omitempty"`
	// The encrypted unique identifier.
	ReviewID *string `json:"reviewId,omitempty"`
	// Represents the location owner/manager's reply to a review.
	ReviewReply *ReviewReply `json:"reviewReply,omitempty"`
	// Represents the author of the review.
	Reviewer *Reviewer `json:"reviewer,omitempty"`
	// The star rating of the review.
	StarRating *ReviewStarRatingEnum `json:"starRating,omitempty"`
	// The timestamp for when the review was last modified.
	UpdateTime *string `json:"updateTime,omitempty"`
}
