"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class FindTheRelativesOfAnEntityRelationEnum(str, Enum):
    r"""The type of relation to find."""
    PARENT = 'parent'
    CHILD = 'child'
    SIBLING = 'sibling'
    PEER = 'peer'


@dataclasses.dataclass
class FindTheRelativesOfAnEntityRequest:
    
    entity_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'entity_id', 'style': 'form', 'explode': True }})
    r"""ID of the target entity."""  
    relation: FindTheRelativesOfAnEntityRelationEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'relation', 'style': 'simple', 'explode': False }})
    r"""The type of relation to find."""  
    app_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'app_token', 'style': 'form', 'explode': True }})
    r"""The [Socrata App Token](https://dev.socrata.com/docs/app-tokens.html) to be
    used with your request. The `app_token` parameter is required if an app token is not passed via the `X-App-Token` HTTP header. Clients must [register for their own app tokens](https://dev.socrata.com/docs/app-tokens.html).
    """  
    limit: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of entities in each group.
    Must be an integer from 1 to 1000.
    """  
    variable_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'variable_id', 'style': 'form', 'explode': True }})
    r"""If this parameter is included, only entities with data for the given
    variable will be returned. Note that this may cause the number of
    entities returned to be less than the specified `limit`.
    """  
    x_app_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-App-Token', 'style': 'simple', 'explode': False }})
    r"""e.g. cQovpGcdUT1CSzgYk0KPYdAI0"""  
    

@dataclasses.dataclass
class FindTheRelativesOfAnEntityResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    