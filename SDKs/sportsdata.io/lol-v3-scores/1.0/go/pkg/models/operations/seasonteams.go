// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SeasonTeamsFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type SeasonTeamsFormatEnum string

const (
	SeasonTeamsFormatEnumXML  SeasonTeamsFormatEnum = "xml"
	SeasonTeamsFormatEnumJSON SeasonTeamsFormatEnum = "json"
)

func (e *SeasonTeamsFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = SeasonTeamsFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SeasonTeamsFormatEnum: %s", s)
	}
}

type SeasonTeamsRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format SeasonTeamsFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Season ID. SeasonIDs can be found in the Competitions and Competition Details endpoints.
	// Examples: <code>100000023</code>, <code>100000024</code>, etc
	Seasonid string `pathParam:"style=simple,explode=false,name=seasonid"`
}

type SeasonTeamsResponse struct {
	ContentType string
	SeasonTeams []shared.SeasonTeam
	StatusCode  int
	RawResponse *http.Response
}
