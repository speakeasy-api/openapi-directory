"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNegativeKeywordResponse:
    r"""A type that contains the fields for the <b>UpdateNegativeKeyword</b> response."""
    
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""A container that will be returned if there are one or more issues associated with modifying the corresponding negative keyword."""  
    negative_keyword_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('negativeKeywordId'), 'exclude': lambda f: f is None }})
    r"""A unique eBay-assigned ID for a negative keyword. This keyword ID will be generated for each successfully created negative keyword."""  
    status_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusCode'), 'exclude': lambda f: f is None }})
    r"""An HTTP status code that indicates the success or failure of updating that negative keyword."""  
    