/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ListServiceInstancesFilter } from "./listserviceinstancesfilter";
import { ListServiceInstancesSortByEnum } from "./listserviceinstancessortbyenum";
import { SortOrderEnum } from "./sortorderenum";
import { Expose, Type } from "class-transformer";

export class ListServiceInstancesInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListServiceInstancesFilter })
  @Expose({ name: "filters" })
  @Type(() => ListServiceInstancesFilter)
  filters?: ListServiceInstancesFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceName" })
  serviceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sortBy" })
  sortBy?: ListServiceInstancesSortByEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: SortOrderEnum;
}
