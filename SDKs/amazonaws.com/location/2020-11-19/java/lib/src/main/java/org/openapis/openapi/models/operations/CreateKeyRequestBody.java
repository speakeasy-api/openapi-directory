/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class CreateKeyRequestBody {
    /**
     * An optional description for the API key resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public CreateKeyRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The optional timestamp for when the API key resource will expire in &lt;a href="https://www.iso.org/iso-8601-date-and-time-format.html"&gt; ISO 8601&lt;/a&gt; format: &lt;code&gt;YYYY-MM-DDThh:mm:ss.sssZ&lt;/code&gt;. One of &lt;code&gt;NoExpiry&lt;/code&gt; or &lt;code&gt;ExpireTime&lt;/code&gt; must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpireTime")
    public OffsetDateTime expireTime;
    public CreateKeyRequestBody withExpireTime(OffsetDateTime expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * &lt;p&gt;A custom name for the API key resource.&lt;/p&gt; &lt;p&gt;Requirements:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Contain only alphanumeric characters (A\u2013Z, a\u2013z, 0\u20139), hyphens (-), periods (.), and underscores (_). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Must be a unique API key name.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;No spaces allowed. For example, &lt;code&gt;ExampleAPIKey&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("KeyName")
    public String keyName;
    public CreateKeyRequestBody withKeyName(String keyName) {
        this.keyName = keyName;
        return this;
    }
    
    /**
     * Optionally set to &lt;code&gt;true&lt;/code&gt; to set no expiration time for the API key. One of &lt;code&gt;NoExpiry&lt;/code&gt; or &lt;code&gt;ExpireTime&lt;/code&gt; must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NoExpiry")
    public Boolean noExpiry;
    public CreateKeyRequestBody withNoExpiry(Boolean noExpiry) {
        this.noExpiry = noExpiry;
        return this;
    }
    
    /**
     * API Restrictions on the allowed actions, resources, and referers for an API key resource.
     */
    @JsonProperty("Restrictions")
    public CreateKeyRequestBodyRestrictions restrictions;
    public CreateKeyRequestBody withRestrictions(CreateKeyRequestBodyRestrictions restrictions) {
        this.restrictions = restrictions;
        return this;
    }
    
    /**
     * &lt;p&gt;Applies one or more tags to the map resource. A tag is a key-value pair that helps manage, identify, search, and filter your resources by labelling them.&lt;/p&gt; &lt;p&gt;Format: &lt;code&gt;"key" : "value"&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Restrictions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Maximum 50 tags per resource&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Each resource tag must be unique with a maximum of one value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Maximum key length: 128 Unicode characters in UTF-8&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Maximum value length: 256 Unicode characters in UTF-8&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can use alphanumeric characters (A\u2013Z, a\u2013z, 0\u20139), and the following characters: + - = . _ : / @. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot use "aws:" as a prefix for a key.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;
    public CreateKeyRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
