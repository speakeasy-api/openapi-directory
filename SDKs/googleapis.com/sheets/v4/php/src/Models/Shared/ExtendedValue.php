<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ExtendedValue - The kinds of value that a cell in a spreadsheet can have.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ExtendedValue
{
    /**
     * Represents a boolean value.
     * 
     * @var ?bool $boolValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('boolValue')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boolValue = null;
    
    /**
     * An error in a cell.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ErrorValue $errorValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ErrorValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ErrorValue $errorValue = null;
    
    /**
     * Represents a formula.
     * 
     * @var ?string $formulaValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('formulaValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formulaValue = null;
    
    /**
     * Represents a double value. Note: Dates, Times and DateTimes are represented as doubles in SERIAL_NUMBER format.
     * 
     * @var ?float $numberValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $numberValue = null;
    
    /**
     * Represents a string value. Leading single quotes are not included. For example, if the user typed `'123` into the UI, this would be represented as a `stringValue` of `"123"`.
     * 
     * @var ?string $stringValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('stringValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stringValue = null;
    
	public function __construct()
	{
		$this->boolValue = null;
		$this->errorValue = null;
		$this->formulaValue = null;
		$this->numberValue = null;
		$this->stringValue = null;
	}
}
