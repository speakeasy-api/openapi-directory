// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConfigManagementHierarchyControllerDeploymentStateExtensionEnum - The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)
type ConfigManagementHierarchyControllerDeploymentStateExtensionEnum string

const (
	ConfigManagementHierarchyControllerDeploymentStateExtensionEnumDeploymentStateUnspecified ConfigManagementHierarchyControllerDeploymentStateExtensionEnum = "DEPLOYMENT_STATE_UNSPECIFIED"
	ConfigManagementHierarchyControllerDeploymentStateExtensionEnumNotInstalled               ConfigManagementHierarchyControllerDeploymentStateExtensionEnum = "NOT_INSTALLED"
	ConfigManagementHierarchyControllerDeploymentStateExtensionEnumInstalled                  ConfigManagementHierarchyControllerDeploymentStateExtensionEnum = "INSTALLED"
	ConfigManagementHierarchyControllerDeploymentStateExtensionEnumError                      ConfigManagementHierarchyControllerDeploymentStateExtensionEnum = "ERROR"
)

func (e *ConfigManagementHierarchyControllerDeploymentStateExtensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEPLOYMENT_STATE_UNSPECIFIED":
		fallthrough
	case "NOT_INSTALLED":
		fallthrough
	case "INSTALLED":
		fallthrough
	case "ERROR":
		*e = ConfigManagementHierarchyControllerDeploymentStateExtensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigManagementHierarchyControllerDeploymentStateExtensionEnum: %s", s)
	}
}

// ConfigManagementHierarchyControllerDeploymentStateHncEnum - The deployment state for open source HNC (e.g. v0.7.0-hc.0)
type ConfigManagementHierarchyControllerDeploymentStateHncEnum string

const (
	ConfigManagementHierarchyControllerDeploymentStateHncEnumDeploymentStateUnspecified ConfigManagementHierarchyControllerDeploymentStateHncEnum = "DEPLOYMENT_STATE_UNSPECIFIED"
	ConfigManagementHierarchyControllerDeploymentStateHncEnumNotInstalled               ConfigManagementHierarchyControllerDeploymentStateHncEnum = "NOT_INSTALLED"
	ConfigManagementHierarchyControllerDeploymentStateHncEnumInstalled                  ConfigManagementHierarchyControllerDeploymentStateHncEnum = "INSTALLED"
	ConfigManagementHierarchyControllerDeploymentStateHncEnumError                      ConfigManagementHierarchyControllerDeploymentStateHncEnum = "ERROR"
)

func (e *ConfigManagementHierarchyControllerDeploymentStateHncEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEPLOYMENT_STATE_UNSPECIFIED":
		fallthrough
	case "NOT_INSTALLED":
		fallthrough
	case "INSTALLED":
		fallthrough
	case "ERROR":
		*e = ConfigManagementHierarchyControllerDeploymentStateHncEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigManagementHierarchyControllerDeploymentStateHncEnum: %s", s)
	}
}

// ConfigManagementHierarchyControllerDeploymentState - Deployment state for Hierarchy Controller
type ConfigManagementHierarchyControllerDeploymentState struct {
	// The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)
	Extension *ConfigManagementHierarchyControllerDeploymentStateExtensionEnum `json:"extension,omitempty"`
	// The deployment state for open source HNC (e.g. v0.7.0-hc.0)
	Hnc *ConfigManagementHierarchyControllerDeploymentStateHncEnum `json:"hnc,omitempty"`
}
