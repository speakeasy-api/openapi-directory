// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// SubscriptionIndex - The subscription definition
type SubscriptionIndex struct {
	// The subscription consumption status
	ConsumerHealthStatus *ConsumptionAvailabilityStatusEnum `json:"consumerHealthStatus,omitempty"`
	// The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
	ConsumerLastRequestSentURI *string `json:"consumerLastRequestSentUri,omitempty"`
	// This date indicates since when the subscription consumer is unavailable
	ConsumerUnvailableSinceUtcDate *time.Time `json:"consumerUnvailableSinceUtcDate,omitempty"`
	// The identifier of the subscription to the orders for a merchant
	ID               string                `json:"id"`
	LastErrorMessage *ErrorResponseMessage `json:"lastErrorMessage,omitempty"`
	// This modification date correspond to the last order pushed by your subscription consumer
	LastOrderPushedModificationUtcDate *time.Time `json:"lastOrderPushedModificationUtcDate,omitempty"`
	// The last date we retry to send orders
	LastRetryUtcDate *time.Time `json:"lastRetryUtcDate,omitempty"`
	// The date of the last pushed order successfully received by your subscription consumer
	LastSuccessfulOrderPushedUtcDate *time.Time         `json:"lastSuccessfulOrderPushedUtcDate,omitempty"`
	Links                            *SubscriptionLinks `json:"links,omitempty"`
	// The maximum BeezUP will retry to push orders. When we the retry count will reach maximum retry count, the subscription will be deactivated.
	MaxRetryCount *int64 `json:"maxRetryCount,omitempty"`
	// The name of your application
	MerchantApplicationName string `json:"merchantApplicationName"`
	// The version of your application
	MerchantApplicationVersion string `json:"merchantApplicationVersion"`
	// The email
	MerchantEmailAlert *string `json:"merchantEmailAlert,omitempty"`
	// The subscription name you want to use
	Name string `json:"name"`
	// The next scheduled  date we retry to send orders
	NextScheduledRetryUtcDate *time.Time `json:"nextScheduledRetryUtcDate,omitempty"`
	// Recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time.
	RecoverBeginPeriodOrderLastModificationUtcDate *time.Time `json:"recoverBeginPeriodOrderLastModificationUtcDate,omitempty"`
	// Recover existing orders using the begin and the end period order last modification date.
	// Otherwise, you will receive new/updated orders in real-time.
	//
	RecoverEndPeriodOrderLastModificationUtcDate *time.Time `json:"recoverEndPeriodOrderLastModificationUtcDate,omitempty"`
	// The retry count. When we the retry count will reach maximum retry count, the subscription will be deactivated.
	RetryCount *int64 `json:"retryCount,omitempty"`
	// The status of your subscription
	Status SubscriptionStatusEnum `json:"status"`
	// The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
	TargetURL string `json:"targetUrl"`
}
