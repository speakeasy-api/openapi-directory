<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TestNotificationConfigurationRequest
{
    /**
     * The event types to test.  If left blank, then all of the configured event types will be tested.
     * 
     * >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TestNotificationConfigurationRequestEventTypesEnum> $eventTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\TestNotificationConfigurationRequestEventTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventTypes = null;
    
    /**
     * The ID of the notification subscription configuration to be tested.
     * 
     * @var int $notificationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('notificationId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $notificationId;
    
	public function __construct()
	{
		$this->eventTypes = null;
		$this->notificationId = 0;
	}
}
