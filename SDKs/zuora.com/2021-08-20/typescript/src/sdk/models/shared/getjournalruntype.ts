/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETJournalRunTransactionType } from "./getjournalruntransactiontype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Status of the journal run.
 *
 * @remarks
 *
 */
export enum GETJournalRunTypeStatusEnum {
  Pending = "Pending",
  Processing = "Processing",
  Completed = "Completed",
  Error = "Error",
  CancelInprogress = "CancelInprogress",
  Cancelled = "Cancelled",
  DeleteInprogress = "DeleteInprogress",
}

export class GETJournalRunType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "aggregateCurrency" })
  aggregateCurrency?: boolean;

  /**
   * Date and time the journal run was executed.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executedOn?: Date;

  /**
   * Date of the journal entry.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "journalEntryDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  journalEntryDate?: Date;

  /**
   * Journal run number.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Name of GL segmentation rule used in the journal run.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "segmentationRuleName" })
  segmentationRuleName?: string;

  /**
   * Status of the journal run.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GETJournalRunTypeStatusEnum;

  /**
   * Returns `true` if the request was processed successfully.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * The target end date of the journal run.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  targetEndDate?: Date;

  /**
   * The target start date of the journal run.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  targetStartDate?: Date;

  /**
   * Total number of journal entries in the journal run.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalJournalEntryCount" })
  totalJournalEntryCount?: number;

  /**
   * Transaction types included in the journal run.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETJournalRunTransactionType })
  @Expose({ name: "transactionTypes" })
  @Type(() => GETJournalRunTransactionType)
  transactionTypes?: GETJournalRunTransactionType[];
}
