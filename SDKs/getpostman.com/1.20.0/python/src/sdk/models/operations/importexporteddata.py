"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportExportedData400ApplicationJSONErrorDetails:
    
    param: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('param'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportExportedData400ApplicationJSONError:
    
    details: Optional[ImportExportedData400ApplicationJSONErrorDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportExportedData400ApplicationJSON:
    r"""Error: Param Missing"""
    
    error: Optional[ImportExportedData400ApplicationJSONError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportExportedData200ApplicationJSONCollections:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportExportedData200ApplicationJSON:
    r"""Success: Import to a specific workspace with workspace ID passed as a query parameter"""
    
    collections: Optional[list[ImportExportedData200ApplicationJSONCollections]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collections'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class ImportExportedDataResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    import_exported_data_200_application_json_object: Optional[ImportExportedData200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success: Import to a specific workspace with workspace ID passed as a query parameter"""  
    import_exported_data_400_application_json_object: Optional[ImportExportedData400ApplicationJSON] = dataclasses.field(default=None)
    r"""Error: Param Missing"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    