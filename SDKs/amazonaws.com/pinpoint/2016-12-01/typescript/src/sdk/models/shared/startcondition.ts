/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventStartCondition } from "./eventstartcondition";
import { SegmentCondition } from "./segmentcondition";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the conditions for the first activity in a journey. This activity and its conditions determine which users are participants in a journey.
 */
export class StartCondition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * Specifies the settings for an event that causes a journey activity to start.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EventStartCondition" })
  @Type(() => EventStartCondition)
  eventStartCondition?: EventStartCondition;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentStartCondition" })
  @Type(() => SegmentCondition)
  segmentStartCondition?: SegmentCondition;
}
