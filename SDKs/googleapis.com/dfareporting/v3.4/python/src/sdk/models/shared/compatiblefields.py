"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import crossdimensionreachreportcompatiblefields as shared_crossdimensionreachreportcompatiblefields
from ..shared import floodlightreportcompatiblefields as shared_floodlightreportcompatiblefields
from ..shared import pathreportcompatiblefields as shared_pathreportcompatiblefields
from ..shared import pathtoconversionreportcompatiblefields as shared_pathtoconversionreportcompatiblefields
from ..shared import reachreportcompatiblefields as shared_reachreportcompatiblefields
from ..shared import reportcompatiblefields as shared_reportcompatiblefields
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompatibleFields:
    r"""Represents a response to the queryCompatibleFields method."""
    
    cross_dimension_reach_report_compatible_fields: Optional[shared_crossdimensionreachreportcompatiblefields.CrossDimensionReachReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crossDimensionReachReportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"CROSS_DIMENSION_REACH\\"."""  
    floodlight_report_compatible_fields: Optional[shared_floodlightreportcompatiblefields.FloodlightReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('floodlightReportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"FlOODLIGHT\\"."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""The kind of resource this is, in this case dfareporting#compatibleFields."""  
    path_attribution_report_compatible_fields: Optional[shared_pathreportcompatiblefields.PathReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pathAttributionReportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"PATH\\"."""  
    path_report_compatible_fields: Optional[shared_pathreportcompatiblefields.PathReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pathReportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"PATH\\"."""  
    path_to_conversion_report_compatible_fields: Optional[shared_pathtoconversionreportcompatiblefields.PathToConversionReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pathToConversionReportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"PATH_TO_CONVERSION\\"."""  
    reach_report_compatible_fields: Optional[shared_reachreportcompatiblefields.ReachReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reachReportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"REACH\\"."""  
    report_compatible_fields: Optional[shared_reportcompatiblefields.ReportCompatibleFields] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportCompatibleFields'), 'exclude': lambda f: f is None }})
    r"""Represents fields that are compatible to be selected for a report of type \\"STANDARD\\"."""  
    