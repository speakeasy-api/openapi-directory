"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldselector as shared_fieldselector
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FirstRowOptionTransitOptionEnum(str, Enum):
    TRANSIT_OPTION_UNSPECIFIED = 'TRANSIT_OPTION_UNSPECIFIED'
    ORIGIN_AND_DESTINATION_NAMES_UPPER = 'ORIGIN_AND_DESTINATION_NAMES'
    ORIGIN_AND_DESTINATION_NAMES_MIXED = 'originAndDestinationNames'
    ORIGIN_AND_DESTINATION_CODES_UPPER = 'ORIGIN_AND_DESTINATION_CODES'
    ORIGIN_AND_DESTINATION_CODES_MIXED = 'originAndDestinationCodes'
    ORIGIN_NAME_UPPER = 'ORIGIN_NAME'
    ORIGIN_NAME_MIXED = 'originName'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FirstRowOption:
    
    field_option: Optional[shared_fieldselector.FieldSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldOption'), 'exclude': lambda f: f is None }})
    r"""Custom field selector to use with field overrides."""  
    transit_option: Optional[FirstRowOptionTransitOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitOption'), 'exclude': lambda f: f is None }})  
    