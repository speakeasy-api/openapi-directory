/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ComponentConditionProperty - Represents a conditional expression to set a component property. Use &lt;code&gt;ComponentConditionProperty&lt;/code&gt; to set a property to different values conditionally, based on the value of another property.
 */
public class ComponentConditionProperty {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("else")
    public ComponentProperty else_;
    public ComponentConditionProperty withElse(ComponentProperty else_) {
        this.else_ = else_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("field")
    public String field;
    public ComponentConditionProperty withField(String field) {
        this.field = field;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operand")
    public String operand;
    public ComponentConditionProperty withOperand(String operand) {
        this.operand = operand;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operandType")
    public String operandType;
    public ComponentConditionProperty withOperandType(String operandType) {
        this.operandType = operandType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public String operator;
    public ComponentConditionProperty withOperator(String operator) {
        this.operator = operator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("property")
    public String property;
    public ComponentConditionProperty withProperty(String property) {
        this.property = property;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("then")
    public ComponentProperty then;
    public ComponentConditionProperty withThen(ComponentProperty then) {
        this.then = then;
        return this;
    }
    
}
