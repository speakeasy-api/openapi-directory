// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PremiumNewsByDateFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PremiumNewsByDateFormatEnum string

const (
	PremiumNewsByDateFormatEnumXML  PremiumNewsByDateFormatEnum = "xml"
	PremiumNewsByDateFormatEnumJSON PremiumNewsByDateFormatEnum = "json"
)

func (e *PremiumNewsByDateFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = PremiumNewsByDateFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PremiumNewsByDateFormatEnum: %s", s)
	}
}

type PremiumNewsByDateRequest struct {
	// The date of the news.
	// <br>Examples: <code>2017-JUL-31</code>, <code>2017-SEP-01</code>.
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PremiumNewsByDateFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type PremiumNewsByDateResponse struct {
	ContentType string
	News        []shared.News
	StatusCode  int
	RawResponse *http.Response
}
