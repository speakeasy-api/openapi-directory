// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutReportDefinitionRequestBodyDestinationS3Location - Represents the Amazon Simple Storage Service (Amazon S3) location where AWS Application Cost Profiler reports are generated and then written to.
type PutReportDefinitionRequestBodyDestinationS3Location struct {
	Bucket *string `json:"bucket,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

// PutReportDefinitionRequestBodyFormatEnum - Required. The format to use for the generated report.
type PutReportDefinitionRequestBodyFormatEnum string

const (
	PutReportDefinitionRequestBodyFormatEnumCsv     PutReportDefinitionRequestBodyFormatEnum = "CSV"
	PutReportDefinitionRequestBodyFormatEnumParquet PutReportDefinitionRequestBodyFormatEnum = "PARQUET"
)

func (e *PutReportDefinitionRequestBodyFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CSV":
		fallthrough
	case "PARQUET":
		*e = PutReportDefinitionRequestBodyFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutReportDefinitionRequestBodyFormatEnum: %s", s)
	}
}

// PutReportDefinitionRequestBodyReportFrequencyEnum - Required. The cadence to generate the report.
type PutReportDefinitionRequestBodyReportFrequencyEnum string

const (
	PutReportDefinitionRequestBodyReportFrequencyEnumMonthly PutReportDefinitionRequestBodyReportFrequencyEnum = "MONTHLY"
	PutReportDefinitionRequestBodyReportFrequencyEnumDaily   PutReportDefinitionRequestBodyReportFrequencyEnum = "DAILY"
	PutReportDefinitionRequestBodyReportFrequencyEnumAll     PutReportDefinitionRequestBodyReportFrequencyEnum = "ALL"
)

func (e *PutReportDefinitionRequestBodyReportFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MONTHLY":
		fallthrough
	case "DAILY":
		fallthrough
	case "ALL":
		*e = PutReportDefinitionRequestBodyReportFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutReportDefinitionRequestBodyReportFrequencyEnum: %s", s)
	}
}

type PutReportDefinitionRequestBody struct {
	// Represents the Amazon Simple Storage Service (Amazon S3) location where AWS Application Cost Profiler reports are generated and then written to.
	DestinationS3Location PutReportDefinitionRequestBodyDestinationS3Location `json:"destinationS3Location"`
	// Required. The format to use for the generated report.
	Format PutReportDefinitionRequestBodyFormatEnum `json:"format"`
	// Required. Description of the report.
	ReportDescription string `json:"reportDescription"`
	// Required. The cadence to generate the report.
	ReportFrequency PutReportDefinitionRequestBodyReportFrequencyEnum `json:"reportFrequency"`
	// Required. ID of the report. You can choose any valid string matching the pattern for the ID.
	ReportID string `json:"reportId"`
}

type PutReportDefinitionRequest struct {
	RequestBody       PutReportDefinitionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutReportDefinitionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	PutReportDefinitionResult *shared.PutReportDefinitionResult
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
