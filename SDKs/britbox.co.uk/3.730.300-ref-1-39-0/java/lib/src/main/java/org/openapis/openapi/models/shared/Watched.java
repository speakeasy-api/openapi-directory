/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Watched - OK
 */
public class Watched {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("firstWatchedDate")
    public OffsetDateTime firstWatchedDate;
    public Watched withFirstWatchedDate(OffsetDateTime firstWatchedDate) {
        this.firstWatchedDate = firstWatchedDate;
        return this;
    }
    
    /**
     * True - if the item is fully watched, False - otherwise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isFullyWatched")
    public Boolean isFullyWatched;
    public Watched withIsFullyWatched(Boolean isFullyWatched) {
        this.isFullyWatched = isFullyWatched;
        return this;
    }
    
    /**
     * The id of the item watched.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemId")
    public String itemId;
    public Watched withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastWatchedDate")
    public OffsetDateTime lastWatchedDate;
    public Watched withLastWatchedDate(OffsetDateTime lastWatchedDate) {
        this.lastWatchedDate = lastWatchedDate;
        return this;
    }
    
    /**
     * The last playhead position watched for the item.
     */
    @JsonProperty("position")
    public Integer position;
    public Watched withPosition(Integer position) {
        this.position = position;
        return this;
    }
    
}
