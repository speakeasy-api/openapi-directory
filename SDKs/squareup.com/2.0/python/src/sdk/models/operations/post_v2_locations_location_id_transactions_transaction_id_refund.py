"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createrefundrequest as shared_createrefundrequest
from ..shared import createrefundresponse as shared_createrefundresponse
from typing import Optional


@dataclasses.dataclass
class PostV2LocationsLocationIDTransactionsTransactionIDRefundSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostV2LocationsLocationIDTransactionsTransactionIDRefundRequest:
    
    create_refund_request: shared_createrefundrequest.CreateRefundRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""An object containing the fields to POST for the request.
    
    See the corresponding object definition for field details.
    """  
    location_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'location_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the original transaction's associated location."""  
    transaction_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'transaction_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the original transaction that includes the tender to refund."""  
    

@dataclasses.dataclass
class PostV2LocationsLocationIDTransactionsTransactionIDRefundResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_refund_response: Optional[shared_createrefundresponse.CreateRefundResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    