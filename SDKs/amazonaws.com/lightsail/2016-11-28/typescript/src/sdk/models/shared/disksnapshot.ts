/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DiskSnapshotStateEnum } from "./disksnapshotstateenum";
import { ResourceLocation } from "./resourcelocation";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a block storage disk snapshot.
 */
export class DiskSnapshot extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "fromDiskArn" })
  fromDiskArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fromDiskName" })
  fromDiskName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fromInstanceArn" })
  fromInstanceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fromInstanceName" })
  fromInstanceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isFromAutoSnapshot" })
  isFromAutoSnapshot?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ResourceLocation)
  location?: ResourceLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sizeInGb" })
  sizeInGb?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: DiskSnapshotStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "supportCode" })
  supportCode?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
