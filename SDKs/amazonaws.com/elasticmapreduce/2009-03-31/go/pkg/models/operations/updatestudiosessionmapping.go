// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateStudioSessionMappingXAmzTargetEnum
type UpdateStudioSessionMappingXAmzTargetEnum string

const (
	UpdateStudioSessionMappingXAmzTargetEnumElasticMapReduceUpdateStudioSessionMapping UpdateStudioSessionMappingXAmzTargetEnum = "ElasticMapReduce.UpdateStudioSessionMapping"
)

func (e UpdateStudioSessionMappingXAmzTargetEnum) ToPointer() *UpdateStudioSessionMappingXAmzTargetEnum {
	return &e
}

func (e *UpdateStudioSessionMappingXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ElasticMapReduce.UpdateStudioSessionMapping":
		*e = UpdateStudioSessionMappingXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateStudioSessionMappingXAmzTargetEnum: %v", v)
	}
}

type UpdateStudioSessionMappingRequest struct {
	UpdateStudioSessionMappingInput shared.UpdateStudioSessionMappingInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      UpdateStudioSessionMappingXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateStudioSessionMappingResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
