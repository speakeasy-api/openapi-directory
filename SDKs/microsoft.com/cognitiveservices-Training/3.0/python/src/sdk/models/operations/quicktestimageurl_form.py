"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from ..shared import imageprediction as shared_imageprediction
from ..shared import imageurl as shared_imageurl
from typing import Optional


@dataclasses.dataclass
class QuickTestImageURLFormRequest:
    
    image_url: shared_imageurl.ImageURL = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})
    r"""An ImageUrl that contains the url of the image to be evaluated."""  
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project to evaluate against."""  
    training_key: str = dataclasses.field(metadata={'header': { 'field_name': 'Training-Key', 'style': 'simple', 'explode': False }})
    r"""API key."""  
    iteration_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'iterationId', 'style': 'form', 'explode': True }})
    r"""Optional. Specifies the id of a particular iteration to evaluate against.
                The default iteration for the project will be used when not specified.
    """  
    

@dataclasses.dataclass
class QuickTestImageURLFormResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    image_prediction: Optional[shared_imageprediction.ImagePrediction] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    