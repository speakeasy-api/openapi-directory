/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2JobTriggerInput } from "./googleprivacydlpv2jobtrigger";
import { Expose, Type } from "class-transformer";

/**
 * Request message for CreateJobTrigger.
 */
export class GooglePrivacyDlpV2CreateJobTriggerRequestInput extends SpeakeasyBase {
  /**
   * Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobTrigger" })
  @Type(() => GooglePrivacyDlpV2JobTriggerInput)
  jobTrigger?: GooglePrivacyDlpV2JobTriggerInput;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;

  /**
   * The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerId" })
  triggerId?: string;
}
