// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScalingActivityStatusCodeEnum string

const (
	ScalingActivityStatusCodeEnumPendingSpotBidPlacement         ScalingActivityStatusCodeEnum = "PendingSpotBidPlacement"
	ScalingActivityStatusCodeEnumWaitingForSpotInstanceRequestID ScalingActivityStatusCodeEnum = "WaitingForSpotInstanceRequestId"
	ScalingActivityStatusCodeEnumWaitingForSpotInstanceID        ScalingActivityStatusCodeEnum = "WaitingForSpotInstanceId"
	ScalingActivityStatusCodeEnumWaitingForInstanceID            ScalingActivityStatusCodeEnum = "WaitingForInstanceId"
	ScalingActivityStatusCodeEnumPreInService                    ScalingActivityStatusCodeEnum = "PreInService"
	ScalingActivityStatusCodeEnumInProgress                      ScalingActivityStatusCodeEnum = "InProgress"
	ScalingActivityStatusCodeEnumWaitingForElbConnectionDraining ScalingActivityStatusCodeEnum = "WaitingForELBConnectionDraining"
	ScalingActivityStatusCodeEnumMidLifecycleAction              ScalingActivityStatusCodeEnum = "MidLifecycleAction"
	ScalingActivityStatusCodeEnumWaitingForInstanceWarmup        ScalingActivityStatusCodeEnum = "WaitingForInstanceWarmup"
	ScalingActivityStatusCodeEnumSuccessful                      ScalingActivityStatusCodeEnum = "Successful"
	ScalingActivityStatusCodeEnumFailed                          ScalingActivityStatusCodeEnum = "Failed"
	ScalingActivityStatusCodeEnumCancelled                       ScalingActivityStatusCodeEnum = "Cancelled"
)

func (e *ScalingActivityStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PendingSpotBidPlacement":
		fallthrough
	case "WaitingForSpotInstanceRequestId":
		fallthrough
	case "WaitingForSpotInstanceId":
		fallthrough
	case "WaitingForInstanceId":
		fallthrough
	case "PreInService":
		fallthrough
	case "InProgress":
		fallthrough
	case "WaitingForELBConnectionDraining":
		fallthrough
	case "MidLifecycleAction":
		fallthrough
	case "WaitingForInstanceWarmup":
		fallthrough
	case "Successful":
		fallthrough
	case "Failed":
		fallthrough
	case "Cancelled":
		*e = ScalingActivityStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScalingActivityStatusCodeEnum: %s", s)
	}
}
