/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AlertStrategy - Control over how the notification channels in notification_channels are notified when this alert fires.
 */
public class AlertStrategy {
    /**
     * If an alert policy that was active has no data for this long, any open incidents will close
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoClose")
    public String autoClose;

    public AlertStrategy withAutoClose(String autoClose) {
        this.autoClose = autoClose;
        return this;
    }
    
    /**
     * Control how notifications will be sent out, on a per-channel basis.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationChannelStrategy")
    public NotificationChannelStrategy[] notificationChannelStrategy;

    public AlertStrategy withNotificationChannelStrategy(NotificationChannelStrategy[] notificationChannelStrategy) {
        this.notificationChannelStrategy = notificationChannelStrategy;
        return this;
    }
    
    /**
     * Control over the rate of notifications sent to this alert policy's notification channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationRateLimit")
    public NotificationRateLimit notificationRateLimit;

    public AlertStrategy withNotificationRateLimit(NotificationRateLimit notificationRateLimit) {
        this.notificationRateLimit = notificationRateLimit;
        return this;
    }
    
    public AlertStrategy(){}
}
