// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSpacesSpaceIDFoldersIDContractualDocumentsPathParams struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum - Type of the document
type GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum string

const (
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumContract         GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "contract"
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumEngagementLetter GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "engagement-letter"
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumAmendment        GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "amendment"
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumPurchaseOrder    GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "purchase-order"
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumDeliveryOrder    GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "delivery-order"
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumQuotation        GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "quotation"
	GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnumOther            GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum = "other"
)

func (e *GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "contract":
		fallthrough
	case "engagement-letter":
		fallthrough
	case "amendment":
		fallthrough
	case "purchase-order":
		fallthrough
	case "delivery-order":
		fallthrough
	case "quotation":
		fallthrough
	case "other":
		*e = GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum: %s", s)
	}
}

type GetSpacesSpaceIDFoldersIDContractualDocumentsQueryParams struct {
	// date range of the documents
	Date *string `queryParam:"style=form,explode=true,name=Date"`
	// date range of attachment
	FolderDate *string `queryParam:"style=form,explode=true,name=FolderDate"`
	// index range of the results
	Range *string `queryParam:"style=form,explode=true,name=Range"`
	// Type of the document
	Type *GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum `queryParam:"style=form,explode=true,name=Type"`
}

type GetSpacesSpaceIDFoldersIDContractualDocumentsRequest struct {
	PathParams  GetSpacesSpaceIDFoldersIDContractualDocumentsPathParams
	QueryParams GetSpacesSpaceIDFoldersIDContractualDocumentsQueryParams
}

type GetSpacesSpaceIDFoldersIDContractualDocumentsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of documents of the folder
	GetSpacesSpaceIDFoldersIDContractualDocuments200ApplicationJSONAllOfs []shared.ContractualDocument
}
