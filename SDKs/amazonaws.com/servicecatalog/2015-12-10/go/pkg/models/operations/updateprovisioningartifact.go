// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateProvisioningArtifactXAmzTargetEnum
type UpdateProvisioningArtifactXAmzTargetEnum string

const (
	UpdateProvisioningArtifactXAmzTargetEnumAws242ServiceCatalogServiceUpdateProvisioningArtifact UpdateProvisioningArtifactXAmzTargetEnum = "AWS242ServiceCatalogService.UpdateProvisioningArtifact"
)

func (e *UpdateProvisioningArtifactXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.UpdateProvisioningArtifact":
		*e = UpdateProvisioningArtifactXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateProvisioningArtifactXAmzTargetEnum: %s", s)
	}
}

type UpdateProvisioningArtifactHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateProvisioningArtifactXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateProvisioningArtifactRequest struct {
	Headers UpdateProvisioningArtifactHeaders
	Request shared.UpdateProvisioningArtifactInput `request:"mediaType=application/json"`
}

type UpdateProvisioningArtifactResponse struct {
	ContentType string
	// InvalidParametersException
	InvalidParametersException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateProvisioningArtifactOutput *shared.UpdateProvisioningArtifactOutput
}
