"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sourcelocation as shared_sourcelocation
from ..shared import variable as shared_variable
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StackFrame:
    r"""Represents a stack frame context."""
    
    arguments: Optional[list[shared_variable.Variable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arguments'), 'exclude': lambda f: f is None }})
    r"""Set of arguments passed to this function. Note that this might not be populated for all stack frames."""  
    function: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('function'), 'exclude': lambda f: f is None }})
    r"""Demangled function name at the call site."""  
    locals: Optional[list[shared_variable.Variable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locals'), 'exclude': lambda f: f is None }})
    r"""Set of local variables at the stack frame location. Note that this might not be populated for all stack frames."""  
    location: Optional[shared_sourcelocation.SourceLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""Represents a location in the source code."""  
    