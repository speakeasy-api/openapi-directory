// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteUserActionEnum
type GETDeleteUserActionEnum string

const (
	GETDeleteUserActionEnumDeleteUser GETDeleteUserActionEnum = "DeleteUser"
)

func (e GETDeleteUserActionEnum) ToPointer() *GETDeleteUserActionEnum {
	return &e
}

func (e *GETDeleteUserActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteUser":
		*e = GETDeleteUserActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteUserActionEnum: %v", v)
	}
}

// GETDeleteUserVersionEnum
type GETDeleteUserVersionEnum string

const (
	GETDeleteUserVersionEnumTwoThousandAndFifteen0202 GETDeleteUserVersionEnum = "2015-02-02"
)

func (e GETDeleteUserVersionEnum) ToPointer() *GETDeleteUserVersionEnum {
	return &e
}

func (e *GETDeleteUserVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETDeleteUserVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteUserVersionEnum: %v", v)
	}
}

type GETDeleteUserRequest struct {
	Action GETDeleteUserActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the user.
	UserID            string                   `queryParam:"style=form,explode=true,name=UserId"`
	Version           GETDeleteUserVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteUserResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
