"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensionvalue as shared_dimensionvalue
from ..shared import directorysitesettings as shared_directorysitesettings
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DirectorySiteInpageTagFormatsEnum(str, Enum):
    STANDARD = 'STANDARD'
    IFRAME_JAVASCRIPT_INPAGE = 'IFRAME_JAVASCRIPT_INPAGE'
    INTERNAL_REDIRECT_INPAGE = 'INTERNAL_REDIRECT_INPAGE'
    JAVASCRIPT_INPAGE = 'JAVASCRIPT_INPAGE'

class DirectorySiteInterstitialTagFormatsEnum(str, Enum):
    IFRAME_JAVASCRIPT_INTERSTITIAL = 'IFRAME_JAVASCRIPT_INTERSTITIAL'
    INTERNAL_REDIRECT_INTERSTITIAL = 'INTERNAL_REDIRECT_INTERSTITIAL'
    JAVASCRIPT_INTERSTITIAL = 'JAVASCRIPT_INTERSTITIAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectorySite:
    r"""DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account via the Sites resource before they can be assigned to a placement."""
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Whether this directory site is active."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of this directory site. This is a read-only, auto-generated field."""  
    id_dimension_value: Optional[shared_dimensionvalue.DimensionValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idDimensionValue'), 'exclude': lambda f: f is None }})
    r"""Represents a DimensionValue resource."""  
    inpage_tag_formats: Optional[list[DirectorySiteInpageTagFormatsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inpageTagFormats'), 'exclude': lambda f: f is None }})
    r"""Tag types for regular placements. Acceptable values are: - \\"STANDARD\\" - \\"IFRAME_JAVASCRIPT_INPAGE\\" - \\"INTERNAL_REDIRECT_INPAGE\\" - \\"JAVASCRIPT_INPAGE\\" """  
    interstitial_tag_formats: Optional[list[DirectorySiteInterstitialTagFormatsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interstitialTagFormats'), 'exclude': lambda f: f is None }})
    r"""Tag types for interstitial placements. Acceptable values are: - \\"IFRAME_JAVASCRIPT_INTERSTITIAL\\" - \\"INTERNAL_REDIRECT_INTERSTITIAL\\" - \\"JAVASCRIPT_INTERSTITIAL\\" """  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"dfareporting#directorySite\\"."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this directory site."""  
    settings: Optional[shared_directorysitesettings.DirectorySiteSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settings'), 'exclude': lambda f: f is None }})
    r"""Directory Site Settings"""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""URL of this directory site."""  
    