// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScaStatusEnum - This data element is containing information about the status of the SCA method applied.
//
// The following codes are defined for this data type.
//
//   - 'received':
//     An authorisation or cancellation-authorisation resource has been created successfully.
//   - 'psuIdentified':
//     The PSU related to the authorisation or cancellation-authorisation resource has been identified.
//   - 'psuAuthenticated':
//     The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.
//   - 'scaMethodSelected':
//     The PSU/TPP has selected the related SCA routine.
//     If the SCA method is chosen implicitly since only one SCA method is available,
//     then this is the first status to be reported instead of 'received'.
//   - 'unconfirmed':
//     SCA is technically successfully finalised by the PSU, but the authorisation resource needs a confirmation command by the TPP yet.
//   - 'started':
//     The addressed SCA routine has been started.
//   - 'finalised':
//     The SCA routine has been finalised successfully (including a potential confirmation command).
//     This is a final status of the authorisation resource.
//   - 'failed':
//     The SCA routine failed.
//     This is a final status of the authorisation resource.
//   - 'exempted':
//     SCA was exempted for the related transaction, the related authorisation is successful.
//     This is a final status of the authorisation resource.
type ScaStatusEnum string

const (
	ScaStatusEnumReceived          ScaStatusEnum = "received"
	ScaStatusEnumPsuIdentified     ScaStatusEnum = "psuIdentified"
	ScaStatusEnumPsuAuthenticated  ScaStatusEnum = "psuAuthenticated"
	ScaStatusEnumScaMethodSelected ScaStatusEnum = "scaMethodSelected"
	ScaStatusEnumStarted           ScaStatusEnum = "started"
	ScaStatusEnumUnconfirmed       ScaStatusEnum = "unconfirmed"
	ScaStatusEnumFinalised         ScaStatusEnum = "finalised"
	ScaStatusEnumFailed            ScaStatusEnum = "failed"
	ScaStatusEnumExempted          ScaStatusEnum = "exempted"
)

func (e ScaStatusEnum) ToPointer() *ScaStatusEnum {
	return &e
}

func (e *ScaStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "received":
		fallthrough
	case "psuIdentified":
		fallthrough
	case "psuAuthenticated":
		fallthrough
	case "scaMethodSelected":
		fallthrough
	case "started":
		fallthrough
	case "unconfirmed":
		fallthrough
	case "finalised":
		fallthrough
	case "failed":
		fallthrough
	case "exempted":
		*e = ScaStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScaStatusEnum: %v", v)
	}
}
