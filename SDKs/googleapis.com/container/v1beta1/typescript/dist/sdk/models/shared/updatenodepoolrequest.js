"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateNodePoolRequest = void 0;
var utils_1 = require("../../../internal/utils");
var confidentialnodes_1 = require("./confidentialnodes");
var fastsocket_1 = require("./fastsocket");
var gcfsconfig_1 = require("./gcfsconfig");
var linuxnodeconfig_1 = require("./linuxnodeconfig");
var networktags_1 = require("./networktags");
var nodekubeletconfig_1 = require("./nodekubeletconfig");
var nodelabels_1 = require("./nodelabels");
var nodenetworkconfig_1 = require("./nodenetworkconfig");
var nodepoolloggingconfig_1 = require("./nodepoolloggingconfig");
var nodetaints_1 = require("./nodetaints");
var resourcelabels_1 = require("./resourcelabels");
var upgradesettings_1 = require("./upgradesettings");
var virtualnic_1 = require("./virtualnic");
var windowsnodeconfig_1 = require("./windowsnodeconfig");
var workloadmetadataconfig_1 = require("./workloadmetadataconfig");
var class_transformer_1 = require("class-transformer");
/**
 * SetNodePoolVersionRequest updates the version of a node pool.
 */
var UpdateNodePoolRequest = /** @class */ (function (_super) {
    __extends(UpdateNodePoolRequest, _super);
    function UpdateNodePoolRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clusterId" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "clusterId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "confidentialNodes" }),
        (0, class_transformer_1.Type)(function () { return confidentialnodes_1.ConfidentialNodes; }),
        __metadata("design:type", confidentialnodes_1.ConfidentialNodes)
    ], UpdateNodePoolRequest.prototype, "confidentialNodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fastSocket" }),
        (0, class_transformer_1.Type)(function () { return fastsocket_1.FastSocket; }),
        __metadata("design:type", fastsocket_1.FastSocket)
    ], UpdateNodePoolRequest.prototype, "fastSocket", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gcfsConfig" }),
        (0, class_transformer_1.Type)(function () { return gcfsconfig_1.GcfsConfig; }),
        __metadata("design:type", gcfsconfig_1.GcfsConfig)
    ], UpdateNodePoolRequest.prototype, "gcfsConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gvnic" }),
        (0, class_transformer_1.Type)(function () { return virtualnic_1.VirtualNIC; }),
        __metadata("design:type", virtualnic_1.VirtualNIC)
    ], UpdateNodePoolRequest.prototype, "gvnic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageType" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "imageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kubeletConfig" }),
        (0, class_transformer_1.Type)(function () { return nodekubeletconfig_1.NodeKubeletConfig; }),
        __metadata("design:type", nodekubeletconfig_1.NodeKubeletConfig)
    ], UpdateNodePoolRequest.prototype, "kubeletConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        (0, class_transformer_1.Type)(function () { return nodelabels_1.NodeLabels; }),
        __metadata("design:type", nodelabels_1.NodeLabels)
    ], UpdateNodePoolRequest.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linuxNodeConfig" }),
        (0, class_transformer_1.Type)(function () { return linuxnodeconfig_1.LinuxNodeConfig; }),
        __metadata("design:type", linuxnodeconfig_1.LinuxNodeConfig)
    ], UpdateNodePoolRequest.prototype, "linuxNodeConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locations" }),
        __metadata("design:type", Array)
    ], UpdateNodePoolRequest.prototype, "locations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "loggingConfig" }),
        (0, class_transformer_1.Type)(function () { return nodepoolloggingconfig_1.NodePoolLoggingConfig; }),
        __metadata("design:type", nodepoolloggingconfig_1.NodePoolLoggingConfig)
    ], UpdateNodePoolRequest.prototype, "loggingConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nodeNetworkConfig" }),
        (0, class_transformer_1.Type)(function () { return nodenetworkconfig_1.NodeNetworkConfig; }),
        __metadata("design:type", nodenetworkconfig_1.NodeNetworkConfig)
    ], UpdateNodePoolRequest.prototype, "nodeNetworkConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nodePoolId" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "nodePoolId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nodeVersion" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "nodeVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "projectId" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "projectId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceLabels" }),
        (0, class_transformer_1.Type)(function () { return resourcelabels_1.ResourceLabels; }),
        __metadata("design:type", resourcelabels_1.ResourceLabels)
    ], UpdateNodePoolRequest.prototype, "resourceLabels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        (0, class_transformer_1.Type)(function () { return networktags_1.NetworkTags; }),
        __metadata("design:type", networktags_1.NetworkTags)
    ], UpdateNodePoolRequest.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taints" }),
        (0, class_transformer_1.Type)(function () { return nodetaints_1.NodeTaints; }),
        __metadata("design:type", nodetaints_1.NodeTaints)
    ], UpdateNodePoolRequest.prototype, "taints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "upgradeSettings" }),
        (0, class_transformer_1.Type)(function () { return upgradesettings_1.UpgradeSettings; }),
        __metadata("design:type", upgradesettings_1.UpgradeSettings)
    ], UpdateNodePoolRequest.prototype, "upgradeSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "windowsNodeConfig" }),
        (0, class_transformer_1.Type)(function () { return windowsnodeconfig_1.WindowsNodeConfig; }),
        __metadata("design:type", windowsnodeconfig_1.WindowsNodeConfig)
    ], UpdateNodePoolRequest.prototype, "windowsNodeConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workloadMetadataConfig" }),
        (0, class_transformer_1.Type)(function () { return workloadmetadataconfig_1.WorkloadMetadataConfig; }),
        __metadata("design:type", workloadmetadataconfig_1.WorkloadMetadataConfig)
    ], UpdateNodePoolRequest.prototype, "workloadMetadataConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zone" }),
        __metadata("design:type", String)
    ], UpdateNodePoolRequest.prototype, "zone", void 0);
    return UpdateNodePoolRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateNodePoolRequest = UpdateNodePoolRequest;
