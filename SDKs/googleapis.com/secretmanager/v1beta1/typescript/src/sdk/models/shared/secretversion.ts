/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The current state of the SecretVersion.
 */
export enum SecretVersionStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Enabled = "ENABLED",
  Disabled = "DISABLED",
  Destroyed = "DESTROYED",
}

/**
 * A secret version resource in the Secret Manager API.
 */
export class SecretVersion extends SpeakeasyBase {
  /**
   * Output only. The time at which the SecretVersion was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destroyTime" })
  destroyTime?: string;

  /**
   * Output only. The resource name of the SecretVersion in the format `projects/* /secrets/* /versions/*`. SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The current state of the SecretVersion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: SecretVersionStateEnum;
}
