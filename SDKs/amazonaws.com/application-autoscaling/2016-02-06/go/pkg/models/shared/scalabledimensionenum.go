// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScalableDimensionEnum string

const (
	ScalableDimensionEnumEcsServiceDesiredCount                                    ScalableDimensionEnum = "ecs:service:DesiredCount"
	ScalableDimensionEnumEc2SpotFleetRequestTargetCapacity                         ScalableDimensionEnum = "ec2:spot-fleet-request:TargetCapacity"
	ScalableDimensionEnumElasticmapreduceInstancegroupInstanceCount                ScalableDimensionEnum = "elasticmapreduce:instancegroup:InstanceCount"
	ScalableDimensionEnumAppstreamFleetDesiredCapacity                             ScalableDimensionEnum = "appstream:fleet:DesiredCapacity"
	ScalableDimensionEnumDynamodbTableReadCapacityUnits                            ScalableDimensionEnum = "dynamodb:table:ReadCapacityUnits"
	ScalableDimensionEnumDynamodbTableWriteCapacityUnits                           ScalableDimensionEnum = "dynamodb:table:WriteCapacityUnits"
	ScalableDimensionEnumDynamodbIndexReadCapacityUnits                            ScalableDimensionEnum = "dynamodb:index:ReadCapacityUnits"
	ScalableDimensionEnumDynamodbIndexWriteCapacityUnits                           ScalableDimensionEnum = "dynamodb:index:WriteCapacityUnits"
	ScalableDimensionEnumRdsClusterReadReplicaCount                                ScalableDimensionEnum = "rds:cluster:ReadReplicaCount"
	ScalableDimensionEnumSagemakerVariantDesiredInstanceCount                      ScalableDimensionEnum = "sagemaker:variant:DesiredInstanceCount"
	ScalableDimensionEnumCustomResourceResourceTypeProperty                        ScalableDimensionEnum = "custom-resource:ResourceType:Property"
	ScalableDimensionEnumComprehendDocumentClassifierEndpointDesiredInferenceUnits ScalableDimensionEnum = "comprehend:document-classifier-endpoint:DesiredInferenceUnits"
	ScalableDimensionEnumComprehendEntityRecognizerEndpointDesiredInferenceUnits   ScalableDimensionEnum = "comprehend:entity-recognizer-endpoint:DesiredInferenceUnits"
	ScalableDimensionEnumLambdaFunctionProvisionedConcurrency                      ScalableDimensionEnum = "lambda:function:ProvisionedConcurrency"
	ScalableDimensionEnumCassandraTableReadCapacityUnits                           ScalableDimensionEnum = "cassandra:table:ReadCapacityUnits"
	ScalableDimensionEnumCassandraTableWriteCapacityUnits                          ScalableDimensionEnum = "cassandra:table:WriteCapacityUnits"
	ScalableDimensionEnumKafkaBrokerStorageVolumeSize                              ScalableDimensionEnum = "kafka:broker-storage:VolumeSize"
	ScalableDimensionEnumElasticacheReplicationGroupNodeGroups                     ScalableDimensionEnum = "elasticache:replication-group:NodeGroups"
	ScalableDimensionEnumElasticacheReplicationGroupReplicas                       ScalableDimensionEnum = "elasticache:replication-group:Replicas"
	ScalableDimensionEnumNeptuneClusterReadReplicaCount                            ScalableDimensionEnum = "neptune:cluster:ReadReplicaCount"
)

func (e ScalableDimensionEnum) ToPointer() *ScalableDimensionEnum {
	return &e
}

func (e *ScalableDimensionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ecs:service:DesiredCount":
		fallthrough
	case "ec2:spot-fleet-request:TargetCapacity":
		fallthrough
	case "elasticmapreduce:instancegroup:InstanceCount":
		fallthrough
	case "appstream:fleet:DesiredCapacity":
		fallthrough
	case "dynamodb:table:ReadCapacityUnits":
		fallthrough
	case "dynamodb:table:WriteCapacityUnits":
		fallthrough
	case "dynamodb:index:ReadCapacityUnits":
		fallthrough
	case "dynamodb:index:WriteCapacityUnits":
		fallthrough
	case "rds:cluster:ReadReplicaCount":
		fallthrough
	case "sagemaker:variant:DesiredInstanceCount":
		fallthrough
	case "custom-resource:ResourceType:Property":
		fallthrough
	case "comprehend:document-classifier-endpoint:DesiredInferenceUnits":
		fallthrough
	case "comprehend:entity-recognizer-endpoint:DesiredInferenceUnits":
		fallthrough
	case "lambda:function:ProvisionedConcurrency":
		fallthrough
	case "cassandra:table:ReadCapacityUnits":
		fallthrough
	case "cassandra:table:WriteCapacityUnits":
		fallthrough
	case "kafka:broker-storage:VolumeSize":
		fallthrough
	case "elasticache:replication-group:NodeGroups":
		fallthrough
	case "elasticache:replication-group:Replicas":
		fallthrough
	case "neptune:cluster:ReadReplicaCount":
		*e = ScalableDimensionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScalableDimensionEnum: %v", v)
	}
}
