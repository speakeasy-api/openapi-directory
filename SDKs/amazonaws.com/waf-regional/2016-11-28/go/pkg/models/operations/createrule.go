// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateRuleXAmzTargetEnum
type CreateRuleXAmzTargetEnum string

const (
	CreateRuleXAmzTargetEnumAwswafRegional20161128CreateRule CreateRuleXAmzTargetEnum = "AWSWAF_Regional_20161128.CreateRule"
)

func (e *CreateRuleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_Regional_20161128.CreateRule":
		*e = CreateRuleXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRuleXAmzTargetEnum: %s", s)
	}
}

type CreateRuleRequest struct {
	CreateRuleRequest shared.CreateRuleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateRuleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateRuleResponse struct {
	ContentType string
	// Success
	CreateRuleResponse *shared.CreateRuleResponse
	StatusCode         int
	RawResponse        *http.Response
	// WAFBadRequestException
	WAFBadRequestException interface{}
	// WAFDisallowedNameException
	WAFDisallowedNameException interface{}
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFLimitsExceededException
	WAFLimitsExceededException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
	// WAFTagOperationException
	WAFTagOperationException interface{}
	// WAFTagOperationInternalErrorException
	WAFTagOperationInternalErrorException interface{}
}
