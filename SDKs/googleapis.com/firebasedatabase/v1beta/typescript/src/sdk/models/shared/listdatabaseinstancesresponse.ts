/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DatabaseInstance } from "./databaseinstance";
import { Expose, Type } from "class-transformer";

/**
 * The response from the ListDatabaseInstances method.
 */
export class ListDatabaseInstancesResponse extends SpeakeasyBase {
  /**
   * List of each DatabaseInstance that is in the parent Firebase project.
   */
  @SpeakeasyMetadata({ elemType: DatabaseInstance })
  @Expose({ name: "instances" })
  @Type(() => DatabaseInstance)
  instances?: DatabaseInstance[];

  /**
   * If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
