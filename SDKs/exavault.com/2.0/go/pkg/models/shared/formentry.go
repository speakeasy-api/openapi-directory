// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// FormEntryAttributesStatusEnum - Form entry status
type FormEntryAttributesStatusEnum string

const (
	FormEntryAttributesStatusEnumPending   FormEntryAttributesStatusEnum = "pending"
	FormEntryAttributesStatusEnumCompleted FormEntryAttributesStatusEnum = "completed"
)

func (e FormEntryAttributesStatusEnum) ToPointer() *FormEntryAttributesStatusEnum {
	return &e
}

func (e *FormEntryAttributesStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "completed":
		*e = FormEntryAttributesStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FormEntryAttributesStatusEnum: %v", v)
	}
}

type FormEntryAttributes struct {
	// Timestamp of the submission
	Created *time.Time       `json:"created,omitempty"`
	Fields  []FormEntryField `json:"fields,omitempty"`
	// Timestamp of the field modified date
	Modified *time.Time `json:"modified,omitempty"`
	// Full paths to files associated with the form submission
	Paths []string `json:"paths,omitempty"`
	// Form entry status
	Status *FormEntryAttributesStatusEnum `json:"status,omitempty"`
}

// FormEntry - Contains the data submitted for a form.
type FormEntry struct {
	Attributes *FormEntryAttributes `json:"attributes,omitempty"`
	// Form entry id
	ID *int64 `json:"id,omitempty"`
	// Type of item. "formEntry"
	Type *string `json:"type,omitempty"`
}
