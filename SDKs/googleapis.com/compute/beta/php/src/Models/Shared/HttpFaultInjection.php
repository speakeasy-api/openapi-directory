<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpFaultInjection - The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by the load balancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the load balancer for a percentage of requests.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpFaultInjection
{
    /**
     * Specification for how requests are aborted as part of fault injection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpFaultAbort $abort
     */
	#[\JMS\Serializer\Annotation\SerializedName('abort')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpFaultAbort')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpFaultAbort $abort = null;
    
    /**
     * Specifies the delay introduced by the load balancer before forwarding the request to the backend service as part of fault injection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpFaultDelay $delay
     */
	#[\JMS\Serializer\Annotation\SerializedName('delay')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpFaultDelay')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpFaultDelay $delay = null;
    
	public function __construct()
	{
		$this->abort = null;
		$this->delay = null;
	}
}
