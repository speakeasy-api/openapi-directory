// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LanguageEnum - The language to use
type LanguageEnum string

const (
	LanguageEnumAr      LanguageEnum = "ar"
	LanguageEnumCaEs    LanguageEnum = "ca-ES"
	LanguageEnumCmnCn   LanguageEnum = "cmn-CN"
	LanguageEnumCmnTw   LanguageEnum = "cmn-TW"
	LanguageEnumCsCz    LanguageEnum = "cs-CZ"
	LanguageEnumCyGb    LanguageEnum = "cy-GB"
	LanguageEnumDaDk    LanguageEnum = "da-DK"
	LanguageEnumDeDe    LanguageEnum = "de-DE"
	LanguageEnumElGr    LanguageEnum = "el-GR"
	LanguageEnumEnAu    LanguageEnum = "en-AU"
	LanguageEnumEnGb    LanguageEnum = "en-GB"
	LanguageEnumEnGbWls LanguageEnum = "en-GB-WLS"
	LanguageEnumEnIn    LanguageEnum = "en-IN"
	LanguageEnumEnUs    LanguageEnum = "en-US"
	LanguageEnumEnZa    LanguageEnum = "en-ZA"
	LanguageEnumEsEs    LanguageEnum = "es-ES"
	LanguageEnumEsMx    LanguageEnum = "es-MX"
	LanguageEnumEsUs    LanguageEnum = "es-US"
	LanguageEnumEuEs    LanguageEnum = "eu-ES"
	LanguageEnumFiFi    LanguageEnum = "fi-FI"
	LanguageEnumFilPh   LanguageEnum = "fil-PH"
	LanguageEnumFrCa    LanguageEnum = "fr-CA"
	LanguageEnumFrFr    LanguageEnum = "fr-FR"
	LanguageEnumHeIl    LanguageEnum = "he-IL"
	LanguageEnumHiIn    LanguageEnum = "hi-IN"
	LanguageEnumHuHu    LanguageEnum = "hu-HU"
	LanguageEnumIDID    LanguageEnum = "id-ID"
	LanguageEnumIsIs    LanguageEnum = "is-IS"
	LanguageEnumItIt    LanguageEnum = "it-IT"
	LanguageEnumJaJp    LanguageEnum = "ja-JP"
	LanguageEnumKoKr    LanguageEnum = "ko-KR"
	LanguageEnumNbNo    LanguageEnum = "nb-NO"
	LanguageEnumNlNl    LanguageEnum = "nl-NL"
	LanguageEnumNoNo    LanguageEnum = "no-NO"
	LanguageEnumPlPl    LanguageEnum = "pl-PL"
	LanguageEnumPtBr    LanguageEnum = "pt-BR"
	LanguageEnumPtPt    LanguageEnum = "pt-PT"
	LanguageEnumRoRo    LanguageEnum = "ro-RO"
	LanguageEnumRuRu    LanguageEnum = "ru-RU"
	LanguageEnumSkSk    LanguageEnum = "sk-SK"
	LanguageEnumSvSe    LanguageEnum = "sv-SE"
	LanguageEnumThTh    LanguageEnum = "th-TH"
	LanguageEnumTrTr    LanguageEnum = "tr-TR"
	LanguageEnumUkUa    LanguageEnum = "uk-UA"
	LanguageEnumViVn    LanguageEnum = "vi-VN"
	LanguageEnumYueCn   LanguageEnum = "yue-CN"
)

func (e LanguageEnum) ToPointer() *LanguageEnum {
	return &e
}

func (e *LanguageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ar":
		fallthrough
	case "ca-ES":
		fallthrough
	case "cmn-CN":
		fallthrough
	case "cmn-TW":
		fallthrough
	case "cs-CZ":
		fallthrough
	case "cy-GB":
		fallthrough
	case "da-DK":
		fallthrough
	case "de-DE":
		fallthrough
	case "el-GR":
		fallthrough
	case "en-AU":
		fallthrough
	case "en-GB":
		fallthrough
	case "en-GB-WLS":
		fallthrough
	case "en-IN":
		fallthrough
	case "en-US":
		fallthrough
	case "en-ZA":
		fallthrough
	case "es-ES":
		fallthrough
	case "es-MX":
		fallthrough
	case "es-US":
		fallthrough
	case "eu-ES":
		fallthrough
	case "fi-FI":
		fallthrough
	case "fil-PH":
		fallthrough
	case "fr-CA":
		fallthrough
	case "fr-FR":
		fallthrough
	case "he-IL":
		fallthrough
	case "hi-IN":
		fallthrough
	case "hu-HU":
		fallthrough
	case "id-ID":
		fallthrough
	case "is-IS":
		fallthrough
	case "it-IT":
		fallthrough
	case "ja-JP":
		fallthrough
	case "ko-KR":
		fallthrough
	case "nb-NO":
		fallthrough
	case "nl-NL":
		fallthrough
	case "no-NO":
		fallthrough
	case "pl-PL":
		fallthrough
	case "pt-BR":
		fallthrough
	case "pt-PT":
		fallthrough
	case "ro-RO":
		fallthrough
	case "ru-RU":
		fallthrough
	case "sk-SK":
		fallthrough
	case "sv-SE":
		fallthrough
	case "th-TH":
		fallthrough
	case "tr-TR":
		fallthrough
	case "uk-UA":
		fallthrough
	case "vi-VN":
		fallthrough
	case "yue-CN":
		*e = LanguageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LanguageEnum: %v", v)
	}
}
