<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UsagePerUnitPricingOverride - Pricing information about a usage charge that uses the "per unit" charge model. In this charge model, the charge has a fixed price per unit consumed.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UsagePerUnitPricingOverride
{
    /**
     * Per-unit price of the charge.
     * 
     * 
     * 
     * @var ?float $listPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('listPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $listPrice = null;
    
    /**
     * Specifies how Zuora changes the price of the charge each time the subscription renews.
     * 
     * 
     * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingOverridePriceChangeOptionEnum $priceChangeOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceChangeOption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingOverridePriceChangeOptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsagePerUnitPricingOverridePriceChangeOptionEnum $priceChangeOption = null;
    
    /**
     * Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`.
     * 
     * 
     * 
     * @var ?float $priceIncreasePercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceIncreasePercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $priceIncreasePercentage = null;
    
    /**
     * Specifies how Zuora groups usage records when rating usage. See [Usage Rating by Group](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Usage/Usage_Rating_by_Group) for more information.
     * 
     *   * ByBillingPeriod (default): The rating is based on all the usages in a billing period.
     *   * ByUsageStartDate: The rating is based on all the usages on the same usage start date. 
     *   * ByUsageRecord: The rating is based on each usage record.
     *   * ByUsageUpload: The rating is based on all the usages in a uploaded usage file (.xls or .csv). If you import a mass usage in a single upload, which contains multiple usage files in .xls or .csv format, usage records are grouped for each usage file.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingOverrideRatingGroupEnum $ratingGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('ratingGroup')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingOverrideRatingGroupEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsagePerUnitPricingOverrideRatingGroupEnum $ratingGroup = null;
    
	public function __construct()
	{
		$this->listPrice = null;
		$this->priceChangeOption = null;
		$this->priceIncreasePercentage = null;
		$this->ratingGroup = null;
	}
}
