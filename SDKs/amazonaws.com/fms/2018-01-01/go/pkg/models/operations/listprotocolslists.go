// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListProtocolsListsXAmzTargetEnum
type ListProtocolsListsXAmzTargetEnum string

const (
	ListProtocolsListsXAmzTargetEnumAwsfms20180101ListProtocolsLists ListProtocolsListsXAmzTargetEnum = "AWSFMS_20180101.ListProtocolsLists"
)

func (e *ListProtocolsListsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSFMS_20180101.ListProtocolsLists":
		*e = ListProtocolsListsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListProtocolsListsXAmzTargetEnum: %s", s)
	}
}

type ListProtocolsListsRequest struct {
	ListProtocolsListsRequest shared.ListProtocolsListsRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListProtocolsListsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListProtocolsListsResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// Success
	ListProtocolsListsResponse *shared.ListProtocolsListsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
