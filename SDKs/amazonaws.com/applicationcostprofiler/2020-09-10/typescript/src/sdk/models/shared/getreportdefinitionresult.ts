/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FormatEnum } from "./formatenum";
import { ReportFrequencyEnum } from "./reportfrequencyenum";
import { S3Location } from "./s3location";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetReportDefinitionResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationS3Location" })
  @Type(() => S3Location)
  destinationS3Location: S3Location;

  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: FormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "reportDescription" })
  reportDescription: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reportFrequency" })
  reportFrequency: ReportFrequencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "reportId" })
  reportId: string;
}
