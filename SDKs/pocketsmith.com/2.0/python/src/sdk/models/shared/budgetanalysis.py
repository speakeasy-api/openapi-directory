"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import period as shared_period
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BudgetAnalysis:
    
    average_actual_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_actual_amount'), 'exclude': lambda f: f is None }})
    r"""The average actual (transactions) amount across all periods."""  
    average_forecast_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_forecast_amount'), 'exclude': lambda f: f is None }})
    r"""The average budgeted amount across all periods."""  
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency_code'), 'exclude': lambda f: f is None }})
    r"""The currency of the budget analysis."""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_date'), 'exclude': lambda f: f is None }})
    r"""The end date of the budget analysis."""  
    periods: Optional[list[shared_period.Period]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('periods'), 'exclude': lambda f: f is None }})
    r"""The period analyses that this budget analysis comprises."""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'exclude': lambda f: f is None }})
    r"""The start date of the budget analysis."""  
    total_actual_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_actual_amount'), 'exclude': lambda f: f is None }})
    r"""The total actual (transactions) amount across all periods."""  
    total_forecast_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_forecast_amount'), 'exclude': lambda f: f is None }})
    r"""The total budgeted amount across all periods."""  
    total_over_by: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_over_by'), 'exclude': lambda f: f is None }})
    r"""The total amount the budget was exceeded across all periods."""  
    total_under_by: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_under_by'), 'exclude': lambda f: f is None }})
    r"""The total amount the budget was under by across all periods."""  
    