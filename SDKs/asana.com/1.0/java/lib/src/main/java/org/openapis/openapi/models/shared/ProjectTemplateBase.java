/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProjectTemplateBase - A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.
 */
public class ProjectTemplateBase {
    /**
     * Color of the project template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public ProjectTemplateBaseColorEnum color;

    public ProjectTemplateBase withColor(ProjectTemplateBaseColorEnum color) {
        this.color = color;
        return this;
    }
    
    /**
     * Free-form textual information associated with the project template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ProjectTemplateBase withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;

    public ProjectTemplateBase withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * The description of the project template with formatting as HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_description")
    public String htmlDescription;

    public ProjectTemplateBase withHtmlDescription(String htmlDescription) {
        this.htmlDescription = htmlDescription;
        return this;
    }
    
    /**
     * Name of the project template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ProjectTemplateBase withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The current owner of the project template, may be null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public ProjectTemplateBaseOwner owner;

    public ProjectTemplateBase withOwner(ProjectTemplateBaseOwner owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * True if the project template is public to its team.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public")
    public Boolean public_;

    public ProjectTemplateBase withPublic(Boolean public_) {
        this.public_ = public_;
        return this;
    }
    
    /**
     * Array of date variables in this project template. Calendar dates must be provided for these variables when instantiating a project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requested_dates")
    public DateVariableCompact[] requestedDates;

    public ProjectTemplateBase withRequestedDates(DateVariableCompact[] requestedDates) {
        this.requestedDates = requestedDates;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;

    public ProjectTemplateBase withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team")
    public TeamCompact team;

    public ProjectTemplateBase withTeam(TeamCompact team) {
        this.team = team;
        return this;
    }
    
    public ProjectTemplateBase(){}
}
