// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TableGranularityEnum - Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
type TableGranularityEnum string

const (
	TableGranularityEnumTimestampGranularityUnspecified TableGranularityEnum = "TIMESTAMP_GRANULARITY_UNSPECIFIED"
	TableGranularityEnumMillis                          TableGranularityEnum = "MILLIS"
)

func (e TableGranularityEnum) ToPointer() *TableGranularityEnum {
	return &e
}

func (e *TableGranularityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIMESTAMP_GRANULARITY_UNSPECIFIED":
		fallthrough
	case "MILLIS":
		*e = TableGranularityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TableGranularityEnum: %v", v)
	}
}

// TableInput - A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.
type TableInput struct {
	// The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
	ColumnFamilies map[string]ColumnFamily `json:"columnFamilies,omitempty"`
	// Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.
	DeletionProtection *bool `json:"deletionProtection,omitempty"`
	// Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
	Granularity *TableGranularityEnum `json:"granularity,omitempty"`
	// The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`
	Name *string `json:"name,omitempty"`
	// Information about a table restore.
	RestoreInfo *RestoreInfoInput `json:"restoreInfo,omitempty"`
	// Approximate statistics related to a table. These statistics are calculated infrequently, while simultaneously, data in the table can change rapidly. Thus the values reported here (e.g. row count) are very likely out-of date, even the instant they are received in this API. Thus, only treat these values as approximate. IMPORTANT: Everything below is approximate, unless otherwise specified.
	Stats *TableStats `json:"stats,omitempty"`
}

// Table - A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.
type Table struct {
	// Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
	ClusterStates map[string]ClusterState `json:"clusterStates,omitempty"`
	// The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
	ColumnFamilies map[string]ColumnFamily `json:"columnFamilies,omitempty"`
	// Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.
	DeletionProtection *bool `json:"deletionProtection,omitempty"`
	// Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
	Granularity *TableGranularityEnum `json:"granularity,omitempty"`
	// The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`
	Name *string `json:"name,omitempty"`
	// Information about a table restore.
	RestoreInfo *RestoreInfo `json:"restoreInfo,omitempty"`
	// Approximate statistics related to a table. These statistics are calculated infrequently, while simultaneously, data in the table can change rapidly. Thus the values reported here (e.g. row count) are very likely out-of date, even the instant they are received in this API. Thus, only treat these values as approximate. IMPORTANT: Everything below is approximate, unless otherwise specified.
	Stats *TableStats `json:"stats,omitempty"`
}
