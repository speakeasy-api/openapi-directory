"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudidentitytoolkitadminv2spcertificate as shared_googlecloudidentitytoolkitadminv2spcertificate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitAdminV2SpConfig:
    r"""The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider."""
    
    callback_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callbackUri'), 'exclude': lambda f: f is None }})
    r"""Callback URI where responses from IDP are handled."""  
    sp_certificates: Optional[list[shared_googlecloudidentitytoolkitadminv2spcertificate.GoogleCloudIdentitytoolkitAdminV2SpCertificate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spCertificates'), 'exclude': lambda f: f is None }})
    r"""Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow."""  
    sp_entity_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spEntityId'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for all SAML entities."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitAdminV2SpConfigInput:
    r"""The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider."""
    
    callback_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callbackUri'), 'exclude': lambda f: f is None }})
    r"""Callback URI where responses from IDP are handled."""  
    sp_entity_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spEntityId'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for all SAML entities."""  
    