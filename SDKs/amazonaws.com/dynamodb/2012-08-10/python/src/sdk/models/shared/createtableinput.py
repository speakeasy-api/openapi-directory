"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attributedefinition as shared_attributedefinition
from ..shared import billingmode_enum as shared_billingmode_enum
from ..shared import globalsecondaryindex as shared_globalsecondaryindex
from ..shared import keyschemaelement as shared_keyschemaelement
from ..shared import localsecondaryindex as shared_localsecondaryindex
from ..shared import provisionedthroughput as shared_provisionedthroughput
from ..shared import ssespecification as shared_ssespecification
from ..shared import streamspecification as shared_streamspecification
from ..shared import tableclass_enum as shared_tableclass_enum
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTableInput:
    r"""Represents the input of a <code>CreateTable</code> operation."""
    
    attribute_definitions: list[shared_attributedefinition.AttributeDefinition] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeDefinitions') }})  
    key_schema: list[shared_keyschemaelement.KeySchemaElement] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeySchema') }})  
    table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableName') }})  
    billing_mode: Optional[shared_billingmode_enum.BillingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillingMode'), 'exclude': lambda f: f is None }})  
    deletion_protection_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeletionProtectionEnabled'), 'exclude': lambda f: f is None }})  
    global_secondary_indexes: Optional[list[shared_globalsecondaryindex.GlobalSecondaryIndex]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalSecondaryIndexes'), 'exclude': lambda f: f is None }})  
    local_secondary_indexes: Optional[list[shared_localsecondaryindex.LocalSecondaryIndex]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalSecondaryIndexes'), 'exclude': lambda f: f is None }})  
    provisioned_throughput: Optional[shared_provisionedthroughput.ProvisionedThroughput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionedThroughput'), 'exclude': lambda f: f is None }})  
    sse_specification: Optional[shared_ssespecification.SSESpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SSESpecification'), 'exclude': lambda f: f is None }})  
    stream_specification: Optional[shared_streamspecification.StreamSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StreamSpecification'), 'exclude': lambda f: f is None }})  
    table_class: Optional[shared_tableclass_enum.TableClassEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableClass'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    