<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InvoicePaymentRequest - Represents a payment request for an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice). Invoices can specify a maximum
 * 
 * of 13 payment requests, with up to 12 `INSTALLMENT` request types. For more information, 
 * see [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
 * 
 * Adding `INSTALLMENT` payment requests to an invoice requires an 
 * [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InvoicePaymentRequest
{
    /**
     * The payment method for an automatic payment.
     * 
     * 
     * The default value is `NONE`.
     * 
     * @var ?string $automaticPaymentSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('automatic_payment_source')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $automaticPaymentSource = null;
    
    /**
     * The ID of the credit or debit card on file to charge for the payment request. To get the cards on file for a customer,
     * 
     * call [ListCards](https://developer.squareup.com/reference/square_2021-08-18/cards-api/list-cards) and include the `customer_id` of the invoice recipient.
     * 
     * @var ?string $cardId
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardId = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $computedAmountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('computed_amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $computedAmountMoney = null;
    
    /**
     * The due date (in the invoice's time zone) for the payment request, in `YYYY-MM-DD` format. This field
     * 
     * is required to create a payment request.
     * 
     * After this date, the invoice becomes overdue. For example, a payment `due_date` of 2021-03-09 with a `timezone`
     * of America/Los\_Angeles becomes overdue at midnight on March 9 in America/Los\_Angeles (which equals a UTC
     * timestamp of 2021-03-10T08:00:00Z).
     * 
     * @var ?string $dueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('due_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dueDate = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $fixedAmountRequestedMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('fixed_amount_requested_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $fixedAmountRequestedMoney = null;
    
    /**
     * Specifies the amount for the payment request in percentage:
     * 
     * 
     * - When the payment `request_type` is `DEPOSIT`, it is the percentage of the order's total amount.
     * - When the payment `request_type` is `INSTALLMENT`, it is the percentage of the order's total less 
     * the deposit, if requested. The sum of the `percentage_requested` in all installment 
     * payment requests must be equal to 100.
     * 
     * You cannot specify this when the payment `request_type` is `BALANCE` or when the 
     * payment request specifies the `fixed_amount_requested_money` field.
     * 
     * @var ?string $percentageRequested
     */
	#[\JMS\Serializer\Annotation\SerializedName('percentage_requested')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $percentageRequested = null;
    
    /**
     * A list of one or more reminders to send for the payment request.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InvoicePaymentReminder> $reminders
     */
	#[\JMS\Serializer\Annotation\SerializedName('reminders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InvoicePaymentReminder>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reminders = null;
    
    /**
     * Indicates how Square processes the payment request. DEPRECATED at version 2021-01-21. Replaced by the
     * 
     * `Invoice.delivery_method` and `InvoicePaymentRequest.automatic_payment_source` fields.
     * 
     * One of the following is required when creating an invoice:
     * - (Recommended) The `delivery_method` field of the invoice. To configure an automatic payment, the
     * `automatic_payment_source` field of the payment request is also required.
     * - This `request_method` field. Note that `invoice` objects returned in responses do not include `request_method`.
     * 
     * @var ?string $requestMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('request_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestMethod = null;
    
    /**
     * Identifies the payment request type. This type defines how the payment request amount is determined. 
     * 
     * This field is required to create a payment request.
     * 
     * @var ?string $requestType
     */
	#[\JMS\Serializer\Annotation\SerializedName('request_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestType = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $roundingAdjustmentIncludedMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('rounding_adjustment_included_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $roundingAdjustmentIncludedMoney = null;
    
    /**
     * If set to true, the Square-hosted invoice page (the `public_url` field of the invoice) 
     * 
     * provides a place for the customer to pay a tip. 
     * 
     * This field is allowed only on the final payment request  
     * and the payment `request_type` must be `BALANCE` or `INSTALLMENT`.
     * 
     * @var ?bool $tippingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('tipping_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $tippingEnabled = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $totalCompletedAmountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_completed_amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $totalCompletedAmountMoney = null;
    
    /**
     * The Square-generated ID of the payment request in an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice).
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->automaticPaymentSource = null;
		$this->cardId = null;
		$this->computedAmountMoney = null;
		$this->dueDate = null;
		$this->fixedAmountRequestedMoney = null;
		$this->percentageRequested = null;
		$this->reminders = null;
		$this->requestMethod = null;
		$this->requestType = null;
		$this->roundingAdjustmentIncludedMoney = null;
		$this->tippingEnabled = null;
		$this->totalCompletedAmountMoney = null;
		$this->uid = null;
	}
}
