/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TestGetDeviceSetOfUserSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class TestGetDeviceSetOfUserRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The UUID of the device set
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export class TestGetDeviceSetOfUserDeviceSetDeviceConfigurationsImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "thumb" })
  thumb?: string;
}

export class TestGetDeviceSetOfUserDeviceSetDeviceConfigurationsModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "formFactor" })
  formFactor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "manufacturer" })
  manufacturer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  releaseDate?: string;
}

export class TestGetDeviceSetOfUserDeviceSetDeviceConfigurations extends SpeakeasyBase {
  /**
   * The unique id of the device configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => TestGetDeviceSetOfUserDeviceSetDeviceConfigurationsImage)
  image?: TestGetDeviceSetOfUserDeviceSetDeviceConfigurationsImage;

  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  @Type(() => TestGetDeviceSetOfUserDeviceSetDeviceConfigurationsModel)
  model?: TestGetDeviceSetOfUserDeviceSetDeviceConfigurationsModel;

  @SpeakeasyMetadata()
  @Expose({ name: "os" })
  os?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "osName" })
  osName?: string;
}

/**
 * The owner of a device set
 */
export class TestGetDeviceSetOfUserDeviceSetDeviceSetOwner extends SpeakeasyBase {
  /**
   * Display name of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Account ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Name of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Type of account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * The name and devices of the device set
 */
export class TestGetDeviceSetOfUserDeviceSet extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: TestGetDeviceSetOfUserDeviceSetDeviceConfigurations,
  })
  @Expose({ name: "deviceConfigurations" })
  @Type(() => TestGetDeviceSetOfUserDeviceSetDeviceConfigurations)
  deviceConfigurations: TestGetDeviceSetOfUserDeviceSetDeviceConfigurations[];

  /**
   * Identifier of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The number of manufacturers in the device set's device selection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturerCount" })
  manufacturerCount?: number;

  /**
   * Name of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The number of os versions in the device set's device selection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osVersionCount" })
  osVersionCount?: number;

  /**
   * The owner of a device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => TestGetDeviceSetOfUserDeviceSetDeviceSetOwner)
  owner: TestGetDeviceSetOfUserDeviceSetDeviceSetOwner;

  /**
   * Slug of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;
}

export class TestGetDeviceSetOfUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  deviceSet?: TestGetDeviceSetOfUserDeviceSet;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
