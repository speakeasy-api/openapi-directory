/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SlackConfiguration - Provides the configuration information to connect to Slack as your data source.
 */
public class SlackConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrawlBotMessage")
    public Boolean crawlBotMessage;
    public SlackConfiguration withCrawlBotMessage(Boolean crawlBotMessage) {
        this.crawlBotMessage = crawlBotMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExcludeArchived")
    public Boolean excludeArchived;
    public SlackConfiguration withExcludeArchived(Boolean excludeArchived) {
        this.excludeArchived = excludeArchived;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExclusionPatterns")
    public String[] exclusionPatterns;
    public SlackConfiguration withExclusionPatterns(String[] exclusionPatterns) {
        this.exclusionPatterns = exclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldMappings")
    public DataSourceToIndexFieldMapping[] fieldMappings;
    public SlackConfiguration withFieldMappings(DataSourceToIndexFieldMapping[] fieldMappings) {
        this.fieldMappings = fieldMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InclusionPatterns")
    public String[] inclusionPatterns;
    public SlackConfiguration withInclusionPatterns(String[] inclusionPatterns) {
        this.inclusionPatterns = inclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LookBackPeriod")
    public Long lookBackPeriod;
    public SlackConfiguration withLookBackPeriod(Long lookBackPeriod) {
        this.lookBackPeriod = lookBackPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PrivateChannelFilter")
    public String[] privateChannelFilter;
    public SlackConfiguration withPrivateChannelFilter(String[] privateChannelFilter) {
        this.privateChannelFilter = privateChannelFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PublicChannelFilter")
    public String[] publicChannelFilter;
    public SlackConfiguration withPublicChannelFilter(String[] publicChannelFilter) {
        this.publicChannelFilter = publicChannelFilter;
        return this;
    }
    
    @JsonProperty("SecretArn")
    public String secretArn;
    public SlackConfiguration withSecretArn(String secretArn) {
        this.secretArn = secretArn;
        return this;
    }
    
    @JsonProperty("SinceCrawlDate")
    public String sinceCrawlDate;
    public SlackConfiguration withSinceCrawlDate(String sinceCrawlDate) {
        this.sinceCrawlDate = sinceCrawlDate;
        return this;
    }
    
    @JsonProperty("SlackEntityList")
    public SlackEntityEnum[] slackEntityList;
    public SlackConfiguration withSlackEntityList(SlackEntityEnum[] slackEntityList) {
        this.slackEntityList = slackEntityList;
        return this;
    }
    
    @JsonProperty("TeamId")
    public String teamId;
    public SlackConfiguration withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UseChangeLog")
    public Boolean useChangeLog;
    public SlackConfiguration withUseChangeLog(Boolean useChangeLog) {
        this.useChangeLog = useChangeLog;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfiguration")
    public DataSourceVpcConfiguration vpcConfiguration;
    public SlackConfiguration withVpcConfiguration(DataSourceVpcConfiguration vpcConfiguration) {
        this.vpcConfiguration = vpcConfiguration;
        return this;
    }
    
}
