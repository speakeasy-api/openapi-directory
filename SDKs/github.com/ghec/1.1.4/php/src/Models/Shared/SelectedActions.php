<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SelectedActions - Response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SelectedActions
{
    /**
     * Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.
     * 
     * @var ?bool $githubOwnedAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('github_owned_allowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $githubOwnedAllowed = null;
    
    /**
     * Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.
     * 
     * @var ?array<string> $patternsAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('patterns_allowed')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $patternsAllowed = null;
    
    /**
     * Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.
     * 
     * @var ?bool $verifiedAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('verified_allowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $verifiedAllowed = null;
    
	public function __construct()
	{
		$this->githubOwnedAllowed = null;
		$this->patternsAllowed = null;
		$this->verifiedAllowed = null;
	}
}
