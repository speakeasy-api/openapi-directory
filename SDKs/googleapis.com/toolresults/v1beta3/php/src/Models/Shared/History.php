<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * History - A History represents a sorted list of Executions ordered by the start_timestamp_millis field (descending). It can be used to group all the Executions of a continuous build. Note that the ordering only operates on one-dimension. If a repository has multiple branches, it means that multiple histories will need to be used in order to order Executions per branch.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class History
{
    /**
     * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
     * 
     * @var ?string $historyId
     */
	#[\JMS\Serializer\Annotation\SerializedName('historyId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $historyId = null;
    
    /**
     * A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HistoryTestPlatformEnum $testPlatform
     */
	#[\JMS\Serializer\Annotation\SerializedName('testPlatform')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\HistoryTestPlatformEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HistoryTestPlatformEnum $testPlatform = null;
    
	public function __construct()
	{
		$this->displayName = null;
		$this->historyId = null;
		$this->name = null;
		$this->testPlatform = null;
	}
}
