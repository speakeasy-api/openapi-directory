<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServiceRegistry - <p>The details for the service registry.</p> <p>Each service may be associated with one service registry. Multiple service registries for each service are not supported.</p> <p>When you add, update, or remove the service registries configuration, Amazon ECS starts a new deployment. New tasks are registered and deregistered to the updated service registry configuration.</p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServiceRegistry
{
	#[\JMS\Serializer\Annotation\SerializedName('containerName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $containerName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('containerPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $containerPort = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $port = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('registryArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $registryArn = null;
    
	public function __construct()
	{
		$this->containerName = null;
		$this->containerPort = null;
		$this->port = null;
		$this->registryArn = null;
	}
}
