/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryVolumeGroupRequest {
    /**
     * The ID of the SLA Domain that controls the protection of the Volume Group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public QueryVolumeGroupRequest withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Specifies whether the results should contain only Volume Groups that are accessible on the Rubrik cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_relic")
    public Boolean isRelic;

    public QueryVolumeGroupRequest withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryVolumeGroupRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The name of the Volume Group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QueryVolumeGroupRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Ignore these many matches in the beginning.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryVolumeGroupRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The ID of the Rubrik cluster that provides primary protection for the Volume Group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QueryVolumeGroupRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * The type of SLA assigned to the Volume Group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sla_assignment")
    public QueryVolumeGroupSLAAssignmentEnum slaAssignment;

    public QueryVolumeGroupRequest withSlaAssignment(QueryVolumeGroupSLAAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * The Volume Group attribute to use in storing the responses. Valid attributes are `name` and `effectiveSlaDomainName`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryVolumeGroupSortByEnum sortBy;

    public QueryVolumeGroupRequest withSortBy(QueryVolumeGroupSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * The order to sort the responses. Valid choices are asc (ascending) or desc (descending).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryVolumeGroupSortOrderEnum sortOrder;

    public QueryVolumeGroupRequest withSortOrder(QueryVolumeGroupSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryVolumeGroupRequest(){}
}
