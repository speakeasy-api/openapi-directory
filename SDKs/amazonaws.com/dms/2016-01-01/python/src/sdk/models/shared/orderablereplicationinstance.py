"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import releasestatusvalues_enum as shared_releasestatusvalues_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderableReplicationInstance:
    r"""In response to the <code>DescribeOrderableReplicationInstances</code> operation, this object describes an available replication instance. This description includes the replication instance's type, engine version, and allocated storage."""
    
    availability_zones: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AvailabilityZones'), 'exclude': lambda f: f is None }})  
    default_allocated_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultAllocatedStorage'), 'exclude': lambda f: f is None }})  
    engine_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EngineVersion'), 'exclude': lambda f: f is None }})  
    included_allocated_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncludedAllocatedStorage'), 'exclude': lambda f: f is None }})  
    max_allocated_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxAllocatedStorage'), 'exclude': lambda f: f is None }})  
    min_allocated_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinAllocatedStorage'), 'exclude': lambda f: f is None }})  
    release_status: Optional[shared_releasestatusvalues_enum.ReleaseStatusValuesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReleaseStatus'), 'exclude': lambda f: f is None }})  
    replication_instance_class: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicationInstanceClass'), 'exclude': lambda f: f is None }})  
    storage_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageType'), 'exclude': lambda f: f is None }})  
    