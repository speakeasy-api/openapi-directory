/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateExtensionConstraints } from "./certificateextensionconstraints";
import { CertificateIdentityConstraints } from "./certificateidentityconstraints";
import { X509Parameters } from "./x509parameters";
import { Expose, Type } from "class-transformer";

/**
 * A CertificateTemplate refers to a managed template for certificate issuance.
 */
export class CertificateTemplateInput extends SpeakeasyBase {
  /**
   * Optional. A human-readable description of scenarios this template is intended for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Describes constraints on a Certificate's Subject and SubjectAltNames.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identityConstraints" })
  @Type(() => CertificateIdentityConstraints)
  identityConstraints?: CertificateIdentityConstraints;

  /**
   * Optional. Labels with user-defined metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Describes a set of X.509 extensions that may be part of some certificate issuance controls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passthroughExtensions" })
  @Type(() => CertificateExtensionConstraints)
  passthroughExtensions?: CertificateExtensionConstraints;

  /**
   * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predefinedValues" })
  @Type(() => X509Parameters)
  predefinedValues?: X509Parameters;
}

/**
 * A CertificateTemplate refers to a managed template for certificate issuance.
 */
export class CertificateTemplate extends SpeakeasyBase {
  /**
   * Output only. The time at which this CertificateTemplate was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. A human-readable description of scenarios this template is intended for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Describes constraints on a Certificate's Subject and SubjectAltNames.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identityConstraints" })
  @Type(() => CertificateIdentityConstraints)
  identityConstraints?: CertificateIdentityConstraints;

  /**
   * Optional. Labels with user-defined metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. The resource name for this CertificateTemplate in the format `projects/* /locations/* /certificateTemplates/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Describes a set of X.509 extensions that may be part of some certificate issuance controls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passthroughExtensions" })
  @Type(() => CertificateExtensionConstraints)
  passthroughExtensions?: CertificateExtensionConstraints;

  /**
   * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predefinedValues" })
  @Type(() => X509Parameters)
  predefinedValues?: X509Parameters;

  /**
   * Output only. The time at which this CertificateTemplate was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
