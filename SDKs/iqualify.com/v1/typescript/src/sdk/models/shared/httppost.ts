/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentResponse } from "./documentresponse";
import { Moderation } from "./moderation";
import { Expose, Transform, Type } from "class-transformer";

export class HttpPost extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DocumentResponse })
  @Expose({ name: "attachments" })
  @Type(() => DocumentResponse)
  attachments?: DocumentResponse[];

  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isFacilitatorPost" })
  isFacilitatorPost?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "moderation" })
  @Type(() => Moderation)
  moderation?: Moderation;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
