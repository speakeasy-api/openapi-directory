// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ParquetCompressionTypeEnum string

const (
	ParquetCompressionTypeEnumSnappy       ParquetCompressionTypeEnum = "snappy"
	ParquetCompressionTypeEnumLzo          ParquetCompressionTypeEnum = "lzo"
	ParquetCompressionTypeEnumGzip         ParquetCompressionTypeEnum = "gzip"
	ParquetCompressionTypeEnumUncompressed ParquetCompressionTypeEnum = "uncompressed"
	ParquetCompressionTypeEnumNone         ParquetCompressionTypeEnum = "none"
)

func (e ParquetCompressionTypeEnum) ToPointer() *ParquetCompressionTypeEnum {
	return &e
}

func (e *ParquetCompressionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "snappy":
		fallthrough
	case "lzo":
		fallthrough
	case "gzip":
		fallthrough
	case "uncompressed":
		fallthrough
	case "none":
		*e = ParquetCompressionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ParquetCompressionTypeEnum: %v", v)
	}
}
