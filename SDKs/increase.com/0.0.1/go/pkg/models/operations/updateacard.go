// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateACardRequest struct {
	CardID                string                       `pathParam:"style=simple,explode=false,name=card_id"`
	UpdateACardParameters shared.UpdateACardParameters `request:"mediaType=application/json"`
}

type UpdateACardDefaultApplicationJSON13StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine UpdateACardDefaultApplicationJSON13StatusEnum = 429
)

func (e UpdateACardDefaultApplicationJSON13StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = UpdateACardDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON13TypeEnum string

const (
	UpdateACardDefaultApplicationJSON13TypeEnumRateLimitedError UpdateACardDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e UpdateACardDefaultApplicationJSON13TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = UpdateACardDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON13 struct {
	Detail     string                                        `json:"detail"`
	RetryAfter *int64                                        `json:"retry_after,omitempty"`
	Status     UpdateACardDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                        `json:"title"`
	Type       UpdateACardDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON12StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON12StatusEnumFourHundredAndThree UpdateACardDefaultApplicationJSON12StatusEnum = 403
)

func (e UpdateACardDefaultApplicationJSON12StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = UpdateACardDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON12TypeEnum string

const (
	UpdateACardDefaultApplicationJSON12TypeEnumPrivateFeatureError UpdateACardDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e UpdateACardDefaultApplicationJSON12TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = UpdateACardDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON12 struct {
	Detail string                                        `json:"detail"`
	Status UpdateACardDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   UpdateACardDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON11StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON11StatusEnumFourHundredAndFour UpdateACardDefaultApplicationJSON11StatusEnum = 404
)

func (e UpdateACardDefaultApplicationJSON11StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = UpdateACardDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON11TypeEnum string

const (
	UpdateACardDefaultApplicationJSON11TypeEnumObjectNotFoundError UpdateACardDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e UpdateACardDefaultApplicationJSON11TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = UpdateACardDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON11 struct {
	Detail string                                        `json:"detail"`
	Status UpdateACardDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   UpdateACardDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON10StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON10StatusEnumFourHundred UpdateACardDefaultApplicationJSON10StatusEnum = 400
)

func (e UpdateACardDefaultApplicationJSON10StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = UpdateACardDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON10TypeEnum string

const (
	UpdateACardDefaultApplicationJSON10TypeEnumMalformedRequestError UpdateACardDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e UpdateACardDefaultApplicationJSON10TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = UpdateACardDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON10 struct {
	Detail string                                        `json:"detail"`
	Status UpdateACardDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   UpdateACardDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON9StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON9StatusEnumFourHundred UpdateACardDefaultApplicationJSON9StatusEnum = 400
)

func (e UpdateACardDefaultApplicationJSON9StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = UpdateACardDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON9TypeEnum string

const (
	UpdateACardDefaultApplicationJSON9TypeEnumInvalidParametersError UpdateACardDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e UpdateACardDefaultApplicationJSON9TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = UpdateACardDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                     `json:"errors"`
	Status UpdateACardDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON8StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON8StatusEnumFourHundredAndNine UpdateACardDefaultApplicationJSON8StatusEnum = 409
)

func (e UpdateACardDefaultApplicationJSON8StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = UpdateACardDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON8TypeEnum string

const (
	UpdateACardDefaultApplicationJSON8TypeEnumInvalidOperationError UpdateACardDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e UpdateACardDefaultApplicationJSON8TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = UpdateACardDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON8 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON7StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON7StatusEnumFourHundredAndOne UpdateACardDefaultApplicationJSON7StatusEnum = 401
)

func (e UpdateACardDefaultApplicationJSON7StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = UpdateACardDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON7TypeEnum string

const (
	UpdateACardDefaultApplicationJSON7TypeEnumInvalidAPIKeyError UpdateACardDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e UpdateACardDefaultApplicationJSON7TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = UpdateACardDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON7 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON6StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON6StatusEnumFiveHundred UpdateACardDefaultApplicationJSON6StatusEnum = 500
)

func (e UpdateACardDefaultApplicationJSON6StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = UpdateACardDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON6TypeEnum string

const (
	UpdateACardDefaultApplicationJSON6TypeEnumInternalServerError UpdateACardDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e UpdateACardDefaultApplicationJSON6TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = UpdateACardDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON6 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON5StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON5StatusEnumFourHundredAndThree UpdateACardDefaultApplicationJSON5StatusEnum = 403
)

func (e UpdateACardDefaultApplicationJSON5StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = UpdateACardDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON5TypeEnum string

const (
	UpdateACardDefaultApplicationJSON5TypeEnumInsufficientPermissionsError UpdateACardDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e UpdateACardDefaultApplicationJSON5TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = UpdateACardDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON5 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON4StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo UpdateACardDefaultApplicationJSON4StatusEnum = 422
)

func (e UpdateACardDefaultApplicationJSON4StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = UpdateACardDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON4TypeEnum string

const (
	UpdateACardDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError UpdateACardDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e UpdateACardDefaultApplicationJSON4TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = UpdateACardDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON4 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON3StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON3StatusEnumFourHundredAndNine UpdateACardDefaultApplicationJSON3StatusEnum = 409
)

func (e UpdateACardDefaultApplicationJSON3StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = UpdateACardDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON3TypeEnum string

const (
	UpdateACardDefaultApplicationJSON3TypeEnumIdempotencyConflictError UpdateACardDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e UpdateACardDefaultApplicationJSON3TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = UpdateACardDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON3 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON2StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON2StatusEnumFourHundredAndThree UpdateACardDefaultApplicationJSON2StatusEnum = 403
)

func (e UpdateACardDefaultApplicationJSON2StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = UpdateACardDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON2TypeEnum string

const (
	UpdateACardDefaultApplicationJSON2TypeEnumEnvironmentMismatchError UpdateACardDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e UpdateACardDefaultApplicationJSON2TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = UpdateACardDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON2 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type UpdateACardDefaultApplicationJSON1StatusEnum int64

const (
	UpdateACardDefaultApplicationJSON1StatusEnumFourHundredAndFour UpdateACardDefaultApplicationJSON1StatusEnum = 404
)

func (e UpdateACardDefaultApplicationJSON1StatusEnum) ToPointer() *UpdateACardDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = UpdateACardDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON1TypeEnum string

const (
	UpdateACardDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError UpdateACardDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e UpdateACardDefaultApplicationJSON1TypeEnum) ToPointer() *UpdateACardDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *UpdateACardDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = UpdateACardDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type UpdateACardDefaultApplicationJSON1 struct {
	Detail string                                       `json:"detail"`
	Status UpdateACardDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   UpdateACardDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type UpdateACardResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card
	Card *shared.Card
	// Error
	Error interface{}
}
