<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - OPA provides policy-based control for cloud native environments. The following *endpoints* (such as `PUT /v1/policies`) provide reference documentation for the OPA REST API.
 * 
 * 
 * ### API specification viewing options
 * 
 * - **[View the specification in *Redoc* (default)](index.html)**
 * - **[View the specification in *Swagger UI*](swagger-ui.html)**
 * https://www.openpolicyagent.org/docs/latest/ - OPA documentation
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 * @see https://www.openpolicyagent.org/docs/latest/
 */
class SDK
{
	public const SERVERS = [
		'http://openpolicy.local',
	];
  	
    /**
     * Posting partial queries to OPA
     * 
     * @var CompileAPI $$compileAPI
     */
	public CompileAPI $compileAPI;
	
	public ConfigAPI $configAPI;
	
    /**
     * Exposes endpoints for reading and writing documents in OPA. For an explanation of the different types of documents, see [the OPA document model](https://www.openpolicyagent.org/docs/latest/philosophy/#the-opa-document-model)
     * 
     * @var DataAPI $$dataAPI
     */
	public DataAPI $dataAPI;
	
    /**
     * Executes a simple built-in policy query to verify that the server is operational
     * 
     * @var HealthAPI $$healthAPI
     */
	public HealthAPI $healthAPI;
	
    /**
     * Allows you to add, remove and modify policy modules. *Policy module identifiers are only used for management purposes. They are not used outside the Policy API.*
     * 
     * @var PolicyAPI $$policyAPI
     */
	public PolicyAPI $policyAPI;
	
    /**
     * Posting queries to OPA
     * 
     * @var QueryAPI $$queryAPI
     */
	public QueryAPI $queryAPI;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->compileAPI = new CompileAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->configAPI = new ConfigAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->dataAPI = new DataAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->healthAPI = new HealthAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->policyAPI = new PolicyAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->queryAPI = new QueryAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}