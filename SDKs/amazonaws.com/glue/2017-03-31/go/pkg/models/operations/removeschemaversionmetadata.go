// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RemoveSchemaVersionMetadataXAmzTargetEnum
type RemoveSchemaVersionMetadataXAmzTargetEnum string

const (
	RemoveSchemaVersionMetadataXAmzTargetEnumAwsGlueRemoveSchemaVersionMetadata RemoveSchemaVersionMetadataXAmzTargetEnum = "AWSGlue.RemoveSchemaVersionMetadata"
)

func (e RemoveSchemaVersionMetadataXAmzTargetEnum) ToPointer() *RemoveSchemaVersionMetadataXAmzTargetEnum {
	return &e
}

func (e *RemoveSchemaVersionMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.RemoveSchemaVersionMetadata":
		*e = RemoveSchemaVersionMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveSchemaVersionMetadataXAmzTargetEnum: %v", v)
	}
}

type RemoveSchemaVersionMetadataRequest struct {
	RemoveSchemaVersionMetadataInput shared.RemoveSchemaVersionMetadataInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       RemoveSchemaVersionMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RemoveSchemaVersionMetadataResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	RemoveSchemaVersionMetadataResponse *shared.RemoveSchemaVersionMetadataResponse
	StatusCode                          int
	RawResponse                         *http.Response
}
