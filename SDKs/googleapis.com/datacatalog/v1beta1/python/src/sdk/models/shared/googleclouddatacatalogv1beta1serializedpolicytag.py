"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1beta1SerializedPolicyTag:
    r"""Message representing one policy tag when exported as a nested proto."""
    
    child_policy_tags: Optional[list[GoogleCloudDatacatalogV1beta1SerializedPolicyTag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('childPolicyTags'), 'exclude': lambda f: f is None }})
    r"""Children of the policy tag if any."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8."""  
    policy_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyTag'), 'exclude': lambda f: f is None }})
    r"""Resource name of the policy tag. This field will be ignored when calling ImportTaxonomies."""  
    