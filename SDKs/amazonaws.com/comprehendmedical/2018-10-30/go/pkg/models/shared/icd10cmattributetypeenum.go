// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Icd10CMAttributeTypeEnum string

const (
	Icd10CMAttributeTypeEnumAcuity          Icd10CMAttributeTypeEnum = "ACUITY"
	Icd10CMAttributeTypeEnumDirection       Icd10CMAttributeTypeEnum = "DIRECTION"
	Icd10CMAttributeTypeEnumSystemOrganSite Icd10CMAttributeTypeEnum = "SYSTEM_ORGAN_SITE"
	Icd10CMAttributeTypeEnumQuality         Icd10CMAttributeTypeEnum = "QUALITY"
	Icd10CMAttributeTypeEnumQuantity        Icd10CMAttributeTypeEnum = "QUANTITY"
	Icd10CMAttributeTypeEnumTimeToDxName    Icd10CMAttributeTypeEnum = "TIME_TO_DX_NAME"
	Icd10CMAttributeTypeEnumTimeExpression  Icd10CMAttributeTypeEnum = "TIME_EXPRESSION"
)

func (e Icd10CMAttributeTypeEnum) ToPointer() *Icd10CMAttributeTypeEnum {
	return &e
}

func (e *Icd10CMAttributeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACUITY":
		fallthrough
	case "DIRECTION":
		fallthrough
	case "SYSTEM_ORGAN_SITE":
		fallthrough
	case "QUALITY":
		fallthrough
	case "QUANTITY":
		fallthrough
	case "TIME_TO_DX_NAME":
		fallthrough
	case "TIME_EXPRESSION":
		*e = Icd10CMAttributeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Icd10CMAttributeTypeEnum: %v", v)
	}
}
