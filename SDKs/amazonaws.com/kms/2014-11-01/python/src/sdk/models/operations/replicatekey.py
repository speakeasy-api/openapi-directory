"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import replicatekeyrequest as shared_replicatekeyrequest
from ..shared import replicatekeyresponse as shared_replicatekeyresponse
from enum import Enum
from typing import Any, Optional

class ReplicateKeyXAmzTargetEnum(str, Enum):
    TRENT_SERVICE_REPLICATE_KEY = 'TrentService.ReplicateKey'


@dataclasses.dataclass
class ReplicateKeyRequest:
    
    replicate_key_request: shared_replicatekeyrequest.ReplicateKeyRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: ReplicateKeyXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class ReplicateKeyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    already_exists_exception: Optional[Any] = dataclasses.field(default=None)
    r"""AlreadyExistsException"""  
    disabled_exception: Optional[Any] = dataclasses.field(default=None)
    r"""DisabledException"""  
    invalid_arn_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidArnException"""  
    kms_internal_exception: Optional[Any] = dataclasses.field(default=None)
    r"""KMSInternalException"""  
    kms_invalid_state_exception: Optional[Any] = dataclasses.field(default=None)
    r"""KMSInvalidStateException"""  
    limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""LimitExceededException"""  
    malformed_policy_document_exception: Optional[Any] = dataclasses.field(default=None)
    r"""MalformedPolicyDocumentException"""  
    not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""NotFoundException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    replicate_key_response: Optional[shared_replicatekeyresponse.ReplicateKeyResponse] = dataclasses.field(default=None)
    r"""Success"""  
    tag_exception: Optional[Any] = dataclasses.field(default=None)
    r"""TagException"""  
    unsupported_operation_exception: Optional[Any] = dataclasses.field(default=None)
    r"""UnsupportedOperationException"""  
    