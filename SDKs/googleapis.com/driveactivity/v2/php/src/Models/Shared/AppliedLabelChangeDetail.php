<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AppliedLabelChangeDetail - A change made to a Label on the Target.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AppliedLabelChangeDetail
{
    /**
     * Field Changes. Only present if `types` contains `LABEL_FIELD_VALUE_CHANGED`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FieldValueChange> $fieldChanges
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldChanges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FieldValueChange>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fieldChanges = null;
    
    /**
     * The Label name representing the Label that changed. This name always contains the revision of the Label that was used when this Action occurred. The format is `labels/id@revision`.
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * The human-readable title of the label that changed.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * The types of changes made to the Label on the Target.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AppliedLabelChangeDetailTypesEnum> $types
     */
	#[\JMS\Serializer\Annotation\SerializedName('types')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\AppliedLabelChangeDetailTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $types = null;
    
	public function __construct()
	{
		$this->fieldChanges = null;
		$this->label = null;
		$this->title = null;
		$this->types = null;
	}
}
