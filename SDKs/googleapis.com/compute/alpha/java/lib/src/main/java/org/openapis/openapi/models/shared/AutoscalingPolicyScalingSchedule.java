/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AutoscalingPolicyScalingSchedule - Scaling based on user-defined schedule. The message describes a single scaling schedule. A scaling schedule changes the minimum number of VM instances an autoscaler can recommend, which can trigger scaling out.
 */
public class AutoscalingPolicyScalingSchedule {
    /**
     * A description of a scaling schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public AutoscalingPolicyScalingSchedule withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A boolean value that specifies whether a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect. This field is optional, and its value is false by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;
    public AutoscalingPolicyScalingSchedule withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * The duration of time intervals, in seconds, for which this scaling schedule is to run. The minimum allowed value is 300. This field is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("durationSec")
    public Integer durationSec;
    public AutoscalingPolicyScalingSchedule withDurationSec(Integer durationSec) {
        this.durationSec = durationSec;
        return this;
    }
    
    /**
     * The minimum number of VM instances that the autoscaler will recommend in time intervals starting according to schedule. This field is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minRequiredReplicas")
    public Integer minRequiredReplicas;
    public AutoscalingPolicyScalingSchedule withMinRequiredReplicas(Integer minRequiredReplicas) {
        this.minRequiredReplicas = minRequiredReplicas;
        return this;
    }
    
    /**
     * The start timestamps of time intervals when this scaling schedule is to provide a scaling signal. This field uses the extended cron format (with an optional year field). The expression can describe a single timestamp if the optional year is set, in which case the scaling schedule runs once. The schedule is interpreted with respect to time_zone. This field is required. Note: These timestamps only describe when autoscaler starts providing the scaling signal. The VMs need additional time to become serving.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public String schedule;
    public AutoscalingPolicyScalingSchedule withSchedule(String schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * The time zone to use when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database. This field is assigned a default value of \u201cUTC\u201d if left empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;
    public AutoscalingPolicyScalingSchedule withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
}
