// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CallFeedbackEnumIssuesEnum string

const (
	CallFeedbackEnumIssuesEnumAudioLatency      CallFeedbackEnumIssuesEnum = "audio-latency"
	CallFeedbackEnumIssuesEnumDigitsNotCaptured CallFeedbackEnumIssuesEnum = "digits-not-captured"
	CallFeedbackEnumIssuesEnumDroppedCall       CallFeedbackEnumIssuesEnum = "dropped-call"
	CallFeedbackEnumIssuesEnumImperfectAudio    CallFeedbackEnumIssuesEnum = "imperfect-audio"
	CallFeedbackEnumIssuesEnumIncorrectCallerID CallFeedbackEnumIssuesEnum = "incorrect-caller-id"
	CallFeedbackEnumIssuesEnumOneWayAudio       CallFeedbackEnumIssuesEnum = "one-way-audio"
	CallFeedbackEnumIssuesEnumPostDialDelay     CallFeedbackEnumIssuesEnum = "post-dial-delay"
	CallFeedbackEnumIssuesEnumUnsolicitedCall   CallFeedbackEnumIssuesEnum = "unsolicited-call"
)

func (e *CallFeedbackEnumIssuesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "audio-latency":
		fallthrough
	case "digits-not-captured":
		fallthrough
	case "dropped-call":
		fallthrough
	case "imperfect-audio":
		fallthrough
	case "incorrect-caller-id":
		fallthrough
	case "one-way-audio":
		fallthrough
	case "post-dial-delay":
		fallthrough
	case "unsolicited-call":
		*e = CallFeedbackEnumIssuesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CallFeedbackEnumIssuesEnum: %s", s)
	}
}
