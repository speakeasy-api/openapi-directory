// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PipelineExecutionStartConditionEnum string

const (
	PipelineExecutionStartConditionEnumExpressionMatchOnly                          PipelineExecutionStartConditionEnum = "EXPRESSION_MATCH_ONLY"
	PipelineExecutionStartConditionEnumExpressionMatchAndDependencyUpdatesAvailable PipelineExecutionStartConditionEnum = "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE"
)

func (e PipelineExecutionStartConditionEnum) ToPointer() *PipelineExecutionStartConditionEnum {
	return &e
}

func (e *PipelineExecutionStartConditionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXPRESSION_MATCH_ONLY":
		fallthrough
	case "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE":
		*e = PipelineExecutionStartConditionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PipelineExecutionStartConditionEnum: %v", v)
	}
}
