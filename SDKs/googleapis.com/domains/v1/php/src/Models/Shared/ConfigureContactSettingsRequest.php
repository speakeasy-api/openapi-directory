<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConfigureContactSettingsRequest - Request for the `ConfigureContactSettings` method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConfigureContactSettingsRequest
{
    /**
     * The list of contact notices that the caller acknowledges. The notices needed here depend on the values specified in `contact_settings`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConfigureContactSettingsRequestContactNoticesEnum> $contactNotices
     */
	#[\JMS\Serializer\Annotation\SerializedName('contactNotices')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ConfigureContactSettingsRequestContactNoticesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $contactNotices = null;
    
    /**
     * Defines the contact information associated with a `Registration`. [ICANN](https://icann.org/) requires all domain names to have associated contact information. The `registrant_contact` is considered the domain's legal owner, and often the other contacts are identical.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ContactSettings $contactSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('contactSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ContactSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContactSettings $contactSettings = null;
    
    /**
     * Required. The field mask describing which fields to update as a comma-separated list. For example, if only the registrant contact is being updated, the `update_mask` is `"registrant_contact"`.
     * 
     * @var ?string $updateMask
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateMask')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateMask = null;
    
    /**
     * Validate the request without actually updating the contact settings.
     * 
     * @var ?bool $validateOnly
     */
	#[\JMS\Serializer\Annotation\SerializedName('validateOnly')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $validateOnly = null;
    
	public function __construct()
	{
		$this->contactNotices = null;
		$this->contactSettings = null;
		$this->updateMask = null;
		$this->validateOnly = null;
	}
}
