/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionEnum } from "./actionenum";
import { FilterTypeEnum } from "./filtertypeenum";
import { InterfaceDescriptor } from "./interfacedescriptor";
import { TrafficFilter } from "./trafficfilter";

export class TrafficRuleDescriptor extends SpeakeasyBase {
  /**
   * 'Identifies the action of the MEC host data plane, when a packet matches the trafficFilter.'
   */
  @SpeakeasyMetadata()
  action: ActionEnum;

  @SpeakeasyMetadata({ elemType: InterfaceDescriptor })
  dstInterface?: InterfaceDescriptor[];

  /**
   * Definition of filter type: per FLOW or PACKET
   */
  @SpeakeasyMetadata()
  filterType: FilterTypeEnum;

  /**
   * Priority of this traffic rule. If traffic rule conflicts, the one with higher priority take precedence.
   */
  @SpeakeasyMetadata()
  priority: number;

  /**
   * The filter used to identify specific flow/packets that need to be handled by the MEC host.
   */
  @SpeakeasyMetadata({ elemType: TrafficFilter })
  trafficFilter: TrafficFilter[];

  /**
   * Identifies the traffic rule.
   */
  @SpeakeasyMetadata()
  trafficRuleId: string;
}
