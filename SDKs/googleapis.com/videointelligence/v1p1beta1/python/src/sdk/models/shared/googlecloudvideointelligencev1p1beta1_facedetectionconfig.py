"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVideointelligenceV1p1beta1FaceDetectionConfig:
    r"""Config for FACE_DETECTION."""
    
    include_attributes: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeAttributes'), 'exclude': lambda f: f is None }})
    r"""Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false."""  
    include_bounding_boxes: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeBoundingBoxes'), 'exclude': lambda f: f is None }})
    r"""Whether bounding boxes are included in the face annotation output."""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""Model to use for face detection. Supported values: \\"builtin/stable\\" (the default if unset) and \\"builtin/latest\\"."""  
    