/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateDeviceSwitchRoutingInterfaceRequestBody {
    /**
     * The next hop for any traffic that isn't going to a directly connected subnet or over a static route.         This IP address must exist in a subnet with a routed interface. Required if this is the first IPv4 interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultGateway")
    public String defaultGateway;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withDefaultGateway(String defaultGateway) {
        this.defaultGateway = defaultGateway;
        return this;
    }
    
    /**
     * The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same         as the switch's management IP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interfaceIp")
    public String interfaceIp;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withInterfaceIp(String interfaceIp) {
        this.interfaceIp = interfaceIp;
        return this;
    }
    
    /**
     * The IPv6 settings of the interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6")
    public CreateDeviceSwitchRoutingInterfaceRequestBodyIpv6 ipv6;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withIpv6(CreateDeviceSwitchRoutingInterfaceRequestBodyIpv6 ipv6) {
        this.ipv6 = ipv6;
        return this;
    }
    
    /**
     * Enable multicast support if, multicast routing between VLANs is required. Options are:         'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multicastRouting")
    public CreateDeviceSwitchRoutingInterfaceRequestBodyMulticastRoutingEnum multicastRouting;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withMulticastRouting(CreateDeviceSwitchRoutingInterfaceRequestBodyMulticastRoutingEnum multicastRouting) {
        this.multicastRouting = multicastRouting;
        return this;
    }
    
    /**
     * A friendly name or description for the interface or VLAN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The OSPF routing settings of the interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ospfSettings")
    public CreateDeviceSwitchRoutingInterfaceRequestBodyOspfSettings ospfSettings;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withOspfSettings(CreateDeviceSwitchRoutingInterfaceRequestBodyOspfSettings ospfSettings) {
        this.ospfSettings = ospfSettings;
        return this;
    }
    
    /**
     * The OSPFv3 routing settings of the interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ospfV3")
    public CreateDeviceSwitchRoutingInterfaceRequestBodyOspfV3 ospfV3;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withOspfV3(CreateDeviceSwitchRoutingInterfaceRequestBodyOspfV3 ospfV3) {
        this.ospfV3 = ospfV3;
        return this;
    }
    
    /**
     * The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnet")
    public String subnet;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }
    
    /**
     * The VLAN this routed interface is on. VLAN must be between 1 and 4094.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlanId")
    public Long vlanId;

    public CreateDeviceSwitchRoutingInterfaceRequestBody withVlanId(Long vlanId) {
        this.vlanId = vlanId;
        return this;
    }
    
    public CreateDeviceSwitchRoutingInterfaceRequestBody(){}
}
