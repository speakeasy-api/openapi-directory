// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ParticipantConversationEnumStateEnum string

const (
	ParticipantConversationEnumStateEnumInactive ParticipantConversationEnumStateEnum = "inactive"
	ParticipantConversationEnumStateEnumActive   ParticipantConversationEnumStateEnum = "active"
	ParticipantConversationEnumStateEnumClosed   ParticipantConversationEnumStateEnum = "closed"
)

func (e ParticipantConversationEnumStateEnum) ToPointer() *ParticipantConversationEnumStateEnum {
	return &e
}

func (e *ParticipantConversationEnumStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inactive":
		fallthrough
	case "active":
		fallthrough
	case "closed":
		*e = ParticipantConversationEnumStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ParticipantConversationEnumStateEnum: %v", v)
	}
}
