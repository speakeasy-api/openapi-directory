// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SasPortalDeviceStateEnum - Output only. Device state.
type SasPortalDeviceStateEnum string

const (
	SasPortalDeviceStateEnumDeviceStateUnspecified SasPortalDeviceStateEnum = "DEVICE_STATE_UNSPECIFIED"
	SasPortalDeviceStateEnumReserved               SasPortalDeviceStateEnum = "RESERVED"
	SasPortalDeviceStateEnumRegistered             SasPortalDeviceStateEnum = "REGISTERED"
	SasPortalDeviceStateEnumDeregistered           SasPortalDeviceStateEnum = "DEREGISTERED"
)

func (e *SasPortalDeviceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEVICE_STATE_UNSPECIFIED":
		fallthrough
	case "RESERVED":
		fallthrough
	case "REGISTERED":
		fallthrough
	case "DEREGISTERED":
		*e = SasPortalDeviceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SasPortalDeviceStateEnum: %s", s)
	}
}

// SasPortalDevice - Successful response
type SasPortalDevice struct {
	// Information about the device configuration.
	ActiveConfig *SasPortalDeviceConfig `json:"activeConfig,omitempty"`
	// Output only. Current channels with scores.
	CurrentChannels []SasPortalChannelWithScore `json:"currentChannels,omitempty"`
	// Device data overridable by both SAS Portal and registration requests.
	DeviceMetadata *SasPortalDeviceMetadata `json:"deviceMetadata,omitempty"`
	// Device display name.
	DisplayName *string `json:"displayName,omitempty"`
	// The FCC identifier of the device.
	FccID *string `json:"fccId,omitempty"`
	// Only ranges that are within the allowlists are available for new grants.
	GrantRangeAllowlists []SasPortalFrequencyRange `json:"grantRangeAllowlists,omitempty"`
	// Output only. Grants held by the device.
	Grants []SasPortalDeviceGrant `json:"grants,omitempty"`
	// Output only. The resource path name.
	Name *string `json:"name,omitempty"`
	// Information about the device configuration.
	PreloadedConfig *SasPortalDeviceConfig `json:"preloadedConfig,omitempty"`
	// A serial number assigned to the device by the device manufacturer.
	SerialNumber *string `json:"serialNumber,omitempty"`
	// Output only. Device state.
	State *SasPortalDeviceStateEnum `json:"state,omitempty"`
}

type SasPortalDeviceInput struct {
	// Information about the device configuration.
	ActiveConfig *SasPortalDeviceConfig `json:"activeConfig,omitempty"`
	// Device data overridable by both SAS Portal and registration requests.
	DeviceMetadata *SasPortalDeviceMetadataInput `json:"deviceMetadata,omitempty"`
	// Device display name.
	DisplayName *string `json:"displayName,omitempty"`
	// The FCC identifier of the device.
	FccID *string `json:"fccId,omitempty"`
	// Only ranges that are within the allowlists are available for new grants.
	GrantRangeAllowlists []SasPortalFrequencyRange `json:"grantRangeAllowlists,omitempty"`
	// Output only. Grants held by the device.
	Grants []SasPortalDeviceGrant `json:"grants,omitempty"`
	// Output only. The resource path name.
	Name *string `json:"name,omitempty"`
	// Information about the device configuration.
	PreloadedConfig *SasPortalDeviceConfig `json:"preloadedConfig,omitempty"`
	// A serial number assigned to the device by the device manufacturer.
	SerialNumber *string `json:"serialNumber,omitempty"`
	// Output only. Device state.
	State *SasPortalDeviceStateEnum `json:"state,omitempty"`
}
