"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fileuploadpartentity as shared_fileuploadpartentity
from typing import Optional


@dataclasses.dataclass
class FileActionBeginUploadRequestBody:
    
    mkdir_parents: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'mkdir_parents' }})
    r"""Create parent directories if they do not exist?"""  
    part: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'part' }})
    r"""Part if uploading a part."""  
    parts: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'parts' }})
    r"""How many parts to fetch?"""  
    ref: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'ref' }})  
    restart: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'restart' }})
    r"""File byte offset to restart from."""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'size' }})
    r"""Total bytes of file being uploaded (include bytes being retained if appending/restarting)."""  
    with_rename: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'with_rename' }})
    r"""Allow file rename instead of overwrite?"""  
    

@dataclasses.dataclass
class FileActionBeginUploadRequest:
    
    path: str = dataclasses.field(metadata={'path_param': { 'field_name': 'path', 'style': 'simple', 'explode': False }})
    r"""Path to operate on."""  
    request_body: Optional[FileActionBeginUploadRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class FileActionBeginUploadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    file_upload_part_entities: Optional[list[shared_fileuploadpartentity.FileUploadPartEntity]] = dataclasses.field(default=None)
    r"""The FileActions object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    