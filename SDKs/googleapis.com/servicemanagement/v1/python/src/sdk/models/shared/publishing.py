"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clientlibrarysettings as shared_clientlibrarysettings
from ..shared import methodsettings as shared_methodsettings
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PublishingOrganizationEnum(str, Enum):
    r"""For whom the client library is being published."""
    CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED = 'CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED'
    CLOUD = 'CLOUD'
    ADS = 'ADS'
    PHOTOS = 'PHOTOS'
    STREET_VIEW = 'STREET_VIEW'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Publishing:
    r"""This message configures the settings for publishing [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from the service config."""
    
    api_short_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiShortName'), 'exclude': lambda f: f is None }})
    r"""Used as a tracking tag when collecting data about the APIs developer relations artifacts like docs, packages delivered to package managers, etc. Example: \\"speech\\"."""  
    codeowner_github_teams: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codeownerGithubTeams'), 'exclude': lambda f: f is None }})
    r"""GitHub teams to be added to CODEOWNERS in the directory in GitHub containing source code for the client libraries for this API."""  
    doc_tag_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('docTagPrefix'), 'exclude': lambda f: f is None }})
    r"""A prefix used in sample code when demarking regions to be included in documentation."""  
    documentation_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentationUri'), 'exclude': lambda f: f is None }})
    r"""Link to product home page. Example: https://cloud.google.com/asset-inventory/docs/overview"""  
    github_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('githubLabel'), 'exclude': lambda f: f is None }})
    r"""GitHub label to apply to issues and pull requests opened for this API."""  
    library_settings: Optional[list[shared_clientlibrarysettings.ClientLibrarySettings]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('librarySettings'), 'exclude': lambda f: f is None }})
    r"""Client library settings. If the same version string appears multiple times in this list, then the last one wins. Settings from earlier settings with the same version string are discarded."""  
    method_settings: Optional[list[shared_methodsettings.MethodSettings]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('methodSettings'), 'exclude': lambda f: f is None }})
    r"""A list of API method settings, e.g. the behavior for methods that use the long-running operation pattern."""  
    new_issue_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newIssueUri'), 'exclude': lambda f: f is None }})
    r"""Link to a place that API users can report issues. Example: https://issuetracker.google.com/issues/new?component=190865&template=1161103"""  
    organization: Optional[PublishingOrganizationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('organization'), 'exclude': lambda f: f is None }})
    r"""For whom the client library is being published."""  
    proto_reference_documentation_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protoReferenceDocumentationUri'), 'exclude': lambda f: f is None }})
    r"""Optional link to proto reference documentation. Example: https://cloud.google.com/pubsub/lite/docs/reference/rpc"""  
    