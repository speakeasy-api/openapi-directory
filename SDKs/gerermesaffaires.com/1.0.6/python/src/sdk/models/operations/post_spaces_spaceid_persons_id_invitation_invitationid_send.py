"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostSpacesSpaceIDPersonsIDInvitationInvitationIDSendSecurity:
    
    gma_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDPersonsIDInvitationInvitationIDSendRequestBody:
    r"""content of invitation message to send"""
    
    contact: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Contact'), 'exclude': lambda f: f is None }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message'), 'exclude': lambda f: f is None }})  
    signature: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Signature'), 'exclude': lambda f: f is None }})  
    subject: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subject'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDPersonsIDInvitationInvitationIDSendRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the person"""  
    invitation_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'invitationId', 'style': 'simple', 'explode': False }})
    r"""Id of the invitation"""  
    request_body: PostSpacesSpaceIDPersonsIDInvitationInvitationIDSendRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""content of invitation message to send"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDPersonsIDInvitationInvitationIDSend201ApplicationJSON:
    r"""Id of document created"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDPersonsIDInvitationInvitationIDSendResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_spaces_space_id_persons_id_invitation_invitation_id_send_201_application_json_object: Optional[PostSpacesSpaceIDPersonsIDInvitationInvitationIDSend201ApplicationJSON] = dataclasses.field(default=None)
    r"""Id of document created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    