"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import inline_response_400 as shared_inline_response_400
from ..shared import inline_response_401 as shared_inline_response_401
from ..shared import inline_response_403 as shared_inline_response_403
from ..shared import listpaymentsresponsev3 as shared_listpaymentsresponsev3
from datetime import date
from enum import Enum
from typing import Optional

class ListPaymentsAuditV3StatusEnum(str, Enum):
    r"""Payment Status"""
    ACCEPTED = 'ACCEPTED'
    AWAITING_FUNDS = 'AWAITING_FUNDS'
    FUNDED = 'FUNDED'
    UNFUNDED = 'UNFUNDED'
    BANK_PAYMENT_REQUESTED = 'BANK_PAYMENT_REQUESTED'
    REJECTED = 'REJECTED'
    ACCEPTED_BY_RAILS = 'ACCEPTED_BY_RAILS'
    CONFIRMED = 'CONFIRMED'
    FAILED = 'FAILED'
    RETURNED = 'RETURNED'
    WITHDRAWN = 'WITHDRAWN'


@dataclasses.dataclass
class ListPaymentsAuditV3Request:
    
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number. Default is 1."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""The number of results to return in a page"""  
    payee_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'payeeId', 'style': 'form', 'explode': True }})
    r"""The UUID of the payee."""  
    payment_amount_from: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentAmountFrom', 'style': 'form', 'explode': True }})
    r"""The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom"""  
    payment_amount_to: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentAmountTo', 'style': 'form', 'explode': True }})
    r"""The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo"""  
    payment_currency: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentCurrency', 'style': 'form', 'explode': True }})
    r"""The payment currency filter. Filters based on an exact match on the currency."""  
    payment_memo: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentMemo', 'style': 'form', 'explode': True }})
    r"""The payment memo filter. This filters via a case insensitive substring match."""  
    payor_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'payorId', 'style': 'form', 'explode': True }})
    r"""The account owner Payor Id. Required for external users."""  
    payor_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'payorName', 'style': 'form', 'explode': True }})
    r"""The payor’s name. This filters via a case insensitive substring match."""  
    remote_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'remoteId', 'style': 'form', 'explode': True }})
    r"""The remote id of the payees."""  
    sensitive: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sensitive', 'style': 'form', 'explode': True }})
    r"""Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.
    If set to true, and you have permission, the PII values will be returned as their original unmasked values.
    """  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by remoteId
    The supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,
    routingNumber, accountNumber, remoteId, submittedDateTime and status
    """  
    source_account_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceAccountName', 'style': 'form', 'explode': True }})
    r"""The source account name filter. This filters via a case insensitive substring match."""  
    source_amount_from: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceAmountFrom', 'style': 'form', 'explode': True }})
    r"""The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom"""  
    source_amount_to: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceAmountTo', 'style': 'form', 'explode': True }})
    r"""The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo"""  
    source_currency: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceCurrency', 'style': 'form', 'explode': True }})
    r"""The source currency filter. Filters based on an exact match on the currency."""  
    status: Optional[ListPaymentsAuditV3StatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Payment Status"""  
    submitted_date_from: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'submittedDateFrom', 'style': 'form', 'explode': True }})
    r"""The submitted date from range filter. Format is yyyy-MM-dd."""  
    submitted_date_to: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'submittedDateTo', 'style': 'form', 'explode': True }})
    r"""The submitted date to range filter. Format is yyyy-MM-dd."""  
    

@dataclasses.dataclass
class ListPaymentsAuditV3Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    inline_response_400: Optional[shared_inline_response_400.InlineResponse400] = dataclasses.field(default=None)
    r"""Invalid request. See Error message payload for details of failure"""  
    inline_response_401: Optional[shared_inline_response_401.InlineResponse401] = dataclasses.field(default=None)
    r"""Invalid access token. May be expired or invalid"""  
    inline_response_403: Optional[shared_inline_response_403.InlineResponse403] = dataclasses.field(default=None)
    r"""The authentication does not have permissions to access the resource
    This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
    """  
    list_payments_response_v3: Optional[shared_listpaymentsresponsev3.ListPaymentsResponseV3] = dataclasses.field(default=None)
    r"""Paginated list of payments"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    