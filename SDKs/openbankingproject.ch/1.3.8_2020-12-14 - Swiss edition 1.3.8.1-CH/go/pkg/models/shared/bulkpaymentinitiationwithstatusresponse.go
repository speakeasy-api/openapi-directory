// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
	"time"
)

// BulkPaymentInitiationWithStatusResponse - Generic JSON response body consistion of the corresponding bulk payment initation JSON body together with an optional transaction status field.
type BulkPaymentInitiationWithStatusResponse struct {
	AcceptorTransactionDateTime *time.Time `json:"acceptorTransactionDateTime,omitempty"`
	// If this element equals 'true', the PSU prefers only one booking entry.
	// If this element equals 'false', the PSU prefers individual booking of all contained individual transactions.
	//
	// The ASPSP will follow this preference according to contracts agreed on with the PSU.
	//
	BatchBookingPreferred *bool `json:"batchBookingPreferred,omitempty"`
	// Reference to an account by either
	//   * IBAN, of a payment accounts, or
	//   * otherAccountIdentification, for payment accounts if there is no IBAN
	// adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
	//
	DebtorAccount        AccountReference16CH `json:"debtorAccount"`
	PaymentInformationID *string              `json:"paymentInformationId,omitempty"`
	// A list of generic JSON bodies payment initations for bulk payments via JSON.
	//
	// Note: Some fields from single payments do not occcur in a bulk payment element
	//
	Payments               []PaymentInitiationBulkElementJSON `json:"payments"`
	RequestedExecutionDate *types.Date                        `json:"requestedExecutionDate,omitempty"`
	// The transaction status is filled with codes of the ISO 20022 data table:
	// - 'ACCC': 'AcceptedSettlementCompleted' -
	//   Settlement on the creditor's account has been completed.
	// - 'ACCP': 'AcceptedCustomerProfile' -
	//   Preceding check of technical validation was successful.
	//   Customer profile check was also successful.
	// - 'ACSC': 'AcceptedSettlementCompleted' -
	//   Settlement on the debtoro?=s account has been completed.
	//
	//   **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed.
	//
	//   **Warning:** this status is provided for transaction status reasons, not for financial information.
	//   It can only be used after bilateral agreement.
	// - 'ACSP': 'AcceptedSettlementInProcess' -
	//   All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.
	// - 'ACTC': 'AcceptedTechnicalValidation' -
	//   Authentication and syntactical and semantical validation are successful.
	// - 'ACWC': 'AcceptedWithChange' -
	//   Instruction is accepted but a change will be made, such as date or remittance not sent.
	// - 'ACWP': 'AcceptedWithoutPosting' -
	//   Payment instruction included in the credit transfer is accepted without being posted to the creditor customero?=s account.
	// - 'RCVD': 'Received' -
	//   Payment initiation has been received by the receiving agent.
	// - 'PDNG': 'Pending' -
	//   Payment initiation or individual transaction included in the payment initiation is pending.
	//   Further checks and status update will be performed.
	// - 'RJCT': 'Rejected' -
	//   Payment initiation or individual transaction included in the payment initiation has been rejected.
	// - 'CANC': 'Cancelled'
	//   Payment initiation has been cancelled before execution
	//   Remark: This codeis accepted as new code by ISO20022.
	// - 'ACFC': 'AcceptedFundsChecked' -
	//   Preceding check of technical validation and customer profile was successful and an automatic funds check was positive .
	//   Remark: This code is accepted as new code by ISO20022.
	// - 'PATC': 'PartiallyAcceptedTechnical'
	//   Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.
	//   Remark: This code is accepted as new code by ISO20022.
	// - 'PART': 'PartiallyAccepted' -
	//   A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.
	//   Remark: This code may be used only in case of bulk payments. It is only used in a situation where all mandated authorisations have been applied, but some payments have been rejected.
	//
	TransactionStatus *TransactionStatusEnum `json:"transactionStatus,omitempty"`
}
