<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OfflineUserAddressInfo - Identify a user by name and address.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OfflineUserAddressInfo
{
    /**
     * City of the address.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * 2-letter country code in ISO-3166-1 alpha-2 of the user's address.
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * First name of the user, which is hashed as SHA-256 after normalized (Lowercase all characters; Remove any extra spaces before, after, and in between).
     * 
     * @var ?string $hashedFirstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('hashedFirstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hashedFirstName = null;
    
    /**
     * Last name of the user, which is hashed as SHA-256 after normalized (lower case only and no punctuation).
     * 
     * @var ?string $hashedLastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('hashedLastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hashedLastName = null;
    
    /**
     * The street address of the user hashed using SHA-256 hash function after normalization (lower case only).
     * 
     * @var ?string $hashedStreetAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('hashedStreetAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hashedStreetAddress = null;
    
    /**
     * Postal code of the user's address.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * State code of the address.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
	public function __construct()
	{
		$this->city = null;
		$this->countryCode = null;
		$this->hashedFirstName = null;
		$this->hashedLastName = null;
		$this->hashedStreetAddress = null;
		$this->postalCode = null;
		$this->state = null;
	}
}
