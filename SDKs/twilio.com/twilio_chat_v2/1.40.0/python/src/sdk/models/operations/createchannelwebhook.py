"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import channel_webhook_enum_method_enum as shared_channel_webhook_enum_method_enum
from ..shared import channel_webhook_enum_type_enum as shared_channel_webhook_enum_type_enum
from ..shared import chat_v2_service_channel_channel_webhook as shared_chat_v2_service_channel_channel_webhook
from typing import Optional

CREATE_CHANNEL_WEBHOOK_SERVERS = [
	"https://chat.twilio.com",
]


@dataclasses.dataclass
class CreateChannelWebhookSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateChannelWebhookCreateChannelWebhookRequest:
    
    type: shared_channel_webhook_enum_type_enum.ChannelWebhookEnumTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'Type' }})  
    configuration_filters: Optional[list[str]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Configuration.Filters' }})
    r"""The events that cause us to call the Channel Webhook. Used when `type` is `webhook`. This parameter takes only one event. To specify more than one event, repeat this parameter for each event. For the list of possible events, see [Webhook Event Triggers](https://www.twilio.com/docs/chat/webhook-events#webhook-event-trigger)."""  
    configuration_flow_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Configuration.FlowSid' }})
    r"""The SID of the Studio [Flow](https://www.twilio.com/docs/studio/rest-api/flow) to call when an event in `configuration.filters` occurs. Used only when `type` is `studio`."""  
    configuration_method: Optional[shared_channel_webhook_enum_method_enum.ChannelWebhookEnumMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Configuration.Method' }})  
    configuration_retry_count: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Configuration.RetryCount' }})
    r"""The number of times to retry the webhook if the first attempt fails. Can be an integer between 0 and 3, inclusive, and the default is 0."""  
    configuration_triggers: Optional[list[str]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Configuration.Triggers' }})
    r"""A string that will cause us to call the webhook when it is present in a message body. This parameter takes only one trigger string. To specify more than one, repeat this parameter for each trigger string up to a total of 5 trigger strings. Used only when `type` = `trigger`."""  
    configuration_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Configuration.Url' }})
    r"""The URL of the webhook to call using the `configuration.method`."""  
    

@dataclasses.dataclass
class CreateChannelWebhookRequest:
    
    channel_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ChannelSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the new Channel Webhook resource belongs to. This value can be the Channel resource's `sid` or `unique_name`."""  
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) with the Channel to create the Webhook resource under."""  
    request_body: Optional[CreateChannelWebhookCreateChannelWebhookRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateChannelWebhookResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    chat_v2_service_channel_channel_webhook: Optional[shared_chat_v2_service_channel_channel_webhook.ChatV2ServiceChannelChannelWebhook] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    