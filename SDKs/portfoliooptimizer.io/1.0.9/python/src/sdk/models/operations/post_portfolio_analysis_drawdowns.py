"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisDrawdownsRequestBodyPortfolios:
    
    portfolio_values: list[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolioValues') }})
    r"""portfolioValues[t] is the value of the portfolio at the time t"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisDrawdownsRequestBody:
    
    portfolios: list[PostPortfolioAnalysisDrawdownsRequestBodyPortfolios] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolios') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisDrawdowns200ApplicationJSONPortfoliosPortfolioWorstDrawdowns:
    
    drawdown_bottom: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drawdownBottom') }})  
    drawdown_depth: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drawdownDepth') }})  
    drawdown_end: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drawdownEnd') }})  
    drawdown_start: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drawdownStart') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisDrawdowns200ApplicationJSONPortfolios:
    
    portfolio_drawdowns: list[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolioDrawdowns') }})
    r"""portfolioDrawdowns[t] is the value of the drawdown function at the time t"""  
    portfolio_worst_drawdowns: list[PostPortfolioAnalysisDrawdowns200ApplicationJSONPortfoliosPortfolioWorstDrawdowns] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolioWorstDrawdowns') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisDrawdowns200ApplicationJSON:
    r"""OK"""
    
    portfolios: list[PostPortfolioAnalysisDrawdowns200ApplicationJSONPortfolios] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolios') }})  
    

@dataclasses.dataclass
class PostPortfolioAnalysisDrawdownsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_portfolio_analysis_drawdowns_200_application_json_object: Optional[PostPortfolioAnalysisDrawdowns200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    