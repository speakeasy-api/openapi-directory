/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { CategoryDetails } from "./categorydetails";
import { Expose, Transform } from "class-transformer";

/**
 * Provides the category rules that are used to automatically categorize contacts based on uttered keywords and phrases.
 */
export class Categories extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MatchedCategories" })
  matchedCategories: string[];

  @SpeakeasyMetadata({ elemType: CategoryDetails })
  @Expose({ name: "MatchedDetails" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, CategoryDetails> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], CategoryDetails);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  matchedDetails: Record<string, CategoryDetails>;
}
