/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class Electioneering extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator" })
  amendmentIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beginning_image_number" })
  beginningImageNumber?: string;

  /**
   *
   * @remarks
   * "If an electioneering cost targets several candidates, the total cost is
   * divided by the number of candidates. If it only mentions one candidate
   * the full cost of the communication is listed."
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calculated_candidate_share" })
  calculatedCandidateShare?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_district" })
  candidateDistrict?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_id" })
  candidateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_name" })
  candidateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office" })
  candidateOffice?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_state" })
  candidateState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee_name" })
  committeeName?: string;

  /**
   *
   * @remarks
   * It is the airing, broadcast, cablecast or other dissemination of the communication.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "communication_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  communicationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "disbursement_amount" })
  disbursementAmount?: number;

  /**
   *
   * @remarks
   * Disbursement date includes actual disbursements and execution of contracts creating
   * an obligation to make disbursements (SB date of disbursement).
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disbursement_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  disbursementDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "election_type" })
  electionType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "link_id" })
  linkId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "number_of_candidates" })
  numberOfCandidates?: number;

  /**
   *
   * @remarks
   * Name of the entity that received the payment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payee_name" })
  payeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_state" })
  payeeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  /**
   *
   * @remarks
   * The pubic distribution date is the date that triggers disclosure of the
   * electioneering communication (date reported on page 1 of Form 9).
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_distribution_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publicDistributionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "purpose_description" })
  purposeDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "receipt_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  receiptDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "report_year" })
  reportYear?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sb_image_num" })
  sbImageNum?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sb_link_id" })
  sbLinkId?: string;

  /**
   *
   * @remarks
   * The identifier for each electioneering record.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_id" })
  subId?: number;
}
