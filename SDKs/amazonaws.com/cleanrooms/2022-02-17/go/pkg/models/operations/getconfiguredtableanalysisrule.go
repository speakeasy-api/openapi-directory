// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum - The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.
type GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum string

const (
	GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnumAggregation GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum = "AGGREGATION"
	GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnumList        GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum = "LIST"
)

func (e *GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AGGREGATION":
		fallthrough
	case "LIST":
		*e = GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum: %s", s)
	}
}

type GetConfiguredTableAnalysisRuleRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.
	AnalysisRuleType GetConfiguredTableAnalysisRuleAnalysisRuleTypeEnum `pathParam:"style=simple,explode=false,name=analysisRuleType"`
	// The unique identifier for the configured table to retrieve. Currently accepts the configured table ID.
	ConfiguredTableIdentifier string `pathParam:"style=simple,explode=false,name=configuredTableIdentifier"`
}

type GetConfiguredTableAnalysisRuleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetConfiguredTableAnalysisRuleOutput *shared.GetConfiguredTableAnalysisRuleOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
