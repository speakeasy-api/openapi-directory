// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BlockActionBlockScopeEnum - Specifies the scope of this BlockAction. Only applicable to devices that are company-owned.
type BlockActionBlockScopeEnum string

const (
	BlockActionBlockScopeEnumBlockScopeUnspecified BlockActionBlockScopeEnum = "BLOCK_SCOPE_UNSPECIFIED"
	BlockActionBlockScopeEnumBlockScopeWorkProfile BlockActionBlockScopeEnum = "BLOCK_SCOPE_WORK_PROFILE"
	BlockActionBlockScopeEnumBlockScopeDevice      BlockActionBlockScopeEnum = "BLOCK_SCOPE_DEVICE"
)

func (e BlockActionBlockScopeEnum) ToPointer() *BlockActionBlockScopeEnum {
	return &e
}

func (e *BlockActionBlockScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BLOCK_SCOPE_UNSPECIFIED":
		fallthrough
	case "BLOCK_SCOPE_WORK_PROFILE":
		fallthrough
	case "BLOCK_SCOPE_DEVICE":
		*e = BlockActionBlockScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BlockActionBlockScopeEnum: %v", v)
	}
}

// BlockAction - An action to block access to apps and data on a fully managed device or in a work profile. This action also triggers a device or work profile to displays a user-facing notification with information (where possible) on how to correct the compliance issue. Note: wipeAction must also be specified.
type BlockAction struct {
	// Number of days the policy is non-compliant before the device or work profile is blocked. To block access immediately, set to 0. blockAfterDays must be less than wipeAfterDays.
	BlockAfterDays *int `json:"blockAfterDays,omitempty"`
	// Specifies the scope of this BlockAction. Only applicable to devices that are company-owned.
	BlockScope *BlockActionBlockScopeEnum `json:"blockScope,omitempty"`
}
