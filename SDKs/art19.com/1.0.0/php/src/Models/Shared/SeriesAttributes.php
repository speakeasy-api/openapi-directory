<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SeriesAttributes
{
    /**
     * If `null` or `true`, the ART19 web player will render an Amazon subscription badge
     * 
     * @var ?bool $amazonSubscriptionBadgeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('amazon_subscription_badge_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $amazonSubscriptionBadgeEnabled = null;
    
    /**
     * The Amazon Music subscription URL
     * 
     * @var ?string $amazonSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('amazon_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $amazonSubscriptionUrl = null;
    
    /**
     * The CastBox subscription URL
     * 
     * @var ?string $castboxSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('castbox_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $castboxSubscriptionUrl = null;
    
    /**
     * This will be replaced by the relationship `cover_image` in a future update.<br/>
     * 
     * The image ID of the cover art for this series. The `/images` endpoint provideds details to the image.
     * 
     * 
     * @var ?string $coverImageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cover_image_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $coverImageId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The description of the series eventually in HTML format
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Determines whether `description` is in HTML format or plain.
     * 
     * @var ?bool $descriptionIsHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_is_html')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $descriptionIsHtml = null;
    
    /**
     * The description with all HTML markup removed. If the description does not contain markup
     * 
     * this is identitcal to `description`.
     * 
     * 
     * @var ?string $descriptionPlain
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_plain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $descriptionPlain = null;
    
    /**
     * The URL of the series on Facebook
     * 
     * @var ?string $facebookUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('facebook_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $facebookUrl = null;
    
    /**
     * The Google subscription URL
     * 
     * @var ?string $googleSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('google_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $googleSubscriptionUrl = null;
    
    /**
     * The iHeartRadio subscription URL
     * 
     * @var ?string $iheartSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('iheart_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iheartSubscriptionUrl = null;
    
    /**
     * The URL of the series on Instagram
     * 
     * @var ?string $instagramUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('instagram_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instagramUrl = null;
    
    /**
     * If `null` or `true`, the ART19 web player will render an iTunes subscription badge
     * 
     * @var ?bool $itunesSubscriptionBadgeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('itunes_subscription_badge_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $itunesSubscriptionBadgeEnabled = null;
    
    /**
     * The Apple iTunes subscription URL
     * 
     * @var ?string $itunesSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('itunes_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itunesSubscriptionUrl = null;
    
    /**
     * The URL of the series on LinkedIn
     * 
     * @var ?string $linkedinUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedin_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $linkedinUrl = null;
    
    /**
     * The Pocket Casts subscription URL
     * 
     * @var ?string $pocketCastsSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('pocket_casts_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pocketCastsSubscriptionUrl = null;
    
    /**
     * The URL of the RSS feed
     * 
     * @var ?string $podcastSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('podcast_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $podcastSubscriptionUrl = null;
    
    /**
     * If this is `true`, a public web page for this series is available under
     * 
     * `https://art19.com/shows/{slug}`, where `slug` is the value of the corresponding attribute.
     * This public page provides details about the series as well as descriptive links to all its
     * episodes. If this is `false`, no such public page is available.
     * 
     * 
     * @var ?bool $publicPageEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_page_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $publicPageEnabled = null;
    
    /**
     * If present, this is the preferred title for the series in the RSS Feed
     * 
     * @var ?string $publicTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicTitle = null;
    
    /**
     * The RadioPublic subscription URL
     * 
     * @var ?string $radioPublicSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('radio_public_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $radioPublicSubscriptionUrl = null;
    
    /**
     * The author responsible for the RSS feed
     * 
     * @var ?string $rssAuthor
     */
	#[\JMS\Serializer\Annotation\SerializedName('rss_author')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rssAuthor = null;
    
    /**
     * The copyright disclaimer for the contents of the show, appearing after a Â© symbol, e.g. `2020 ART19, Inc.`
     * 
     * @var ?string $rssCopyright
     */
	#[\JMS\Serializer\Annotation\SerializedName('rss_copyright')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rssCopyright = null;
    
    /**
     * The pubic point of contact for the show
     * 
     * @var ?string $rssEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('rss_email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rssEmail = null;
    
    /**
     * The name of the contact for the show
     * 
     * @var ?string $rssOwner
     */
	#[\JMS\Serializer\Annotation\SerializedName('rss_owner')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rssOwner = null;
    
    /**
     * This slug is unique over all series and networks system wide and is used to access the series' feed
     * 
     * as well as its eventually enabled public page on ART19.
     * 
     * 
     * @var ?string $slug
     */
	#[\JMS\Serializer\Annotation\SerializedName('slug')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slug = null;
    
    /**
     * The title of the series modified for sorting. This converts all characters to
     * 
     * lower case, removes an eventually leading `The` as well as leading and trailling whitespace characters.
     * 
     * 
     * @var ?string $sortTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sortTitle = null;
    
    /**
     * If `null` or `true`, the ART19 web player will render a Spotify subscription badge
     * 
     * @var ?bool $spotifySubscriptionBadgeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('spotify_subscription_badge_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $spotifySubscriptionBadgeEnabled = null;
    
    /**
     * The Spotify subscription URL
     * 
     * @var ?string $spotifySubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('spotify_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $spotifySubscriptionUrl = null;
    
    /**
     * The status of the series
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SeriesAttributesStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SeriesAttributesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SeriesAttributesStatusEnum $status = null;
    
    /**
     * If `null` or `true`, the ART19 web player will render a Stitcher subscription badge
     * 
     * @var ?bool $stitcherSubscriptionBadgeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('stitcher_subscription_badge_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $stitcherSubscriptionBadgeEnabled = null;
    
    /**
     * The Stitcher subscription URL
     * 
     * @var ?string $stitcherSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('stitcher_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stitcherSubscriptionUrl = null;
    
    /**
     * The title of the series
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * The URL of the series on Tumblr
     * 
     * @var ?string $tumblrUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('tumblr_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tumblrUrl = null;
    
    /**
     * The TuneIn subscription URL
     * 
     * @var ?string $tuneInSubscriptionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('tune_in_subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tuneInSubscriptionUrl = null;
    
    /**
     * The URL of the series on Twitter
     * 
     * @var ?string $twitterUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('twitter_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $twitterUrl = null;
    
    /**
     * The type of the series
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SeriesAttributesTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SeriesAttributesTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SeriesAttributesTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
    /**
     * The custom website URL for the series
     * 
     * @var ?string $websiteUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('website_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $websiteUrl = null;
    
	public function __construct()
	{
		$this->amazonSubscriptionBadgeEnabled = null;
		$this->amazonSubscriptionUrl = null;
		$this->castboxSubscriptionUrl = null;
		$this->coverImageId = null;
		$this->createdAt = null;
		$this->description = null;
		$this->descriptionIsHtml = null;
		$this->descriptionPlain = null;
		$this->facebookUrl = null;
		$this->googleSubscriptionUrl = null;
		$this->iheartSubscriptionUrl = null;
		$this->instagramUrl = null;
		$this->itunesSubscriptionBadgeEnabled = null;
		$this->itunesSubscriptionUrl = null;
		$this->linkedinUrl = null;
		$this->pocketCastsSubscriptionUrl = null;
		$this->podcastSubscriptionUrl = null;
		$this->publicPageEnabled = null;
		$this->publicTitle = null;
		$this->radioPublicSubscriptionUrl = null;
		$this->rssAuthor = null;
		$this->rssCopyright = null;
		$this->rssEmail = null;
		$this->rssOwner = null;
		$this->slug = null;
		$this->sortTitle = null;
		$this->spotifySubscriptionBadgeEnabled = null;
		$this->spotifySubscriptionUrl = null;
		$this->status = null;
		$this->stitcherSubscriptionBadgeEnabled = null;
		$this->stitcherSubscriptionUrl = null;
		$this->title = null;
		$this->tumblrUrl = null;
		$this->tuneInSubscriptionUrl = null;
		$this->twitterUrl = null;
		$this->type = null;
		$this->updatedAt = null;
		$this->websiteUrl = null;
	}
}
