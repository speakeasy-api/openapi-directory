/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Account } from "./account";
import { Category } from "./category";
import { CategoryGroup } from "./categorygroup";
import { CurrencyFormat } from "./currencyformat";
import { DateFormat } from "./dateformat";
import { MonthDetail } from "./monthdetail";
import { Payee } from "./payee";
import { PayeeLocation } from "./payeelocation";
import { ScheduledSubTransaction } from "./scheduledsubtransaction";
import { ScheduledTransactionSummary } from "./scheduledtransactionsummary";
import { SubTransaction } from "./subtransaction";
import { TransactionSummary } from "./transactionsummary";
import { Expose, Transform, Type } from "class-transformer";

export class BudgetDetail extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Account })
  @Expose({ name: "accounts" })
  @Type(() => Account)
  accounts?: Account[];

  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "categories" })
  @Type(() => Category)
  categories?: Category[];

  @SpeakeasyMetadata({ elemType: CategoryGroup })
  @Expose({ name: "category_groups" })
  @Type(() => CategoryGroup)
  categoryGroups?: CategoryGroup[];

  /**
   * The currency format setting for the budget.  In some cases the format will not be available and will be specified as null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency_format" })
  @Type(() => CurrencyFormat)
  currencyFormat?: CurrencyFormat;

  /**
   * The date format setting for the budget.  In some cases the format will not be available and will be specified as null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_format" })
  @Type(() => DateFormat)
  dateFormat?: DateFormat;

  /**
   * The earliest budget month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_month" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstMonth?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The last time any changes were made to the budget from either a web or mobile client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_modified_on" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  /**
   * The latest budget month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_month" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastMonth?: Date;

  @SpeakeasyMetadata({ elemType: MonthDetail })
  @Expose({ name: "months" })
  @Type(() => MonthDetail)
  months?: MonthDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: PayeeLocation })
  @Expose({ name: "payee_locations" })
  @Type(() => PayeeLocation)
  payeeLocations?: PayeeLocation[];

  @SpeakeasyMetadata({ elemType: Payee })
  @Expose({ name: "payees" })
  @Type(() => Payee)
  payees?: Payee[];

  @SpeakeasyMetadata({ elemType: ScheduledSubTransaction })
  @Expose({ name: "scheduled_subtransactions" })
  @Type(() => ScheduledSubTransaction)
  scheduledSubtransactions?: ScheduledSubTransaction[];

  @SpeakeasyMetadata({ elemType: ScheduledTransactionSummary })
  @Expose({ name: "scheduled_transactions" })
  @Type(() => ScheduledTransactionSummary)
  scheduledTransactions?: ScheduledTransactionSummary[];

  @SpeakeasyMetadata({ elemType: SubTransaction })
  @Expose({ name: "subtransactions" })
  @Type(() => SubTransaction)
  subtransactions?: SubTransaction[];

  @SpeakeasyMetadata({ elemType: TransactionSummary })
  @Expose({ name: "transactions" })
  @Type(() => TransactionSummary)
  transactions?: TransactionSummary[];
}
