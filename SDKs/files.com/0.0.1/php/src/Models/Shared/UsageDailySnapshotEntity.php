<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UsageDailySnapshotEntity - List Usage Daily Snapshots
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UsageDailySnapshotEntity
{
    /**
     * True if the API usage fields `read_api_usage` and `write_api_usage` can be relied upon.  If this is false, we suggest hiding that value from any UI.
     * 
     * @var ?bool $apiUsageAvailable
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_usage_available')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $apiUsageAvailable = null;
    
    /**
     * GB of Files Native Storage used on this day.
     * 
     * @var ?int $currentStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_storage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $currentStorage = null;
    
    /**
     * The date of this usage record
     * 
     * @var ?\DateTime $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $date = null;
    
    /**
     * GB of Files Native Storage used on this day for files that have been permanently deleted but were uploaded less than 30 days ago, and are still billable.
     * 
     * @var ?int $deletedFilesCountedInMinimum
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted_files_counted_in_minimum')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $deletedFilesCountedInMinimum = null;
    
    /**
     * GB of Files Native Storage used on this day for files that have been deleted and are stored as backups.
     * 
     * @var ?int $deletedFilesStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted_files_storage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $deletedFilesStorage = null;
    
    /**
     * ID of the usage record
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Read API Calls used on this day. Note: only updated for days before the current day.
     * 
     * @var ?int $readApiUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('read_api_usage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $readApiUsage = null;
    
    /**
     * GB of Files Native Storage used for the root folder.  Included here because this value will not be part of `usage_by_top_level_dir`
     * 
     * @var ?int $rootStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('root_storage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rootStorage = null;
    
    /**
     * Usage broken down by each top-level folder
     * 
     * @var ?array<string, mixed> $usageByTopLevelDir
     */
	#[\JMS\Serializer\Annotation\SerializedName('usage_by_top_level_dir')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $usageByTopLevelDir = null;
    
    /**
     * Number of billable users as of this day.
     * 
     * @var ?int $userCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userCount = null;
    
    /**
     * Write API Calls used on this day. Note: only updated for days before the current day.
     * 
     * @var ?int $writeApiUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('write_api_usage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $writeApiUsage = null;
    
	public function __construct()
	{
		$this->apiUsageAvailable = null;
		$this->currentStorage = null;
		$this->date = null;
		$this->deletedFilesCountedInMinimum = null;
		$this->deletedFilesStorage = null;
		$this->id = null;
		$this->readApiUsage = null;
		$this->rootStorage = null;
		$this->usageByTopLevelDir = null;
		$this->userCount = null;
		$this->writeApiUsage = null;
	}
}
