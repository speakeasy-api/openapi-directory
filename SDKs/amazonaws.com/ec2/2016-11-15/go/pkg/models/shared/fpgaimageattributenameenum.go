// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FpgaImageAttributeNameEnum string

const (
	FpgaImageAttributeNameEnumDescription    FpgaImageAttributeNameEnum = "description"
	FpgaImageAttributeNameEnumName           FpgaImageAttributeNameEnum = "name"
	FpgaImageAttributeNameEnumLoadPermission FpgaImageAttributeNameEnum = "loadPermission"
	FpgaImageAttributeNameEnumProductCodes   FpgaImageAttributeNameEnum = "productCodes"
)

func (e FpgaImageAttributeNameEnum) ToPointer() *FpgaImageAttributeNameEnum {
	return &e
}

func (e *FpgaImageAttributeNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "description":
		fallthrough
	case "name":
		fallthrough
	case "loadPermission":
		fallthrough
	case "productCodes":
		*e = FpgaImageAttributeNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FpgaImageAttributeNameEnum: %v", v)
	}
}
