"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDataplexV1SchemaPartitionFieldTypeEnum(str, Enum):
    r"""Required. Immutable. The type of field."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    BOOLEAN = 'BOOLEAN'
    BYTE = 'BYTE'
    INT16 = 'INT16'
    INT32 = 'INT32'
    INT64 = 'INT64'
    FLOAT = 'FLOAT'
    DOUBLE = 'DOUBLE'
    DECIMAL = 'DECIMAL'
    STRING = 'STRING'
    BINARY = 'BINARY'
    TIMESTAMP = 'TIMESTAMP'
    DATE = 'DATE'
    TIME = 'TIME'
    RECORD = 'RECORD'
    NULL = 'NULL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1SchemaPartitionField:
    r"""Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore.."""  
    type: Optional[GoogleCloudDataplexV1SchemaPartitionFieldTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The type of field."""  
    