/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCalloutHistoryQueryParams {
    /**
     * The final date and time of records to be returned. Defaults to now. Use format yyyy-MM-ddTHH:mm:ss.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endTime")
    public OffsetDateTime endTime;
    public GETCalloutHistoryQueryParams withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Category of records to be returned by event category.
     * 
     * The following formats are supported:
     * * `{Event Type Namespace}:{Event Type Name}` if the Custom Events feature is enabled in your tenant. For example: `user.notification:NewSubscriptionCreated`.
     * * Numeric code of the event category if the Custom Events feature is not enabled in your tenant. For example, `1210`. See [Event Category Code](https://knowledgecenter.zuora.com/DC_Developers/AA_REST_API/Event_Categories_for_Notification_Histories) for more information.
     * 
     * **Note**: The `eventCategory` will be ignored if the `objectId` is present in query parameters.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=eventCategory")
    public String eventCategory;
    public GETCalloutHistoryQueryParams withEventCategory(String eventCategory) {
        this.eventCategory = eventCategory;
        return this;
    }
    
    /**
     * If `true`, only return failed records. If `false`, return all records in the given date range. The default value is `true`.
     * 
     * **Note**: The `failedOnly` will be treated as `false` if the `objectId` is present in query parameters.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=failedOnly")
    public Boolean failedOnly;
    public GETCalloutHistoryQueryParams withFailedOnly(Boolean failedOnly) {
        this.failedOnly = failedOnly;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeResponseContent")
    public Boolean includeResponseContent;
    public GETCalloutHistoryQueryParams withIncludeResponseContent(Boolean includeResponseContent) {
        this.includeResponseContent = includeResponseContent;
        return this;
    }
    
    /**
     * The ID of an object that triggered a callout notification. 
     * 
     * **Note**: If the `objectId` is present in query parameters, the `eventCategory` will be ignored and the `failedOnly` will be treated as `false`.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=objectId")
    public String objectId;
    public GETCalloutHistoryQueryParams withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * Number of rows returned per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;
    public GETCalloutHistoryQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The initial date and time of records to be returned. Defaults to (end time - 1 day). Use format yyyy-MM-ddTHH:mm:ss.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startTime")
    public OffsetDateTime startTime;
    public GETCalloutHistoryQueryParams withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
}
