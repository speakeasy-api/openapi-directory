<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Field - Message contains EntityType's Field metadata.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Field
{
    /**
     * The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
     * 
     * @var ?array<string, mixed> $additionalDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalDetails')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalDetails = null;
    
    /**
     * The data type of the Field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FieldDataTypeEnum $dataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FieldDataTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FieldDataTypeEnum $dataType = null;
    
    /**
     * The following field specifies the default value of the Field provided by the external system if a value is not provided.
     * 
     * @var mixed $defaultValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultValue')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $defaultValue = null;
    
    /**
     * A brief description of the Field.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
     * 
     * @var ?bool $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $key = null;
    
    /**
     * Name of the Field.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Specifies whether a null value is allowed.
     * 
     * @var ?bool $nullable
     */
	#[\JMS\Serializer\Annotation\SerializedName('nullable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nullable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Reference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Reference $reference = null;
    
	public function __construct()
	{
		$this->additionalDetails = null;
		$this->dataType = null;
		$this->defaultValue = null;
		$this->description = null;
		$this->key = null;
		$this->name = null;
		$this->nullable = null;
		$this->reference = null;
	}
}
