/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChartDateTimeRule } from "./chartdatetimerule";
import { ChartHistogramRule } from "./charthistogramrule";
import { Expose, Type } from "class-transformer";

/**
 * An optional setting on the ChartData of the domain of a data source chart that defines buckets for the values in the domain rather than breaking out each individual value. For example, when plotting a data source chart, you can specify a histogram rule on the domain (it should only contain numeric values), grouping its values into buckets. Any values of a chart series that fall into the same bucket are aggregated based on the aggregate_type.
 */
export class ChartGroupRule extends SpeakeasyBase {
  /**
   * Allows you to organize the date-time values in a source data column into buckets based on selected parts of their date or time values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTimeRule" })
  @Type(() => ChartDateTimeRule)
  dateTimeRule?: ChartDateTimeRule;

  /**
   * Allows you to organize numeric values in a source data column into buckets of constant size.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "histogramRule" })
  @Type(() => ChartHistogramRule)
  histogramRule?: ChartHistogramRule;
}
