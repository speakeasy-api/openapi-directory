/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the settings for each trail.
 */
export class CreateTrailRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CloudWatchLogsLogGroupArn" })
  cloudWatchLogsLogGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CloudWatchLogsRoleArn" })
  cloudWatchLogsRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableLogFileValidation" })
  enableLogFileValidation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IncludeGlobalServiceEvents" })
  includeGlobalServiceEvents?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IsMultiRegionTrail" })
  isMultiRegionTrail?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IsOrganizationTrail" })
  isOrganizationTrail?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3BucketName" })
  s3BucketName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3KeyPrefix" })
  s3KeyPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SnsTopicName" })
  snsTopicName?: string;

  /**
   * A list of tags.
   */
  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "TagsList" })
  @Type(() => Tag)
  tagsList?: Tag[];
}
