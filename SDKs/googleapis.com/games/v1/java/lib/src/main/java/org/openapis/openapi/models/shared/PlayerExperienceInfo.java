/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PlayerExperienceInfo - 1P/3P metadata about the player's experience.
 */
public class PlayerExperienceInfo {
    /**
     * The current number of experience points for the player.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentExperiencePoints")
    public String currentExperiencePoints;

    public PlayerExperienceInfo withCurrentExperiencePoints(String currentExperiencePoints) {
        this.currentExperiencePoints = currentExperiencePoints;
        return this;
    }
    
    /**
     * 1P/3P metadata about a user's level.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentLevel")
    public PlayerLevel currentLevel;

    public PlayerExperienceInfo withCurrentLevel(PlayerLevel currentLevel) {
        this.currentLevel = currentLevel;
        return this;
    }
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public PlayerExperienceInfo withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The timestamp when the player was leveled up, in millis since Unix epoch UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastLevelUpTimestampMillis")
    public String lastLevelUpTimestampMillis;

    public PlayerExperienceInfo withLastLevelUpTimestampMillis(String lastLevelUpTimestampMillis) {
        this.lastLevelUpTimestampMillis = lastLevelUpTimestampMillis;
        return this;
    }
    
    /**
     * 1P/3P metadata about a user's level.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextLevel")
    public PlayerLevel nextLevel;

    public PlayerExperienceInfo withNextLevel(PlayerLevel nextLevel) {
        this.nextLevel = nextLevel;
        return this;
    }
    
    public PlayerExperienceInfo(){}
}
