/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AccessToken - OK
 */
public class AccessToken {
    /**
     * When a `UserAccount` token is issued during a single-sign-on flow
     * a user may have been automatically registered if they didn't
     * have an account already. If this occurs then `accountCreated`
     * will be `true`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountCreated")
    public Boolean accountCreated;

    public AccessToken withAccountCreated(Boolean accountCreated) {
        this.accountCreated = accountCreated;
        return this;
    }
    
    /**
     * The timestamp this token expires.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expirationDate")
    public OffsetDateTime expirationDate;

    public AccessToken withExpirationDate(OffsetDateTime expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    /**
     * True if this token can be refreshed, false if not.
     */
    @JsonProperty("refreshable")
    public Boolean refreshable;

    public AccessToken withRefreshable(Boolean refreshable) {
        this.refreshable = refreshable;
        return this;
    }
    
    /**
     * The type of the token.
     */
    @JsonProperty("type")
    public AccessTokenTypeEnum type;

    public AccessToken withType(AccessTokenTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The token value used for authenticated requests.
     */
    @JsonProperty("value")
    public String value;

    public AccessToken withValue(String value) {
        this.value = value;
        return this;
    }
    
    public AccessToken(@JsonProperty("expirationDate") OffsetDateTime expirationDate, @JsonProperty("refreshable") Boolean refreshable, @JsonProperty("type") AccessTokenTypeEnum type, @JsonProperty("value") String value) {
        this.expirationDate = expirationDate;
        this.refreshable = refreshable;
        this.type = type;
        this.value = value;
  }
}
