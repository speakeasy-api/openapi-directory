// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateOpsMetadataXAmzTargetEnum
type UpdateOpsMetadataXAmzTargetEnum string

const (
	UpdateOpsMetadataXAmzTargetEnumAmazonSsmUpdateOpsMetadata UpdateOpsMetadataXAmzTargetEnum = "AmazonSSM.UpdateOpsMetadata"
)

func (e *UpdateOpsMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.UpdateOpsMetadata":
		*e = UpdateOpsMetadataXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOpsMetadataXAmzTargetEnum: %s", s)
	}
}

type UpdateOpsMetadataHeaders struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateOpsMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateOpsMetadataRequest struct {
	Headers UpdateOpsMetadataHeaders
	Request shared.UpdateOpsMetadataRequest `request:"mediaType=application/json"`
}

type UpdateOpsMetadataResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// OpsMetadataInvalidArgumentException
	OpsMetadataInvalidArgumentException interface{}
	// OpsMetadataKeyLimitExceededException
	OpsMetadataKeyLimitExceededException interface{}
	// OpsMetadataNotFoundException
	OpsMetadataNotFoundException interface{}
	// OpsMetadataTooManyUpdatesException
	OpsMetadataTooManyUpdatesException interface{}
	StatusCode                         int
	RawResponse                        *http.Response
	// Success
	UpdateOpsMetadataResult *shared.UpdateOpsMetadataResult
}
