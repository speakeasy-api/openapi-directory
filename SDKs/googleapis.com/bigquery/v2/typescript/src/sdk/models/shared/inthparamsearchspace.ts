/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IntCandidates } from "./intcandidates";
import { IntRange } from "./intrange";
import { Expose, Type } from "class-transformer";

/**
 * Search space for an int hyperparameter.
 */
export class IntHparamSearchSpace extends SpeakeasyBase {
  /**
   * Discrete candidates of an int hyperparameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidates" })
  @Type(() => IntCandidates)
  candidates?: IntCandidates;

  /**
   * Range of an int hyperparameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => IntRange)
  range?: IntRange;
}
