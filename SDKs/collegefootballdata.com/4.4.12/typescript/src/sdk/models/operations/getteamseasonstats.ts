/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetTeamSeasonStatsRequest extends SpeakeasyBase {
  /**
   * Conference abbreviation filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=conference",
  })
  conference?: string;

  /**
   * Starting week filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endWeek",
  })
  endWeek?: number;

  /**
   * Starting week filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startWeek",
  })
  startWeek?: number;

  /**
   * Team filter (required if no year specified)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Year filter (required if no team specified)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class GetTeamSeasonStatsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.TeamSeasonStat })
  teamSeasonStats?: shared.TeamSeasonStat[];
}
