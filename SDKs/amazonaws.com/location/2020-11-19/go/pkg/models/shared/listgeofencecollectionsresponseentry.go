// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ListGeofenceCollectionsResponseEntryPricingPlanEnum - No longer used. Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
type ListGeofenceCollectionsResponseEntryPricingPlanEnum string

const (
	ListGeofenceCollectionsResponseEntryPricingPlanEnumRequestBasedUsage     ListGeofenceCollectionsResponseEntryPricingPlanEnum = "RequestBasedUsage"
	ListGeofenceCollectionsResponseEntryPricingPlanEnumMobileAssetTracking   ListGeofenceCollectionsResponseEntryPricingPlanEnum = "MobileAssetTracking"
	ListGeofenceCollectionsResponseEntryPricingPlanEnumMobileAssetManagement ListGeofenceCollectionsResponseEntryPricingPlanEnum = "MobileAssetManagement"
)

func (e ListGeofenceCollectionsResponseEntryPricingPlanEnum) ToPointer() *ListGeofenceCollectionsResponseEntryPricingPlanEnum {
	return &e
}

func (e *ListGeofenceCollectionsResponseEntryPricingPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = ListGeofenceCollectionsResponseEntryPricingPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListGeofenceCollectionsResponseEntryPricingPlanEnum: %v", v)
	}
}

// ListGeofenceCollectionsResponseEntry - Contains the geofence collection details.
type ListGeofenceCollectionsResponseEntry struct {
	CollectionName        string                                               `json:"CollectionName"`
	CreateTime            time.Time                                            `json:"CreateTime"`
	Description           string                                               `json:"Description"`
	PricingPlan           *ListGeofenceCollectionsResponseEntryPricingPlanEnum `json:"PricingPlan,omitempty"`
	PricingPlanDataSource *string                                              `json:"PricingPlanDataSource,omitempty"`
	UpdateTime            time.Time                                            `json:"UpdateTime"`
}
