"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class SoundTouchParametersAudioDirectionEnum(str, Enum):
    r"""Media stream to be altered, incoming or outgoing"""
    IN = 'in'
    OUT = 'out'


@dataclasses.dataclass
class SoundTouchParameters:
    r"""POST parameters"""
    
    call_uuid: str = dataclasses.field(metadata={'form': { 'field_name': 'CallUUID' }})
    r"""Unique identifier of the call to send DTMF to"""  
    audio_direction: Optional[SoundTouchParametersAudioDirectionEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AudioDirection' }})
    r"""Media stream to be altered, incoming or outgoing"""  
    pitch: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Pitch' }})
    r"""Adjust the pitch"""  
    pitch_octaves: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'PitchOctaves' }})
    r"""Adjust the pitch in octaves"""  
    pitch_semi_tones: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'PitchSemiTones' }})
    r"""Adjust the pitch in semitones"""  
    rate: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Rate' }})
    r"""Adjust the rate"""  
    tempo: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Tempo' }})
    r"""Adjust the tempo"""  
    