/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PaymentMethodSetupInfo {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applePay")
    public ApplePayInfo applePay;
    public PaymentMethodSetupInfo withApplePay(ApplePayInfo applePay) {
        this.applePay = applePay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bcmc")
    public BcmcInfo bcmc;
    public PaymentMethodSetupInfo withBcmc(BcmcInfo bcmc) {
        this.bcmc = bcmc;
        return this;
    }
    
    /**
     * The unique identifier of the business line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessLineId")
    public String businessLineId;
    public PaymentMethodSetupInfo withBusinessLineId(String businessLineId) {
        this.businessLineId = businessLineId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cartesBancaires")
    public CartesBancairesInfo cartesBancaires;
    public PaymentMethodSetupInfo withCartesBancaires(CartesBancairesInfo cartesBancaires) {
        this.cartesBancaires = cartesBancaires;
        return this;
    }
    
    /**
     * The list of countries where a payment method is available. By default, all countries supported by the payment method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countries")
    public String[] countries;
    public PaymentMethodSetupInfo withCountries(String[] countries) {
        this.countries = countries;
        return this;
    }
    
    /**
     * The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencies")
    public String[] currencies;
    public PaymentMethodSetupInfo withCurrencies(String[] currencies) {
        this.currencies = currencies;
        return this;
    }
    
    /**
     * The list of custom routing flags to route payment to the intended acquirer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customRoutingFlags")
    public String[] customRoutingFlags;
    public PaymentMethodSetupInfo withCustomRoutingFlags(String[] customRoutingFlags) {
        this.customRoutingFlags = customRoutingFlags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("giroPay")
    public GiroPayInfo giroPay;
    public PaymentMethodSetupInfo withGiroPay(GiroPayInfo giroPay) {
        this.giroPay = giroPay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googlePay")
    public GooglePayInfo googlePay;
    public PaymentMethodSetupInfo withGooglePay(GooglePayInfo googlePay) {
        this.googlePay = googlePay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("klarna")
    public KlarnaInfo klarna;
    public PaymentMethodSetupInfo withKlarna(KlarnaInfo klarna) {
        this.klarna = klarna;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mealVoucher_FR")
    public MealVoucherFRInfo mealVoucherFR;
    public PaymentMethodSetupInfo withMealVoucherFR(MealVoucherFRInfo mealVoucherFR) {
        this.mealVoucherFR = mealVoucherFR;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paypal")
    public PayPalInfo paypal;
    public PaymentMethodSetupInfo withPaypal(PayPalInfo paypal) {
        this.paypal = paypal;
        return this;
    }
    
    /**
     * Your reference for the payment method. Supported characters a-z, A-Z, 0-9.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;
    public PaymentMethodSetupInfo withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.
     * 
     * Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperInteraction")
    public PaymentMethodSetupInfoShopperInteractionEnum shopperInteraction;
    public PaymentMethodSetupInfo withShopperInteraction(PaymentMethodSetupInfoShopperInteractionEnum shopperInteraction) {
        this.shopperInteraction = shopperInteraction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sofort")
    public SofortInfo sofort;
    public PaymentMethodSetupInfo withSofort(SofortInfo sofort) {
        this.sofort = sofort;
        return this;
    }
    
    /**
     * The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeId")
    public String storeId;
    public PaymentMethodSetupInfo withStoreId(String storeId) {
        this.storeId = storeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("swish")
    public SwishInfo swish;
    public PaymentMethodSetupInfo withSwish(SwishInfo swish) {
        this.swish = swish;
        return this;
    }
    
    /**
     * Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public PaymentMethodSetupInfoTypeEnum type;
    public PaymentMethodSetupInfo withType(PaymentMethodSetupInfoTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vipps")
    public VippsInfo vipps;
    public PaymentMethodSetupInfo withVipps(VippsInfo vipps) {
        this.vipps = vipps;
        return this;
    }
    
}
