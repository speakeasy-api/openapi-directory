<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class VirtualTariff
{
    /**
     * Says how many of the active power is used in this tariff. This is calculated from the last meter values.
     * 
     * @var ?float $factor
     */
	#[\JMS\Serializer\Annotation\SerializedName('Factor')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $factor = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualTariffTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualTariffTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unit = null;
    
    /**
     * The Counter Value of this tariff
     * 
     * @var ?float $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('Value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $value = null;
    
	public function __construct()
	{
		$this->factor = null;
		$this->id = null;
		$this->name = null;
		$this->type = null;
		$this->unit = null;
		$this->value = null;
	}
}
