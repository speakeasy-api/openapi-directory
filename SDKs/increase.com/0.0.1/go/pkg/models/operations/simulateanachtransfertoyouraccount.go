// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SimulateAnAchTransferToYourAccountRequest struct {
	Request shared.SimulateAnAchTransferToYourAccountParameters `request:"mediaType=application/json"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnum = "429"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnumRateLimitedError SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON13 struct {
	Detail     string                                                               `json:"detail"`
	RetryAfter *int64                                                               `json:"retry_after,omitempty"`
	Status     SimulateAnAchTransferToYourAccountDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                               `json:"title"`
	Type       SimulateAnAchTransferToYourAccountDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnumFourHundredAndThree SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnum = "403"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnumPrivateFeatureError SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON12 struct {
	Detail string                                                               `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnumFourHundredAndFour SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnum = "404"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnumObjectNotFoundError SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON11 struct {
	Detail string                                                               `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnumFourHundred SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnum = "400"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnumMalformedRequestError SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON10 struct {
	Detail string                                                               `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnumFourHundred SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnum = "400"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnumInvalidParametersError SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                            `json:"errors,omitempty"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnumFourHundredAndNine SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnum = "409"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnumInvalidOperationError SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON8 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnumFourHundredAndOne SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnum = "401"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnumInvalidAPIKeyError SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON7 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnumFiveHundred SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnum = "500"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnumInternalServerError SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON6 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnumFourHundredAndThree SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnum = "403"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnumInsufficientPermissionsError SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON5 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnum = "422"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON4 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnumFourHundredAndNine SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnum = "409"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnumIdempotencyConflictError SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON3 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnumFourHundredAndThree SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnum = "403"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnumEnvironmentMismatchError SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON2 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnumFourHundredAndFour SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnum = "404"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnum string

const (
	SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type SimulateAnAchTransferToYourAccountDefaultApplicationJSON1 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateAnAchTransferToYourAccountDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateAnAchTransferToYourAccountDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type SimulateAnAchTransferToYourAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Inbound ACH Transfer Simulation Result
	InboundAchTransferSimulationResult *shared.InboundAchTransferSimulationResult
}
