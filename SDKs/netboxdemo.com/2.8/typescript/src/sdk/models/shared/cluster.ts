/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedClusterGroup } from "./nestedclustergroup";
import { NestedClusterType } from "./nestedclustertype";
import { NestedSite } from "./nestedsite";
import { NestedTenant } from "./nestedtenant";
import { Expose, Transform, Type } from "class-transformer";

export class Cluster extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "device_count" })
  deviceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => NestedClusterGroup)
  group?: NestedClusterGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => NestedSite)
  site?: NestedSite;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => NestedClusterType)
  type: NestedClusterType;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualmachine_count" })
  virtualmachineCount?: number;
}
