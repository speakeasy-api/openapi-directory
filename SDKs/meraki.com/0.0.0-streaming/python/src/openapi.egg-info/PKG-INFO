Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/meraki.com/0.0.0-streaming/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK(
    security=shared.Security(
        meraki_api_key="YOUR_API_KEY_HERE",
    ),
)


req = operations.GetOrganizationAPIRequestsRequest(
    admin_id="corrupti",
    ending_before="provident",
    method="distinctio",
    organization_id="quibusdam",
    path="unde",
    per_page=857946,
    response_code=544883,
    source_ip="illum",
    starting_after="vel",
    t0="error",
    t1="deserunt",
    timespan=3843.82,
)
    
res = s.api_usage.get_organization_api_requests(req)

if res.get_organization_api_requests_200_application_json_objects is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### api_usage

* `get_organization_api_requests` - List the API requests made by an organization
* `get_organization_api_requests_overview` - Return an aggregated overview of API requests data

### action_batches

* `create_organization_action_batch` - Create an action batch
* `delete_organization_action_batch` - Delete an action batch
* `get_organization_action_batches` - Return the list of action batches in the organization
* `update_organization_action_batch` - Update an action batch

### admins

* `create_organization_admin` - Create a new dashboard administrator
* `delete_organization_admin` - Revoke all access for a dashboard administrator within this organization
* `get_organization_admins` - List the dashboard administrators in this organization
* `update_organization_admin` - Update an administrator

### alert_settings

* `get_network_alert_settings` - Return the alert configuration for this network
* `update_network_alert_settings` - Update the alert configuration for this network

### bluetooth_clients

* `get_network_bluetooth_client` - Return a Bluetooth client
* `get_network_bluetooth_clients` - List the Bluetooth clients seen by APs in this network

### bluetooth_settings

* `get_network_bluetooth_settings` - Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.
* `update_device_wireless_bluetooth_settings` - Update the bluetooth settings for a wireless device
* `update_network_bluetooth_settings` - Update the Bluetooth settings for a network

### camera_quality_retention_profiles

* `create_network_camera_quality_retention_profile` - Creates new quality retention profile for this network.
* `delete_network_camera_quality_retention_profile` - Delete an existing quality retention profile for this network.
* `get_network_camera_quality_retention_profile` - Retrieve a single quality retention profile
* `get_network_camera_quality_retention_profiles` - List the quality retention profiles for this network
* `update_network_camera_quality_retention_profile` - Update an existing quality retention profile for this network.

### cameras

* `generate_network_camera_snapshot` - Generate a snapshot of what the camera sees at the specified time and return a link to that image.
* `get_device_camera_quality_and_retention_settings` - Returns quality and retention settings for the given camera
* `get_device_camera_video_settings` - Returns video settings for the given camera
* `get_network_camera_schedules` - Returns a list of all camera recording schedules.
* `get_network_camera_video_link` - Returns video link to the specified camera
* `update_device_camera_quality_and_retention_settings` - Update quality and retention settings for the given camera
* `update_device_camera_video_settings` - Update video settings for the given camera

### change_log

* `get_organization_configuration_changes` - View the Change Log for your organization

### clients

* `get_device_clients` - List the clients of a device, up to a maximum of a month ago
* `get_network_client` - Return the client associated with the given identifier
* `get_network_client_events` - Return the events associated with this client
* `get_network_client_latency_history` - Return the latency history for a client
* `get_network_client_policy` - Return the policy assigned to a client on the network
* `get_network_client_splash_authorization_status` - Return the splash authorization for a client, for each SSID they've associated with through splash
* `get_network_client_usage_history` - Return the client's daily usage history
* `get_network_clients` - List the clients that have used this network in the timespan
* `provision_network_clients` - Provisions a client with a name and policy
* `update_network_client_policy` - Update the policy assigned to a client on the network
* `update_network_client_splash_authorization_status` - Update a client's splash authorization

### config_templates

* `delete_organization_config_template` - Remove a configuration template
* `get_organization_config_templates` - List the configuration templates for this organization

### content_filtering_categories

* `get_network_content_filtering_categories` - List all available content filtering categories for an MX network

### content_filtering_rules

* `get_network_content_filtering` - Return the content filtering settings for an MX network
* `update_network_content_filtering` - Update the content filtering settings for an MX network

### devices

* `claim_network_devices` - Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requests against that device to succeed)
* `cycle_device_switch_ports` - Cycle a set of switch ports
* `get_network_device` - Return a single device
* `get_network_device_loss_and_latency_history` - Get the uplink loss percentage and latency in milliseconds for a wired network device.
* `get_network_device_performance` - Return the performance score for a single MX
* `get_network_device_uplink` - Return the uplink information for a device.
* `get_network_devices` - List the devices in a network
* `get_organization_devices` - List the devices in an organization
* `reboot_network_device` - Reboot a device
* `remove_network_device` - Remove a single device
* `update_network_device` - Update the attributes of a device

### events

* `get_network_events` - List the events for the network
* `get_network_events_event_types` - List the event type to human-readable description

### firewalled_services

* `get_network_firewalled_service` - Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')
* `get_network_firewalled_services` - List the appliance services and their accessibility rules
* `update_network_firewalled_service` - Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')

### floor_plans

* `create_network_floor_plan` - Upload a floor plan
* `delete_network_floor_plan` - Destroy a floor plan
* `get_network_floor_plan` - Find a floor plan by ID
* `get_network_floor_plans` - List the floor plans that belong to your network
* `update_network_floor_plan` - Update a floor plan's geolocation and other meta data

### intrusion_settings

* `get_network_security_intrusion_settings` - Returns all supported intrusion settings for an MX network
* `get_organization_security_intrusion_settings` - Returns all supported intrusion settings for an organization
* `update_network_security_intrusion_settings` - Set the supported intrusion settings for an MX network
* `update_organization_security_intrusion_settings` - Sets supported intrusion settings for an organization

### licenses

* `assign_organization_licenses_seats` - Assign SM seats to a network
* `get_organization_license` - Display a license
* `get_organization_license_state` - Return an overview of the license state for an organization
* `get_organization_licenses` - List the licenses for an organization
* `move_organization_licenses_seats` - Move SM seats to another organization
* `renew_organization_licenses_seats` - Renew SM seats of a license

### link_aggregations

* `create_network_switch_link_aggregation` - Create a link aggregation group
* `delete_network_switch_link_aggregation` - Split a link aggregation group into separate ports
* `get_network_switch_link_aggregations` - List link aggregation groups
* `update_network_switch_link_aggregation` - Update a link aggregation group

### mg_lan_settings

* `get_device_cellular_gateway_settings` - Show the LAN Settings of a MG
* `update_device_cellular_gateway_settings` - Update the LAN Settings for a single MG.

### mg_port_forwarding_rules

* `get_device_cellular_gateway_settings_port_forwarding_rules` - Returns the port forwarding rules for a single MG.
* `update_device_cellular_gateway_settings_port_forwarding_rules` - Updates the port forwarding rules for a single MG.

### mr_l3_firewall

* `get_network_ssid_l3_firewall_rules` - Return the L3 firewall rules for an SSID on an MR network
* `update_network_ssid_l3_firewall_rules` - Update the L3 firewall rules of an SSID on an MR network

### mv_sense

* `get_device_camera_analytics_live` - Returns live state from camera of analytics zones
* `get_device_camera_analytics_overview` - Returns an overview of aggregate analytics data for a timespan
* `get_device_camera_analytics_recent` - Returns most recent record for analytics zones
* `get_device_camera_analytics_zone_history` - Return historical records for analytic zones
* `get_device_camera_analytics_zones` - Returns all configured analytic zones for this camera

### mx_1_1_nat_rules

* `get_network_one_to_one_nat_rules` - Return the 1:1 NAT mapping rules for an MX network
* `update_network_one_to_one_nat_rules` - Set the 1:1 NAT mapping rules for an MX network

### mx_1_many_nat_rules

* `get_network_one_to_many_nat_rules` - Return the 1:Many NAT mapping rules for an MX network
* `update_network_one_to_many_nat_rules` - Set the 1:Many NAT mapping rules for an MX network

### mx_l3_inbound_firewall

* `get_network_appliance_firewall_inbound_firewall_rules` - Return the inbound firewall rules for an MX network
* `update_network_appliance_firewall_inbound_firewall_rules` - Update the inbound firewall rules of an MX network

### mx_l3_outbound_firewall

* `get_network_l3_firewall_rules` - Return the L3 firewall rules for an MX network
* `update_network_l3_firewall_rules` - Update the L3 firewall rules of an MX network

### mx_l7_application_categories

* `get_network_l7_firewall_rules_application_categories` - Return the L7 firewall application categories and their associated applications for an MX network

### mx_l7_firewall

* `get_network_l7_firewall_rules` - List the MX L7 firewall rules for an MX network
* `update_network_l7_firewall_rules` - Update the MX L7 firewall rules for an MX network

### mx_vlan_ports

* `get_network_appliance_port` - Return per-port VLAN settings for a single MX port.
* `get_network_appliance_ports` - List per-port VLAN settings for all ports of a MX.
* `update_network_appliance_port` - Update the per-port VLAN settings for a single MX port.

### mx_vpn_firewall

* `get_organization_vpn_firewall_rules` - Return the firewall rules for an organization's site-to-site VPN
* `update_organization_vpn_firewall_rules` - Update the firewall rules of an organization's site-to-site VPN

### mx_cellular_firewall

* `get_network_cellular_firewall_rules` - Return the cellular firewall rules for an MX network
* `update_network_cellular_firewall_rules` - Update the cellular firewall rules of an MX network

### mx_port_forwarding_rules

* `get_network_port_forwarding_rules` - Return the port forwarding rules for an MX network
* `update_network_port_forwarding_rules` - Update the port forwarding rules for an MX network

### mx_static_routes

* `create_network_static_route` - Add a static route for an MX or teleworker network
* `delete_network_static_route` - Delete a static route from an MX or teleworker network
* `get_network_static_route` - Return a static route for an MX or teleworker network
* `get_network_static_routes` - List the static routes for an MX or teleworker network
* `update_network_static_route` - Update a static route for an MX or teleworker network

### mx_warm_spare_settings

* `get_network_warm_spare_settings` - Return MX warm spare settings
* `swap_network_warm_spare` - Swap MX primary and warm spare appliances
* `update_network_warm_spare_settings` - Update MX warm spare settings

### malware_settings

* `get_network_security_malware_settings` - Returns all supported malware settings for an MX network
* `update_network_security_malware_settings` - Set the supported malware settings for an MX network

### meraki_auth_users

* `get_network_meraki_auth_user` - Return the Meraki Auth splash or RADIUS user
* `get_network_meraki_auth_users` - List the splash or RADIUS users configured under Meraki Authentication for a network

### monitored_media_servers

* `create_organization_insight_monitored_media_server` - Add a media server to be monitored for this organization
* `delete_organization_insight_monitored_media_server` - Delete a monitored media server from this organization
* `get_organization_insight_monitored_media_server` - Return a monitored media server for this organization
* `get_organization_insight_monitored_media_servers` - List the monitored media servers for this organization
* `update_organization_insight_monitored_media_server` - Update a monitored media server for this organization

### named_tag_scope

* `create_network_sm_target_group` - Add a target group
* `delete_network_sm_target_group` - Delete a target group from a network
* `get_network_sm_target_group` - Return a target group
* `get_network_sm_target_groups` - List the target groups in this network
* `update_network_sm_target_group` - Update a target group

### networks

* `bind_network` - Bind a network to a template.
* `combine_organization_networks` - Combine multiple networks into a single network
* `create_organization_network` - Create a network
* `delete_network` - Delete a network
* `get_network` - Return a network
* `get_network_air_marshal` - List Air Marshal scan results from a network
* `get_network_site_to_site_vpn` - Return the site-to-site VPN settings of a network
* `get_network_traffic` - Return the traffic analysis data for this network
* `get_organization_networks` - List the networks in an organization
* `split_network` - Split a combined network into individual networks for each type of device
* `unbind_network` - Unbind a network from a template.
* `update_network` - Update a network
* `update_network_site_to_site_vpn` - Update the site-to-site VPN settings of a network

### open_api_spec

* `get_organization_openapi_spec` - Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON

### organizations

* `claim_into_organization` - Claim a list of devices, licenses, and/or orders into an organization
* `clone_organization` - Create a new organization by cloning the addressed organization
* `get_organization` - Return an organization
* `get_organization_device_statuses` - List the status of every Meraki device in the organization
* `get_organization_inventory` - Return the inventory for an organization
* `get_organization_third_party_vpn_peers` - Return the third party VPN peers for an organization
* `get_organization_uplinks_loss_and_latency` - Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago
* `get_organizations` - List the organizations that the user has privileges on
* `update_organization_third_party_vpn_peers` - Update the third party VPN peers for an organization

### pii

* `create_network_pii_request` - Submit a new delete or restrict processing PII request
* `delete_network_pii_request` - Delete a restrict processing PII request
* `get_network_pii_pii_keys` - List the keys required to access Personally Identifiable Information (PII) for a given identifier
* `get_network_pii_request` - Return a PII request
* `get_network_pii_requests` - List the PII requests for this network or organization
* `get_network_pii_sm_devices_for_key` - Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier
* `get_network_pii_sm_owners_for_key` - Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier

### radio_settings

* `create_network_wireless_rf_profile` - Creates new RF profile for this network
* `delete_network_wireless_rf_profile` - Delete a RF Profile
* `get_network_wireless_rf_profile` - Return a RF profile
* `get_network_wireless_rf_profiles` - List the non-basic RF profiles for this network
* `update_network_wireless_rf_profile` - Updates specified RF profile for this network

### saml_roles

* `create_organization_saml_role` - Create a SAML role
* `get_organization_saml_role` - Return a SAML role
* `get_organization_saml_roles` - List the SAML roles for this organization
* `update_organization_saml_role` - Update a SAML role

### sm

* `checkin_network_sm_devices` - Force check-in a set of devices
* `create_network_sm_bypass_activation_lock_attempt` - Bypass activation lock attempt
* `get_network_sm_bypass_activation_lock_attempt` - Bypass activation lock attempt status
* `get_network_sm_cellular_usage_history` - Return the client's daily cellular data usage history
* `get_network_sm_certs` - List the certs on a device
* `get_network_sm_connectivity` - Returns historical connectivity data (whether a device is regularly checking in to Dashboard).
* `get_network_sm_desktop_logs` - Return historical records of various Systems Manager network connection details for desktop devices.
* `get_network_sm_device_command_logs` - Return historical records of commands sent to Systems Manager devices
* `get_network_sm_device_profiles` - Get the profiles associated with a device
* `get_network_sm_devices` - List the devices enrolled in an SM network with various specified fields and filters
* `get_network_sm_network_adapters` - List the network adapters of a device
* `get_network_sm_performance_history` - Return historical records of various Systems Manager client metrics for desktop devices.
* `get_network_sm_profiles` - List all the profiles in the network
* `get_network_sm_restrictions` - List the restrictions on a device
* `get_network_sm_security_centers` - List the security centers on a device
* `get_network_sm_softwares` - Get a list of softwares associated with a device
* `get_network_sm_user_device_profiles` - Get the profiles associated with a user
* `get_network_sm_user_softwares` - Get a list of softwares associated with a user
* `get_network_sm_users` - List the owners in an SM network with various specified fields and filters
* `get_network_sm_wlan_lists` - List the saved SSID names on a device
* `lock_network_sm_devices` - Lock a set of devices
* `refresh_network_sm_device_details` - Refresh the details of a device
* `unenroll_network_sm_device` - Unenroll a device
* `update_network_sm_device_fields` - Modify the fields of a device
* `update_network_sm_devices_tags` - Add, delete, or update the tags of a set of devices
* `wipe_network_sm_device` - Wipe a device

### snmp_settings

* `get_network_snmp_settings` - Return the SNMP settings for a network
* `get_organization_snmp` - Return the SNMP settings for an organization

### ssi_ds

* `get_network_device_wireless_status` - Return the SSID statuses of an access point
* `get_network_ssid` - Return a single SSID
* `get_network_ssids` - List the SSIDs in a network
* `update_network_ssid` - Update the attributes of an SSID

### security_events

* `get_network_security_events` - List the security events (intrusion detection only) for a network
* `get_organization_security_events` - List the security events (intrusion detection only) for an organization

### splash_login_attempts

* `get_network_splash_login_attempts` - List the splash login attempts for a network

### splash_settings

* `get_network_ssid_splash_settings` - Display the splash page settings for the given SSID
* `update_network_ssid_splash_settings` - Modify the splash page settings for the given SSID

### switch_access_policies

* `get_network_access_policies` - List the access policies for this network

### switch_port_schedules

* `create_network_switch_port_schedule` - Add a switch port schedule
* `delete_network_switch_port_schedule` - Delete a switch port schedule
* `get_network_switch_port_schedules` - List switch port schedules
* `update_network_switch_port_schedule` - Update a switch port schedule

### switch_ports

* `get_device_switch_port_statuses` - Return the status for all the ports of a switch
* `get_device_switch_port_statuses_packets` - Return the packet counters for all the ports of a switch

### switch_profiles

* `get_organization_config_template_switch_profiles` - List the switch profiles for your switch template configuration

### switch_settings

* `create_network_switch_settings_qos_rule` - Add a quality of service rule
* `delete_network_switch_settings_qos_rule` - Delete a quality of service rule
* `get_network_switch_settings` - Returns the switch network settings
* `get_network_switch_settings_mtu` - Return the MTU configuration
* `get_network_switch_settings_multicast` - Return multicast settings for a network
* `get_network_switch_settings_qos_rule` - Return a quality of service rule
* `get_network_switch_settings_qos_rules` - List quality of service rules
* `get_network_switch_settings_qos_rules_order` - Return the quality of service rule IDs by order in which they will be processed by the switch
* `get_network_switch_settings_storm_control` - Return the storm control configuration for a switch network
* `update_network_switch_settings` - Update switch network settings
* `update_network_switch_settings_mtu` - Update the MTU configuration
* `update_network_switch_settings_multicast` - Update multicast settings for a network
* `update_network_switch_settings_qos_rule` - Update a quality of service rule
* `update_network_switch_settings_qos_rules_order` - Update the order in which the rules should be processed by the switch
* `update_network_switch_settings_storm_control` - Update the storm control configuration for a switch network

### switch_stacks

* `add_network_switch_stack` - Add a switch to a stack
* `create_network_switch_stack` - Create a stack
* `delete_network_switch_stack` - Delete a stack
* `get_network_switch_stack` - Show a switch stack
* `get_network_switch_stacks` - List the switch stacks in a network
* `remove_network_switch_stack` - Remove a switch from a stack

### syslog_servers

* `get_network_syslog_servers` - List the syslog servers for a network
* `update_network_syslog_servers` - Update the syslog servers for a network

### traffic_shaping_uplink_settings

* `get_network_uplink_settings` - Returns the uplink settings for your MX network.
* `update_network_uplink_settings` - Updates the uplink settings for your MX network.

### vla_ns

* `create_network_vlan` - Add a VLAN
* `delete_network_vlan` - Delete a VLAN from a network
* `get_network_vlan` - Return a VLAN
* `get_network_vlans` - List the VLANs for an MX network
* `get_network_vlans_enabled_state` - Returns the enabled status of VLANs for the network
* `update_network_vlan` - Update a VLAN
* `update_network_vlans_enabled_state` - Enable/Disable VLANs for the given network

### wireless_health

* `get_network_client_connection_stats` - Aggregated connectivity info for a given client on this network
* `get_network_client_latency_stats` - Aggregated latency info for a given client on this network
* `get_network_clients_connection_stats` - Aggregated connectivity info for this network, grouped by clients
* `get_network_clients_latency_stats` - Aggregated latency info for this network, grouped by clients
* `get_network_connection_stats` - Aggregated connectivity info for this network
* `get_network_device_connection_stats` - Aggregated connectivity info for a given AP on this network
* `get_network_device_latency_stats` - Aggregated latency info for a given AP on this network
* `get_network_devices_connection_stats` - Aggregated connectivity info for this network, grouped by node
* `get_network_devices_latency_stats` - Aggregated latency info for this network, grouped by node
* `get_network_failed_connections` - List of all failed client connection events on this network in a given time range
* `get_network_latency_stats` - Aggregated latency info for this network

### wireless_settings

* `get_network_wireless_settings` - Return the wireless settings for a network
* `update_network_wireless_settings` - Update the wireless settings for a network
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
