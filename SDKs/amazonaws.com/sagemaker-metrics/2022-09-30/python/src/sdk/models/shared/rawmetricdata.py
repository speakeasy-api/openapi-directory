"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RawMetricData:
    r"""The raw metric data to associate with the resource."""
    
    metric_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricName') }})  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Value') }})  
    step: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Step'), 'exclude': lambda f: f is None }})  
    