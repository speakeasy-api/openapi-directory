// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ContactcenterinsightsProjectsLocationsConversationsListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// ContactcenterinsightsProjectsLocationsConversationsListViewEnum - The level of details of the conversation. Default is `BASIC`.
type ContactcenterinsightsProjectsLocationsConversationsListViewEnum string

const (
	ContactcenterinsightsProjectsLocationsConversationsListViewEnumConversationViewUnspecified ContactcenterinsightsProjectsLocationsConversationsListViewEnum = "CONVERSATION_VIEW_UNSPECIFIED"
	ContactcenterinsightsProjectsLocationsConversationsListViewEnumFull                        ContactcenterinsightsProjectsLocationsConversationsListViewEnum = "FULL"
	ContactcenterinsightsProjectsLocationsConversationsListViewEnumBasic                       ContactcenterinsightsProjectsLocationsConversationsListViewEnum = "BASIC"
)

func (e ContactcenterinsightsProjectsLocationsConversationsListViewEnum) ToPointer() *ContactcenterinsightsProjectsLocationsConversationsListViewEnum {
	return &e
}

func (e *ContactcenterinsightsProjectsLocationsConversationsListViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONVERSATION_VIEW_UNSPECIFIED":
		fallthrough
	case "FULL":
		fallthrough
	case "BASIC":
		*e = ContactcenterinsightsProjectsLocationsConversationsListViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactcenterinsightsProjectsLocationsConversationsListViewEnum: %v", v)
	}
}

type ContactcenterinsightsProjectsLocationsConversationsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. The parent resource of the conversation.
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// The level of details of the conversation. Default is `BASIC`.
	View *ContactcenterinsightsProjectsLocationsConversationsListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type ContactcenterinsightsProjectsLocationsConversationsListResponse struct {
	ContentType string
	// Successful response
	GoogleCloudContactcenterinsightsV1ListConversationsResponse *shared.GoogleCloudContactcenterinsightsV1ListConversationsResponse
	StatusCode                                                  int
	RawResponse                                                 *http.Response
}
