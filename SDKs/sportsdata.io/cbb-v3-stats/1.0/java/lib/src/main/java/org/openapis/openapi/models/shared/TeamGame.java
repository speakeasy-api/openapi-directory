/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamGame {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assists")
    public Long assists;
    public TeamGame withAssists(Long assists) {
        this.assists = assists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistsPercentage")
    public Double assistsPercentage;
    public TeamGame withAssistsPercentage(Double assistsPercentage) {
        this.assistsPercentage = assistsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedShots")
    public Long blockedShots;
    public TeamGame withBlockedShots(Long blockedShots) {
        this.blockedShots = blockedShots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlocksPercentage")
    public Double blocksPercentage;
    public TeamGame withBlocksPercentage(Double blocksPercentage) {
        this.blocksPercentage = blocksPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferenceLosses")
    public Long conferenceLosses;
    public TeamGame withConferenceLosses(Long conferenceLosses) {
        this.conferenceLosses = conferenceLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConferenceWins")
    public Long conferenceWins;
    public TeamGame withConferenceWins(Long conferenceWins) {
        this.conferenceWins = conferenceWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;
    public TeamGame withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;
    public TeamGame withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefensiveRebounds")
    public Long defensiveRebounds;
    public TeamGame withDefensiveRebounds(Long defensiveRebounds) {
        this.defensiveRebounds = defensiveRebounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefensiveReboundsPercentage")
    public Double defensiveReboundsPercentage;
    public TeamGame withDefensiveReboundsPercentage(Double defensiveReboundsPercentage) {
        this.defensiveReboundsPercentage = defensiveReboundsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EffectiveFieldGoalsPercentage")
    public Double effectiveFieldGoalsPercentage;
    public TeamGame withEffectiveFieldGoalsPercentage(Double effectiveFieldGoalsPercentage) {
        this.effectiveFieldGoalsPercentage = effectiveFieldGoalsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;
    public TeamGame withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;
    public TeamGame withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;
    public TeamGame withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;
    public TeamGame withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsAttempted")
    public Long fieldGoalsAttempted;
    public TeamGame withFieldGoalsAttempted(Long fieldGoalsAttempted) {
        this.fieldGoalsAttempted = fieldGoalsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsMade")
    public Long fieldGoalsMade;
    public TeamGame withFieldGoalsMade(Long fieldGoalsMade) {
        this.fieldGoalsMade = fieldGoalsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsPercentage")
    public Double fieldGoalsPercentage;
    public TeamGame withFieldGoalsPercentage(Double fieldGoalsPercentage) {
        this.fieldGoalsPercentage = fieldGoalsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FreeThrowsAttempted")
    public Long freeThrowsAttempted;
    public TeamGame withFreeThrowsAttempted(Long freeThrowsAttempted) {
        this.freeThrowsAttempted = freeThrowsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FreeThrowsMade")
    public Long freeThrowsMade;
    public TeamGame withFreeThrowsMade(Long freeThrowsMade) {
        this.freeThrowsMade = freeThrowsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FreeThrowsPercentage")
    public Double freeThrowsPercentage;
    public TeamGame withFreeThrowsPercentage(Double freeThrowsPercentage) {
        this.freeThrowsPercentage = freeThrowsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;
    public TeamGame withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;
    public TeamGame withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;
    public TeamGame withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalOpponentID")
    public Long globalOpponentID;
    public TeamGame withGlobalOpponentID(Long globalOpponentID) {
        this.globalOpponentID = globalOpponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;
    public TeamGame withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;
    public TeamGame withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsGameOver")
    public Boolean isGameOver;
    public TeamGame withIsGameOver(Boolean isGameOver) {
        this.isGameOver = isGameOver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Losses")
    public Long losses;
    public TeamGame withLosses(Long losses) {
        this.losses = losses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Minutes")
    public Long minutes;
    public TeamGame withMinutes(Long minutes) {
        this.minutes = minutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public TeamGame withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffensiveRebounds")
    public Long offensiveRebounds;
    public TeamGame withOffensiveRebounds(Long offensiveRebounds) {
        this.offensiveRebounds = offensiveRebounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffensiveReboundsPercentage")
    public Double offensiveReboundsPercentage;
    public TeamGame withOffensiveReboundsPercentage(Double offensiveReboundsPercentage) {
        this.offensiveReboundsPercentage = offensiveReboundsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;
    public TeamGame withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;
    public TeamGame withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PersonalFouls")
    public Long personalFouls;
    public TeamGame withPersonalFouls(Long personalFouls) {
        this.personalFouls = personalFouls;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerEfficiencyRating")
    public Double playerEfficiencyRating;
    public TeamGame withPlayerEfficiencyRating(Double playerEfficiencyRating) {
        this.playerEfficiencyRating = playerEfficiencyRating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Points")
    public Long points;
    public TeamGame withPoints(Long points) {
        this.points = points;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Possessions")
    public Double possessions;
    public TeamGame withPossessions(Double possessions) {
        this.possessions = possessions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Rebounds")
    public Long rebounds;
    public TeamGame withRebounds(Long rebounds) {
        this.rebounds = rebounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;
    public TeamGame withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;
    public TeamGame withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatID")
    public Long statID;
    public TeamGame withStatID(Long statID) {
        this.statID = statID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Steals")
    public Long steals;
    public TeamGame withSteals(Long steals) {
        this.steals = steals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StealsPercentage")
    public Double stealsPercentage;
    public TeamGame withStealsPercentage(Double stealsPercentage) {
        this.stealsPercentage = stealsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;
    public TeamGame withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;
    public TeamGame withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreePointersAttempted")
    public Long threePointersAttempted;
    public TeamGame withThreePointersAttempted(Long threePointersAttempted) {
        this.threePointersAttempted = threePointersAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreePointersMade")
    public Long threePointersMade;
    public TeamGame withThreePointersMade(Long threePointersMade) {
        this.threePointersMade = threePointersMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreePointersPercentage")
    public Double threePointersPercentage;
    public TeamGame withThreePointersPercentage(Double threePointersPercentage) {
        this.threePointersPercentage = threePointersPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalReboundsPercentage")
    public Double totalReboundsPercentage;
    public TeamGame withTotalReboundsPercentage(Double totalReboundsPercentage) {
        this.totalReboundsPercentage = totalReboundsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueShootingAttempts")
    public Double trueShootingAttempts;
    public TeamGame withTrueShootingAttempts(Double trueShootingAttempts) {
        this.trueShootingAttempts = trueShootingAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueShootingPercentage")
    public Double trueShootingPercentage;
    public TeamGame withTrueShootingPercentage(Double trueShootingPercentage) {
        this.trueShootingPercentage = trueShootingPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TurnOversPercentage")
    public Double turnOversPercentage;
    public TeamGame withTurnOversPercentage(Double turnOversPercentage) {
        this.turnOversPercentage = turnOversPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Turnovers")
    public Long turnovers;
    public TeamGame withTurnovers(Long turnovers) {
        this.turnovers = turnovers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointersAttempted")
    public Long twoPointersAttempted;
    public TeamGame withTwoPointersAttempted(Long twoPointersAttempted) {
        this.twoPointersAttempted = twoPointersAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointersMade")
    public Long twoPointersMade;
    public TeamGame withTwoPointersMade(Long twoPointersMade) {
        this.twoPointersMade = twoPointersMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointersPercentage")
    public Double twoPointersPercentage;
    public TeamGame withTwoPointersPercentage(Double twoPointersPercentage) {
        this.twoPointersPercentage = twoPointersPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;
    public TeamGame withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UsageRatePercentage")
    public Double usageRatePercentage;
    public TeamGame withUsageRatePercentage(Double usageRatePercentage) {
        this.usageRatePercentage = usageRatePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Wins")
    public Long wins;
    public TeamGame withWins(Long wins) {
        this.wins = wins;
        return this;
    }
    
}
