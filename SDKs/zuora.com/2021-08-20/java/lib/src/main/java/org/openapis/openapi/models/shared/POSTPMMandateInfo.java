/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * POSTPMMandateInfo - The mandate information for the Credit Card, ACH, or Bank Transfer payment method.
 * 
 * The following mandate fields are specific to the ACH and Bank Transfer payment methods:
 * * `mandateId`
 * * `mandateReceivedStatus`
 * * `existingMandateStatus`
 * * `mandateCreationDate`
 * * `mandateUpdateDate`
 * * `mandateStatus`
 * * `mandateReason`
 * 
 * The following mandate fields are specific to the Credit Card payment method:
 * * `mitTransactionId`
 * * `mitProfileAgreedOn`
 * * `mitConsentAgreementRef`
 * * `mitConsentAgreementSrc`
 * * `mitProfileType`
 * * `mitProfileAction`
 * 
 */
public class POSTPMMandateInfo {
    /**
     * Indicates whether the mandate is an existing mandate.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("existingMandateStatus")
    public POSTPMMandateInfoExistingMandateStatusEnum existingMandateStatus;
    public POSTPMMandateInfo withExistingMandateStatus(POSTPMMandateInfoExistingMandateStatusEnum existingMandateStatus) {
        this.existingMandateStatus = existingMandateStatus;
        return this;
    }
    
    /**
     * The date on which the mandate was created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("mandateCreationDate")
    public LocalDate mandateCreationDate;
    public POSTPMMandateInfo withMandateCreationDate(LocalDate mandateCreationDate) {
        this.mandateCreationDate = mandateCreationDate;
        return this;
    }
    
    /**
     * The mandate ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandateId")
    public String mandateId;
    public POSTPMMandateInfo withMandateId(String mandateId) {
        this.mandateId = mandateId;
        return this;
    }
    
    /**
     * The reason of the mandate from the gateway side.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandateReason")
    public String mandateReason;
    public POSTPMMandateInfo withMandateReason(String mandateReason) {
        this.mandateReason = mandateReason;
        return this;
    }
    
    /**
     * Indicates whether the mandate is received from the gateway
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandateReceivedStatus")
    public POSTPMMandateInfoMandateReceivedStatusEnum mandateReceivedStatus;
    public POSTPMMandateInfo withMandateReceivedStatus(POSTPMMandateInfoMandateReceivedStatusEnum mandateReceivedStatus) {
        this.mandateReceivedStatus = mandateReceivedStatus;
        return this;
    }
    
    /**
     * The status of the mandate from the gateway side.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandateStatus")
    public String mandateStatus;
    public POSTPMMandateInfo withMandateStatus(String mandateStatus) {
        this.mandateStatus = mandateStatus;
        return this;
    }
    
    /**
     * The date on which the mandate was updated.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("mandateUpdateDate")
    public LocalDate mandateUpdateDate;
    public POSTPMMandateInfo withMandateUpdateDate(LocalDate mandateUpdateDate) {
        this.mandateUpdateDate = mandateUpdateDate;
        return this;
    }
    
    /**
     * Reference for the consent agreement that you have established with the customer.  
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mitConsentAgreementRef")
    public String mitConsentAgreementRef;
    public POSTPMMandateInfo withMitConsentAgreementRef(String mitConsentAgreementRef) {
        this.mitConsentAgreementRef = mitConsentAgreementRef;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mitConsentAgreementSrc")
    public POSTPMMandateInfoMitConsentAgreementSrcEnum mitConsentAgreementSrc;
    public POSTPMMandateInfo withMitConsentAgreementSrc(POSTPMMandateInfoMitConsentAgreementSrcEnum mitConsentAgreementSrc) {
        this.mitConsentAgreementSrc = mitConsentAgreementSrc;
        return this;
    }
    
    /**
     * Specifies how Zuora activates the stored credential profile. Only applicable if you set the `status` field to `Active`.
     * 
     * * `Activate` (default) - Use this value if you are creating the stored credential profile after receiving the customer's consent.
     * 
     *   Zuora will create the stored credential profile then send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile. If the CIT succeeds, the status of the stored credential profile will be `Active`. If the CIT does not succeed, Zuora will not create a stored credential profile.
     *   
     *   If the payment gateway does not support the stored credential transaction framework, the status of the stored credential profile will be `Agreed`.
     * 
     * 
     * * `Persist` - Use this value if the stored credential profile represents a stored credential profile in an external system. The status of the payment method's stored credential profile will be `Active`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mitProfileAction")
    public POSTPMMandateInfoMitProfileActionEnum mitProfileAction;
    public POSTPMMandateInfo withMitProfileAction(POSTPMMandateInfoMitProfileActionEnum mitProfileAction) {
        this.mitProfileAction = mitProfileAction;
        return this;
    }
    
    /**
     * The date on which the stored credential profile is agreed. The date format is `yyyy-mm-dd`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("mitProfileAgreedOn")
    public LocalDate mitProfileAgreedOn;
    public POSTPMMandateInfo withMitProfileAgreedOn(LocalDate mitProfileAgreedOn) {
        this.mitProfileAgreedOn = mitProfileAgreedOn;
        return this;
    }
    
    /**
     * Indicates the type of the stored credential profile.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mitProfileType")
    public String mitProfileType;
    public POSTPMMandateInfo withMitProfileType(String mitProfileType) {
        this.mitProfileType = mitProfileType;
        return this;
    }
    
    /**
     * Specifies the ID of the transaction. Only applicable if you set the `mitProfileAction` field to `Persist`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mitTransactionId")
    public String mitTransactionId;
    public POSTPMMandateInfo withMitTransactionId(String mitTransactionId) {
        this.mitTransactionId = mitTransactionId;
        return this;
    }
    
}
