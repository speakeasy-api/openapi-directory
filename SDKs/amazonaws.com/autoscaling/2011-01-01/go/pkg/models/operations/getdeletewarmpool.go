// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteWarmPoolActionEnum
type GETDeleteWarmPoolActionEnum string

const (
	GETDeleteWarmPoolActionEnumDeleteWarmPool GETDeleteWarmPoolActionEnum = "DeleteWarmPool"
)

func (e *GETDeleteWarmPoolActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteWarmPool":
		*e = GETDeleteWarmPoolActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteWarmPoolActionEnum: %s", s)
	}
}

// GETDeleteWarmPoolVersionEnum
type GETDeleteWarmPoolVersionEnum string

const (
	GETDeleteWarmPoolVersionEnumTwoThousandAndEleven0101 GETDeleteWarmPoolVersionEnum = "2011-01-01"
)

func (e *GETDeleteWarmPoolVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETDeleteWarmPoolVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteWarmPoolVersionEnum: %s", s)
	}
}

type GETDeleteWarmPoolQueryParams struct {
	Action GETDeleteWarmPoolActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// Specifies that the warm pool is to be deleted along with all of its associated instances, without waiting for all instances to be terminated. This parameter also deletes any outstanding lifecycle actions associated with the warm pool instances.
	ForceDelete *bool                        `queryParam:"style=form,explode=true,name=ForceDelete"`
	Version     GETDeleteWarmPoolVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteWarmPoolHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteWarmPoolRequest struct {
	QueryParams GETDeleteWarmPoolQueryParams
	Headers     GETDeleteWarmPoolHeaders
}

type GETDeleteWarmPoolResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
