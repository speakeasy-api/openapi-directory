/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Type } from "class-transformer";

/**
 * The status of a commit.
 */
export class Status extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "context" })
  context: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => NullableSimpleUser)
  creator: NullableSimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "target_url" })
  targetUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
