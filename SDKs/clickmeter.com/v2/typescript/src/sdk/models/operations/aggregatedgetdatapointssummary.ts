/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Direction of sort "asc" or "desc"
 */
export enum AggregatedGetDatapointsSummarySortDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * Status of datapoint ("deleted"/"active"/"paused"/"spam")
 */
export enum AggregatedGetDatapointsSummaryStatusEnum {
  Deleted = "deleted",
  Active = "active",
  Paused = "paused",
  Spam = "spam",
}

/**
 * Timeframe of the request. See list at $timeframeList
 */
export enum AggregatedGetDatapointsSummaryTimeFrameEnum {
  Today = "today",
  Yesterday = "yesterday",
  Last7 = "last7",
  Last30 = "last30",
  Lastmonth = "lastmonth",
  Currentmonth = "currentmonth",
  Previousmonth = "previousmonth",
  Last90 = "last90",
  Last120 = "last120",
  Last180 = "last180",
  Last12months = "last12months",
  Lastyear = "lastyear",
  Currentyear = "currentyear",
  Beginning = "beginning",
  Custom = "custom",
}

/**
 * Type of datapoint ("tl"/"tp")
 */
export enum AggregatedGetDatapointsSummaryTypeEnum {
  Tp = "tp",
  Tl = "tl",
}

export class AggregatedGetDatapointsSummaryRequest extends SpeakeasyBase {
  /**
   * Is the datapoint marked as favourite
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=favourite",
  })
  favourite?: boolean;

  /**
   * If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fromDay",
  })
  fromDay?: string;

  /**
   * Filter by this group id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=groupId",
  })
  groupId?: number;

  /**
   * Limit results to this number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Offset where to start from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Field to sort by
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortBy",
  })
  sortBy?: string;

  /**
   * Direction of sort "asc" or "desc"
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortDirection",
  })
  sortDirection?: AggregatedGetDatapointsSummarySortDirectionEnum;

  /**
   * Status of datapoint ("deleted"/"active"/"paused"/"spam")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: AggregatedGetDatapointsSummaryStatusEnum;

  /**
   * A comma separated list of tags you want to filter with.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  /**
   * Filter fields by this pattern
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=textSearch",
  })
  textSearch?: string;

  /**
   * Timeframe of the request. See list at $timeframeList
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeFrame",
  })
  timeFrame: AggregatedGetDatapointsSummaryTimeFrameEnum;

  /**
   * If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=toDay" })
  toDay?: string;

  /**
   * Type of datapoint ("tl"/"tp")
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type: AggregatedGetDatapointsSummaryTypeEnum;
}

export class AggregatedGetDatapointsSummaryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreDtoAggregatedAggregatedSummaryResult?: shared.ApiCoreDtoAggregatedAggregatedSummaryResult;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
