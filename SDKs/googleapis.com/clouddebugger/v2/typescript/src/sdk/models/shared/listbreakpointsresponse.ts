/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Breakpoint } from "./breakpoint";
import { Expose, Type } from "class-transformer";

/**
 * Response for listing breakpoints.
 */
export class ListBreakpointsResponse extends SpeakeasyBase {
  /**
   * List of breakpoints matching the request. The fields `id` and `location` are guaranteed to be set on each breakpoint. The fields: `stack_frames`, `evaluated_expressions` and `variable_table` are cleared on each breakpoint regardless of its status.
   */
  @SpeakeasyMetadata({ elemType: Breakpoint })
  @Expose({ name: "breakpoints" })
  @Type(() => Breakpoint)
  breakpoints?: Breakpoint[];

  /**
   * A wait token that can be used in the next call to `list` (REST) or `ListBreakpoints` (RPC) to block until the list of breakpoints has changes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextWaitToken" })
  nextWaitToken?: string;
}
