"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facets as shared_facets
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TotalValue:
    
    count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Count') }})
    r"""Value count."""  
    facets: shared_facets.Facets = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Facets') }})  
    max: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Max') }})
    r"""Value maximum."""  
    mean: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Mean') }})
    r"""Value mean."""  
    min: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Min') }})
    r"""Value minimum."""  
    missing: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Missing') }})
    r"""Missing values."""  
    std_dev: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StdDev') }})
    r"""Values standard deviation."""  
    sum: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sum') }})
    r"""Values sum."""  
    sum_of_squares: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SumOfSquares') }})
    r"""Values sum of squares"""  
    