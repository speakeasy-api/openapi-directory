"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import storelocation as shared_storelocation
from ..shared import storesplitconfiguration as shared_storesplitconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoreCreationWithMerchantCodeRequest:
    
    address: shared_storelocation.StoreLocation = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""Your description of the store."""  
    merchant_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantId') }})
    r"""The unique identifier of the merchant account that the store belongs to."""  
    phone_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumber') }})
    r"""The phone number of the store, including '+' and country code."""  
    shopper_statement: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shopperStatement') }})
    r"""The store name to be shown on the shopper's bank or credit card statement and on the shopper receipt.
    Maximum length: 22 characters; can't be all numbers.
    """  
    business_line_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessLineIds'), 'exclude': lambda f: f is None }})
    r"""The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
    If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
    """  
    external_reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalReferenceId'), 'exclude': lambda f: f is None }})
    r"""When using the Zip payment method: The location ID that Zip has assigned to your store."""  
    reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""Your reference to recognize the store by. Also known as the store code.
     Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).
    """  
    split_configuration: Optional[shared_storesplitconfiguration.StoreSplitConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('splitConfiguration'), 'exclude': lambda f: f is None }})  
    