<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateChannelTypeRequest
{
    /**
     * Enables automatic message moderation
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestAutoModerationEnum $automod
     */
	#[\JMS\Serializer\Annotation\SerializedName('automod')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestAutoModerationEnum>')]
    public CreateChannelTypeRequestAutoModerationEnum $automod;
    
    /**
     * Sets behavior of automatic moderation
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestAutoModerationBehaviorEnum $automodBehavior
     */
	#[\JMS\Serializer\Annotation\SerializedName('automod_behavior')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestAutoModerationBehaviorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateChannelTypeRequestAutoModerationBehaviorEnum $automodBehavior = null;
    
    /**
     * Name of the blocklist to use
     * 
     * @var ?string $blocklist
     */
	#[\JMS\Serializer\Annotation\SerializedName('blocklist')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $blocklist = null;
    
    /**
     * Sets behavior of blocklist
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestBlocklistBehaviorEnum $blocklistBehavior
     */
	#[\JMS\Serializer\Annotation\SerializedName('blocklist_behavior')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestBlocklistBehaviorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateChannelTypeRequestBlocklistBehaviorEnum $blocklistBehavior = null;
    
    /**
     * List of commands that channel supports
     * 
     * @var ?array<string> $commands
     */
	#[\JMS\Serializer\Annotation\SerializedName('commands')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $commands = null;
    
    /**
     * Connect events support
     * 
     * @var ?bool $connectEvents
     */
	#[\JMS\Serializer\Annotation\SerializedName('connect_events')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $connectEvents = null;
    
    /**
     * Enables custom events
     * 
     * @var ?bool $customEvents
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_events')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $customEvents = null;
    
    /**
     * $grants
     * 
     * @var ?array<string, array<string>> $grants
     */
	#[\JMS\Serializer\Annotation\SerializedName('grants')]
    #[\JMS\Serializer\Annotation\Type('array<string, array<string>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $grants = null;
    
    /**
     * Number of maximum message characters
     * 
     * @var ?float $maxMessageLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_message_length')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maxMessageLength = null;
    
    /**
     * Number of days to keep messages. 'infinite' disables retention
     * 
     * @var ?string $messageRetention
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_retention')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $messageRetention = null;
    
    /**
     * Enables mutes
     * 
     * @var ?bool $mutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('mutes')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $mutes = null;
    
    /**
     * Channel type name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * List of permissions for the channel type
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PolicyRequest> $permissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PolicyRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $permissions = null;
    
    /**
     * Enables push notifications
     * 
     * @var ?bool $pushNotifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('push_notifications')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pushNotifications = null;
    
    /**
     * Enables message reactions
     * 
     * @var ?bool $reactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('reactions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reactions = null;
    
    /**
     * Read events support
     * 
     * @var ?bool $readEvents
     */
	#[\JMS\Serializer\Annotation\SerializedName('read_events')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $readEvents = null;
    
    /**
     * Enables message replies (threads)
     * 
     * @var ?bool $replies
     */
	#[\JMS\Serializer\Annotation\SerializedName('replies')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $replies = null;
    
    /**
     * Enables message search
     * 
     * @var ?bool $search
     */
	#[\JMS\Serializer\Annotation\SerializedName('search')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $search = null;
    
    /**
     * Typing events support
     * 
     * @var ?bool $typingEvents
     */
	#[\JMS\Serializer\Annotation\SerializedName('typing_events')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $typingEvents = null;
    
    /**
     * Enables file uploads
     * 
     * @var ?bool $uploads
     */
	#[\JMS\Serializer\Annotation\SerializedName('uploads')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $uploads = null;
    
    /**
     * Enables URL enrichment
     * 
     * @var ?bool $urlEnrichment
     */
	#[\JMS\Serializer\Annotation\SerializedName('url_enrichment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $urlEnrichment = null;
    
	public function __construct()
	{
		$this->automod = \OpenAPI\OpenAPI\Models\Shared\CreateChannelTypeRequestAutoModerationEnum::DISABLED;
		$this->automodBehavior = null;
		$this->blocklist = null;
		$this->blocklistBehavior = null;
		$this->commands = null;
		$this->connectEvents = null;
		$this->customEvents = null;
		$this->grants = null;
		$this->maxMessageLength = null;
		$this->messageRetention = null;
		$this->mutes = null;
		$this->name = "";
		$this->permissions = null;
		$this->pushNotifications = null;
		$this->reactions = null;
		$this->readEvents = null;
		$this->replies = null;
		$this->search = null;
		$this->typingEvents = null;
		$this->uploads = null;
		$this->urlEnrichment = null;
	}
}
