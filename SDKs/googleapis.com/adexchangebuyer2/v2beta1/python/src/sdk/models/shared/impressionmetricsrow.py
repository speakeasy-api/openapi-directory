"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricvalue as shared_metricvalue
from ..shared import rowdimensions as shared_rowdimensions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImpressionMetricsRow:
    r"""The set of metrics that are measured in numbers of impressions, representing how many impressions with the specified dimension values were considered eligible at each stage of the bidding funnel."""
    
    available_impressions: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availableImpressions'), 'exclude': lambda f: f is None }})
    r"""A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled)."""  
    bid_requests: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bidRequests'), 'exclude': lambda f: f is None }})
    r"""A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled)."""  
    inventory_matches: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inventoryMatches'), 'exclude': lambda f: f is None }})
    r"""A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled)."""  
    responses_with_bids: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responsesWithBids'), 'exclude': lambda f: f is None }})
    r"""A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled)."""  
    row_dimensions: Optional[shared_rowdimensions.RowDimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowDimensions'), 'exclude': lambda f: f is None }})
    r"""A response may include multiple rows, breaking down along various dimensions. Encapsulates the values of all dimensions for a given row."""  
    successful_responses: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('successfulResponses'), 'exclude': lambda f: f is None }})
    r"""A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled)."""  
    