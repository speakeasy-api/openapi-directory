/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProviderInvoiceDatesDTO } from "./providerinvoicedatesdto";
import { Expose, Type } from "class-transformer";

export enum ProviderInvoiceDTOPaymentStatusEnum {
  NotPaid = "NOT_PAID",
  FullyPaid = "FULLY_PAID",
  Irrecoverable = "IRRECOVERABLE",
  PartiallyPaid = "PARTIALLY_PAID",
}

export enum ProviderInvoiceDTOStatusEnum {
  Postponed = "POSTPONED",
  ToBeSent = "TO_BE_SENT",
  Sent = "SENT",
  Confirmed = "CONFIRMED",
  BillCreated = "BILL_CREATED",
}

/**
 * Success
 */
export class ProviderInvoiceDTO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "currencyId" })
  currencyId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "dates" })
  @Type(() => ProviderInvoiceDatesDTO)
  dates?: ProviderInvoiceDatesDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "draftNumber" })
  draftNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "finalNumber" })
  finalNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "internalNumber" })
  internalNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jobsNetValue" })
  jobsNetValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "notesFromProvider" })
  notesFromProvider?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentStatus" })
  paymentStatus?: ProviderInvoiceDTOPaymentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ProviderInvoiceDTOStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "totalGross" })
  totalGross?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalGrossInWords" })
  totalGrossInWords?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalNetto" })
  totalNetto?: number;
}
