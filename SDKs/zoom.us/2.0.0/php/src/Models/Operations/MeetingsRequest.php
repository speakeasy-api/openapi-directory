<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class MeetingsRequest
{
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     * 
     * @var ?string $nextPageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=next_page_token')]
    public ?string $nextPageToken = null;
    
    /**
     * The page number of the current page in the returned records.
     * 
     * @var ?string $pageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page_number')]
    public ?string $pageNumber = null;
    
    /**
     * The number of records returned within a single API call.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page_size')]
    public ?int $pageSize = null;
    
    /**
     * The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of "Previous Meetings" and "Upcoming Meetings" displayed in the user's [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\MeetingsTypeEnum $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?MeetingsTypeEnum $type = null;
    
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     * 
     * @var string $userId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=userId')]
    public string $userId;
    
	public function __construct()
	{
		$this->nextPageToken = null;
		$this->pageNumber = null;
		$this->pageSize = null;
		$this->type = null;
		$this->userId = "";
	}
}
