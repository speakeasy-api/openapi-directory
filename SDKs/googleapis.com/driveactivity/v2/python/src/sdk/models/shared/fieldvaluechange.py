"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldvalue as shared_fieldvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FieldValueChange:
    r"""Change to a Field value."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The human-readable display name for this field."""  
    field_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldId'), 'exclude': lambda f: f is None }})
    r"""The ID of this field. Field IDs are unique within a Label."""  
    new_value: Optional[shared_fieldvalue.FieldValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newValue'), 'exclude': lambda f: f is None }})
    r"""Contains a value of a Field."""  
    old_value: Optional[shared_fieldvalue.FieldValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oldValue'), 'exclude': lambda f: f is None }})
    r"""Contains a value of a Field."""  
    