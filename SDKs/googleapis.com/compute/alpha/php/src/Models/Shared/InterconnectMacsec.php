<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InterconnectMacsec - Configuration information for enabling Media Access Control security (Macsec) on this Interconnect between Google and your on-premises router.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InterconnectMacsec
{
    /**
     * If set to true, the Interconnect will be configured with a should-secure MACsec security policy, that allows the Google router to fallback to cleartext traffic if the MKA session cannot be established. By default, the Interconnect will be configured with a must-secure security policy that drops all traffic if the MKA session cannot be established with your router.
     * 
     * @var ?bool $failOpen
     */
	#[\JMS\Serializer\Annotation\SerializedName('failOpen')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $failOpen = null;
    
    /**
     * Required. A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK will be generated for each key in the key chain. Google router will automatically pick the key with the most recent startTime when establishing or re-establishing a MACsec secure link.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InterconnectMacsecPreSharedKey> $preSharedKeys
     */
	#[\JMS\Serializer\Annotation\SerializedName('preSharedKeys')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InterconnectMacsecPreSharedKey>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $preSharedKeys = null;
    
	public function __construct()
	{
		$this->failOpen = null;
		$this->preSharedKeys = null;
	}
}
