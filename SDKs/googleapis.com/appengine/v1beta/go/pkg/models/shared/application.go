// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ApplicationDatabaseTypeEnum - The type of the Cloud Firestore or Cloud Datastore database associated with this application.
type ApplicationDatabaseTypeEnum string

const (
	ApplicationDatabaseTypeEnumDatabaseTypeUnspecified     ApplicationDatabaseTypeEnum = "DATABASE_TYPE_UNSPECIFIED"
	ApplicationDatabaseTypeEnumCloudDatastore              ApplicationDatabaseTypeEnum = "CLOUD_DATASTORE"
	ApplicationDatabaseTypeEnumCloudFirestore              ApplicationDatabaseTypeEnum = "CLOUD_FIRESTORE"
	ApplicationDatabaseTypeEnumCloudDatastoreCompatibility ApplicationDatabaseTypeEnum = "CLOUD_DATASTORE_COMPATIBILITY"
)

func (e ApplicationDatabaseTypeEnum) ToPointer() *ApplicationDatabaseTypeEnum {
	return &e
}

func (e *ApplicationDatabaseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DATABASE_TYPE_UNSPECIFIED":
		fallthrough
	case "CLOUD_DATASTORE":
		fallthrough
	case "CLOUD_FIRESTORE":
		fallthrough
	case "CLOUD_DATASTORE_COMPATIBILITY":
		*e = ApplicationDatabaseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationDatabaseTypeEnum: %v", v)
	}
}

// ApplicationServingStatusEnum - Serving status of this application.
type ApplicationServingStatusEnum string

const (
	ApplicationServingStatusEnumUnspecified    ApplicationServingStatusEnum = "UNSPECIFIED"
	ApplicationServingStatusEnumServing        ApplicationServingStatusEnum = "SERVING"
	ApplicationServingStatusEnumUserDisabled   ApplicationServingStatusEnum = "USER_DISABLED"
	ApplicationServingStatusEnumSystemDisabled ApplicationServingStatusEnum = "SYSTEM_DISABLED"
)

func (e ApplicationServingStatusEnum) ToPointer() *ApplicationServingStatusEnum {
	return &e
}

func (e *ApplicationServingStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED":
		fallthrough
	case "SERVING":
		fallthrough
	case "USER_DISABLED":
		fallthrough
	case "SYSTEM_DISABLED":
		*e = ApplicationServingStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationServingStatusEnum: %v", v)
	}
}

// Application - An Application resource contains the top-level configuration of an App Engine application.
type Application struct {
	// Google Apps authentication domain that controls which users can access this application.Defaults to open access for any Google Account.
	AuthDomain *string `json:"authDomain,omitempty"`
	// Output only. Google Cloud Storage bucket that can be used for storing files associated with this application. This bucket is associated with the application and can be used by the gcloud deployment commands.@OutputOnly
	CodeBucket *string `json:"codeBucket,omitempty"`
	// The type of the Cloud Firestore or Cloud Datastore database associated with this application.
	DatabaseType *ApplicationDatabaseTypeEnum `json:"databaseType,omitempty"`
	// Output only. Google Cloud Storage bucket that can be used by this application to store content.@OutputOnly
	DefaultBucket *string `json:"defaultBucket,omitempty"`
	// Cookie expiration policy for this application.
	DefaultCookieExpiration *string `json:"defaultCookieExpiration,omitempty"`
	// Output only. Hostname used to reach this application, as resolved by App Engine.@OutputOnly
	DefaultHostname *string `json:"defaultHostname,omitempty"`
	// HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. Up to 20 dispatch rules can be supported.
	DispatchRules []URLDispatchRule `json:"dispatchRules,omitempty"`
	// The feature specific settings to be used in the application. These define behaviors that are user configurable.
	FeatureSettings *FeatureSettings `json:"featureSettings,omitempty"`
	// Output only. The Google Container Registry domain used for storing managed build docker images for this application.
	GcrDomain *string `json:"gcrDomain,omitempty"`
	// Identity-Aware Proxy
	Iap *IdentityAwareProxy `json:"iap,omitempty"`
	// Identifier of the Application resource. This identifier is equivalent to the project ID of the Google Cloud Platform project where you want to deploy your application. Example: myapp.
	ID *string `json:"id,omitempty"`
	// Location from which this application runs. Application instances run out of the data centers in the specified location, which is also where all of the application's end user content is stored.Defaults to us-central.View the list of supported locations (https://cloud.google.com/appengine/docs/locations).
	LocationID *string `json:"locationId,omitempty"`
	// Output only. Full path to the Application resource in the API. Example: apps/myapp.@OutputOnly
	Name *string `json:"name,omitempty"`
	// The service account associated with the application. This is the app-level default identity. If no identity provided during create version, Admin API will fallback to this one.
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Serving status of this application.
	ServingStatus *ApplicationServingStatusEnum `json:"servingStatus,omitempty"`
}

// ApplicationInput - An Application resource contains the top-level configuration of an App Engine application.
type ApplicationInput struct {
	// Google Apps authentication domain that controls which users can access this application.Defaults to open access for any Google Account.
	AuthDomain *string `json:"authDomain,omitempty"`
	// The type of the Cloud Firestore or Cloud Datastore database associated with this application.
	DatabaseType *ApplicationDatabaseTypeEnum `json:"databaseType,omitempty"`
	// Cookie expiration policy for this application.
	DefaultCookieExpiration *string `json:"defaultCookieExpiration,omitempty"`
	// HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. Up to 20 dispatch rules can be supported.
	DispatchRules []URLDispatchRule `json:"dispatchRules,omitempty"`
	// The feature specific settings to be used in the application. These define behaviors that are user configurable.
	FeatureSettings *FeatureSettings `json:"featureSettings,omitempty"`
	// Identity-Aware Proxy
	Iap *IdentityAwareProxyInput `json:"iap,omitempty"`
	// Identifier of the Application resource. This identifier is equivalent to the project ID of the Google Cloud Platform project where you want to deploy your application. Example: myapp.
	ID *string `json:"id,omitempty"`
	// Location from which this application runs. Application instances run out of the data centers in the specified location, which is also where all of the application's end user content is stored.Defaults to us-central.View the list of supported locations (https://cloud.google.com/appengine/docs/locations).
	LocationID *string `json:"locationId,omitempty"`
	// The service account associated with the application. This is the app-level default identity. If no identity provided during create version, Admin API will fallback to this one.
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Serving status of this application.
	ServingStatus *ApplicationServingStatusEnum `json:"servingStatus,omitempty"`
}
