/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitTransactionRequest } from "./committransactionrequest";
import { ExecuteStatementRequest } from "./executestatementrequest";
import { FetchPageRequest } from "./fetchpagerequest";
import { StartSessionRequest } from "./startsessionrequest";
import { Expose, Type } from "class-transformer";

export class SendCommandRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AbortTransaction" })
  abortTransaction?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "CommitTransaction" })
  @Type(() => CommitTransactionRequest)
  commitTransaction?: CommitTransactionRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "EndSession" })
  endSession?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecuteStatement" })
  @Type(() => ExecuteStatementRequest)
  executeStatement?: ExecuteStatementRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "FetchPage" })
  @Type(() => FetchPageRequest)
  fetchPage?: FetchPageRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "SessionToken" })
  sessionToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartSession" })
  @Type(() => StartSessionRequest)
  startSession?: StartSessionRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTransaction" })
  startTransaction?: Record<string, any>;
}
