<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Resource - Information related to the Google Cloud resource that is associated with this finding.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Resource
{
    /**
     * The human readable name of the resource.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Folder> $folders
     */
	#[\JMS\Serializer\Annotation\SerializedName('folders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Folder>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $folders = null;
    
    /**
     * The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The human readable name of resource's parent.
     * 
     * @var ?string $parentDisplayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentDisplayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentDisplayName = null;
    
    /**
     * The full resource name of resource's parent.
     * 
     * @var ?string $parentName
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentName = null;
    
    /**
     * The project ID that the resource belongs to.
     * 
     * @var ?string $projectDisplayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('projectDisplayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectDisplayName = null;
    
    /**
     * The full resource name of project that the resource belongs to.
     * 
     * @var ?string $projectName
     */
	#[\JMS\Serializer\Annotation\SerializedName('projectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectName = null;
    
    /**
     * The full resource type of the resource.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->displayName = null;
		$this->folders = null;
		$this->name = null;
		$this->parentDisplayName = null;
		$this->parentName = null;
		$this->projectDisplayName = null;
		$this->projectName = null;
		$this->type = null;
	}
}
