// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FDXNotificationTypeEnum - Type of Notification
type FDXNotificationTypeEnum string

const (
	FDXNotificationTypeEnumConsentRevoked FDXNotificationTypeEnum = "CONSENT_REVOKED"
	FDXNotificationTypeEnumConsentUpdated FDXNotificationTypeEnum = "CONSENT_UPDATED"
	FDXNotificationTypeEnumCustom         FDXNotificationTypeEnum = "CUSTOM"
	FDXNotificationTypeEnumService        FDXNotificationTypeEnum = "SERVICE"
	FDXNotificationTypeEnumBalance        FDXNotificationTypeEnum = "BALANCE"
	FDXNotificationTypeEnumPlannedOutage  FDXNotificationTypeEnum = "PLANNED_OUTAGE"
)

func (e FDXNotificationTypeEnum) ToPointer() *FDXNotificationTypeEnum {
	return &e
}

func (e *FDXNotificationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONSENT_REVOKED":
		fallthrough
	case "CONSENT_UPDATED":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "SERVICE":
		fallthrough
	case "BALANCE":
		fallthrough
	case "PLANNED_OUTAGE":
		*e = FDXNotificationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FDXNotificationTypeEnum: %v", v)
	}
}
