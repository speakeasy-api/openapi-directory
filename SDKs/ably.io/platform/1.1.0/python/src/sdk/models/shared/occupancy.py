"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Occupancy:
    r"""An Occupancy instance indicating the occupancy of a channel. For events indicating regional activity of a channel this indicates activity in that region, not global activity."""
    
    presence_connections: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('presenceConnections'), 'exclude': lambda f: f is None }})
    r"""The number of connections that are authorised to enter members into the presence channel."""  
    presence_members: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('presenceMembers'), 'exclude': lambda f: f is None }})
    r"""The number of members currently entered into the presence channel."""  
    presence_subscribers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('presenceSubscribers'), 'exclude': lambda f: f is None }})
    r"""The number of connections that are authorised to subscribe to presence messages."""  
    publishers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publishers'), 'exclude': lambda f: f is None }})
    r"""The number of connections attached to the channel that are authorised to publish."""  
    subscribers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscribers'), 'exclude': lambda f: f is None }})
    r"""The number of connections attached that are authorised to subscribe to messages."""  
    