/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecurringDetail } from "./recurringdetail";
import { Expose, Type } from "class-transformer";

/**
 * OK - the request has succeeded.
 */
export class DisableResult extends SpeakeasyBase {
  /**
   * A list of one or more recurring payment details that were disabled.
   */
  @SpeakeasyMetadata({ elemType: RecurringDetail })
  @Expose({ name: "details" })
  @Type(() => RecurringDetail)
  details?: RecurringDetail[];

  /**
   * Depending on whether a specific recurring detail was in the request, result is either [detail-successfully-disabled] or [all-details-successfully-disabled].
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: string;
}
