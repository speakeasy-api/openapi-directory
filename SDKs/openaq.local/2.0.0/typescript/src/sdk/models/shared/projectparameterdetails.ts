/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ProjectParameterDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "average" })
  average: number;

  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstUpdated: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastValue" })
  lastValue: number;

  @SpeakeasyMetadata()
  @Expose({ name: "locations" })
  locations: number;

  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameterId" })
  parameterId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit: string;
}
