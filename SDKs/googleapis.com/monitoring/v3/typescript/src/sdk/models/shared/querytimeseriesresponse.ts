/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Status } from "./status";
import { TimeSeriesData } from "./timeseriesdata";
import { TimeSeriesDescriptor } from "./timeseriesdescriptor";
import { Expose, Type } from "class-transformer";

/**
 * The QueryTimeSeries response.
 */
export class QueryTimeSeriesResponse extends SpeakeasyBase {
  /**
   * If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Query execution errors that may have caused the time series data returned to be incomplete. The available data will be available in the response.
   */
  @SpeakeasyMetadata({ elemType: Status })
  @Expose({ name: "partialErrors" })
  @Type(() => Status)
  partialErrors?: Status[];

  /**
   * The time series data.
   */
  @SpeakeasyMetadata({ elemType: TimeSeriesData })
  @Expose({ name: "timeSeriesData" })
  @Type(() => TimeSeriesData)
  timeSeriesData?: TimeSeriesData[];

  /**
   * A descriptor for the labels and points in a time series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeSeriesDescriptor" })
  @Type(() => TimeSeriesDescriptor)
  timeSeriesDescriptor?: TimeSeriesDescriptor;
}
