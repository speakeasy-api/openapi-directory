<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RepositoryInput - A Repository for storing artifacts with a specific format.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RepositoryInput
{
    /**
     * The user-provided description of the repository.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * DockerRepositoryConfig is docker related repository details. Provides additional configuration details for repositories of the docker format type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DockerRepositoryConfig $dockerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('dockerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DockerRepositoryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DockerRepositoryConfig $dockerConfig = null;
    
    /**
     * The format of packages that are stored in the repository.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RepositoryFormatEnum $format
     */
	#[\JMS\Serializer\Annotation\SerializedName('format')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RepositoryFormatEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RepositoryFormatEnum $format = null;
    
    /**
     * The Cloud KMS resource name of the customer managed encryption key that's used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.
     * 
     * @var ?string $kmsKeyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsKeyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsKeyName = null;
    
    /**
     * Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MavenRepositoryConfig $mavenConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('mavenConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MavenRepositoryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MavenRepositoryConfig $mavenConfig = null;
    
    /**
     * The mode of the repository.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RepositoryModeEnum $mode
     */
	#[\JMS\Serializer\Annotation\SerializedName('mode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RepositoryModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RepositoryModeEnum $mode = null;
    
    /**
     * The name of the repository, for example: "projects/p1/locations/us-central1/repositories/repo1".
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Remote repository configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteRepositoryConfig $remoteRepositoryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('remoteRepositoryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RemoteRepositoryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteRepositoryConfig $remoteRepositoryConfig = null;
    
    /**
     * Virtual repository configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VirtualRepositoryConfig $virtualRepositoryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('virtualRepositoryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualRepositoryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualRepositoryConfig $virtualRepositoryConfig = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->dockerConfig = null;
		$this->format = null;
		$this->kmsKeyName = null;
		$this->labels = null;
		$this->mavenConfig = null;
		$this->mode = null;
		$this->name = null;
		$this->remoteRepositoryConfig = null;
		$this->virtualRepositoryConfig = null;
	}
}
