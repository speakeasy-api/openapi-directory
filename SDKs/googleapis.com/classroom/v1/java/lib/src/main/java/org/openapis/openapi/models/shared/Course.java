/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Course - A Course in Classroom.
 */
public class Course {
    /**
     * Absolute link to this course in the Classroom web UI. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternateLink")
    public String alternateLink;
    public Course withAlternateLink(String alternateLink) {
        this.alternateLink = alternateLink;
        return this;
    }
    
    /**
     * The Calendar ID for a calendar that all course members can see, to which Classroom adds events for course work and announcements in the course. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("calendarId")
    public String calendarId;
    public Course withCalendarId(String calendarId) {
        this.calendarId = calendarId;
        return this;
    }
    
    /**
     * The email address of a Google group containing all members of the course. This group does not accept email and can only be used for permissions. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseGroupEmail")
    public String courseGroupEmail;
    public Course withCourseGroupEmail(String courseGroupEmail) {
        this.courseGroupEmail = courseGroupEmail;
        return this;
    }
    
    /**
     * Sets of materials that appear on the "about" page of this course. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseMaterialSets")
    public CourseMaterialSet[] courseMaterialSets;
    public Course withCourseMaterialSets(CourseMaterialSet[] courseMaterialSets) {
        this.courseMaterialSets = courseMaterialSets;
        return this;
    }
    
    /**
     * State of the course. If unspecified, the default state is `PROVISIONED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseState")
    public CourseCourseStateEnum courseState;
    public Course withCourseState(CourseCourseStateEnum courseState) {
        this.courseState = courseState;
        return this;
    }
    
    /**
     * Creation time of the course. Specifying this field in a course update mask results in an error. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;
    public Course withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Optional description. For example, "We'll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Course withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set, this field must be a valid UTF-8 string and no longer than 3600 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("descriptionHeading")
    public String descriptionHeading;
    public Course withDescriptionHeading(String descriptionHeading) {
        this.descriptionHeading = descriptionHeading;
        return this;
    }
    
    /**
     * Enrollment code to use when joining this course. Specifying this field in a course update mask results in an error. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enrollmentCode")
    public String enrollmentCode;
    public Course withEnrollmentCode(String enrollmentCode) {
        this.enrollmentCode = enrollmentCode;
        return this;
    }
    
    /**
     * The gradebook settings for a course. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gradebookSettings")
    public GradebookSettings gradebookSettings;
    public Course withGradebookSettings(GradebookSettings gradebookSettings) {
        this.gradebookSettings = gradebookSettings;
        return this;
    }
    
    /**
     * Whether or not guardian notifications are enabled for this course. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guardiansEnabled")
    public Boolean guardiansEnabled;
    public Course withGuardiansEnabled(Boolean guardiansEnabled) {
        this.guardiansEnabled = guardiansEnabled;
        return this;
    }
    
    /**
     * Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask results in an error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Course withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the course. For example, "10th Grade Biology". The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Course withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user This must be set in a create request. Admins can also specify this field in a patch course request to transfer ownership. In other contexts, it is read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerId")
    public String ownerId;
    public Course withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and no longer than 650 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("room")
    public String room;
    public Course withRoom(String room) {
        this.room = room;
        return this;
    }
    
    /**
     * Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string and no longer than 2800 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("section")
    public String section;
    public Course withSection(String section) {
        this.section = section;
        return this;
    }
    
    /**
     * Representation of a Google Drive folder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("teacherFolder")
    public DriveFolder teacherFolder;
    public Course withTeacherFolder(DriveFolder teacherFolder) {
        this.teacherFolder = teacherFolder;
        return this;
    }
    
    /**
     * The email address of a Google group containing all teachers of the course. This group does not accept email and can only be used for permissions. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("teacherGroupEmail")
    public String teacherGroupEmail;
    public Course withTeacherGroupEmail(String teacherGroupEmail) {
        this.teacherGroupEmail = teacherGroupEmail;
        return this;
    }
    
    /**
     * Time of the most recent update to this course. Specifying this field in a course update mask results in an error. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Course withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
