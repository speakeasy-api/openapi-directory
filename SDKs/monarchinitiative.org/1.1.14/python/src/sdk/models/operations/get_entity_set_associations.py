"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import associationresults as shared_associationresults
from typing import Optional


@dataclasses.dataclass
class GetEntitySetAssociationsRequest:
    
    background: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'background', 'style': 'form', 'explode': True }})
    r"""Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests"""  
    object_category: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'object_category', 'style': 'form', 'explode': True }})
    r"""E.g. phenotype, function"""  
    object_slim: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'object_slim', 'style': 'form', 'explode': True }})
    r"""Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED"""  
    subject: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subject', 'style': 'form', 'explode': True }})
    r"""Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"""  
    

@dataclasses.dataclass
class GetEntitySetAssociationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    association_results: Optional[list[shared_associationresults.AssociationResults]] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    