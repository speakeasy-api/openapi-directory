<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ScalingPolicy - Rule that controls how a fleet is scaled. Scaling policies are uniquely identified by the combination of name and fleet ID.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ScalingPolicy
{
	#[\JMS\Serializer\Annotation\SerializedName('ComparisonOperator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ComparisonOperatorTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComparisonOperatorTypeEnum $comparisonOperator = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('EvaluationPeriods')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $evaluationPeriods = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FleetArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fleetArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FleetId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fleetId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MetricName')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MetricNameEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetricNameEnum $metricName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PolicyType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PolicyTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PolicyTypeEnum $policyType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ScalingAdjustment')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $scalingAdjustment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ScalingAdjustmentType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScalingAdjustmentTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScalingAdjustmentTypeEnum $scalingAdjustmentType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScalingStatusTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScalingStatusTypeEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TargetConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TargetConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TargetConfiguration $targetConfiguration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Threshold')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $threshold = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('UpdateStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LocationUpdateStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LocationUpdateStatusEnum $updateStatus = null;
    
	public function __construct()
	{
		$this->comparisonOperator = null;
		$this->evaluationPeriods = null;
		$this->fleetArn = null;
		$this->fleetId = null;
		$this->location = null;
		$this->metricName = null;
		$this->name = null;
		$this->policyType = null;
		$this->scalingAdjustment = null;
		$this->scalingAdjustmentType = null;
		$this->status = null;
		$this->targetConfiguration = null;
		$this->threshold = null;
		$this->updateStatus = null;
	}
}
