/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class DeviceRegistrationWindow {
    /**
     * The end date of the current period.
     * 
     * This is based on the value of `startDate` plus the number of days defined by  `periodDays`.
     * 
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endDate")
    public OffsetDateTime endDate;

    public DeviceRegistrationWindow withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The maximum de/registrations that can be made in a period.
     */
    @JsonProperty("limit")
    public Integer limit;

    public DeviceRegistrationWindow withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The number of days a de/registration period runs for.
     */
    @JsonProperty("periodDays")
    public Integer periodDays;

    public DeviceRegistrationWindow withPeriodDays(Integer periodDays) {
        this.periodDays = periodDays;
        return this;
    }
    
    /**
     * The remaining de/registrations that can be made in the current period.
     */
    @JsonProperty("remaining")
    public Integer remaining;

    public DeviceRegistrationWindow withRemaining(Integer remaining) {
        this.remaining = remaining;
        return this;
    }
    
    /**
     * The start date of the current period.
     * 
     * This is based on the earliest device de/registrations in the past N days, where
     * N is defined by `periodDays`.
     * 
     * If no device has been de/registered then start date will be from the current date.
     * 
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startDate")
    public OffsetDateTime startDate;

    public DeviceRegistrationWindow withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public DeviceRegistrationWindow(@JsonProperty("endDate") OffsetDateTime endDate, @JsonProperty("limit") Integer limit, @JsonProperty("periodDays") Integer periodDays, @JsonProperty("remaining") Integer remaining, @JsonProperty("startDate") OffsetDateTime startDate) {
        this.endDate = endDate;
        this.limit = limit;
        this.periodDays = periodDays;
        this.remaining = remaining;
        this.startDate = startDate;
  }
}
