/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataUploadFrequencyEnum } from "./datauploadfrequencyenum";
import { InferenceInputConfiguration } from "./inferenceinputconfiguration";
import { InferenceOutputConfiguration } from "./inferenceoutputconfiguration";
import { InferenceSchedulerStatusEnum } from "./inferenceschedulerstatusenum";
import { LatestInferenceResultEnum } from "./latestinferenceresultenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeInferenceSchedulerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DataDelayOffsetInMinutes" })
  dataDelayOffsetInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DataInputConfiguration" })
  @Type(() => InferenceInputConfiguration)
  dataInputConfiguration?: InferenceInputConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "DataOutputConfiguration" })
  @Type(() => InferenceOutputConfiguration)
  dataOutputConfiguration?: InferenceOutputConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "DataUploadFrequency" })
  dataUploadFrequency?: DataUploadFrequencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSchedulerArn" })
  inferenceSchedulerArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSchedulerName" })
  inferenceSchedulerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestInferenceResult" })
  latestInferenceResult?: LatestInferenceResultEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelArn" })
  modelArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelName" })
  modelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerSideKmsKeyId" })
  serverSideKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: InferenceSchedulerStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
