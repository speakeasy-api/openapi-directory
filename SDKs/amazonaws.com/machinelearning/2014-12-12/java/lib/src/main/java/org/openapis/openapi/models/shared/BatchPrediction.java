/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BatchPrediction - &lt;p&gt; Represents the output of a &lt;code&gt;GetBatchPrediction&lt;/code&gt; operation.&lt;/p&gt; &lt;p&gt; The content consists of the detailed metadata, the status, and the data file information of a &lt;code&gt;Batch Prediction&lt;/code&gt;.&lt;/p&gt;
 */
public class BatchPrediction {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchPredictionDataSourceId")
    public String batchPredictionDataSourceId;

    public BatchPrediction withBatchPredictionDataSourceId(String batchPredictionDataSourceId) {
        this.batchPredictionDataSourceId = batchPredictionDataSourceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchPredictionId")
    public String batchPredictionId;

    public BatchPrediction withBatchPredictionId(String batchPredictionId) {
        this.batchPredictionId = batchPredictionId;
        return this;
    }
    
    /**
     * Long integer type that is a 64-bit signed number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComputeTime")
    public Long computeTime;

    public BatchPrediction withComputeTime(Long computeTime) {
        this.computeTime = computeTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;

    public BatchPrediction withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedByIamUser")
    public String createdByIamUser;

    public BatchPrediction withCreatedByIamUser(String createdByIamUser) {
        this.createdByIamUser = createdByIamUser;
        return this;
    }
    
    /**
     * A timestamp represented in epoch time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("FinishedAt")
    public OffsetDateTime finishedAt;

    public BatchPrediction withFinishedAt(OffsetDateTime finishedAt) {
        this.finishedAt = finishedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputDataLocationS3")
    public String inputDataLocationS3;

    public BatchPrediction withInputDataLocationS3(String inputDataLocationS3) {
        this.inputDataLocationS3 = inputDataLocationS3;
        return this;
    }
    
    /**
     * Long integer type that is a 64-bit signed number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvalidRecordCount")
    public Long invalidRecordCount;

    public BatchPrediction withInvalidRecordCount(Long invalidRecordCount) {
        this.invalidRecordCount = invalidRecordCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedAt")
    public OffsetDateTime lastUpdatedAt;

    public BatchPrediction withLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MLModelId")
    public String mlModelId;

    public BatchPrediction withMLModelId(String mlModelId) {
        this.mlModelId = mlModelId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Message")
    public String message;

    public BatchPrediction withMessage(String message) {
        this.message = message;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public BatchPrediction withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputUri")
    public String outputUri;

    public BatchPrediction withOutputUri(String outputUri) {
        this.outputUri = outputUri;
        return this;
    }
    
    /**
     * A timestamp represented in epoch time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartedAt")
    public OffsetDateTime startedAt;

    public BatchPrediction withStartedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public EntityStatusEnum status;

    public BatchPrediction withStatus(EntityStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Long integer type that is a 64-bit signed number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalRecordCount")
    public Long totalRecordCount;

    public BatchPrediction withTotalRecordCount(Long totalRecordCount) {
        this.totalRecordCount = totalRecordCount;
        return this;
    }
    
    public BatchPrediction(){}
}
