"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import associateteammemberrequest as shared_associateteammemberrequest
from ..shared import associateteammemberresult as shared_associateteammemberresult
from enum import Enum
from typing import Any, Optional

class AssociateTeamMemberXAmzTargetEnum(str, Enum):
    CODE_STAR_20170419_ASSOCIATE_TEAM_MEMBER = 'CodeStar_20170419.AssociateTeamMember'


@dataclasses.dataclass
class AssociateTeamMemberRequest:
    
    associate_team_member_request: shared_associateteammemberrequest.AssociateTeamMemberRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: AssociateTeamMemberXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class AssociateTeamMemberResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    associate_team_member_result: Optional[shared_associateteammemberresult.AssociateTeamMemberResult] = dataclasses.field(default=None)
    r"""Success"""  
    concurrent_modification_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ConcurrentModificationException"""  
    invalid_service_role_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidServiceRoleException"""  
    limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""LimitExceededException"""  
    project_configuration_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ProjectConfigurationException"""  
    project_not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ProjectNotFoundException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    team_member_already_associated_exception: Optional[Any] = dataclasses.field(default=None)
    r"""TeamMemberAlreadyAssociatedException"""  
    validation_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ValidationException"""  
    