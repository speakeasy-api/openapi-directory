// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListFindingsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListFindingsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListFindingsRequestBodyFilterCriteria - Details on the criteria used to define the filter.
type ListFindingsRequestBodyFilterCriteria struct {
	AwsAccountID                   []shared.StringFilter    `json:"awsAccountId,omitempty"`
	ComponentID                    []shared.StringFilter    `json:"componentId,omitempty"`
	ComponentType                  []shared.StringFilter    `json:"componentType,omitempty"`
	Ec2InstanceImageID             []shared.StringFilter    `json:"ec2InstanceImageId,omitempty"`
	Ec2InstanceSubnetID            []shared.StringFilter    `json:"ec2InstanceSubnetId,omitempty"`
	Ec2InstanceVpcID               []shared.StringFilter    `json:"ec2InstanceVpcId,omitempty"`
	EcrImageArchitecture           []shared.StringFilter    `json:"ecrImageArchitecture,omitempty"`
	EcrImageHash                   []shared.StringFilter    `json:"ecrImageHash,omitempty"`
	EcrImagePushedAt               []shared.DateFilter      `json:"ecrImagePushedAt,omitempty"`
	EcrImageRegistry               []shared.StringFilter    `json:"ecrImageRegistry,omitempty"`
	EcrImageRepositoryName         []shared.StringFilter    `json:"ecrImageRepositoryName,omitempty"`
	EcrImageTags                   []shared.StringFilter    `json:"ecrImageTags,omitempty"`
	ExploitAvailable               []shared.StringFilter    `json:"exploitAvailable,omitempty"`
	FindingArn                     []shared.StringFilter    `json:"findingArn,omitempty"`
	FindingStatus                  []shared.StringFilter    `json:"findingStatus,omitempty"`
	FindingType                    []shared.StringFilter    `json:"findingType,omitempty"`
	FirstObservedAt                []shared.DateFilter      `json:"firstObservedAt,omitempty"`
	FixAvailable                   []shared.StringFilter    `json:"fixAvailable,omitempty"`
	InspectorScore                 []shared.NumberFilter    `json:"inspectorScore,omitempty"`
	LambdaFunctionExecutionRoleArn []shared.StringFilter    `json:"lambdaFunctionExecutionRoleArn,omitempty"`
	LambdaFunctionLastModifiedAt   []shared.DateFilter      `json:"lambdaFunctionLastModifiedAt,omitempty"`
	LambdaFunctionLayers           []shared.StringFilter    `json:"lambdaFunctionLayers,omitempty"`
	LambdaFunctionName             []shared.StringFilter    `json:"lambdaFunctionName,omitempty"`
	LambdaFunctionRuntime          []shared.StringFilter    `json:"lambdaFunctionRuntime,omitempty"`
	LastObservedAt                 []shared.DateFilter      `json:"lastObservedAt,omitempty"`
	NetworkProtocol                []shared.StringFilter    `json:"networkProtocol,omitempty"`
	PortRange                      []shared.PortRangeFilter `json:"portRange,omitempty"`
	RelatedVulnerabilities         []shared.StringFilter    `json:"relatedVulnerabilities,omitempty"`
	ResourceID                     []shared.StringFilter    `json:"resourceId,omitempty"`
	ResourceTags                   []shared.MapFilter       `json:"resourceTags,omitempty"`
	ResourceType                   []shared.StringFilter    `json:"resourceType,omitempty"`
	Severity                       []shared.StringFilter    `json:"severity,omitempty"`
	Title                          []shared.StringFilter    `json:"title,omitempty"`
	UpdatedAt                      []shared.DateFilter      `json:"updatedAt,omitempty"`
	VendorSeverity                 []shared.StringFilter    `json:"vendorSeverity,omitempty"`
	VulnerabilityID                []shared.StringFilter    `json:"vulnerabilityId,omitempty"`
	VulnerabilitySource            []shared.StringFilter    `json:"vulnerabilitySource,omitempty"`
	VulnerablePackages             []shared.PackageFilter   `json:"vulnerablePackages,omitempty"`
}

// ListFindingsRequestBodySortCriteria - Details about the criteria used to sort finding results.
type ListFindingsRequestBodySortCriteria struct {
	Field     *shared.SortFieldEnum `json:"field,omitempty"`
	SortOrder *shared.SortOrderEnum `json:"sortOrder,omitempty"`
}

type ListFindingsRequestBody struct {
	// Details on the criteria used to define the filter.
	FilterCriteria *ListFindingsRequestBodyFilterCriteria `json:"filterCriteria,omitempty"`
	// The maximum number of results to return in the response.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.
	NextToken *string `json:"nextToken,omitempty"`
	// Details about the criteria used to sort finding results.
	SortCriteria *ListFindingsRequestBodySortCriteria `json:"sortCriteria,omitempty"`
}

type ListFindingsRequest struct {
	QueryParams ListFindingsQueryParams
	Headers     ListFindingsHeaders
	Request     ListFindingsRequestBody `request:"mediaType=application/json"`
}

type ListFindingsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListFindingsResponse *shared.ListFindingsResponse
	StatusCode           int
	RawResponse          *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
