/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PaymentInitiationPaymentReverseRequest - PaymentInitiationPaymentReverseRequest defines the request schema for `/payment_initiation/payment/reverse`
 */
public class PaymentInitiationPaymentReverseRequest {
    /**
     * The amount and currency of a payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public java.util.Map<String, Object> amount;

    public PaymentInitiationPaymentReverseRequest withAmount(java.util.Map<String, Object> amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public PaymentInitiationPaymentReverseRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * A random key provided by the client, per unique wallet transaction. Maximum of 128 characters.
     * 
     * The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a wallet transaction fails due to a network connection error, then after a minimum delay of one minute, you can retry the request with the same idempotency key to guarantee that only a single wallet transaction is created. If the request was successfully processed, it will prevent any transaction that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
     */
    @JsonProperty("idempotency_key")
    public String idempotencyKey;

    public PaymentInitiationPaymentReverseRequest withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    /**
     * The ID of the payment to reverse
     */
    @JsonProperty("payment_id")
    public String paymentId;

    public PaymentInitiationPaymentReverseRequest withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    /**
     * A reference for the refund. This must be an alphanumeric string with 6 to 18 characters and must not contain any special characters or spaces.
     */
    @JsonProperty("reference")
    public String reference;

    public PaymentInitiationPaymentReverseRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public PaymentInitiationPaymentReverseRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    public PaymentInitiationPaymentReverseRequest(@JsonProperty("idempotency_key") String idempotencyKey, @JsonProperty("payment_id") String paymentId, @JsonProperty("reference") String reference) {
        this.idempotencyKey = idempotencyKey;
        this.paymentId = paymentId;
        this.reference = reference;
  }
}
