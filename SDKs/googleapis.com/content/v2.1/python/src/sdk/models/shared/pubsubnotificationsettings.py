"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PubsubNotificationSettings:
    r"""Settings for Pub/Sub notifications, all methods require that the caller is a direct user of the merchant center account."""
    
    cloud_topic_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudTopicName'), 'exclude': lambda f: f is None }})
    r"""Cloud pub/sub topic to which notifications are sent (read-only)."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"`content#pubsubNotificationSettings`\\" """  
    registered_events: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registeredEvents'), 'exclude': lambda f: f is None }})
    r"""List of event types. Acceptable values are: - \\"`orderPendingShipment`\\" """  
    