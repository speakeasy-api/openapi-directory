/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListCompositionHookServerList = [
  "https://video.twilio.com",
] as const;

export class ListCompositionHookSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListCompositionHookRequest extends SpeakeasyBase {
  /**
   * Read only CompositionHook resources created on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) datetime with time zone.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedAfter?: Date;

  /**
   * Read only CompositionHook resources created before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) datetime with time zone.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedBefore?: Date;

  /**
   * Read only CompositionHook resources with an `enabled` value that matches this parameter.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Enabled",
  })
  enabled?: boolean;

  /**
   * Read only CompositionHook resources with friendly names that match this string. The match is not case sensitive and can include asterisk `*` characters as wildcard match.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FriendlyName",
  })
  friendlyName?: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;
}

export class ListCompositionHookListCompositionHookResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListCompositionHookListCompositionHookResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.VideoV1CompositionHook })
  @Expose({ name: "composition_hooks" })
  @Type(() => shared.VideoV1CompositionHook)
  compositionHooks?: shared.VideoV1CompositionHook[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListCompositionHookListCompositionHookResponseMeta)
  meta?: ListCompositionHookListCompositionHookResponseMeta;
}

export class ListCompositionHookResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listCompositionHookResponse?: ListCompositionHookListCompositionHookResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
