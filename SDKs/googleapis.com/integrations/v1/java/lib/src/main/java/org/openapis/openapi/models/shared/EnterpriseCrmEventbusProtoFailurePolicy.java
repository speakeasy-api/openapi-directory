/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnterpriseCrmEventbusProtoFailurePolicy - Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
 */
public class EnterpriseCrmEventbusProtoFailurePolicy {
    /**
     * Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the initial interval for backoff.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intervalInSeconds")
    public String intervalInSeconds;
    public EnterpriseCrmEventbusProtoFailurePolicy withIntervalInSeconds(String intervalInSeconds) {
        this.intervalInSeconds = intervalInSeconds;
        return this;
    }
    
    /**
     * Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxNumRetries")
    public Integer maxNumRetries;
    public EnterpriseCrmEventbusProtoFailurePolicy withMaxNumRetries(Integer maxNumRetries) {
        this.maxNumRetries = maxNumRetries;
        return this;
    }
    
    /**
     * Defines what happens to the task upon failure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryStrategy")
    public EnterpriseCrmEventbusProtoFailurePolicyRetryStrategyEnum retryStrategy;
    public EnterpriseCrmEventbusProtoFailurePolicy withRetryStrategy(EnterpriseCrmEventbusProtoFailurePolicyRetryStrategyEnum retryStrategy) {
        this.retryStrategy = retryStrategy;
        return this;
    }
    
}
