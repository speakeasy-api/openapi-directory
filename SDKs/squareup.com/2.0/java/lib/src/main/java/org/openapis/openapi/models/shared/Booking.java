/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Booking - Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
 * at a given location to a requesting customer in one or more appointment segments.
 */
public class Booking {
    /**
     * A list of appointment segments for this booking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appointment_segments")
    public AppointmentSegment[] appointmentSegments;

    public Booking withAppointmentSegments(AppointmentSegment[] appointmentSegments) {
        this.appointmentSegments = appointmentSegments;
        return this;
    }
    
    /**
     * The timestamp specifying the creation time of this booking, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public Booking withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The ID of the [Customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) object representing the customer attending this booking
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_id")
    public String customerId;

    public Booking withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * The free-text field for the customer to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a relevant [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_note")
    public String customerNote;

    public Booking withCustomerNote(String customerNote) {
        this.customerNote = customerNote;
        return this;
    }
    
    /**
     * A unique ID of this object representing a booking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Booking withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) object representing the location where the booked service is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;

    public Booking withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The free-text field for the seller to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a specific [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance.
     * This field should not be visible to customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seller_note")
    public String sellerNote;

    public Booking withSellerNote(String sellerNote) {
        this.sellerNote = sellerNote;
        return this;
    }
    
    /**
     * The timestamp specifying the starting time of this booking, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_at")
    public String startAt;

    public Booking withStartAt(String startAt) {
        this.startAt = startAt;
        return this;
    }
    
    /**
     * The status of the booking, describing where the booking stands with respect to the booking state machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public Booking withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The timestamp specifying the most recent update time of this booking, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;

    public Booking withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The revision number for the booking used for optimistic concurrency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Long version;

    public Booking withVersion(Long version) {
        this.version = version;
        return this;
    }
    
    public Booking(){}
}
