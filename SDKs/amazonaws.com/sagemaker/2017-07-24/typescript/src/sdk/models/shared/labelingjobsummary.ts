/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LabelCounters } from "./labelcounters";
import { LabelingJobInputConfig } from "./labelingjobinputconfig";
import { LabelingJobOutput } from "./labelingjoboutput";
import { LabelingJobStatusEnum } from "./labelingjobstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides summary information about a labeling job.
 */
export class LabelingJobSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnnotationConsolidationLambdaArn" })
  annotationConsolidationLambdaArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InputConfig" })
  @Type(() => LabelingJobInputConfig)
  inputConfig?: LabelingJobInputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelCounters" })
  @Type(() => LabelCounters)
  labelCounters: LabelCounters;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelingJobArn" })
  labelingJobArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelingJobName" })
  labelingJobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelingJobOutput" })
  @Type(() => LabelingJobOutput)
  labelingJobOutput?: LabelingJobOutput;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelingJobStatus" })
  labelingJobStatus: LabelingJobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "PreHumanTaskLambdaArn" })
  preHumanTaskLambdaArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkteamArn" })
  workteamArn: string;
}
