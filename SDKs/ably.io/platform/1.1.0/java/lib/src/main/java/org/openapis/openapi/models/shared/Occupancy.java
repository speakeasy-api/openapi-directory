/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Occupancy - An Occupancy instance indicating the occupancy of a channel. For events indicating regional activity of a channel this indicates activity in that region, not global activity.
 */
public class Occupancy {
    /**
     * The number of connections that are authorised to enter members into the presence channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presenceConnections")
    public Long presenceConnections;

    public Occupancy withPresenceConnections(Long presenceConnections) {
        this.presenceConnections = presenceConnections;
        return this;
    }
    
    /**
     * The number of members currently entered into the presence channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presenceMembers")
    public Long presenceMembers;

    public Occupancy withPresenceMembers(Long presenceMembers) {
        this.presenceMembers = presenceMembers;
        return this;
    }
    
    /**
     * The number of connections that are authorised to subscribe to presence messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presenceSubscribers")
    public Long presenceSubscribers;

    public Occupancy withPresenceSubscribers(Long presenceSubscribers) {
        this.presenceSubscribers = presenceSubscribers;
        return this;
    }
    
    /**
     * The number of connections attached to the channel that are authorised to publish.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publishers")
    public Long publishers;

    public Occupancy withPublishers(Long publishers) {
        this.publishers = publishers;
        return this;
    }
    
    /**
     * The number of connections attached that are authorised to subscribe to messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscribers")
    public Long subscribers;

    public Occupancy withSubscribers(Long subscribers) {
        this.subscribers = subscribers;
        return this;
    }
    
    public Occupancy(){}
}
