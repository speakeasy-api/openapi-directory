<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NullableMinimalRepository - Minimal Repository
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NullableMinimalRepository
{
	#[\JMS\Serializer\Annotation\SerializedName('allow_forking')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowForking = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('archive_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $archiveUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('archived')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $archived = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('assignees_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $assigneesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('blobs_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $blobsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('branches_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $branchesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('clone_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cloneUrl = null;
    
    /**
     * Code Of Conduct
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CodeOfConduct $codeOfConduct
     */
	#[\JMS\Serializer\Annotation\SerializedName('code_of_conduct')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CodeOfConduct')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CodeOfConduct $codeOfConduct = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('collaborators_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $collaboratorsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('commits_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commitsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('compare_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $compareUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('contents_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $contentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('contributors_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $contributorsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('default_branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultBranch = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('delete_branch_on_merge')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleteBranchOnMerge = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('deployments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deploymentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('downloads_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $downloadsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('events_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('fork')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $fork;
    
	#[\JMS\Serializer\Annotation\SerializedName('forks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $forks = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('forks_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $forksCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('forks_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $forksUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('full_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $fullName;
    
	#[\JMS\Serializer\Annotation\SerializedName('git_commits_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $gitCommitsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('git_refs_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $gitRefsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('git_tags_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $gitTagsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('git_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_discussions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasDiscussions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_downloads')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasDownloads = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_issues')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasIssues = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_pages')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasPages = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_projects')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasProjects = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_wiki')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasWiki = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('homepage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $homepage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hooks_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $hooksUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_template')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTemplate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('issue_comment_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issueCommentUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('issue_events_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issueEventsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('issues_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issuesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('keys_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $keysUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('labels_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $labelsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $language = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('languages_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $languagesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('license')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableMinimalRepositoryLicense')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NullableMinimalRepositoryLicense $license = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('merges_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $mergesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('milestones_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $milestonesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('mirror_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mirrorUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('network_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $networkCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
	#[\JMS\Serializer\Annotation\SerializedName('notifications_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $notificationsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('open_issues')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $openIssues = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('open_issues_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $openIssuesCount = null;
    
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleUser $owner
     */
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleUser')]
    public SimpleUser $owner;
    
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableMinimalRepositoryPermissions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NullableMinimalRepositoryPermissions $permissions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('private')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $private;
    
	#[\JMS\Serializer\Annotation\SerializedName('pulls_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $pullsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('pushed_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $pushedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('releases_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $releasesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('role_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $roleName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('security_and_analysis')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SecurityAndAnalysis')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SecurityAndAnalysis $securityAndAnalysis = null;
    
    /**
     * The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ssh_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sshUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('stargazers_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stargazersCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('stargazers_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $stargazersUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('statuses_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $statusesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('subscribers_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subscribersCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('subscribers_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $subscribersUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('subscription_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $subscriptionUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('svn_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $svnUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('tags_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tagsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('teams_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $teamsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('temp_clone_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tempCloneToken = null;
    
    /**
     * $topics
     * 
     * @var ?array<string> $topics
     */
	#[\JMS\Serializer\Annotation\SerializedName('topics')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $topics = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('trees_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $treesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	#[\JMS\Serializer\Annotation\SerializedName('visibility')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $visibility = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('watchers')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $watchers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('watchers_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $watchersCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('web_commit_signoff_required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $webCommitSignoffRequired = null;
    
	public function __construct()
	{
		$this->allowForking = null;
		$this->archiveUrl = "";
		$this->archived = null;
		$this->assigneesUrl = "";
		$this->blobsUrl = "";
		$this->branchesUrl = "";
		$this->cloneUrl = null;
		$this->codeOfConduct = null;
		$this->collaboratorsUrl = "";
		$this->commentsUrl = "";
		$this->commitsUrl = "";
		$this->compareUrl = "";
		$this->contentsUrl = "";
		$this->contributorsUrl = "";
		$this->createdAt = null;
		$this->defaultBranch = null;
		$this->deleteBranchOnMerge = null;
		$this->deploymentsUrl = "";
		$this->description = "";
		$this->disabled = null;
		$this->downloadsUrl = "";
		$this->eventsUrl = "";
		$this->fork = false;
		$this->forks = null;
		$this->forksCount = null;
		$this->forksUrl = "";
		$this->fullName = "";
		$this->gitCommitsUrl = "";
		$this->gitRefsUrl = "";
		$this->gitTagsUrl = "";
		$this->gitUrl = null;
		$this->hasDiscussions = null;
		$this->hasDownloads = null;
		$this->hasIssues = null;
		$this->hasPages = null;
		$this->hasProjects = null;
		$this->hasWiki = null;
		$this->homepage = null;
		$this->hooksUrl = "";
		$this->htmlUrl = "";
		$this->id = 0;
		$this->isTemplate = null;
		$this->issueCommentUrl = "";
		$this->issueEventsUrl = "";
		$this->issuesUrl = "";
		$this->keysUrl = "";
		$this->labelsUrl = "";
		$this->language = null;
		$this->languagesUrl = "";
		$this->license = null;
		$this->mergesUrl = "";
		$this->milestonesUrl = "";
		$this->mirrorUrl = null;
		$this->name = "";
		$this->networkCount = null;
		$this->nodeId = "";
		$this->notificationsUrl = "";
		$this->openIssues = null;
		$this->openIssuesCount = null;
		$this->owner = new \OpenAPI\OpenAPI\Models\Shared\SimpleUser();
		$this->permissions = null;
		$this->private = false;
		$this->pullsUrl = "";
		$this->pushedAt = null;
		$this->releasesUrl = "";
		$this->roleName = null;
		$this->securityAndAnalysis = null;
		$this->size = null;
		$this->sshUrl = null;
		$this->stargazersCount = null;
		$this->stargazersUrl = "";
		$this->statusesUrl = "";
		$this->subscribersCount = null;
		$this->subscribersUrl = "";
		$this->subscriptionUrl = "";
		$this->svnUrl = null;
		$this->tagsUrl = "";
		$this->teamsUrl = "";
		$this->tempCloneToken = null;
		$this->topics = null;
		$this->treesUrl = "";
		$this->updatedAt = null;
		$this->url = "";
		$this->visibility = null;
		$this->watchers = null;
		$this->watchersCount = null;
		$this->webCommitSignoffRequired = null;
	}
}
