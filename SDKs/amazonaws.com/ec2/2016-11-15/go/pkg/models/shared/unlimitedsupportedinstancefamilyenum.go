// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UnlimitedSupportedInstanceFamilyEnum string

const (
	UnlimitedSupportedInstanceFamilyEnumT2  UnlimitedSupportedInstanceFamilyEnum = "t2"
	UnlimitedSupportedInstanceFamilyEnumT3  UnlimitedSupportedInstanceFamilyEnum = "t3"
	UnlimitedSupportedInstanceFamilyEnumT3a UnlimitedSupportedInstanceFamilyEnum = "t3a"
	UnlimitedSupportedInstanceFamilyEnumT4g UnlimitedSupportedInstanceFamilyEnum = "t4g"
)

func (e UnlimitedSupportedInstanceFamilyEnum) ToPointer() *UnlimitedSupportedInstanceFamilyEnum {
	return &e
}

func (e *UnlimitedSupportedInstanceFamilyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "t2":
		fallthrough
	case "t3":
		fallthrough
	case "t3a":
		fallthrough
	case "t4g":
		*e = UnlimitedSupportedInstanceFamilyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnlimitedSupportedInstanceFamilyEnum: %v", v)
	}
}
