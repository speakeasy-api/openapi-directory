/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LiveBroadcastStatus - Live broadcast state.
 */
public class LiveBroadcastStatus {
    /**
     * The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifeCycleStatus")
    public LiveBroadcastStatusLifeCycleStatusEnum lifeCycleStatus;

    public LiveBroadcastStatus withLifeCycleStatus(LiveBroadcastStatusLifeCycleStatusEnum lifeCycleStatus) {
        this.lifeCycleStatus = lifeCycleStatus;
        return this;
    }
    
    /**
     * Priority of the live broadcast event (internal state).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liveBroadcastPriority")
    public LiveBroadcastStatusLiveBroadcastPriorityEnum liveBroadcastPriority;

    public LiveBroadcastStatus withLiveBroadcastPriority(LiveBroadcastStatusLiveBroadcastPriorityEnum liveBroadcastPriority) {
        this.liveBroadcastPriority = liveBroadcastPriority;
        return this;
    }
    
    /**
     * Whether the broadcast is made for kids or not, decided by YouTube instead of the creator. This field is read only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("madeForKids")
    public Boolean madeForKids;

    public LiveBroadcastStatus withMadeForKids(Boolean madeForKids) {
        this.madeForKids = madeForKids;
        return this;
    }
    
    /**
     * The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privacyStatus")
    public LiveBroadcastStatusPrivacyStatusEnum privacyStatus;

    public LiveBroadcastStatus withPrivacyStatus(LiveBroadcastStatusPrivacyStatusEnum privacyStatus) {
        this.privacyStatus = privacyStatus;
        return this;
    }
    
    /**
     * The broadcast's recording status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordingStatus")
    public LiveBroadcastStatusRecordingStatusEnum recordingStatus;

    public LiveBroadcastStatus withRecordingStatus(LiveBroadcastStatusRecordingStatusEnum recordingStatus) {
        this.recordingStatus = recordingStatus;
        return this;
    }
    
    /**
     * This field will be set to True if the creator declares the broadcast to be kids only: go/live-cw-work.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfDeclaredMadeForKids")
    public Boolean selfDeclaredMadeForKids;

    public LiveBroadcastStatus withSelfDeclaredMadeForKids(Boolean selfDeclaredMadeForKids) {
        this.selfDeclaredMadeForKids = selfDeclaredMadeForKids;
        return this;
    }
    
    public LiveBroadcastStatus(){}
}
