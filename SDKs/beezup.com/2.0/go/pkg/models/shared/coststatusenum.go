// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CostStatusEnum string

const (
	CostStatusEnumRequired        CostStatusEnum = "required"
	CostStatusEnumOptional        CostStatusEnum = "optional"
	CostStatusEnumNotConfigurable CostStatusEnum = "notConfigurable"
)

func (e CostStatusEnum) ToPointer() *CostStatusEnum {
	return &e
}

func (e *CostStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "required":
		fallthrough
	case "optional":
		fallthrough
	case "notConfigurable":
		*e = CostStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CostStatusEnum: %v", v)
	}
}
