/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProductEditFields {
    /**
     * Barcode of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("barcode")
    public String barcode;

    public ProductEditFields withBarcode(String barcode) {
        this.barcode = barcode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public CategoryFields[] categories;

    public ProductEditFields withCategories(CategoryFields[] categories) {
        this.categories = categories;
        return this;
    }
    
    /**
     * Description of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ProductEditFields withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Diameter of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diameter")
    public Float diameter;

    public ProductEditFields withDiameter(Float diameter) {
        this.diameter = diameter;
        return this;
    }
    
    /**
     * True if the product is featured
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featured")
    public Boolean featured;

    public ProductEditFields withFeatured(Boolean featured) {
        this.featured = featured;
        return this;
    }
    
    /**
     * Category of a Product based on the Google product taxonomy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("google_product_category")
    public String googleProductCategory;

    public ProductEditFields withGoogleProductCategory(String googleProductCategory) {
        this.googleProductCategory = googleProductCategory;
        return this;
    }
    
    /**
     * Height of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Float height;

    public ProductEditFields withHeight(Float height) {
        this.height = height;
        return this;
    }
    
    /**
     * Length of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length")
    public Float length;

    public ProductEditFields withLength(Float length) {
        this.length = length;
        return this;
    }
    
    /**
     * SEO meta description of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meta_description")
    public String metaDescription;

    public ProductEditFields withMetaDescription(String metaDescription) {
        this.metaDescription = metaDescription;
        return this;
    }
    
    /**
     * Name of the product
     */
    @JsonProperty("name")
    public String name;

    public ProductEditFields withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Format the product package
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("package_format")
    public ProductEditFieldsPackageFormatEnum packageFormat;

    public ProductEditFields withPackageFormat(ProductEditFieldsPackageFormatEnum packageFormat) {
        this.packageFormat = packageFormat;
        return this;
    }
    
    /**
     * SEO title of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_title")
    public String pageTitle;

    public ProductEditFields withPageTitle(String pageTitle) {
        this.pageTitle = pageTitle;
        return this;
    }
    
    /**
     * Product unique URL path
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permalink")
    public String permalink;

    public ProductEditFields withPermalink(String permalink) {
        this.permalink = permalink;
        return this;
    }
    
    /**
     * Price of the product
     */
    @JsonProperty("price")
    public Float price;

    public ProductEditFields withPrice(Float price) {
        this.price = price;
        return this;
    }
    
    /**
     * False if the product is digital
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_required")
    public Boolean shippingRequired;

    public ProductEditFields withShippingRequired(Boolean shippingRequired) {
        this.shippingRequired = shippingRequired;
        return this;
    }
    
    /**
     * Stock Keeping Unit of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;

    public ProductEditFields withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * Status of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ProductEditFieldsStatusEnum status;

    public ProductEditFields withStatus(ProductEditFieldsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Quantity in stock for the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stock")
    public Integer stock;

    public ProductEditFields withStock(Integer stock) {
        this.stock = stock;
        return this;
    }
    
    /**
     * True if the Product has unlimited stock
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stock_unlimited")
    public Boolean stockUnlimited;

    public ProductEditFields withStockUnlimited(Boolean stockUnlimited) {
        this.stockUnlimited = stockUnlimited;
        return this;
    }
    
    /**
     * Weight of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    public Float weight;

    public ProductEditFields withWeight(Float weight) {
        this.weight = weight;
        return this;
    }
    
    /**
     * Width of the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Float width;

    public ProductEditFields withWidth(Float width) {
        this.width = width;
        return this;
    }
    
    public ProductEditFields(@JsonProperty("name") String name, @JsonProperty("price") Float price) {
        this.name = name;
        this.price = price;
  }
}
