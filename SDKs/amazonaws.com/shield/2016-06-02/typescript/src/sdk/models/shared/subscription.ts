/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoRenewEnum } from "./autorenewenum";
import { Limit } from "./limit";
import { ProactiveEngagementStatusEnum } from "./proactiveengagementstatusenum";
import { SubscriptionLimits } from "./subscriptionlimits";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the Shield Advanced subscription for an account.
 */
export class Subscription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AutoRenew" })
  autoRenew?: AutoRenewEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata({ elemType: Limit })
  @Expose({ name: "Limits" })
  @Type(() => Limit)
  limits?: Limit[];

  @SpeakeasyMetadata()
  @Expose({ name: "ProactiveEngagementStatus" })
  proactiveEngagementStatus?: ProactiveEngagementStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionArn" })
  subscriptionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionLimits" })
  @Type(() => SubscriptionLimits)
  subscriptionLimits: SubscriptionLimits;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeCommitmentInSeconds" })
  timeCommitmentInSeconds?: number;
}
