// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// ProxyGetPaymentMethodSnapshotAchAccountTypeEnum - The type of bank account associated with the ACH payment.
type ProxyGetPaymentMethodSnapshotAchAccountTypeEnum string

const (
	ProxyGetPaymentMethodSnapshotAchAccountTypeEnumBusinessChecking ProxyGetPaymentMethodSnapshotAchAccountTypeEnum = "BusinessChecking"
	ProxyGetPaymentMethodSnapshotAchAccountTypeEnumChecking         ProxyGetPaymentMethodSnapshotAchAccountTypeEnum = "Checking"
	ProxyGetPaymentMethodSnapshotAchAccountTypeEnumSaving           ProxyGetPaymentMethodSnapshotAchAccountTypeEnum = "Saving"
)

func (e *ProxyGetPaymentMethodSnapshotAchAccountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BusinessChecking":
		fallthrough
	case "Checking":
		fallthrough
	case "Saving":
		*e = ProxyGetPaymentMethodSnapshotAchAccountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotAchAccountTypeEnum: %s", s)
	}
}

// ProxyGetPaymentMethodSnapshotBankTransferTypeEnum - Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user.
//
// Possible Values:
//
// * `AutomatischIncasso` (NL)
//
// * `LastschriftDE` (Germany)
//
// * `LastschriftAT` (Austria)
//
// * `DemandeDePrelevement` (FR)
//
// * `DirectDebitUK` (UK)
//
// * `Domicil` (Belgium)
//
// * `LastschriftCH` (CH)
//
// * `RID` (Italy)
//
// * `OrdenDeDomiciliacion` (Spain)
// * `Autogiro` (Sweden)
// * `Betalingsservice` (Denmark)
type ProxyGetPaymentMethodSnapshotBankTransferTypeEnum string

const (
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumAutomatischIncasso   ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "AutomatischIncasso"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumLastschriftDe        ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "LastschriftDE"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumLastschriftAt        ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "LastschriftAT"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumDemandeDePrelevement ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "DemandeDePrelevement"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumDirectDebitUk        ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "DirectDebitUK"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumDomicil              ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "Domicil"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumLastschriftCh        ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "LastschriftCH"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumRid                  ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "RID"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumOrdenDeDomiciliacion ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "OrdenDeDomiciliacion"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumAutogiro             ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "Autogiro"
	ProxyGetPaymentMethodSnapshotBankTransferTypeEnumBetalingsservice     ProxyGetPaymentMethodSnapshotBankTransferTypeEnum = "Betalingsservice"
)

func (e *ProxyGetPaymentMethodSnapshotBankTransferTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AutomatischIncasso":
		fallthrough
	case "LastschriftDE":
		fallthrough
	case "LastschriftAT":
		fallthrough
	case "DemandeDePrelevement":
		fallthrough
	case "DirectDebitUK":
		fallthrough
	case "Domicil":
		fallthrough
	case "LastschriftCH":
		fallthrough
	case "RID":
		fallthrough
	case "OrdenDeDomiciliacion":
		fallthrough
	case "Autogiro":
		fallthrough
	case "Betalingsservice":
		*e = ProxyGetPaymentMethodSnapshotBankTransferTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotBankTransferTypeEnum: %s", s)
	}
}

// ProxyGetPaymentMethodSnapshotCreditCardTypeEnum - The type of credit card or debit card.
type ProxyGetPaymentMethodSnapshotCreditCardTypeEnum string

const (
	ProxyGetPaymentMethodSnapshotCreditCardTypeEnumAmericanExpress ProxyGetPaymentMethodSnapshotCreditCardTypeEnum = "AmericanExpress"
	ProxyGetPaymentMethodSnapshotCreditCardTypeEnumDiscover        ProxyGetPaymentMethodSnapshotCreditCardTypeEnum = "Discover"
	ProxyGetPaymentMethodSnapshotCreditCardTypeEnumMasterCard      ProxyGetPaymentMethodSnapshotCreditCardTypeEnum = "MasterCard"
	ProxyGetPaymentMethodSnapshotCreditCardTypeEnumVisa            ProxyGetPaymentMethodSnapshotCreditCardTypeEnum = "Visa"
)

func (e *ProxyGetPaymentMethodSnapshotCreditCardTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmericanExpress":
		fallthrough
	case "Discover":
		fallthrough
	case "MasterCard":
		fallthrough
	case "Visa":
		*e = ProxyGetPaymentMethodSnapshotCreditCardTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotCreditCardTypeEnum: %s", s)
	}
}

// ProxyGetPaymentMethodSnapshotExistingMandateEnum - Indicates if the customer has an existing mandate or a new mandate. Only applicable to direct debit payment methods.
type ProxyGetPaymentMethodSnapshotExistingMandateEnum string

const (
	ProxyGetPaymentMethodSnapshotExistingMandateEnumYes ProxyGetPaymentMethodSnapshotExistingMandateEnum = "Yes"
	ProxyGetPaymentMethodSnapshotExistingMandateEnumNo  ProxyGetPaymentMethodSnapshotExistingMandateEnum = "No"
)

func (e *ProxyGetPaymentMethodSnapshotExistingMandateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Yes":
		fallthrough
	case "No":
		*e = ProxyGetPaymentMethodSnapshotExistingMandateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotExistingMandateEnum: %s", s)
	}
}

// ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum - Specifies the status of the payment method.
type ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum string

const (
	ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnumActive ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum = "Active"
	ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnumClosed ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum = "Closed"
)

func (e *ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Closed":
		*e = ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum: %s", s)
	}
}

// ProxyGetPaymentMethodSnapshotPaypalTypeEnum - Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments.
type ProxyGetPaymentMethodSnapshotPaypalTypeEnum string

const (
	ProxyGetPaymentMethodSnapshotPaypalTypeEnumExpressCheckout  ProxyGetPaymentMethodSnapshotPaypalTypeEnum = "ExpressCheckout"
	ProxyGetPaymentMethodSnapshotPaypalTypeEnumAdaptivePayments ProxyGetPaymentMethodSnapshotPaypalTypeEnum = "AdaptivePayments"
)

func (e *ProxyGetPaymentMethodSnapshotPaypalTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ExpressCheckout":
		fallthrough
	case "AdaptivePayments":
		*e = ProxyGetPaymentMethodSnapshotPaypalTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotPaypalTypeEnum: %s", s)
	}
}

// ProxyGetPaymentMethodSnapshotTypeEnum - The type of payment method.
type ProxyGetPaymentMethodSnapshotTypeEnum string

const (
	ProxyGetPaymentMethodSnapshotTypeEnumAch                            ProxyGetPaymentMethodSnapshotTypeEnum = "ACH"
	ProxyGetPaymentMethodSnapshotTypeEnumApplePay                       ProxyGetPaymentMethodSnapshotTypeEnum = "ApplePay"
	ProxyGetPaymentMethodSnapshotTypeEnumBankTransfer                   ProxyGetPaymentMethodSnapshotTypeEnum = "BankTransfer"
	ProxyGetPaymentMethodSnapshotTypeEnumCash                           ProxyGetPaymentMethodSnapshotTypeEnum = "Cash"
	ProxyGetPaymentMethodSnapshotTypeEnumCheck                          ProxyGetPaymentMethodSnapshotTypeEnum = "Check"
	ProxyGetPaymentMethodSnapshotTypeEnumCreditCard                     ProxyGetPaymentMethodSnapshotTypeEnum = "CreditCard"
	ProxyGetPaymentMethodSnapshotTypeEnumCreditCardReferenceTransaction ProxyGetPaymentMethodSnapshotTypeEnum = "CreditCardReferenceTransaction"
	ProxyGetPaymentMethodSnapshotTypeEnumDebitCard                      ProxyGetPaymentMethodSnapshotTypeEnum = "DebitCard"
	ProxyGetPaymentMethodSnapshotTypeEnumOther                          ProxyGetPaymentMethodSnapshotTypeEnum = "Other"
	ProxyGetPaymentMethodSnapshotTypeEnumPayPal                         ProxyGetPaymentMethodSnapshotTypeEnum = "PayPal"
	ProxyGetPaymentMethodSnapshotTypeEnumWireTransfer                   ProxyGetPaymentMethodSnapshotTypeEnum = "WireTransfer"
)

func (e *ProxyGetPaymentMethodSnapshotTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACH":
		fallthrough
	case "ApplePay":
		fallthrough
	case "BankTransfer":
		fallthrough
	case "Cash":
		fallthrough
	case "Check":
		fallthrough
	case "CreditCard":
		fallthrough
	case "CreditCardReferenceTransaction":
		fallthrough
	case "DebitCard":
		fallthrough
	case "Other":
		fallthrough
	case "PayPal":
		fallthrough
	case "WireTransfer":
		*e = ProxyGetPaymentMethodSnapshotTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentMethodSnapshotTypeEnum: %s", s)
	}
}

type ProxyGetPaymentMethodSnapshot struct {
	// The ID of the customer account associated with this payment method.
	AccountID *string `json:"AccountId,omitempty"`
	// The nine-digit routing number or ABA number used by banks. Applicable to ACH payment methods.
	AchAbaCode *string `json:"AchAbaCode,omitempty"`
	// The name of the account holder, which can be either a person or a company. Applicable to ACH payment methods.
	AchAccountName *string `json:"AchAccountName,omitempty"`
	// This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`.
	AchAccountNumberMask *string `json:"AchAccountNumberMask,omitempty"`
	// The type of bank account associated with the ACH payment.
	AchAccountType *ProxyGetPaymentMethodSnapshotAchAccountTypeEnum `json:"AchAccountType,omitempty"`
	// The name of the bank where the ACH payment account is held.
	AchBankName *string `json:"AchBankName,omitempty"`
	// The branch code of the bank used for direct debit.
	BankBranchCode *string `json:"BankBranchCode,omitempty"`
	// The check digit in the international bank account number, which confirms the validity of the account. Applicable to direct debit payment methods.
	BankCheckDigit *string `json:"BankCheckDigit,omitempty"`
	// The city of the direct debit bank.
	BankCity *string `json:"BankCity,omitempty"`
	// The sort code or number that identifies the bank. This is also known as the sort code.
	BankCode *string `json:"BankCode,omitempty"`
	// The first six digits of the payment method's number, such as the credit card number or account number. Banks use this number to identify a payment method.
	BankIdentificationNumber *string `json:"BankIdentificationNumber,omitempty"`
	// The name of the direct debit bank.
	BankName *string `json:"BankName,omitempty"`
	// The zip code or postal code of the direct debit bank.
	BankPostalCode *string `json:"BankPostalCode,omitempty"`
	// The name of the street of the direct debit bank.
	BankStreetName *string `json:"BankStreetName,omitempty"`
	// The number of the direct debit bank.
	BankStreetNumber *string `json:"BankStreetNumber,omitempty"`
	// The name on the direct debit bank account.
	BankTransferAccountName *string `json:"BankTransferAccountName,omitempty"`
	// This is a masked displayable version of the bank account number, used for security purposes. For example: `XXXXXXXXX54321`.
	BankTransferAccountNumberMask *string `json:"BankTransferAccountNumberMask,omitempty"`
	// The type of the customer's bank account. Applicable to direct debit payment methods.
	BankTransferAccountType *string `json:"BankTransferAccountType,omitempty"`
	// Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user.
	//
	// Possible Values:
	//
	//
	// * `AutomatischIncasso` (NL)
	//
	// * `LastschriftDE` (Germany)
	//
	// * `LastschriftAT` (Austria)
	//
	// * `DemandeDePrelevement` (FR)
	//
	// * `DirectDebitUK` (UK)
	//
	// * `Domicil` (Belgium)
	//
	// * `LastschriftCH` (CH)
	//
	// * `RID` (Italy)
	//
	// * `OrdenDeDomiciliacion` (Spain)
	// * `Autogiro` (Sweden)
	// * `Betalingsservice` (Denmark)
	//
	BankTransferType *ProxyGetPaymentMethodSnapshotBankTransferTypeEnum `json:"BankTransferType,omitempty"`
	// The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Only applicable to direct debit payments in Switzerland with Global Collect.
	BusinessIdentificationCode *string `json:"BusinessIdentificationCode,omitempty"`
	// The city of the customer's address. Applicable to debit payment methods.
	City *string `json:"City,omitempty"`
	// The name of the company.
	//
	CompanyName *string `json:"CompanyName,omitempty"`
	// The two-letter country code of the customer's address. Applicable to direct debit payment methods.
	Country *string `json:"Country,omitempty"`
	// The first line of the card holder's address, which is often a street address or business name. Applicable to credit card and direct debit payment methods.
	CreditCardAddress1 *string `json:"CreditCardAddress1,omitempty"`
	// The second line of the card holder's address. Applicable to credit card and direct debit payment methods.
	CreditCardAddress2 *string `json:"CreditCardAddress2,omitempty"`
	// The city of the card holder's address. Applicable to credit card and direct debit payment methods.
	CreditCardCity *string `json:"CreditCardCity,omitempty"`
	// The country of the card holder's address.
	CreditCardCountry *string `json:"CreditCardCountry,omitempty"`
	// The expiration month of the credit card or debit card. Applicable to credit card and direct debit payment methods.
	CreditCardExpirationMonth *int `json:"CreditCardExpirationMonth,omitempty"`
	// The expiration month of the credit card or debit card. Applicable to credit card and direct debit payment methods.
	CreditCardExpirationYear *int `json:"CreditCardExpirationYear,omitempty"`
	// The full name of the card holder. Applicable to credit card and direct debit payment methods.
	CreditCardHolderName *string `json:"CreditCardHolderName,omitempty"`
	// A masked version of the credit or debit card number.
	CreditCardMaskNumber *string `json:"CreditCardMaskNumber,omitempty"`
	// The billing address's zip code.
	CreditCardPostalCode *string `json:"CreditCardPostalCode,omitempty"`
	// The billing address's state. Applicable if `CreditCardCountry` is either Canada or the US.
	CreditCardState *string `json:"CreditCardState,omitempty"`
	// The type of credit card or debit card.
	CreditCardType *ProxyGetPaymentMethodSnapshotCreditCardTypeEnum `json:"CreditCardType,omitempty"`
	// The session ID of the user when the `PaymentMethod` was created or updated.
	DeviceSessionID *string `json:"DeviceSessionId,omitempty"`
	// An email address for the payment method in addition to the bill to contact email address.
	Email *string `json:"Email,omitempty"`
	// Indicates if the customer has an existing mandate or a new mandate. Only applicable to direct debit payment methods.
	ExistingMandate *ProxyGetPaymentMethodSnapshotExistingMandateEnum `json:"ExistingMandate,omitempty"`
	// The customer's first name. Only applicable to direct debit payment methods.
	FirstName *string `json:"FirstName,omitempty"`
	// The International Bank Account Number. Only applicable to direct debit payment methods.
	Iban *string `json:"IBAN,omitempty"`
	// The IP address of the user when the payment method was created or updated.
	IPAddress *string `json:"IPAddress,omitempty"`
	// Object identifier.
	ID *string `json:"Id,omitempty"`
	// The unique identity number of the customer account.
	//
	IdentityNumber *string `json:"IdentityNumber,omitempty"`
	// Whether the customer account is a company.
	//
	IsCompany *bool `json:"IsCompany,omitempty"`
	// The date of the last failed attempt to collect payment with this payment method.
	LastFailedSaleTransactionDate *time.Time `json:"LastFailedSaleTransactionDate,omitempty"`
	// The customer's last name. Only applicable to direct debit payment methods.
	LastName *string `json:"LastName,omitempty"`
	// The date of the most recent transaction.
	LastTransactionDateTime *time.Time `json:"LastTransactionDateTime,omitempty"`
	// The status of the most recent transaction.
	LastTransactionStatus *string `json:"LastTransactionStatus,omitempty"`
	// The date when the mandate was created, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
	MandateCreationDate *types.Date `json:"MandateCreationDate,omitempty"`
	// The ID of the mandate. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
	MandateID *string `json:"MandateID,omitempty"`
	// Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
	MandateReceived *string `json:"MandateReceived,omitempty"`
	// The date when the mandate was last updated, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
	MandateUpdateDate *types.Date `json:"MandateUpdateDate,omitempty"`
	// The number of allowable consecutive failures Zuora attempts with the payment method before stopping.
	MaxConsecutivePaymentFailures *int64 `json:"MaxConsecutivePaymentFailures,omitempty"`
	// The name of the payment method.
	Name *string `json:"Name,omitempty"`
	// The number of consecutive failed payment for the payment method.
	NumConsecutiveFailures *int `json:"NumConsecutiveFailures,omitempty"`
	// Object identifier of the payment method.
	PaymentMethodID *string `json:"PaymentMethodId,omitempty"`
	// Specifies the status of the payment method.
	PaymentMethodStatus *ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum `json:"PaymentMethodStatus,omitempty"`
	// The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours.
	PaymentRetryWindow *int64 `json:"PaymentRetryWindow,omitempty"`
	// The PayPal billing agreement ID, which is a contract between two PayPal accounts.
	PaypalBaid *string `json:"PaypalBaid,omitempty"`
	// The email address associated with the account holder's PayPal account or of the PayPal account of the person paying for the service.
	PaypalEmail *string `json:"PaypalEmail,omitempty"`
	// PayPal's Adaptive Payments API key.
	PaypalPreapprovalKey *string `json:"PaypalPreapprovalKey,omitempty"`
	// Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments.
	PaypalType *ProxyGetPaymentMethodSnapshotPaypalTypeEnum `json:"PaypalType,omitempty"`
	// The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.
	Phone *string `json:"Phone,omitempty"`
	// The zip code of the customer's address. Only applicable to direct debit payment methods.
	PostalCode *string `json:"PostalCode,omitempty"`
	// A gateway unique identifier that replaces sensitive payment method data. Applicable to CC Reference Transaction payment methods.
	SecondTokenID *string `json:"SecondTokenId,omitempty"`
	// The state of the customer's address. Only applicable to direct debit payment methods.
	State *string `json:"State,omitempty"`
	// The street name of the customer's address. Only applicable to direct debit payment methods.
	StreetName *string `json:"StreetName,omitempty"`
	// The street number of the customer's address. Only applicable to direct debit payment methods.
	StreetNumber *string `json:"StreetNumber,omitempty"`
	// A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. Applicable to CC Reference Transaction payment methods.
	TokenID *string `json:"TokenId,omitempty"`
	// The number of error payments that used this payment method.
	TotalNumberOfErrorPayments *int `json:"TotalNumberOfErrorPayments,omitempty"`
	// The number of successful payments that used this payment method.
	TotalNumberOfProcessedPayments *int `json:"TotalNumberOfProcessedPayments,omitempty"`
	// The type of payment method.
	Type *ProxyGetPaymentMethodSnapshotTypeEnum `json:"Type,omitempty"`
	// Determines whether to use the default retry rules configured in the Zuora Payments settings.
	UseDefaultRetryRule *bool `json:"UseDefaultRetryRule,omitempty"`
}
