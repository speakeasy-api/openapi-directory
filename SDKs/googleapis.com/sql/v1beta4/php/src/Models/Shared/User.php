<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * User - A Cloud SQL user resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class User
{
    /**
     * Dual password status for the user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserDualPasswordTypeEnum $dualPasswordType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dualPasswordType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UserDualPasswordTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserDualPasswordTypeEnum $dualPasswordType = null;
    
    /**
     * This field is deprecated and will be removed from a future version of the API.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Optional. The host from which the user can connect. For `insert` operations, host defaults to an empty string. For `update` operations, host is specified as part of the request URL. The host name cannot be updated after insertion. For a MySQL instance, it's required; for a PostgreSQL or SQL Server instance, it's optional.
     * 
     * @var ?string $host
     */
	#[\JMS\Serializer\Annotation\SerializedName('host')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $host = null;
    
    /**
     * The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* because it is already specified on the URL.
     * 
     * @var ?string $instance
     */
	#[\JMS\Serializer\Annotation\SerializedName('instance')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instance = null;
    
    /**
     * This is always `sql#user`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The name of the user in the Cloud SQL instance. Can be omitted for `update` because it is already specified in the URL.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The password for the user.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * User level password validation policy.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserPasswordValidationPolicy $passwordPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('passwordPolicy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserPasswordValidationPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserPasswordValidationPolicy $passwordPolicy = null;
    
    /**
     * The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* because it is already specified on the URL.
     * 
     * @var ?string $project
     */
	#[\JMS\Serializer\Annotation\SerializedName('project')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $project = null;
    
    /**
     * Represents a Sql Server user on the Cloud SQL instance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SqlServerUserDetails $sqlserverUserDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('sqlserverUserDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SqlServerUserDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SqlServerUserDetails $sqlserverUserDetails = null;
    
    /**
     * The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UserTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserTypeEnum $type = null;
    
	public function __construct()
	{
		$this->dualPasswordType = null;
		$this->etag = null;
		$this->host = null;
		$this->instance = null;
		$this->kind = null;
		$this->name = null;
		$this->password = null;
		$this->passwordPolicy = null;
		$this->project = null;
		$this->sqlserverUserDetails = null;
		$this->type = null;
	}
}
