<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Task - Created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Task
{
	#[\JMS\Serializer\Annotation\SerializedName('archived')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $archived = null;
    
    /**
     * ID of `/api/users/` who assigned the task
     * 
     * @var ?string $assignedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('assigned_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $assignedBy = null;
    
    /**
     * Either `assignee_user` or `assignee_group` should be set
     * 
     * @var ?int $assigneeGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee_group')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $assigneeGroup = null;
    
    /**
     * Either `assignee_user` or `assignee_group` should be set
     * 
     * @var ?string $assigneeUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee_user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $assigneeUser = null;
    
    /**
     * Associated task items
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaskAssociatedTaskItem> $associatedItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('associated_items')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaskAssociatedTaskItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $associatedItems = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $category = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * ID of `/api/users` who created the task
     * 
     * @var ?string $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdBy = null;
    
    /**
     * When the task is due
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TaskTaskReminder $dueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('due_date')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TaskTaskReminder')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaskTaskReminder $dueDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Additional notes of the task
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaskTaskNote> $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaskTaskNote>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notes = null;
    
    /**
     * Can be one of the following 10(Low), 20(Medium), 30(High), 40(Urgent)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TaskPriorityEnum $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TaskPriorityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaskPriorityEnum $priority = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $status;
    
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	public function __construct()
	{
		$this->archived = null;
		$this->assignedBy = null;
		$this->assigneeGroup = null;
		$this->assigneeUser = null;
		$this->associatedItems = null;
		$this->category = null;
		$this->createdAt = null;
		$this->createdBy = null;
		$this->dueDate = null;
		$this->id = null;
		$this->notes = null;
		$this->priority = null;
		$this->status = 0;
		$this->title = "";
		$this->updatedAt = null;
	}
}
