"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datavalue as shared_datavalue
from ..shared import propertylatestvalue as shared_propertylatestvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPropertyValueResponse:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextToken'), 'exclude': lambda f: f is None }})  
    property_values: Optional[dict[str, shared_propertylatestvalue.PropertyLatestValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyValues'), 'exclude': lambda f: f is None }})  
    tabular_property_values: Optional[list[list[dict[str, shared_datavalue.DataValue]]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tabularPropertyValues'), 'exclude': lambda f: f is None }})  
    