// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionConfigurationPropertyTypeEnum string

const (
	ActionConfigurationPropertyTypeEnumString  ActionConfigurationPropertyTypeEnum = "String"
	ActionConfigurationPropertyTypeEnumNumber  ActionConfigurationPropertyTypeEnum = "Number"
	ActionConfigurationPropertyTypeEnumBoolean ActionConfigurationPropertyTypeEnum = "Boolean"
)

func (e ActionConfigurationPropertyTypeEnum) ToPointer() *ActionConfigurationPropertyTypeEnum {
	return &e
}

func (e *ActionConfigurationPropertyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "String":
		fallthrough
	case "Number":
		fallthrough
	case "Boolean":
		*e = ActionConfigurationPropertyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionConfigurationPropertyTypeEnum: %v", v)
	}
}
