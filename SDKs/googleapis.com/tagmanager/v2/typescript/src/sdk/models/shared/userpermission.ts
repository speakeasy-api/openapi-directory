/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountAccess } from "./accountaccess";
import { ContainerAccess } from "./containeraccess";
import { Expose, Type } from "class-transformer";

/**
 * Represents a user's permissions to an account and its container.
 */
export class UserPermission extends SpeakeasyBase {
  /**
   * Defines the Google Tag Manager Account access permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountAccess" })
  @Type(() => AccountAccess)
  accountAccess?: AccountAccess;

  /**
   * The Account ID uniquely identifies the GTM Account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
   */
  @SpeakeasyMetadata({ elemType: ContainerAccess })
  @Expose({ name: "containerAccess" })
  @Type(() => ContainerAccess)
  containerAccess?: ContainerAccess[];

  /**
   * User's email address. @mutable tagmanager.accounts.permissions.create
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddress" })
  emailAddress?: string;

  /**
   * GTM UserPermission's API relative path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;
}
