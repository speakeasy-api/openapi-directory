// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateComponentTypeRequestBody struct {
	// A friendly name for the component type.
	ComponentTypeName *string `json:"componentTypeName,omitempty"`
	// The description of the component type.
	Description *string `json:"description,omitempty"`
	// Specifies the parent component type to extend.
	ExtendsFrom []string `json:"extendsFrom,omitempty"`
	// An object that maps strings to the functions in the component type. Each string in the mapping must be unique to this object.
	Functions map[string]shared.FunctionRequest `json:"functions,omitempty"`
	// A Boolean value that specifies whether an entity can have more than one component of this type.
	IsSingleton *bool `json:"isSingleton,omitempty"`
	// An object that maps strings to the property definitions in the component type. Each string in the mapping must be unique to this object.
	PropertyDefinitions map[string]shared.PropertyDefinitionRequest `json:"propertyDefinitions,omitempty"`
	// <p/>
	PropertyGroups map[string]shared.PropertyGroupRequest `json:"propertyGroups,omitempty"`
	// Metadata that you can use to manage the component type.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateComponentTypeRequest struct {
	RequestBody       CreateComponentTypeRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The ID of the component type.
	ComponentTypeID string `pathParam:"style=simple,explode=false,name=componentTypeId"`
	// The ID of the workspace that contains the component type.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type CreateComponentTypeResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateComponentTypeResponse *shared.CreateComponentTypeResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
