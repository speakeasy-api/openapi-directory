/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording {
    /**
     * Automatic call recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable")
    public Boolean enable;
    public UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording withEnable(Boolean enable) {
        this.enable = enable;
        return this;
    }
    
    /**
     * Values: inbound, outbound, both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_calls")
    public UpdateSettingTemplateApplicationJSONPolicyAutoCallRecordingRecordingCallsEnum recordingCalls;
    public UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording withRecordingCalls(UpdateSettingTemplateApplicationJSONPolicyAutoCallRecordingRecordingCallsEnum recordingCalls) {
        this.recordingCalls = recordingCalls;
        return this;
    }
    
    /**
     * Play a prompt to call participants when the recording has started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_start_prompt")
    public Boolean recordingStartPrompt;
    public UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording withRecordingStartPrompt(Boolean recordingStartPrompt) {
        this.recordingStartPrompt = recordingStartPrompt;
        return this;
    }
    
    /**
     * Allow call recording transcription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_transcription")
    public Boolean recordingTranscription;
    public UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording withRecordingTranscription(Boolean recordingTranscription) {
        this.recordingTranscription = recordingTranscription;
        return this;
    }
    
}
