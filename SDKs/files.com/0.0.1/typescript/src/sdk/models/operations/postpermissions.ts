/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostPermissionsRequestBody extends SpeakeasyBase {
  /**
   * Group ID
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=group_id" })
  groupId?: number;

  /**
   * Folder path
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=path" })
  path?: string;

  /**
   *  Permission type.  Can be `admin`, `full`, `readonly`, `writeonly`, `list`, or `history`
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=permission" })
  permission?: string;

  /**
   * Apply to subfolders recursively?
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=recursive" })
  recursive?: boolean;

  /**
   * User ID.  Provide `username` or `user_id`
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=user_id" })
  userId?: number;

  /**
   * User username.  Provide `username` or `user_id`
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=username" })
  username?: string;
}

export class PostPermissionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The Permissions object.
   */
  @SpeakeasyMetadata()
  permissionEntity?: shared.PermissionEntity;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
