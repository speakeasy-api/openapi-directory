// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConnectCustomKeyStoreXAmzTargetEnum
type ConnectCustomKeyStoreXAmzTargetEnum string

const (
	ConnectCustomKeyStoreXAmzTargetEnumTrentServiceConnectCustomKeyStore ConnectCustomKeyStoreXAmzTargetEnum = "TrentService.ConnectCustomKeyStore"
)

func (e *ConnectCustomKeyStoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TrentService.ConnectCustomKeyStore":
		*e = ConnectCustomKeyStoreXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectCustomKeyStoreXAmzTargetEnum: %s", s)
	}
}

type ConnectCustomKeyStoreHeaders struct {
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ConnectCustomKeyStoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ConnectCustomKeyStoreRequest struct {
	Headers ConnectCustomKeyStoreHeaders
	Request shared.ConnectCustomKeyStoreRequest `request:"mediaType=application/json"`
}

type ConnectCustomKeyStoreResponse struct {
	// CloudHsmClusterInvalidConfigurationException
	CloudHsmClusterInvalidConfigurationException interface{}
	// CloudHsmClusterNotActiveException
	CloudHsmClusterNotActiveException interface{}
	// Success
	ConnectCustomKeyStoreResponse map[string]interface{}
	ContentType                   string
	// CustomKeyStoreInvalidStateException
	CustomKeyStoreInvalidStateException interface{}
	// CustomKeyStoreNotFoundException
	CustomKeyStoreNotFoundException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	StatusCode           int
	RawResponse          *http.Response
}
