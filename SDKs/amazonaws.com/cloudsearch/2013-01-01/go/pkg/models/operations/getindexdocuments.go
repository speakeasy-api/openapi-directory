// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETIndexDocumentsActionEnum
type GETIndexDocumentsActionEnum string

const (
	GETIndexDocumentsActionEnumIndexDocuments GETIndexDocumentsActionEnum = "IndexDocuments"
)

func (e *GETIndexDocumentsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IndexDocuments":
		*e = GETIndexDocumentsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETIndexDocumentsActionEnum: %s", s)
	}
}

// GETIndexDocumentsVersionEnum
type GETIndexDocumentsVersionEnum string

const (
	GETIndexDocumentsVersionEnumTwoThousandAndThirteen0101 GETIndexDocumentsVersionEnum = "2013-01-01"
)

func (e *GETIndexDocumentsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-01":
		*e = GETIndexDocumentsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETIndexDocumentsVersionEnum: %s", s)
	}
}

type GETIndexDocumentsQueryParams struct {
	Action     GETIndexDocumentsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                       `queryParam:"style=form,explode=true,name=DomainName"`
	Version    GETIndexDocumentsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETIndexDocumentsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETIndexDocumentsRequest struct {
	QueryParams GETIndexDocumentsQueryParams
	Headers     GETIndexDocumentsHeaders
}

type GETIndexDocumentsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
