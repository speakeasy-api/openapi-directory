// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRouteRequestBodyAuthorizationTypeEnum - The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
type UpdateRouteRequestBodyAuthorizationTypeEnum string

const (
	UpdateRouteRequestBodyAuthorizationTypeEnumNone   UpdateRouteRequestBodyAuthorizationTypeEnum = "NONE"
	UpdateRouteRequestBodyAuthorizationTypeEnumAwsIam UpdateRouteRequestBodyAuthorizationTypeEnum = "AWS_IAM"
	UpdateRouteRequestBodyAuthorizationTypeEnumCustom UpdateRouteRequestBodyAuthorizationTypeEnum = "CUSTOM"
	UpdateRouteRequestBodyAuthorizationTypeEnumJwt    UpdateRouteRequestBodyAuthorizationTypeEnum = "JWT"
)

func (e UpdateRouteRequestBodyAuthorizationTypeEnum) ToPointer() *UpdateRouteRequestBodyAuthorizationTypeEnum {
	return &e
}

func (e *UpdateRouteRequestBodyAuthorizationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "AWS_IAM":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "JWT":
		*e = UpdateRouteRequestBodyAuthorizationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateRouteRequestBodyAuthorizationTypeEnum: %v", v)
	}
}

type UpdateRouteRequestBody struct {
	// Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
	APIKeyRequired *bool `json:"apiKeyRequired,omitempty"`
	// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
	AuthorizationScopes []string `json:"authorizationScopes,omitempty"`
	// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
	AuthorizationType *UpdateRouteRequestBodyAuthorizationTypeEnum `json:"authorizationType,omitempty"`
	// The identifier.
	AuthorizerID *string `json:"authorizerId,omitempty"`
	// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
	ModelSelectionExpression *string `json:"modelSelectionExpression,omitempty"`
	// A string with a length between [1-64].
	OperationName *string `json:"operationName,omitempty"`
	// The route models.
	RequestModels map[string]string `json:"requestModels,omitempty"`
	// The route parameters.
	RequestParameters map[string]shared.ParameterConstraints `json:"requestParameters,omitempty"`
	// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
	RouteKey *string `json:"routeKey,omitempty"`
	// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
	RouteResponseSelectionExpression *string `json:"routeResponseSelectionExpression,omitempty"`
	// A string with a length between [1-128].
	Target *string `json:"target,omitempty"`
}

type UpdateRouteRequest struct {
	RequestBody       UpdateRouteRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The API identifier.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The route ID.
	RouteID string `pathParam:"style=simple,explode=false,name=routeId"`
}

type UpdateRouteResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateRouteResult *shared.UpdateRouteResult
}
