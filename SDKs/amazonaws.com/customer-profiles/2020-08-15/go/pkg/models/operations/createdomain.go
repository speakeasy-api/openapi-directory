// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDomainPathParams struct {
	// The unique name of the domain.
	DomainName string `pathParam:"style=simple,explode=false,name=DomainName"`
}

type CreateDomainHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateDomainRequestBodyMatching - The flag that enables the matching process of duplicate profiles.
type CreateDomainRequestBodyMatching struct {
	AutoMerging     *shared.AutoMerging     `json:"AutoMerging,omitempty"`
	Enabled         *bool                   `json:"Enabled,omitempty"`
	ExportingConfig *shared.ExportingConfig `json:"ExportingConfig,omitempty"`
	JobSchedule     *shared.JobSchedule     `json:"JobSchedule,omitempty"`
}

type CreateDomainRequestBody struct {
	// The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.
	DeadLetterQueueURL *string `json:"DeadLetterQueueUrl,omitempty"`
	// The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.
	DefaultEncryptionKey *string `json:"DefaultEncryptionKey,omitempty"`
	// The default number of days until the data within the domain expires.
	DefaultExpirationDays int64 `json:"DefaultExpirationDays"`
	// The flag that enables the matching process of duplicate profiles.
	Matching *CreateDomainRequestBodyMatching `json:"Matching,omitempty"`
	// The tags used to organize, track, or control access for this resource.
	Tags map[string]string `json:"Tags,omitempty"`
}

type CreateDomainRequest struct {
	PathParams CreateDomainPathParams
	Headers    CreateDomainHeaders
	Request    CreateDomainRequestBody `request:"mediaType=application/json"`
}

type CreateDomainResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateDomainResponse *shared.CreateDomainResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
