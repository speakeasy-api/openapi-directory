// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CheckErrorCodeEnum - The error code.
type CheckErrorCodeEnum string

const (
	CheckErrorCodeEnumErrorCodeUnspecified                   CheckErrorCodeEnum = "ERROR_CODE_UNSPECIFIED"
	CheckErrorCodeEnumNotFound                               CheckErrorCodeEnum = "NOT_FOUND"
	CheckErrorCodeEnumPermissionDenied                       CheckErrorCodeEnum = "PERMISSION_DENIED"
	CheckErrorCodeEnumResourceExhausted                      CheckErrorCodeEnum = "RESOURCE_EXHAUSTED"
	CheckErrorCodeEnumBudgetExceeded                         CheckErrorCodeEnum = "BUDGET_EXCEEDED"
	CheckErrorCodeEnumDenialOfServiceDetected                CheckErrorCodeEnum = "DENIAL_OF_SERVICE_DETECTED"
	CheckErrorCodeEnumLoadShedding                           CheckErrorCodeEnum = "LOAD_SHEDDING"
	CheckErrorCodeEnumAbuserDetected                         CheckErrorCodeEnum = "ABUSER_DETECTED"
	CheckErrorCodeEnumServiceNotActivated                    CheckErrorCodeEnum = "SERVICE_NOT_ACTIVATED"
	CheckErrorCodeEnumVisibilityDenied                       CheckErrorCodeEnum = "VISIBILITY_DENIED"
	CheckErrorCodeEnumBillingDisabled                        CheckErrorCodeEnum = "BILLING_DISABLED"
	CheckErrorCodeEnumProjectDeleted                         CheckErrorCodeEnum = "PROJECT_DELETED"
	CheckErrorCodeEnumProjectInvalid                         CheckErrorCodeEnum = "PROJECT_INVALID"
	CheckErrorCodeEnumConsumerInvalid                        CheckErrorCodeEnum = "CONSUMER_INVALID"
	CheckErrorCodeEnumIPAddressBlocked                       CheckErrorCodeEnum = "IP_ADDRESS_BLOCKED"
	CheckErrorCodeEnumRefererBlocked                         CheckErrorCodeEnum = "REFERER_BLOCKED"
	CheckErrorCodeEnumClientAppBlocked                       CheckErrorCodeEnum = "CLIENT_APP_BLOCKED"
	CheckErrorCodeEnumAPITargetBlocked                       CheckErrorCodeEnum = "API_TARGET_BLOCKED"
	CheckErrorCodeEnumAPIKeyInvalid                          CheckErrorCodeEnum = "API_KEY_INVALID"
	CheckErrorCodeEnumAPIKeyExpired                          CheckErrorCodeEnum = "API_KEY_EXPIRED"
	CheckErrorCodeEnumAPIKeyNotFound                         CheckErrorCodeEnum = "API_KEY_NOT_FOUND"
	CheckErrorCodeEnumSpatulaHeaderInvalid                   CheckErrorCodeEnum = "SPATULA_HEADER_INVALID"
	CheckErrorCodeEnumLoasRoleInvalid                        CheckErrorCodeEnum = "LOAS_ROLE_INVALID"
	CheckErrorCodeEnumNoLoasProject                          CheckErrorCodeEnum = "NO_LOAS_PROJECT"
	CheckErrorCodeEnumLoasProjectDisabled                    CheckErrorCodeEnum = "LOAS_PROJECT_DISABLED"
	CheckErrorCodeEnumSecurityPolicyViolated                 CheckErrorCodeEnum = "SECURITY_POLICY_VIOLATED"
	CheckErrorCodeEnumInvalidCredential                      CheckErrorCodeEnum = "INVALID_CREDENTIAL"
	CheckErrorCodeEnumLocationPolicyViolated                 CheckErrorCodeEnum = "LOCATION_POLICY_VIOLATED"
	CheckErrorCodeEnumNamespaceLookupUnavailable             CheckErrorCodeEnum = "NAMESPACE_LOOKUP_UNAVAILABLE"
	CheckErrorCodeEnumServiceStatusUnavailable               CheckErrorCodeEnum = "SERVICE_STATUS_UNAVAILABLE"
	CheckErrorCodeEnumBillingStatusUnavailable               CheckErrorCodeEnum = "BILLING_STATUS_UNAVAILABLE"
	CheckErrorCodeEnumQuotaCheckUnavailable                  CheckErrorCodeEnum = "QUOTA_CHECK_UNAVAILABLE"
	CheckErrorCodeEnumLoasProjectLookupUnavailable           CheckErrorCodeEnum = "LOAS_PROJECT_LOOKUP_UNAVAILABLE"
	CheckErrorCodeEnumCloudResourceManagerBackendUnavailable CheckErrorCodeEnum = "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE"
	CheckErrorCodeEnumSecurityPolicyBackendUnavailable       CheckErrorCodeEnum = "SECURITY_POLICY_BACKEND_UNAVAILABLE"
	CheckErrorCodeEnumLocationPolicyBackendUnavailable       CheckErrorCodeEnum = "LOCATION_POLICY_BACKEND_UNAVAILABLE"
	CheckErrorCodeEnumInjectedError                          CheckErrorCodeEnum = "INJECTED_ERROR"
)

func (e CheckErrorCodeEnum) ToPointer() *CheckErrorCodeEnum {
	return &e
}

func (e *CheckErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR_CODE_UNSPECIFIED":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "PERMISSION_DENIED":
		fallthrough
	case "RESOURCE_EXHAUSTED":
		fallthrough
	case "BUDGET_EXCEEDED":
		fallthrough
	case "DENIAL_OF_SERVICE_DETECTED":
		fallthrough
	case "LOAD_SHEDDING":
		fallthrough
	case "ABUSER_DETECTED":
		fallthrough
	case "SERVICE_NOT_ACTIVATED":
		fallthrough
	case "VISIBILITY_DENIED":
		fallthrough
	case "BILLING_DISABLED":
		fallthrough
	case "PROJECT_DELETED":
		fallthrough
	case "PROJECT_INVALID":
		fallthrough
	case "CONSUMER_INVALID":
		fallthrough
	case "IP_ADDRESS_BLOCKED":
		fallthrough
	case "REFERER_BLOCKED":
		fallthrough
	case "CLIENT_APP_BLOCKED":
		fallthrough
	case "API_TARGET_BLOCKED":
		fallthrough
	case "API_KEY_INVALID":
		fallthrough
	case "API_KEY_EXPIRED":
		fallthrough
	case "API_KEY_NOT_FOUND":
		fallthrough
	case "SPATULA_HEADER_INVALID":
		fallthrough
	case "LOAS_ROLE_INVALID":
		fallthrough
	case "NO_LOAS_PROJECT":
		fallthrough
	case "LOAS_PROJECT_DISABLED":
		fallthrough
	case "SECURITY_POLICY_VIOLATED":
		fallthrough
	case "INVALID_CREDENTIAL":
		fallthrough
	case "LOCATION_POLICY_VIOLATED":
		fallthrough
	case "NAMESPACE_LOOKUP_UNAVAILABLE":
		fallthrough
	case "SERVICE_STATUS_UNAVAILABLE":
		fallthrough
	case "BILLING_STATUS_UNAVAILABLE":
		fallthrough
	case "QUOTA_CHECK_UNAVAILABLE":
		fallthrough
	case "LOAS_PROJECT_LOOKUP_UNAVAILABLE":
		fallthrough
	case "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE":
		fallthrough
	case "SECURITY_POLICY_BACKEND_UNAVAILABLE":
		fallthrough
	case "LOCATION_POLICY_BACKEND_UNAVAILABLE":
		fallthrough
	case "INJECTED_ERROR":
		*e = CheckErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckErrorCodeEnum: %v", v)
	}
}

// CheckError - Defines the errors to be returned in google.api.servicecontrol.v1.CheckResponse.check_errors.
type CheckError struct {
	// The error code.
	Code *CheckErrorCodeEnum `json:"code,omitempty"`
	// Free-form text providing details on the error cause of the error.
	Detail *string `json:"detail,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Status *Status `json:"status,omitempty"`
	// Subject to whom this error applies. See the specific code enum for more details on this field. For example: - "project:" - "folder:" - "organization:"
	Subject *string `json:"subject,omitempty"`
}
