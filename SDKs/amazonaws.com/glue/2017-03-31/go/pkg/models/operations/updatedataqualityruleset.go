// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDataQualityRulesetXAmzTargetEnum
type UpdateDataQualityRulesetXAmzTargetEnum string

const (
	UpdateDataQualityRulesetXAmzTargetEnumAwsGlueUpdateDataQualityRuleset UpdateDataQualityRulesetXAmzTargetEnum = "AWSGlue.UpdateDataQualityRuleset"
)

func (e UpdateDataQualityRulesetXAmzTargetEnum) ToPointer() *UpdateDataQualityRulesetXAmzTargetEnum {
	return &e
}

func (e *UpdateDataQualityRulesetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.UpdateDataQualityRuleset":
		*e = UpdateDataQualityRulesetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDataQualityRulesetXAmzTargetEnum: %v", v)
	}
}

type UpdateDataQualityRulesetRequest struct {
	UpdateDataQualityRulesetRequest shared.UpdateDataQualityRulesetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      UpdateDataQualityRulesetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDataQualityRulesetResponse struct {
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	// Success
	UpdateDataQualityRulesetResponse *shared.UpdateDataQualityRulesetResponse
}
