/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WalletTransactionListRequestOptions } from "./wallettransactionlistrequestoptions";
import { Expose, Type } from "class-transformer";

/**
 * WalletTransactionListRequest defines the request schema for `/wallet/transaction/list`
 */
export class WalletTransactionListRequest extends SpeakeasyBase {
  /**
   * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * The number of transactions to fetch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * A base64 value representing the latest transaction that has already been requested. Set this to `next_cursor` received from the previous `/wallet/transaction/list` request. If provided, the response will only contain transactions created before that transaction. If omitted, the response will contain transactions starting from the most recent, and in descending order by the `created_at` time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * Additional wallet transaction options
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  @Type(() => WalletTransactionListRequestOptions)
  options?: WalletTransactionListRequestOptions;

  /**
   * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * The ID of the e-wallet to fetch transactions from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wallet_id" })
  walletId: string;
}
