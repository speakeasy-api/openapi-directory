"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import interaction_group_enum as shared_interaction_group_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InteractionLimitResponse:
    r"""Interaction limit settings."""
    
    expires_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    limit: shared_interaction_group_enum.InteractionGroupEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit') }})
    r"""The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect."""  
    origin: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin') }})  
    