// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PricePricingTypeEnum - The pricing type for the deal/product. (default: CPM)
type PricePricingTypeEnum string

const (
	PricePricingTypeEnumPricingTypeUnspecified PricePricingTypeEnum = "PRICING_TYPE_UNSPECIFIED"
	PricePricingTypeEnumCostPerMille           PricePricingTypeEnum = "COST_PER_MILLE"
	PricePricingTypeEnumCostPerDay             PricePricingTypeEnum = "COST_PER_DAY"
)

func (e PricePricingTypeEnum) ToPointer() *PricePricingTypeEnum {
	return &e
}

func (e *PricePricingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICING_TYPE_UNSPECIFIED":
		fallthrough
	case "COST_PER_MILLE":
		fallthrough
	case "COST_PER_DAY":
		*e = PricePricingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PricePricingTypeEnum: %v", v)
	}
}

// Price - Represents a price and a pricing type for a product / deal.
type Price struct {
	// Represents an amount of money with its currency type.
	Amount *Money `json:"amount,omitempty"`
	// The pricing type for the deal/product. (default: CPM)
	PricingType *PricePricingTypeEnum `json:"pricingType,omitempty"`
}
