<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETAssignPrivateIpAddressesRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETAssignPrivateIpAddressesActionEnum $action;
    
    /**
     * Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
     * 
     * @var ?bool $allowReassignment
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AllowReassignment')]
    public ?bool $allowReassignment = null;
    
    /**
     * One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
     * 
     * @var ?array<string> $ipv4Prefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Ipv4Prefix')]
    public ?array $ipv4Prefix = null;
    
    /**
     * The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
     * 
     * @var ?int $ipv4PrefixCount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Ipv4PrefixCount')]
    public ?int $ipv4PrefixCount = null;
    
    /**
     * The ID of the network interface.
     * 
     * @var string $networkInterfaceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NetworkInterfaceId')]
    public string $networkInterfaceId;
    
    /**
     * <p>The IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>
     * 
     * @var ?array<string> $privateIpAddress
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PrivateIpAddress')]
    public ?array $privateIpAddress = null;
    
    /**
     * The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
     * 
     * @var ?int $secondaryPrivateIpAddressCount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SecondaryPrivateIpAddressCount')]
    public ?int $secondaryPrivateIpAddressCount = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETAssignPrivateIpAddressesVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETAssignPrivateIpAddressesActionEnum::ASSIGN_PRIVATE_IP_ADDRESSES;
		$this->allowReassignment = null;
		$this->ipv4Prefix = null;
		$this->ipv4PrefixCount = null;
		$this->networkInterfaceId = "";
		$this->privateIpAddress = null;
		$this->secondaryPrivateIpAddressCount = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETAssignPrivateIpAddressesVersionEnum::TWO_THOUSAND_AND_SIXTEEN1115;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
