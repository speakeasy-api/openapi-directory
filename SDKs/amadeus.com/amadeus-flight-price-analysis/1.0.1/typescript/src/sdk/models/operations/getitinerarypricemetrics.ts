/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetItineraryPriceMetricsRequest extends SpeakeasyBase {
  /**
   * the preferred currency for display. Currency is specified in the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format, e.g. EUR for Euro
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=currencyCode",
  })
  currencyCode?: string;

  /**
   * The date on which the traveler will depart from the origin to go to the destination.
   *
   * @remarks
   *
   * Dates are specified in the[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=departureDate",
  })
  departureDate: string;

  /**
   * airport code, following [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx), to which the traveler is going.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=destinationIataCode",
  })
  destinationIataCode: string;

  /**
   * true to get price metrics for a one way trip,
   *
   * @remarks
   * false to get price metrics for a round trip
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oneWay",
  })
  oneWay?: boolean;

  /**
   * airport code, following [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx), from which the traveler will depart
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=originIataCode",
  })
  originIataCode: string;
}

export enum GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJsonLinksMethodsEnum {
  Get = "GET",
  Post = "POST",
  Put = "PUT",
  Patch = "PATCH",
  Delete = "DELETE",
  Options = "OPTIONS",
}

/**
 * Links related to the returned objects(s)
 */
export class GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJsonLinks extends SpeakeasyBase {
  /**
   * URL value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * HTTP methods supported by the sibling URI
   */
  @SpeakeasyMetadata()
  @Expose({ name: "methods" })
  methods?: GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJsonLinksMethodsEnum[];
}

/**
 * Successful reply
 */
export class GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.ItineraryPriceMetric })
  @Expose({ name: "data" })
  @Type(() => shared.ItineraryPriceMetric)
  data?: shared.ItineraryPriceMetric[];

  /**
   * Links related to the returned objects(s)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJsonLinks)
  meta?: GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJsonLinks;

  @SpeakeasyMetadata({ elemType: shared.Warning })
  @Expose({ name: "warnings" })
  @Type(() => shared.Warning)
  warnings?: shared.Warning[];
}

export class GetItineraryPriceMetricsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * code    | title
   *
   * @remarks
   * ------- | -------------------------------------
   * 477     | INVALID FORMAT
   * 572     | INVALID OPTION
   * 32171   | MANDATORY DATA MISSING
   */
  @SpeakeasyMetadata()
  error400?: shared.Error400;

  /**
   * Internal Server Error
   */
  @SpeakeasyMetadata()
  error500?: shared.Error500;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful reply
   */
  @SpeakeasyMetadata()
  getItineraryPriceMetrics200ApplicationVndAmadeusPlusJsonObject?: GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJson;
}
