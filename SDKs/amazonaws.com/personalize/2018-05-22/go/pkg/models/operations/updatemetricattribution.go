// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateMetricAttributionXAmzTargetEnum
type UpdateMetricAttributionXAmzTargetEnum string

const (
	UpdateMetricAttributionXAmzTargetEnumAmazonPersonalizeUpdateMetricAttribution UpdateMetricAttributionXAmzTargetEnum = "AmazonPersonalize.UpdateMetricAttribution"
)

func (e UpdateMetricAttributionXAmzTargetEnum) ToPointer() *UpdateMetricAttributionXAmzTargetEnum {
	return &e
}

func (e *UpdateMetricAttributionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonPersonalize.UpdateMetricAttribution":
		*e = UpdateMetricAttributionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateMetricAttributionXAmzTargetEnum: %v", v)
	}
}

type UpdateMetricAttributionRequest struct {
	UpdateMetricAttributionRequest shared.UpdateMetricAttributionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     UpdateMetricAttributionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateMetricAttributionResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateMetricAttributionResponse *shared.UpdateMetricAttributionResponse
}
