/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BandwidthSnapshotEntity - List Bandwidth Snapshots
 */
public class BandwidthSnapshotEntity {
    /**
     * Site bandwidth report bytes received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bytes_received")
    public Double bytesReceived;

    public BandwidthSnapshotEntity withBytesReceived(Double bytesReceived) {
        this.bytesReceived = bytesReceived;
        return this;
    }
    
    /**
     * Site bandwidth report bytes sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bytes_sent")
    public Double bytesSent;

    public BandwidthSnapshotEntity withBytesSent(Double bytesSent) {
        this.bytesSent = bytesSent;
        return this;
    }
    
    /**
     * Site bandwidth ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;

    public BandwidthSnapshotEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Time the site bandwidth report was logged
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("logged_at")
    public OffsetDateTime loggedAt;

    public BandwidthSnapshotEntity withLoggedAt(OffsetDateTime loggedAt) {
        this.loggedAt = loggedAt;
        return this;
    }
    
    /**
     * Site bandwidth report get requests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requests_get")
    public Double requestsGet;

    public BandwidthSnapshotEntity withRequestsGet(Double requestsGet) {
        this.requestsGet = requestsGet;
        return this;
    }
    
    /**
     * Site bandwidth report other requests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requests_other")
    public Double requestsOther;

    public BandwidthSnapshotEntity withRequestsOther(Double requestsOther) {
        this.requestsOther = requestsOther;
        return this;
    }
    
    /**
     * Site bandwidth report put requests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requests_put")
    public Double requestsPut;

    public BandwidthSnapshotEntity withRequestsPut(Double requestsPut) {
        this.requestsPut = requestsPut;
        return this;
    }
    
    /**
     * Site sync bandwidth report bytes received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sync_bytes_received")
    public Double syncBytesReceived;

    public BandwidthSnapshotEntity withSyncBytesReceived(Double syncBytesReceived) {
        this.syncBytesReceived = syncBytesReceived;
        return this;
    }
    
    /**
     * Site sync bandwidth report bytes sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sync_bytes_sent")
    public Double syncBytesSent;

    public BandwidthSnapshotEntity withSyncBytesSent(Double syncBytesSent) {
        this.syncBytesSent = syncBytesSent;
        return this;
    }
    
    public BandwidthSnapshotEntity(){}
}
