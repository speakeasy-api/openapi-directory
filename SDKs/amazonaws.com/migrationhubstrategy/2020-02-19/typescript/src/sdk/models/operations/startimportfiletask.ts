/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the source that the servers are coming from. By default, Strategy Recommendations assumes that the servers specified in the import file are available in AWS Application Discovery Service.
 */
export enum StartImportFileTaskRequestBodyDataSourceTypeEnum {
  ApplicationDiscoveryService = "ApplicationDiscoveryService",
  Mpa = "MPA",
  Import = "Import",
}

export class StartImportFileTaskRequestBody extends SpeakeasyBase {
  /**
   *  The S3 bucket where the import file is located. The bucket name is required to begin with <code>migrationhub-strategy-</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "S3Bucket" })
  s3Bucket: string;

  /**
   * Specifies the source that the servers are coming from. By default, Strategy Recommendations assumes that the servers specified in the import file are available in AWS Application Discovery Service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataSourceType" })
  dataSourceType?: StartImportFileTaskRequestBodyDataSourceTypeEnum;

  /**
   * Groups the resources in the import file together with a unique name. This ID can be as filter in <code>ListApplicationComponents</code> and <code>ListServers</code>.
   */
  @SpeakeasyMetadata({ elemType: shared.Group })
  @Expose({ name: "groupId" })
  @Type(() => shared.Group)
  groupId?: shared.Group[];

  /**
   *  A descriptive name for the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   *  The S3 bucket where Strategy Recommendations uploads import results. The bucket name is required to begin with migrationhub-strategy-.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "s3bucketForReportData" })
  s3bucketForReportData?: string;

  /**
   *  The Amazon S3 key name of the import file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "s3key" })
  s3key: string;
}

export class StartImportFileTaskRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: StartImportFileTaskRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class StartImportFileTaskResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  startImportFileTaskResponse?: shared.StartImportFileTaskResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
