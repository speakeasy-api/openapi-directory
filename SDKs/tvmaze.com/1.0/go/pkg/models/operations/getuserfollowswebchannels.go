// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUserFollowsWebchannelsEmbedEnum - Embed full webchannel info
type GetUserFollowsWebchannelsEmbedEnum string

const (
	GetUserFollowsWebchannelsEmbedEnumWebchannel GetUserFollowsWebchannelsEmbedEnum = "webchannel"
)

func (e GetUserFollowsWebchannelsEmbedEnum) ToPointer() *GetUserFollowsWebchannelsEmbedEnum {
	return &e
}

func (e *GetUserFollowsWebchannelsEmbedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "webchannel":
		*e = GetUserFollowsWebchannelsEmbedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserFollowsWebchannelsEmbedEnum: %v", v)
	}
}

type GetUserFollowsWebchannelsRequest struct {
	// Embed full webchannel info
	Embed *GetUserFollowsWebchannelsEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
}

type GetUserFollowsWebchannelsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// An array of followed webchannels
	WebchannelFollows []shared.WebchannelFollow
}
