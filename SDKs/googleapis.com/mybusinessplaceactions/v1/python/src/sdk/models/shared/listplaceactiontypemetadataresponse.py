"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import placeactiontypemetadata as shared_placeactiontypemetadata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPlaceActionTypeMetadataResponse:
    r"""Response message for PlaceActions.ListPlaceActionTypeMetadata."""
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""If the number of action types exceeded the requested page size, this field will be populated with a token to fetch the next page on a subsequent call to `placeActionTypeMetadata.list`. If there are no more results, this field will not be present in the response."""  
    place_action_type_metadata: Optional[list[shared_placeactiontypemetadata.PlaceActionTypeMetadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('placeActionTypeMetadata'), 'exclude': lambda f: f is None }})
    r"""A collection of metadata for the available place action types."""  
    