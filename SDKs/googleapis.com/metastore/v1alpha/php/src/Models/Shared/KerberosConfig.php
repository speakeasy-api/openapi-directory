<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * KerberosConfig - Configuration information for a Kerberos principal.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class KerberosConfig
{
    /**
     * A securely stored value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Secret $keytab
     */
	#[\JMS\Serializer\Annotation\SerializedName('keytab')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Secret')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Secret $keytab = null;
    
    /**
     * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     * 
     * @var ?string $krb5ConfigGcsUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('krb5ConfigGcsUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $krb5ConfigGcsUri = null;
    
    /**
     * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
     * 
     * @var ?string $principal
     */
	#[\JMS\Serializer\Annotation\SerializedName('principal')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $principal = null;
    
	public function __construct()
	{
		$this->keytab = null;
		$this->krb5ConfigGcsUri = null;
		$this->principal = null;
	}
}
