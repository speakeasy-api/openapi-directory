/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Recommendation - Recommendations are suggested ways to improve your merchant account's performance. For example, to engage with a feature, or start using a new Google product.
 */
public class Recommendation {
    /**
     * Output only. CTAs of this recommendation. Repeated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalCallToAction")
    public RecommendationCallToAction[] additionalCallToAction;

    public Recommendation withAdditionalCallToAction(RecommendationCallToAction[] additionalCallToAction) {
        this.additionalCallToAction = additionalCallToAction;
        return this;
    }
    
    /**
     * Output only. List of additional localized descriptions for a recommendation. Localication uses the `languageCode` field in `GenerateRecommendations` requests. Not all description types are guaranteed to be present and we recommend to rely on default description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalDescriptions")
    public RecommendationDescription[] additionalDescriptions;

    public Recommendation withAdditionalDescriptions(RecommendationDescription[] additionalDescriptions) {
        this.additionalDescriptions = additionalDescriptions;
        return this;
    }
    
    /**
     * Output only. Any creatives attached to the recommendation. Repeated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creative")
    public RecommendationCreative[] creative;

    public Recommendation withCreative(RecommendationCreative[] creative) {
        this.creative = creative;
        return this;
    }
    
    /**
     * Call to action (CTA) that explains how a merchant can implement this recommendation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultCallToAction")
    public RecommendationCallToAction defaultCallToAction;

    public Recommendation withDefaultCallToAction(RecommendationCallToAction defaultCallToAction) {
        this.defaultCallToAction = defaultCallToAction;
        return this;
    }
    
    /**
     * Optional. Localized recommendation description. The localization the `GenerateRecommendationsRequest.language_code` field in `GenerateRecommendationsRequest` requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultDescription")
    public String defaultDescription;

    public Recommendation withDefaultDescription(String defaultDescription) {
        this.defaultDescription = defaultDescription;
        return this;
    }
    
    /**
     * Optional. A numerical score of the impact from the recommendation's description. For example, a recommendation might suggest an upward trend in sales for a certain product. Higher number means larger impact.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numericalImpact")
    public Integer numericalImpact;

    public Recommendation withNumericalImpact(Integer numericalImpact) {
        this.numericalImpact = numericalImpact;
        return this;
    }
    
    /**
     * Optional. Indicates whether a user needs to pay when they complete the user journey suggested by the recommendation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paid")
    public Boolean paid;

    public Recommendation withPaid(Boolean paid) {
        this.paid = paid;
        return this;
    }
    
    /**
     * Optional. Localized recommendation name. The localization uses the `GenerateRecommendationsRequest.language_code` field in `GenerateRecommendationsRequest` requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recommendationName")
    public String recommendationName;

    public Recommendation withRecommendationName(String recommendationName) {
        this.recommendationName = recommendationName;
        return this;
    }
    
    /**
     * Optional. Subtype of the recommendations. Only applicable when multiple recommendations can be generated per type, and is used as an identifier of recommendation under the same recommendation type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subType")
    public String subType;

    public Recommendation withSubType(String subType) {
        this.subType = subType;
        return this;
    }
    
    /**
     * Optional. Localized Recommendation Title. Localization uses the `GenerateRecommendationsRequest.language_code` field in `GenerateRecommendationsRequest` requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public Recommendation withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Output only. Type of the recommendation. List of currently available recommendation types: - OPPORTUNITY_CREATE_NEW_COLLECTION - OPPORTUNITY_CREATE_EMAIL_CAMPAIGN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Recommendation withType(String type) {
        this.type = type;
        return this;
    }
    
    public Recommendation(){}
}
