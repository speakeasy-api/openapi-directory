"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class AccountEventEventEnum(str, Enum):
    r"""The event.
    >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
    For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
    """
    INACTIVATE_ACCOUNT = 'InactivateAccount'
    REFUND_NOT_PAID_OUT_TRANSFERS = 'RefundNotPaidOutTransfers'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountEvent:
    
    event: Optional[AccountEventEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event'), 'exclude': lambda f: f is None }})
    r"""The event.
    >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
    For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
    """  
    execution_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date on which the event will take place."""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""The reason why this event has been created."""  
    