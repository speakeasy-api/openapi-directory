/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Indicates the billing state of the Shopper.<br />ABANDONED: The shopper has not been billed in at least 10 years and has no active subscriptions.<br />INACTIVE: The shopper has been billed within the last 10 years but has no active subscriptions.<br />ACTIVE: The shopper has at least one active subscription.
 */
export enum ShopperStatusBillingStateEnum {
  Abandoned = "ABANDONED",
  Inactive = "INACTIVE",
  Active = "ACTIVE",
}

/**
 * Request was successful
 */
export class ShopperStatus extends SpeakeasyBase {
  /**
   * Indicates the billing state of the Shopper.<br />ABANDONED: The shopper has not been billed in at least 10 years and has no active subscriptions.<br />INACTIVE: The shopper has been billed within the last 10 years but has no active subscriptions.<br />ACTIVE: The shopper has at least one active subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingState" })
  billingState?: ShopperStatusBillingStateEnum;
}
