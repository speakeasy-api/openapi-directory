"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import addressinput as shared_addressinput
from ..shared import emailinput as shared_emailinput
from ..shared import phoneinput as shared_phoneinput
from ..shared import servicebusinesscontext as shared_servicebusinesscontext
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VerifyLocationRequestMethodEnum(str, Enum):
    r"""Verification method."""
    VERIFICATION_METHOD_UNSPECIFIED = 'VERIFICATION_METHOD_UNSPECIFIED'
    ADDRESS = 'ADDRESS'
    EMAIL = 'EMAIL'
    PHONE_CALL = 'PHONE_CALL'
    SMS = 'SMS'
    AUTO = 'AUTO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyLocationRequest:
    r"""Request message for Verifications.VerifyLocation."""
    
    address_input: Optional[shared_addressinput.AddressInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressInput'), 'exclude': lambda f: f is None }})
    r"""Input for ADDRESS verification."""  
    context: Optional[shared_servicebusinesscontext.ServiceBusinessContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context'), 'exclude': lambda f: f is None }})
    r"""Additional data for service business verification."""  
    email_input: Optional[shared_emailinput.EmailInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailInput'), 'exclude': lambda f: f is None }})
    r"""Input for EMAIL verification."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""The BCP 47 language code representing the language that is to be used for the verification process."""  
    method: Optional[VerifyLocationRequestMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""Verification method."""  
    phone_input: Optional[shared_phoneinput.PhoneInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneInput'), 'exclude': lambda f: f is None }})
    r"""Input for PHONE_CALL/SMS verification."""  
    