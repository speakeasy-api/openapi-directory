/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KMSKeyDetails } from "./kmskeydetails";
import { ProviderTypeEnum } from "./providertypeenum";
import { RepositoryAssociationStateEnum } from "./repositoryassociationstateenum";
import { S3RepositoryDetails } from "./s3repositorydetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a repository association. The <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_DescribeRepositoryAssociation.html">DescribeRepositoryAssociation</a> operation returns a <code>RepositoryAssociation</code> object.
 */
export class RepositoryAssociation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationArn" })
  associationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionArn" })
  connectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "KMSKeyDetails" })
  @Type(() => KMSKeyDetails)
  kmsKeyDetails?: KMSKeyDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: ProviderTypeEnum;

  /**
   * Specifies the name of an S3 bucket and a <code>CodeArtifacts</code> object that contains the S3 object keys for a source code .zip file and for a build artifacts .zip file that contains .jar or .class files.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "S3RepositoryDetails" })
  @Type(() => S3RepositoryDetails)
  s3RepositoryDetails?: S3RepositoryDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: RepositoryAssociationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StateReason" })
  stateReason?: string;
}
