/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExecutionReport - A resource that reports result of the import job execution.
 */
public class ExecutionReport {
    /**
     * A resource that aggregates errors across import job files.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionErrors")
    public ValidationReport executionErrors;
    public ExecutionReport withExecutionErrors(ValidationReport executionErrors) {
        this.executionErrors = executionErrors;
        return this;
    }
    
    /**
     * Total number of asset frames reported for the import job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("framesReported")
    public Integer framesReported;
    public ExecutionReport withFramesReported(Integer framesReported) {
        this.framesReported = framesReported;
        return this;
    }
    
    /**
     * List of job-level errors. Deprecated, use the job errors under execution_errors instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobErrors")
    public ImportError[] jobErrors;
    public ExecutionReport withJobErrors(ImportError[] jobErrors) {
        this.jobErrors = jobErrors;
        return this;
    }
    
    /**
     * Total number of rows in the import job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalRowsCount")
    public Integer totalRowsCount;
    public ExecutionReport withTotalRowsCount(Integer totalRowsCount) {
        this.totalRowsCount = totalRowsCount;
        return this;
    }
    
}
