<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Order - Order. Production access (all methods) requires the order manager role. Sandbox access does not.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Order
{
    /**
     * Whether the order was acknowledged.
     * 
     * @var ?bool $acknowledged
     */
	#[\JMS\Serializer\Annotation\SerializedName('acknowledged')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acknowledged = null;
    
    /**
     * Deprecated. Acceptable values are: - "`googleExpress`" - "`purchasesOnGoogle`" 
     * 
     * @var ?string $channelType
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('customer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderCustomer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderCustomer $customer = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('deliveryDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderDeliveryDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderDeliveryDetails $deliveryDetails = null;
    
    /**
     * The REST ID of the order. Globally unique.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "`content#order`"
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Line items that are ordered.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItem> $lineItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('lineItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $lineItems = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchantId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantId = null;
    
    /**
     * Merchant-provided ID of the order.
     * 
     * @var ?string $merchantOrderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantOrderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantOrderId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('netAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Price')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Price $netAmount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentMethod')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderPaymentMethod')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderPaymentMethod $paymentMethod = null;
    
    /**
     * The status of the payment. Acceptable values are: - "`paymentCaptured`" - "`paymentRejected`" - "`paymentSecured`" - "`pendingAuthorization`" 
     * 
     * @var ?string $paymentStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pickupDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderPickupDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderPickupDetails $pickupDetails = null;
    
    /**
     * The date when the order was placed, in ISO 8601 format.
     * 
     * @var ?string $placedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('placedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $placedDate = null;
    
    /**
     * The details of the merchant provided promotions applied to the order. To determine which promotions apply to which products, check the `Promotions[].Benefits[].OfferIds` field against the `LineItems[].Product.OfferId` field for each promotion. If a promotion is applied to more than 1 `offerId`, divide the discount value by the number of affected offers to determine how much discount to apply to each `offerId`. Examples: 1. To calculate the line item level discount for a single specific item: For each promotion, subtract the `Promotions[].Benefits[].Discount.value` amount from the `LineItems[].Price.value`. 2. To calculate the line item level discount for multiple quantity of a specific item: For each promotion, divide the `Promotions[].Benefits[].Discount.value` by the quantity of products and substract it from `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLegacyPromotion> $promotions
     */
	#[\JMS\Serializer\Annotation\SerializedName('promotions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLegacyPromotion>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $promotions = null;
    
    /**
     * Refunds for the order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderRefund> $refunds
     */
	#[\JMS\Serializer\Annotation\SerializedName('refunds')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderRefund>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $refunds = null;
    
    /**
     * Shipments of the order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderShipment> $shipments
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderShipment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $shipments = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('shippingCost')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Price')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Price $shippingCost = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('shippingCostTax')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Price')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Price $shippingCostTax = null;
    
    /**
     * Deprecated. Shipping details are provided with line items instead. Acceptable values are: - "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" - "`twoDay`" 
     * 
     * @var ?string $shippingOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('shippingOption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shippingOption = null;
    
    /**
     * The status of the order. Acceptable values are: - "`canceled`" - "`delivered`" - "`inProgress`" - "`partiallyDelivered`" - "`partiallyReturned`" - "`partiallyShipped`" - "`pendingShipment`" - "`returned`" - "`shipped`" 
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The party responsible for collecting and remitting taxes. Acceptable values are: - "`marketplaceFacilitator`" - "`merchant`" 
     * 
     * @var ?string $taxCollector
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxCollector')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxCollector = null;
    
	public function __construct()
	{
		$this->acknowledged = null;
		$this->channelType = null;
		$this->customer = null;
		$this->deliveryDetails = null;
		$this->id = null;
		$this->kind = null;
		$this->lineItems = null;
		$this->merchantId = null;
		$this->merchantOrderId = null;
		$this->netAmount = null;
		$this->paymentMethod = null;
		$this->paymentStatus = null;
		$this->pickupDetails = null;
		$this->placedDate = null;
		$this->promotions = null;
		$this->refunds = null;
		$this->shipments = null;
		$this->shippingCost = null;
		$this->shippingCostTax = null;
		$this->shippingOption = null;
		$this->status = null;
		$this->taxCollector = null;
	}
}
