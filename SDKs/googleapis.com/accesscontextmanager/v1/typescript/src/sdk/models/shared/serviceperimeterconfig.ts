/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EgressPolicy } from "./egresspolicy";
import { IngressPolicy } from "./ingresspolicy";
import { VpcAccessibleServices } from "./vpcaccessibleservices";
import { Expose, Type } from "class-transformer";

/**
 * `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
 */
export class ServicePerimeterConfig extends SpeakeasyBase {
  /**
   * A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service Perimeter Bridge, must be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessLevels" })
  accessLevels?: string[];

  /**
   * List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
   */
  @SpeakeasyMetadata({ elemType: EgressPolicy })
  @Expose({ name: "egressPolicies" })
  @Type(() => EgressPolicy)
  egressPolicies?: EgressPolicy[];

  /**
   * List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
   */
  @SpeakeasyMetadata({ elemType: IngressPolicy })
  @Expose({ name: "ingressPolicies" })
  @Type(() => IngressPolicy)
  ingressPolicies?: IngressPolicy[];

  /**
   * A list of Google Cloud resources that are inside of the service perimeter. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resources" })
  resources?: string[];

  /**
   * Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictedServices" })
  restrictedServices?: string[];

  /**
   * Specifies how APIs are allowed to communicate within the Service Perimeter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpcAccessibleServices" })
  @Type(() => VpcAccessibleServices)
  vpcAccessibleServices?: VpcAccessibleServices;
}
