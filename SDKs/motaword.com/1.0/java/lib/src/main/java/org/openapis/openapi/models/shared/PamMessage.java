/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PamMessage {
    /**
     * the message to be sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public PamMessage withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * name of the recipients in the channel
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recipients")
    public String[] recipients;
    public PamMessage withRecipients(String[] recipients) {
        this.recipients = recipients;
        return this;
    }
    
    /**
     * contexts for next message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slots")
    public String[] slots;
    public PamMessage withSlots(String[] slots) {
        this.slots = slots;
        return this;
    }
    
    /**
     * id of the thread
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thread_id")
    public String threadId;
    public PamMessage withThreadId(String threadId) {
        this.threadId = threadId;
        return this;
    }
    
    /**
     * the key for thread_id default is project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thread_key")
    public String threadKey;
    public PamMessage withThreadKey(String threadKey) {
        this.threadKey = threadKey;
        return this;
    }
    
}
