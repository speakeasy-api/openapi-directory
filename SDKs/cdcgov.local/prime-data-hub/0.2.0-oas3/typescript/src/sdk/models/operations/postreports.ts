/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostReportsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-functions-key",
  })
  apiKeyAuth: string;
}

/**
 * Optional ways to process the request
 */
export enum PostReportsOptionEnum {
  ValidatePayload = "ValidatePayload",
  CheckConnections = "CheckConnections",
  SendImmediately = "SendImmediately",
  SkipSend = "SkipSend",
  SkipInvalidItems = "SkipInvalidItems",
}

export class PostReportsRequest extends SpeakeasyBase {
  /**
   * The public health information being routed
   */
  @SpeakeasyMetadata({ data: "request, media_type=text/csv" })
  requestBody: string;

  /**
   * The client's name that matches the client name in metadata
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client",
  })
  client: string;

  /**
   * Dynamic default values for an element. ':' or %3A is used to seperate element name and value
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=default",
  })
  default?: string[];

  /**
   * Optional ways to process the request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=option",
  })
  option?: PostReportsOptionEnum;

  /**
   * A comma speparated list of receiver names. Limit the list of possible receivers to these receivers.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=routeTo",
  })
  routeTo?: string[];
}

export class PostReportsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  report?: shared.Report;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
