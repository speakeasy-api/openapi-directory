/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Play {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistedByPlayerID")
    public Long assistedByPlayerID;

    public Play withAssistedByPlayerID(Long assistedByPlayerID) {
        this.assistedByPlayerID = assistedByPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayPlayerID")
    public Long awayPlayerID;

    public Play withAwayPlayerID(Long awayPlayerID) {
        this.awayPlayerID = awayPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamScore")
    public Long awayTeamScore;

    public Play withAwayTeamScore(Long awayTeamScore) {
        this.awayTeamScore = awayTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BaselineOffsetPercentage")
    public Double baselineOffsetPercentage;

    public Play withBaselineOffsetPercentage(Double baselineOffsetPercentage) {
        this.baselineOffsetPercentage = baselineOffsetPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedByPlayerID")
    public Long blockedByPlayerID;

    public Play withBlockedByPlayerID(Long blockedByPlayerID) {
        this.blockedByPlayerID = blockedByPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public String category;

    public Play withCategory(String category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Coordinates")
    public String coordinates;

    public Play withCoordinates(String coordinates) {
        this.coordinates = coordinates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Created")
    public String created;

    public Play withCreated(String created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public Play withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FastBreak")
    public Boolean fastBreak;

    public Play withFastBreak(Boolean fastBreak) {
        this.fastBreak = fastBreak;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomePlayerID")
    public Long homePlayerID;

    public Play withHomePlayerID(Long homePlayerID) {
        this.homePlayerID = homePlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamScore")
    public Long homeTeamScore;

    public Play withHomeTeamScore(Long homeTeamScore) {
        this.homeTeamScore = homeTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;

    public Play withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;

    public Play withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayID")
    public Long playID;

    public Play withPlayID(Long playID) {
        this.playID = playID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;

    public Play withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Points")
    public Long points;

    public Play withPoints(Long points) {
        this.points = points;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PotentialPoints")
    public Long potentialPoints;

    public Play withPotentialPoints(Long potentialPoints) {
        this.potentialPoints = potentialPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterID")
    public Long quarterID;

    public Play withQuarterID(Long quarterID) {
        this.quarterID = quarterID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterName")
    public String quarterName;

    public Play withQuarterName(String quarterName) {
        this.quarterName = quarterName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingPlayerID")
    public Long receivingPlayerID;

    public Play withReceivingPlayerID(Long receivingPlayerID) {
        this.receivingPlayerID = receivingPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingTeam")
    public String receivingTeam;

    public Play withReceivingTeam(String receivingTeam) {
        this.receivingTeam = receivingTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingTeamID")
    public Long receivingTeamID;

    public Play withReceivingTeamID(Long receivingTeamID) {
        this.receivingTeamID = receivingTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sequence")
    public Long sequence;

    public Play withSequence(Long sequence) {
        this.sequence = sequence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShotMade")
    public Boolean shotMade;

    public Play withShotMade(Boolean shotMade) {
        this.shotMade = shotMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SideOfBasket")
    public String sideOfBasket;

    public Play withSideOfBasket(String sideOfBasket) {
        this.sideOfBasket = sideOfBasket;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SidelineOffsetPercentage")
    public Double sidelineOffsetPercentage;

    public Play withSidelineOffsetPercentage(Double sidelineOffsetPercentage) {
        this.sidelineOffsetPercentage = sidelineOffsetPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StolenByPlayerID")
    public Long stolenByPlayerID;

    public Play withStolenByPlayerID(Long stolenByPlayerID) {
        this.stolenByPlayerID = stolenByPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubstituteInPlayerID")
    public Long substituteInPlayerID;

    public Play withSubstituteInPlayerID(Long substituteInPlayerID) {
        this.substituteInPlayerID = substituteInPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubstituteOutPlayerID")
    public Long substituteOutPlayerID;

    public Play withSubstituteOutPlayerID(Long substituteOutPlayerID) {
        this.substituteOutPlayerID = substituteOutPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public Play withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;

    public Play withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeRemainingMinutes")
    public Long timeRemainingMinutes;

    public Play withTimeRemainingMinutes(Long timeRemainingMinutes) {
        this.timeRemainingMinutes = timeRemainingMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeRemainingSeconds")
    public Long timeRemainingSeconds;

    public Play withTimeRemainingSeconds(Long timeRemainingSeconds) {
        this.timeRemainingSeconds = timeRemainingSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public String type;

    public Play withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public Play withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    public Play(){}
}
