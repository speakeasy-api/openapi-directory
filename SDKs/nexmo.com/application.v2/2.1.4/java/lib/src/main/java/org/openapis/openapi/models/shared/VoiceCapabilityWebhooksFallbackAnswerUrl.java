/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class VoiceCapabilityWebhooksFallbackAnswerUrl {
    /**
     * If your `answer_url` is offline or returns a HTTP error code, Vonage will make a request to a
     * `fallback_answer_url` if it is set. This URL must return an NCCO.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public VoiceCapabilityWebhooksFallbackAnswerUrl withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * If Vonage can't connect to the webhook URL for this specified amount of time, then Vonage makes one additional attempt to connect to the webhook endpoint. This is an integer value specified in milliseconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connection_timeout")
    public Long connectionTimeout;

    public VoiceCapabilityWebhooksFallbackAnswerUrl withConnectionTimeout(Long connectionTimeout) {
        this.connectionTimeout = connectionTimeout;
        return this;
    }
    
    /**
     * The HTTP method used to fetch your NCCO from your `answer_url`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("http_method")
    public VoiceCapabilityWebhooksFallbackAnswerUrlHttpMethodEnum httpMethod;

    public VoiceCapabilityWebhooksFallbackAnswerUrl withHttpMethod(VoiceCapabilityWebhooksFallbackAnswerUrlHttpMethodEnum httpMethod) {
        this.httpMethod = httpMethod;
        return this;
    }
    
    /**
     * If a response from the webhook URL can't be read for this specified amount of time, then Vonage makes one additional attempt to read the webhook endpoint. This is an integer value specified in milliseconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("socket_timeout")
    public Long socketTimeout;

    public VoiceCapabilityWebhooksFallbackAnswerUrl withSocketTimeout(Long socketTimeout) {
        this.socketTimeout = socketTimeout;
        return this;
    }
    
    public VoiceCapabilityWebhooksFallbackAnswerUrl(){}
}
