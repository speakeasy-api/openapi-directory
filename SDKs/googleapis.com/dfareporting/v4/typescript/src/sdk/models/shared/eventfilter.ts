/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PathReportDimensionValue } from "./pathreportdimensionvalue";
import { UvarFilter } from "./uvarfilter";
import { Expose, Type } from "class-transformer";

/**
 * Represents a DfaReporting event filter.
 */
export class EventFilter extends SpeakeasyBase {
  /**
   * Represents a PathReportDimensionValue resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimensionFilter" })
  @Type(() => PathReportDimensionValue)
  dimensionFilter?: PathReportDimensionValue;

  /**
   * The kind of resource this is, in this case dfareporting#eventFilter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Defines the filtering on a single uvar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uvarFilter" })
  @Type(() => UvarFilter)
  uvarFilter?: UvarFilter;
}
