"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import address_3 as shared_address_3
from ..shared import birthdata as shared_birthdata
from ..shared import identificationdata as shared_identificationdata
from ..shared import name_3 as shared_name_3
from ..shared import phonenumber_2 as shared_phonenumber_2
from ..shared import webdata as shared_webdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IndividualInput:
    
    name: shared_name_3.Name3 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    residential_address: shared_address_3.Address3 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('residentialAddress') }})  
    birth_data: Optional[shared_birthdata.BirthData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('birthData'), 'exclude': lambda f: f is None }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email address of the legal entity."""  
    identification_data: Optional[shared_identificationdata.IdentificationData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identificationData'), 'exclude': lambda f: f is None }})  
    nationality: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nationality'), 'exclude': lambda f: f is None }})
    r"""The individual's nationality."""  
    phone: Optional[shared_phonenumber_2.PhoneNumber2] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})  
    web_data: Optional[shared_webdata.WebDataInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webData'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Individual:
    
    name: shared_name_3.Name3 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    residential_address: shared_address_3.Address3 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('residentialAddress') }})  
    birth_data: Optional[shared_birthdata.BirthData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('birthData'), 'exclude': lambda f: f is None }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email address of the legal entity."""  
    identification_data: Optional[shared_identificationdata.IdentificationData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identificationData'), 'exclude': lambda f: f is None }})  
    nationality: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nationality'), 'exclude': lambda f: f is None }})
    r"""The individual's nationality."""  
    phone: Optional[shared_phonenumber_2.PhoneNumber2] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})  
    web_data: Optional[shared_webdata.WebData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webData'), 'exclude': lambda f: f is None }})  
    