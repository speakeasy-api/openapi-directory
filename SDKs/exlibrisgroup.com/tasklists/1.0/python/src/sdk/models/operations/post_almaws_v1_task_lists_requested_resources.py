"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import onealmaws_1v1_1task_lists_1requested_resources_get_responses_200_content_application_1json_schema as shared_onealmaws_1v1_1task_lists_1requested_resources_get_responses_200_content_application_1json_schema
from typing import Optional


@dataclasses.dataclass
class PostAlmawsV1TaskListsRequestedResourcesRequest:
    
    circ_desk: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'circ_desk', 'style': 'form', 'explode': True }})
    r"""The circulation desk where the action is being performed. Mandatory."""  
    library: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'library', 'style': 'form', 'explode': True }})
    r"""The library of the given circulation desk or department where the resources are located. Mandatory."""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'location', 'style': 'form', 'explode': True }})
    r"""The location code. Optional."""  
    op: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'op', 'style': 'form', 'explode': True }})
    r"""Operation to be preformed on the list of given requests. Currently the only supported action is 'mark_reported'. Mandatory."""  
    pickup_inst: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pickup_inst', 'style': 'form', 'explode': True }})
    r"""The pickup institution. Optional."""  
    printed: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'printed', 'style': 'form', 'explode': True }})
    r"""Show printed results: Y/N. Optional."""  
    reported: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'reported', 'style': 'form', 'explode': True }})
    r"""Show reported results: Y/N. Optional."""  
    

@dataclasses.dataclass
class PostAlmawsV1TaskListsRequestedResourcesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    onealmaws_1v1_1task_lists_1requested_resources_get_responses_200_content_application_1json_schema: Optional[shared_onealmaws_1v1_1task_lists_1requested_resources_get_responses_200_content_application_1json_schema.Onealmaws1v11taskLists1requestedResourcesGetResponses200ContentApplication1jsonSchema] = dataclasses.field(default=None)
    r"""OK - This method returns an object based on rest_requested_resources.xsd. See [here](/alma/apis/docs/xsd/rest_requested_resources.xsd)"""  
    body: Optional[bytes] = dataclasses.field(default=None)  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    