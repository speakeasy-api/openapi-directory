// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhoneNumberEnumValidationErrorEnum string

const (
	PhoneNumberEnumValidationErrorEnumTooShort           PhoneNumberEnumValidationErrorEnum = "TOO_SHORT"
	PhoneNumberEnumValidationErrorEnumTooLong            PhoneNumberEnumValidationErrorEnum = "TOO_LONG"
	PhoneNumberEnumValidationErrorEnumInvalidButPossible PhoneNumberEnumValidationErrorEnum = "INVALID_BUT_POSSIBLE"
	PhoneNumberEnumValidationErrorEnumInvalidCountryCode PhoneNumberEnumValidationErrorEnum = "INVALID_COUNTRY_CODE"
	PhoneNumberEnumValidationErrorEnumInvalidLength      PhoneNumberEnumValidationErrorEnum = "INVALID_LENGTH"
	PhoneNumberEnumValidationErrorEnumNotANumber         PhoneNumberEnumValidationErrorEnum = "NOT_A_NUMBER"
)

func (e *PhoneNumberEnumValidationErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TOO_SHORT":
		fallthrough
	case "TOO_LONG":
		fallthrough
	case "INVALID_BUT_POSSIBLE":
		fallthrough
	case "INVALID_COUNTRY_CODE":
		fallthrough
	case "INVALID_LENGTH":
		fallthrough
	case "NOT_A_NUMBER":
		*e = PhoneNumberEnumValidationErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneNumberEnumValidationErrorEnum: %s", s)
	}
}
