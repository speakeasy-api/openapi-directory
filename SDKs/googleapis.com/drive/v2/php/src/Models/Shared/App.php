<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * App - The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class App
{
    /**
     * Whether the app is authorized to access data on the user's Drive.
     * 
     * @var ?bool $authorized
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorized')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $authorized = null;
    
    /**
     * The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in.
     * 
     * @var ?string $createInFolderTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createInFolderTemplate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createInFolderTemplate = null;
    
    /**
     * The url to create a new file with this app.
     * 
     * @var ?string $createUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('createUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createUrl = null;
    
    /**
     * Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive.
     * 
     * @var ?bool $hasDriveWideScope
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasDriveWideScope')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasDriveWideScope = null;
    
    /**
     * The various icons for the app.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AppIcons> $icons
     */
	#[\JMS\Serializer\Annotation\SerializedName('icons')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AppIcons>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $icons = null;
    
    /**
     * The ID of the app.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Whether the app is installed.
     * 
     * @var ?bool $installed
     */
	#[\JMS\Serializer\Annotation\SerializedName('installed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $installed = null;
    
    /**
     * This is always drive#app.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * A long description of the app.
     * 
     * @var ?string $longDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('longDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $longDescription = null;
    
    /**
     * The name of the app.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The type of object this app creates (e.g. Chart). If empty, the app name should be used instead.
     * 
     * @var ?string $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectType = null;
    
    /**
     * The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation.
     * 
     * @var ?string $openUrlTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('openUrlTemplate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $openUrlTemplate = null;
    
    /**
     * The list of primary file extensions.
     * 
     * @var ?array<string> $primaryFileExtensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryFileExtensions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $primaryFileExtensions = null;
    
    /**
     * The list of primary mime types.
     * 
     * @var ?array<string> $primaryMimeTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryMimeTypes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $primaryMimeTypes = null;
    
    /**
     * The ID of the product listing for this app.
     * 
     * @var ?string $productId
     */
	#[\JMS\Serializer\Annotation\SerializedName('productId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productId = null;
    
    /**
     * A link to the product listing for this app.
     * 
     * @var ?string $productUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('productUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productUrl = null;
    
    /**
     * The list of secondary file extensions.
     * 
     * @var ?array<string> $secondaryFileExtensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryFileExtensions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $secondaryFileExtensions = null;
    
    /**
     * The list of secondary mime types.
     * 
     * @var ?array<string> $secondaryMimeTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryMimeTypes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $secondaryMimeTypes = null;
    
    /**
     * A short description of the app.
     * 
     * @var ?string $shortDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('shortDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shortDescription = null;
    
    /**
     * Whether this app supports creating new objects.
     * 
     * @var ?bool $supportsCreate
     */
	#[\JMS\Serializer\Annotation\SerializedName('supportsCreate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $supportsCreate = null;
    
    /**
     * Whether this app supports importing from Docs Editors.
     * 
     * @var ?bool $supportsImport
     */
	#[\JMS\Serializer\Annotation\SerializedName('supportsImport')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $supportsImport = null;
    
    /**
     * Whether this app supports opening more than one file.
     * 
     * @var ?bool $supportsMultiOpen
     */
	#[\JMS\Serializer\Annotation\SerializedName('supportsMultiOpen')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $supportsMultiOpen = null;
    
    /**
     * Whether this app supports creating new files when offline.
     * 
     * @var ?bool $supportsOfflineCreate
     */
	#[\JMS\Serializer\Annotation\SerializedName('supportsOfflineCreate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $supportsOfflineCreate = null;
    
    /**
     * Whether the app is selected as the default handler for the types it supports.
     * 
     * @var ?bool $useByDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('useByDefault')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useByDefault = null;
    
	public function __construct()
	{
		$this->authorized = null;
		$this->createInFolderTemplate = null;
		$this->createUrl = null;
		$this->hasDriveWideScope = null;
		$this->icons = null;
		$this->id = null;
		$this->installed = null;
		$this->kind = null;
		$this->longDescription = null;
		$this->name = null;
		$this->objectType = null;
		$this->openUrlTemplate = null;
		$this->primaryFileExtensions = null;
		$this->primaryMimeTypes = null;
		$this->productId = null;
		$this->productUrl = null;
		$this->secondaryFileExtensions = null;
		$this->secondaryMimeTypes = null;
		$this->shortDescription = null;
		$this->supportsCreate = null;
		$this->supportsImport = null;
		$this->supportsMultiOpen = null;
		$this->supportsOfflineCreate = null;
		$this->useByDefault = null;
	}
}
