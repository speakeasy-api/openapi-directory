/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskSpec - TaskSpec is a description of a task.
 */
public class TaskSpec {
    /**
     * Optional. List of containers belonging to the task. We disallow a number of fields on this Container. Only a single container may be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containers")
    public Container[] containers;
    public TaskSpec withContainers(Container[] containers) {
        this.containers = containers;
        return this;
    }
    
    /**
     * Optional. Number of retries allowed per task, before marking this job failed. Defaults to 3.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxRetries")
    public Integer maxRetries;
    public TaskSpec withMaxRetries(Integer maxRetries) {
        this.maxRetries = maxRetries;
        return this;
    }
    
    /**
     * Optional. Email address of the IAM service account associated with the task of a job execution. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountName")
    public String serviceAccountName;
    public TaskSpec withServiceAccountName(String serviceAccountName) {
        this.serviceAccountName = serviceAccountName;
        return this;
    }
    
    /**
     * Optional. Duration in seconds the task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout. Defaults to 600 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutSeconds")
    public String timeoutSeconds;
    public TaskSpec withTimeoutSeconds(String timeoutSeconds) {
        this.timeoutSeconds = timeoutSeconds;
        return this;
    }
    
    /**
     * Optional. List of volumes that can be mounted by containers belonging to the task. More info: https://kubernetes.io/docs/concepts/storage/volumes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumes")
    public Volume[] volumes;
    public TaskSpec withVolumes(Volume[] volumes) {
        this.volumes = volumes;
        return this;
    }
    
}
