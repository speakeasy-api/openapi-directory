<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListServiceInventoriesRequest
{
    /**
     * Filter for querying collections.
     * 
     * @var ?array<string, mixed> $filter
     */
	#[SpeakeasyMetadata('queryParam:style=deepObject,explode=true,name=filter')]
    public ?array $filter = null;
    
    /**
     * The numbers of items to return per page.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * The number of items to skip before starting to collect the result set.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * The list of attribute and order to sort the result set by.
     * 
     * @var ?array<string, mixed> $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=deepObject,explode=true,name=sort_by')]
    public ?array $sortBy = null;
    
	public function __construct()
	{
		$this->filter = null;
		$this->limit = null;
		$this->offset = null;
		$this->sortBy = null;
	}
}
