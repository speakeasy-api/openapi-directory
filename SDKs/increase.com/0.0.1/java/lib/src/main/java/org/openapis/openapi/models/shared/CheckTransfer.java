/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CheckTransfer - Check Transfers move funds from your Increase account by mailing a physical check.
 */
public class CheckTransfer {
    /**
     * The identifier of the Account from which funds will be transferred.
     */
    @JsonProperty("account_id")
    public String accountId;
    public CheckTransfer withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The city of the check's destination.
     */
    @JsonProperty("address_city")
    public String addressCity;
    public CheckTransfer withAddressCity(String addressCity) {
        this.addressCity = addressCity;
        return this;
    }
    
    /**
     * The street address of the check's destination.
     */
    @JsonProperty("address_line1")
    public String addressLine1;
    public CheckTransfer withAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
    }
    
    /**
     * The second line of the address of the check's destination.
     */
    @JsonProperty("address_line2")
    public String addressLine2;
    public CheckTransfer withAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
    }
    
    /**
     * The state of the check's destination.
     */
    @JsonProperty("address_state")
    public String addressState;
    public CheckTransfer withAddressState(String addressState) {
        this.addressState = addressState;
        return this;
    }
    
    /**
     * The postal code of the check's destination.
     */
    @JsonProperty("address_zip")
    public String addressZip;
    public CheckTransfer withAddressZip(String addressZip) {
        this.addressZip = addressZip;
        return this;
    }
    
    /**
     * The transfer amount in USD cents.
     */
    @JsonProperty("amount")
    public Long amount;
    public CheckTransfer withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CheckTransfer withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
     */
    @JsonProperty("currency")
    public CheckTransferCurrencyEnum currency;
    public CheckTransfer withCurrency(CheckTransferCurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * After a check transfer is deposited, this will contain supplemental details.
     */
    @JsonProperty("deposit")
    public CheckTransferCheckTransferDeposit deposit;
    public CheckTransfer withDeposit(CheckTransferCheckTransferDeposit deposit) {
        this.deposit = deposit;
        return this;
    }
    
    /**
     * The Check transfer's identifier.
     */
    @JsonProperty("id")
    public String id;
    public CheckTransfer withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("mailed_at")
    public OffsetDateTime mailedAt;
    public CheckTransfer withMailedAt(OffsetDateTime mailedAt) {
        this.mailedAt = mailedAt;
        return this;
    }
    
    /**
     * The descriptor that will be printed on the memo field on the check.
     */
    @JsonProperty("message")
    public String message;
    public CheckTransfer withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * The descriptor that will be printed on the letter included with the check.
     */
    @JsonProperty("note")
    public String note;
    public CheckTransfer withNote(String note) {
        this.note = note;
        return this;
    }
    
    /**
     * The name that will be printed on the check.
     */
    @JsonProperty("recipient_name")
    public String recipientName;
    public CheckTransfer withRecipientName(String recipientName) {
        this.recipientName = recipientName;
        return this;
    }
    
    /**
     * The return address to be printed on the check.
     */
    @JsonProperty("return_address")
    public CheckTransferReturnAddress returnAddress;
    public CheckTransfer withReturnAddress(CheckTransferReturnAddress returnAddress) {
        this.returnAddress = returnAddress;
        return this;
    }
    
    /**
     * The lifecycle status of the transfer.
     */
    @JsonProperty("status")
    public CheckTransferStatusEnum status;
    public CheckTransfer withStatus(CheckTransferStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * After a stop-payment is requested on the check, this will contain supplemental details.
     */
    @JsonProperty("stop_payment_request")
    public CheckTransferCheckTransferStopPaymentRequest stopPaymentRequest;
    public CheckTransfer withStopPaymentRequest(CheckTransferCheckTransferStopPaymentRequest stopPaymentRequest) {
        this.stopPaymentRequest = stopPaymentRequest;
        return this;
    }
    
    /**
     * After the transfer is submitted, this will contain supplemental details.
     */
    @JsonProperty("submission")
    public CheckTransferCheckTransferSubmission submission;
    public CheckTransfer withSubmission(CheckTransferCheckTransferSubmission submission) {
        this.submission = submission;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("submitted_at")
    public OffsetDateTime submittedAt;
    public CheckTransfer withSubmittedAt(OffsetDateTime submittedAt) {
        this.submittedAt = submittedAt;
        return this;
    }
    
    /**
     * If the transfer was created from a template, this will be the template's ID.
     */
    @JsonProperty("template_id")
    public String templateId;
    public CheckTransfer withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
    /**
     * The ID for the transaction caused by the transfer.
     */
    @JsonProperty("transaction_id")
    public String transactionId;
    public CheckTransfer withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * A constant representing the object's type. For this resource it will always be `check_transfer`.
     */
    @JsonProperty("type")
    public CheckTransferTypeEnum type;
    public CheckTransfer withType(CheckTransferTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
