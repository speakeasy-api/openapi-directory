"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import basicperfsampleseries as shared_basicperfsampleseries
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PerfSampleSeries:
    r"""Resource representing a collection of performance samples (or data points)"""
    
    basic_perf_sample_series: Optional[shared_basicperfsampleseries.BasicPerfSampleSeries] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('basicPerfSampleSeries'), 'exclude': lambda f: f is None }})
    r"""Encapsulates the metadata for basic sample series represented by a line chart"""  
    execution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionId'), 'exclude': lambda f: f is None }})
    r"""A tool results execution ID. @OutputOnly"""  
    history_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('historyId'), 'exclude': lambda f: f is None }})
    r"""A tool results history ID. @OutputOnly"""  
    project_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectId'), 'exclude': lambda f: f is None }})
    r"""The cloud project @OutputOnly"""  
    sample_series_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleSeriesId'), 'exclude': lambda f: f is None }})
    r"""A sample series id @OutputOnly"""  
    step_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stepId'), 'exclude': lambda f: f is None }})
    r"""A tool results step ID. @OutputOnly"""  
    