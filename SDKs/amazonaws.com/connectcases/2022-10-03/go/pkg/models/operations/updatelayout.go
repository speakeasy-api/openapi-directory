// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateLayoutPathParams struct {
	// The unique identifier of the Cases domain.
	DomainID string `pathParam:"style=simple,explode=false,name=domainId"`
	// The unique identifier of the layout.
	LayoutID string `pathParam:"style=simple,explode=false,name=layoutId"`
}

type UpdateLayoutHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateLayoutRequestBodyContent - Object to store union of different versions of layout content.
type UpdateLayoutRequestBodyContent struct {
	Basic *shared.BasicLayout `json:"basic,omitempty"`
}

type UpdateLayoutRequestBody struct {
	// Object to store union of different versions of layout content.
	Content *UpdateLayoutRequestBodyContent `json:"content,omitempty"`
	// The name of the layout. It must be unique per domain.
	Name *string `json:"name,omitempty"`
}

type UpdateLayoutRequest struct {
	PathParams UpdateLayoutPathParams
	Headers    UpdateLayoutHeaders
	Request    UpdateLayoutRequestBody `request:"mediaType=application/json"`
}

type UpdateLayoutResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateLayoutResponse map[string]interface{}
	// ValidationException
	ValidationException interface{}
}
