"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class PlaceGetAtRequest:
    
    lat_path_parameter: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Lat', 'style': 'simple', 'explode': False }})
    r"""Automatically added"""  
    lat_query_parameter: str = dataclasses.field(metadata={'query_param': { 'field_name': 'lat', 'style': 'form', 'explode': True }})  
    location_lat: float = dataclasses.field(metadata={'query_param': { 'field_name': 'location.lat', 'style': 'form', 'explode': True }})  
    location_lon: float = dataclasses.field(metadata={'query_param': { 'field_name': 'location.lon', 'style': 'form', 'explode': True }})  
    lon_path_parameter: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Lon', 'style': 'simple', 'explode': False }})
    r"""Automatically added"""  
    lon_query_parameter: str = dataclasses.field(metadata={'query_param': { 'field_name': 'lon', 'style': 'form', 'explode': True }})  
    type: list[str] = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})
    r"""The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)"""  
    

@dataclasses.dataclass
class PlaceGetAtResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    system_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""OK"""  
    