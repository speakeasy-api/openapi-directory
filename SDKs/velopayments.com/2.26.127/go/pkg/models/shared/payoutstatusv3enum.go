// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PayoutStatusV3Enum string

const (
	PayoutStatusV3EnumAccepted   PayoutStatusV3Enum = "ACCEPTED"
	PayoutStatusV3EnumRejected   PayoutStatusV3Enum = "REJECTED"
	PayoutStatusV3EnumSubmitted  PayoutStatusV3Enum = "SUBMITTED"
	PayoutStatusV3EnumQuoted     PayoutStatusV3Enum = "QUOTED"
	PayoutStatusV3EnumInstructed PayoutStatusV3Enum = "INSTRUCTED"
	PayoutStatusV3EnumCompleted  PayoutStatusV3Enum = "COMPLETED"
	PayoutStatusV3EnumIncomplete PayoutStatusV3Enum = "INCOMPLETE"
	PayoutStatusV3EnumConfirmed  PayoutStatusV3Enum = "CONFIRMED"
	PayoutStatusV3EnumWithdrawn  PayoutStatusV3Enum = "WITHDRAWN"
)

func (e *PayoutStatusV3Enum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCEPTED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "QUOTED":
		fallthrough
	case "INSTRUCTED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "INCOMPLETE":
		fallthrough
	case "CONFIRMED":
		fallthrough
	case "WITHDRAWN":
		*e = PayoutStatusV3Enum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PayoutStatusV3Enum: %s", s)
	}
}
