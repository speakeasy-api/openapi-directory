"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchAnalyticsQueryRequest = exports.SearchAnalyticsQueryRequestTypeEnum = exports.SearchAnalyticsQueryRequestSearchTypeEnum = exports.SearchAnalyticsQueryRequestDimensionsEnum = exports.SearchAnalyticsQueryRequestDataStateEnum = exports.SearchAnalyticsQueryRequestAggregationTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var apidimensionfiltergroup_1 = require("./apidimensionfiltergroup");
var class_transformer_1 = require("class-transformer");
/**
 * [Optional; Default is \"auto\"] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see the help documentation to learn how data is calculated differently by site versus by page. **Note:** If you group or filter by page, you cannot aggregate by property. If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid.
 */
var SearchAnalyticsQueryRequestAggregationTypeEnum;
(function (SearchAnalyticsQueryRequestAggregationTypeEnum) {
    SearchAnalyticsQueryRequestAggregationTypeEnum["Auto"] = "AUTO";
    SearchAnalyticsQueryRequestAggregationTypeEnum["ByProperty"] = "BY_PROPERTY";
    SearchAnalyticsQueryRequestAggregationTypeEnum["ByPage"] = "BY_PAGE";
})(SearchAnalyticsQueryRequestAggregationTypeEnum = exports.SearchAnalyticsQueryRequestAggregationTypeEnum || (exports.SearchAnalyticsQueryRequestAggregationTypeEnum = {}));
/**
 * The data state to be fetched, can be full or all, the latter including full and partial data.
 */
var SearchAnalyticsQueryRequestDataStateEnum;
(function (SearchAnalyticsQueryRequestDataStateEnum) {
    SearchAnalyticsQueryRequestDataStateEnum["DataStateUnspecified"] = "DATA_STATE_UNSPECIFIED";
    SearchAnalyticsQueryRequestDataStateEnum["Final"] = "FINAL";
    SearchAnalyticsQueryRequestDataStateEnum["All"] = "ALL";
})(SearchAnalyticsQueryRequestDataStateEnum = exports.SearchAnalyticsQueryRequestDataStateEnum || (exports.SearchAnalyticsQueryRequestDataStateEnum = {}));
var SearchAnalyticsQueryRequestDimensionsEnum;
(function (SearchAnalyticsQueryRequestDimensionsEnum) {
    SearchAnalyticsQueryRequestDimensionsEnum["Date"] = "DATE";
    SearchAnalyticsQueryRequestDimensionsEnum["Query"] = "QUERY";
    SearchAnalyticsQueryRequestDimensionsEnum["Page"] = "PAGE";
    SearchAnalyticsQueryRequestDimensionsEnum["Country"] = "COUNTRY";
    SearchAnalyticsQueryRequestDimensionsEnum["Device"] = "DEVICE";
    SearchAnalyticsQueryRequestDimensionsEnum["SearchAppearance"] = "SEARCH_APPEARANCE";
})(SearchAnalyticsQueryRequestDimensionsEnum = exports.SearchAnalyticsQueryRequestDimensionsEnum || (exports.SearchAnalyticsQueryRequestDimensionsEnum = {}));
/**
 * [Optional; Default is \"web\"] The search type to filter for.
 */
var SearchAnalyticsQueryRequestSearchTypeEnum;
(function (SearchAnalyticsQueryRequestSearchTypeEnum) {
    SearchAnalyticsQueryRequestSearchTypeEnum["Web"] = "WEB";
    SearchAnalyticsQueryRequestSearchTypeEnum["Image"] = "IMAGE";
    SearchAnalyticsQueryRequestSearchTypeEnum["Video"] = "VIDEO";
    SearchAnalyticsQueryRequestSearchTypeEnum["News"] = "NEWS";
    SearchAnalyticsQueryRequestSearchTypeEnum["Discover"] = "DISCOVER";
    SearchAnalyticsQueryRequestSearchTypeEnum["GoogleNews"] = "GOOGLE_NEWS";
})(SearchAnalyticsQueryRequestSearchTypeEnum = exports.SearchAnalyticsQueryRequestSearchTypeEnum || (exports.SearchAnalyticsQueryRequestSearchTypeEnum = {}));
/**
 * Optional. [Optional; Default is \"web\"] Type of report: search type, or either Discover or Gnews.
 */
var SearchAnalyticsQueryRequestTypeEnum;
(function (SearchAnalyticsQueryRequestTypeEnum) {
    SearchAnalyticsQueryRequestTypeEnum["Web"] = "WEB";
    SearchAnalyticsQueryRequestTypeEnum["Image"] = "IMAGE";
    SearchAnalyticsQueryRequestTypeEnum["Video"] = "VIDEO";
    SearchAnalyticsQueryRequestTypeEnum["News"] = "NEWS";
    SearchAnalyticsQueryRequestTypeEnum["Discover"] = "DISCOVER";
    SearchAnalyticsQueryRequestTypeEnum["GoogleNews"] = "GOOGLE_NEWS";
})(SearchAnalyticsQueryRequestTypeEnum = exports.SearchAnalyticsQueryRequestTypeEnum || (exports.SearchAnalyticsQueryRequestTypeEnum = {}));
var SearchAnalyticsQueryRequest = /** @class */ (function (_super) {
    __extends(SearchAnalyticsQueryRequest, _super);
    function SearchAnalyticsQueryRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "aggregationType" }),
        __metadata("design:type", String)
    ], SearchAnalyticsQueryRequest.prototype, "aggregationType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataState" }),
        __metadata("design:type", String)
    ], SearchAnalyticsQueryRequest.prototype, "dataState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: apidimensionfiltergroup_1.ApiDimensionFilterGroup }),
        (0, class_transformer_1.Expose)({ name: "dimensionFilterGroups" }),
        (0, class_transformer_1.Type)(function () { return apidimensionfiltergroup_1.ApiDimensionFilterGroup; }),
        __metadata("design:type", Array)
    ], SearchAnalyticsQueryRequest.prototype, "dimensionFilterGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dimensions" }),
        __metadata("design:type", Array)
    ], SearchAnalyticsQueryRequest.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "endDate" }),
        __metadata("design:type", String)
    ], SearchAnalyticsQueryRequest.prototype, "endDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rowLimit" }),
        __metadata("design:type", Number)
    ], SearchAnalyticsQueryRequest.prototype, "rowLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "searchType" }),
        __metadata("design:type", String)
    ], SearchAnalyticsQueryRequest.prototype, "searchType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startDate" }),
        __metadata("design:type", String)
    ], SearchAnalyticsQueryRequest.prototype, "startDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startRow" }),
        __metadata("design:type", Number)
    ], SearchAnalyticsQueryRequest.prototype, "startRow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], SearchAnalyticsQueryRequest.prototype, "type", void 0);
    return SearchAnalyticsQueryRequest;
}(utils_1.SpeakeasyBase));
exports.SearchAnalyticsQueryRequest = SearchAnalyticsQueryRequest;
