"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import preauthorizedapplicationextension as shared_preauthorizedapplicationextension
from ..shared import preauthorizedapplicationpermission as shared_preauthorizedapplicationpermission
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PreAuthorizedApplication:
    r"""Contains information about pre authorized client application."""
    
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appId'), 'exclude': lambda f: f is None }})
    r"""Represents the application id."""  
    extensions: Optional[list[shared_preauthorizedapplicationextension.PreAuthorizedApplicationExtension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extensions'), 'exclude': lambda f: f is None }})
    r"""Collection of extensions from the resource application."""  
    permissions: Optional[list[shared_preauthorizedapplicationpermission.PreAuthorizedApplicationPermission]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""Collection of required app permissions/entitlements from the resource application."""  
    