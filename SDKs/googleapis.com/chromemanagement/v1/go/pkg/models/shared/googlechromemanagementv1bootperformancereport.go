// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum - The shutdown reason.
type GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum string

const (
	GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnumShutdownReasonUnspecified GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum = "SHUTDOWN_REASON_UNSPECIFIED"
	GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnumUserRequest               GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum = "USER_REQUEST"
	GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnumSystemUpdate              GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum = "SYSTEM_UPDATE"
	GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnumLowBattery                GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum = "LOW_BATTERY"
	GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnumOther                     GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum = "OTHER"
)

func (e *GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SHUTDOWN_REASON_UNSPECIFIED":
		fallthrough
	case "USER_REQUEST":
		fallthrough
	case "SYSTEM_UPDATE":
		fallthrough
	case "LOW_BATTERY":
		fallthrough
	case "OTHER":
		*e = GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum: %s", s)
	}
}

// GoogleChromeManagementV1BootPerformanceReport - Boot performance report of a device. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceBootMode](https://chromeenterprise.google/policies/#ReportDeviceBootMode) * Data Collection Frequency: On every boot up event * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A
type GoogleChromeManagementV1BootPerformanceReport struct {
	// Total time to boot up.
	BootUpDuration *string `json:"bootUpDuration,omitempty"`
	// The timestamp when power came on.
	BootUpTime *string `json:"bootUpTime,omitempty"`
	// Timestamp when the report was collected.
	ReportTime *string `json:"reportTime,omitempty"`
	// Total time since shutdown start to power off.
	ShutdownDuration *string `json:"shutdownDuration,omitempty"`
	// The shutdown reason.
	ShutdownReason *GoogleChromeManagementV1BootPerformanceReportShutdownReasonEnum `json:"shutdownReason,omitempty"`
	// The timestamp when shutdown.
	ShutdownTime *string `json:"shutdownTime,omitempty"`
}
