/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TeamResponse - A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.
 */
public class TeamResponse {
    /**
     * [Opt In](/docs/input-output-options). The description of the team.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public TeamResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;

    public TeamResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * [Opt In](/docs/input-output-options). The description of the team with formatting as HTML.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_description")
    public String htmlDescription;

    public TeamResponse withHtmlDescription(String htmlDescription) {
        this.htmlDescription = htmlDescription;
        return this;
    }
    
    /**
     * The name of the team.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TeamResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    public TeamResponseOrganization organization;

    public TeamResponse withOrganization(TeamResponseOrganization organization) {
        this.organization = organization;
        return this;
    }
    
    /**
     * A url that points directly to the object within Asana.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permalink_url")
    public String permalinkUrl;

    public TeamResponse withPermalinkUrl(String permalinkUrl) {
        this.permalinkUrl = permalinkUrl;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;

    public TeamResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The visibility of the team to users in the same organization
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public TeamResponseVisibilityEnum visibility;

    public TeamResponse withVisibility(TeamResponseVisibilityEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
    public TeamResponse(){}
}
