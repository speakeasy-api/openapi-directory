/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ReportWebinarParticipants200ApplicationJSONParticipants {
    /**
     * Another identifier for the participant. Can be a number or characters, maximum length of 15 characters. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_key")
    public String customerKey;
    public ReportWebinarParticipants200ApplicationJSONParticipants withCustomerKey(String customerKey) {
        this.customerKey = customerKey;
        return this;
    }
    
    /**
     * Participant duration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public ReportWebinarParticipants200ApplicationJSONParticipants withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Indicates if failover happened during the webinar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failover")
    public Boolean failover;
    public ReportWebinarParticipants200ApplicationJSONParticipants withFailover(Boolean failover) {
        this.failover = failover;
        return this;
    }
    
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ReportWebinarParticipants200ApplicationJSONParticipants withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Participant join time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("join_time")
    public OffsetDateTime joinTime;
    public ReportWebinarParticipants200ApplicationJSONParticipants withJoinTime(OffsetDateTime joinTime) {
        this.joinTime = joinTime;
        return this;
    }
    
    /**
     * Participant leave time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("leave_time")
    public OffsetDateTime leaveTime;
    public ReportWebinarParticipants200ApplicationJSONParticipants withLeaveTime(OffsetDateTime leaveTime) {
        this.leaveTime = leaveTime;
        return this;
    }
    
    /**
     * Participant display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ReportWebinarParticipants200ApplicationJSONParticipants withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Participant email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_email")
    public String userEmail;
    public ReportWebinarParticipants200ApplicationJSONParticipants withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
    /**
     * Participant ID. This is a unique ID assigned to the participant joining the webinar and is valid for that webinar only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public ReportWebinarParticipants200ApplicationJSONParticipants withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
