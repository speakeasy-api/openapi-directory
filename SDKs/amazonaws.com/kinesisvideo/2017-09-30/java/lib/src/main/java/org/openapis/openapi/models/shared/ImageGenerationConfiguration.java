/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImageGenerationConfiguration - The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
 */
public class ImageGenerationConfiguration {
    @JsonProperty("DestinationConfig")
    public ImageGenerationDestinationConfig destinationConfig;

    public ImageGenerationConfiguration withDestinationConfig(ImageGenerationDestinationConfig destinationConfig) {
        this.destinationConfig = destinationConfig;
        return this;
    }
    
    @JsonProperty("Format")
    public FormatEnum format;

    public ImageGenerationConfiguration withFormat(FormatEnum format) {
        this.format = format;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FormatConfig")
    public java.util.Map<String, String> formatConfig;

    public ImageGenerationConfiguration withFormatConfig(java.util.Map<String, String> formatConfig) {
        this.formatConfig = formatConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HeightPixels")
    public Long heightPixels;

    public ImageGenerationConfiguration withHeightPixels(Long heightPixels) {
        this.heightPixels = heightPixels;
        return this;
    }
    
    @JsonProperty("ImageSelectorType")
    public ImageSelectorTypeEnum imageSelectorType;

    public ImageGenerationConfiguration withImageSelectorType(ImageSelectorTypeEnum imageSelectorType) {
        this.imageSelectorType = imageSelectorType;
        return this;
    }
    
    @JsonProperty("SamplingInterval")
    public Long samplingInterval;

    public ImageGenerationConfiguration withSamplingInterval(Long samplingInterval) {
        this.samplingInterval = samplingInterval;
        return this;
    }
    
    @JsonProperty("Status")
    public ConfigurationStatusEnum status;

    public ImageGenerationConfiguration withStatus(ConfigurationStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WidthPixels")
    public Long widthPixels;

    public ImageGenerationConfiguration withWidthPixels(Long widthPixels) {
        this.widthPixels = widthPixels;
        return this;
    }
    
    public ImageGenerationConfiguration(@JsonProperty("DestinationConfig") ImageGenerationDestinationConfig destinationConfig, @JsonProperty("Format") FormatEnum format, @JsonProperty("ImageSelectorType") ImageSelectorTypeEnum imageSelectorType, @JsonProperty("SamplingInterval") Long samplingInterval, @JsonProperty("Status") ConfigurationStatusEnum status) {
        this.destinationConfig = destinationConfig;
        this.format = format;
        this.imageSelectorType = imageSelectorType;
        this.samplingInterval = samplingInterval;
        this.status = status;
  }
}
