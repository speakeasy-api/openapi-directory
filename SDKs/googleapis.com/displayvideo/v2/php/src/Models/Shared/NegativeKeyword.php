<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NegativeKeyword - A negatively targeted keyword that belongs to a negative keyword list.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NegativeKeyword
{
    /**
     * Required. Immutable. The negatively targeted keyword, for example `car insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10. Valid characters are restricted to ASCII characters only. The only URL-escaping permitted is for representing whitespace between words. Leading or trailing whitespace is ignored.
     * 
     * @var ?string $keywordValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('keywordValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keywordValue = null;
    
    /**
     * Output only. The resource name of the negative keyword.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->keywordValue = null;
		$this->name = null;
	}
}
