/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DeploymentmanagerDeploymentsUpdateRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;
    public DeploymentmanagerDeploymentsUpdateRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.Deployment deployment1;
    public DeploymentmanagerDeploymentsUpdateRequest withDeployment1(org.openapis.openapi.models.shared.Deployment deployment1) {
        this.deployment1 = deployment1;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;
    public DeploymentmanagerDeploymentsUpdateRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public DeploymentmanagerDeploymentsUpdateRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;
    public DeploymentmanagerDeploymentsUpdateRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * Sets the policy to use for creating new resources.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createPolicy")
    public DeploymentmanagerDeploymentsUpdateCreatePolicyEnum createPolicy;
    public DeploymentmanagerDeploymentsUpdateRequest withCreatePolicy(DeploymentmanagerDeploymentsUpdateCreatePolicyEnum createPolicy) {
        this.createPolicy = createPolicy;
        return this;
    }
    
    /**
     * Sets the policy to use for deleting resources.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=deletePolicy")
    public DeploymentmanagerDeploymentsUpdateDeletePolicyEnum deletePolicy;
    public DeploymentmanagerDeploymentsUpdateRequest withDeletePolicy(DeploymentmanagerDeploymentsUpdateDeletePolicyEnum deletePolicy) {
        this.deletePolicy = deletePolicy;
        return this;
    }
    
    /**
     * The name of the deployment for this request.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=deployment")
    public String deploymentPathParameter;
    public DeploymentmanagerDeploymentsUpdateRequest withDeploymentPathParameter(String deploymentPathParameter) {
        this.deploymentPathParameter = deploymentPathParameter;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public DeploymentmanagerDeploymentsUpdateRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public DeploymentmanagerDeploymentsUpdateRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public DeploymentmanagerDeploymentsUpdateRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public DeploymentmanagerDeploymentsUpdateRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * If set to true, updates the deployment and creates and updates the "shell" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a `target.config` with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the `update()` or you can `cancelPreview()` to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=preview")
    public Boolean preview;
    public DeploymentmanagerDeploymentsUpdateRequest withPreview(Boolean preview) {
        this.preview = preview;
        return this;
    }
    
    /**
     * The project ID for this request.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=project")
    public String project;
    public DeploymentmanagerDeploymentsUpdateRequest withProject(String project) {
        this.project = project;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public DeploymentmanagerDeploymentsUpdateRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public DeploymentmanagerDeploymentsUpdateRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;
    public DeploymentmanagerDeploymentsUpdateRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
}
