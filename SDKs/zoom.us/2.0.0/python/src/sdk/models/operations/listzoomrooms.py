"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListZoomRoomsSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class ListZoomRoomsStatusEnum(str, Enum):
    r"""The status of the Zoom Room."""
    OFFLINE = 'Offline'
    AVAILABLE = 'Available'
    IN_MEETING = 'InMeeting'
    UNDER_CONSTRUCTION = 'UnderConstruction'

class ListZoomRoomsTypeEnum(str, Enum):
    r"""Type of the Zoom Rooms."""
    ZOOM_ROOM = 'ZoomRoom'
    SCHEDULING_DISPLAY_ONLY = 'SchedulingDisplayOnly'
    DIGITAL_SIGNAGE_ONLY = 'DigitalSignageOnly'


@dataclasses.dataclass
class ListZoomRoomsRequest:
    
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'location_id', 'style': 'form', 'explode': True }})
    r"""Parent location ID of the Zoom Room."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    status: Optional[ListZoomRoomsStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""The status of the Zoom Room."""  
    type: Optional[ListZoomRoomsTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Type of the Zoom Rooms."""  
    unassigned_rooms: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'unassigned_rooms', 'style': 'form', 'explode': True }})
    r"""Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet."""  
    
class ListZoomRooms200ApplicationXMLRoomsStatusEnum(str, Enum):
    r"""Status of the Zoom Room."""
    OFFLINE = 'Offline'
    AVAILABLE = 'Available'
    IN_MEETING = 'InMeeting'
    UNDER_CONSTRUCTION = 'UnderConstruction'


@dataclasses.dataclass
class ListZoomRooms200ApplicationXMLRooms:
    
    activation_code: Optional[str] = dataclasses.field(default=None)
    r"""Activation Code is the code that is used to complete the setup of the Zoom Room."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the Zoom Room."""  
    location_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the Zoom Room."""  
    room_id: Optional[str] = dataclasses.field(default=None)
    r"""Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**."""  
    status: Optional[ListZoomRooms200ApplicationXMLRoomsStatusEnum] = dataclasses.field(default=None)
    r"""Status of the Zoom Room."""  
    

@dataclasses.dataclass
class ListZoomRooms200ApplicationXML:
    r"""**HTTP Status Code:** `200`<br>
    A list of Zoom Rooms returned successfully.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""The number of records returned within a single API call."""  
    rooms: Optional[list[ListZoomRooms200ApplicationXMLRooms]] = dataclasses.field(default=None)
    r"""List of existing Zoom Rooms."""  
    
class ListZoomRooms200ApplicationJSONRoomsStatusEnum(str, Enum):
    r"""Status of the Zoom Room."""
    OFFLINE = 'Offline'
    AVAILABLE = 'Available'
    IN_MEETING = 'InMeeting'
    UNDER_CONSTRUCTION = 'UnderConstruction'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListZoomRooms200ApplicationJSONRooms:
    
    activation_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activation_code'), 'exclude': lambda f: f is None }})
    r"""Activation Code is the code that is used to complete the setup of the Zoom Room."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the Zoom Room."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Zoom Room."""  
    room_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('room_id'), 'exclude': lambda f: f is None }})
    r"""Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**."""  
    status: Optional[ListZoomRooms200ApplicationJSONRoomsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the Zoom Room."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListZoomRooms200ApplicationJSON:
    r"""**HTTP Status Code:** `200`<br>
    A list of Zoom Rooms returned successfully.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned within a single API call."""  
    rooms: Optional[list[ListZoomRooms200ApplicationJSONRooms]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rooms'), 'exclude': lambda f: f is None }})
    r"""List of existing Zoom Rooms."""  
    

@dataclasses.dataclass
class ListZoomRoomsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_zoom_rooms_200_application_json_object: Optional[ListZoomRooms200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    A list of Zoom Rooms returned successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    