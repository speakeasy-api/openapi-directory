// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodePoolRepairActionEnum - Required. Repair action to take on specified resources of the node pool.
type NodePoolRepairActionEnum string

const (
	NodePoolRepairActionEnumRepairActionUnspecified NodePoolRepairActionEnum = "REPAIR_ACTION_UNSPECIFIED"
	NodePoolRepairActionEnumDelete                  NodePoolRepairActionEnum = "DELETE"
)

func (e *NodePoolRepairActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REPAIR_ACTION_UNSPECIFIED":
		fallthrough
	case "DELETE":
		*e = NodePoolRepairActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodePoolRepairActionEnum: %s", s)
	}
}

// NodePool - indicating a list of workers of same type
type NodePool struct {
	// Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id.
	ID *string `json:"id,omitempty"`
	// Name of instances to be repaired. These instances must belong to specified node pool.
	InstanceNames []string `json:"instanceNames,omitempty"`
	// Required. Repair action to take on specified resources of the node pool.
	RepairAction *NodePoolRepairActionEnum `json:"repairAction,omitempty"`
}
