"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import productmatchdimension as shared_productmatchdimension
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProductFeedDataProductMatchTypeEnum(str, Enum):
    r"""How products are selected by the product feed."""
    PRODUCT_MATCH_TYPE_UNSPECIFIED = 'PRODUCT_MATCH_TYPE_UNSPECIFIED'
    PRODUCT_MATCH_TYPE_ALL_PRODUCTS = 'PRODUCT_MATCH_TYPE_ALL_PRODUCTS'
    PRODUCT_MATCH_TYPE_SPECIFIC_PRODUCTS = 'PRODUCT_MATCH_TYPE_SPECIFIC_PRODUCTS'
    PRODUCT_MATCH_TYPE_CUSTOM_LABEL = 'PRODUCT_MATCH_TYPE_CUSTOM_LABEL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductFeedData:
    r"""The details of product feed."""
    
    is_feed_disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isFeedDisabled'), 'exclude': lambda f: f is None }})
    r"""Whether the product feed has opted-out of showing products."""  
    product_match_dimensions: Optional[list[shared_productmatchdimension.ProductMatchDimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productMatchDimensions'), 'exclude': lambda f: f is None }})
    r"""A list of dimensions used to match products."""  
    product_match_type: Optional[ProductFeedDataProductMatchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productMatchType'), 'exclude': lambda f: f is None }})
    r"""How products are selected by the product feed."""  
    