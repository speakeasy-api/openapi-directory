// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FindingSeverityEnum string

const (
	FindingSeverityEnumInformational FindingSeverityEnum = "INFORMATIONAL"
	FindingSeverityEnumLow           FindingSeverityEnum = "LOW"
	FindingSeverityEnumMedium        FindingSeverityEnum = "MEDIUM"
	FindingSeverityEnumHigh          FindingSeverityEnum = "HIGH"
	FindingSeverityEnumCritical      FindingSeverityEnum = "CRITICAL"
	FindingSeverityEnumUndefined     FindingSeverityEnum = "UNDEFINED"
)

func (e FindingSeverityEnum) ToPointer() *FindingSeverityEnum {
	return &e
}

func (e *FindingSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INFORMATIONAL":
		fallthrough
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		fallthrough
	case "CRITICAL":
		fallthrough
	case "UNDEFINED":
		*e = FindingSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindingSeverityEnum: %v", v)
	}
}
