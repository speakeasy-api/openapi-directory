<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Logging - Logging configuration of the service. The following example shows how to configure logs to be sent to the producer and consumer projects. In the example, the `activity_history` log is sent to both the producer and consumer projects, whereas the `purchase_history` log is only sent to the producer project. monitored_resources: - type: library.googleapis.com/branch labels: - key: /city description: The city where the library branch is located in. - key: /name description: The name of the branch. logs: - name: activity_history labels: - key: /customer_id - name: purchase_history logging: producer_destinations: - monitored_resource: library.googleapis.com/branch logs: - activity_history - purchase_history consumer_destinations: - monitored_resource: library.googleapis.com/branch logs: - activity_history
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Logging
{
    /**
     * Logging configurations for sending logs to the consumer project. There can be multiple consumer destinations, each one must have a different monitored resource type. A log can be used in at most one consumer destination.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LoggingDestination> $consumerDestinations
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumerDestinations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LoggingDestination>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $consumerDestinations = null;
    
    /**
     * Logging configurations for sending logs to the producer project. There can be multiple producer destinations, each one must have a different monitored resource type. A log can be used in at most one producer destination.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LoggingDestination> $producerDestinations
     */
	#[\JMS\Serializer\Annotation\SerializedName('producerDestinations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LoggingDestination>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $producerDestinations = null;
    
	public function __construct()
	{
		$this->consumerDestinations = null;
		$this->producerDestinations = null;
	}
}
