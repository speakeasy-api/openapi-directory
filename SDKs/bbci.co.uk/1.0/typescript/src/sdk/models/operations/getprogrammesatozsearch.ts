/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The sort order of the results.
 */
export enum GetProgrammesAtoZSearchSortEnum {
  Title = "title",
}

export class GetProgrammesAtoZSearchRequest extends SpeakeasyBase {
  /**
   * Whether to return all, or available programmes
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=availability",
  })
  availability: shared.AvailabilityEnum;

  /**
   * The depth to return child entities.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=initial_child_count",
  })
  initialChildCount: number;

  /**
   * Letter to search by, a to z or the string '0-9'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=letter",
  })
  letter: string;

  /**
   * The page index.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page: number;

  /**
   * The number of results to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage: number;

  /**
   * The rights group to limit results to.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=rights",
  })
  rights: shared.RightsEnum;

  /**
   * The sort order of the results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort: GetProgrammesAtoZSearchSortEnum;

  /**
   * Whether to sort ascending or descending
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_direction",
  })
  sortDirection: shared.SortDirectionEnum;
}

export class GetProgrammesAtoZSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Default response
   */
  @SpeakeasyMetadata()
  ibl?: any;
}
