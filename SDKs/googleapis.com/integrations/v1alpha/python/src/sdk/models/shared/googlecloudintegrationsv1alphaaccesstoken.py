"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaAccessToken:
    r"""The access token represents the authorization of a specific application to access specific parts of a userâ€™s data."""
    
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessToken'), 'exclude': lambda f: f is None }})
    r"""The access token encapsulating the security identity of a process or thread."""  
    access_token_expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessTokenExpireTime'), 'exclude': lambda f: f is None }})
    r"""Required. The approximate time until the access token retrieved is valid."""  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refreshToken'), 'exclude': lambda f: f is None }})
    r"""If the access token will expire, use the refresh token to obtain another access token."""  
    refresh_token_expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refreshTokenExpireTime'), 'exclude': lambda f: f is None }})
    r"""The approximate time until the refresh token retrieved is valid."""  
    token_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokenType'), 'exclude': lambda f: f is None }})
    r"""Only support \\"bearer\\" token in v1 as bearer token is the predominant type used with OAuth 2.0."""  
    