<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetDeparturesByCRSRequest
{
    /**
     * The CRS (Computer Reservation System) for the station you wish to get departure information for, e.g. KGX for London Kings Cross.
     * 
     * @var string $crs
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=CRS')]
    public string $crs;
    
    /**
     * The National Rail OpenLDBWS API Key to use for looking up service information. You must register with National Rail to obtain this key and whitelist it with us. See https://api.departureboard.io/docs/registration for more information.
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=apiKey')]
    public string $apiKey;
    
    /**
     * The CRS (Computer Reservation System) code to filter the results by. For example, performing a lookup for PAD (London Paddington) and setting filterStation to RED (Reading), will only show services departing from Paddington that stop at Reading.
     * 
     * @var ?string $filterStation
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filterStation')]
    public ?string $filterStation = null;
    
    /**
     * The number of departing services to return. This is a maximum value, less may be returned if there is not a sufficient amount of services running from the selected station within the time window specified.
     * 
     * @var ?int $numServices
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=numServices')]
    public ?int $numServices = null;
    
    /**
     * Should the response contain information on the calling points for each service? If set to false, calling points will not be returned.
     * 
     * @var ?bool $serviceDetails
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=serviceDetails')]
    public ?bool $serviceDetails = null;
    
    /**
     * The time window in minutes to offset the departure information by. For example, a value of 20 will not show services departing within the next 20 minutes.
     * 
     * @var ?int $timeOffset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=timeOffset')]
    public ?int $timeOffset = null;
    
    /**
     * The time window to show services for in minutes. For example, a value of 60 will show services departing the station in the next 60 minutes.
     * 
     * @var ?int $timeWindow
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=timeWindow')]
    public ?int $timeWindow = null;
    
	public function __construct()
	{
		$this->crs = "";
		$this->apiKey = "";
		$this->filterStation = null;
		$this->numServices = null;
		$this->serviceDetails = null;
		$this->timeOffset = null;
		$this->timeWindow = null;
	}
}
