"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import ipblocklistresponse as shared_ipblocklistresponse
from typing import Optional


@dataclasses.dataclass
class IPBlocklistRequest:
    
    ip: str = dataclasses.field(metadata={'query_param': { 'field_name': 'ip', 'style': 'form', 'explode': True }})
    r"""An IPv4 or IPv6 address. Accepts standard IP notation (with or without port number), CIDR notation and IPv6 compressed notation. If multiple IPs are passed using comma-separated values the first non-bogon address on the list will be checked"""  
    vpn_lookup: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'vpn-lookup', 'style': 'form', 'explode': True }})
    r"""Include public VPN provider IP addresses. <br><b>NOTE</b>: For more advanced VPN detection including the ability to identify private and stealth VPNs use the <a href=\\"https://www.neutrinoapi.com/api/ip-probe/\\">IP Probe API</a>"""  
    

@dataclasses.dataclass
class IPBlocklistResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Your API request has been rejected. Check error code for details"""  
    ip_blocklist_response: Optional[shared_ipblocklistresponse.IPBlocklistResponse] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    