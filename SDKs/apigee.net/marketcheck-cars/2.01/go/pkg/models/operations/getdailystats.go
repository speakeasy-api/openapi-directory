// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetDailyStatsCarTypeEnum - Inventory type for which stats are to be searched, default is used
type GetDailyStatsCarTypeEnum string

const (
	GetDailyStatsCarTypeEnumNew  GetDailyStatsCarTypeEnum = "new"
	GetDailyStatsCarTypeEnumUsed GetDailyStatsCarTypeEnum = "used"
)

func (e *GetDailyStatsCarTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "new":
		fallthrough
	case "used":
		*e = GetDailyStatsCarTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDailyStatsCarTypeEnum: %s", s)
	}
}

// GetDailyStatsCountryEnum - Country for which the stats are to be searched
type GetDailyStatsCountryEnum string

const (
	GetDailyStatsCountryEnumUs GetDailyStatsCountryEnum = "us"
	GetDailyStatsCountryEnumCa GetDailyStatsCountryEnum = "ca"
)

func (e *GetDailyStatsCountryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "us":
		fallthrough
	case "ca":
		*e = GetDailyStatsCountryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDailyStatsCountryEnum: %s", s)
	}
}

type GetDailyStatsRequest struct {
	// The API Authentication Key. Mandatory with all API calls.
	APIKey *string `queryParam:"style=form,explode=true,name=api_key"`
	// Inventory type for which stats are to be searched, default is used
	CarType *GetDailyStatsCarTypeEnum `queryParam:"style=form,explode=true,name=car_type"`
	// City level stats, pipe seperated like city_state=jacksonville|FL
	CityState *string `queryParam:"style=form,explode=true,name=city_state"`
	// Country for which the stats are to be searched
	Country *GetDailyStatsCountryEnum `queryParam:"style=form,explode=true,name=country"`
	// State level stats
	State *string `queryParam:"style=form,explode=true,name=state"`
	// Taxonomy vin for referance to find stats of similar cars
	TaxonomyVin *string `queryParam:"style=form,explode=true,name=taxonomy_vin"`
	// VIN that will be transformed to taxonomy_vin
	Vin *string `queryParam:"style=form,explode=true,name=vin"`
	// Year, Make, Model of the car, Separated by pipe e.g. ymm=2015|ford|f-150
	Ymm *string `queryParam:"style=form,explode=true,name=ymm"`
	// Year, Make, Model, Trim of the car, Separated by pipe e.g. ymmt=2015|ford|f-150|platinum
	Ymmt *string `queryParam:"style=form,explode=true,name=ymmt"`
}

type GetDailyStatsResponse struct {
	ContentType string
	// Data with Market averages and stats
	DailyStats *shared.DailyStats
	// Error
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
