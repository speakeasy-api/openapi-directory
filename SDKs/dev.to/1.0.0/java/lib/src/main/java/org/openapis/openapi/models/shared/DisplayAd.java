/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DisplayAd - A Display Ad, aka Billboard, aka Widget
 */
public class DisplayAd {
    /**
     * Ad must be both published and approved to be in rotation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approved")
    public Boolean approved;

    public DisplayAd withApproved(Boolean approved) {
        this.approved = approved;
        return this;
    }
    
    /**
     * Articles this ad should *not* appear on (blank means no articles are disallowed, and this ad can appear next to any/all articles). Comma-separated list of integer Article IDs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("article_exclude_ids")
    public String articleExcludeIds;

    public DisplayAd withArticleExcludeIds(String articleExcludeIds) {
        this.articleExcludeIds = articleExcludeIds;
        return this;
    }
    
    /**
     * The text (in markdown) of the ad (required)
     */
    @JsonProperty("body_markdown")
    public String bodyMarkdown;

    public DisplayAd withBodyMarkdown(String bodyMarkdown) {
        this.bodyMarkdown = bodyMarkdown;
        return this;
    }
    
    /**
     * Identifies the user who created the ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creator_id")
    public Long creatorId;

    public DisplayAd withCreatorId(Long creatorId) {
        this.creatorId = creatorId;
        return this;
    }
    
    /**
     * Potentially limits visitors to whom the ad is visible
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_to")
    public DisplayAdDisplayToEnum displayTo;

    public DisplayAd withDisplayTo(DisplayAdDisplayToEnum displayTo) {
        this.displayTo = displayTo;
        return this;
    }
    
    /**
     * The ID of the Display Ad
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public DisplayAd withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * For internal use, helps distinguish ads from one another
     */
    @JsonProperty("name")
    public String name;

    public DisplayAd withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Identifies the organization to which the ad belongs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_id")
    public Long organizationId;

    public DisplayAd withOrganizationId(Long organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * Identifies which area of site layout the ad can appear in
     */
    @JsonProperty("placement_area")
    public DisplayAdPlacementAreaEnum placementArea;

    public DisplayAd withPlacementArea(DisplayAdPlacementAreaEnum placementArea) {
        this.placementArea = placementArea;
        return this;
    }
    
    /**
     * Ad must be both published and approved to be in rotation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("published")
    public Boolean published;

    public DisplayAd withPublished(Boolean published) {
        this.published = published;
        return this;
    }
    
    /**
     * Tags on which this ad can be displayed (blank is all/any tags)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag_list")
    public String tagList;

    public DisplayAd withTagList(String tagList) {
        this.tagList = tagList;
        return this;
    }
    
    /**
     * Types of the billboards:
     * in_house (created by admins),
     * community (created by an entity, appears on entity's content),
     * external ( created by an entity, or a non-entity, can appear everywhere)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type_of")
    public DisplayAdTypeOfEnum typeOf;

    public DisplayAd withTypeOf(DisplayAdTypeOfEnum typeOf) {
        this.typeOf = typeOf;
        return this;
    }
    
    public DisplayAd(@JsonProperty("body_markdown") String bodyMarkdown, @JsonProperty("name") String name, @JsonProperty("placement_area") DisplayAdPlacementAreaEnum placementArea) {
        this.bodyMarkdown = bodyMarkdown;
        this.name = name;
        this.placementArea = placementArea;
  }
}
