"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sectionstyle as shared_sectionstyle
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SectionBreak:
    r"""A StructuralElement representing a section break. A section is a range of content that has the same SectionStyle. A section break represents the start of a new section, and the section style applies to the section after the section break. The document body always begins with a section break."""
    
    section_style: Optional[shared_sectionstyle.SectionStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionStyle'), 'exclude': lambda f: f is None }})
    r"""The styling that applies to a section."""  
    suggested_deletion_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedDeletionIds'), 'exclude': lambda f: f is None }})
    r"""The suggested deletion IDs. If empty, then there are no suggested deletions of this content."""  
    suggested_insertion_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedInsertionIds'), 'exclude': lambda f: f is None }})
    r"""The suggested insertion IDs. A SectionBreak may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion."""  
    