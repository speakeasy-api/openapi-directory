/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JavaSettings - Settings for Java client libraries.
 */
public class JavaSettings {
    /**
     * Required information for every language.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("common")
    public CommonLanguageSettings common;
    public JavaSettings withCommon(CommonLanguageSettings common) {
        this.common = common;
        return this;
    }
    
    /**
     * The package name to use in Java. Clobbers the java_package option set in the protobuf. This should be used **only** by APIs who have already set the language_settings.java.package_name" field in gapic.yaml. API teams should use the protobuf java_package option where possible. Example of a YAML configuration:: publishing: java_settings: library_package: com.google.cloud.pubsub.v1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("libraryPackage")
    public String libraryPackage;
    public JavaSettings withLibraryPackage(String libraryPackage) {
        this.libraryPackage = libraryPackage;
        return this;
    }
    
    /**
     * Configure the Java class name to use instead of the service's for its corresponding generated GAPIC client. Keys are fully-qualified service names as they appear in the protobuf (including the full the language_settings.java.interface_names" field in gapic.yaml. API teams should otherwise use the service name as it appears in the protobuf. Example of a YAML configuration:: publishing: java_settings: service_class_names: - google.pubsub.v1.Publisher: TopicAdmin - google.pubsub.v1.Subscriber: SubscriptionAdmin
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceClassNames")
    public java.util.Map<String, String> serviceClassNames;
    public JavaSettings withServiceClassNames(java.util.Map<String, String> serviceClassNames) {
        this.serviceClassNames = serviceClassNames;
        return this;
    }
    
}
