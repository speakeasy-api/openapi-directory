/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class FailedPayeeV4 {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public CreatePayeeAddressV4 address;
    public FailedPayeeV4 withAddress(CreatePayeeAddressV4 address) {
        this.address = address;
        return this;
    }
    
    /**
     * &lt;p&gt;Used to override the default challenge presented to the payee when they onboard&lt;/p&gt;
     * &lt;p&gt;Not used after the payee has onboarded&lt;/p&gt;
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("challenge")
    public ChallengeV4 challenge;
    public FailedPayeeV4 withChallenge(ChallengeV4 challenge) {
        this.challenge = challenge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company")
    public CompanyV4 company;
    public FailedPayeeV4 withCompany(CompanyV4 company) {
        this.company = company;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public FailedPayeeV4 withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individual")
    public CreateIndividualV4 individual;
    public FailedPayeeV4 withIndividual(CreateIndividualV4 individual) {
        this.individual = individual;
        return this;
    }
    
    /**
     * An IETF BCP 47 language code which has been configured for use within this Velo environment.&lt;BR&gt;
     * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public FailedPayeeV4 withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payeeId")
    public String payeeId;
    public FailedPayeeV4 withPayeeId(String payeeId) {
        this.payeeId = payeeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannel")
    public CreatePaymentChannelV4 paymentChannel;
    public FailedPayeeV4 withPaymentChannel(CreatePaymentChannelV4 paymentChannel) {
        this.paymentChannel = paymentChannel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payorRefs")
    public PayeePayorRefV4[] payorRefs;
    public FailedPayeeV4 withPayorRefs(PayeePayorRefV4[] payorRefs) {
        this.payorRefs = payorRefs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remoteId")
    public String remoteId;
    public FailedPayeeV4 withRemoteId(String remoteId) {
        this.remoteId = remoteId;
        return this;
    }
    
    /**
     * Type of Payee. One of the following values: Individual, Company
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public FailedPayeeV4 withType(String type) {
        this.type = type;
        return this;
    }
    
}
