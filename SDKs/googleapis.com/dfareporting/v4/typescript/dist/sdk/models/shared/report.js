"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Report = exports.ReportTypeEnum = exports.ReportSchedule = exports.ReportScheduleRunsOnDayOfMonthEnum = exports.ReportScheduleRepeatsOnWeekDaysEnum = exports.ReportReachCriteria = exports.ReportPathToConversionCriteria = exports.ReportPathToConversionCriteriaReportProperties = exports.ReportPathCriteria = exports.ReportPathAttributionCriteria = exports.ReportFormatEnum = exports.ReportFloodlightCriteria = exports.ReportFloodlightCriteriaReportProperties = exports.ReportDelivery = exports.ReportDeliveryEmailOwnerDeliveryTypeEnum = exports.ReportCrossDimensionReachCriteria = exports.ReportCrossDimensionReachCriteriaDimensionEnum = exports.ReportCriteria = void 0;
var utils_1 = require("../../../internal/utils");
var activities_1 = require("./activities");
var channelgrouping_1 = require("./channelgrouping");
var customrichmediaevents_1 = require("./customrichmediaevents");
var daterange_1 = require("./daterange");
var dimensionvalue_1 = require("./dimensionvalue");
var pathfilter_1 = require("./pathfilter");
var recipient_1 = require("./recipient");
var sorteddimension_1 = require("./sorteddimension");
var class_transformer_1 = require("class-transformer");
/**
 * The report criteria for a report of type "STANDARD".
 */
var ReportCriteria = /** @class */ (function (_super) {
    __extends(ReportCriteria, _super);
    function ReportCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "activities" }),
        (0, class_transformer_1.Type)(function () { return activities_1.Activities; }),
        __metadata("design:type", activities_1.Activities)
    ], ReportCriteria.prototype, "activities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customRichMediaEvents" }),
        (0, class_transformer_1.Type)(function () { return customrichmediaevents_1.CustomRichMediaEvents; }),
        __metadata("design:type", customrichmediaevents_1.CustomRichMediaEvents)
    ], ReportCriteria.prototype, "customRichMediaEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "dimensionFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportCriteria.prototype, "dimensionFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "dimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportCriteria.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportCriteria.prototype, "metricNames", void 0);
    return ReportCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportCriteria = ReportCriteria;
/**
 * The dimension option.
 */
var ReportCrossDimensionReachCriteriaDimensionEnum;
(function (ReportCrossDimensionReachCriteriaDimensionEnum) {
    ReportCrossDimensionReachCriteriaDimensionEnum["Advertiser"] = "ADVERTISER";
    ReportCrossDimensionReachCriteriaDimensionEnum["Campaign"] = "CAMPAIGN";
    ReportCrossDimensionReachCriteriaDimensionEnum["SiteByAdvertiser"] = "SITE_BY_ADVERTISER";
    ReportCrossDimensionReachCriteriaDimensionEnum["SiteByCampaign"] = "SITE_BY_CAMPAIGN";
})(ReportCrossDimensionReachCriteriaDimensionEnum = exports.ReportCrossDimensionReachCriteriaDimensionEnum || (exports.ReportCrossDimensionReachCriteriaDimensionEnum = {}));
/**
 * The report criteria for a report of type "CROSS_DIMENSION_REACH".
 */
var ReportCrossDimensionReachCriteria = /** @class */ (function (_super) {
    __extends(ReportCrossDimensionReachCriteria, _super);
    function ReportCrossDimensionReachCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "breakdown" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportCrossDimensionReachCriteria.prototype, "breakdown", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportCrossDimensionReachCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dimension" }),
        __metadata("design:type", String)
    ], ReportCrossDimensionReachCriteria.prototype, "dimension", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "dimensionFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportCrossDimensionReachCriteria.prototype, "dimensionFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportCrossDimensionReachCriteria.prototype, "metricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "overlapMetricNames" }),
        __metadata("design:type", Array)
    ], ReportCrossDimensionReachCriteria.prototype, "overlapMetricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pivoted" }),
        __metadata("design:type", Boolean)
    ], ReportCrossDimensionReachCriteria.prototype, "pivoted", void 0);
    return ReportCrossDimensionReachCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportCrossDimensionReachCriteria = ReportCrossDimensionReachCriteria;
/**
 * The type of delivery for the owner to receive, if enabled.
 */
var ReportDeliveryEmailOwnerDeliveryTypeEnum;
(function (ReportDeliveryEmailOwnerDeliveryTypeEnum) {
    ReportDeliveryEmailOwnerDeliveryTypeEnum["Link"] = "LINK";
    ReportDeliveryEmailOwnerDeliveryTypeEnum["Attachment"] = "ATTACHMENT";
})(ReportDeliveryEmailOwnerDeliveryTypeEnum = exports.ReportDeliveryEmailOwnerDeliveryTypeEnum || (exports.ReportDeliveryEmailOwnerDeliveryTypeEnum = {}));
/**
 * The report's email delivery settings.
 */
var ReportDelivery = /** @class */ (function (_super) {
    __extends(ReportDelivery, _super);
    function ReportDelivery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailOwner" }),
        __metadata("design:type", Boolean)
    ], ReportDelivery.prototype, "emailOwner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailOwnerDeliveryType" }),
        __metadata("design:type", String)
    ], ReportDelivery.prototype, "emailOwnerDeliveryType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], ReportDelivery.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: recipient_1.Recipient }),
        (0, class_transformer_1.Expose)({ name: "recipients" }),
        (0, class_transformer_1.Type)(function () { return recipient_1.Recipient; }),
        __metadata("design:type", Array)
    ], ReportDelivery.prototype, "recipients", void 0);
    return ReportDelivery;
}(utils_1.SpeakeasyBase));
exports.ReportDelivery = ReportDelivery;
/**
 * The properties of the report.
 */
var ReportFloodlightCriteriaReportProperties = /** @class */ (function (_super) {
    __extends(ReportFloodlightCriteriaReportProperties, _super);
    function ReportFloodlightCriteriaReportProperties() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "includeAttributedIPConversions" }),
        __metadata("design:type", Boolean)
    ], ReportFloodlightCriteriaReportProperties.prototype, "includeAttributedIPConversions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "includeUnattributedCookieConversions" }),
        __metadata("design:type", Boolean)
    ], ReportFloodlightCriteriaReportProperties.prototype, "includeUnattributedCookieConversions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "includeUnattributedIPConversions" }),
        __metadata("design:type", Boolean)
    ], ReportFloodlightCriteriaReportProperties.prototype, "includeUnattributedIPConversions", void 0);
    return ReportFloodlightCriteriaReportProperties;
}(utils_1.SpeakeasyBase));
exports.ReportFloodlightCriteriaReportProperties = ReportFloodlightCriteriaReportProperties;
/**
 * The report criteria for a report of type "FLOODLIGHT".
 */
var ReportFloodlightCriteria = /** @class */ (function (_super) {
    __extends(ReportFloodlightCriteria, _super);
    function ReportFloodlightCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "customRichMediaEvents" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportFloodlightCriteria.prototype, "customRichMediaEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportFloodlightCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "dimensionFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportFloodlightCriteria.prototype, "dimensionFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "dimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportFloodlightCriteria.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "floodlightConfigId" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", dimensionvalue_1.DimensionValue)
    ], ReportFloodlightCriteria.prototype, "floodlightConfigId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportFloodlightCriteria.prototype, "metricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reportProperties" }),
        (0, class_transformer_1.Type)(function () { return ReportFloodlightCriteriaReportProperties; }),
        __metadata("design:type", ReportFloodlightCriteriaReportProperties)
    ], ReportFloodlightCriteria.prototype, "reportProperties", void 0);
    return ReportFloodlightCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportFloodlightCriteria = ReportFloodlightCriteria;
/**
 * The output format of the report. If not specified, default format is "CSV". Note that the actual format in the completed report file might differ if for instance the report's size exceeds the format's capabilities. "CSV" will then be the fallback format.
 */
var ReportFormatEnum;
(function (ReportFormatEnum) {
    ReportFormatEnum["Csv"] = "CSV";
    ReportFormatEnum["Excel"] = "EXCEL";
})(ReportFormatEnum = exports.ReportFormatEnum || (exports.ReportFormatEnum = {}));
/**
 * The report criteria for a report of type "PATH_ATTRIBUTION".
 */
var ReportPathAttributionCriteria = /** @class */ (function (_super) {
    __extends(ReportPathAttributionCriteria, _super);
    function ReportPathAttributionCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "activityFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportPathAttributionCriteria.prototype, "activityFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customChannelGrouping" }),
        (0, class_transformer_1.Type)(function () { return channelgrouping_1.ChannelGrouping; }),
        __metadata("design:type", channelgrouping_1.ChannelGrouping)
    ], ReportPathAttributionCriteria.prototype, "customChannelGrouping", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportPathAttributionCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "dimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportPathAttributionCriteria.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "floodlightConfigId" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", dimensionvalue_1.DimensionValue)
    ], ReportPathAttributionCriteria.prototype, "floodlightConfigId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportPathAttributionCriteria.prototype, "metricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: pathfilter_1.PathFilter }),
        (0, class_transformer_1.Expose)({ name: "pathFilters" }),
        (0, class_transformer_1.Type)(function () { return pathfilter_1.PathFilter; }),
        __metadata("design:type", Array)
    ], ReportPathAttributionCriteria.prototype, "pathFilters", void 0);
    return ReportPathAttributionCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportPathAttributionCriteria = ReportPathAttributionCriteria;
/**
 * The report criteria for a report of type "PATH".
 */
var ReportPathCriteria = /** @class */ (function (_super) {
    __extends(ReportPathCriteria, _super);
    function ReportPathCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "activityFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportPathCriteria.prototype, "activityFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customChannelGrouping" }),
        (0, class_transformer_1.Type)(function () { return channelgrouping_1.ChannelGrouping; }),
        __metadata("design:type", channelgrouping_1.ChannelGrouping)
    ], ReportPathCriteria.prototype, "customChannelGrouping", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportPathCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "dimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportPathCriteria.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "floodlightConfigId" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", dimensionvalue_1.DimensionValue)
    ], ReportPathCriteria.prototype, "floodlightConfigId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportPathCriteria.prototype, "metricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: pathfilter_1.PathFilter }),
        (0, class_transformer_1.Expose)({ name: "pathFilters" }),
        (0, class_transformer_1.Type)(function () { return pathfilter_1.PathFilter; }),
        __metadata("design:type", Array)
    ], ReportPathCriteria.prototype, "pathFilters", void 0);
    return ReportPathCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportPathCriteria = ReportPathCriteria;
/**
 * The properties of the report.
 */
var ReportPathToConversionCriteriaReportProperties = /** @class */ (function (_super) {
    __extends(ReportPathToConversionCriteriaReportProperties, _super);
    function ReportPathToConversionCriteriaReportProperties() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clicksLookbackWindow" }),
        __metadata("design:type", Number)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "clicksLookbackWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "impressionsLookbackWindow" }),
        __metadata("design:type", Number)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "impressionsLookbackWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "includeAttributedIPConversions" }),
        __metadata("design:type", Boolean)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "includeAttributedIPConversions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "includeUnattributedCookieConversions" }),
        __metadata("design:type", Boolean)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "includeUnattributedCookieConversions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "includeUnattributedIPConversions" }),
        __metadata("design:type", Boolean)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "includeUnattributedIPConversions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maximumClickInteractions" }),
        __metadata("design:type", Number)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "maximumClickInteractions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maximumImpressionInteractions" }),
        __metadata("design:type", Number)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "maximumImpressionInteractions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maximumInteractionGap" }),
        __metadata("design:type", Number)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "maximumInteractionGap", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pivotOnInteractionPath" }),
        __metadata("design:type", Boolean)
    ], ReportPathToConversionCriteriaReportProperties.prototype, "pivotOnInteractionPath", void 0);
    return ReportPathToConversionCriteriaReportProperties;
}(utils_1.SpeakeasyBase));
exports.ReportPathToConversionCriteriaReportProperties = ReportPathToConversionCriteriaReportProperties;
/**
 * The report criteria for a report of type "PATH_TO_CONVERSION".
 */
var ReportPathToConversionCriteria = /** @class */ (function (_super) {
    __extends(ReportPathToConversionCriteria, _super);
    function ReportPathToConversionCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "activityFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportPathToConversionCriteria.prototype, "activityFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "conversionDimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportPathToConversionCriteria.prototype, "conversionDimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "customFloodlightVariables" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportPathToConversionCriteria.prototype, "customFloodlightVariables", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "customRichMediaEvents" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportPathToConversionCriteria.prototype, "customRichMediaEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportPathToConversionCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "floodlightConfigId" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", dimensionvalue_1.DimensionValue)
    ], ReportPathToConversionCriteria.prototype, "floodlightConfigId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportPathToConversionCriteria.prototype, "metricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "perInteractionDimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportPathToConversionCriteria.prototype, "perInteractionDimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reportProperties" }),
        (0, class_transformer_1.Type)(function () { return ReportPathToConversionCriteriaReportProperties; }),
        __metadata("design:type", ReportPathToConversionCriteriaReportProperties)
    ], ReportPathToConversionCriteria.prototype, "reportProperties", void 0);
    return ReportPathToConversionCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportPathToConversionCriteria = ReportPathToConversionCriteria;
/**
 * The report criteria for a report of type "REACH".
 */
var ReportReachCriteria = /** @class */ (function (_super) {
    __extends(ReportReachCriteria, _super);
    function ReportReachCriteria() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "activities" }),
        (0, class_transformer_1.Type)(function () { return activities_1.Activities; }),
        __metadata("design:type", activities_1.Activities)
    ], ReportReachCriteria.prototype, "activities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customRichMediaEvents" }),
        (0, class_transformer_1.Type)(function () { return customrichmediaevents_1.CustomRichMediaEvents; }),
        __metadata("design:type", customrichmediaevents_1.CustomRichMediaEvents)
    ], ReportReachCriteria.prototype, "customRichMediaEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRange" }),
        (0, class_transformer_1.Type)(function () { return daterange_1.DateRange; }),
        __metadata("design:type", daterange_1.DateRange)
    ], ReportReachCriteria.prototype, "dateRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: dimensionvalue_1.DimensionValue }),
        (0, class_transformer_1.Expose)({ name: "dimensionFilters" }),
        (0, class_transformer_1.Type)(function () { return dimensionvalue_1.DimensionValue; }),
        __metadata("design:type", Array)
    ], ReportReachCriteria.prototype, "dimensionFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sorteddimension_1.SortedDimension }),
        (0, class_transformer_1.Expose)({ name: "dimensions" }),
        (0, class_transformer_1.Type)(function () { return sorteddimension_1.SortedDimension; }),
        __metadata("design:type", Array)
    ], ReportReachCriteria.prototype, "dimensions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enableAllDimensionCombinations" }),
        __metadata("design:type", Boolean)
    ], ReportReachCriteria.prototype, "enableAllDimensionCombinations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metricNames" }),
        __metadata("design:type", Array)
    ], ReportReachCriteria.prototype, "metricNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reachByFrequencyMetricNames" }),
        __metadata("design:type", Array)
    ], ReportReachCriteria.prototype, "reachByFrequencyMetricNames", void 0);
    return ReportReachCriteria;
}(utils_1.SpeakeasyBase));
exports.ReportReachCriteria = ReportReachCriteria;
var ReportScheduleRepeatsOnWeekDaysEnum;
(function (ReportScheduleRepeatsOnWeekDaysEnum) {
    ReportScheduleRepeatsOnWeekDaysEnum["Sunday"] = "SUNDAY";
    ReportScheduleRepeatsOnWeekDaysEnum["Monday"] = "MONDAY";
    ReportScheduleRepeatsOnWeekDaysEnum["Tuesday"] = "TUESDAY";
    ReportScheduleRepeatsOnWeekDaysEnum["Wednesday"] = "WEDNESDAY";
    ReportScheduleRepeatsOnWeekDaysEnum["Thursday"] = "THURSDAY";
    ReportScheduleRepeatsOnWeekDaysEnum["Friday"] = "FRIDAY";
    ReportScheduleRepeatsOnWeekDaysEnum["Saturday"] = "SATURDAY";
})(ReportScheduleRepeatsOnWeekDaysEnum = exports.ReportScheduleRepeatsOnWeekDaysEnum || (exports.ReportScheduleRepeatsOnWeekDaysEnum = {}));
/**
 * Enum to define for "MONTHLY" scheduled reports whether reports should be repeated on the same day of the month as "startDate" or the same day of the week of the month. Example: If 'startDate' is Monday, April 2nd 2012 (2012-04-02), "DAY_OF_MONTH" would run subsequent reports on the 2nd of every Month, and "WEEK_OF_MONTH" would run subsequent reports on the first Monday of the month.
 */
var ReportScheduleRunsOnDayOfMonthEnum;
(function (ReportScheduleRunsOnDayOfMonthEnum) {
    ReportScheduleRunsOnDayOfMonthEnum["DayOfMonth"] = "DAY_OF_MONTH";
    ReportScheduleRunsOnDayOfMonthEnum["WeekOfMonth"] = "WEEK_OF_MONTH";
})(ReportScheduleRunsOnDayOfMonthEnum = exports.ReportScheduleRunsOnDayOfMonthEnum || (exports.ReportScheduleRunsOnDayOfMonthEnum = {}));
/**
 * The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not "TODAY".
 */
var ReportSchedule = /** @class */ (function (_super) {
    __extends(ReportSchedule, _super);
    function ReportSchedule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "active" }),
        __metadata("design:type", Boolean)
    ], ReportSchedule.prototype, "active", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "every" }),
        __metadata("design:type", Number)
    ], ReportSchedule.prototype, "every", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expirationDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ReportSchedule.prototype, "expirationDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "repeats" }),
        __metadata("design:type", String)
    ], ReportSchedule.prototype, "repeats", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "repeatsOnWeekDays" }),
        __metadata("design:type", Array)
    ], ReportSchedule.prototype, "repeatsOnWeekDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runsOnDayOfMonth" }),
        __metadata("design:type", String)
    ], ReportSchedule.prototype, "runsOnDayOfMonth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ReportSchedule.prototype, "startDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timezone" }),
        __metadata("design:type", String)
    ], ReportSchedule.prototype, "timezone", void 0);
    return ReportSchedule;
}(utils_1.SpeakeasyBase));
exports.ReportSchedule = ReportSchedule;
/**
 * The type of the report.
 */
var ReportTypeEnum;
(function (ReportTypeEnum) {
    ReportTypeEnum["Standard"] = "STANDARD";
    ReportTypeEnum["Reach"] = "REACH";
    ReportTypeEnum["PathToConversion"] = "PATH_TO_CONVERSION";
    ReportTypeEnum["CrossDimensionReach"] = "CROSS_DIMENSION_REACH";
    ReportTypeEnum["Floodlight"] = "FLOODLIGHT";
    ReportTypeEnum["Path"] = "PATH";
    ReportTypeEnum["PathAttribution"] = "PATH_ATTRIBUTION";
})(ReportTypeEnum = exports.ReportTypeEnum || (exports.ReportTypeEnum = {}));
/**
 * Represents a Report resource.
 */
var Report = /** @class */ (function (_super) {
    __extends(Report, _super);
    function Report() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountId" }),
        __metadata("design:type", String)
    ], Report.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "criteria" }),
        (0, class_transformer_1.Type)(function () { return ReportCriteria; }),
        __metadata("design:type", ReportCriteria)
    ], Report.prototype, "criteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "crossDimensionReachCriteria" }),
        (0, class_transformer_1.Type)(function () { return ReportCrossDimensionReachCriteria; }),
        __metadata("design:type", ReportCrossDimensionReachCriteria)
    ], Report.prototype, "crossDimensionReachCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "delivery" }),
        (0, class_transformer_1.Type)(function () { return ReportDelivery; }),
        __metadata("design:type", ReportDelivery)
    ], Report.prototype, "delivery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], Report.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileName" }),
        __metadata("design:type", String)
    ], Report.prototype, "fileName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "floodlightCriteria" }),
        (0, class_transformer_1.Type)(function () { return ReportFloodlightCriteria; }),
        __metadata("design:type", ReportFloodlightCriteria)
    ], Report.prototype, "floodlightCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "format" }),
        __metadata("design:type", String)
    ], Report.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Report.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Report.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastModifiedTime" }),
        __metadata("design:type", String)
    ], Report.prototype, "lastModifiedTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Report.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ownerProfileId" }),
        __metadata("design:type", String)
    ], Report.prototype, "ownerProfileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pathAttributionCriteria" }),
        (0, class_transformer_1.Type)(function () { return ReportPathAttributionCriteria; }),
        __metadata("design:type", ReportPathAttributionCriteria)
    ], Report.prototype, "pathAttributionCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pathCriteria" }),
        (0, class_transformer_1.Type)(function () { return ReportPathCriteria; }),
        __metadata("design:type", ReportPathCriteria)
    ], Report.prototype, "pathCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pathToConversionCriteria" }),
        (0, class_transformer_1.Type)(function () { return ReportPathToConversionCriteria; }),
        __metadata("design:type", ReportPathToConversionCriteria)
    ], Report.prototype, "pathToConversionCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reachCriteria" }),
        (0, class_transformer_1.Type)(function () { return ReportReachCriteria; }),
        __metadata("design:type", ReportReachCriteria)
    ], Report.prototype, "reachCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule" }),
        (0, class_transformer_1.Type)(function () { return ReportSchedule; }),
        __metadata("design:type", ReportSchedule)
    ], Report.prototype, "schedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subAccountId" }),
        __metadata("design:type", String)
    ], Report.prototype, "subAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Report.prototype, "type", void 0);
    return Report;
}(utils_1.SpeakeasyBase));
exports.Report = Report;
