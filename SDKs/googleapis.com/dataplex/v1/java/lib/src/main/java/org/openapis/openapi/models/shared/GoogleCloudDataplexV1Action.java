/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDataplexV1Action - Action represents an issue requiring administrator action for resolution.
 */
public class GoogleCloudDataplexV1Action {
    /**
     * Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asset")
    public String asset;

    public GoogleCloudDataplexV1Action withAsset(String asset) {
        this.asset = asset;
        return this;
    }
    
    /**
     * The category of issue associated with the action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public GoogleCloudDataplexV1ActionCategoryEnum category;

    public GoogleCloudDataplexV1Action withCategory(GoogleCloudDataplexV1ActionCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataLocations")
    public String[] dataLocations;

    public GoogleCloudDataplexV1Action withDataLocations(String[] dataLocations) {
        this.dataLocations = dataLocations;
        return this;
    }
    
    /**
     * The time that the issue was detected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detectTime")
    public String detectTime;

    public GoogleCloudDataplexV1Action withDetectTime(String detectTime) {
        this.detectTime = detectTime;
        return this;
    }
    
    /**
     * Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedSecurityPolicyApply")
    public GoogleCloudDataplexV1ActionFailedSecurityPolicyApply failedSecurityPolicyApply;

    public GoogleCloudDataplexV1Action withFailedSecurityPolicyApply(GoogleCloudDataplexV1ActionFailedSecurityPolicyApply failedSecurityPolicyApply) {
        this.failedSecurityPolicyApply = failedSecurityPolicyApply;
        return this;
    }
    
    /**
     * Action details for incompatible schemas detected by discovery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("incompatibleDataSchema")
    public GoogleCloudDataplexV1ActionIncompatibleDataSchema incompatibleDataSchema;

    public GoogleCloudDataplexV1Action withIncompatibleDataSchema(GoogleCloudDataplexV1ActionIncompatibleDataSchema incompatibleDataSchema) {
        this.incompatibleDataSchema = incompatibleDataSchema;
        return this;
    }
    
    /**
     * Action details for invalid or unsupported data files detected by discovery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidDataFormat")
    public GoogleCloudDataplexV1ActionInvalidDataFormat invalidDataFormat;

    public GoogleCloudDataplexV1Action withInvalidDataFormat(GoogleCloudDataplexV1ActionInvalidDataFormat invalidDataFormat) {
        this.invalidDataFormat = invalidDataFormat;
        return this;
    }
    
    /**
     * Action details for invalid data arrangement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidDataOrganization")
    public java.util.Map<String, Object> invalidDataOrganization;

    public GoogleCloudDataplexV1Action withInvalidDataOrganization(java.util.Map<String, Object> invalidDataOrganization) {
        this.invalidDataOrganization = invalidDataOrganization;
        return this;
    }
    
    /**
     * Action details for invalid or unsupported partitions detected by discovery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidDataPartition")
    public GoogleCloudDataplexV1ActionInvalidDataPartition invalidDataPartition;

    public GoogleCloudDataplexV1Action withInvalidDataPartition(GoogleCloudDataplexV1ActionInvalidDataPartition invalidDataPartition) {
        this.invalidDataPartition = invalidDataPartition;
        return this;
    }
    
    /**
     * Detailed description of the issue requiring action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issue")
    public String issue;

    public GoogleCloudDataplexV1Action withIssue(String issue) {
        this.issue = issue;
        return this;
    }
    
    /**
     * Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lake")
    public String lake;

    public GoogleCloudDataplexV1Action withLake(String lake) {
        this.lake = lake;
        return this;
    }
    
    /**
     * Action details for absence of data detected by discovery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("missingData")
    public java.util.Map<String, Object> missingData;

    public GoogleCloudDataplexV1Action withMissingData(java.util.Map<String, Object> missingData) {
        this.missingData = missingData;
        return this;
    }
    
    /**
     * Action details for resource references in assets that cannot be located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("missingResource")
    public java.util.Map<String, Object> missingResource;

    public GoogleCloudDataplexV1Action withMissingResource(java.util.Map<String, Object> missingResource) {
        this.missingResource = missingResource;
        return this;
    }
    
    /**
     * Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudDataplexV1Action withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unauthorizedResource")
    public java.util.Map<String, Object> unauthorizedResource;

    public GoogleCloudDataplexV1Action withUnauthorizedResource(java.util.Map<String, Object> unauthorizedResource) {
        this.unauthorizedResource = unauthorizedResource;
        return this;
    }
    
    /**
     * Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;

    public GoogleCloudDataplexV1Action withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
    public GoogleCloudDataplexV1Action(){}
}
