/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LeaderboardEntry } from "./leaderboardentry";
import { Expose, Type } from "class-transformer";

/**
 * A ListScores response.
 */
export class LeaderboardScores extends SpeakeasyBase {
  /**
   * The scores in the leaderboard.
   */
  @SpeakeasyMetadata({ elemType: LeaderboardEntry })
  @Expose({ name: "items" })
  @Type(() => LeaderboardEntry)
  items?: LeaderboardEntry[];

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The pagination token for the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The total number of scores in the leaderboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numScores" })
  numScores?: string;

  /**
   * The Leaderboard Entry resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "playerScore" })
  @Type(() => LeaderboardEntry)
  playerScore?: LeaderboardEntry;

  /**
   * The pagination token for the previous page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prevPageToken" })
  prevPageToken?: string;
}
