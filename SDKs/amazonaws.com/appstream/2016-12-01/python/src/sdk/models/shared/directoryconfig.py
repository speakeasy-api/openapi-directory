"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import certificatebasedauthproperties as shared_certificatebasedauthproperties
from ..shared import serviceaccountcredentials as shared_serviceaccountcredentials
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectoryConfig:
    r"""Describes the configuration information required to join fleets and image builders to Microsoft Active Directory domains."""
    
    directory_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DirectoryName') }})  
    certificate_based_auth_properties: Optional[shared_certificatebasedauthproperties.CertificateBasedAuthProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CertificateBasedAuthProperties'), 'exclude': lambda f: f is None }})  
    created_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    organizational_unit_distinguished_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrganizationalUnitDistinguishedNames'), 'exclude': lambda f: f is None }})  
    service_account_credentials: Optional[shared_serviceaccountcredentials.ServiceAccountCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceAccountCredentials'), 'exclude': lambda f: f is None }})  
    