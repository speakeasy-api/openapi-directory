// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAccessPolicyXAmzTargetEnum
type CreateAccessPolicyXAmzTargetEnum string

const (
	CreateAccessPolicyXAmzTargetEnumOpenSearchServerlessCreateAccessPolicy CreateAccessPolicyXAmzTargetEnum = "OpenSearchServerless.CreateAccessPolicy"
)

func (e CreateAccessPolicyXAmzTargetEnum) ToPointer() *CreateAccessPolicyXAmzTargetEnum {
	return &e
}

func (e *CreateAccessPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OpenSearchServerless.CreateAccessPolicy":
		*e = CreateAccessPolicyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccessPolicyXAmzTargetEnum: %v", v)
	}
}

type CreateAccessPolicyRequest struct {
	CreateAccessPolicyRequest shared.CreateAccessPolicyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                CreateAccessPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateAccessPolicyResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAccessPolicyResponse *shared.CreateAccessPolicyResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ValidationException
	ValidationException interface{}
}
