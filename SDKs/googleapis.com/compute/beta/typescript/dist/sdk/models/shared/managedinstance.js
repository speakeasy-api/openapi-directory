"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedInstance = exports.ManagedInstanceInstanceStatusEnum = exports.ManagedInstanceCurrentActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var managedinstanceallinstancesconfig_1 = require("./managedinstanceallinstancesconfig");
var managedinstanceinstancehealth_1 = require("./managedinstanceinstancehealth");
var managedinstancelastattempt_1 = require("./managedinstancelastattempt");
var managedinstanceversion_1 = require("./managedinstanceversion");
var preservedstate_1 = require("./preservedstate");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The managed instance group is recreating this instance. - DELETING The managed instance group is permanently deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. - RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. - VERIFYING The managed instance group has created the instance and it is in the process of being verified.
 */
var ManagedInstanceCurrentActionEnum;
(function (ManagedInstanceCurrentActionEnum) {
    ManagedInstanceCurrentActionEnum["Abandoning"] = "ABANDONING";
    ManagedInstanceCurrentActionEnum["Creating"] = "CREATING";
    ManagedInstanceCurrentActionEnum["CreatingWithoutRetries"] = "CREATING_WITHOUT_RETRIES";
    ManagedInstanceCurrentActionEnum["Deleting"] = "DELETING";
    ManagedInstanceCurrentActionEnum["None"] = "NONE";
    ManagedInstanceCurrentActionEnum["Recreating"] = "RECREATING";
    ManagedInstanceCurrentActionEnum["Refreshing"] = "REFRESHING";
    ManagedInstanceCurrentActionEnum["Restarting"] = "RESTARTING";
    ManagedInstanceCurrentActionEnum["Resuming"] = "RESUMING";
    ManagedInstanceCurrentActionEnum["Starting"] = "STARTING";
    ManagedInstanceCurrentActionEnum["Stopping"] = "STOPPING";
    ManagedInstanceCurrentActionEnum["Suspending"] = "SUSPENDING";
    ManagedInstanceCurrentActionEnum["Verifying"] = "VERIFYING";
})(ManagedInstanceCurrentActionEnum = exports.ManagedInstanceCurrentActionEnum || (exports.ManagedInstanceCurrentActionEnum = {}));
/**
 * [Output Only] The status of the instance. This field is empty when the instance does not exist.
 */
var ManagedInstanceInstanceStatusEnum;
(function (ManagedInstanceInstanceStatusEnum) {
    ManagedInstanceInstanceStatusEnum["Deprovisioning"] = "DEPROVISIONING";
    ManagedInstanceInstanceStatusEnum["Provisioning"] = "PROVISIONING";
    ManagedInstanceInstanceStatusEnum["Repairing"] = "REPAIRING";
    ManagedInstanceInstanceStatusEnum["Running"] = "RUNNING";
    ManagedInstanceInstanceStatusEnum["Staging"] = "STAGING";
    ManagedInstanceInstanceStatusEnum["Stopped"] = "STOPPED";
    ManagedInstanceInstanceStatusEnum["Stopping"] = "STOPPING";
    ManagedInstanceInstanceStatusEnum["Suspended"] = "SUSPENDED";
    ManagedInstanceInstanceStatusEnum["Suspending"] = "SUSPENDING";
    ManagedInstanceInstanceStatusEnum["Terminated"] = "TERMINATED";
})(ManagedInstanceInstanceStatusEnum = exports.ManagedInstanceInstanceStatusEnum || (exports.ManagedInstanceInstanceStatusEnum = {}));
/**
 * A Managed Instance resource.
 */
var ManagedInstance = /** @class */ (function (_super) {
    __extends(ManagedInstance, _super);
    function ManagedInstance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allInstancesConfig" }),
        (0, class_transformer_1.Type)(function () { return managedinstanceallinstancesconfig_1.ManagedInstanceAllInstancesConfig; }),
        __metadata("design:type", managedinstanceallinstancesconfig_1.ManagedInstanceAllInstancesConfig)
    ], ManagedInstance.prototype, "allInstancesConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentAction" }),
        __metadata("design:type", String)
    ], ManagedInstance.prototype, "currentAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ManagedInstance.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "instance" }),
        __metadata("design:type", String)
    ], ManagedInstance.prototype, "instance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: managedinstanceinstancehealth_1.ManagedInstanceInstanceHealth }),
        (0, class_transformer_1.Expose)({ name: "instanceHealth" }),
        (0, class_transformer_1.Type)(function () { return managedinstanceinstancehealth_1.ManagedInstanceInstanceHealth; }),
        __metadata("design:type", Array)
    ], ManagedInstance.prototype, "instanceHealth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "instanceStatus" }),
        __metadata("design:type", String)
    ], ManagedInstance.prototype, "instanceStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastAttempt" }),
        (0, class_transformer_1.Type)(function () { return managedinstancelastattempt_1.ManagedInstanceLastAttempt; }),
        __metadata("design:type", managedinstancelastattempt_1.ManagedInstanceLastAttempt)
    ], ManagedInstance.prototype, "lastAttempt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "preservedStateFromConfig" }),
        (0, class_transformer_1.Type)(function () { return preservedstate_1.PreservedState; }),
        __metadata("design:type", preservedstate_1.PreservedState)
    ], ManagedInstance.prototype, "preservedStateFromConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "preservedStateFromPolicy" }),
        (0, class_transformer_1.Type)(function () { return preservedstate_1.PreservedState; }),
        __metadata("design:type", preservedstate_1.PreservedState)
    ], ManagedInstance.prototype, "preservedStateFromPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        (0, class_transformer_1.Type)(function () { return managedinstanceversion_1.ManagedInstanceVersion; }),
        __metadata("design:type", managedinstanceversion_1.ManagedInstanceVersion)
    ], ManagedInstance.prototype, "version", void 0);
    return ManagedInstance;
}(utils_1.SpeakeasyBase));
exports.ManagedInstance = ManagedInstance;
