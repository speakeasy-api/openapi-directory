<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WorkerHealthReport - WorkerHealthReport contains information about the health of a worker. The VM should be identified by the labels attached to the WorkerMessage that this health ping belongs to.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WorkerHealthReport
{
    /**
     * Message describing any unusual health reports.
     * 
     * @var ?string $msg
     */
	#[\JMS\Serializer\Annotation\SerializedName('msg')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $msg = null;
    
    /**
     * The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker.
     * 
     * @var ?array<array<string, mixed>> $pods
     */
	#[\JMS\Serializer\Annotation\SerializedName('pods')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pods = null;
    
    /**
     * The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker.
     * 
     * @var ?string $reportInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportInterval')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportInterval = null;
    
    /**
     * Code to describe a specific reason, if known, that a VM has reported broken state.
     * 
     * @var ?string $vmBrokenCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmBrokenCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmBrokenCode = null;
    
    /**
     * Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work.
     * 
     * @var ?bool $vmIsBroken
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmIsBroken')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $vmIsBroken = null;
    
    /**
     * Whether the VM is currently healthy.
     * 
     * @var ?bool $vmIsHealthy
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmIsHealthy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $vmIsHealthy = null;
    
    /**
     * The time the VM was booted.
     * 
     * @var ?string $vmStartupTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmStartupTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmStartupTime = null;
    
	public function __construct()
	{
		$this->msg = null;
		$this->pods = null;
		$this->reportInterval = null;
		$this->vmBrokenCode = null;
		$this->vmIsBroken = null;
		$this->vmIsHealthy = null;
		$this->vmStartupTime = null;
	}
}
