/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EksContainerEnvironmentVariable } from "./ekscontainerenvironmentvariable";
import { EksContainerResourceRequirements } from "./ekscontainerresourcerequirements";
import { EksContainerSecurityContext } from "./ekscontainersecuritycontext";
import { EksContainerVolumeMount } from "./ekscontainervolumemount";
import { Expose, Type } from "class-transformer";

/**
 * EKS container properties are used in job definitions for Amazon EKS based job definitions to describe the properties for a container node in the pod that's launched as part of a job. This can't be specified for Amazon ECS based job definitions.
 */
export class EksContainer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "args" })
  args?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "command" })
  command?: string[];

  @SpeakeasyMetadata({ elemType: EksContainerEnvironmentVariable })
  @Expose({ name: "env" })
  @Type(() => EksContainerEnvironmentVariable)
  env?: EksContainerEnvironmentVariable[];

  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  image: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imagePullPolicy" })
  imagePullPolicy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resources" })
  @Type(() => EksContainerResourceRequirements)
  resources?: EksContainerResourceRequirements;

  @SpeakeasyMetadata()
  @Expose({ name: "securityContext" })
  @Type(() => EksContainerSecurityContext)
  securityContext?: EksContainerSecurityContext;

  @SpeakeasyMetadata({ elemType: EksContainerVolumeMount })
  @Expose({ name: "volumeMounts" })
  @Type(() => EksContainerVolumeMount)
  volumeMounts?: EksContainerVolumeMount[];
}
