// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type VisionProjectsLocationsFilesAsyncBatchAnnotateSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type VisionProjectsLocationsFilesAsyncBatchAnnotateSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type VisionProjectsLocationsFilesAsyncBatchAnnotateSecurity struct {
	Option1 *VisionProjectsLocationsFilesAsyncBatchAnnotateSecurityOption1 `security:"option"`
	Option2 *VisionProjectsLocationsFilesAsyncBatchAnnotateSecurityOption2 `security:"option"`
}

type VisionProjectsLocationsFilesAsyncBatchAnnotatePathParams struct {
	// Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
}

type VisionProjectsLocationsFilesAsyncBatchAnnotateQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type VisionProjectsLocationsFilesAsyncBatchAnnotateRequest struct {
	PathParams  VisionProjectsLocationsFilesAsyncBatchAnnotatePathParams
	QueryParams VisionProjectsLocationsFilesAsyncBatchAnnotateQueryParams
	Request     *shared.GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest `request:"mediaType=application/json"`
	Security    VisionProjectsLocationsFilesAsyncBatchAnnotateSecurity
}

type VisionProjectsLocationsFilesAsyncBatchAnnotateResponse struct {
	ContentType string
	// Successful response
	Operation   *shared.Operation
	StatusCode  int
	RawResponse *http.Response
}
