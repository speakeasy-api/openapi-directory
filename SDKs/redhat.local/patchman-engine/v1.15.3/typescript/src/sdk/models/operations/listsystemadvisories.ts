/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListSystemAdvisoriesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-rh-identity",
  })
  rhIdentity: string;
}

/**
 * Sort field
 */
export enum ListSystemAdvisoriesSortEnum {
  Id = "id",
  Name = "name",
  Type = "type",
  Synopsis = "synopsis",
  PublicDate = "public_date",
}

export class ListSystemAdvisoriesRequest extends SpeakeasyBase {
  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[advisory_type]",
  })
  filterAdvisoryType?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[description]",
  })
  filterDescription?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[id]",
  })
  filterId?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[public_date]",
  })
  filterPublicDate?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[severity]",
  })
  filterSeverity?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[synopsis]",
  })
  filterSynopsis?: string;

  /**
   * Inventory ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=inventory_id",
  })
  inventoryId: string;

  /**
   * Limit for paging, set -1 to return all
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Offset for paging
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Find matching text
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  /**
   * Sort field
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: ListSystemAdvisoriesSortEnum;
}

export class ListSystemAdvisoriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  controllersSystemAdvisoriesResponse?: shared.ControllersSystemAdvisoriesResponse;
}
