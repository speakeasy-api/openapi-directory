// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScanOptionsScanFrequencyEnum string

const (
	ScanOptionsScanFrequencyEnumOnce       ScanOptionsScanFrequencyEnum = "once"
	ScanOptionsScanFrequencyEnumHourly     ScanOptionsScanFrequencyEnum = "hourly"
	ScanOptionsScanFrequencyEnumDaily      ScanOptionsScanFrequencyEnum = "daily"
	ScanOptionsScanFrequencyEnumWeekly     ScanOptionsScanFrequencyEnum = "weekly"
	ScanOptionsScanFrequencyEnumMonthly    ScanOptionsScanFrequencyEnum = "monthly"
	ScanOptionsScanFrequencyEnumContinuous ScanOptionsScanFrequencyEnum = "continuous"
)

func (e *ScanOptionsScanFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "once":
		fallthrough
	case "hourly":
		fallthrough
	case "daily":
		fallthrough
	case "weekly":
		fallthrough
	case "monthly":
		fallthrough
	case "continuous":
		*e = ScanOptionsScanFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanOptionsScanFrequencyEnum: %s", s)
	}
}

type ScanOptions struct {
	Agent        *string `json:"agent,omitempty"`
	Excludes     *string `json:"excludes,omitempty"`
	MaxGroupSize *string `json:"max-group-size,omitempty"`
	MaxHostRate  *string `json:"max-host-rate,omitempty"`
	MaxSockets   *string `json:"max-sockets,omitempty"`
	Nameservers  *string `json:"nameservers,omitempty"`
	Passes       *string `json:"passes,omitempty"`
	// Optional probe list, otherwise all probes are used
	Probes          *string                       `json:"probes,omitempty"`
	Rate            *string                       `json:"rate,omitempty"`
	ScanDescription *string                       `json:"scan-description,omitempty"`
	ScanFrequency   *ScanOptionsScanFrequencyEnum `json:"scan-frequency,omitempty"`
	ScanGracePeriod *string                       `json:"scan-grace-period,omitempty"`
	ScanName        *string                       `json:"scan-name,omitempty"`
	ScanStart       *string                       `json:"scan-start,omitempty"`
	ScanTags        *string                       `json:"scan-tags,omitempty"`
	Screenshots     *string                       `json:"screenshots,omitempty"`
	Targets         string                        `json:"targets"`
	TCPPorts        *string                       `json:"tcp-ports,omitempty"`
}
