/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventFilter } from "./eventfilter";
import { Expose, Type } from "class-transformer";

/**
 * DisjunctiveMatchStatement that OR's all contained filters.
 */
export class DisjunctiveMatchStatement extends SpeakeasyBase {
  /**
   * Filters. There is a limit of 100 filters that can be set per disjunctive match statement.
   */
  @SpeakeasyMetadata({ elemType: EventFilter })
  @Expose({ name: "eventFilters" })
  @Type(() => EventFilter)
  eventFilters?: EventFilter[];
}
