/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class WebhooksListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class WebhooksListRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

/**
 * The status code return by the API. It can be 400 or 404 or 409 or 500.
 */
export enum WebhooksListDefaultApplicationJSONCodeEnum {
  FourHundred = "400",
  FourHundredAndFour = "404",
  FourHundredAndNine = "409",
  FiveHundred = "500",
}

/**
 * Generic result for any alerting API operation
 */
export class WebhooksListDefaultApplicationJSON extends SpeakeasyBase {
  /**
   * The status code return by the API. It can be 400 or 404 or 409 or 500.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: WebhooksListDefaultApplicationJSONCodeEnum;

  /**
   * The reason for the request failed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Unique request identifier for tracking
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;
}

/**
 * Alerting EventTypes enum
 */
export enum WebhooksList200ApplicationJSONValuesEventTypesEnum {
  NewCrashGroupCreated = "newCrashGroupCreated",
  NewAppReleased = "newAppReleased",
}

/**
 * Alerting webhook
 */
export class WebhooksList200ApplicationJSONValues extends SpeakeasyBase {
  /**
   * Allows eanble/disable webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Event types enabled for webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_types" })
  eventTypes: WebhooksList200ApplicationJSONValuesEventTypesEnum[];

  /**
   * The unique id (UUID) of the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * display name of the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * target url of the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

/**
 * List of alerting webhooks wrapped as operation result
 */
export class WebhooksList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: WebhooksList200ApplicationJSONValues })
  @Expose({ name: "values" })
  @Type(() => WebhooksList200ApplicationJSONValues)
  values: WebhooksList200ApplicationJSONValues[];
}

export class WebhooksListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  webhooksList200ApplicationJSONObject?: WebhooksList200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  webhooksListDefaultApplicationJSONObject?: WebhooksListDefaultApplicationJSON;
}
