"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeGroup = exports.NodeGroupStatusEnum = exports.NodeGroupMaintenancePolicyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var nodegroupautoscalingpolicy_1 = require("./nodegroupautoscalingpolicy");
var nodegroupmaintenancewindow_1 = require("./nodegroupmaintenancewindow");
var sharesettings_1 = require("./sharesettings");
var class_transformer_1 = require("class-transformer");
/**
 * Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies.
 */
var NodeGroupMaintenancePolicyEnum;
(function (NodeGroupMaintenancePolicyEnum) {
    NodeGroupMaintenancePolicyEnum["Default"] = "DEFAULT";
    NodeGroupMaintenancePolicyEnum["MaintenancePolicyUnspecified"] = "MAINTENANCE_POLICY_UNSPECIFIED";
    NodeGroupMaintenancePolicyEnum["MigrateWithinNodeGroup"] = "MIGRATE_WITHIN_NODE_GROUP";
    NodeGroupMaintenancePolicyEnum["RestartInPlace"] = "RESTART_IN_PLACE";
})(NodeGroupMaintenancePolicyEnum = exports.NodeGroupMaintenancePolicyEnum || (exports.NodeGroupMaintenancePolicyEnum = {}));
var NodeGroupStatusEnum;
(function (NodeGroupStatusEnum) {
    NodeGroupStatusEnum["Creating"] = "CREATING";
    NodeGroupStatusEnum["Deleting"] = "DELETING";
    NodeGroupStatusEnum["Invalid"] = "INVALID";
    NodeGroupStatusEnum["Ready"] = "READY";
})(NodeGroupStatusEnum = exports.NodeGroupStatusEnum || (exports.NodeGroupStatusEnum = {}));
/**
 * Represents a sole-tenant Node Group resource. A sole-tenant node is a physical server that is dedicated to hosting VM instances only for your specific project. Use sole-tenant nodes to keep your instances physically separated from instances in other projects, or to group your instances together on the same host hardware. For more information, read Sole-tenant nodes.
 */
var NodeGroup = /** @class */ (function (_super) {
    __extends(NodeGroup, _super);
    function NodeGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoscalingPolicy" }),
        (0, class_transformer_1.Type)(function () { return nodegroupautoscalingpolicy_1.NodeGroupAutoscalingPolicy; }),
        __metadata("design:type", nodegroupautoscalingpolicy_1.NodeGroupAutoscalingPolicy)
    ], NodeGroup.prototype, "autoscalingPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fingerprint" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "fingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locationHint" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "locationHint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenancePolicy" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "maintenancePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceWindow" }),
        (0, class_transformer_1.Type)(function () { return nodegroupmaintenancewindow_1.NodeGroupMaintenanceWindow; }),
        __metadata("design:type", nodegroupmaintenancewindow_1.NodeGroupMaintenanceWindow)
    ], NodeGroup.prototype, "maintenanceWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nodeTemplate" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "nodeTemplate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shareSettings" }),
        (0, class_transformer_1.Type)(function () { return sharesettings_1.ShareSettings; }),
        __metadata("design:type", sharesettings_1.ShareSettings)
    ], NodeGroup.prototype, "shareSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", Number)
    ], NodeGroup.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zone" }),
        __metadata("design:type", String)
    ], NodeGroup.prototype, "zone", void 0);
    return NodeGroup;
}(utils_1.SpeakeasyBase));
exports.NodeGroup = NodeGroup;
