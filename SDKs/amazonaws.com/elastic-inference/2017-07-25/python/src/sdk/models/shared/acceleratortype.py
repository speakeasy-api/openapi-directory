"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import keyvaluepair as shared_keyvaluepair
from ..shared import memoryinfo as shared_memoryinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AcceleratorType:
    r"""The details of an Elastic Inference Accelerator type."""
    
    accelerator_type_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceleratorTypeName'), 'exclude': lambda f: f is None }})  
    memory_info: Optional[shared_memoryinfo.MemoryInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memoryInfo'), 'exclude': lambda f: f is None }})  
    throughput_info: Optional[list[shared_keyvaluepair.KeyValuePair]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('throughputInfo'), 'exclude': lambda f: f is None }})  
    