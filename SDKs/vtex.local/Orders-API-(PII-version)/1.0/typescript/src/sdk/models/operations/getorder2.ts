/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetOrder2Request extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * ID of the order.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=orderId",
  })
  orderId: string;

  /**
   * Reason for requesting unmasked data.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=reason",
  })
  reason?: string;
}

/**
 * Additional information.
 */
export class GetOrder2200ApplicationJSONItemsAdditionalInfo extends SpeakeasyBase {
  /**
   * Brand ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandId" })
  brandId?: string;

  /**
   * Brand name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandName" })
  brandName?: string;

  /**
   * Dimension.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  dimension?: string;

  /**
   * Offering information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offeringInfo" })
  offeringInfo?: string;

  /**
   * Offering type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offeringType" })
  offeringType?: string;

  /**
   * Offering type ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offeringTypeId" })
  offeringTypeId?: string;
}

export class GetOrder2200ApplicationJSONItemsBundleItems extends SpeakeasyBase {
  /**
   * Service identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class GetOrder2200ApplicationJSONItemsPriceDefinitionSellingPrices extends SpeakeasyBase {
  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * Price information.
 */
export class GetOrder2200ApplicationJSONItemsPriceDefinition extends SpeakeasyBase {
  /**
   * Calculated selling price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calculatedSellingPrice" })
  calculatedSellingPrice?: number;

  /**
   * Selling prices.
   */
  @SpeakeasyMetadata({
    elemType: GetOrder2200ApplicationJSONItemsPriceDefinitionSellingPrices,
  })
  @Expose({ name: "sellingPrices" })
  @Type(() => GetOrder2200ApplicationJSONItemsPriceDefinitionSellingPrices)
  sellingPrices?: GetOrder2200ApplicationJSONItemsPriceDefinitionSellingPrices[];

  /**
   * Total in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetOrder2200ApplicationJSONItemsPriceTags extends SpeakeasyBase {
  /**
   * Price tag identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * Indicates whether price tag value is applied through a percentage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPercentual" })
  isPercentual?: boolean;

  /**
   * Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Raw value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawValue" })
  rawValue?: number;

  /**
   * Value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * Object, where each field is an ID from `productCategoryIds.
 */
export class GetOrder2200ApplicationJSONItemsProductCategories extends SpeakeasyBase {
  /**
   * Product category corresponding to the ID in the field key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "{ID}" })
  id?: string;
}

export class GetOrder2200ApplicationJSONItems extends SpeakeasyBase {
  /**
   * Additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfo" })
  @Type(() => GetOrder2200ApplicationJSONItemsAdditionalInfo)
  additionalInfo?: GetOrder2200ApplicationJSONItemsAdditionalInfo;

  /**
   * Array containing information on attachments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachments" })
  attachments?: string[];

  /**
   * Availability
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availability" })
  availability?: string;

  /**
   * Information on services sold along with the SKU. Example: a gift package.
   */
  @SpeakeasyMetadata({ elemType: GetOrder2200ApplicationJSONItemsBundleItems })
  @Expose({ name: "bundleItems" })
  @Type(() => GetOrder2200ApplicationJSONItemsBundleItems)
  bundleItems?: GetOrder2200ApplicationJSONItemsBundleItems[];

  /**
   * Detail URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detailUrl" })
  detailUrl?: string;

  /**
   * European Article Number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ean" })
  ean?: string;

  /**
   * ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Image URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl?: string;

  /**
   * Indicates whether item is a gift.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isGift" })
  isGift?: boolean;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Manual price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manualPrice" })
  manualPrice?: number;

  /**
   * User that applied the manual price, if that is the case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manualPriceAppliedBy" })
  manualPriceAppliedBy?: string;

  /**
   * Manufacturer code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturerCode" })
  manufacturerCode?: string;

  /**
   * Measurement unit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measurementUnit" })
  measurementUnit?: string;

  /**
   * Modal type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modalType" })
  modalType?: string;

  /**
   * Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent assembly binding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentAssemblyBinding" })
  parentAssemblyBinding?: string;

  /**
   * Parent item index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentItemIndex" })
  parentItemIndex?: number;

  /**
   * Presale date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preSaleDate" })
  preSaleDate?: string;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Price information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceDefinition" })
  @Type(() => GetOrder2200ApplicationJSONItemsPriceDefinition)
  priceDefinition?: GetOrder2200ApplicationJSONItemsPriceDefinition;

  /**
   * Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
   */
  @SpeakeasyMetadata({ elemType: GetOrder2200ApplicationJSONItemsPriceTags })
  @Expose({ name: "priceTags" })
  @Type(() => GetOrder2200ApplicationJSONItemsPriceTags)
  priceTags?: GetOrder2200ApplicationJSONItemsPriceTags[];

  /**
   * Price expiration date and time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceValidUntil" })
  priceValidUntil?: string;

  /**
   * Object, where each field is an ID from `productCategoryIds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCategories" })
  @Type(() => GetOrder2200ApplicationJSONItemsProductCategories)
  productCategories?: GetOrder2200ApplicationJSONItemsProductCategories;

  /**
   * Product category IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCategoryIds" })
  productCategoryIds?: string;

  /**
   * Product ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * Product Ref ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productRefId" })
  productRefId?: string;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Ref ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refId" })
  refId?: string;

  /**
   * Reward value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rewardValue" })
  rewardValue?: number;

  /**
   * Seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;

  /**
   * Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/pt/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerChain" })
  sellerChain?: string[];

  /**
   * Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellingPrice" })
  sellingPrice?: number;

  /**
   * SKU name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skuName" })
  skuName?: string;

  /**
   * Tax value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  /**
   * Order's item unique ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uniqueId" })
  uniqueId?: string;

  /**
   * Unit multiplier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitMultiplier" })
  unitMultiplier?: number;
}

export class GetOrder2200ApplicationJSONPackageAttachmentPackagesItems extends SpeakeasyBase {
  /**
   * Item description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Item index in reference to the position of the item in the `items` array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemIndex" })
  itemIndex?: number;

  /**
   * Item price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Item quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Item unit multiplier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitMultiplier" })
  unitMultiplier?: number;
}

export class GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefundItems extends SpeakeasyBase {
  /**
   * Item index corresponding to the position of the item in the main `items` array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemIndex" })
  itemIndex?: string;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;
}

/**
 * Information on refunds.
 */
export class GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefund extends SpeakeasyBase {
  /**
   * Information on items.
   */
  @SpeakeasyMetadata({
    elemType:
      GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefundItems,
  })
  @Expose({ name: "items" })
  @Type(
    () =>
      GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefundItems
  )
  items?: GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefundItems[];
}

/**
 * Information on how restitutions are to be made to the customer, in case of a return (invoice `type` is `input`).
 */
export class GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutions extends SpeakeasyBase {
  /**
   * Information on refunds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refund" })
  @Type(
    () => GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefund
  )
  refund?: GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutionsRefund;
}

export class GetOrder2200ApplicationJSONPackageAttachmentPackages extends SpeakeasyBase {
  /**
   * Fiscal operation code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cfop" })
  cfop?: string;

  /**
   * Courier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courier" })
  courier?: string;

  /**
   * Courier status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierStatus" })
  courierStatus?: string;

  /**
   * Embedded voice in XML.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embeddedInvoice" })
  embeddedInvoice?: string;

  /**
   * Invoice key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceKey" })
  invoiceKey?: string;

  /**
   * Invoice number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceNumber" })
  invoiceNumber?: string;

  /**
   * Invoice URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceUrl" })
  invoiceUrl?: string;

  /**
   * Invoice value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceValue" })
  invoiceValue?: number;

  /**
   * Issuance date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuanceDate" })
  issuanceDate?: string;

  /**
   * Information on each item in the package.
   */
  @SpeakeasyMetadata({
    elemType: GetOrder2200ApplicationJSONPackageAttachmentPackagesItems,
  })
  @Expose({ name: "items" })
  @Type(() => GetOrder2200ApplicationJSONPackageAttachmentPackagesItems)
  items?: GetOrder2200ApplicationJSONPackageAttachmentPackagesItems[];

  /**
   * Information on how restitutions are to be made to the customer, in case of a return (invoice `type` is `input`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restitutions" })
  @Type(() => GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutions)
  restitutions?: GetOrder2200ApplicationJSONPackageAttachmentPackagesRestitutions;

  /**
   * Tracking number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingNumber" })
  trackingNumber?: string;

  /**
   * Tracking URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingUrl" })
  trackingUrl?: string;

  /**
   * Invoice type `Output` for sales and `Input` for returns.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Quantity of packages involved in the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volumes" })
  volumes?: number;
}

/**
 * Package attachment.
 */
export class GetOrder2200ApplicationJSONPackageAttachment extends SpeakeasyBase {
  /**
   * Information on each package.
   */
  @SpeakeasyMetadata({
    elemType: GetOrder2200ApplicationJSONPackageAttachmentPackages,
  })
  @Expose({ name: "packages" })
  @Type(() => GetOrder2200ApplicationJSONPackageAttachmentPackages)
  packages?: GetOrder2200ApplicationJSONPackageAttachmentPackages[];
}

export class GetOrder2200ApplicationJSONTotals extends SpeakeasyBase {
  /**
   * Order's total ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Order's total name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Order's total value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * OK
 */
export class GetOrder2200ApplicationJSON extends SpeakeasyBase {
  /**
   * Three letter code identifying the marketplace where the order was placed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affiliateId" })
  affiliateId?: string;

  /**
   * Indicates whether cancelation is allowed for the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowCancellation" })
  allowCancellation?: boolean;

  /**
   * Indicates whether edition is allowed for the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowEdition" })
  allowEdition?: boolean;

  /**
   * User that approved the order, in case of manual approval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approvedBy" })
  approvedBy?: string;

  /**
   * Date in which the order was authorized in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorizedDate" })
  authorizedDate?: string;

  /**
   * Call center operator data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callCenterOperatorData" })
  callCenterOperatorData?: string;

  /**
   * Reason for cancelation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelReason" })
  cancelReason?: string;

  /**
   * User that canceled the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelledBy" })
  cancelledBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "changesAttachment" })
  @Type(() => shared.ChangesAttachment)
  changesAttachment?: shared.ChangesAttachment;

  @SpeakeasyMetadata()
  @Expose({ name: "clientProfileData" })
  @Type(() => shared.ClientProfileData)
  clientProfileData?: shared.ClientProfileData;

  /**
   * Commercial condition data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commercialConditionData" })
  commercialConditionData?: string;

  /**
   * Creation date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  creationDate?: string;

  /**
   * Custom data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customData" })
  customData?: string;

  /**
   * Email tracked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailTracked" })
  emailTracked?: string;

  /**
   * Follow up email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followUpEmail" })
  followUpEmail?: string;

  /**
   * Gift registry data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftRegistryData" })
  giftRegistryData?: string;

  /**
   * Host name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostname" })
  hostname?: string;

  /**
   * Information pertinent to the order's invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceData" })
  invoiceData?: Record<string, any>;

  /**
   * Date in which the order was invoiced in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoicedDate" })
  invoicedDate?: string;

  /**
   * Indicates whether client is checked in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCheckedIn" })
  isCheckedIn?: boolean;

  /**
   * Indicates whether order is completed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCompleted" })
  isCompleted?: boolean;

  /**
   * Information on each item in the order.
   */
  @SpeakeasyMetadata({ elemType: GetOrder2200ApplicationJSONItems })
  @Expose({ name: "items" })
  @Type(() => GetOrder2200ApplicationJSONItems)
  items?: GetOrder2200ApplicationJSONItems[];

  /**
   * Date of last change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastChange" })
  lastChange?: string;

  /**
   * Last message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastMessage" })
  lastMessage?: string;

  /**
   * Marketing data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingData" })
  marketingData?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "marketplace" })
  @Type(() => shared.Marketplace)
  marketplace?: shared.Marketplace;

  /**
   * Marketplace items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketplaceItems" })
  marketplaceItems?: string[];

  /**
   * ID of the order in the marketplace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketplaceOrderId" })
  marketplaceOrderId?: string;

  /**
   * Marketplace endpoint for post purchase communication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketplaceServicesEndpoint" })
  marketplaceServicesEndpoint?: string;

  /**
   * Merchant name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantName" })
  merchantName?: string;

  /**
   * Open text field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "openTextField" })
  openTextField?: string;

  /**
   * ID of the shopping cart from which the order was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderFormId" })
  orderFormId?: string;

  /**
   * Order group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderGroup" })
  orderGroup?: string;

  /**
   * Order ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderId" })
  orderId?: string;

  /**
   * Origin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: string;

  /**
   * Package attachment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "packageAttachment" })
  @Type(() => GetOrder2200ApplicationJSONPackageAttachment)
  packageAttachment?: GetOrder2200ApplicationJSONPackageAttachment;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentData" })
  @Type(() => shared.PaymentData)
  paymentData?: shared.PaymentData;

  @SpeakeasyMetadata()
  @Expose({ name: "ratesAndBenefitsData" })
  @Type(() => shared.RatesAndBenefitsData)
  ratesAndBenefitsData?: shared.RatesAndBenefitsData;

  /**
   * Rounding error in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roundingError" })
  roundingError?: number;

  /**
   * Sales channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "salesChannel" })
  salesChannel?: string;

  /**
   * Seller order ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerOrderId" })
  sellerOrderId?: string;

  /**
   * Array with sellers information.
   */
  @SpeakeasyMetadata({ elemType: shared.Seller })
  @Expose({ name: "sellers" })
  @Type(() => shared.Seller)
  sellers?: shared.Seller[];

  /**
   * Sequence number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sequence" })
  sequence?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shippingData" })
  @Type(() => shared.ShippingData)
  shippingData?: shared.ShippingData;

  /**
   * Status in the order workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Status description which is displayed on the Admin panel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusDescription" })
  statusDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "storePreferencesData" })
  @Type(() => shared.StorePreferencesData)
  storePreferencesData?: shared.StorePreferencesData;

  /**
   * Information on each of the order's totals.
   */
  @SpeakeasyMetadata({ elemType: GetOrder2200ApplicationJSONTotals })
  @Expose({ name: "totals" })
  @Type(() => GetOrder2200ApplicationJSONTotals)
  totals?: GetOrder2200ApplicationJSONTotals[];

  /**
   * Value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class GetOrder2Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getOrder2200ApplicationJSONObject?: GetOrder2200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
