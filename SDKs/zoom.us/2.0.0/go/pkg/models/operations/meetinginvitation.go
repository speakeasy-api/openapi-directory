// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type MeetingInvitationSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type MeetingInvitationPathParams struct {
	// The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
	//
	// While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
	MeetingID int64 `pathParam:"style=simple,explode=false,name=meetingId"`
}

type MeetingInvitationRequest struct {
	PathParams MeetingInvitationPathParams
	Security   MeetingInvitationSecurity
}

// MeetingInvitationMeetingInvitation - Meeting invitation details.
type MeetingInvitationMeetingInvitation struct {
	// Meeting invitation.
	Invitation *string `json:"invitation,omitempty"`
}

type MeetingInvitationResponse struct {
	Body        []byte
	ContentType string
	// **HTTP Status Code:** `200`<br>
	// Meeting invitation returned.
	MeetingInvitation *MeetingInvitationMeetingInvitation
	StatusCode        int
	RawResponse       *http.Response
}
