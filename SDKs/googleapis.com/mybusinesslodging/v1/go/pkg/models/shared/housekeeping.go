// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HousekeepingDailyHousekeepingExceptionEnum - Daily housekeeping exception.
type HousekeepingDailyHousekeepingExceptionEnum string

const (
	HousekeepingDailyHousekeepingExceptionEnumExceptionUnspecified HousekeepingDailyHousekeepingExceptionEnum = "EXCEPTION_UNSPECIFIED"
	HousekeepingDailyHousekeepingExceptionEnumUnderConstruction    HousekeepingDailyHousekeepingExceptionEnum = "UNDER_CONSTRUCTION"
	HousekeepingDailyHousekeepingExceptionEnumDependentOnSeason    HousekeepingDailyHousekeepingExceptionEnum = "DEPENDENT_ON_SEASON"
	HousekeepingDailyHousekeepingExceptionEnumDependentOnDayOfWeek HousekeepingDailyHousekeepingExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e HousekeepingDailyHousekeepingExceptionEnum) ToPointer() *HousekeepingDailyHousekeepingExceptionEnum {
	return &e
}

func (e *HousekeepingDailyHousekeepingExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = HousekeepingDailyHousekeepingExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HousekeepingDailyHousekeepingExceptionEnum: %v", v)
	}
}

// HousekeepingHousekeepingAvailableExceptionEnum - Housekeeping available exception.
type HousekeepingHousekeepingAvailableExceptionEnum string

const (
	HousekeepingHousekeepingAvailableExceptionEnumExceptionUnspecified HousekeepingHousekeepingAvailableExceptionEnum = "EXCEPTION_UNSPECIFIED"
	HousekeepingHousekeepingAvailableExceptionEnumUnderConstruction    HousekeepingHousekeepingAvailableExceptionEnum = "UNDER_CONSTRUCTION"
	HousekeepingHousekeepingAvailableExceptionEnumDependentOnSeason    HousekeepingHousekeepingAvailableExceptionEnum = "DEPENDENT_ON_SEASON"
	HousekeepingHousekeepingAvailableExceptionEnumDependentOnDayOfWeek HousekeepingHousekeepingAvailableExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e HousekeepingHousekeepingAvailableExceptionEnum) ToPointer() *HousekeepingHousekeepingAvailableExceptionEnum {
	return &e
}

func (e *HousekeepingHousekeepingAvailableExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = HousekeepingHousekeepingAvailableExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HousekeepingHousekeepingAvailableExceptionEnum: %v", v)
	}
}

// HousekeepingTurndownServiceExceptionEnum - Turndown service exception.
type HousekeepingTurndownServiceExceptionEnum string

const (
	HousekeepingTurndownServiceExceptionEnumExceptionUnspecified HousekeepingTurndownServiceExceptionEnum = "EXCEPTION_UNSPECIFIED"
	HousekeepingTurndownServiceExceptionEnumUnderConstruction    HousekeepingTurndownServiceExceptionEnum = "UNDER_CONSTRUCTION"
	HousekeepingTurndownServiceExceptionEnumDependentOnSeason    HousekeepingTurndownServiceExceptionEnum = "DEPENDENT_ON_SEASON"
	HousekeepingTurndownServiceExceptionEnumDependentOnDayOfWeek HousekeepingTurndownServiceExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e HousekeepingTurndownServiceExceptionEnum) ToPointer() *HousekeepingTurndownServiceExceptionEnum {
	return &e
}

func (e *HousekeepingTurndownServiceExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = HousekeepingTurndownServiceExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HousekeepingTurndownServiceExceptionEnum: %v", v)
	}
}

// Housekeeping - Conveniences provided in guest units to facilitate an easier, more comfortable stay.
type Housekeeping struct {
	// Daily housekeeping. Guest units are cleaned by hotel staff daily during guest's stay.
	DailyHousekeeping *bool `json:"dailyHousekeeping,omitempty"`
	// Daily housekeeping exception.
	DailyHousekeepingException *HousekeepingDailyHousekeepingExceptionEnum `json:"dailyHousekeepingException,omitempty"`
	// Housekeeping available. Guest units are cleaned by hotel staff during guest's stay. Schedule may vary from daily, weekly, or specific days of the week.
	HousekeepingAvailable *bool `json:"housekeepingAvailable,omitempty"`
	// Housekeeping available exception.
	HousekeepingAvailableException *HousekeepingHousekeepingAvailableExceptionEnum `json:"housekeepingAvailableException,omitempty"`
	// Turndown service. Hotel staff enters guest units to prepare the bed for sleep use. May or may not include some light housekeeping. May or may not include an evening snack or candy. Also known as evening service.
	TurndownService *bool `json:"turndownService,omitempty"`
	// Turndown service exception.
	TurndownServiceException *HousekeepingTurndownServiceExceptionEnum `json:"turndownServiceException,omitempty"`
}
