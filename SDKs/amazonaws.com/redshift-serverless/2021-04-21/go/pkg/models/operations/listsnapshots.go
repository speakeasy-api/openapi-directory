// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListSnapshotsXAmzTargetEnum
type ListSnapshotsXAmzTargetEnum string

const (
	ListSnapshotsXAmzTargetEnumRedshiftServerlessListSnapshots ListSnapshotsXAmzTargetEnum = "RedshiftServerless.ListSnapshots"
)

func (e ListSnapshotsXAmzTargetEnum) ToPointer() *ListSnapshotsXAmzTargetEnum {
	return &e
}

func (e *ListSnapshotsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RedshiftServerless.ListSnapshots":
		*e = ListSnapshotsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSnapshotsXAmzTargetEnum: %v", v)
	}
}

type ListSnapshotsRequest struct {
	ListSnapshotsRequest shared.ListSnapshotsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           ListSnapshotsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListSnapshotsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSnapshotsResponse *shared.ListSnapshotsResponse
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
