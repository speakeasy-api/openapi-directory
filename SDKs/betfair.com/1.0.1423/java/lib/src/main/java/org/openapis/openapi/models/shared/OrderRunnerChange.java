/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderRunnerChange {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullImage")
    public Boolean fullImage;
    public OrderRunnerChange withFullImage(Boolean fullImage) {
        this.fullImage = fullImage;
        return this;
    }
    
    /**
     * Handicap - the handicap of the runner (selection) (null if not applicable)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hc")
    public Double hc;
    public OrderRunnerChange withHc(Double hc) {
        this.hc = hc;
        return this;
    }
    
    /**
     * Selection Id - the id of the runner (selection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public OrderRunnerChange withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Matched Backs - matched amounts by distinct matched price on the Back side for this runner (selection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mb")
    public Double[][] mb;
    public OrderRunnerChange withMb(Double[][] mb) {
        this.mb = mb;
        return this;
    }
    
    /**
     * Matched Lays - matched amounts by distinct matched price on the Lay side for this runner (selection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ml")
    public Double[][] ml;
    public OrderRunnerChange withMl(Double[][] ml) {
        this.ml = ml;
        return this;
    }
    
    /**
     * Strategy Matches - Matched Backs and Matched Lays grouped by strategy reference
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smc")
    public java.util.Map<String, StrategyMatchChange> smc;
    public OrderRunnerChange withSmc(java.util.Map<String, StrategyMatchChange> smc) {
        this.smc = smc;
        return this;
    }
    
    /**
     * Unmatched Orders - orders on this runner (selection) that are not fully matched
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uo")
    public Order[] uo;
    public OrderRunnerChange withUo(Order[] uo) {
        this.uo = uo;
        return this;
    }
    
}
