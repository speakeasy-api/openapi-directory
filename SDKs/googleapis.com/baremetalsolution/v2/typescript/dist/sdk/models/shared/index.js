"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./allowedclient"), exports);
__exportStar(require("./altenum"), exports);
__exportStar(require("./detachlunrequest"), exports);
__exportStar(require("./fetchinstanceprovisioningsettingsresponse"), exports);
__exportStar(require("./googlecloudbaremetalsolutionv2logicalinterface"), exports);
__exportStar(require("./googlecloudbaremetalsolutionv2servernetworktemplatelogicalinterface"), exports);
__exportStar(require("./instance"), exports);
__exportStar(require("./instanceconfig"), exports);
__exportStar(require("./instancequota"), exports);
__exportStar(require("./intakevlanattachment"), exports);
__exportStar(require("./listinstancesresponse"), exports);
__exportStar(require("./listlocationsresponse"), exports);
__exportStar(require("./listlunsresponse"), exports);
__exportStar(require("./listnetworksresponse"), exports);
__exportStar(require("./listnetworkusageresponse"), exports);
__exportStar(require("./listnfssharesresponse"), exports);
__exportStar(require("./listprovisioningquotasresponse"), exports);
__exportStar(require("./listsshkeysresponse"), exports);
__exportStar(require("./listvolumesnapshotsresponse"), exports);
__exportStar(require("./listvolumesresponse"), exports);
__exportStar(require("./location"), exports);
__exportStar(require("./logicalnetworkinterface"), exports);
__exportStar(require("./lun"), exports);
__exportStar(require("./lunrange"), exports);
__exportStar(require("./network"), exports);
__exportStar(require("./networkaddress"), exports);
__exportStar(require("./networkaddressreservation"), exports);
__exportStar(require("./networkconfig"), exports);
__exportStar(require("./networkmountpoint"), exports);
__exportStar(require("./networkusage"), exports);
__exportStar(require("./nfsexport"), exports);
__exportStar(require("./nfsshare"), exports);
__exportStar(require("./operation"), exports);
__exportStar(require("./osimage"), exports);
__exportStar(require("./provisioningconfig"), exports);
__exportStar(require("./provisioningquota"), exports);
__exportStar(require("./qospolicy"), exports);
__exportStar(require("./renamevolumerequest"), exports);
__exportStar(require("./resizevolumerequest"), exports);
__exportStar(require("./servernetworktemplate"), exports);
__exportStar(require("./snapshotreservationdetail"), exports);
__exportStar(require("./sshkey"), exports);
__exportStar(require("./status"), exports);
__exportStar(require("./submitprovisioningconfigrequest"), exports);
__exportStar(require("./submitprovisioningconfigresponse"), exports);
__exportStar(require("./vlanattachment"), exports);
__exportStar(require("./volume"), exports);
__exportStar(require("./volumeconfig"), exports);
__exportStar(require("./volumesnapshot"), exports);
__exportStar(require("./vrf"), exports);
__exportStar(require("./xgafvenum"), exports);
