<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UsageOveragePricingOverride - Pricing information about a usage charge that uses the "overage" charge model. In this charge model, the charge has an allowance of free units and a fixed price per additional unit consumed.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UsageOveragePricingOverride
{
    /**
     * Number of free units that may be consumed.
     * 
     * 
     * 
     * @var ?float $includedUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('includedUnits')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $includedUnits = null;
    
    /**
     * Number of periods that Zuora considers when calculating overage charges with overage smoothing.
     * 
     * 
     * 
     * @var ?int $numberOfPeriods
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfPeriods')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfPeriods = null;
    
    /**
     * Price per overage unit consumed.
     * 
     * 
     * 
     * @var ?float $overagePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('overagePrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $overagePrice = null;
    
    /**
     * Specifies whether to credit the customer for unused units.
     * 
     * 
     * If the value of this field is `CreditBySpecificRate`, use the `unusedUnitsCreditRates` field to specify the rate at which to credit the customer for unused units.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum $overageUnusedUnitsCreditOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('overageUnusedUnitsCreditOption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum $overageUnusedUnitsCreditOption = null;
    
    /**
     * Specifies how Zuora changes the price of the charge each time the subscription renews.
     * 
     * 
     * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingOverridePriceChangeOptionEnum $priceChangeOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceChangeOption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingOverridePriceChangeOptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageOveragePricingOverridePriceChangeOptionEnum $priceChangeOption = null;
    
    /**
     * Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`.
     * 
     * 
     * 
     * @var ?float $priceIncreasePercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceIncreasePercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $priceIncreasePercentage = null;
    
    /**
     * Per-unit rate at which to credit the customer for unused units. Only applicable if the value of the `overageUnusedUnitsCreditOption` field is `CreditBySpecificRate`.
     * 
     * 
     * 
     * @var ?float $unusedUnitsCreditRates
     */
	#[\JMS\Serializer\Annotation\SerializedName('unusedUnitsCreditRates')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $unusedUnitsCreditRates = null;
    
	public function __construct()
	{
		$this->includedUnits = null;
		$this->numberOfPeriods = null;
		$this->overagePrice = null;
		$this->overageUnusedUnitsCreditOption = null;
		$this->priceChangeOption = null;
		$this->priceIncreasePercentage = null;
		$this->unusedUnitsCreditRates = null;
	}
}
