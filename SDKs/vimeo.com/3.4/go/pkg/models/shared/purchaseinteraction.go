// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PurchaseInteractionBuy - Information on purchasing this video.
type PurchaseInteractionBuy struct {
	// Whether the On Demand video for purchase has DRM.
	Drm *bool `json:"drm,omitempty"`
}

// PurchaseInteractionSubscribeStreamEnum - The user's streaming access to this On Demand subscription:
//
// Option descriptions:
//   - `available` - The On Demand subscription is available for streaming.
//   - `purchased` - The On Demand subscription has been purchased.
//   - `restricted` - Streaming for the On Demand subscription is restricted.
//   - `unavailable` - The On Demand subscription is unavailable.
type PurchaseInteractionSubscribeStreamEnum string

const (
	PurchaseInteractionSubscribeStreamEnumAvailable   PurchaseInteractionSubscribeStreamEnum = "available"
	PurchaseInteractionSubscribeStreamEnumPurchased   PurchaseInteractionSubscribeStreamEnum = "purchased"
	PurchaseInteractionSubscribeStreamEnumRestricted  PurchaseInteractionSubscribeStreamEnum = "restricted"
	PurchaseInteractionSubscribeStreamEnumUnavailable PurchaseInteractionSubscribeStreamEnum = "unavailable"
)

func (e *PurchaseInteractionSubscribeStreamEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "available":
		fallthrough
	case "purchased":
		fallthrough
	case "restricted":
		fallthrough
	case "unavailable":
		*e = PurchaseInteractionSubscribeStreamEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PurchaseInteractionSubscribeStreamEnum: %s", s)
	}
}

// PurchaseInteractionSubscribe - Information on subscribing to this video.
type PurchaseInteractionSubscribe struct {
	// Whether the On Demand subscription has DRM.
	Drm *bool `json:"drm,omitempty"`
	// The time in ISO 8601 format when the On Demand video will expire.
	ExpiresTime *string `json:"expires_time,omitempty"`
	// The URL to purchase this On Demand subscription on Vimeo.
	Link *string `json:"link,omitempty"`
	// The time in ISO 8601 format when the On Demand was purchased.
	PurchaseTime *string `json:"purchase_time,omitempty"`
	// The user's streaming access to this On Demand subscription:
	//
	// Option descriptions:
	//  * `available` - The On Demand subscription is available for streaming.
	//  * `purchased` - The On Demand subscription has been purchased.
	//  * `restricted` - Streaming for the On Demand subscription is restricted.
	//  * `unavailable` - The On Demand subscription is unavailable.
	//
	Stream *PurchaseInteractionSubscribeStreamEnum `json:"stream,omitempty"`
	// The On Demand subscription's product URI.
	URI *string `json:"uri,omitempty"`
}

type PurchaseInteraction struct {
	// Information on purchasing this video.
	Buy *PurchaseInteractionBuy `json:"buy,omitempty"`
	// Information on renting this video.
	Rent map[string]interface{} `json:"rent,omitempty"`
	// Information on subscribing to this video.
	Subscribe *PurchaseInteractionSubscribe `json:"subscribe,omitempty"`
}
