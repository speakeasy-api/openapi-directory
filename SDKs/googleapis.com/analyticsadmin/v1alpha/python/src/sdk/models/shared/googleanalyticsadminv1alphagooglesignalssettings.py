"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum(str, Enum):
    r"""Output only. Terms of Service acceptance."""
    GOOGLE_SIGNALS_CONSENT_UNSPECIFIED = 'GOOGLE_SIGNALS_CONSENT_UNSPECIFIED'
    GOOGLE_SIGNALS_CONSENT_CONSENTED = 'GOOGLE_SIGNALS_CONSENT_CONSENTED'
    GOOGLE_SIGNALS_CONSENT_NOT_CONSENTED = 'GOOGLE_SIGNALS_CONSENT_NOT_CONSENTED'

class GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum(str, Enum):
    r"""Status of this setting."""
    GOOGLE_SIGNALS_STATE_UNSPECIFIED = 'GOOGLE_SIGNALS_STATE_UNSPECIFIED'
    GOOGLE_SIGNALS_ENABLED = 'GOOGLE_SIGNALS_ENABLED'
    GOOGLE_SIGNALS_DISABLED = 'GOOGLE_SIGNALS_DISABLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaGoogleSignalsSettings:
    r"""Settings values for Google Signals. This is a singleton resource."""
    
    consent: Optional[GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consent'), 'exclude': lambda f: f is None }})
    r"""Output only. Terms of Service acceptance."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Resource name of this setting. Format: properties/{property_id}/googleSignalsSettings Example: \\"properties/1000/googleSignalsSettings\\" """  
    state: Optional[GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Status of this setting."""  
    