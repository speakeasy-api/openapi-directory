"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import searchresultofgroupmember as shared_searchresultofgroupmember
from typing import Optional


@dataclasses.dataclass
class GroupV2GetAdminsAndFounderOfGroupRequest:
    
    currentpage: int = dataclasses.field(metadata={'query_param': { 'field_name': 'currentpage', 'style': 'form', 'explode': True }})
    r"""Page number (starting with 1). Each page has a fixed size of 50 items per page."""  
    group_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'groupId', 'style': 'simple', 'explode': False }})
    r"""The ID of the group."""  
    

@dataclasses.dataclass
class GroupV2GetAdminsAndFounderOfGroup200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[shared_searchresultofgroupmember.SearchResultOfGroupMember] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GroupV2GetAdminsAndFounderOfGroupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    