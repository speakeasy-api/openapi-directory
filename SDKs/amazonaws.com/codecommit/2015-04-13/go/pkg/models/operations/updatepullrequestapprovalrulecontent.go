// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdatePullRequestApprovalRuleContentXAmzTargetEnum
type UpdatePullRequestApprovalRuleContentXAmzTargetEnum string

const (
	UpdatePullRequestApprovalRuleContentXAmzTargetEnumCodeCommit20150413UpdatePullRequestApprovalRuleContent UpdatePullRequestApprovalRuleContentXAmzTargetEnum = "CodeCommit_20150413.UpdatePullRequestApprovalRuleContent"
)

func (e *UpdatePullRequestApprovalRuleContentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.UpdatePullRequestApprovalRuleContent":
		*e = UpdatePullRequestApprovalRuleContentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePullRequestApprovalRuleContentXAmzTargetEnum: %s", s)
	}
}

type UpdatePullRequestApprovalRuleContentRequest struct {
	UpdatePullRequestApprovalRuleContentInput shared.UpdatePullRequestApprovalRuleContentInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                             *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                         *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                            *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                  *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                         *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                             *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                         *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                UpdatePullRequestApprovalRuleContentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdatePullRequestApprovalRuleContentResponse struct {
	// ApprovalRuleContentRequiredException
	ApprovalRuleContentRequiredException interface{}
	// ApprovalRuleDoesNotExistException
	ApprovalRuleDoesNotExistException interface{}
	// ApprovalRuleNameRequiredException
	ApprovalRuleNameRequiredException interface{}
	// CannotModifyApprovalRuleFromTemplateException
	CannotModifyApprovalRuleFromTemplateException interface{}
	ContentType                                   string
	// EncryptionIntegrityChecksFailedException
	EncryptionIntegrityChecksFailedException interface{}
	// EncryptionKeyAccessDeniedException
	EncryptionKeyAccessDeniedException interface{}
	// EncryptionKeyDisabledException
	EncryptionKeyDisabledException interface{}
	// EncryptionKeyNotFoundException
	EncryptionKeyNotFoundException interface{}
	// EncryptionKeyUnavailableException
	EncryptionKeyUnavailableException interface{}
	// InvalidApprovalRuleContentException
	InvalidApprovalRuleContentException interface{}
	// InvalidApprovalRuleNameException
	InvalidApprovalRuleNameException interface{}
	// InvalidPullRequestIdException
	InvalidPullRequestIDException interface{}
	// InvalidRuleContentSha256Exception
	InvalidRuleContentSha256Exception interface{}
	// PullRequestAlreadyClosedException
	PullRequestAlreadyClosedException interface{}
	// PullRequestDoesNotExistException
	PullRequestDoesNotExistException interface{}
	// PullRequestIdRequiredException
	PullRequestIDRequiredException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// Success
	UpdatePullRequestApprovalRuleContentOutput *shared.UpdatePullRequestApprovalRuleContentOutput
}
