/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PatchProfileJsonSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export class PatchProfileApplicationJSONBirth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "City" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ZipCode" })
  zipCode?: string;
}

export class PatchProfileApplicationJSONIDFile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Content64Encoded" })
  content64Encoded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}

export enum PatchProfileApplicationJSONSexEnum {
  Male = "male",
  Female = "female",
}

/**
 * Profile to add
 */
export class PatchProfileApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Birth" })
  @Type(() => PatchProfileApplicationJSONBirth)
  birth?: PatchProfileApplicationJSONBirth;

  @SpeakeasyMetadata()
  @Expose({ name: "BirthName" })
  birthName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FirstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IDFile" })
  @Type(() => PatchProfileApplicationJSONIDFile)
  idFile?: PatchProfileApplicationJSONIDFile;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Sex" })
  sex?: PatchProfileApplicationJSONSexEnum;
}

export class PatchProfileJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
