// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ViasPhoneNumberPhoneTypeEnum - The type of the phone number.
// >The following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.
type ViasPhoneNumberPhoneTypeEnum string

const (
	ViasPhoneNumberPhoneTypeEnumFax      ViasPhoneNumberPhoneTypeEnum = "Fax"
	ViasPhoneNumberPhoneTypeEnumLandline ViasPhoneNumberPhoneTypeEnum = "Landline"
	ViasPhoneNumberPhoneTypeEnumMobile   ViasPhoneNumberPhoneTypeEnum = "Mobile"
	ViasPhoneNumberPhoneTypeEnumSip      ViasPhoneNumberPhoneTypeEnum = "SIP"
)

func (e ViasPhoneNumberPhoneTypeEnum) ToPointer() *ViasPhoneNumberPhoneTypeEnum {
	return &e
}

func (e *ViasPhoneNumberPhoneTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Fax":
		fallthrough
	case "Landline":
		fallthrough
	case "Mobile":
		fallthrough
	case "SIP":
		*e = ViasPhoneNumberPhoneTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ViasPhoneNumberPhoneTypeEnum: %v", v)
	}
}

type ViasPhoneNumber struct {
	// The two-character country code of the phone number.
	// >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
	PhoneCountryCode *string `json:"phoneCountryCode,omitempty"`
	// The phone number.
	// >The inclusion of the phone number country code is not necessary.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// The type of the phone number.
	// >The following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.
	PhoneType *ViasPhoneNumberPhoneTypeEnum `json:"phoneType,omitempty"`
}
