// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SearchFreetextResponseSearchTypeEnum - **indicator** of the entity type for *this* result that is *one of*:
//   - `"PRODUCT"`: a tour / activity
//   - `"DESTINATION"`: continent, country, city, region
//   - `"ATTRACTION"`: an attraction within a destination (only available to partners with SEO access)
//   - `"RECOMMENDATION"`: an attraction within a destination (only available to partners with SEO access)
type SearchFreetextResponseSearchTypeEnum string

const (
	SearchFreetextResponseSearchTypeEnumProduct        SearchFreetextResponseSearchTypeEnum = "PRODUCT"
	SearchFreetextResponseSearchTypeEnumDestination    SearchFreetextResponseSearchTypeEnum = "DESTINATION"
	SearchFreetextResponseSearchTypeEnumAttraction     SearchFreetextResponseSearchTypeEnum = "ATTRACTION"
	SearchFreetextResponseSearchTypeEnumRecommendation SearchFreetextResponseSearchTypeEnum = "RECOMMENDATION"
)

func (e *SearchFreetextResponseSearchTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRODUCT":
		fallthrough
	case "DESTINATION":
		fallthrough
	case "ATTRACTION":
		fallthrough
	case "RECOMMENDATION":
		*e = SearchFreetextResponseSearchTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchFreetextResponseSearchTypeEnum: %s", s)
	}
}

type SearchFreetextResponse struct {
	// **indicator** of the entity type for *this* result that is *one of*:
	//   - `"PRODUCT"`: a tour / activity
	//   - `"DESTINATION"`: continent, country, city, region
	//   - `"ATTRACTION"`: an attraction within a destination (only available to partners with SEO access)
	//   - `"RECOMMENDATION"`: an attraction within a destination (only available to partners with SEO access)
	//
	SearchType *SearchFreetextResponseSearchTypeEnum `json:"searchType,omitempty"`
	// **sort order** for *this* data object
	SortOrder *int64 `json:"sortOrder,omitempty"`
}
