// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateExportTaskXAmzTargetEnum
type CreateExportTaskXAmzTargetEnum string

const (
	CreateExportTaskXAmzTargetEnumLogs20140328CreateExportTask CreateExportTaskXAmzTargetEnum = "Logs_20140328.CreateExportTask"
)

func (e *CreateExportTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Logs_20140328.CreateExportTask":
		*e = CreateExportTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateExportTaskXAmzTargetEnum: %s", s)
	}
}

type CreateExportTaskRequest struct {
	CreateExportTaskRequest shared.CreateExportTaskRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              CreateExportTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateExportTaskResponse struct {
	ContentType string
	// Success
	CreateExportTaskResponse *shared.CreateExportTaskResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// OperationAbortedException
	OperationAbortedException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
