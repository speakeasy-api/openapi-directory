// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceHealthReasonEnum string

const (
	InstanceHealthReasonEnumLbRegistrationInProgress         InstanceHealthReasonEnum = "Lb.RegistrationInProgress"
	InstanceHealthReasonEnumLbInitialHealthChecking          InstanceHealthReasonEnum = "Lb.InitialHealthChecking"
	InstanceHealthReasonEnumLbInternalError                  InstanceHealthReasonEnum = "Lb.InternalError"
	InstanceHealthReasonEnumInstanceResponseCodeMismatch     InstanceHealthReasonEnum = "Instance.ResponseCodeMismatch"
	InstanceHealthReasonEnumInstanceTimeout                  InstanceHealthReasonEnum = "Instance.Timeout"
	InstanceHealthReasonEnumInstanceFailedHealthChecks       InstanceHealthReasonEnum = "Instance.FailedHealthChecks"
	InstanceHealthReasonEnumInstanceNotRegistered            InstanceHealthReasonEnum = "Instance.NotRegistered"
	InstanceHealthReasonEnumInstanceNotInUse                 InstanceHealthReasonEnum = "Instance.NotInUse"
	InstanceHealthReasonEnumInstanceDeregistrationInProgress InstanceHealthReasonEnum = "Instance.DeregistrationInProgress"
	InstanceHealthReasonEnumInstanceInvalidState             InstanceHealthReasonEnum = "Instance.InvalidState"
	InstanceHealthReasonEnumInstanceIPUnusable               InstanceHealthReasonEnum = "Instance.IpUnusable"
)

func (e *InstanceHealthReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Lb.RegistrationInProgress":
		fallthrough
	case "Lb.InitialHealthChecking":
		fallthrough
	case "Lb.InternalError":
		fallthrough
	case "Instance.ResponseCodeMismatch":
		fallthrough
	case "Instance.Timeout":
		fallthrough
	case "Instance.FailedHealthChecks":
		fallthrough
	case "Instance.NotRegistered":
		fallthrough
	case "Instance.NotInUse":
		fallthrough
	case "Instance.DeregistrationInProgress":
		fallthrough
	case "Instance.InvalidState":
		fallthrough
	case "Instance.IpUnusable":
		*e = InstanceHealthReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceHealthReasonEnum: %s", s)
	}
}
