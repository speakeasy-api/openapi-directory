/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The default configuration that applies to all Lambda functions in the group. Individual Lambda functions can override these settings.
 */
export class CreateFunctionDefinitionVersionRequestBodyDefaultConfig extends SpeakeasyBase {
  /**
   * Configuration information that specifies how a Lambda function runs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Execution" })
  @Type(() => shared.FunctionDefaultExecutionConfig)
  execution?: shared.FunctionDefaultExecutionConfig;
}

export class CreateFunctionDefinitionVersionRequestBody extends SpeakeasyBase {
  /**
   * The default configuration that applies to all Lambda functions in the group. Individual Lambda functions can override these settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DefaultConfig" })
  @Type(() => CreateFunctionDefinitionVersionRequestBodyDefaultConfig)
  defaultConfig?: CreateFunctionDefinitionVersionRequestBodyDefaultConfig;

  /**
   * A list of Lambda functions in this function definition version.
   */
  @SpeakeasyMetadata({ elemType: shared.FunctionT })
  @Expose({ name: "Functions" })
  @Type(() => shared.FunctionT)
  functions?: shared.FunctionT[];
}

export class CreateFunctionDefinitionVersionRequest extends SpeakeasyBase {
  /**
   * The ID of the Lambda function definition.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=FunctionDefinitionId",
  })
  functionDefinitionId: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateFunctionDefinitionVersionRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * A client token used to correlate requests and responses.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amzn-Client-Token",
  })
  xAmznClientToken?: string;
}

export class CreateFunctionDefinitionVersionResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createFunctionDefinitionVersionResponse?: shared.CreateFunctionDefinitionVersionResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
