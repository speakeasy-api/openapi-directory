/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum ContractLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

export class Contract extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ArchivalDate" })
  archivalDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Class" })
  class?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "End" })
  end?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: ContractLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModificationDate" })
  modificationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Parent" })
  parent?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Start" })
  start?: string;
}
