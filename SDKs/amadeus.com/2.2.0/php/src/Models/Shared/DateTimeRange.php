<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DateTimeRange
{
    /**
     * Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-12-25
     * 
     * @var \DateTime $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $date;
    
    /**
     * Either 1, 2 or 3 extra days around the local date (IxD for +/- x days - Ex: I3D), Either 1 to 3 days after the local date (PxD for +x days - Ex: P3D), or 1 to 3 days before the local date (MxD for -x days - Ex: M3D)
     * 
     * 
     * Can not be combined with "originRadius" or "destinationRadius".
     * 
     * 
     * @var ?string $dateWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateWindow')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateWindow = null;
    
    /**
     * Local time. hh:mm:ss format, e.g 10:30:00
     * 
     * @var ?string $time
     */
	#[\JMS\Serializer\Annotation\SerializedName('time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $time = null;
    
    /**
     * 1 to 12 hours around (both +and -) the local time. Possibly limited by the number of extra days when specified, i.e.  in some situations, it may not be used to exceed the maximum date range. [1-12]H format, e.g. 6H
     * 
     * 
     * Can not be combined with "originRadius" or "destinationRadius".
     * 
     * 
     * @var ?string $timeWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeWindow')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeWindow = null;
    
	public function __construct()
	{
		$this->date = new \DateTime();
		$this->dateWindow = null;
		$this->time = null;
		$this->timeWindow = null;
	}
}
