/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetConnectionsIdConnectionLogsQueryParams {
    /**
     * UUID of a connector
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=connector_uuid")
    public String connectorUuid;
    public GetConnectionsIdConnectionLogsQueryParams withConnectorUuid(String connectorUuid) {
        this.connectorUuid = connectorUuid;
        return this;
    }
    
    /**
     * connections log error filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=error")
    public String error;
    public GetConnectionsIdConnectionLogsQueryParams withError(String error) {
        this.error = error;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=expand")
    public String expand;
    public GetConnectionsIdConnectionLogsQueryParams withExpand(String expand) {
        this.expand = expand;
        return this;
    }
    
    /**
     * ID of a connection
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_connection")
    public Long idConnection;
    public GetConnectionsIdConnectionLogsQueryParams withIdConnection(Long idConnection) {
        this.idConnection = idConnection;
        return this;
    }
    
    /**
     * ID of a connector
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_connector")
    public Long idConnector;
    public GetConnectionsIdConnectionLogsQueryParams withIdConnector(Long idConnector) {
        this.idConnector = idConnector;
        return this;
    }
    
    /**
     * filter "id" of logs, maximum id to return
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_max")
    public Long idMax;
    public GetConnectionsIdConnectionLogsQueryParams withIdMax(Long idMax) {
        this.idMax = idMax;
        return this;
    }
    
    /**
     * ID of a source
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_source")
    public Long idSource;
    public GetConnectionsIdConnectionLogsQueryParams withIdSource(Long idSource) {
        this.idSource = idSource;
        return this;
    }
    
    /**
     * ID of a user
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_user")
    public Long idUser;
    public GetConnectionsIdConnectionLogsQueryParams withIdUser(Long idUser) {
        this.idUser = idUser;
        return this;
    }
    
    /**
     * limit number of results
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GetConnectionsIdConnectionLogsQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * maximum date
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=max_date")
    public LocalDate maxDate;
    public GetConnectionsIdConnectionLogsQueryParams withMaxDate(LocalDate maxDate) {
        this.maxDate = maxDate;
        return this;
    }
    
    /**
     * minimal date
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=min_date")
    public LocalDate minDate;
    public GetConnectionsIdConnectionLogsQueryParams withMinDate(LocalDate minDate) {
        this.minDate = minDate;
        return this;
    }
    
    /**
     * offset of first result
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Long offset;
    public GetConnectionsIdConnectionLogsQueryParams withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * period to group logs
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=period")
    public String period;
    public GetConnectionsIdConnectionLogsQueryParams withPeriod(String period) {
        this.period = period;
        return this;
    }
    
}
