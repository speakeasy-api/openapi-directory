// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeReservedInstancesOfferingsRequestFilters - <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>
type DescribeReservedInstancesOfferingsRequestFilters struct {
	Name   *string
	Values []string
}

// DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum - <p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>
type DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum string

const (
	DescribeReservedInstancesOfferingsRequestInstanceTenancyEnumDefault   DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum = "default"
	DescribeReservedInstancesOfferingsRequestInstanceTenancyEnumDedicated DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum = "dedicated"
	DescribeReservedInstancesOfferingsRequestInstanceTenancyEnumHost      DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum = "host"
)

func (e DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum) ToPointer() *DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum {
	return &e
}

func (e *DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		fallthrough
	case "dedicated":
		fallthrough
	case "host":
		*e = DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum: %v", v)
	}
}

// DescribeReservedInstancesOfferingsRequestOfferingTypeEnum - The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.
type DescribeReservedInstancesOfferingsRequestOfferingTypeEnum string

const (
	DescribeReservedInstancesOfferingsRequestOfferingTypeEnumHeavyUtilization  DescribeReservedInstancesOfferingsRequestOfferingTypeEnum = "Heavy Utilization"
	DescribeReservedInstancesOfferingsRequestOfferingTypeEnumMediumUtilization DescribeReservedInstancesOfferingsRequestOfferingTypeEnum = "Medium Utilization"
	DescribeReservedInstancesOfferingsRequestOfferingTypeEnumLightUtilization  DescribeReservedInstancesOfferingsRequestOfferingTypeEnum = "Light Utilization"
	DescribeReservedInstancesOfferingsRequestOfferingTypeEnumNoUpfront         DescribeReservedInstancesOfferingsRequestOfferingTypeEnum = "No Upfront"
	DescribeReservedInstancesOfferingsRequestOfferingTypeEnumPartialUpfront    DescribeReservedInstancesOfferingsRequestOfferingTypeEnum = "Partial Upfront"
	DescribeReservedInstancesOfferingsRequestOfferingTypeEnumAllUpfront        DescribeReservedInstancesOfferingsRequestOfferingTypeEnum = "All Upfront"
)

func (e DescribeReservedInstancesOfferingsRequestOfferingTypeEnum) ToPointer() *DescribeReservedInstancesOfferingsRequestOfferingTypeEnum {
	return &e
}

func (e *DescribeReservedInstancesOfferingsRequestOfferingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Heavy Utilization":
		fallthrough
	case "Medium Utilization":
		fallthrough
	case "Light Utilization":
		fallthrough
	case "No Upfront":
		fallthrough
	case "Partial Upfront":
		fallthrough
	case "All Upfront":
		*e = DescribeReservedInstancesOfferingsRequestOfferingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeReservedInstancesOfferingsRequestOfferingTypeEnum: %v", v)
	}
}

// DescribeReservedInstancesOfferingsRequest - Contains the parameters for DescribeReservedInstancesOfferings.
type DescribeReservedInstancesOfferingsRequest struct {
	AvailabilityZone             *string
	DryRun                       *bool
	Filters                      []DescribeReservedInstancesOfferingsRequestFilters
	IncludeMarketplace           *bool
	InstanceTenancy              *DescribeReservedInstancesOfferingsRequestInstanceTenancyEnum
	InstanceType                 *InstanceTypeEnum
	MaxDuration                  *int64
	MaxInstanceCount             *int64
	MaxResults                   *int64
	MinDuration                  *int64
	NextToken                    *string
	OfferingClass                *OfferingClassTypeEnum
	OfferingType                 *DescribeReservedInstancesOfferingsRequestOfferingTypeEnum
	ProductDescription           *RIProductDescriptionEnum
	ReservedInstancesOfferingIds []string
}
