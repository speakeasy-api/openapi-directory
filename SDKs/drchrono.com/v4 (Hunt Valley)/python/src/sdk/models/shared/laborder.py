"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LabOrderIcd10Code:
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The numeric ICD-10 code"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Short description  of the ICD-10 code"""  
    
class LabOrderPriorityEnum(str, Enum):
    r"""`\\"Normal\\"` or `\\"STAT\\"`. Default `\\"Normal\\"`"""
    N = 'N'
    S = 'S'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LabOrder:
    r"""Created"""
    
    doctor: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doctor') }})  
    patient: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('patient') }})  
    sublab: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sublab') }})  
    accession_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accession_number'), 'exclude': lambda f: f is None }})
    r"""For external use only"""  
    documents: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documents'), 'exclude': lambda f: f is None }})
    r"""Associated `/lab_documents` objects"""  
    icd10_codes: Optional[list[LabOrderIcd10Code]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icd10_codes'), 'exclude': lambda f: f is None }})
    r"""ICD-10 codes of the conditions which the tests concerns."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})  
    priority: Optional[LabOrderPriorityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority'), 'exclude': lambda f: f is None }})
    r"""`\\"Normal\\"` or `\\"STAT\\"`. Default `\\"Normal\\"`"""  
    requisition_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requisition_id'), 'exclude': lambda f: f is None }})
    r"""The ID printed on the requisition PDF. Generally the same as id."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Equivalent to HL7's ORC.5. Defaults to `\\"N\\"`.
    Value | Notes
    ----- | -----
    `\"N\"` | not sent                                          |
    `\"Q\"` | queued for processing                             |
    `\"A\"` | `ABN (Advance Beneficiary Notice)` required       |
    `\"S\"` | send                                              |
    `\"R\"` | results received                                  |
    `\"E\"` | error                                             |
    """  
    timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'exclude': lambda f: f is None }})
    r"""Time at which the order was submitted. Defaults to now"""  
    