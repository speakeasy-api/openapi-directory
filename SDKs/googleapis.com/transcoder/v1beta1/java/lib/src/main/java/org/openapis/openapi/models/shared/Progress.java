/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Progress - Estimated fractional progress for each step, from `0` to `1`.
 */
public class Progress {
    /**
     * Estimated fractional progress for `analyzing` step.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analyzed")
    public Double analyzed;

    public Progress withAnalyzed(Double analyzed) {
        this.analyzed = analyzed;
        return this;
    }
    
    /**
     * Estimated fractional progress for `encoding` step.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encoded")
    public Double encoded;

    public Progress withEncoded(Double encoded) {
        this.encoded = encoded;
        return this;
    }
    
    /**
     * Estimated fractional progress for `notifying` step.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notified")
    public Double notified;

    public Progress withNotified(Double notified) {
        this.notified = notified;
        return this;
    }
    
    /**
     * Estimated fractional progress for `uploading` step.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploaded")
    public Double uploaded;

    public Progress withUploaded(Double uploaded) {
        this.uploaded = uploaded;
        return this;
    }
    
    public Progress(){}
}
