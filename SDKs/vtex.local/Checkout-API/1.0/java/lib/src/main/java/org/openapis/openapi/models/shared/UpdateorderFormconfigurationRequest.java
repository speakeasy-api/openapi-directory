/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateorderFormconfigurationRequest {
    /**
     * Allows the editing of SKU prices right in the cart.
     */
    @JsonProperty("allowManualPrice")
    public Boolean allowManualPrice;
    public UpdateorderFormconfigurationRequest withAllowManualPrice(Boolean allowManualPrice) {
        this.allowManualPrice = allowManualPrice;
        return this;
    }
    
    /**
     * On the same purchase, allows the selection of items from multiple delivery channels.
     */
    @JsonProperty("allowMultipleDeliveries")
    public Boolean allowMultipleDeliveries;
    public UpdateorderFormconfigurationRequest withAllowMultipleDeliveries(Boolean allowMultipleDeliveries) {
        this.allowMultipleDeliveries = allowMultipleDeliveries;
        return this;
    }
    
    /**
     * Array of objects containing Apps configuration information.
     */
    @JsonProperty("apps")
    public UpdateorderFormconfigurationRequestApps[] apps;
    public UpdateorderFormconfigurationRequest withApps(UpdateorderFormconfigurationRequestApps[] apps) {
        this.apps = apps;
        return this;
    }
    
    /**
     * Number of price digits.
     */
    @JsonProperty("decimalDigitsPrecision")
    public Integer decimalDigitsPrecision;
    public UpdateorderFormconfigurationRequest withDecimalDigitsPrecision(Integer decimalDigitsPrecision) {
        this.decimalDigitsPrecision = decimalDigitsPrecision;
        return this;
    }
    
    /**
     * Allows, on a first purchase, masking client's data. It could be useful when a shared cart is used and the client doesn't want to share its data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maskFirstPurchaseData")
    public Boolean maskFirstPurchaseData;
    public UpdateorderFormconfigurationRequest withMaskFirstPurchaseData(Boolean maskFirstPurchaseData) {
        this.maskFirstPurchaseData = maskFirstPurchaseData;
        return this;
    }
    
    /**
     * Allows the input of a limit of white label sellers involved on the cart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxNumberOfWhiteLabelSellers")
    public Long maxNumberOfWhiteLabelSellers;
    public UpdateorderFormconfigurationRequest withMaxNumberOfWhiteLabelSellers(Long maxNumberOfWhiteLabelSellers) {
        this.maxNumberOfWhiteLabelSellers = maxNumberOfWhiteLabelSellers;
        return this;
    }
    
    /**
     * Minimum SKU quantity by cart.
     */
    @JsonProperty("minimumQuantityAccumulatedForItems")
    public Integer minimumQuantityAccumulatedForItems;
    public UpdateorderFormconfigurationRequest withMinimumQuantityAccumulatedForItems(Integer minimumQuantityAccumulatedForItems) {
        this.minimumQuantityAccumulatedForItems = minimumQuantityAccumulatedForItems;
        return this;
    }
    
    /**
     * Minimum cart value.
     */
    @JsonProperty("minimumValueAccumulated")
    public Long minimumValueAccumulated;
    public UpdateorderFormconfigurationRequest withMinimumValueAccumulated(Long minimumValueAccumulated) {
        this.minimumValueAccumulated = minimumValueAccumulated;
        return this;
    }
    
    /**
     * Payment Configuration object
     */
    @JsonProperty("paymentConfiguration")
    public PaymentConfiguration paymentConfiguration;
    public UpdateorderFormconfigurationRequest withPaymentConfiguration(PaymentConfiguration paymentConfiguration) {
        this.paymentConfiguration = paymentConfiguration;
        return this;
    }
    
    /**
     * If you want to apply a first installment discount to a particular payment system, set this field to that payment system's ID. Learn more: [Configuring a discount for orders prepaid in full](https://help.vtex.com/en/tutorial/configurar-desconto-de-preco-a-vista--7Lfcj9Wb5dpYfA2gKkACIt).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentSystemToCheckFirstInstallment")
    public String paymentSystemToCheckFirstInstallment;
    public UpdateorderFormconfigurationRequest withPaymentSystemToCheckFirstInstallment(String paymentSystemToCheckFirstInstallment) {
        this.paymentSystemToCheckFirstInstallment = paymentSystemToCheckFirstInstallment;
        return this;
    }
    
    /**
     * Configures reCAPTCHA validation for the account, defining in which situations the shopper will be prompted to validate a purchase with reCAPTCHA. Learn more about [reCAPTCHA validation for VTEX stores](https://help.vtex.com/tutorial/recaptcha-no-checkout--18Te3oDd7f4qcjKu9jhNzP)
     * 
     * Possible values are:
     * - `"never"`: no purchases are validated with reCAPTCHA.
     * - `"always"`: every purchase is validated with reCAPTCHA.
     * - `"vtexCriteria"`: only some purchases are validated with reCAPTCHA in order to minimize friction and improve shopping experience. VTEX\u2019s algorithm determines which sessions are trustworthy and which should be validated with reCAPTCHA. This is the recommended option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recaptchaValidation")
    public String recaptchaValidation;
    public UpdateorderFormconfigurationRequest withRecaptchaValidation(String recaptchaValidation) {
        this.recaptchaValidation = recaptchaValidation;
        return this;
    }
    
    /**
     * External tax service configuration.
     */
    @JsonProperty("taxConfiguration")
    public UpdateorderFormconfigurationRequestTaxConfiguration taxConfiguration;
    public UpdateorderFormconfigurationRequest withTaxConfiguration(UpdateorderFormconfigurationRequestTaxConfiguration taxConfiguration) {
        this.taxConfiguration = taxConfiguration;
        return this;
    }
    
}
