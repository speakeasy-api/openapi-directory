/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplePayInfo } from "./applepayinfo";
import { BcmcInfo } from "./bcmcinfo";
import { CartesBancairesInfo } from "./cartesbancairesinfo";
import { GiroPayInfo } from "./giropayinfo";
import { GooglePayInfo } from "./googlepayinfo";
import { KlarnaInfo } from "./klarnainfo";
import { MealVoucherFRInfo } from "./mealvoucherfrinfo";
import { PayPalInfo } from "./paypalinfo";
import { SofortInfo } from "./sofortinfo";
import { SwishInfo } from "./swishinfo";
import { VippsInfo } from "./vippsinfo";
import { Expose, Type } from "class-transformer";

/**
 * Payment method status. Possible values:
 *
 * @remarks
 * * **valid**
 * * **pending**
 * * **invalid**
 * * **rejected**
 */
export enum PaymentMethodVerificationStatusEnum {
  Valid = "valid",
  Pending = "pending",
  Invalid = "invalid",
  Rejected = "rejected",
}

/**
 * OK - the request has succeeded.
 */
export class PaymentMethod extends SpeakeasyBase {
  /**
   * Indicates whether receiving payments is allowed. This value is set to **true** by Adyen after screening your merchant account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed" })
  allowed?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "applePay" })
  @Type(() => ApplePayInfo)
  applePay?: ApplePayInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "bcmc" })
  @Type(() => BcmcInfo)
  bcmc?: BcmcInfo;

  /**
   * The unique identifier of the business line.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "businessLineId" })
  businessLineId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cartesBancaires" })
  @Type(() => CartesBancairesInfo)
  cartesBancaires?: CartesBancairesInfo;

  /**
   * The list of countries where a payment method is available. By default, all countries supported by the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countries" })
  countries?: string[];

  /**
   * The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencies" })
  currencies?: string[];

  /**
   * The list of custom routing flags to route payment to the intended acquirer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customRoutingFlags" })
  customRoutingFlags?: string[];

  /**
   * Indicates whether the payment method is enabled (**true**) or disabled (**false**).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "giroPay" })
  @Type(() => GiroPayInfo)
  giroPay?: GiroPayInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "googlePay" })
  @Type(() => GooglePayInfo)
  googlePay?: GooglePayInfo;

  /**
   * The identifier of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "klarna" })
  @Type(() => KlarnaInfo)
  klarna?: KlarnaInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "mealVoucher_FR" })
  @Type(() => MealVoucherFRInfo)
  mealVoucherFR?: MealVoucherFRInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "paypal" })
  @Type(() => PayPalInfo)
  paypal?: PayPalInfo;

  /**
   * Your reference for the payment method. Supported characters a-z, A-Z, 0-9.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The sales channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperInteraction" })
  shopperInteraction?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sofort" })
  @Type(() => SofortInfo)
  sofort?: SofortInfo;

  /**
   * The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storeId" })
  storeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "swish" })
  @Type(() => SwishInfo)
  swish?: SwishInfo;

  /**
   * Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Payment method status. Possible values:
   *
   * @remarks
   * * **valid**
   * * **pending**
   * * **invalid**
   * * **rejected**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verificationStatus" })
  verificationStatus?: PaymentMethodVerificationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "vipps" })
  @Type(() => VippsInfo)
  vipps?: VippsInfo;
}
