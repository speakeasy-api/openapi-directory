// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEvaluationXAmzTargetEnum
type DeleteEvaluationXAmzTargetEnum string

const (
	DeleteEvaluationXAmzTargetEnumAmazonMl20141212DeleteEvaluation DeleteEvaluationXAmzTargetEnum = "AmazonML_20141212.DeleteEvaluation"
)

func (e *DeleteEvaluationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonML_20141212.DeleteEvaluation":
		*e = DeleteEvaluationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEvaluationXAmzTargetEnum: %s", s)
	}
}

type DeleteEvaluationHeaders struct {
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteEvaluationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteEvaluationRequest struct {
	Headers DeleteEvaluationHeaders
	Request shared.DeleteEvaluationInput `request:"mediaType=application/json"`
}

type DeleteEvaluationResponse struct {
	ContentType string
	// Success
	DeleteEvaluationOutput *shared.DeleteEvaluationOutput
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
