/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec } from "./googlecloudretailv2searchrequestboostspecconditionboostspec";
import { Expose, Type } from "class-transformer";

/**
 * Boost specification to boost certain items.
 */
export class GoogleCloudRetailV2SearchRequestBoostSpec extends SpeakeasyBase {
  /**
   * Condition boost specifications. If a product matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec,
  })
  @Expose({ name: "conditionBoostSpecs" })
  @Type(() => GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec)
  conditionBoostSpecs?: GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec[];

  /**
   * Whether to skip boostspec validation. If this field is set to true, invalid BoostSpec.condition_boost_specs will be ignored and valid BoostSpec.condition_boost_specs will still be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skipBoostSpecValidation" })
  skipBoostSpecValidation?: boolean;
}
