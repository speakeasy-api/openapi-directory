/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinyDestinyItemQuantity } from "./destinydestinyitemquantity";

/**
 * Used in a number of Destiny contracts to return data about an item stack and its quantity. Can optionally return an itemInstanceId if the item is instanced - in which case, the quantity returned will be 1. If it's not... uh, let me know okay? Thanks.
 */
export class DestinyVendorsDestinyVendorReceiptItemReceived extends SpeakeasyBase {
  /**
   * Indicates that this item quantity may be conditionally shown or hidden, based on various sources of state. For example: server flags, account state, or character progress.
   */
  @SpeakeasyMetadata()
  hasConditionalVisibility?: boolean;

  /**
   * The hash identifier for the item in question. Use it to look up the item's DestinyInventoryItemDefinition.
   */
  @SpeakeasyMetadata()
  itemHash?: number;

  /**
   * If this quantity is referring to a specific instance of an item, this will have the item's instance ID. Normally, this will be null.
   */
  @SpeakeasyMetadata()
  itemInstanceId?: number;

  /**
   * The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used.
   */
  @SpeakeasyMetadata()
  quantity?: number;
}

/**
 * If a character purchased an item that is refundable, a Vendor Receipt will be created on the user's Destiny Profile. These expire after a configurable period of time, but until then can be used to get refunds on items. BNet does not provide the ability to refund a purchase *yet*, but you know.
 */
export class DestinyVendorsDestinyVendorReceipt extends SpeakeasyBase {
  /**
   * The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.
   */
  @SpeakeasyMetadata({ elemType: DestinyDestinyItemQuantity })
  currencyPaid?: DestinyDestinyItemQuantity[];

  /**
   * The date at which this receipt is rendered invalid.
   */
  @SpeakeasyMetadata()
  expiresOn?: Date;

  /**
   * The item that was received, and its quantity.
   */
  @SpeakeasyMetadata()
  itemReceived?: DestinyVendorsDestinyVendorReceiptItemReceived;

  /**
   * The unlock flag used to determine whether you still have the purchased item.
   */
  @SpeakeasyMetadata()
  licenseUnlockHash?: number;

  /**
   * The ID of the character who made the purchase.
   */
  @SpeakeasyMetadata()
  purchasedByCharacterId?: number;

  /**
   * Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.
   */
  @SpeakeasyMetadata()
  refundPolicy?: number;

  /**
   * The identifier of this receipt.
   */
  @SpeakeasyMetadata()
  sequenceNumber?: number;

  /**
   * The seconds since epoch at which this receipt is rendered invalid.
   */
  @SpeakeasyMetadata()
  timeToExpiration?: number;
}
