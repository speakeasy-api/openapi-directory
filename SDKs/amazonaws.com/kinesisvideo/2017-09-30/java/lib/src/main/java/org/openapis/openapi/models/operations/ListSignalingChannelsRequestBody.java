/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListSignalingChannelsRequestBody {
    /**
     * An optional input parameter for the &lt;code&gt;ListSignalingChannels&lt;/code&gt; API. When this parameter is specified while invoking &lt;code&gt;ListSignalingChannels&lt;/code&gt;, the API returns only the channels that satisfy a condition specified in &lt;code&gt;ChannelNameCondition&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ChannelNameCondition")
    public ListSignalingChannelsRequestBodyChannelNameCondition channelNameCondition;
    public ListSignalingChannelsRequestBody withChannelNameCondition(ListSignalingChannelsRequestBodyChannelNameCondition channelNameCondition) {
        this.channelNameCondition = channelNameCondition;
        return this;
    }
    
    /**
     * The maximum number of channels to return in the response. The default is 500.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;
    public ListSignalingChannelsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * If you specify this parameter, when the result of a &lt;code&gt;ListSignalingChannels&lt;/code&gt; operation is truncated, the call returns the &lt;code&gt;NextToken&lt;/code&gt; in the response. To get another batch of channels, provide this token in your next request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;
    public ListSignalingChannelsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
