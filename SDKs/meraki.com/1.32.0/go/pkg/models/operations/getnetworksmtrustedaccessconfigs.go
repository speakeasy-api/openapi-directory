// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetNetworkSmTrustedAccessConfigsRequest struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	NetworkID    string  `pathParam:"style=simple,explode=false,name=networkId"`
	// The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
}

// GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum - type of access period, either a static range or a dynamic period
type GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum string

const (
	GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnumDynamic GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum = "dynamic"
	GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnumStatic  GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum = "static"
)

func (e GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum) ToPointer() *GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum {
	return &e
}

func (e *GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dynamic":
		fallthrough
	case "static":
		*e = GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum: %v", v)
	}
}

type GetNetworkSmTrustedAccessConfigs200ApplicationJSON struct {
	// time that access ends
	AccessEndAt *time.Time `json:"accessEndAt,omitempty"`
	// time that access starts
	AccessStartAt *time.Time `json:"accessStartAt,omitempty"`
	// device ID
	ID *string `json:"id,omitempty"`
	// device name
	Name *string `json:"name,omitempty"`
	// scope
	Scope *string `json:"scope,omitempty"`
	// SSID name
	SsidName *string `json:"ssidName,omitempty"`
	// device tags
	Tags []string `json:"tags,omitempty"`
	// type of access period, either a static range or a dynamic period
	TimeboundType *GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum `json:"timeboundType,omitempty"`
}

type GetNetworkSmTrustedAccessConfigsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkSmTrustedAccessConfigs200ApplicationJSONObjects []GetNetworkSmTrustedAccessConfigs200ApplicationJSON
}
