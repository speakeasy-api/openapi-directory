/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartJobRunRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllocatedCapacity")
    public Long allocatedCapacity;

    public StartJobRunRequest withAllocatedCapacity(Long allocatedCapacity) {
        this.allocatedCapacity = allocatedCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Arguments")
    public java.util.Map<String, String> arguments;

    public StartJobRunRequest withArguments(java.util.Map<String, String> arguments) {
        this.arguments = arguments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionClass")
    public ExecutionClassEnum executionClass;

    public StartJobRunRequest withExecutionClass(ExecutionClassEnum executionClass) {
        this.executionClass = executionClass;
        return this;
    }
    
    @JsonProperty("JobName")
    public String jobName;

    public StartJobRunRequest withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobRunId")
    public String jobRunId;

    public StartJobRunRequest withJobRunId(String jobRunId) {
        this.jobRunId = jobRunId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCapacity")
    public Double maxCapacity;

    public StartJobRunRequest withMaxCapacity(Double maxCapacity) {
        this.maxCapacity = maxCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationProperty")
    public NotificationProperty notificationProperty;

    public StartJobRunRequest withNotificationProperty(NotificationProperty notificationProperty) {
        this.notificationProperty = notificationProperty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberOfWorkers")
    public Long numberOfWorkers;

    public StartJobRunRequest withNumberOfWorkers(Long numberOfWorkers) {
        this.numberOfWorkers = numberOfWorkers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityConfiguration")
    public String securityConfiguration;

    public StartJobRunRequest withSecurityConfiguration(String securityConfiguration) {
        this.securityConfiguration = securityConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Timeout")
    public Long timeout;

    public StartJobRunRequest withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkerType")
    public WorkerTypeEnum workerType;

    public StartJobRunRequest withWorkerType(WorkerTypeEnum workerType) {
        this.workerType = workerType;
        return this;
    }
    
    public StartJobRunRequest(@JsonProperty("JobName") String jobName) {
        this.jobName = jobName;
  }
}
