/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class JournalEntry {
    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public JournalEntry withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;
    public JournalEntry withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;
    public JournalEntry withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Currency Exchange Rate at the time entity was recorded/generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency_rate")
    public Double currencyRate;
    public JournalEntry withCurrencyRate(Double currencyRate) {
        this.currencyRate = currencyRate;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public JournalEntry withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Journal symbol of the entry. For example IND for indirect costs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("journal_symbol")
    public String journalSymbol;
    public JournalEntry withJournalSymbol(String journalSymbol) {
        this.journalSymbol = journalSymbol;
        return this;
    }
    
    /**
     * Requires a minimum of 2 line items that sum to 0
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line_items")
    public JournalEntryLineItem[] lineItems;
    public JournalEntry withLineItems(JournalEntryLineItem[] lineItems) {
        this.lineItems = lineItems;
        return this;
    }
    
    /**
     * Reference for the journal entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memo")
    public String memo;
    public JournalEntry withMemo(String memo) {
        this.memo = memo;
        return this;
    }
    
    /**
     * This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("posted_at")
    public OffsetDateTime postedAt;
    public JournalEntry withPostedAt(OffsetDateTime postedAt) {
        this.postedAt = postedAt;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;
    public JournalEntry withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    /**
     * Journal entry title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public JournalEntry withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public JournalEntry withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The user who last updated the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    public String updatedBy;
    public JournalEntry withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
