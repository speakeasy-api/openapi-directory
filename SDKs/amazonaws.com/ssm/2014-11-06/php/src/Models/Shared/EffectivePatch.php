<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EffectivePatch - The <code>EffectivePatch</code> structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EffectivePatch
{
	#[\JMS\Serializer\Annotation\SerializedName('Patch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Patch')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Patch $patch = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PatchStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PatchStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PatchStatus $patchStatus = null;
    
	public function __construct()
	{
		$this->patch = null;
		$this->patchStatus = null;
	}
}
