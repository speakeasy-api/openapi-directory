"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reservednodeexchangestatustype_enum as shared_reservednodeexchangestatustype_enum
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class ReservedNodeExchangeStatusList:
    r"""Reserved-node status details, such as the source reserved-node identifier, the target reserved-node identifier, the node type, the node count, and other details."""
    
    request_time: Optional[datetime] = dataclasses.field(default=None)  
    reserved_node_exchange_request_id: Optional[str] = dataclasses.field(default=None)  
    source_reserved_node_count: Optional[int] = dataclasses.field(default=None)  
    source_reserved_node_id: Optional[str] = dataclasses.field(default=None)  
    source_reserved_node_type: Optional[str] = dataclasses.field(default=None)  
    status: Optional[shared_reservednodeexchangestatustype_enum.ReservedNodeExchangeStatusTypeEnum] = dataclasses.field(default=None)  
    target_reserved_node_count: Optional[int] = dataclasses.field(default=None)  
    target_reserved_node_offering_id: Optional[str] = dataclasses.field(default=None)  
    target_reserved_node_type: Optional[str] = dataclasses.field(default=None)  
    