"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .add_shortlink import AddShortlink
from .add_subaccount import AddSubaccount
from .campagne import Campagne
from .comptage import Comptage
from .credit import Credit
from .dellistenoire import DelListeNoire
from .edit_subaccount import EditSubaccount
from .getlistenoire import GetListeNoire
from .hlr import Hlr
from .repertoire import Repertoire
from .setlistenoire import SetListeNoire
from .sms import Sms

SERVERS = [
    "https://apirest.isendpro.com/cgi-bin",
    "http://apirest.isendpro.com/cgi-bin",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""[1] Liste des fonctionnalités :
    - envoi de SMS à un ou plusieurs destinataires,
    - lookup HLR,
    - récupération des récapitulatifs de campagne,
    - gestion des répertoires,
    - ajout en liste noire.
    - comptage du nombre de caractères des SMS
    
    [2] Pour utiliser cette API vous devez:
    - Créer un compte iSendPro sur https://isendpro.com/
    - Créditer votre compte 
        - Remarque: obtention d'un crédit de test possible sous conditions
    - Noter votre clé de compte (keyid)
      - Elle vous sera indispensable à l'utilisation de l'API
      - Vous pouvez la trouver dans le rubrique mon \"compte\", sous-rubrique \"mon API\"
    - Configurer le contrôle IP
      - Le contrôle IP est configurable dans le rubrique mon \"compte\", sous-rubrique \"mon API\"
      - Il s'agit d'un système de liste blanche, vous devez entrer les IP utilisées pour appeler l'API
      - Vous pouvez également désactiver totalement le contrôle IP
    """
    add_shortlink: AddShortlink
    add_subaccount: AddSubaccount
    campagne: Campagne
    comptage: Comptage
    credit: Credit
    del_liste_noire: DelListeNoire
    edit_subaccount: EditSubaccount
    get_liste_noire: GetListeNoire
    hlr: Hlr
    repertoire: Repertoire
    set_liste_noire: SetListeNoire
    sms: Sms

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.add_shortlink = AddShortlink(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.add_subaccount = AddSubaccount(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.campagne = Campagne(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.comptage = Comptage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.credit = Credit(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.del_liste_noire = DelListeNoire(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.edit_subaccount = EditSubaccount(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.get_liste_noire = GetListeNoire(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.hlr = Hlr(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.repertoire = Repertoire(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.set_liste_noire = SetListeNoire(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sms = Sms(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    