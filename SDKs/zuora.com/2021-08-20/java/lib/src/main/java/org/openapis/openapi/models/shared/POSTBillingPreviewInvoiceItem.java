/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class POSTBillingPreviewInvoiceItem {
    /**
     * The unique ID of the invoice item that the discount charge is applied to.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedToItemId")
    public String appliedToItemId;
    public POSTBillingPreviewInvoiceItem withAppliedToItemId(String appliedToItemId) {
        this.appliedToItemId = appliedToItemId;
        return this;
    }
    
    /**
     * The amount of the charge. This amount doesn't include taxes regardless if the charge's tax mode is inclusive or exclusive.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeAmount")
    public String chargeAmount;
    public POSTBillingPreviewInvoiceItem withChargeAmount(String chargeAmount) {
        this.chargeAmount = chargeAmount;
        return this;
    }
    
    /**
     * The date when the invoice item was created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("chargeDate")
    public OffsetDateTime chargeDate;
    public POSTBillingPreviewInvoiceItem withChargeDate(OffsetDateTime chargeDate) {
        this.chargeDate = chargeDate;
        return this;
    }
    
    /**
     * Description of the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeDescription")
    public String chargeDescription;
    public POSTBillingPreviewInvoiceItem withChargeDescription(String chargeDescription) {
        this.chargeDescription = chargeDescription;
        return this;
    }
    
    /**
     * Id of the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeId")
    public String chargeId;
    public POSTBillingPreviewInvoiceItem withChargeId(String chargeId) {
        this.chargeId = chargeId;
        return this;
    }
    
    /**
     * Name of the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeName")
    public String chargeName;
    public POSTBillingPreviewInvoiceItem withChargeName(String chargeName) {
        this.chargeName = chargeName;
        return this;
    }
    
    /**
     * Number of the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeNumber")
    public String chargeNumber;
    public POSTBillingPreviewInvoiceItem withChargeNumber(String chargeNumber) {
        this.chargeNumber = chargeNumber;
        return this;
    }
    
    /**
     * The type of charge. 
     * 
     * Possible values are `OneTime`, `Recurring`, and `Usage`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeType")
    public String chargeType;
    public POSTBillingPreviewInvoiceItem withChargeType(String chargeType) {
        this.chargeType = chargeType;
        return this;
    }
    
    /**
     * Invoice item ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public POSTBillingPreviewInvoiceItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies the kind of charge. 
     * 
     * Possible values:
     * * charge
     * * discount
     * * prepayment
     * * tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingType")
    public String processingType;
    public POSTBillingPreviewInvoiceItem withProcessingType(String processingType) {
        this.processingType = processingType;
        return this;
    }
    
    /**
     * Name of the product associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productName")
    public String productName;
    public POSTBillingPreviewInvoiceItem withProductName(String productName) {
        this.productName = productName;
        return this;
    }
    
    /**
     * Quantity of this item, in the configured unit of measure for the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public String quantity;
    public POSTBillingPreviewInvoiceItem withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * End date of the service period for this item, i.e., the last day of the service period, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceEndDate")
    public LocalDate serviceEndDate;
    public POSTBillingPreviewInvoiceItem withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * Start date of the service period for this item, in `yyyy-mm-dd` format. If the charge is a one-time fee, this is the date of that charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceStartDate")
    public LocalDate serviceStartDate;
    public POSTBillingPreviewInvoiceItem withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * ID of the subscription associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public POSTBillingPreviewInvoiceItem withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * Name of the subscription associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionName")
    public String subscriptionName;
    public POSTBillingPreviewInvoiceItem withSubscriptionName(String subscriptionName) {
        this.subscriptionName = subscriptionName;
        return this;
    }
    
    /**
     * Number of the subscription associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumber")
    public String subscriptionNumber;
    public POSTBillingPreviewInvoiceItem withSubscriptionNumber(String subscriptionNumber) {
        this.subscriptionNumber = subscriptionNumber;
        return this;
    }
    
    /**
     * Tax applied to the charge. This field returns `0` becasue the BillingPreview operation does not calculate taxes for charges in the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public String taxAmount;
    public POSTBillingPreviewInvoiceItem withTaxAmount(String taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * Unit used to measure consumption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public POSTBillingPreviewInvoiceItem withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
}
