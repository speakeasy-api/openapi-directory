// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum string

const (
	PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnumRead  PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum = "read"
	PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnumWrite PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum = "write"
)

func (e PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum) ToPointer() *PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum {
	return &e
}

func (e *PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read":
		fallthrough
	case "write":
		*e = PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum: %v", v)
	}
}

// PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBody - Group to modify to add folder access
type PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBody struct {
	Right PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBodyRightEnum `json:"Right"`
}

type PatchSpacesIDGroupsGroupIDFoldersFolderIDRequest struct {
	// Group to modify to add folder access
	RequestBody PatchSpacesIDGroupsGroupIDFoldersFolderIDRequestBody `request:"mediaType=application/json"`
	// Id of the folder
	FolderID string `pathParam:"style=simple,explode=false,name=folderId"`
	// Id of the group to modify
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type PatchSpacesIDGroupsGroupIDFoldersFolderIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
