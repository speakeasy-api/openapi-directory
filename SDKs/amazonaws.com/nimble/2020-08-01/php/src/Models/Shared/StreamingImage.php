<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StreamingImage - <p>Represents a streaming image resource.</p> <p>Streaming images are used by studio users to select which operating system and software they want to use in a Nimble Studio streaming session.</p> <p>Amazon provides a number of streaming images that include popular 3rd-party software.</p> <p>You can create your own streaming images using an Amazon EC2 machine image that you create for this purpose. You can also include software that your users require.</p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StreamingImage
{
	#[\JMS\Serializer\Annotation\SerializedName('arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $arn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ec2ImageId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ec2ImageId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('encryptionConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StreamingImageEncryptionConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StreamingImageEncryptionConfiguration $encryptionConfiguration = null;
    
    /**
     * $eulaIds
     * 
     * @var ?array<string> $eulaIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('eulaIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eulaIds = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $owner = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $platform = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StreamingImageStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StreamingImageStateEnum $state = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('statusCode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StreamingImageStatusCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StreamingImageStatusCodeEnum $statusCode = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('statusMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusMessage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('streamingImageId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streamingImageId = null;
    
    /**
     * $tags
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->arn = null;
		$this->description = null;
		$this->ec2ImageId = null;
		$this->encryptionConfiguration = null;
		$this->eulaIds = null;
		$this->name = null;
		$this->owner = null;
		$this->platform = null;
		$this->state = null;
		$this->statusCode = null;
		$this->statusMessage = null;
		$this->streamingImageId = null;
		$this->tags = null;
	}
}
