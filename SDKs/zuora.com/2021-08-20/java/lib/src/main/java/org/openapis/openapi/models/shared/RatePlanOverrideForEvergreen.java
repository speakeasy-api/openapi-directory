/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RatePlanOverrideForEvergreen - Rate plan associated with a subscription.
 * 
 */
public class RatePlanOverrideForEvergreen {
    /**
     * List of charges associated with the rate plan.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeOverrides")
    public ChargeOverrideForEvergreen[] chargeOverrides;
    public RatePlanOverrideForEvergreen withChargeOverrides(ChargeOverrideForEvergreen[] chargeOverrides) {
        this.chargeOverrides = chargeOverrides;
        return this;
    }
    
    /**
     * Container for custom fields of a Rate Plan object.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;
    public RatePlanOverrideForEvergreen withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * Internal identifier of the rate plan.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newRatePlanId")
    public String newRatePlanId;
    public RatePlanOverrideForEvergreen withNewRatePlanId(String newRatePlanId) {
        this.newRatePlanId = newRatePlanId;
        return this;
    }
    
    /**
     * Internal identifier of the product rate plan that the rate plan is based on.
     * 
     */
    @JsonProperty("productRatePlanId")
    public String productRatePlanId;
    public RatePlanOverrideForEvergreen withProductRatePlanId(String productRatePlanId) {
        this.productRatePlanId = productRatePlanId;
        return this;
    }
    
    /**
     * Unique identifier for the rate plan. This identifier enables you to refer to the rate plan before the rate plan has an internal identifier in Zuora.
     * 
     * For instance, suppose that you want to use a single order to add a product to a subscription and later update the same product. When you add the product, you can set a unique identifier for the rate plan. Then when you update the product, you can use the same unique identifier to specify which rate plan to modify.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uniqueToken")
    public String uniqueToken;
    public RatePlanOverrideForEvergreen withUniqueToken(String uniqueToken) {
        this.uniqueToken = uniqueToken;
        return this;
    }
    
}
