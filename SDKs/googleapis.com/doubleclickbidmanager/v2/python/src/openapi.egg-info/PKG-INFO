Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/doubleclickbidmanager/v2/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.DoubleclickbidmanagerQueriesCreateRequest(
    dollar_xgafv="2",
    query_input=shared.QueryInput(
        metadata=shared.QueryMetadata(
            data_range=shared.DataRange(
                custom_end_date=shared.Date(
                    day=592845,
                    month=715190,
                    year=844266,
                ),
                custom_start_date=shared.Date(
                    day=602763,
                    month=857946,
                    year=544883,
                ),
                range="ALL_TIME",
            ),
            format="CSV",
            send_notification=False,
            share_email_address=[
                "deserunt",
                "suscipit",
                "iure",
            ],
            title="Mrs.",
        ),
        params=shared.Parameters(
            filters=[
                shared.FilterPair(
                    type="ipsa",
                    value="delectus",
                ),
                shared.FilterPair(
                    type="tempora",
                    value="suscipit",
                ),
                shared.FilterPair(
                    type="molestiae",
                    value="minus",
                ),
                shared.FilterPair(
                    type="placeat",
                    value="voluptatum",
                ),
            ],
            group_bys=[
                "excepturi",
                "nisi",
            ],
            metrics=[
                "temporibus",
                "ab",
                "quis",
                "veritatis",
            ],
            options=shared.Options(
                include_only_targeted_user_lists=False,
                path_query_options=shared.PathQueryOptions(
                    channel_grouping=shared.ChannelGrouping(
                        fallback_name="deserunt",
                        name="perferendis",
                        rules=[
                            shared.Rule(
                                disjunctive_match_statements=[
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="quo",
                                                    match="UNKNOWN",
                                                    values=[
                                                        "at",
                                                        "maiores",
                                                        "molestiae",
                                                        "quod",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="quod",
                                                    match="PARTIAL",
                                                    values=[
                                                        "porro",
                                                        "dolorum",
                                                        "dicta",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="nam",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "fugit",
                                                        "deleniti",
                                                        "hic",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="optio",
                                                    match="PARTIAL",
                                                    values=[
                                                        "commodi",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="modi",
                                                    match="UNKNOWN",
                                                    values=[
                                                        "cum",
                                                        "esse",
                                                        "ipsum",
                                                        "excepturi",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="aspernatur",
                                                    match="UNKNOWN",
                                                    values=[
                                                        "natus",
                                                        "sed",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="dolor",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "hic",
                                                        "saepe",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="fuga",
                                                    match="PARTIAL",
                                                    values=[
                                                        "iste",
                                                        "iure",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="saepe",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "ipsa",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="est",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "dolores",
                                                        "dolorem",
                                                        "corporis",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="explicabo",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "omnis",
                                                        "nemo",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="minima",
                                                    match="PARTIAL",
                                                    values=[
                                                        "iure",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="culpa",
                                                    match="WILDCARD_EXPRESSION",
                                                    values=[
                                                        "architecto",
                                                        "mollitia",
                                                        "dolorem",
                                                        "culpa",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                ],
                                name="consequuntur",
                            ),
                            shared.Rule(
                                disjunctive_match_statements=[
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="occaecati",
                                                    match="EXACT",
                                                    values=[
                                                        "quam",
                                                        "molestiae",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="velit",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "quis",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="vitae",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "enim",
                                                        "odit",
                                                        "quo",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="tenetur",
                                                    match="EXACT",
                                                    values=[
                                                        "possimus",
                                                        "aut",
                                                        "quasi",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="temporibus",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "reiciendis",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="voluptatibus",
                                                    match="WILDCARD_EXPRESSION",
                                                    values=[
                                                        "praesentium",
                                                        "voluptatibus",
                                                    ],
                                                ),
                                            ),
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="ipsa",
                                                    match="BEGINS_WITH",
                                                    values=[
                                                        "cum",
                                                        "perferendis",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                    shared.DisjunctiveMatchStatement(
                                        event_filters=[
                                            shared.EventFilter(
                                                dimension_filter=shared.PathQueryOptionsFilter(
                                                    filter="reprehenderit",
                                                    match="EXACT",
                                                    values=[
                                                        "dicta",
                                                        "corporis",
                                                        "dolore",
                                                        "iusto",
                                                    ],
                                                ),
                                            ),
                                        ],
                                    ),
                                ],
                                name="dicta",
                            ),
                        ],
                    ),
                    path_filters=[
                        shared.PathFilter(
                            event_filters=[
                                shared.EventFilter(
                                    dimension_filter=shared.PathQueryOptionsFilter(
                                        filter="accusamus",
                                        match="PARTIAL",
                                        values=[
                                            "quae",
                                            "ipsum",
                                            "quidem",
                                            "molestias",
                                        ],
                                    ),
                                ),
                                shared.EventFilter(
                                    dimension_filter=shared.PathQueryOptionsFilter(
                                        filter="excepturi",
                                        match="WILDCARD_EXPRESSION",
                                        values=[
                                            "praesentium",
                                            "rem",
                                        ],
                                    ),
                                ),
                            ],
                            path_match_position="LAST",
                        ),
                        shared.PathFilter(
                            event_filters=[
                                shared.EventFilter(
                                    dimension_filter=shared.PathQueryOptionsFilter(
                                        filter="repudiandae",
                                        match="PARTIAL",
                                        values=[
                                            "itaque",
                                        ],
                                    ),
                                ),
                            ],
                            path_match_position="ANY",
                        ),
                        shared.PathFilter(
                            event_filters=[
                                shared.EventFilter(
                                    dimension_filter=shared.PathQueryOptionsFilter(
                                        filter="consequatur",
                                        match="BEGINS_WITH",
                                        values=[
                                            "explicabo",
                                            "deserunt",
                                            "distinctio",
                                            "quibusdam",
                                        ],
                                    ),
                                ),
                                shared.EventFilter(
                                    dimension_filter=shared.PathQueryOptionsFilter(
                                        filter="labore",
                                        match="EXACT",
                                        values=[
                                            "aliquid",
                                        ],
                                    ),
                                ),
                            ],
                            path_match_position="FIRST",
                        ),
                    ],
                ),
            ),
            type="GRP",
        ),
        schedule=shared.QuerySchedule(
            end_date=shared.Date(
                day=20107,
                month=164940,
                year=828940,
            ),
            frequency="DAILY",
            next_run_timezone_code="alias",
            start_date=shared.Date(
                day=146441,
                month=677817,
                year=569618,
            ),
        ),
    ),
    access_token="tempora",
    alt="proto",
    callback="tempore",
    fields_="labore",
    key="delectus",
    oauth_token="eum",
    pretty_print=False,
    quota_user="non",
    upload_type="eligendi",
    upload_protocol="sint",
)
    
res = s.queries.doubleclickbidmanager_queries_create(req, operations.DoubleclickbidmanagerQueriesCreateSecurity(
    oauth2="Bearer YOUR_ACCESS_TOKEN_HERE",
    oauth2c="Bearer YOUR_ACCESS_TOKEN_HERE",
))

if res.query is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### queries

* `doubleclickbidmanager_queries_create` - Creates a query.
* `doubleclickbidmanager_queries_delete` - Deletes a query as well as the associated reports.
* `doubleclickbidmanager_queries_get` - Retrieves a query.
* `doubleclickbidmanager_queries_list` - Lists queries created by the current user.
* `doubleclickbidmanager_queries_reports_get` - Retrieves a report.
* `doubleclickbidmanager_queries_reports_list` - Lists reports associated with a query.
* `doubleclickbidmanager_queries_run` - Runs a stored query to generate a report.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
