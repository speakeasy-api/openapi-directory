/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class AddChannelTagSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class AddChannelTagRequest extends SpeakeasyBase {
  /**
   * The ID of the channel.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=channel_id",
  })
  channelId: number;

  /**
   * The word to use as the tag.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=word",
  })
  word: string;
}

export class AddChannelTagResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Error code 8003: The user credentials are invalid.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * * The tag is invalid, or a parameter is invalid.
   *
   * @remarks
   * * Error code 2501: The channel has already reached its maximum number of 20 tags.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;
}
