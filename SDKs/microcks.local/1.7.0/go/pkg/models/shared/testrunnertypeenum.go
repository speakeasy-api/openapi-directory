// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TestRunnerTypeEnum - Type of test strategy (different strategies are implemented by different runners)
type TestRunnerTypeEnum string

const (
	TestRunnerTypeEnumHTTP           TestRunnerTypeEnum = "HTTP"
	TestRunnerTypeEnumSoapHTTP       TestRunnerTypeEnum = "SOAP_HTTP"
	TestRunnerTypeEnumSoapUI         TestRunnerTypeEnum = "SOAP_UI"
	TestRunnerTypeEnumPostman        TestRunnerTypeEnum = "POSTMAN"
	TestRunnerTypeEnumOpenAPISchema  TestRunnerTypeEnum = "OPEN_API_SCHEMA"
	TestRunnerTypeEnumAsyncAPISchema TestRunnerTypeEnum = "ASYNC_API_SCHEMA"
	TestRunnerTypeEnumGrpcProtobuf   TestRunnerTypeEnum = "GRPC_PROTOBUF"
	TestRunnerTypeEnumGraphqlSchema  TestRunnerTypeEnum = "GRAPHQL_SCHEMA"
)

func (e TestRunnerTypeEnum) ToPointer() *TestRunnerTypeEnum {
	return &e
}

func (e *TestRunnerTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HTTP":
		fallthrough
	case "SOAP_HTTP":
		fallthrough
	case "SOAP_UI":
		fallthrough
	case "POSTMAN":
		fallthrough
	case "OPEN_API_SCHEMA":
		fallthrough
	case "ASYNC_API_SCHEMA":
		fallthrough
	case "GRPC_PROTOBUF":
		fallthrough
	case "GRAPHQL_SCHEMA":
		*e = TestRunnerTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestRunnerTypeEnum: %v", v)
	}
}
