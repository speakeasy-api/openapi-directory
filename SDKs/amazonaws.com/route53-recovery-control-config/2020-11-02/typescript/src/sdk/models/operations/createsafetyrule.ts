/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * A new assertion rule for a control panel.
 */
export class CreateSafetyRuleRequestBodyAssertionRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssertedControls" })
  assertedControls?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ControlPanelArn" })
  controlPanelArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleConfig" })
  @Type(() => shared.RuleConfig)
  ruleConfig?: shared.RuleConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "WaitPeriodMs" })
  waitPeriodMs?: number;
}

/**
 * A new gating rule for a control panel.
 */
export class CreateSafetyRuleRequestBodyGatingRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ControlPanelArn" })
  controlPanelArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GatingControls" })
  gatingControls?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleConfig" })
  @Type(() => shared.RuleConfig)
  ruleConfig?: shared.RuleConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetControls" })
  targetControls?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "WaitPeriodMs" })
  waitPeriodMs?: number;
}

export class CreateSafetyRuleRequestBody extends SpeakeasyBase {
  /**
   * A new assertion rule for a control panel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AssertionRule" })
  @Type(() => CreateSafetyRuleRequestBodyAssertionRule)
  assertionRule?: CreateSafetyRuleRequestBodyAssertionRule;

  /**
   * A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken?: string;

  /**
   * A new gating rule for a control panel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GatingRule" })
  @Type(() => CreateSafetyRuleRequestBodyGatingRule)
  gatingRule?: CreateSafetyRuleRequestBodyGatingRule;

  /**
   * The tags associated with the safety rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}

export class CreateSafetyRuleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateSafetyRuleRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateSafetyRuleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createSafetyRuleResponse?: shared.CreateSafetyRuleResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
