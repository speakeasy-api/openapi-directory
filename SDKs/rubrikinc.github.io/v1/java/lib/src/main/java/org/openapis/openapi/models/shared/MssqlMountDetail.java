/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MssqlMountDetail - Returns detailed information for a specified Live Mount of a SQL Server database.
 */
public class MssqlMountDetail {
    /**
     * The date this mount was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDate")
    public OffsetDateTime creationDate;

    public MssqlMountDetail withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public MssqlMountDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("links")
    public MssqlMountLinks links;

    public MssqlMountDetail withLinks(MssqlMountLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * ID of the async request object for the mount task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountRequestId")
    public String mountRequestId;

    public MssqlMountDetail withMountRequestId(String mountRequestId) {
        this.mountRequestId = mountRequestId;
        return this;
    }
    
    /**
     * ID for the mounted SQL Server database, once it is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountedDatabaseId")
    public String mountedDatabaseId;

    public MssqlMountDetail withMountedDatabaseId(String mountedDatabaseId) {
        this.mountedDatabaseId = mountedDatabaseId;
        return this;
    }
    
    /**
     * Name for the mounted SQL Server database.
     */
    @JsonProperty("mountedDatabaseName")
    public String mountedDatabaseName;

    public MssqlMountDetail withMountedDatabaseName(String mountedDatabaseName) {
        this.mountedDatabaseName = mountedDatabaseName;
        return this;
    }
    
    /**
     * ID of the user who created this mount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerId")
    public String ownerId;

    public MssqlMountDetail withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * Name of the user who created this mount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerName")
    public String ownerName;

    public MssqlMountDetail withOwnerName(String ownerName) {
        this.ownerName = ownerName;
        return this;
    }
    
    @JsonProperty("sourceDatabaseId")
    public String sourceDatabaseId;

    public MssqlMountDetail withSourceDatabaseId(String sourceDatabaseId) {
        this.sourceDatabaseId = sourceDatabaseId;
        return this;
    }
    
    @JsonProperty("sourceDatabaseName")
    public String sourceDatabaseName;

    public MssqlMountDetail withSourceDatabaseName(String sourceDatabaseName) {
        this.sourceDatabaseName = sourceDatabaseName;
        return this;
    }
    
    @JsonProperty("sourceRecoveryPoint")
    public MssqlRecoveryPoint sourceRecoveryPoint;

    public MssqlMountDetail withSourceRecoveryPoint(MssqlRecoveryPoint sourceRecoveryPoint) {
        this.sourceRecoveryPoint = sourceRecoveryPoint;
        return this;
    }
    
    /**
     * The status of this mount. The status is **_Available_** when the database is successfully mounted and ready to use.
     */
    @JsonProperty("status")
    public MssqlMountDetailStatusEnum status;

    public MssqlMountDetail withStatus(MssqlMountDetailStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("targetInstanceId")
    public String targetInstanceId;

    public MssqlMountDetail withTargetInstanceId(String targetInstanceId) {
        this.targetInstanceId = targetInstanceId;
        return this;
    }
    
    @JsonProperty("targetInstanceName")
    public String targetInstanceName;

    public MssqlMountDetail withTargetInstanceName(String targetInstanceName) {
        this.targetInstanceName = targetInstanceName;
        return this;
    }
    
    /**
     * Name of the top-level object on which the target instance resides.
     */
    @JsonProperty("targetRootName")
    public String targetRootName;

    public MssqlMountDetail withTargetRootName(String targetRootName) {
        this.targetRootName = targetRootName;
        return this;
    }
    
    /**
     * ID of the async request object for the delete task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unmountRequestId")
    public String unmountRequestId;

    public MssqlMountDetail withUnmountRequestId(String unmountRequestId) {
        this.unmountRequestId = unmountRequestId;
        return this;
    }
    
    public MssqlMountDetail(@JsonProperty("creationDate") OffsetDateTime creationDate, @JsonProperty("id") String id, @JsonProperty("links") MssqlMountLinks links, @JsonProperty("mountedDatabaseName") String mountedDatabaseName, @JsonProperty("sourceDatabaseId") String sourceDatabaseId, @JsonProperty("sourceDatabaseName") String sourceDatabaseName, @JsonProperty("sourceRecoveryPoint") MssqlRecoveryPoint sourceRecoveryPoint, @JsonProperty("status") MssqlMountDetailStatusEnum status, @JsonProperty("targetInstanceId") String targetInstanceId, @JsonProperty("targetInstanceName") String targetInstanceName, @JsonProperty("targetRootName") String targetRootName) {
        this.creationDate = creationDate;
        this.id = id;
        this.links = links;
        this.mountedDatabaseName = mountedDatabaseName;
        this.sourceDatabaseId = sourceDatabaseId;
        this.sourceDatabaseName = sourceDatabaseName;
        this.sourceRecoveryPoint = sourceRecoveryPoint;
        this.status = status;
        this.targetInstanceId = targetInstanceId;
        this.targetInstanceName = targetInstanceName;
        this.targetRootName = targetRootName;
  }
}
