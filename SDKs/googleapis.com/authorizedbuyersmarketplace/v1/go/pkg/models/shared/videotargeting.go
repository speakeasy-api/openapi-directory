// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VideoTargetingExcludedPositionTypesEnum string

const (
	VideoTargetingExcludedPositionTypesEnumPositionTypeUnspecified VideoTargetingExcludedPositionTypesEnum = "POSITION_TYPE_UNSPECIFIED"
	VideoTargetingExcludedPositionTypesEnumPreroll                 VideoTargetingExcludedPositionTypesEnum = "PREROLL"
	VideoTargetingExcludedPositionTypesEnumMidroll                 VideoTargetingExcludedPositionTypesEnum = "MIDROLL"
	VideoTargetingExcludedPositionTypesEnumPostroll                VideoTargetingExcludedPositionTypesEnum = "POSTROLL"
)

func (e VideoTargetingExcludedPositionTypesEnum) ToPointer() *VideoTargetingExcludedPositionTypesEnum {
	return &e
}

func (e *VideoTargetingExcludedPositionTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POSITION_TYPE_UNSPECIFIED":
		fallthrough
	case "PREROLL":
		fallthrough
	case "MIDROLL":
		fallthrough
	case "POSTROLL":
		*e = VideoTargetingExcludedPositionTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoTargetingExcludedPositionTypesEnum: %v", v)
	}
}

type VideoTargetingTargetedPositionTypesEnum string

const (
	VideoTargetingTargetedPositionTypesEnumPositionTypeUnspecified VideoTargetingTargetedPositionTypesEnum = "POSITION_TYPE_UNSPECIFIED"
	VideoTargetingTargetedPositionTypesEnumPreroll                 VideoTargetingTargetedPositionTypesEnum = "PREROLL"
	VideoTargetingTargetedPositionTypesEnumMidroll                 VideoTargetingTargetedPositionTypesEnum = "MIDROLL"
	VideoTargetingTargetedPositionTypesEnumPostroll                VideoTargetingTargetedPositionTypesEnum = "POSTROLL"
)

func (e VideoTargetingTargetedPositionTypesEnum) ToPointer() *VideoTargetingTargetedPositionTypesEnum {
	return &e
}

func (e *VideoTargetingTargetedPositionTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POSITION_TYPE_UNSPECIFIED":
		fallthrough
	case "PREROLL":
		fallthrough
	case "MIDROLL":
		fallthrough
	case "POSTROLL":
		*e = VideoTargetingTargetedPositionTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoTargetingTargetedPositionTypesEnum: %v", v)
	}
}

// VideoTargeting - Represents targeting information about video.
type VideoTargeting struct {
	// A list of video positions to be excluded. When this field is populated, the targeted_position_types field must be empty.
	ExcludedPositionTypes []VideoTargetingExcludedPositionTypesEnum `json:"excludedPositionTypes,omitempty"`
	// A list of video positions to be included. When this field is populated, the excluded_position_types field must be empty.
	TargetedPositionTypes []VideoTargetingTargetedPositionTypesEnum `json:"targetedPositionTypes,omitempty"`
}
