<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VirtualMachineDetail - Virtual machine details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VirtualMachineDetail
{
	#[\JMS\Serializer\Annotation\SerializedName('agentStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AgentStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AgentStatus $agentStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('blackoutWindowStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BlackoutWindowStatus')]
    public BlackoutWindowStatus $blackoutWindowStatus;
    
	#[\JMS\Serializer\Annotation\SerializedName('blackoutWindows')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BlackoutWindows')]
    public BlackoutWindows $blackoutWindows;
    
    /**
     * Current CDP State of virtual machine.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CdpStateEnum $cdpState
     */
	#[\JMS\Serializer\Annotation\SerializedName('cdpState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CdpStateEnum>')]
    public CdpStateEnum $cdpState;
    
	#[\JMS\Serializer\Annotation\SerializedName('cloudInstantiationSpec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CloudInstantiationSpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CloudInstantiationSpec $cloudInstantiationSpec = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('clusterName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clusterName = null;
    
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainId;
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainName;
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum $configuredSlaDomainType
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfiguredSlaTypeEnum $configuredSlaDomainType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('currentHost')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VmwareHostSummary')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareHostSummary $currentHost = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomain')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SlaDomainSummary')]
    public SlaDomainSummary $effectiveSlaDomain;
    
    /**
     * The ID of the SLA Domain that controls the protection of the Rubrik object.
     * 
     * @var string $effectiveSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainId;
    
    /**
     * The name of the SLA Domain that controls the protection of the Rubrik object.
     * 
     * @var string $effectiveSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainName;
    
    /**
     * Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
     * 
     * @var ?string $effectiveSlaDomainPolarisManagedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainPolarisManagedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaDomainPolarisManagedId = null;
    
    /**
     * The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     * 
     * @var ?string $effectiveSlaSourceObjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaSourceObjectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaSourceObjectId = null;
    
    /**
     * The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     * 
     * @var ?string $effectiveSlaSourceObjectName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaSourceObjectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaSourceObjectName = null;
    
    /**
     * Brief info of all the objects in the folder path to this VM.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VmPathPoint> $folderPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('folderPath')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VmPathPoint>')]
    public array $folderPath;
    
	#[\JMS\Serializer\Annotation\SerializedName('guestCredential')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BaseGuestCredentialDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BaseGuestCredentialDetail $guestCredential = null;
    
    /**
     * Status of authentication with a specific virtual machine using guest credentials. Possible values are: SUCCESSFUL, PENDING, or FAILED.
     * 
     * @var string $guestCredentialAuthorizationStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestCredentialAuthorizationStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $guestCredentialAuthorizationStatus;
    
	#[\JMS\Serializer\Annotation\SerializedName('guestOsName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $guestOsName = null;
    
    /**
     * Type of operating system used by the VMware virtual machine.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailGuestOsTypeEnum $guestOsType
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestOsType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailGuestOsTypeEnum>')]
    public VirtualMachineDetailGuestOsTypeEnum $guestOsType;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostName = null;
    
    /**
     * The ID of the Rubrik object.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Brief info of all the objects in the infrastructure path to this VM.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VmPathPoint> $infraPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('infraPath')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VmPathPoint>')]
    public array $infraPath;
    
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipAddress;
    
    /**
     * Boolean value that indicates whether the Rubrik Backup Service is installed and registered for the specified virtual machine. Set to 'true' when the Rubrik Backup Service is installed and registered and in all other cases set to 'false'.
     * 
     * @var ?bool $isAgentRegistered
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAgentRegistered')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAgentRegistered = null;
    
    /**
     * Boolean value that determines whether the available storage array integration is used with the specified virtual machine. Set to 'true' to use storage array integration and set to 'false' to not use storage array integration. Refer to the value of 'isArrayIntegrationPossible' to determine whether storage array integration is available for a virtual machine.
     * 
     * @var bool $isArrayIntegrationEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('isArrayIntegrationEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isArrayIntegrationEnabled;
    
    /**
     * Boolean value that indicates whether the performance enhancements of storage array integration are available for the specified virtual machine object. Storage array integration is available when all of the datastores that are assigned to the virtual machine reside on a qualified storage array. Set to 'true' when storage array integration is available and set to 'false' when storage array integration is not available.
     * 
     * @var bool $isArrayIntegrationPossible
     */
	#[\JMS\Serializer\Annotation\SerializedName('isArrayIntegrationPossible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isArrayIntegrationPossible;
    
	#[\JMS\Serializer\Annotation\SerializedName('isCdpEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isCdpEnabled;
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isConfiguredSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isConfiguredSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isConfiguredSlaDomainRetentionLocked = null;
    
    /**
     * Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isEffectiveSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEffectiveSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEffectiveSlaDomainRetentionLocked = null;
    
    /**
     * A Boolean that specifies whether the virtual machine is in a VMC environment.
     * 
     * @var bool $isInVmc
     */
	#[\JMS\Serializer\Annotation\SerializedName('isInVmc')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isInVmc;
    
	#[\JMS\Serializer\Annotation\SerializedName('isRelic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isRelic;
    
	#[\JMS\Serializer\Annotation\SerializedName('isReplicationEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isReplicationEnabled;
    
    /**
     * Whether to pause or resume backups/archival for this VM.
     * 
     * @var ?bool $isVmPaused
     */
	#[\JMS\Serializer\Annotation\SerializedName('isVmPaused')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isVmPaused = null;
    
    /**
     * Latest point in time that we can recover to if this is a CDP enabled VM.
     * 
     * @var ?\DateTime $latestRecoveryPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('latestRecoveryPoint')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $latestRecoveryPoint = null;
    
    /**
     * This returns the sum of all virtual disk sizes in the specified virtual machine.
     * 
     * @var ?int $logicalSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('logicalSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $logicalSize = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('maxNestedVsphereSnapshots')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $maxNestedVsphereSnapshots;
    
	#[\JMS\Serializer\Annotation\SerializedName('moid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $moid;
    
    /**
     * The name of the Rubrik object.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Oldest point in time that we can recover to if this is a CDP enabled VM.
     * 
     * @var ?\DateTime $oldestRecoveryPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('oldestRecoveryPoint')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $oldestRecoveryPoint = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('parentAppInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ParentAppInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ParentAppInfo $parentAppInfo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pendingSlaDomain')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedObjectPendingSlaInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedObjectPendingSlaInfo $pendingSlaDomain = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('physicalStorage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $physicalStorage;
    
	#[\JMS\Serializer\Annotation\SerializedName('postBackupScript')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualMachineScriptDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineScriptDetail $postBackupScript = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('postSnapScript')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualMachineScriptDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineScriptDetail $postSnapScript = null;
    
    /**
     * The power status of VM(ON,OFF,SLEEP etc.).
     * 
     * @var ?string $powerStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('powerStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $powerStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('preBackupScript')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualMachineScriptDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineScriptDetail $preBackupScript = null;
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     * 
     * @var string $primaryClusterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryClusterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryClusterId;
    
	#[\JMS\Serializer\Annotation\SerializedName('protectionDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $protectionDate = null;
    
    /**
     * The ID of the SLA Domain whose retention policy is in use.
     * 
     * @var ?string $retentionSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $retentionSlaDomainId = null;
    
    /**
     * The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailSlaAssignmentEnum $slaAssignment
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaAssignment')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailSlaAssignmentEnum>')]
    public VirtualMachineDetailSlaAssignmentEnum $slaAssignment;
    
    /**
     * The UTC time when the SLA Domain was last updated.
     * 
     * @var ?\DateTime $slaLastUpdateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaLastUpdateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $slaLastUpdateTime = null;
    
    /**
     * Consistency level mandated for this VM or empty string for none.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailSnapshotConsistencyMandateEnum $snapshotConsistencyMandate
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotConsistencyMandate')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailSnapshotConsistencyMandateEnum>')]
    public VirtualMachineDetailSnapshotConsistencyMandateEnum $snapshotConsistencyMandate;
    
	#[\JMS\Serializer\Annotation\SerializedName('snapshotCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $snapshotCount = null;
    
    /**
     * $snapshots
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\VmSnapshotSummary> $snapshots
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshots')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VmSnapshotSummary>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $snapshots = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('throttlingSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VmwareAdaptiveThrottlingSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareAdaptiveThrottlingSettings $throttlingSettings = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('toolsInstalled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $toolsInstalled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vcenterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vcenterId = null;
    
    /**
     * The name of vCenter that the virtual machine belongs to.
     * 
     * @var string $vcenterName
     */
	#[\JMS\Serializer\Annotation\SerializedName('vcenterName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $vcenterName;
    
    /**
     * $virtualDiskIds
     * 
     * @var ?array<string> $virtualDiskIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('virtualDiskIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $virtualDiskIds = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vmwareToolsInstalled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $vmwareToolsInstalled;
    
	public function __construct()
	{
		$this->agentStatus = null;
		$this->blackoutWindowStatus = new \OpenAPI\OpenAPI\Models\Shared\BlackoutWindowStatus();
		$this->blackoutWindows = new \OpenAPI\OpenAPI\Models\Shared\BlackoutWindows();
		$this->cdpState = \OpenAPI\OpenAPI\Models\Shared\CdpStateEnum::NOT_ENABLED;
		$this->cloudInstantiationSpec = null;
		$this->clusterName = null;
		$this->configuredSlaDomainId = "";
		$this->configuredSlaDomainName = "";
		$this->configuredSlaDomainType = null;
		$this->currentHost = null;
		$this->effectiveSlaDomain = new \OpenAPI\OpenAPI\Models\Shared\SlaDomainSummary();
		$this->effectiveSlaDomainId = "";
		$this->effectiveSlaDomainName = "";
		$this->effectiveSlaDomainPolarisManagedId = null;
		$this->effectiveSlaSourceObjectId = null;
		$this->effectiveSlaSourceObjectName = null;
		$this->folderPath = [];
		$this->guestCredential = null;
		$this->guestCredentialAuthorizationStatus = "";
		$this->guestOsName = null;
		$this->guestOsType = \OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailGuestOsTypeEnum::LINUX;
		$this->hostId = null;
		$this->hostName = null;
		$this->id = "";
		$this->infraPath = [];
		$this->ipAddress = "";
		$this->isAgentRegistered = null;
		$this->isArrayIntegrationEnabled = false;
		$this->isArrayIntegrationPossible = false;
		$this->isCdpEnabled = false;
		$this->isConfiguredSlaDomainRetentionLocked = null;
		$this->isEffectiveSlaDomainRetentionLocked = null;
		$this->isInVmc = false;
		$this->isRelic = false;
		$this->isReplicationEnabled = false;
		$this->isVmPaused = null;
		$this->latestRecoveryPoint = null;
		$this->logicalSize = null;
		$this->maxNestedVsphereSnapshots = 0;
		$this->moid = "";
		$this->name = "";
		$this->oldestRecoveryPoint = null;
		$this->parentAppInfo = null;
		$this->pendingSlaDomain = null;
		$this->physicalStorage = 0;
		$this->postBackupScript = null;
		$this->postSnapScript = null;
		$this->powerStatus = null;
		$this->preBackupScript = null;
		$this->primaryClusterId = "";
		$this->protectionDate = null;
		$this->retentionSlaDomainId = null;
		$this->slaAssignment = \OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailSlaAssignmentEnum::DERIVED;
		$this->slaLastUpdateTime = null;
		$this->snapshotConsistencyMandate = \OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailSnapshotConsistencyMandateEnum::UNKNOWN;
		$this->snapshotCount = null;
		$this->snapshots = null;
		$this->throttlingSettings = null;
		$this->toolsInstalled = null;
		$this->vcenterId = null;
		$this->vcenterName = "";
		$this->virtualDiskIds = null;
		$this->vmwareToolsInstalled = false;
	}
}
