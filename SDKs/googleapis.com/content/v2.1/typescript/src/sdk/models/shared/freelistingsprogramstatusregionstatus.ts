/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FreeListingsProgramStatusReviewIneligibilityReasonDetails } from "./freelistingsprogramstatusreviewineligibilityreasondetails";
import { Expose, Type } from "class-transformer";

/**
 * Eligibility status of the standard free listing program.
 */
export enum FreeListingsProgramStatusRegionStatusEligibilityStatusEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Approved = "APPROVED",
  Disapproved = "DISAPPROVED",
  Warning = "WARNING",
  UnderReview = "UNDER_REVIEW",
  PendingReview = "PENDING_REVIEW",
  Onboarding = "ONBOARDING",
}

/**
 * If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
 */
export enum FreeListingsProgramStatusRegionStatusReviewEligibilityStatusEnum {
  ReviewEligibilityUnspecified = "REVIEW_ELIGIBILITY_UNSPECIFIED",
  Eligible = "ELIGIBLE",
  Ineligible = "INELIGIBLE",
}

/**
 * Review ineligibility reason if account is not eligible for review.
 */
export enum FreeListingsProgramStatusRegionStatusReviewIneligibilityReasonEnum {
  ReviewIneligibilityReasonUnspecified = "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED",
  OnboardingIssues = "ONBOARDING_ISSUES",
  NotEnoughOffers = "NOT_ENOUGH_OFFERS",
  InCooldownPeriod = "IN_COOLDOWN_PERIOD",
  AlreadyUnderReview = "ALREADY_UNDER_REVIEW",
  NoReviewRequired = "NO_REVIEW_REQUIRED",
  WillBeReviewedAutomatically = "WILL_BE_REVIEWED_AUTOMATICALLY",
  IsRetired = "IS_RETIRED",
  AlreadyReviewed = "ALREADY_REVIEWED",
}

/**
 * Status of program and region.
 */
export class FreeListingsProgramStatusRegionStatus extends SpeakeasyBase {
  /**
   * Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disapprovalDate" })
  disapprovalDate?: string;

  /**
   * Eligibility status of the standard free listing program.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eligibilityStatus" })
  eligibilityStatus?: FreeListingsProgramStatusRegionStatusEligibilityStatusEnum;

  /**
   * Issues that must be fixed to be eligible for review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "onboardingIssues" })
  onboardingIssues?: string[];

  /**
   * The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "regionCodes" })
  regionCodes?: string[];

  /**
   * If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewEligibilityStatus" })
  reviewEligibilityStatus?: FreeListingsProgramStatusRegionStatusReviewEligibilityStatusEnum;

  /**
   * Review ineligibility reason if account is not eligible for review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewIneligibilityReason" })
  reviewIneligibilityReason?: FreeListingsProgramStatusRegionStatusReviewIneligibilityReasonEnum;

  /**
   * Reason a program in a specific region isnâ€™t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewIneligibilityReasonDescription" })
  reviewIneligibilityReasonDescription?: string;

  /**
   * Additional details for review ineligibility reasons.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewIneligibilityReasonDetails" })
  @Type(() => FreeListingsProgramStatusReviewIneligibilityReasonDetails)
  reviewIneligibilityReasonDetails?: FreeListingsProgramStatusReviewIneligibilityReasonDetails;

  /**
   * Issues evaluated in the review process. Fix all issues before requesting a review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewIssues" })
  reviewIssues?: string[];
}
