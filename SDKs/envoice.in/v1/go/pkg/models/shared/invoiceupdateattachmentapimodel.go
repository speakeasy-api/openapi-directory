// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvoiceUpdateAttachmentAPIModelTypeEnum - Type of the link (Attached or external)
type InvoiceUpdateAttachmentAPIModelTypeEnum string

const (
	InvoiceUpdateAttachmentAPIModelTypeEnumExternal InvoiceUpdateAttachmentAPIModelTypeEnum = "External"
	InvoiceUpdateAttachmentAPIModelTypeEnumUploaded InvoiceUpdateAttachmentAPIModelTypeEnum = "Uploaded"
)

func (e InvoiceUpdateAttachmentAPIModelTypeEnum) ToPointer() *InvoiceUpdateAttachmentAPIModelTypeEnum {
	return &e
}

func (e *InvoiceUpdateAttachmentAPIModelTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "External":
		fallthrough
	case "Uploaded":
		*e = InvoiceUpdateAttachmentAPIModelTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceUpdateAttachmentAPIModelTypeEnum: %v", v)
	}
}

type InvoiceUpdateAttachmentAPIModel struct {
	// Id of invoice attachment
	ID *int `json:"Id,omitempty"`
	// Link to the file
	Link *string `json:"Link,omitempty"`
	// Hashed file name to avoid url wildguessing
	ObfuscatedFileName *string `json:"ObfuscatedFileName,omitempty"`
	// Name of the file
	OriginalFileName *string `json:"OriginalFileName,omitempty"`
	// File size number in bytes
	Size *int64 `json:"Size,omitempty"`
	// Type of the link (Attached or external)
	Type *InvoiceUpdateAttachmentAPIModelTypeEnum `json:"Type,omitempty"`
}
