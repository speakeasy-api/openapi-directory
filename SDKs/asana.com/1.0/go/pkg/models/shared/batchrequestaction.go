// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BatchRequestActionMethodEnum - The HTTP method you wish to emulate for the action.
type BatchRequestActionMethodEnum string

const (
	BatchRequestActionMethodEnumGet    BatchRequestActionMethodEnum = "get"
	BatchRequestActionMethodEnumPost   BatchRequestActionMethodEnum = "post"
	BatchRequestActionMethodEnumPut    BatchRequestActionMethodEnum = "put"
	BatchRequestActionMethodEnumDelete BatchRequestActionMethodEnum = "delete"
	BatchRequestActionMethodEnumPatch  BatchRequestActionMethodEnum = "patch"
	BatchRequestActionMethodEnumHead   BatchRequestActionMethodEnum = "head"
)

func (e BatchRequestActionMethodEnum) ToPointer() *BatchRequestActionMethodEnum {
	return &e
}

func (e *BatchRequestActionMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "get":
		fallthrough
	case "post":
		fallthrough
	case "put":
		fallthrough
	case "delete":
		fallthrough
	case "patch":
		fallthrough
	case "head":
		*e = BatchRequestActionMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchRequestActionMethodEnum: %v", v)
	}
}

// BatchRequestActionOptions - Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.
type BatchRequestActionOptions struct {
	// The fields to retrieve in the request.
	Fields []string `json:"fields,omitempty"`
	// Pagination limit for the request.
	Limit *int64 `json:"limit,omitempty"`
	// Pagination offset for the request.
	Offset *int64 `json:"offset,omitempty"`
}

// BatchRequestAction - An action object for use in a batch request.
type BatchRequestAction struct {
	// For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
	Data map[string]interface{} `json:"data,omitempty"`
	// The HTTP method you wish to emulate for the action.
	Method BatchRequestActionMethodEnum `json:"method"`
	// Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.
	Options *BatchRequestActionOptions `json:"options,omitempty"`
	// The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
	RelativePath string `json:"relative_path"`
}
