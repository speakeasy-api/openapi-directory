/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * EndUserAgreement.
 */
export class EndUserAgreement extends SpeakeasyBase {
  /**
   * The date & time at which the end user accepted the agreement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accepted" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  accepted?: Date;

  /**
   * Array containing one or several values of ['balances', 'details', 'transactions']
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_scope" })
  accessScope?: any[][];

  /**
   * Number of days from acceptance that the access can be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_valid_for_days" })
  accessValidForDays?: number;

  /**
   * The date & time at which the end user agreement was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * The ID of this End User Agreement, used to refer to this end user agreement in other API calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * an Institution ID for this EUA
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution_id" })
  institutionId: string;

  /**
   * Maximum number of days of transaction data to retrieve.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_historical_days" })
  maxHistoricalDays?: number;
}
