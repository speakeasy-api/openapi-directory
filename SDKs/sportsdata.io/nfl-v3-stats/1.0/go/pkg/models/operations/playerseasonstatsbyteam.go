// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayerSeasonStatsByTeamFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayerSeasonStatsByTeamFormatEnum string

const (
	PlayerSeasonStatsByTeamFormatEnumXML  PlayerSeasonStatsByTeamFormatEnum = "XML"
	PlayerSeasonStatsByTeamFormatEnumJSON PlayerSeasonStatsByTeamFormatEnum = "JSON"
)

func (e *PlayerSeasonStatsByTeamFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = PlayerSeasonStatsByTeamFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerSeasonStatsByTeamFormatEnum: %s", s)
	}
}

type PlayerSeasonStatsByTeamRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayerSeasonStatsByTeamFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	//           Year of the season and the season type. If no season type is provided, then the default is regular season.
	//           <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
	//
	Season string `pathParam:"style=simple,explode=false,name=season"`
	// Abbreviation of the team. Example: <code>WAS</code>.
	Team string `pathParam:"style=simple,explode=false,name=team"`
}

type PlayerSeasonStatsByTeamResponse struct {
	ContentType   string
	PlayerSeasons []shared.PlayerSeason
	StatusCode    int
	RawResponse   *http.Response
}
