"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import v1employee as shared_v1employee
from typing import Optional


@dataclasses.dataclass
class ListEmployeesSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListEmployeesRequest:
    
    batch_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'batch_token', 'style': 'form', 'explode': True }})
    r"""A pagination cursor to retrieve the next set of results for your
    original query to the endpoint.
    """  
    begin_created_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'begin_created_at', 'style': 'form', 'explode': True }})
    r"""If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format."""  
    begin_updated_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'begin_updated_at', 'style': 'form', 'explode': True }})
    r"""If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"""  
    end_created_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_created_at', 'style': 'form', 'explode': True }})
    r"""If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format."""  
    end_updated_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_updated_at', 'style': 'form', 'explode': True }})
    r"""If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."""  
    external_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'external_id', 'style': 'form', 'explode': True }})
    r"""If provided, the endpoint returns only employee entities with the specified external_id."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."""  
    order: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""The order in which employees are listed in the response, based on their created_at field.      Default value: ASC"""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE)."""  
    

@dataclasses.dataclass
class ListEmployeesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    v1_employees: Optional[list[shared_v1employee.V1Employee]] = dataclasses.field(default=None)
    r"""Success"""  
    