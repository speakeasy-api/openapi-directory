"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountDetails = exports.AccountDetailsUsageEnum = void 0;
var utils_1 = require("../../../internal/utils");
var accountstatusenum_1 = require("./accountstatusenum");
var balance_1 = require("./balance");
var hreftype_1 = require("./hreftype");
var class_transformer_1 = require("class-transformer");
/**
 * Specifies the usage of the account:
 *
 * @remarks
 *   * PRIV: private personal account
 *   * ORGA: professional account
 *
 */
var AccountDetailsUsageEnum;
(function (AccountDetailsUsageEnum) {
    AccountDetailsUsageEnum["Priv"] = "PRIV";
    AccountDetailsUsageEnum["Orga"] = "ORGA";
})(AccountDetailsUsageEnum = exports.AccountDetailsUsageEnum || (exports.AccountDetailsUsageEnum = {}));
/**
 * The ASPSP shall give at least one of the account reference identifiers:
 *
 * @remarks
 *   - iban
 *   - bban
 *   - pan
 *   - maskedPan
 *   - msisdn
 * If the account is a multicurrency account currency code in "currency" is set to "XXX".
 *
 */
var AccountDetails = /** @class */ (function (_super) {
    __extends(AccountDetails, _super);
    function AccountDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: hreftype_1.HrefType }),
        (0, class_transformer_1.Expose)({ name: "_links" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], hreftype_1.HrefType);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], AccountDetails.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: balance_1.Balance }),
        (0, class_transformer_1.Expose)({ name: "balances" }),
        (0, class_transformer_1.Type)(function () { return balance_1.Balance; }),
        __metadata("design:type", Array)
    ], AccountDetails.prototype, "balances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bban" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "bban", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bic" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "bic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cashAccountType" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "cashAccountType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "details" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "details", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iban" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "iban", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkedAccounts" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "linkedAccounts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "msisdn" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "msisdn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ownerName" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "ownerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "product" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "product", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceId" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "resourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "usage" }),
        __metadata("design:type", String)
    ], AccountDetails.prototype, "usage", void 0);
    return AccountDetails;
}(utils_1.SpeakeasyBase));
exports.AccountDetails = AccountDetails;
