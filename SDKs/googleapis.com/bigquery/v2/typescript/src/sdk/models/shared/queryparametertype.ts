/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class QueryParameterTypeStructTypes extends SpeakeasyBase {
  /**
   * [Optional] Human-oriented description of the field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * [Optional] The name of this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => QueryParameterType)
  type?: QueryParameterType;
}

export class QueryParameterType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arrayType" })
  @Type(() => QueryParameterType)
  arrayType?: QueryParameterType;

  /**
   * [Optional] The types of the fields of this struct, in order, if this is a struct.
   */
  @SpeakeasyMetadata({ elemType: QueryParameterTypeStructTypes })
  @Expose({ name: "structTypes" })
  @Type(() => QueryParameterTypeStructTypes)
  structTypes?: QueryParameterTypeStructTypes[];

  /**
   * [Required] The top level type of this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
