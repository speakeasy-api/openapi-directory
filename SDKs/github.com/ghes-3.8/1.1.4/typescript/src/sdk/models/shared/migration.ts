/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Repository } from "./repository";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A migration.
 */
export class Migration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "archive_url" })
  archiveUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "exclude" })
  exclude?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "exclude_attachments" })
  excludeAttachments: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exclude_git_data" })
  excludeGitData: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exclude_metadata" })
  excludeMetadata: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exclude_owner_projects" })
  excludeOwnerProjects: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exclude_releases" })
  excludeReleases: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "guid" })
  guid: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lock_repositories" })
  lockRepositories: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "org_metadata_only" })
  orgMetadataOnly: boolean;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => NullableSimpleUser)
  owner: NullableSimpleUser;

  /**
   * The repositories included in the migration. Only returned for export migrations.
   */
  @SpeakeasyMetadata({ elemType: Repository })
  @Expose({ name: "repositories" })
  @Type(() => Repository)
  repositories: Repository[];

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
