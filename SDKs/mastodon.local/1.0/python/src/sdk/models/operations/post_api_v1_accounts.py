"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostAPIV1AccountsSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostAPIV1AccountsRequestBody:
    
    agreement: bool = dataclasses.field()
    r"""Whether the user agrees to the local rules, terms, and policies. These should be presented to the user in order to allow them to consent before setting this parameter to TRUE."""  
    email: str = dataclasses.field()
    r"""The email address to be used for login"""  
    locale: str = dataclasses.field()
    r"""The language of the confirmation email that will be sent"""  
    password: str = dataclasses.field()
    r"""The password to be used for login"""  
    username: str = dataclasses.field()
    r"""The desired username for the account"""  
    reason: Optional[str] = dataclasses.field(default=None)
    r"""Text that will be reviewed by moderators if registrations require manual approval."""  
    

@dataclasses.dataclass
class PostAPIV1AccountsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    