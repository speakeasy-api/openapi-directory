<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETModifyClientVpnEndpointRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETModifyClientVpnEndpointActionEnum $action;
    
    /**
     * The options for managing connection authorization for new client connections.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointClientConnectOptions $clientConnectOptions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ClientConnectOptions')]
    public ?GETModifyClientVpnEndpointClientConnectOptions $clientConnectOptions = null;
    
    /**
     * Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointClientLoginBannerOptions $clientLoginBannerOptions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ClientLoginBannerOptions')]
    public ?GETModifyClientVpnEndpointClientLoginBannerOptions $clientLoginBannerOptions = null;
    
    /**
     * The ID of the Client VPN endpoint to modify.
     * 
     * @var string $clientVpnEndpointId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ClientVpnEndpointId')]
    public string $clientVpnEndpointId;
    
    /**
     * <p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointConnectionLogOptions $connectionLogOptions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ConnectionLogOptions')]
    public ?GETModifyClientVpnEndpointConnectionLogOptions $connectionLogOptions = null;
    
    /**
     * A brief description of the Client VPN endpoint.
     * 
     * @var ?string $description
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Description')]
    public ?string $description = null;
    
    /**
     * Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointDNSServers $dnsServers
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DnsServers')]
    public ?GETModifyClientVpnEndpointDNSServers $dnsServers = null;
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
     * 
     * @var ?bool $dryRun
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DryRun')]
    public ?bool $dryRun = null;
    
    /**
     * The IDs of one or more security groups to apply to the target network.
     * 
     * @var ?array<string> $securityGroupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SecurityGroupId')]
    public ?array $securityGroupId = null;
    
    /**
     * Specify whether to enable the self-service portal for the Client VPN endpoint.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointSelfServicePortalEnum $selfServicePortal
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SelfServicePortal')]
    public ?GETModifyClientVpnEndpointSelfServicePortalEnum $selfServicePortal = null;
    
    /**
     * The ARN of the server certificate to be used. The server certificate must be provisioned in Certificate Manager (ACM).
     * 
     * @var ?string $serverCertificateArn
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ServerCertificateArn')]
    public ?string $serverCertificateArn = null;
    
    /**
     * <p>The maximum VPN session duration time in hours.</p> <p>Valid values: <code>8 | 10 | 12 | 24</code> </p> <p>Default value: <code>24</code> </p>
     * 
     * @var ?int $sessionTimeoutHours
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SessionTimeoutHours')]
    public ?int $sessionTimeoutHours = null;
    
    /**
     * <p>Indicates whether the VPN is split-tunnel.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>
     * 
     * @var ?bool $splitTunnel
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SplitTunnel')]
    public ?bool $splitTunnel = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETModifyClientVpnEndpointVersionEnum $version;
    
    /**
     * The ID of the VPC to associate with the Client VPN endpoint.
     * 
     * @var ?string $vpcId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=VpcId')]
    public ?string $vpcId = null;
    
    /**
     * <p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>
     * 
     * @var ?int $vpnPort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=VpnPort')]
    public ?int $vpnPort = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointActionEnum::MODIFY_CLIENT_VPN_ENDPOINT;
		$this->clientConnectOptions = null;
		$this->clientLoginBannerOptions = null;
		$this->clientVpnEndpointId = "";
		$this->connectionLogOptions = null;
		$this->description = null;
		$this->dnsServers = null;
		$this->dryRun = null;
		$this->securityGroupId = null;
		$this->selfServicePortal = null;
		$this->serverCertificateArn = null;
		$this->sessionTimeoutHours = null;
		$this->splitTunnel = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETModifyClientVpnEndpointVersionEnum::TWO_THOUSAND_AND_SIXTEEN1115;
		$this->vpcId = null;
		$this->vpnPort = null;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
