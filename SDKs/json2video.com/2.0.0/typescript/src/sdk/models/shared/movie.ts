/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Scene } from "./scene";
import { Expose, Type } from "class-transformer";

/**
 * Draft movies include a watermark. Check your plan how many draft and final movies you have
 */
export enum MovieDraftEnum {
  True = "true",
  False = "false",
}

export enum MovieQualityEnum {
  Low = "low",
  Medium = "medium",
  High = "high",
}

export enum MovieResolutionEnum {
  Sd = "sd",
  Hd = "hd",
  FullHd = "full-hd",
  Squared = "squared",
  InstagramStory = "instagram-story",
  InstagramFeed = "instagram-feed",
  TwitterLandscape = "twitter-landscape",
  TwitterPortrait = "twitter-portrait",
}

/**
 * Object defining the movie to be rendered
 */
export class Movie extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cache" })
  cache?: boolean;

  /**
   * Used for adding your comments
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * Draft movies include a watermark. Check your plan how many draft and final movies you have
   */
  @SpeakeasyMetadata()
  @Expose({ name: "draft" })
  draft?: MovieDraftEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "elements" })
  elements?: any[];

  /**
   * Frames per second
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fps" })
  fps?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "quality" })
  quality?: MovieQualityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "resolution" })
  resolution?: MovieResolutionEnum;

  @SpeakeasyMetadata({ elemType: Scene })
  @Expose({ name: "scenes" })
  @Type(() => Scene)
  scenes: Scene[];

  /**
   * Movie advanced settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settings" })
  settings?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}
