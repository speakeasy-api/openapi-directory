<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Pension 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Delete a Pension
     * 
     * Delete the specified ppension
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DeletePensionRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\DeletePensionResponse
     */
	public function deletePension(
        \OpenAPI\OpenAPI\Models\Operations\DeletePensionRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\DeletePensionResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}', \OpenAPI\OpenAPI\Models\Operations\DeletePensionRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DeletePensionResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Delete an Pension revision matching the specified revision date.
     * 
     * Deletes the specified pension revision for the matching revision date
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionResponse
     */
	public function deletePensionRevision(
        \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}/{EffectiveDate}', \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Delete an Pension revision matching the specified revision number.
     * 
     * Deletes the specified pension revision for the matching revision number
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionByNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionByNumberResponse
     */
	public function deletePensionRevisionByNumber(
        \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionByNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionByNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}/Revision/{RevisionNumber}', \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionByNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DeletePensionRevisionByNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get pension by effective date.
     * 
     * Returns the penion's state at the specified effective date.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPensionByEffectiveDateRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPensionByEffectiveDateResponse
     */
	public function getPensionByEffectiveDate(
        \OpenAPI\OpenAPI\Models\Operations\GetPensionByEffectiveDateRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPensionByEffectiveDateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}/{EffectiveDate}', \OpenAPI\OpenAPI\Models\Operations\GetPensionByEffectiveDateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPensionByEffectiveDateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pension = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Pension', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get pension from employer
     * 
     * Gets the specified pension from employer by pension code.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPensionFromEmployerRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPensionFromEmployerResponse
     */
	public function getPensionFromEmployer(
        \OpenAPI\OpenAPI\Models\Operations\GetPensionFromEmployerRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPensionFromEmployerResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}', \OpenAPI\OpenAPI\Models\Operations\GetPensionFromEmployerRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPensionFromEmployerResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pension = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Pension', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets the pension by revision number
     * 
     * Get the pension revision matching the specified revision number
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionByNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionByNumberResponse
     */
	public function getPensionRevisionByNumber(
        \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionByNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionByNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}/Revision/{RevisionNumber}', \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionByNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionByNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pension = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Pension', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get all pension revisions
     * 
     * Returns links to all revisions of the pension
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionsRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionsResponse
     */
	public function getPensionRevisions(
        \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionsRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}/Revisions', \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPensionRevisionsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->linkCollection = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\LinkCollection', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get pensions from employer at a given effective date.
     * 
     * Get links to all pensions for the employer on specified effective date.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPensionsByEffectiveDateRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPensionsByEffectiveDateResponse
     */
	public function getPensionsByEffectiveDate(
        \OpenAPI\OpenAPI\Models\Operations\GetPensionsByEffectiveDateRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPensionsByEffectiveDateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pensions/{EffectiveDate}', \OpenAPI\OpenAPI\Models\Operations\GetPensionsByEffectiveDateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPensionsByEffectiveDateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->linkCollection = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\LinkCollection', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get pensions from employer.
     * 
     * Get links to all pensions for the specified employer.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPensionsFromEmployerRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPensionsFromEmployerResponse
     */
	public function getPensionsFromEmployer(
        \OpenAPI\OpenAPI\Models\Operations\GetPensionsFromEmployerRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPensionsFromEmployerResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pensions', \OpenAPI\OpenAPI\Models\Operations\GetPensionsFromEmployerRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPensionsFromEmployerResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->linkCollection = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\LinkCollection', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Patches the pension
     * 
     * Patches the specified pension with the supplied values
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PatchPensionRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PatchPensionResponse
     */
	public function patchPension(
        \OpenAPI\OpenAPI\Models\Operations\PatchPensionRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PatchPensionResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}', \OpenAPI\OpenAPI\Models\Operations\PatchPensionRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "pension", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PatchPensionResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pension = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Pension', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Create a new Pension
     * 
     * Create a new pension object
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostPensionIntoEmployerRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostPensionIntoEmployerResponse
     */
	public function postPensionIntoEmployer(
        \OpenAPI\OpenAPI\Models\Operations\PostPensionIntoEmployerRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostPensionIntoEmployerResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pensions', \OpenAPI\OpenAPI\Models\Operations\PostPensionIntoEmployerRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "pension", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostPensionIntoEmployerResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 201) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->link = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Link', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates the Pension
     * 
     * Updates existing or inserts the specified pension object
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PutPensionIntoEmployerRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PutPensionIntoEmployerResponse
     */
	public function putPensionIntoEmployer(
        \OpenAPI\OpenAPI\Models\Operations\PutPensionIntoEmployerRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PutPensionIntoEmployerResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/Employer/{EmployerId}/Pension/{PensionId}', \OpenAPI\OpenAPI\Models\Operations\PutPensionIntoEmployerRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "pension", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PutPensionIntoEmployerResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pension = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Pension', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 404 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->errorModel = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ErrorModel', 'json');
            }
        }

        return $response;
    }
}