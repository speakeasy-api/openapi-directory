// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTimelineEventsRequestBodySortByEnum - Sort timeline events by the specified key value pair.
type ListTimelineEventsRequestBodySortByEnum string

const (
	ListTimelineEventsRequestBodySortByEnumEventTime ListTimelineEventsRequestBodySortByEnum = "EVENT_TIME"
)

func (e *ListTimelineEventsRequestBodySortByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EVENT_TIME":
		*e = ListTimelineEventsRequestBodySortByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTimelineEventsRequestBodySortByEnum: %s", s)
	}
}

// ListTimelineEventsRequestBodySortOrderEnum - Sorts the order of timeline events by the value specified in the <code>sortBy</code> field.
type ListTimelineEventsRequestBodySortOrderEnum string

const (
	ListTimelineEventsRequestBodySortOrderEnumAscending  ListTimelineEventsRequestBodySortOrderEnum = "ASCENDING"
	ListTimelineEventsRequestBodySortOrderEnumDescending ListTimelineEventsRequestBodySortOrderEnum = "DESCENDING"
)

func (e *ListTimelineEventsRequestBodySortOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = ListTimelineEventsRequestBodySortOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTimelineEventsRequestBodySortOrderEnum: %s", s)
	}
}

type ListTimelineEventsRequestBody struct {
	// <p>Filters the timeline events based on the provided conditional values. You can filter timeline events with the following keys:</p> <ul> <li> <p> <code>eventTime</code> </p> </li> <li> <p> <code>eventType</code> </p> </li> </ul> <p>Note the following when deciding how to use Filters:</p> <ul> <li> <p>If you don't specify a Filter, the response includes all timeline events.</p> </li> <li> <p>If you specify more than one filter in a single request, the response returns timeline events that match all filters.</p> </li> <li> <p>If you specify a filter with more than one value, the response returns timeline events that match any of the values provided.</p> </li> </ul>
	Filters []shared.Filter `json:"filters,omitempty"`
	// The Amazon Resource Name (ARN) of the incident that includes the timeline event.
	IncidentRecordArn string `json:"incidentRecordArn"`
	// The maximum number of results per page.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// The pagination token to continue to the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
	// Sort timeline events by the specified key value pair.
	SortBy *ListTimelineEventsRequestBodySortByEnum `json:"sortBy,omitempty"`
	// Sorts the order of timeline events by the value specified in the <code>sortBy</code> field.
	SortOrder *ListTimelineEventsRequestBodySortOrderEnum `json:"sortOrder,omitempty"`
}

type ListTimelineEventsRequest struct {
	RequestBody       ListTimelineEventsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListTimelineEventsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListTimelineEventsOutput *shared.ListTimelineEventsOutput
	StatusCode               int
	RawResponse              *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
