// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ObjectTypeEnumEnum string

const (
	ObjectTypeEnumEnumAssessment       ObjectTypeEnumEnum = "ASSESSMENT"
	ObjectTypeEnumEnumControlSet       ObjectTypeEnumEnum = "CONTROL_SET"
	ObjectTypeEnumEnumControl          ObjectTypeEnumEnum = "CONTROL"
	ObjectTypeEnumEnumDelegation       ObjectTypeEnumEnum = "DELEGATION"
	ObjectTypeEnumEnumAssessmentReport ObjectTypeEnumEnum = "ASSESSMENT_REPORT"
)

func (e ObjectTypeEnumEnum) ToPointer() *ObjectTypeEnumEnum {
	return &e
}

func (e *ObjectTypeEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASSESSMENT":
		fallthrough
	case "CONTROL_SET":
		fallthrough
	case "CONTROL":
		fallthrough
	case "DELEGATION":
		fallthrough
	case "ASSESSMENT_REPORT":
		*e = ObjectTypeEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ObjectTypeEnumEnum: %v", v)
	}
}
