/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChildList - A list of children of a file.
 */
public class ChildList {
    /**
     * The ETag of the list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public ChildList withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public ChildReference[] items;

    public ChildList withItems(ChildReference[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * This is always drive#childList.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public ChildList withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A link to the next page of children.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextLink")
    public String nextLink;

    public ChildList withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }
    
    /**
     * The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextPageToken")
    public String nextPageToken;

    public ChildList withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * A link back to this list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public ChildList withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    public ChildList(){}
}
