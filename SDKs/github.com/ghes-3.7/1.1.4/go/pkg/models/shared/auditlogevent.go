// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type AuditLogEventActorLocation struct {
	CountryName *string `json:"country_name,omitempty"`
}

type AuditLogEvent struct {
	// The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
	AtTimestamp *int64 `json:"@timestamp,omitempty"`
	// A unique identifier for an audit event.
	DocumentID *string `json:"_document_id,omitempty"`
	// The name of the action that was performed, for example `user.login` or `repo.create`.
	Action    *string `json:"action,omitempty"`
	Active    *bool   `json:"active,omitempty"`
	ActiveWas *bool   `json:"active_was,omitempty"`
	// The actor who performed the action.
	Actor *string `json:"actor,omitempty"`
	// The id of the actor who performed the action.
	ActorID       *int64                      `json:"actor_id,omitempty"`
	ActorLocation *AuditLogEventActorLocation `json:"actor_location,omitempty"`
	// The username of the account being blocked.
	BlockedUser *string                  `json:"blocked_user,omitempty"`
	Business    *string                  `json:"business,omitempty"`
	BusinessID  *int64                   `json:"business_id,omitempty"`
	Config      []map[string]interface{} `json:"config,omitempty"`
	ConfigWas   []map[string]interface{} `json:"config_was,omitempty"`
	ContentType *string                  `json:"content_type,omitempty"`
	// The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
	CreatedAt            *int64                   `json:"created_at,omitempty"`
	Data                 map[string]interface{}   `json:"data,omitempty"`
	DeployKeyFingerprint *string                  `json:"deploy_key_fingerprint,omitempty"`
	Emoji                *string                  `json:"emoji,omitempty"`
	Events               []map[string]interface{} `json:"events,omitempty"`
	EventsWere           []map[string]interface{} `json:"events_were,omitempty"`
	Explanation          *string                  `json:"explanation,omitempty"`
	Fingerprint          *string                  `json:"fingerprint,omitempty"`
	HookID               *int64                   `json:"hook_id,omitempty"`
	LimitedAvailability  *bool                    `json:"limited_availability,omitempty"`
	Message              *string                  `json:"message,omitempty"`
	Name                 *string                  `json:"name,omitempty"`
	OldUser              *string                  `json:"old_user,omitempty"`
	OpensshPublicKey     *string                  `json:"openssh_public_key,omitempty"`
	OperationType        *string                  `json:"operation_type,omitempty"`
	Org                  *string                  `json:"org,omitempty"`
	OrgID                *int64                   `json:"org_id,omitempty"`
	PreviousVisibility   *string                  `json:"previous_visibility,omitempty"`
	ReadOnly             *bool                    `json:"read_only,omitempty"`
	// The name of the repository.
	Repo *string `json:"repo,omitempty"`
	// The name of the repository.
	Repository       *string `json:"repository,omitempty"`
	RepositoryPublic *bool   `json:"repository_public,omitempty"`
	TargetLogin      *string `json:"target_login,omitempty"`
	Team             *string `json:"team,omitempty"`
	// The type of protocol (for example, HTTP or SSH) used to transfer Git data.
	TransportProtocol *int64 `json:"transport_protocol,omitempty"`
	// A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.
	TransportProtocolName *string `json:"transport_protocol_name,omitempty"`
	// The user that was affected by the action performed (if available).
	User   *string `json:"user,omitempty"`
	UserID *int64  `json:"user_id,omitempty"`
	// The repository visibility, for example `public` or `private`.
	Visibility *string `json:"visibility,omitempty"`
}
