"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprotoeventbusproperties as shared_enterprisecrmeventbusprotoeventbusproperties
from ..shared import enterprisecrmeventbusprotoeventparameters as shared_enterprisecrmeventbusprotoeventparameters
from ..shared import enterprisecrmeventbusprotonextteardowntask as shared_enterprisecrmeventbusprotonextteardowntask
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoTeardownTaskConfig:
    
    creator_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creatorEmail'), 'exclude': lambda f: f is None }})
    r"""The creator's email address."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. Unique identifier of the teardown task within this Config. We use this field as the identifier to find next teardown tasks."""  
    next_teardown_task: Optional[shared_enterprisecrmeventbusprotonextteardowntask.EnterpriseCrmEventbusProtoNextTeardownTask] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextTeardownTask'), 'exclude': lambda f: f is None }})
    r"""The teardown task that is next in line to be executed. We support only sequential execution of teardown tasks (i.e. no branching)."""  
    parameters: Optional[shared_enterprisecrmeventbusprotoeventparameters.EnterpriseCrmEventbusProtoEventParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see"""  
    properties: Optional[shared_enterprisecrmeventbusprotoeventbusproperties.EnterpriseCrmEventbusProtoEventBusProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""LINT.IfChange This message is used for storing key value pair properties for each Event / Task in the EventBus."""  
    teardown_task_implementation_class_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teardownTaskImplementationClassName'), 'exclude': lambda f: f is None }})
    r"""Required. Implementation class name."""  
    