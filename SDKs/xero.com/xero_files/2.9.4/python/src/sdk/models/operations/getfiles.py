"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import files as shared_files
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetFilesSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetFilesSortEnum(str, Enum):
    r"""values to sort by"""
    NAME = 'Name'
    SIZE = 'Size'
    CREATED_DATE_UTC = 'CreatedDateUTC'


@dataclasses.dataclass
class GetFilesRequest:
    
    xero_tenant_id: str = dataclasses.field(metadata={'header': { 'field_name': 'xero-tenant-id', 'style': 'simple', 'explode': False }})
    r"""Xero identifier for Tenant"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""number of records to skip for pagination"""  
    pagesize: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pagesize', 'style': 'form', 'explode': True }})
    r"""pass an optional page size value"""  
    sort: Optional[GetFilesSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""values to sort by"""  
    

@dataclasses.dataclass
class GetFilesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    files: Optional[shared_files.Files] = dataclasses.field(default=None)
    r"""search results matching criteria"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    