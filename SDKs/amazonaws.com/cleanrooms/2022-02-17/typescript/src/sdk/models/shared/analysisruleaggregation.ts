/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregateColumn } from "./aggregatecolumn";
import { AggregationConstraint } from "./aggregationconstraint";
import { JoinRequiredOptionEnum } from "./joinrequiredoptionenum";
import { ScalarFunctionsEnum } from "./scalarfunctionsenum";
import { Expose, Type } from "class-transformer";

/**
 * Enables query structure and specified queries that product aggregate statistics.
 */
export class AnalysisRuleAggregation extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AggregateColumn })
  @Expose({ name: "aggregateColumns" })
  @Type(() => AggregateColumn)
  aggregateColumns: AggregateColumn[];

  @SpeakeasyMetadata()
  @Expose({ name: "dimensionColumns" })
  dimensionColumns: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "joinColumns" })
  joinColumns: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "joinRequired" })
  joinRequired?: JoinRequiredOptionEnum;

  @SpeakeasyMetadata({ elemType: AggregationConstraint })
  @Expose({ name: "outputConstraints" })
  @Type(() => AggregationConstraint)
  outputConstraints: AggregationConstraint[];

  @SpeakeasyMetadata()
  @Expose({ name: "scalarFunctions" })
  scalarFunctions: ScalarFunctionsEnum[];
}
