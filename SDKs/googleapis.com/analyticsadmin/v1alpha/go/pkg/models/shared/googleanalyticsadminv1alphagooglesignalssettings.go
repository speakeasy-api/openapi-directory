// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum - Output only. Terms of Service acceptance.
type GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum string

const (
	GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnumGoogleSignalsConsentUnspecified  GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum = "GOOGLE_SIGNALS_CONSENT_UNSPECIFIED"
	GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnumGoogleSignalsConsentConsented    GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum = "GOOGLE_SIGNALS_CONSENT_CONSENTED"
	GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnumGoogleSignalsConsentNotConsented GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum = "GOOGLE_SIGNALS_CONSENT_NOT_CONSENTED"
)

func (e GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum) ToPointer() *GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum {
	return &e
}

func (e *GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GOOGLE_SIGNALS_CONSENT_UNSPECIFIED":
		fallthrough
	case "GOOGLE_SIGNALS_CONSENT_CONSENTED":
		fallthrough
	case "GOOGLE_SIGNALS_CONSENT_NOT_CONSENTED":
		*e = GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum: %v", v)
	}
}

// GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum - Status of this setting.
type GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum string

const (
	GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnumGoogleSignalsStateUnspecified GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum = "GOOGLE_SIGNALS_STATE_UNSPECIFIED"
	GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnumGoogleSignalsEnabled          GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum = "GOOGLE_SIGNALS_ENABLED"
	GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnumGoogleSignalsDisabled         GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum = "GOOGLE_SIGNALS_DISABLED"
)

func (e GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum) ToPointer() *GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum {
	return &e
}

func (e *GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GOOGLE_SIGNALS_STATE_UNSPECIFIED":
		fallthrough
	case "GOOGLE_SIGNALS_ENABLED":
		fallthrough
	case "GOOGLE_SIGNALS_DISABLED":
		*e = GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum: %v", v)
	}
}

// GoogleAnalyticsAdminV1alphaGoogleSignalsSettings - Settings values for Google Signals. This is a singleton resource.
type GoogleAnalyticsAdminV1alphaGoogleSignalsSettings struct {
	// Output only. Terms of Service acceptance.
	Consent *GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsConsentEnum `json:"consent,omitempty"`
	// Output only. Resource name of this setting. Format: properties/{property_id}/googleSignalsSettings Example: "properties/1000/googleSignalsSettings"
	Name *string `json:"name,omitempty"`
	// Status of this setting.
	State *GoogleAnalyticsAdminV1alphaGoogleSignalsSettingsStateEnum `json:"state,omitempty"`
}
