// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SuggestionClusterProtoCategoryEnum - Category in which these types of suggestions should appear. Always set.
type SuggestionClusterProtoCategoryEnum string

const (
	SuggestionClusterProtoCategoryEnumUnknownCategory SuggestionClusterProtoCategoryEnum = "unknownCategory"
	SuggestionClusterProtoCategoryEnumContentLabeling SuggestionClusterProtoCategoryEnum = "contentLabeling"
	SuggestionClusterProtoCategoryEnumTouchTargetSize SuggestionClusterProtoCategoryEnum = "touchTargetSize"
	SuggestionClusterProtoCategoryEnumLowContrast     SuggestionClusterProtoCategoryEnum = "lowContrast"
	SuggestionClusterProtoCategoryEnumImplementation  SuggestionClusterProtoCategoryEnum = "implementation"
)

func (e *SuggestionClusterProtoCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unknownCategory":
		fallthrough
	case "contentLabeling":
		fallthrough
	case "touchTargetSize":
		fallthrough
	case "lowContrast":
		fallthrough
	case "implementation":
		*e = SuggestionClusterProtoCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SuggestionClusterProtoCategoryEnum: %s", s)
	}
}

// SuggestionClusterProto - A set of similar suggestions that we suspect are closely related. This proto and most of the nested protos are branched from foxandcrown.prelaunchreport.service.SuggestionClusterProto, replacing PLR's dependencies with FTL's.
type SuggestionClusterProto struct {
	// Category in which these types of suggestions should appear. Always set.
	Category *SuggestionClusterProtoCategoryEnum `json:"category,omitempty"`
	// A sequence of suggestions. All of the suggestions within a cluster must have the same SuggestionPriority and belong to the same SuggestionCategory. Suggestions with the same screenshot URL should be adjacent.
	Suggestions []SuggestionProto `json:"suggestions,omitempty"`
}
