"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetOrganizationInventoryOnboardingCloudMonitoringImportsRequest:
    
    import_ids: list[str] = dataclasses.field(metadata={'query_param': { 'field_name': 'importIds', 'style': 'form', 'explode': False }})
    r"""import ids from an imports"""  
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetOrganizationInventoryOnboardingCloudMonitoringImports200ApplicationJSONDevice:
    r"""Represents the details of an imported device."""
    
    created: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'exclude': lambda f: f is None }})
    r"""Whether or not the device was successfully created in dashboard."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Represents the current state of importing the device."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The url to the device details page within dashboard."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetOrganizationInventoryOnboardingCloudMonitoringImports200ApplicationJSON:
    
    device: Optional[GetOrganizationInventoryOnboardingCloudMonitoringImports200ApplicationJSONDevice] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device'), 'exclude': lambda f: f is None }})
    r"""Represents the details of an imported device."""  
    import_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('importId'), 'exclude': lambda f: f is None }})
    r"""Database ID for the new entity entry."""  
    

@dataclasses.dataclass
class GetOrganizationInventoryOnboardingCloudMonitoringImportsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_organization_inventory_onboarding_cloud_monitoring_imports_200_application_json_objects: Optional[list[GetOrganizationInventoryOnboardingCloudMonitoringImports200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    