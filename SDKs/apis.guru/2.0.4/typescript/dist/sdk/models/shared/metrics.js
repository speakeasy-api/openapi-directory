"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metrics = exports.MetricsThisWeek = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Summary totals for the last 7 days
 */
var MetricsThisWeek = /** @class */ (function (_super) {
    __extends(MetricsThisWeek, _super);
    function MetricsThisWeek() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "added" }),
        __metadata("design:type", Number)
    ], MetricsThisWeek.prototype, "added", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated" }),
        __metadata("design:type", Number)
    ], MetricsThisWeek.prototype, "updated", void 0);
    return MetricsThisWeek;
}(utils_1.SpeakeasyBase));
exports.MetricsThisWeek = MetricsThisWeek;
/**
 * List of basic metrics
 */
var Metrics = /** @class */ (function (_super) {
    __extends(Metrics, _super);
    function Metrics() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datasets" }),
        __metadata("design:type", Array)
    ], Metrics.prototype, "datasets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fixedPct" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "fixedPct", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fixes" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "fixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invalid" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "invalid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issues" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "issues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "numAPIs" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "numAPIs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "numEndpoints" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "numEndpoints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "numSpecs" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "numSpecs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stars" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "stars", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "thisWeek" }),
        (0, class_transformer_1.Type)(function () { return MetricsThisWeek; }),
        __metadata("design:type", MetricsThisWeek)
    ], Metrics.prototype, "thisWeek", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unofficial" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "unofficial", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unreachable" }),
        __metadata("design:type", Number)
    ], Metrics.prototype, "unreachable", void 0);
    return Metrics;
}(utils_1.SpeakeasyBase));
exports.Metrics = Metrics;
