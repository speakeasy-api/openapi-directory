// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// InboundAchTransferReturnReasonEnum - The reason why this transfer will be returned. This is sent to the initiating bank.
type InboundAchTransferReturnReasonEnum string

const (
	InboundAchTransferReturnReasonEnumAuthorizationRevokedByCustomer                              InboundAchTransferReturnReasonEnum = "authorization_revoked_by_customer"
	InboundAchTransferReturnReasonEnumPaymentStopped                                              InboundAchTransferReturnReasonEnum = "payment_stopped"
	InboundAchTransferReturnReasonEnumCustomerAdvisedUnauthorizedImproperIneligibleOrIncomplete   InboundAchTransferReturnReasonEnum = "customer_advised_unauthorized_improper_ineligible_or_incomplete"
	InboundAchTransferReturnReasonEnumRepresentativePayeeDeceasedOrUnableToContinueInThatCapacity InboundAchTransferReturnReasonEnum = "representative_payee_deceased_or_unable_to_continue_in_that_capacity"
	InboundAchTransferReturnReasonEnumBeneficiaryOrAccountHolderDeceased                          InboundAchTransferReturnReasonEnum = "beneficiary_or_account_holder_deceased"
	InboundAchTransferReturnReasonEnumCreditEntryRefusedByReceiver                                InboundAchTransferReturnReasonEnum = "credit_entry_refused_by_receiver"
	InboundAchTransferReturnReasonEnumDuplicateEntry                                              InboundAchTransferReturnReasonEnum = "duplicate_entry"
	InboundAchTransferReturnReasonEnumCorporateCustomerAdvisedNotAuthorized                       InboundAchTransferReturnReasonEnum = "corporate_customer_advised_not_authorized"
)

func (e InboundAchTransferReturnReasonEnum) ToPointer() *InboundAchTransferReturnReasonEnum {
	return &e
}

func (e *InboundAchTransferReturnReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "authorization_revoked_by_customer":
		fallthrough
	case "payment_stopped":
		fallthrough
	case "customer_advised_unauthorized_improper_ineligible_or_incomplete":
		fallthrough
	case "representative_payee_deceased_or_unable_to_continue_in_that_capacity":
		fallthrough
	case "beneficiary_or_account_holder_deceased":
		fallthrough
	case "credit_entry_refused_by_receiver":
		fallthrough
	case "duplicate_entry":
		fallthrough
	case "corporate_customer_advised_not_authorized":
		*e = InboundAchTransferReturnReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferReturnReasonEnum: %v", v)
	}
}

// InboundAchTransferReturnStatusEnum - The lifecycle status of the transfer.
type InboundAchTransferReturnStatusEnum string

const (
	InboundAchTransferReturnStatusEnumPendingSubmitting InboundAchTransferReturnStatusEnum = "pending_submitting"
	InboundAchTransferReturnStatusEnumSubmitted         InboundAchTransferReturnStatusEnum = "submitted"
)

func (e InboundAchTransferReturnStatusEnum) ToPointer() *InboundAchTransferReturnStatusEnum {
	return &e
}

func (e *InboundAchTransferReturnStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending_submitting":
		fallthrough
	case "submitted":
		*e = InboundAchTransferReturnStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferReturnStatusEnum: %v", v)
	}
}

// InboundACHTransferReturnInboundACHTransferReturnSubmission - After the return is submitted to FedACH, this will contain supplemental details.
type InboundACHTransferReturnInboundACHTransferReturnSubmission struct {
	// When the ACH transfer return was sent to FedACH.
	SubmittedAt time.Time `json:"submitted_at"`
	// The trace number for the submission.
	TraceNumber string `json:"trace_number"`
}

// InboundAchTransferReturnTypeEnum - A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.
type InboundAchTransferReturnTypeEnum string

const (
	InboundAchTransferReturnTypeEnumInboundAchTransferReturn InboundAchTransferReturnTypeEnum = "inbound_ach_transfer_return"
)

func (e InboundAchTransferReturnTypeEnum) ToPointer() *InboundAchTransferReturnTypeEnum {
	return &e
}

func (e *InboundAchTransferReturnTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inbound_ach_transfer_return":
		*e = InboundAchTransferReturnTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferReturnTypeEnum: %v", v)
	}
}

// InboundAchTransferReturn - If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we'll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer.
type InboundAchTransferReturn struct {
	// The ID of the Inbound ACH Transfer Return.
	ID string `json:"id"`
	// The ID for the Transaction that is being returned.
	InboundAchTransferTransactionID string `json:"inbound_ach_transfer_transaction_id"`
	// The reason why this transfer will be returned. This is sent to the initiating bank.
	Reason InboundAchTransferReturnReasonEnum `json:"reason"`
	// The lifecycle status of the transfer.
	Status InboundAchTransferReturnStatusEnum `json:"status"`
	// After the return is submitted to FedACH, this will contain supplemental details.
	Submission InboundACHTransferReturnInboundACHTransferReturnSubmission `json:"submission"`
	// The ID for the transaction refunding the transfer.
	TransactionID string `json:"transaction_id"`
	// A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.
	Type InboundAchTransferReturnTypeEnum `json:"type"`
}
