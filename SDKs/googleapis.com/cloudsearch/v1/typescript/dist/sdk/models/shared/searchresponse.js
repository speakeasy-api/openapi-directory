"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchResponse = void 0;
var utils_1 = require("../../../internal/utils");
var errorinfo_1 = require("./errorinfo");
var facetresult_1 = require("./facetresult");
var queryinterpretation_1 = require("./queryinterpretation");
var responsedebuginfo_1 = require("./responsedebuginfo");
var resultcounts_1 = require("./resultcounts");
var searchresult_1 = require("./searchresult");
var spellresult_1 = require("./spellresult");
var structuredresult_1 = require("./structuredresult");
var class_transformer_1 = require("class-transformer");
/**
 * The search API response.
 */
var SearchResponse = /** @class */ (function (_super) {
    __extends(SearchResponse, _super);
    function SearchResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debugInfo" }),
        (0, class_transformer_1.Type)(function () { return responsedebuginfo_1.ResponseDebugInfo; }),
        __metadata("design:type", responsedebuginfo_1.ResponseDebugInfo)
    ], SearchResponse.prototype, "debugInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorInfo" }),
        (0, class_transformer_1.Type)(function () { return errorinfo_1.ErrorInfo; }),
        __metadata("design:type", errorinfo_1.ErrorInfo)
    ], SearchResponse.prototype, "errorInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: facetresult_1.FacetResult }),
        (0, class_transformer_1.Expose)({ name: "facetResults" }),
        (0, class_transformer_1.Type)(function () { return facetresult_1.FacetResult; }),
        __metadata("design:type", Array)
    ], SearchResponse.prototype, "facetResults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasMoreResults" }),
        __metadata("design:type", Boolean)
    ], SearchResponse.prototype, "hasMoreResults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "queryInterpretation" }),
        (0, class_transformer_1.Type)(function () { return queryinterpretation_1.QueryInterpretation; }),
        __metadata("design:type", queryinterpretation_1.QueryInterpretation)
    ], SearchResponse.prototype, "queryInterpretation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resultCountEstimate" }),
        __metadata("design:type", String)
    ], SearchResponse.prototype, "resultCountEstimate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resultCountExact" }),
        __metadata("design:type", String)
    ], SearchResponse.prototype, "resultCountExact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resultCounts" }),
        (0, class_transformer_1.Type)(function () { return resultcounts_1.ResultCounts; }),
        __metadata("design:type", resultcounts_1.ResultCounts)
    ], SearchResponse.prototype, "resultCounts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: searchresult_1.SearchResult }),
        (0, class_transformer_1.Expose)({ name: "results" }),
        (0, class_transformer_1.Type)(function () { return searchresult_1.SearchResult; }),
        __metadata("design:type", Array)
    ], SearchResponse.prototype, "results", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: spellresult_1.SpellResult }),
        (0, class_transformer_1.Expose)({ name: "spellResults" }),
        (0, class_transformer_1.Type)(function () { return spellresult_1.SpellResult; }),
        __metadata("design:type", Array)
    ], SearchResponse.prototype, "spellResults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: structuredresult_1.StructuredResult }),
        (0, class_transformer_1.Expose)({ name: "structuredResults" }),
        (0, class_transformer_1.Type)(function () { return structuredresult_1.StructuredResult; }),
        __metadata("design:type", Array)
    ], SearchResponse.prototype, "structuredResults", void 0);
    return SearchResponse;
}(utils_1.SpeakeasyBase));
exports.SearchResponse = SearchResponse;
