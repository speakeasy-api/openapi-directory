/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import {
  RuntimeAccessConfig,
  RuntimeAccessConfigInput,
} from "./runtimeaccessconfig";
import { RuntimeMetrics } from "./runtimemetrics";
import {
  RuntimeSoftwareConfig,
  RuntimeSoftwareConfigInput,
} from "./runtimesoftwareconfig";
import { VirtualMachine, VirtualMachineInput } from "./virtualmachine";
import { Expose, Type } from "class-transformer";

/**
 * The definition of a Runtime for a managed notebook instance.
 */
export class RuntimeInput extends SpeakeasyBase {
  /**
   * Specifies the login configuration for Runtime
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessConfig" })
  @Type(() => RuntimeAccessConfigInput)
  accessConfig?: RuntimeAccessConfigInput;

  /**
   * Optional. The labels to associate with this Managed Notebook or Runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "softwareConfig" })
  @Type(() => RuntimeSoftwareConfigInput)
  softwareConfig?: RuntimeSoftwareConfigInput;

  /**
   * Runtime using Virtual Machine for computing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "virtualMachine" })
  @Type(() => VirtualMachineInput)
  virtualMachine?: VirtualMachineInput;
}

/**
 * Output only. Runtime health_state.
 */
export enum RuntimeHealthStateEnum {
  HealthStateUnspecified = "HEALTH_STATE_UNSPECIFIED",
  Healthy = "HEALTHY",
  Unhealthy = "UNHEALTHY",
  AgentNotInstalled = "AGENT_NOT_INSTALLED",
  AgentNotRunning = "AGENT_NOT_RUNNING",
}

/**
 * Output only. Runtime state.
 */
export enum RuntimeStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Starting = "STARTING",
  Provisioning = "PROVISIONING",
  Active = "ACTIVE",
  Stopping = "STOPPING",
  Stopped = "STOPPED",
  Deleting = "DELETING",
  Upgrading = "UPGRADING",
  Initializing = "INITIALIZING",
}

/**
 * The definition of a Runtime for a managed notebook instance.
 */
export class Runtime extends SpeakeasyBase {
  /**
   * Specifies the login configuration for Runtime
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessConfig" })
  @Type(() => RuntimeAccessConfig)
  accessConfig?: RuntimeAccessConfig;

  /**
   * Output only. Runtime creation time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. Runtime health_state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "healthState" })
  healthState?: RuntimeHealthStateEnum;

  /**
   * Optional. The labels to associate with this Managed Notebook or Runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Contains runtime daemon metrics, such as OS and kernels and sessions stats.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metrics" })
  @Type(() => RuntimeMetrics)
  metrics?: RuntimeMetrics;

  /**
   * Output only. The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "softwareConfig" })
  @Type(() => RuntimeSoftwareConfig)
  softwareConfig?: RuntimeSoftwareConfig;

  /**
   * Output only. Runtime state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: RuntimeStateEnum;

  /**
   * Output only. Runtime update time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Runtime using Virtual Machine for computing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "virtualMachine" })
  @Type(() => VirtualMachine)
  virtualMachine?: VirtualMachine;
}
