"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import engine_enum as shared_engine_enum
from ..shared import gender_enum as shared_gender_enum
from ..shared import languagecode_enum as shared_languagecode_enum
from ..shared import voiceid_enum as shared_voiceid_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Voice:
    r"""Description of the voice."""
    
    additional_language_codes: Optional[list[shared_languagecode_enum.LanguageCodeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalLanguageCodes'), 'exclude': lambda f: f is None }})  
    gender: Optional[shared_gender_enum.GenderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Gender'), 'exclude': lambda f: f is None }})  
    id: Optional[shared_voiceid_enum.VoiceIDEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    language_code: Optional[shared_languagecode_enum.LanguageCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LanguageCode'), 'exclude': lambda f: f is None }})  
    language_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LanguageName'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    supported_engines: Optional[list[shared_engine_enum.EngineEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SupportedEngines'), 'exclude': lambda f: f is None }})  
    