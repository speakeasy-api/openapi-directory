"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSwitchAccessPoliciesResponse = exports.GetNetworkSwitchAccessPolicies200ApplicationJSON = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadius = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum = exports.GetNetworkSwitchAccessPoliciesRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSwitchAccessPoliciesRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPoliciesRequest, _super);
    function GetNetworkSwitchAccessPoliciesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPoliciesRequest.prototype, "networkId", void 0);
    return GetNetworkSwitchAccessPoliciesRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPoliciesRequest = GetNetworkSwitchAccessPoliciesRequest;
/**
 * Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
 */
var GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum;
(function (GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum) {
    GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum["EightHundredAndTwo1x"] = "802.1x";
    GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum["HybridAuthentication"] = "Hybrid authentication";
    GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum["MACAuthenticationBypass"] = "MAC authentication bypass";
})(GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum || (exports.GetNetworkSwitchAccessPolicies200ApplicationJSONAccessPolicyTypeEnum = {}));
/**
 * Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
 */
var GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum;
(function (GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum) {
    GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum["Both"] = "both";
    GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum["Inbound"] = "inbound";
})(GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum || (exports.GetNetworkSwitchAccessPolicies200ApplicationJSONDot1xControlDirectionEnum = {}));
/**
 * 802.1x Settings
 */
var GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x, _super);
    function GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "controlDirection" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x.prototype, "controlDirection", void 0);
    return GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x = GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x;
/**
 * Choose the Host Mode for the access policy.
 */
var GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum;
(function (GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum) {
    GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum["MultiAuth"] = "Multi-Auth";
    GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum["MultiDomain"] = "Multi-Domain";
    GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum["MultiHost"] = "Multi-Host";
    GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum["SingleHost"] = "Single-Host";
})(GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum = exports.GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum || (exports.GetNetworkSwitchAccessPolicies200ApplicationJSONHostModeEnum = {}));
/**
 * Critical auth settings for when authentication is rejected by the RADIUS server
 */
var GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth, _super);
    function GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataVlanId" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth.prototype, "dataVlanId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "suspendPortBounce" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth.prototype, "suspendPortBounce", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlanId" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth.prototype, "voiceVlanId", void 0);
    return GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth = GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth;
/**
 * Object for RADIUS Settings
 */
var GetNetworkSwitchAccessPolicies200ApplicationJSONRadius = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPolicies200ApplicationJSONRadius, _super);
    function GetNetworkSwitchAccessPolicies200ApplicationJSONRadius() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "criticalAuth" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth; }),
        __metadata("design:type", GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusCriticalAuth)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadius.prototype, "criticalAuth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "failedAuthVlanId" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadius.prototype, "failedAuthVlanId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reAuthenticationInterval" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadius.prototype, "reAuthenticationInterval", void 0);
    return GetNetworkSwitchAccessPolicies200ApplicationJSONRadius;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadius = GetNetworkSwitchAccessPolicies200ApplicationJSONRadius;
var GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers, _super);
    function GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "port" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers.prototype, "port", void 0);
    return GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers = GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers;
var GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers, _super);
    function GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "port" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers.prototype, "port", void 0);
    return GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers = GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers;
var GetNetworkSwitchAccessPolicies200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPolicies200ApplicationJSON, _super);
    function GetNetworkSwitchAccessPolicies200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyType" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "accessPolicyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dot1x" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x; }),
        __metadata("design:type", GetNetworkSwitchAccessPolicies200ApplicationJSONDot1x)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "dot1x", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "guestVlanId" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "guestVlanId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hostMode" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "hostMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "increaseAccessSpeed" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "increaseAccessSpeed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "radius" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSwitchAccessPolicies200ApplicationJSONRadius; }),
        __metadata("design:type", GetNetworkSwitchAccessPolicies200ApplicationJSONRadius)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radius", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "radiusAccountingEnabled" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radiusAccountingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers,
        }),
        (0, class_transformer_1.Expose)({ name: "radiusAccountingServers" }),
        (0, class_transformer_1.Type)(function () {
            return GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusAccountingServers;
        }),
        __metadata("design:type", Array)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radiusAccountingServers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "radiusCoaSupportEnabled" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radiusCoaSupportEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "radiusGroupAttribute" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radiusGroupAttribute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers,
        }),
        (0, class_transformer_1.Expose)({ name: "radiusServers" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSwitchAccessPolicies200ApplicationJSONRadiusServers; }),
        __metadata("design:type", Array)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radiusServers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "radiusTestingEnabled" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "radiusTestingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "urlRedirectWalledGardenEnabled" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "urlRedirectWalledGardenEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "urlRedirectWalledGardenRanges" }),
        __metadata("design:type", Array)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "urlRedirectWalledGardenRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlanClients" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchAccessPolicies200ApplicationJSON.prototype, "voiceVlanClients", void 0);
    return GetNetworkSwitchAccessPolicies200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPolicies200ApplicationJSON = GetNetworkSwitchAccessPolicies200ApplicationJSON;
var GetNetworkSwitchAccessPoliciesResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessPoliciesResponse, _super);
    function GetNetworkSwitchAccessPoliciesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessPoliciesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessPoliciesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSwitchAccessPoliciesResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSwitchAccessPolicies200ApplicationJSON,
        }),
        __metadata("design:type", Array)
    ], GetNetworkSwitchAccessPoliciesResponse.prototype, "getNetworkSwitchAccessPolicies200ApplicationJSONObjects", void 0);
    return GetNetworkSwitchAccessPoliciesResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessPoliciesResponse = GetNetworkSwitchAccessPoliciesResponse;
