// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// Project - This structure defines a project, which is the logical object in Evidently that can contain features, launches, and experiments. Use projects to group similar features together.
type Project struct {
	ActiveExperimentCount *int64                    `json:"activeExperimentCount,omitempty"`
	ActiveLaunchCount     *int64                    `json:"activeLaunchCount,omitempty"`
	AppConfigResource     *ProjectAppConfigResource `json:"appConfigResource,omitempty"`
	Arn                   string                    `json:"arn"`
	CreatedTime           time.Time                 `json:"createdTime"`
	DataDelivery          *ProjectDataDelivery      `json:"dataDelivery,omitempty"`
	Description           *string                   `json:"description,omitempty"`
	ExperimentCount       *int64                    `json:"experimentCount,omitempty"`
	FeatureCount          *int64                    `json:"featureCount,omitempty"`
	LastUpdatedTime       time.Time                 `json:"lastUpdatedTime"`
	LaunchCount           *int64                    `json:"launchCount,omitempty"`
	Name                  string                    `json:"name"`
	Status                ProjectStatusEnum         `json:"status"`
	Tags                  map[string]string         `json:"tags,omitempty"`
}
