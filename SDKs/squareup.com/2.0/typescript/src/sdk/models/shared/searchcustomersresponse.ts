/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Customer } from "./customer";
import { ErrorT } from "./error";
import { Expose, Type } from "class-transformer";

/**
 * Defines the fields that are included in the response body of
 *
 * @remarks
 * a request to the `SearchCustomers` endpoint.
 *
 * Either `errors` or `customers` is present in a given response (never both).
 */
export class SearchCustomersResponse extends SpeakeasyBase {
  /**
   * A pagination cursor that can be used during subsequent calls
   *
   * @remarks
   * to `SearchCustomers` to retrieve the next set of results associated
   * with the original query. Pagination cursors are only present when
   * a request succeeds and additional results are available.
   *
   * For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * An array of `Customer` objects that match a query.
   */
  @SpeakeasyMetadata({ elemType: Customer })
  @Expose({ name: "customers" })
  @Type(() => Customer)
  customers?: Customer[];

  /**
   * Any errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];
}
