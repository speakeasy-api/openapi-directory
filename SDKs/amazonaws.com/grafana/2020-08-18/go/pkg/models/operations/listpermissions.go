// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListPermissionsUserTypeEnum - (Optional) If you specify <code>SSO_USER</code>, then only the permissions of IAM Identity Center users are returned. If you specify <code>SSO_GROUP</code>, only the permissions of IAM Identity Center groups are returned.
type ListPermissionsUserTypeEnum string

const (
	ListPermissionsUserTypeEnumSsoUser  ListPermissionsUserTypeEnum = "SSO_USER"
	ListPermissionsUserTypeEnumSsoGroup ListPermissionsUserTypeEnum = "SSO_GROUP"
)

func (e *ListPermissionsUserTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SSO_USER":
		fallthrough
	case "SSO_GROUP":
		*e = ListPermissionsUserTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPermissionsUserTypeEnum: %s", s)
	}
}

type ListPermissionsRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// (Optional) Limits the results to only the group that matches this ID.
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
	// The maximum number of results to include in the response.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token to use when requesting the next set of results. You received this token from a previous <code>ListPermissions</code> operation.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// (Optional) Limits the results to only the user that matches this ID.
	UserID *string `queryParam:"style=form,explode=true,name=userId"`
	// (Optional) If you specify <code>SSO_USER</code>, then only the permissions of IAM Identity Center users are returned. If you specify <code>SSO_GROUP</code>, only the permissions of IAM Identity Center groups are returned.
	UserType *ListPermissionsUserTypeEnum `queryParam:"style=form,explode=true,name=userType"`
	// The ID of the workspace to list permissions for. This parameter is required.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type ListPermissionsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListPermissionsResponse *shared.ListPermissionsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
