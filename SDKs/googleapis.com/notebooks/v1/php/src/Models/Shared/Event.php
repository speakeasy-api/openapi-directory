<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Event - The definition of an Event for a managed / semi-managed notebook instance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Event
{
    /**
     * Optional. Event details. This field is used to pass event information.
     * 
     * @var ?array<string, string> $details
     */
	#[\JMS\Serializer\Annotation\SerializedName('details')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $details = null;
    
    /**
     * Event report time.
     * 
     * @var ?string $reportTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportTime = null;
    
    /**
     * Event type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventTypeEnum $type = null;
    
	public function __construct()
	{
		$this->details = null;
		$this->reportTime = null;
		$this->type = null;
	}
}
