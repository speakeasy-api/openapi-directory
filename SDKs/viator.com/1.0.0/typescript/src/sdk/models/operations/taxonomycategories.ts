/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TaxonomyCategoriesRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  /**
   * **unique numeric identifier** of the destination to enquire about (optional)
   *
   * @remarks
   * - `destinationId` is returned by [/taxonomy/destinations](#operation/taxonomyDestinations)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=destId",
  })
  destId?: number;
}

export class TaxonomyCategories200ApplicationJSONDataSubcategories extends SpeakeasyBase {
  /**
   * **unique numeric identifier** of *this* product category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoryId" })
  categoryId?: number;

  /**
   * **sort order** (suggested) of the subcategory within the category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortorder" })
  sortorder?: number;

  /**
   * **URL-formatted name** of *this* product subcategory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subCategoryUrlName" })
  subCategoryUrlName?: string;

  /**
   * **unique numeric identifier** of *this* product subcategory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subcategoryId" })
  subcategoryId?: number;

  /**
   * **natural-language name** of *this* product subcategory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subcategoryName" })
  subcategoryName?: string;
}

export class TaxonomyCategories200ApplicationJSONData extends SpeakeasyBase {
  /**
   * **natural-language name** of *this* product category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupName" })
  groupName?: string;

  /**
   * **URL-formatted name** of *this* product category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupUrlName" })
  groupUrlName?: string;

  /**
   * **unique numeric identifier** for the category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * **number** of products in this category in the destination specified by `destId`
   *
   * @remarks
   * - **note**: will be `null` if no `destId` is included in the query
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCount" })
  productCount?: number;

  /**
   * **array** of subcategory objects
   */
  @SpeakeasyMetadata({
    elemType: TaxonomyCategories200ApplicationJSONDataSubcategories,
  })
  @Expose({ name: "subcategories" })
  @Type(() => TaxonomyCategories200ApplicationJSONDataSubcategories)
  subcategories?: TaxonomyCategories200ApplicationJSONDataSubcategories[];

  /**
   * **URL** for this category's thumbnail image, selected from the most popular product within the category
   *
   * @remarks
   * - **note:** will be `null` if no `destId` is included in the query
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailURL" })
  thumbnailURL?: string;
}

/**
 * Success
 */
export class TaxonomyCategories200ApplicationJSON extends SpeakeasyBase {
  /**
   * **array** of category data objects
   */
  @SpeakeasyMetadata({ elemType: TaxonomyCategories200ApplicationJSONData })
  @Expose({ name: "data" })
  @Type(() => TaxonomyCategories200ApplicationJSONData)
  data?: TaxonomyCategories200ApplicationJSONData[];

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class TaxonomyCategoriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  taxonomyCategories200ApplicationJSONObject?: TaxonomyCategories200ApplicationJSON;
}
