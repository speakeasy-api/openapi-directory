"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromeManagementV1DisplayInfo:
    r"""Information for a display."""
    
    device_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceId'), 'exclude': lambda f: f is None }})
    r"""Output only. Represents the graphics card device id."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Output only. Display device name."""  
    is_internal: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isInternal'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates if display is internal or not."""  
    refresh_rate: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refreshRate'), 'exclude': lambda f: f is None }})
    r"""Output only. Refresh rate in Hz."""  
    resolution_height: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolutionHeight'), 'exclude': lambda f: f is None }})
    r"""Output only. Resolution height in pixels."""  
    resolution_width: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolutionWidth'), 'exclude': lambda f: f is None }})
    r"""Output only. Resolution width in pixels."""  
    