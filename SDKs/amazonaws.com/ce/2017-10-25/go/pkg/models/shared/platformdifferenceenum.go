// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlatformDifferenceEnum string

const (
	PlatformDifferenceEnumHypervisor                PlatformDifferenceEnum = "HYPERVISOR"
	PlatformDifferenceEnumNetworkInterface          PlatformDifferenceEnum = "NETWORK_INTERFACE"
	PlatformDifferenceEnumStorageInterface          PlatformDifferenceEnum = "STORAGE_INTERFACE"
	PlatformDifferenceEnumInstanceStoreAvailability PlatformDifferenceEnum = "INSTANCE_STORE_AVAILABILITY"
	PlatformDifferenceEnumVirtualizationType        PlatformDifferenceEnum = "VIRTUALIZATION_TYPE"
)

func (e *PlatformDifferenceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HYPERVISOR":
		fallthrough
	case "NETWORK_INTERFACE":
		fallthrough
	case "STORAGE_INTERFACE":
		fallthrough
	case "INSTANCE_STORE_AVAILABILITY":
		fallthrough
	case "VIRTUALIZATION_TYPE":
		*e = PlatformDifferenceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlatformDifferenceEnum: %s", s)
	}
}
