/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DynamicListenerState } from "./dynamiclistenerstate";
import { UpdateFailureState } from "./updatefailurestate";
import { Expose, Type } from "class-transformer";

/**
 * Describes a dynamically loaded listener via the LDS API. [#next-free-field: 6]
 */
export class DynamicListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "activeState" })
  @Type(() => DynamicListenerState)
  activeState?: DynamicListenerState;

  @SpeakeasyMetadata()
  @Expose({ name: "drainingState" })
  @Type(() => DynamicListenerState)
  drainingState?: DynamicListenerState;

  @SpeakeasyMetadata()
  @Expose({ name: "errorState" })
  @Type(() => UpdateFailureState)
  errorState?: UpdateFailureState;

  /**
   * The name or unique id of this listener, pulled from the DynamicListenerState config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "warmingState" })
  @Type(() => DynamicListenerState)
  warmingState?: DynamicListenerState;
}
