/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudContactcenterinsightsV1FaqAnswerData - Agent Assist frequently-asked-question answer data.
 */
public class GoogleCloudContactcenterinsightsV1FaqAnswerData {
    /**
     * The piece of text from the `source` knowledge base document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("answer")
    public String answer;

    public GoogleCloudContactcenterinsightsV1FaqAnswerData withAnswer(String answer) {
        this.answer = answer;
        return this;
    }
    
    /**
     * The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidenceScore")
    public Float confidenceScore;

    public GoogleCloudContactcenterinsightsV1FaqAnswerData withConfidenceScore(Float confidenceScore) {
        this.confidenceScore = confidenceScore;
        return this;
    }
    
    /**
     * Map that contains metadata about the FAQ answer and the document that it originates from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public GoogleCloudContactcenterinsightsV1FaqAnswerData withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryRecord")
    public String queryRecord;

    public GoogleCloudContactcenterinsightsV1FaqAnswerData withQueryRecord(String queryRecord) {
        this.queryRecord = queryRecord;
        return this;
    }
    
    /**
     * The corresponding FAQ question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("question")
    public String question;

    public GoogleCloudContactcenterinsightsV1FaqAnswerData withQuestion(String question) {
        this.question = question;
        return this;
    }
    
    /**
     * The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public GoogleCloudContactcenterinsightsV1FaqAnswerData withSource(String source) {
        this.source = source;
        return this;
    }
    
    public GoogleCloudContactcenterinsightsV1FaqAnswerData(){}
}
