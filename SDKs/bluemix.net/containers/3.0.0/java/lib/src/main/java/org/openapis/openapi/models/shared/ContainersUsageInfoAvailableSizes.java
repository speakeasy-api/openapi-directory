/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ContainersUsageInfoAvailableSizes {
    /**
     * The amount of disk space on the compute host that is assigned to the container in gigabyte
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disk")
    public Integer disk;
    public ContainersUsageInfoAvailableSizes withDisk(Integer disk) {
        this.disk = disk;
        return this;
    }
    
    /**
     * The ID of the container size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ContainersUsageInfoAvailableSizes withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The amount of container memory on the compute host that is assigned to the container in megabyte.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memory_MB")
    public Integer memoryMB;
    public ContainersUsageInfoAvailableSizes withMemoryMB(Integer memoryMB) {
        this.memoryMB = memoryMB;
        return this;
    }
    
    /**
     * The IBM Containers name of the container size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ContainersUsageInfoAvailableSizes withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of virtual CPUs that can be assigned to the container.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcpus")
    public Integer vcpus;
    public ContainersUsageInfoAvailableSizes withVcpus(Integer vcpus) {
        this.vcpus = vcpus;
        return this;
    }
    
}
