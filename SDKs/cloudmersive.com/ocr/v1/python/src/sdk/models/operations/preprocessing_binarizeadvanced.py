"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PreprocessingBinarizeAdvancedSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Apikey' }})  
    

@dataclasses.dataclass
class PreprocessingBinarizeAdvancedRequestBodyImageFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    image_file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'imageFile' }})  
    

@dataclasses.dataclass
class PreprocessingBinarizeAdvancedRequestBody:
    
    image_file: PreprocessingBinarizeAdvancedRequestBodyImageFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""Image file to perform OCR on.  Common file formats such as PNG, JPEG are supported."""  
    

@dataclasses.dataclass
class PreprocessingBinarizeAdvancedResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preprocessing_binarize_advanced_200_application_json_byte_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    preprocessing_binarize_advanced_200_application_xml_byte_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    preprocessing_binarize_advanced_200_text_json_byte_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    preprocessing_binarize_advanced_200_text_xml_byte_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    