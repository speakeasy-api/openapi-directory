// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ExportBundlePathParams struct {
	//  Unique bundle identifier.
	BundleID string `pathParam:"style=simple,explode=false,name=bundleId"`
}

// ExportBundlePlatformEnum -  Developer desktop or target mobile app or website platform.
type ExportBundlePlatformEnum string

const (
	ExportBundlePlatformEnumOsx        ExportBundlePlatformEnum = "OSX"
	ExportBundlePlatformEnumWindows    ExportBundlePlatformEnum = "WINDOWS"
	ExportBundlePlatformEnumLinux      ExportBundlePlatformEnum = "LINUX"
	ExportBundlePlatformEnumObjc       ExportBundlePlatformEnum = "OBJC"
	ExportBundlePlatformEnumSwift      ExportBundlePlatformEnum = "SWIFT"
	ExportBundlePlatformEnumAndroid    ExportBundlePlatformEnum = "ANDROID"
	ExportBundlePlatformEnumJavascript ExportBundlePlatformEnum = "JAVASCRIPT"
)

func (e *ExportBundlePlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OSX":
		fallthrough
	case "WINDOWS":
		fallthrough
	case "LINUX":
		fallthrough
	case "OBJC":
		fallthrough
	case "SWIFT":
		fallthrough
	case "ANDROID":
		fallthrough
	case "JAVASCRIPT":
		*e = ExportBundlePlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportBundlePlatformEnum: %s", s)
	}
}

type ExportBundleQueryParams struct {
	//  Developer desktop or target application platform.
	Platform *ExportBundlePlatformEnum `queryParam:"style=form,explode=true,name=platform"`
	//  Unique project identifier.
	ProjectID *string `queryParam:"style=form,explode=true,name=projectId"`
}

type ExportBundleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ExportBundleRequest struct {
	PathParams  ExportBundlePathParams
	QueryParams ExportBundleQueryParams
	Headers     ExportBundleHeaders
}

type ExportBundleResponse struct {
	// BadRequestException
	BadRequestException *shared.BadRequestException
	ContentType         string
	// Success
	ExportBundleResult *shared.ExportBundleResult
	// InternalFailureException
	InternalFailureException *shared.InternalFailureException
	// NotFoundException
	NotFoundException *shared.NotFoundException
	StatusCode        int
	RawResponse       *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException *shared.ServiceUnavailableException
	// TooManyRequestsException
	TooManyRequestsException *shared.TooManyRequestsException
	// UnauthorizedException
	UnauthorizedException *shared.UnauthorizedException
}
