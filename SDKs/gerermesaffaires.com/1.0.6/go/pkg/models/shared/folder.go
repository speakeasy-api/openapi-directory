// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FolderLevelEnum string

const (
	FolderLevelEnumConfidential FolderLevelEnum = "confidential"
	FolderLevelEnumRegular      FolderLevelEnum = "regular"
	FolderLevelEnumPublic       FolderLevelEnum = "public"
)

func (e *FolderLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = FolderLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FolderLevelEnum: %s", s)
	}
}

type Folder struct {
	About            *string          `json:"About,omitempty"`
	ArchivalDate     *string          `json:"ArchivalDate,omitempty"`
	Class            *string          `json:"Class,omitempty"`
	Home             *bool            `json:"Home,omitempty"`
	ID               *string          `json:"Id,omitempty"`
	Keywords         []string         `json:"Keywords,omitempty"`
	Level            *FolderLevelEnum `json:"Level,omitempty"`
	ModificationDate *string          `json:"ModificationDate,omitempty"`
	Name             *string          `json:"Name,omitempty"`
	Parent           *string          `json:"Parent,omitempty"`
}
