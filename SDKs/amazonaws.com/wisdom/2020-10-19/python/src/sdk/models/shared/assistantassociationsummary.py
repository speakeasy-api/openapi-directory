"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import assistantassociationoutputdata as shared_assistantassociationoutputdata
from ..shared import associationtype_enum as shared_associationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssistantAssociationSummary:
    r"""Summary information about the assistant association."""
    
    assistant_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistantArn') }})  
    assistant_association_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistantAssociationArn') }})  
    assistant_association_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistantAssociationId') }})  
    assistant_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistantId') }})  
    association_data: shared_assistantassociationoutputdata.AssistantAssociationOutputData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('associationData') }})  
    association_type: shared_associationtype_enum.AssociationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('associationType') }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    