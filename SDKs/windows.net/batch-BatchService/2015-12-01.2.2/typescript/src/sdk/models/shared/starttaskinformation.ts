/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TaskSchedulingError } from "./taskschedulingerror";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Gets or sets the state of the start task on the compute node.
 */
export enum StartTaskInformationStateEnum {
  Running = "running",
  Completed = "completed",
}

/**
 * Information about a start task running on a compute node.
 */
export class StartTaskInformation extends SpeakeasyBase {
  /**
   * Gets or sets the time at which the start task stopped running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  /**
   * Gets or sets the exit code of the start task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exitCode" })
  exitCode?: number;

  /**
   * Gets or sets the most recent time at which a retry of the task started running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastRetryTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastRetryTime?: Date;

  /**
   * Gets or sets the number of times the task has been retried by the Batch service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retryCount" })
  retryCount: number;

  /**
   * Information about an error when scheduling a task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedulingError" })
  @Type(() => TaskSchedulingError)
  schedulingError?: TaskSchedulingError;

  /**
   * Gets or sets the time at which the start task started running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;

  /**
   * Gets or sets the state of the start task on the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: StartTaskInformationStateEnum;
}
