/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



/**
 * CreateDistribution20171030RequestBodyDistributionConfig - A distribution configuration.
 */
public class CreateDistribution20171030RequestBodyDistributionConfig {
    
    public org.openapis.openapi.models.shared.Aliases aliases;
    public CreateDistribution20171030RequestBodyDistributionConfig withAliases(org.openapis.openapi.models.shared.Aliases aliases) {
        this.aliases = aliases;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.CacheBehaviors cacheBehaviors;
    public CreateDistribution20171030RequestBodyDistributionConfig withCacheBehaviors(org.openapis.openapi.models.shared.CacheBehaviors cacheBehaviors) {
        this.cacheBehaviors = cacheBehaviors;
        return this;
    }
    
    
    public String callerReference;
    public CreateDistribution20171030RequestBodyDistributionConfig withCallerReference(String callerReference) {
        this.callerReference = callerReference;
        return this;
    }
    
    
    public String comment;
    public CreateDistribution20171030RequestBodyDistributionConfig withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.CustomErrorResponses customErrorResponses;
    public CreateDistribution20171030RequestBodyDistributionConfig withCustomErrorResponses(org.openapis.openapi.models.shared.CustomErrorResponses customErrorResponses) {
        this.customErrorResponses = customErrorResponses;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.DefaultCacheBehavior defaultCacheBehavior;
    public CreateDistribution20171030RequestBodyDistributionConfig withDefaultCacheBehavior(org.openapis.openapi.models.shared.DefaultCacheBehavior defaultCacheBehavior) {
        this.defaultCacheBehavior = defaultCacheBehavior;
        return this;
    }
    
    
    public String defaultRootObject;
    public CreateDistribution20171030RequestBodyDistributionConfig withDefaultRootObject(String defaultRootObject) {
        this.defaultRootObject = defaultRootObject;
        return this;
    }
    
    
    public Boolean enabled;
    public CreateDistribution20171030RequestBodyDistributionConfig withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.HttpVersionEnum httpVersion;
    public CreateDistribution20171030RequestBodyDistributionConfig withHttpVersion(org.openapis.openapi.models.shared.HttpVersionEnum httpVersion) {
        this.httpVersion = httpVersion;
        return this;
    }
    
    
    public Boolean isIpv6Enabled;
    public CreateDistribution20171030RequestBodyDistributionConfig withIsIpv6Enabled(Boolean isIpv6Enabled) {
        this.isIpv6Enabled = isIpv6Enabled;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.LoggingConfig logging;
    public CreateDistribution20171030RequestBodyDistributionConfig withLogging(org.openapis.openapi.models.shared.LoggingConfig logging) {
        this.logging = logging;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.Origins origins;
    public CreateDistribution20171030RequestBodyDistributionConfig withOrigins(org.openapis.openapi.models.shared.Origins origins) {
        this.origins = origins;
        return this;
    }
    
    
    public org.openapis.openapi.models.shared.PriceClassEnum priceClass;
    public CreateDistribution20171030RequestBodyDistributionConfig withPriceClass(org.openapis.openapi.models.shared.PriceClassEnum priceClass) {
        this.priceClass = priceClass;
        return this;
    }
    
    /**
     * A complex type that identifies ways in which you want to restrict distribution of your content.
     */
    
    public org.openapis.openapi.models.shared.Restrictions restrictions;
    public CreateDistribution20171030RequestBodyDistributionConfig withRestrictions(org.openapis.openapi.models.shared.Restrictions restrictions) {
        this.restrictions = restrictions;
        return this;
    }
    
    /**
     * &lt;p&gt;A complex type that specifies the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Whether you want viewers to use HTTP or HTTPS to request your objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you want viewers to use HTTPS, whether you're using an alternate domain name such as &lt;code&gt;example.com&lt;/code&gt; or the CloudFront domain name for your distribution, such as &lt;code&gt;d111111abcdef8.cloudfront.net&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you're using an alternate domain name, whether AWS Certificate Manager (ACM) provided the certificate, or you purchased a certificate from a third-party certificate authority and imported it into ACM or uploaded it to the IAM certificate store.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You must specify only one of the following values: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ViewerCertificate$ACMCertificateArn&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ViewerCertificate$IAMCertificateId&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ViewerCertificate$CloudFrontDefaultCertificate&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Don't specify &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;CloudFrontDefaultCertificate&lt;/code&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;If you want viewers to use HTTP instead of HTTPS to request your objects&lt;/b&gt;: Specify the following value:&lt;/p&gt; &lt;p&gt; &lt;code&gt;&amp;lt;CloudFrontDefaultCertificate&amp;gt;true&amp;lt;CloudFrontDefaultCertificate&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;p&gt;In addition, specify &lt;code&gt;allow-all&lt;/code&gt; for &lt;code&gt;ViewerProtocolPolicy&lt;/code&gt; for all of your cache behaviors.&lt;/p&gt; &lt;p&gt; &lt;b&gt;If you want viewers to use HTTPS to request your objects&lt;/b&gt;: Choose the type of certificate that you want to use based on whether you're using an alternate domain name for your objects or the CloudFront domain name:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;If you're using an alternate domain name, such as example.com&lt;/b&gt;: Specify one of the following values, depending on whether ACM provided your certificate or you purchased your certificate from third-party certificate authority:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;ACMCertificateArn&amp;gt;&lt;i&gt;ARN for ACM SSL/TLS certificate&lt;/i&gt;&amp;lt;ACMCertificateArn&amp;gt;&lt;/code&gt; where &lt;code&gt; &lt;i&gt;ARN for ACM SSL/TLS certificate&lt;/i&gt; &lt;/code&gt; is the ARN for the ACM SSL/TLS certificate that you want to use for this distribution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;IAMCertificateId&amp;gt;&lt;i&gt;IAM certificate ID&lt;/i&gt;&amp;lt;IAMCertificateId&amp;gt;&lt;/code&gt; where &lt;code&gt; &lt;i&gt;IAM certificate ID&lt;/i&gt; &lt;/code&gt; is the ID that IAM returned when you added the certificate to the IAM certificate store.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you specify &lt;code&gt;ACMCertificateArn&lt;/code&gt; or &lt;code&gt;IAMCertificateId&lt;/code&gt;, you must also specify a value for &lt;code&gt;SSLSupportMethod&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you choose to use an ACM certificate or a certificate in the IAM certificate store, we recommend that you use only an alternate domain name in your object URLs (&lt;code&gt;https://example.com/logo.jpg&lt;/code&gt;). If you use the domain name that is associated with your CloudFront distribution (such as &lt;code&gt;https://d111111abcdef8.cloudfront.net/logo.jpg&lt;/code&gt;) and the viewer supports &lt;code&gt;SNI&lt;/code&gt;, then CloudFront behaves normally. However, if the browser does not support SNI, the user's experience depends on the value that you choose for &lt;code&gt;SSLSupportMethod&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;vip&lt;/code&gt;: The viewer displays a warning because there is a mismatch between the CloudFront domain name and the domain name in your SSL/TLS certificate.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;sni-only&lt;/code&gt;: CloudFront drops the connection with the browser without returning the object.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;If you're using the CloudFront domain name for your distribution, such as &lt;code&gt;d111111abcdef8.cloudfront.net&lt;/code&gt; &lt;/b&gt;: Specify the following value:&lt;/p&gt; &lt;p&gt; &lt;code&gt;&amp;lt;CloudFrontDefaultCertificate&amp;gt;true&amp;lt;CloudFrontDefaultCertificate&amp;gt; &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you want viewers to use HTTPS, you must also specify one of the following values in your cache behaviors:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt; &amp;lt;ViewerProtocolPolicy&amp;gt;https-only&amp;lt;ViewerProtocolPolicy&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;ViewerProtocolPolicy&amp;gt;redirect-to-https&amp;lt;ViewerProtocolPolicy&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can also optionally require that CloudFront use HTTPS to communicate with your origin by specifying one of the following values for the applicable origins:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;OriginProtocolPolicy&amp;gt;https-only&amp;lt;OriginProtocolPolicy&amp;gt; &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;OriginProtocolPolicy&amp;gt;match-viewer&amp;lt;OriginProtocolPolicy&amp;gt; &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS"&gt;Using Alternate Domain Names and HTTPS&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
     */
    
    public org.openapis.openapi.models.shared.ViewerCertificate viewerCertificate;
    public CreateDistribution20171030RequestBodyDistributionConfig withViewerCertificate(org.openapis.openapi.models.shared.ViewerCertificate viewerCertificate) {
        this.viewerCertificate = viewerCertificate;
        return this;
    }
    
    
    public String webACLId;
    public CreateDistribution20171030RequestBodyDistributionConfig withWebACLId(String webACLId) {
        this.webACLId = webACLId;
        return this;
    }
    
}
