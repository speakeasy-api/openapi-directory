<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Answer - Represents an answer to a question
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Answer
{
    /**
     * Represents the author of a question or answer
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Author $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Author')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Author $author = null;
    
    /**
     * Output only. The timestamp for when the answer was written.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Output only. The unique name for the answer accounts/* /locations/* /questions/* /answers/*
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters.
     * 
     * @var ?string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $text = null;
    
    /**
     * Output only. The timestamp for when the answer was last modified.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
    /**
     * Output only. The number of upvotes for the answer.
     * 
     * @var ?int $upvoteCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('upvoteCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $upvoteCount = null;
    
	public function __construct()
	{
		$this->author = null;
		$this->createTime = null;
		$this->name = null;
		$this->text = null;
		$this->updateTime = null;
		$this->upvoteCount = null;
	}
}
