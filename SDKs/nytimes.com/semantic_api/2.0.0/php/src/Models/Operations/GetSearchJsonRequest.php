<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSearchJsonRequest
{
    /**
     * "all" or comma-separated list of specific optional fields: pages, ticker_symbol, links, taxonomy, combinations, geocodes, article_list, scope_notes, search_api_query
     * 
     * 
     * Optional fields are returned in result_set. They are briefly explained here:
     * 
     * pages: A list of topic pages associated with a specific concept.
     * ticker_symbol: If this concept is a publicly traded company, this field contains the ticker symbol.
     * links: A list of links from this concept to external data resources.
     * taxonomy: For descriptor concepts, this field returns a list of taxonomic relations to other concepts.
     * combinations: For descriptor concepts, this field returns a list of the specific meanings tis concept takes on when combined with other concepts.
     * geocodes: For geographic concepts, the full GIS record from geonames.
     * article_list: A list of up to 10 articles associated with this concept.
     * scope_notes: Scope notes contains clarifications and meaning definitions that explicate the relationship between the concept and an article.
     * search_api_query: Returns the request one would need to submit to the Article Search API to obtain a list of articles annotated with this concept.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetSearchJsonFieldsEnum $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?GetSearchJsonFieldsEnum $fields = null;
    
    /**
     * Integer value for the index count from the first concept to the last concept, sorted alphabetically. Used in a Search Query. A Search Query will return up to 10 concepts in its results.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Precedes the search term string. Used in a Search Query. Except for &lt;specific_concept_name&gt;, Search Query will take the required parameters listed above (&lt;concept_type&gt;, &lt;concept_uri&gt;, &lt;article_uri&gt;) as an optional_parameter in addition to the query=&lt;query_term&gt;.
     * 
     * @var string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public string $query;
    
	public function __construct()
	{
		$this->fields = null;
		$this->offset = null;
		$this->query = "";
	}
}
