/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MobileUsabilityIssue } from "./mobileusabilityissue";
import { Expose, Type } from "class-transformer";

/**
 * High-level mobile-usability inspection result for this URL.
 */
export enum MobileUsabilityInspectionResultVerdictEnum {
  VerdictUnspecified = "VERDICT_UNSPECIFIED",
  Pass = "PASS",
  Partial = "PARTIAL",
  Fail = "FAIL",
  Neutral = "NEUTRAL",
}

/**
 * Mobile-usability inspection results.
 */
export class MobileUsabilityInspectionResult extends SpeakeasyBase {
  /**
   * A list of zero or more mobile-usability issues detected for this URL.
   */
  @SpeakeasyMetadata({ elemType: MobileUsabilityIssue })
  @Expose({ name: "issues" })
  @Type(() => MobileUsabilityIssue)
  issues?: MobileUsabilityIssue[];

  /**
   * High-level mobile-usability inspection result for this URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verdict" })
  verdict?: MobileUsabilityInspectionResultVerdictEnum;
}
