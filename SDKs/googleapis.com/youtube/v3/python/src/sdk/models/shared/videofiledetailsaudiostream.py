"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VideoFileDetailsAudioStream:
    r"""Information about an audio stream."""
    
    bitrate_bps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrateBps'), 'exclude': lambda f: f is None }})
    r"""The audio stream's bitrate, in bits per second."""  
    channel_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelCount'), 'exclude': lambda f: f is None }})
    r"""The number of audio channels that the stream contains."""  
    codec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codec'), 'exclude': lambda f: f is None }})
    r"""The audio codec that the stream uses."""  
    vendor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendor'), 'exclude': lambda f: f is None }})
    r"""A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code."""  
    