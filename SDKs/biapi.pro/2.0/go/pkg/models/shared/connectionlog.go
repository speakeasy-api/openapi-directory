// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type ConnectionLog struct {
	// If fail, contains the error code
	Error *string `json:"error,omitempty"`
	// If fail, error message received from connector
	ErrorMessage *string `json:"error_message,omitempty"`
	// MD5 hash of the exception backtrace
	ErrorUID *string `json:"error_uid,omitempty"`
	// Fields for connection in additionalInformationNeeded state with background option
	Fields *string `json:"fields,omitempty"`
	// ID of the log
	ID int64 `json:"id"`
	// ID of the connection
	IDConnection int64 `json:"id_connection"`
	// ID of the connector
	IDConnector *int64 `json:"id_connector,omitempty"`
	// ID of the related connection source
	IDSource *int64 `json:"id_source,omitempty"`
	// ID of the user
	IDUser *int64 `json:"id_user,omitempty"`
	// bcrypt hash of the login
	Login *string `json:"login,omitempty"`
	// In case of bank connection, number of accounts
	NbAccounts *int64 `json:"nb_accounts,omitempty"`
	// If fail, the date represents the next try to connect
	NextTry *time.Time `json:"next_try,omitempty"`
	// Session folder uid
	SessionFolderID *string `json:"session_folder_id,omitempty"`
	// Timestamp when the synchronization has started
	Start *time.Time `json:"start,omitempty"`
	// Status of user (1 = charged user)
	Statut *int64 `json:"statut,omitempty"`
	// Timestamp of log, when the synchronization has finished
	Timestamp time.Time `json:"timestamp"`
	// Worker used to do synchronization
	Worker *string `json:"worker,omitempty"`
}
