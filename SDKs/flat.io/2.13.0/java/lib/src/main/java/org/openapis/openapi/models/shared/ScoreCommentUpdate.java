/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScoreCommentUpdate - Update of a comment
 */
public class ScoreCommentUpdate {
    /**
     * The comment text that can includes mentions using the following format: `@[id:username]`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public ScoreCommentUpdate withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The context of the comment (for inline/contextualized comments). A context will include all the information related to the location of the comment (i.e. score parts, range of measure, time position).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public ScoreCommentContext context;
    public ScoreCommentUpdate withContext(ScoreCommentContext context) {
        this.context = context;
        return this;
    }
    
    /**
     * A raw version of the comment, that can be displayed without the mentions. If you use mentions, this property must be set.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rawComment")
    public String rawComment;
    public ScoreCommentUpdate withRawComment(String rawComment) {
        this.rawComment = rawComment;
        return this;
    }
    
    /**
     * The unique indentifier of the revision of the score where the comment was added. If this property is unspecified or contains "last", the API will automatically take the last revision created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revision")
    public String revision;
    public ScoreCommentUpdate withRevision(String revision) {
        this.revision = revision;
        return this;
    }
    
}
