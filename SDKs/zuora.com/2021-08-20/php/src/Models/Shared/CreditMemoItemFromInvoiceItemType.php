<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreditMemoItemFromInvoiceItemType - Container for custom fields of a Credit Memo Item object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreditMemoItemFromInvoiceItemType
{
    /**
     * The amount of the credit memo item.
     * 
     * 
     * 
     * @var float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $amount;
    
    /**
     * Comments about the credit memo item.
     * 
     * 
     * **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
     * 
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * The description of the credit memo item.
     * 
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
     * 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Container for the finance information related to the credit memo item.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreditMemoItemFromInvoiceItemTypeFinanceInformation $financeInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('financeInformation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreditMemoItemFromInvoiceItemTypeFinanceInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreditMemoItemFromInvoiceItemTypeFinanceInformation $financeInformation = null;
    
    /**
     * The ID of the invoice item.
     * 
     * 
     * 
     * @var ?string $invoiceItemId
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoiceItemId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $invoiceItemId = null;
    
    /**
     * The number of units for the credit memo item.
     * 
     * 
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     * The service end date of the credit memo item.
     * 
     * 
     * 
     * @var ?\DateTime $serviceEndDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceEndDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $serviceEndDate = null;
    
    /**
     * The service start date of the credit memo item.
     * 
     * 
     * 
     * @var ?\DateTime $serviceStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceStartDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $serviceStartDate = null;
    
    /**
     * The name of the charge associated with the invoice.
     * 
     * 
     * 
     * @var string $skuName
     */
	#[\JMS\Serializer\Annotation\SerializedName('skuName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $skuName;
    
    /**
     * Container for taxation items.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CreditMemoTaxItemFromInvoiceTaxItemType> $taxItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CreditMemoTaxItemFromInvoiceTaxItemType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taxItems = null;
    
    /**
     * The tax mode of the credit memo item, indicating whether the amount of the credit memo item includes tax.
     * 
     * 
     * **Note**: You can set this field to `TaxInclusive` only if the `taxAutoCalculation` field is set to `true`.
     * 
     * If you set `taxMode` to `TaxInclusive`, you cannot input tax amounts for credit memo items. The corresponding invoice item must use the same tax engine as the credit memo item to calculate tax amounts.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreditMemoItemFromInvoiceItemTypeTaxModeEnum $taxMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreditMemoItemFromInvoiceItemTypeTaxModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreditMemoItemFromInvoiceItemTypeTaxModeEnum $taxMode = null;
    
    /**
     * The definable unit that you measure when determining charges.
     * 
     * 
     * 
     * @var ?string $unitOfMeasure
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitOfMeasure')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unitOfMeasure = null;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->comment = null;
		$this->description = null;
		$this->financeInformation = null;
		$this->invoiceItemId = null;
		$this->quantity = null;
		$this->serviceEndDate = null;
		$this->serviceStartDate = null;
		$this->skuName = "";
		$this->taxItems = null;
		$this->taxMode = null;
		$this->unitOfMeasure = null;
	}
}
