"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DashboardCRCSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class DashboardCRCRequest:
    
    from_: date = dataclasses.field(metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Start date in 'yyyy-mm-dd' format. The date range defined by the \\"from\\" and \\"to\\" parameters should only be one month as the report includes only one month worth of data at once."""  
    to: date = dataclasses.field(metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""End date."""  
    

@dataclasses.dataclass
class DashboardCRC200ApplicationXMLCRCPortsUsageCRCPortsHourUsage:
    
    hour: Optional[str] = dataclasses.field(default=None)
    r"""Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23."""  
    max_usage: Optional[int] = dataclasses.field(default=None)
    r"""The maximum number of concurrent ports that are being used in that hour."""  
    total_usage: Optional[int] = dataclasses.field(default=None)
    r"""The total number of H.323/SIP connections in that hour."""  
    

@dataclasses.dataclass
class DashboardCRC200ApplicationXMLCRCPortsUsage:
    
    crc_ports_hour_usage: Optional[list[DashboardCRC200ApplicationXMLCRCPortsUsageCRCPortsHourUsage]] = dataclasses.field(default=None)  
    date_time: Optional[datetime] = dataclasses.field(default=None)
    r"""The date and time of the port usage."""  
    

@dataclasses.dataclass
class DashboardCRC200ApplicationXML:
    r"""**HTTP Status Code:** `200`<br>
    CRC usage returned.<br>
    Only available for paid accounts that have enabled the Dashboard feature.
    """
    
    crc_ports_usage: Optional[list[DashboardCRC200ApplicationXMLCRCPortsUsage]] = dataclasses.field(default=None)  
    from_: Optional[date] = dataclasses.field(default=None)
    r"""Start date for this report."""  
    to: Optional[date] = dataclasses.field(default=None)
    r"""End date for this report."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DashboardCRC200ApplicationJSONCRCPortsUsageCRCPortsHourUsage:
    
    hour: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hour'), 'exclude': lambda f: f is None }})
    r"""Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23."""  
    max_usage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_usage'), 'exclude': lambda f: f is None }})
    r"""The maximum number of concurrent ports that are being used in that hour."""  
    total_usage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_usage'), 'exclude': lambda f: f is None }})
    r"""The total number of H.323/SIP connections in that hour."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DashboardCRC200ApplicationJSONCRCPortsUsage:
    
    crc_ports_hour_usage: Optional[list[DashboardCRC200ApplicationJSONCRCPortsUsageCRCPortsHourUsage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crc_ports_hour_usage'), 'exclude': lambda f: f is None }})  
    date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time of the port usage."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DashboardCRC200ApplicationJSON:
    r"""**HTTP Status Code:** `200`<br>
    CRC usage returned.<br>
    Only available for paid accounts that have enabled the Dashboard feature.
    """
    
    crc_ports_usage: Optional[list[DashboardCRC200ApplicationJSONCRCPortsUsage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crc_ports_usage'), 'exclude': lambda f: f is None }})  
    from_: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Start date for this report."""  
    to: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""End date for this report."""  
    

@dataclasses.dataclass
class DashboardCRCResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    dashboard_crc_200_application_json_object: Optional[DashboardCRC200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    CRC usage returned.<br>
    Only available for paid accounts that have enabled the Dashboard feature.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    