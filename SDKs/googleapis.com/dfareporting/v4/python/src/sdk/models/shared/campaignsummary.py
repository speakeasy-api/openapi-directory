"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CampaignSummary:
    r"""Represents a summarized campaign information associated with this invoice."""
    
    billing_invoice_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingInvoiceCode'), 'exclude': lambda f: f is None }})
    r"""Campaign billing invoice code."""  
    campaign_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaignId'), 'exclude': lambda f: f is None }})
    r"""Campaign ID."""  
    pre_tax_amount_micros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preTaxAmountMicros'), 'exclude': lambda f: f is None }})
    r"""The pre-tax amount for this campaign, in micros of the invoice's currency."""  
    tax_amount_micros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxAmountMicros'), 'exclude': lambda f: f is None }})
    r"""The tax amount for this campaign, in micros of the invoice's currency."""  
    total_amount_micros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalAmountMicros'), 'exclude': lambda f: f is None }})
    r"""The total amount of charges for this campaign, in micros of the invoice's currency."""  
    