"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import v2androidkeyrestrictions as shared_v2androidkeyrestrictions
from ..shared import v2apitarget as shared_v2apitarget
from ..shared import v2browserkeyrestrictions as shared_v2browserkeyrestrictions
from ..shared import v2ioskeyrestrictions as shared_v2ioskeyrestrictions
from ..shared import v2serverkeyrestrictions as shared_v2serverkeyrestrictions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2Restrictions:
    r"""Describes the restrictions on the key."""
    
    android_key_restrictions: Optional[shared_v2androidkeyrestrictions.V2AndroidKeyRestrictions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidKeyRestrictions'), 'exclude': lambda f: f is None }})
    r"""The Android apps that are allowed to use the key."""  
    api_targets: Optional[list[shared_v2apitarget.V2APITarget]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiTargets'), 'exclude': lambda f: f is None }})
    r"""A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed."""  
    browser_key_restrictions: Optional[shared_v2browserkeyrestrictions.V2BrowserKeyRestrictions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('browserKeyRestrictions'), 'exclude': lambda f: f is None }})
    r"""The HTTP referrers (websites) that are allowed to use the key."""  
    ios_key_restrictions: Optional[shared_v2ioskeyrestrictions.V2IosKeyRestrictions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosKeyRestrictions'), 'exclude': lambda f: f is None }})
    r"""The iOS apps that are allowed to use the key."""  
    server_key_restrictions: Optional[shared_v2serverkeyrestrictions.V2ServerKeyRestrictions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverKeyRestrictions'), 'exclude': lambda f: f is None }})
    r"""The IP addresses of callers that are allowed to use the key."""  
    