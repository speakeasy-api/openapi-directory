/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PublishedOralQuestionTimeGetRequest extends SpeakeasyBase {
  /**
   * Which answering body is to respond. A list of answering bodies can be found <a target="_blank" href="http://data.parliament.uk/membersdataplatform/services/mnis/referencedata/AnsweringBodies/">here</a>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.answeringBodyIds",
  })
  parametersAnsweringBodyIds?: number[];

  /**
   * Oral Questions Time where the answering date has been set on or before the date provided. Date format YYYY-MM-DD.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.answeringDateEnd;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  parametersAnsweringDateEnd?: Date;

  /**
   * Oral Questions Time where the answering date has been set on or after the date provided. Date format YYYY-MM-DD.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.answeringDateStart;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  parametersAnsweringDateStart?: Date;

  /**
   * Oral Questions Time where the deadline date has been set on or before the date provided. Date format YYYY-MM-DD.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.deadlineDateEnd;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  parametersDeadlineDateEnd?: Date;

  /**
   * Oral Questions Time where the deadline date has been set on or after the date provided. Date format YYYY-MM-DD.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.deadlineDateStart;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  parametersDeadlineDateStart?: Date;

  /**
   * Identifier of the OQT
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.oralQuestionTimeId",
  })
  parametersOralQuestionTimeId?: number;

  /**
   * The number of records to skip from the first, default is 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.skip",
  })
  parametersSkip?: number;

  /**
   * The number of records to return, default is 25, maximum is 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameters.take",
  })
  parametersTake?: number;
}

export class PublishedOralQuestionTimeGetResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  apiResponseListPublishedWrittenQuestion?: shared.ApiResponseListPublishedWrittenQuestion;

  /**
   * BadRequest
   */
  @SpeakeasyMetadata()
  apiResponseObject?: shared.ApiResponseObject;

  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
