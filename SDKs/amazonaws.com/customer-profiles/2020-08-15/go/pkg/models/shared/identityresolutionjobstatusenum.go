// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IdentityResolutionJobStatusEnum string

const (
	IdentityResolutionJobStatusEnumPending        IdentityResolutionJobStatusEnum = "PENDING"
	IdentityResolutionJobStatusEnumPreprocessing  IdentityResolutionJobStatusEnum = "PREPROCESSING"
	IdentityResolutionJobStatusEnumFindMatching   IdentityResolutionJobStatusEnum = "FIND_MATCHING"
	IdentityResolutionJobStatusEnumMerging        IdentityResolutionJobStatusEnum = "MERGING"
	IdentityResolutionJobStatusEnumCompleted      IdentityResolutionJobStatusEnum = "COMPLETED"
	IdentityResolutionJobStatusEnumPartialSuccess IdentityResolutionJobStatusEnum = "PARTIAL_SUCCESS"
	IdentityResolutionJobStatusEnumFailed         IdentityResolutionJobStatusEnum = "FAILED"
)

func (e *IdentityResolutionJobStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "PREPROCESSING":
		fallthrough
	case "FIND_MATCHING":
		fallthrough
	case "MERGING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "PARTIAL_SUCCESS":
		fallthrough
	case "FAILED":
		*e = IdentityResolutionJobStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IdentityResolutionJobStatusEnum: %s", s)
	}
}
