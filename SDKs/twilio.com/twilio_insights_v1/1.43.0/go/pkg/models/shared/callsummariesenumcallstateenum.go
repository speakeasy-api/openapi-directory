// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CallSummariesEnumCallStateEnum string

const (
	CallSummariesEnumCallStateEnumRinging   CallSummariesEnumCallStateEnum = "ringing"
	CallSummariesEnumCallStateEnumCompleted CallSummariesEnumCallStateEnum = "completed"
	CallSummariesEnumCallStateEnumBusy      CallSummariesEnumCallStateEnum = "busy"
	CallSummariesEnumCallStateEnumFail      CallSummariesEnumCallStateEnum = "fail"
	CallSummariesEnumCallStateEnumNoanswer  CallSummariesEnumCallStateEnum = "noanswer"
	CallSummariesEnumCallStateEnumCanceled  CallSummariesEnumCallStateEnum = "canceled"
	CallSummariesEnumCallStateEnumAnswered  CallSummariesEnumCallStateEnum = "answered"
	CallSummariesEnumCallStateEnumUndialed  CallSummariesEnumCallStateEnum = "undialed"
)

func (e CallSummariesEnumCallStateEnum) ToPointer() *CallSummariesEnumCallStateEnum {
	return &e
}

func (e *CallSummariesEnumCallStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ringing":
		fallthrough
	case "completed":
		fallthrough
	case "busy":
		fallthrough
	case "fail":
		fallthrough
	case "noanswer":
		fallthrough
	case "canceled":
		fallthrough
	case "answered":
		fallthrough
	case "undialed":
		*e = CallSummariesEnumCallStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CallSummariesEnumCallStateEnum: %v", v)
	}
}
