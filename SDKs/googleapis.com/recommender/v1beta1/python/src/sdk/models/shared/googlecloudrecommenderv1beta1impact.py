"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrecommenderv1beta1costprojection as shared_googlecloudrecommenderv1beta1costprojection
from ..shared import googlecloudrecommenderv1beta1reliabilityprojection as shared_googlecloudrecommenderv1beta1reliabilityprojection
from ..shared import googlecloudrecommenderv1beta1securityprojection as shared_googlecloudrecommenderv1beta1securityprojection
from ..shared import googlecloudrecommenderv1beta1sustainabilityprojection as shared_googlecloudrecommenderv1beta1sustainabilityprojection
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudRecommenderV1beta1ImpactCategoryEnum(str, Enum):
    r"""Category that is being targeted."""
    CATEGORY_UNSPECIFIED = 'CATEGORY_UNSPECIFIED'
    COST = 'COST'
    SECURITY = 'SECURITY'
    PERFORMANCE = 'PERFORMANCE'
    MANAGEABILITY = 'MANAGEABILITY'
    SUSTAINABILITY = 'SUSTAINABILITY'
    RELIABILITY = 'RELIABILITY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecommenderV1beta1Impact:
    r"""Contains the impact a recommendation can have for a given category."""
    
    category: Optional[GoogleCloudRecommenderV1beta1ImpactCategoryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""Category that is being targeted."""  
    cost_projection: Optional[shared_googlecloudrecommenderv1beta1costprojection.GoogleCloudRecommenderV1beta1CostProjection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('costProjection'), 'exclude': lambda f: f is None }})
    r"""Contains metadata about how much money a recommendation can save or incur."""  
    reliability_projection: Optional[shared_googlecloudrecommenderv1beta1reliabilityprojection.GoogleCloudRecommenderV1beta1ReliabilityProjection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reliabilityProjection'), 'exclude': lambda f: f is None }})
    r"""Contains information on the impact of a reliability recommendation."""  
    security_projection: Optional[shared_googlecloudrecommenderv1beta1securityprojection.GoogleCloudRecommenderV1beta1SecurityProjection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securityProjection'), 'exclude': lambda f: f is None }})
    r"""Contains various ways of describing the impact on Security."""  
    sustainability_projection: Optional[shared_googlecloudrecommenderv1beta1sustainabilityprojection.GoogleCloudRecommenderV1beta1SustainabilityProjection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sustainabilityProjection'), 'exclude': lambda f: f is None }})
    r"""Contains metadata about how much sustainability a recommendation can save or incur."""  
    