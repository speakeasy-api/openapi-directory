// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeAttachmentXAmzTargetEnum
type DescribeAttachmentXAmzTargetEnum string

const (
	DescribeAttachmentXAmzTargetEnumAwsSupport20130415DescribeAttachment DescribeAttachmentXAmzTargetEnum = "AWSSupport_20130415.DescribeAttachment"
)

func (e DescribeAttachmentXAmzTargetEnum) ToPointer() *DescribeAttachmentXAmzTargetEnum {
	return &e
}

func (e *DescribeAttachmentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSSupport_20130415.DescribeAttachment":
		*e = DescribeAttachmentXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeAttachmentXAmzTargetEnum: %v", v)
	}
}

type DescribeAttachmentRequest struct {
	DescribeAttachmentRequest shared.DescribeAttachmentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                DescribeAttachmentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeAttachmentResponse struct {
	// AttachmentIdNotFound
	AttachmentIDNotFound interface{}
	ContentType          string
	// DescribeAttachmentLimitExceeded
	DescribeAttachmentLimitExceeded interface{}
	// Success
	DescribeAttachmentResponse *shared.DescribeAttachmentResponse
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
