<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TableDataInsertAllRequest
{
    /**
     * [Optional] Accept rows that contain values that do not match the schema. The unknown values are ignored. Default is false, which treats unknown values as errors.
     * 
     * @var ?bool $ignoreUnknownValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreUnknownValues')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreUnknownValues = null;
    
    /**
     * The resource type of the response.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The rows to insert.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TableDataInsertAllRequestRows> $rows
     */
	#[\JMS\Serializer\Annotation\SerializedName('rows')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TableDataInsertAllRequestRows>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $rows = null;
    
    /**
     * [Optional] Insert all valid rows of a request, even if invalid rows exist. The default value is false, which causes the entire request to fail if any invalid rows exist.
     * 
     * @var ?bool $skipInvalidRows
     */
	#[\JMS\Serializer\Annotation\SerializedName('skipInvalidRows')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $skipInvalidRows = null;
    
    /**
     * If specified, treats the destination table as a base template, and inserts the rows into an instance table named "{destination}{templateSuffix}". BigQuery will manage creation of the instance table, using the schema of the base template table. See https://cloud.google.com/bigquery/streaming-data-into-bigquery#template-tables for considerations when working with templates tables.
     * 
     * @var ?string $templateSuffix
     */
	#[\JMS\Serializer\Annotation\SerializedName('templateSuffix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $templateSuffix = null;
    
	public function __construct()
	{
		$this->ignoreUnknownValues = null;
		$this->kind = null;
		$this->rows = null;
		$this->skipInvalidRows = null;
		$this->templateSuffix = null;
	}
}
