// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConditionalSingleFieldDependencyDependencyTypeEnum string

const (
	ConditionalSingleFieldDependencyDependencyTypeEnumConditionalSingleField ConditionalSingleFieldDependencyDependencyTypeEnum = "CONDITIONAL_SINGLE_FIELD"
)

func (e *ConditionalSingleFieldDependencyDependencyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONDITIONAL_SINGLE_FIELD":
		*e = ConditionalSingleFieldDependencyDependencyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConditionalSingleFieldDependencyDependencyTypeEnum: %s", s)
	}
}

type ConditionalSingleFieldDependency struct {
	ControllingFieldName  string                                             `json:"controllingFieldName"`
	ControllingFieldValue string                                             `json:"controllingFieldValue"`
	DependencyType        ConditionalSingleFieldDependencyDependencyTypeEnum `json:"dependencyType"`
	DependentFieldNames   []string                                           `json:"dependentFieldNames"`
}
