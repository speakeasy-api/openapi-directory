/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult } from "./googleclouddiscoveryenginev1alpharecommendresponserecommendationresult";
import { Expose, Type } from "class-transformer";

/**
 * Response message for Recommend method.
 */
export class GoogleCloudDiscoveryengineV1alphaRecommendResponse extends SpeakeasyBase {
  /**
   * A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributionToken" })
  attributionToken?: string;

  /**
   * IDs of documents in the request that were missing from the default Branch associated with the requested ServingConfig.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "missingIds" })
  missingIds?: string[];

  /**
   * A list of recommended Documents. The order represents the ranking (from the most relevant Document to the least).
   */
  @SpeakeasyMetadata({
    elemType:
      GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult,
  })
  @Expose({ name: "results" })
  @Type(
    () => GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult
  )
  results?: GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult[];

  /**
   * True if RecommendRequest.validate_only was set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validateOnly" })
  validateOnly?: boolean;
}
