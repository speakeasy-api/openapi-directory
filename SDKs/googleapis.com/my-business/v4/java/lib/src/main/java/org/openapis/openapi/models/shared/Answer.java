/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Answer - Represents an answer to a question
 */
public class Answer {
    /**
     * Represents the author of a question or answer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public Author author;

    public Answer withAuthor(Author author) {
        this.author = author;
        return this;
    }
    
    /**
     * Output only. The timestamp for when the answer was written.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Answer withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. The unique name for the answer accounts/* /locations/* /questions/* /answers/*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Answer withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public Answer withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * Output only. The timestamp for when the answer was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Answer withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Output only. The number of upvotes for the answer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upvoteCount")
    public Integer upvoteCount;

    public Answer withUpvoteCount(Integer upvoteCount) {
        this.upvoteCount = upvoteCount;
        return this;
    }
    
    public Answer(){}
}
