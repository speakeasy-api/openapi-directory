/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConfigRoomRequest - Request model for configuring a room
 */
public class ConfigRoomRequest {
    /**
     * List of group ids
     * 
     * A room requires at least one admin (user or group)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminGroupIds")
    public Long[] adminGroupIds;
    public ConfigRoomRequest withAdminGroupIds(Long[] adminGroupIds) {
        this.adminGroupIds = adminGroupIds;
        return this;
    }
    
    /**
     * List of user ids
     * 
     * A room requires at least one admin (user or group)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminIds")
    public Long[] adminIds;
    public ConfigRoomRequest withAdminIds(Long[] adminIds) {
        this.adminIds = adminIds;
        return this;
    }
    
    /**
     * Classification ID:
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * Provided (or default) classification is taken from room
     * 
     * when file gets uploaded without any classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public ConfigRoomRequestClassificationEnum classification;
    public ConfigRoomRequest withClassification(ConfigRoomRequestClassificationEnum classification) {
        this.classification = classification;
        return this;
    }
    
    /**
     * Is activities log active (for rooms only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasActivitiesLog")
    public Boolean hasActivitiesLog;
    public ConfigRoomRequest withHasActivitiesLog(Boolean hasActivitiesLog) {
        this.hasActivitiesLog = hasActivitiesLog;
        return this;
    }
    
    /**
     * Inherit permissions from parent room
     * 
     * (default: `false` if `parentId` is `0`; otherwise: `true`)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inheritPermissions")
    public Boolean inheritPermissions;
    public ConfigRoomRequest withInheritPermissions(Boolean inheritPermissions) {
        this.inheritPermissions = inheritPermissions;
        return this;
    }
    
    /**
     * Behaviour when new users are added to the group:
     * 
     * * `autoallow`
     * 
     * * `pending`
     * 
     * 
     * 
     * Only relevant if `adminGroupIds` has items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newGroupMemberAcceptance")
    public ConfigRoomRequestNewGroupMemberAcceptanceEnum newGroupMemberAcceptance;
    public ConfigRoomRequest withNewGroupMemberAcceptance(ConfigRoomRequestNewGroupMemberAcceptanceEnum newGroupMemberAcceptance) {
        this.newGroupMemberAcceptance = newGroupMemberAcceptance;
        return this;
    }
    
    /**
     * Retention period for deleted nodes in days
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recycleBinRetentionPeriod")
    public Integer recycleBinRetentionPeriod;
    public ConfigRoomRequest withRecycleBinRetentionPeriod(Integer recycleBinRetentionPeriod) {
        this.recycleBinRetentionPeriod = recycleBinRetentionPeriod;
        return this;
    }
    
    /**
     * Take over existing permissions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("takeOverPermissions")
    public Boolean takeOverPermissions;
    public ConfigRoomRequest withTakeOverPermissions(Boolean takeOverPermissions) {
        this.takeOverPermissions = takeOverPermissions;
        return this;
    }
    
}
