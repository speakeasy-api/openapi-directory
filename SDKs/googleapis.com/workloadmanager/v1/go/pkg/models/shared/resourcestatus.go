// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ResourceStatusStateEnum - State of the resource
type ResourceStatusStateEnum string

const (
	ResourceStatusStateEnumStateUnspecified ResourceStatusStateEnum = "STATE_UNSPECIFIED"
	ResourceStatusStateEnumCreating         ResourceStatusStateEnum = "CREATING"
	ResourceStatusStateEnumActive           ResourceStatusStateEnum = "ACTIVE"
	ResourceStatusStateEnumDeleting         ResourceStatusStateEnum = "DELETING"
)

func (e ResourceStatusStateEnum) ToPointer() *ResourceStatusStateEnum {
	return &e
}

func (e *ResourceStatusStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETING":
		*e = ResourceStatusStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceStatusStateEnum: %v", v)
	}
}

// ResourceStatus - Message describing resource status
type ResourceStatus struct {
	// the new version of rule id if exists
	RulesNewerVersions []string `json:"rulesNewerVersions,omitempty"`
	// State of the resource
	State *ResourceStatusStateEnum `json:"state,omitempty"`
}
