/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoyaltyAccountMapping } from "./loyaltyaccountmapping";
import { Expose, Type } from "class-transformer";

/**
 * The search criteria for the loyalty accounts.
 */
export class SearchLoyaltyAccountsRequestLoyaltyAccountQuery extends SpeakeasyBase {
  /**
   * The set of customer IDs to use in the loyalty account search.
   *
   * @remarks
   *
   * This cannot be combined with `mappings`.
   *
   * Max: 30 customer IDs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer_ids" })
  customerIds?: string[];

  /**
   * The set of mappings to use in the loyalty account search.
   *
   * @remarks
   *
   * This cannot be combined with `customer_ids`.
   *
   * Max: 30 mappings
   */
  @SpeakeasyMetadata({ elemType: LoyaltyAccountMapping })
  @Expose({ name: "mappings" })
  @Type(() => LoyaltyAccountMapping)
  mappings?: LoyaltyAccountMapping[];
}
