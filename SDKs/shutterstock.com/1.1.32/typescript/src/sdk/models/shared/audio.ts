/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Album } from "./album";
import { Artist } from "./artist";
import { AudioAssets } from "./audioassets";
import { Contributor } from "./contributor";
import { ModelRelease } from "./modelrelease";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Audio metadata
 */
export class Audio extends SpeakeasyBase {
  /**
   * Date this track was added to the Shutterstock library
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  addedDate?: Date;

  /**
   * Affiliate referral link; appears only for registered affiliate partners
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affiliate_url" })
  affiliateUrl?: string;

  /**
   * Album metadata
   */
  @SpeakeasyMetadata()
  @Expose({ name: "album" })
  @Type(() => Album)
  album?: Album;

  /**
   * List of artists
   */
  @SpeakeasyMetadata({ elemType: Artist })
  @Expose({ name: "artists" })
  @Type(() => Artist)
  artists?: Artist[];

  /**
   * Files that are available as part of an audio asset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  @Type(() => AudioAssets)
  assets?: AudioAssets;

  /**
   * BPM (beats per minute) of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bpm" })
  bpm?: number;

  /**
   * Information about a contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor" })
  @Type(() => Contributor)
  contributor: Contributor;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedTime?: Date;

  /**
   * Description of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Duration of this track in seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * List of all genres for this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "genres" })
  genres?: string[];

  /**
   * Shutterstock ID of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * List of all instruments that appear in this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instruments" })
  instruments?: string[];

  /**
   * Whether or not this track contains adult content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_adult" })
  isAdult?: boolean;

  /**
   * Whether or not this track is purely instrumental (lacking lyrics)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_instrumental" })
  isInstrumental?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isrc" })
  isrc?: string;

  /**
   * List of all keywords for this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keywords" })
  keywords?: string[];

  /**
   * Language of this track's lyrics
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * Lyrics of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lyrics" })
  lyrics?: string;

  /**
   * Media type of this track; should always be "audio"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "media_type" })
  mediaType: string;

  /**
   * List of all model releases for this track
   */
  @SpeakeasyMetadata({ elemType: ModelRelease })
  @Expose({ name: "model_releases" })
  @Type(() => ModelRelease)
  modelReleases?: ModelRelease[];

  /**
   * List of all moods of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "moods" })
  moods?: string[];

  /**
   * Time this track was published
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishedTime?: Date;

  /**
   * Recording version of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_version" })
  recordingVersion?: string;

  /**
   * List of all releases of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releases" })
  releases?: string[];

  /**
   * List of all similar artists of this track
   */
  @SpeakeasyMetadata({ elemType: Artist })
  @Expose({ name: "similar_artists" })
  @Type(() => Artist)
  similarArtists?: Artist[];

  /**
   * Time this track was submitted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submitted_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submittedTime?: Date;

  /**
   * Title of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * Time this track was last updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Vocal description of this track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vocal_description" })
  vocalDescription?: string;
}
