/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetOrganizationWebhooksLogs200ApplicationJSON {
    /**
     * Type of alert that the webhook is delivering
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alertType")
    public String alertType;

    public GetOrganizationWebhooksLogs200ApplicationJSON withAlertType(String alertType) {
        this.alertType = alertType;
        return this;
    }
    
    /**
     * When the webhook log was created, in ISO8601 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("loggedAt")
    public OffsetDateTime loggedAt;

    public GetOrganizationWebhooksLogs200ApplicationJSON withLoggedAt(OffsetDateTime loggedAt) {
        this.loggedAt = loggedAt;
        return this;
    }
    
    /**
     * Network ID for the webhook log
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkId")
    public String networkId;

    public GetOrganizationWebhooksLogs200ApplicationJSON withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }
    
    /**
     * ID for the webhook log's organization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationId")
    public String organizationId;

    public GetOrganizationWebhooksLogs200ApplicationJSON withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * Response code from the webhook
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseCode")
    public Long responseCode;

    public GetOrganizationWebhooksLogs200ApplicationJSON withResponseCode(Long responseCode) {
        this.responseCode = responseCode;
        return this;
    }
    
    /**
     * Duration of the response, in milliseconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseDuration")
    public Long responseDuration;

    public GetOrganizationWebhooksLogs200ApplicationJSON withResponseDuration(Long responseDuration) {
        this.responseDuration = responseDuration;
        return this;
    }
    
    /**
     * When the webhook was sent, in ISO8601 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("sentAt")
    public OffsetDateTime sentAt;

    public GetOrganizationWebhooksLogs200ApplicationJSON withSentAt(OffsetDateTime sentAt) {
        this.sentAt = sentAt;
        return this;
    }
    
    /**
     * URL where the webhook was sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public GetOrganizationWebhooksLogs200ApplicationJSON withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public GetOrganizationWebhooksLogs200ApplicationJSON(){}
}
