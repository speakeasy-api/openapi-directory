<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETDescribeAlarmsRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETDescribeAlarmsActionEnum $action;
    
    /**
     * Use this parameter to filter the results of the operation to only those alarms that use a certain alarm action. For example, you could specify the ARN of an SNS topic to find all alarms that send notifications to that topic.
     * 
     * @var ?string $actionPrefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ActionPrefix')]
    public ?string $actionPrefix = null;
    
    /**
     * <p>An alarm name prefix. If you specify this parameter, you receive information about all alarms that have names that start with this prefix.</p> <p>If this parameter is specified, you cannot specify <code>AlarmNames</code>.</p>
     * 
     * @var ?string $alarmNamePrefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AlarmNamePrefix')]
    public ?string $alarmNamePrefix = null;
    
    /**
     * The names of the alarms to retrieve information about.
     * 
     * @var ?array<string> $alarmNames
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AlarmNames')]
    public ?array $alarmNames = null;
    
    /**
     * Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AlarmTypeEnum> $alarmTypes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AlarmTypes')]
    public ?array $alarmTypes = null;
    
    /**
     * <p>If you use this parameter and specify the name of a composite alarm, the operation returns information about the "children" alarms of the alarm you specify. These are the metric alarms and composite alarms referenced in the <code>AlarmRule</code> field of the composite alarm that you specify in <code>ChildrenOfAlarmName</code>. Information about the composite alarm that you name in <code>ChildrenOfAlarmName</code> is not returned.</p> <p>If you specify <code>ChildrenOfAlarmName</code>, you cannot specify any other parameters in the request except for <code>MaxRecords</code> and <code>NextToken</code>. If you do so, you receive a validation error.</p> <note> <p>Only the <code>Alarm Name</code>, <code>ARN</code>, <code>StateValue</code> (OK/ALARM/INSUFFICIENT_DATA), and <code>StateUpdatedTimestamp</code> information are returned by this operation when you use this parameter. To get complete information about these alarms, perform another <code>DescribeAlarms</code> operation and specify the parent alarm names in the <code>AlarmNames</code> parameter.</p> </note>
     * 
     * @var ?string $childrenOfAlarmName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ChildrenOfAlarmName')]
    public ?string $childrenOfAlarmName = null;
    
    /**
     * The maximum number of alarm descriptions to retrieve.
     * 
     * @var ?int $maxRecords
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=MaxRecords')]
    public ?int $maxRecords = null;
    
    /**
     * The token returned by a previous call to indicate that there is more data available.
     * 
     * @var ?string $nextToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NextToken')]
    public ?string $nextToken = null;
    
    /**
     * <p>If you use this parameter and specify the name of a metric or composite alarm, the operation returns information about the "parent" alarms of the alarm you specify. These are the composite alarms that have <code>AlarmRule</code> parameters that reference the alarm named in <code>ParentsOfAlarmName</code>. Information about the alarm that you specify in <code>ParentsOfAlarmName</code> is not returned.</p> <p>If you specify <code>ParentsOfAlarmName</code>, you cannot specify any other parameters in the request except for <code>MaxRecords</code> and <code>NextToken</code>. If you do so, you receive a validation error.</p> <note> <p>Only the Alarm Name and ARN are returned by this operation when you use this parameter. To get complete information about these alarms, perform another <code>DescribeAlarms</code> operation and specify the parent alarm names in the <code>AlarmNames</code> parameter.</p> </note>
     * 
     * @var ?string $parentsOfAlarmName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ParentsOfAlarmName')]
    public ?string $parentsOfAlarmName = null;
    
    /**
     * Specify this parameter to receive information only about alarms that are currently in the state that you specify.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETDescribeAlarmsStateValueEnum $stateValue
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=StateValue')]
    public ?GETDescribeAlarmsStateValueEnum $stateValue = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETDescribeAlarmsVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETDescribeAlarmsActionEnum::DESCRIBE_ALARMS;
		$this->actionPrefix = null;
		$this->alarmNamePrefix = null;
		$this->alarmNames = null;
		$this->alarmTypes = null;
		$this->childrenOfAlarmName = null;
		$this->maxRecords = null;
		$this->nextToken = null;
		$this->parentsOfAlarmName = null;
		$this->stateValue = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETDescribeAlarmsVersionEnum::TWO_THOUSAND_AND_TEN0801;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
