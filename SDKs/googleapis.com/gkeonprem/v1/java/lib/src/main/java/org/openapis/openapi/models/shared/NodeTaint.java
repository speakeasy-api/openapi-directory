/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NodeTaint - NodeTaint applied to every Kubernetes node in a node pool. Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes. Node taints are permanent.
 */
public class NodeTaint {
    /**
     * The taint effect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effect")
    public NodeTaintEffectEnum effect;

    public NodeTaint withEffect(NodeTaintEffectEnum effect) {
        this.effect = effect;
        return this;
    }
    
    /**
     * Key associated with the effect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public NodeTaint withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Value associated with the effect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public NodeTaint withValue(String value) {
        this.value = value;
        return this;
    }
    
    public NodeTaint(){}
}
