// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetDestinationEnum string

const (
	TargetDestinationEnumNoneSpecified                               TargetDestinationEnum = "None specified"
	TargetDestinationEnumAwsElasticBeanStalk                         TargetDestinationEnum = "AWS Elastic BeanStalk"
	TargetDestinationEnumAwsFargate                                  TargetDestinationEnum = "AWS Fargate"
	TargetDestinationEnumAmazonElasticCloudComputeEc2                TargetDestinationEnum = "Amazon Elastic Cloud Compute (EC2)"
	TargetDestinationEnumAmazonElasticContainerServiceEcs            TargetDestinationEnum = "Amazon Elastic Container Service (ECS)"
	TargetDestinationEnumAmazonElasticKubernetesServiceEks           TargetDestinationEnum = "Amazon Elastic Kubernetes Service (EKS)"
	TargetDestinationEnumAuroraMySQL                                 TargetDestinationEnum = "Aurora MySQL"
	TargetDestinationEnumAuroraPostgreSQL                            TargetDestinationEnum = "Aurora PostgreSQL"
	TargetDestinationEnumAmazonRelationalDatabaseServiceOnMySQL      TargetDestinationEnum = "Amazon Relational Database Service on MySQL"
	TargetDestinationEnumAmazonRelationalDatabaseServiceOnPostgreSQL TargetDestinationEnum = "Amazon Relational Database Service on PostgreSQL"
	TargetDestinationEnumAmazonDocumentDb                            TargetDestinationEnum = "Amazon DocumentDB"
	TargetDestinationEnumAmazonDynamoDb                              TargetDestinationEnum = "Amazon DynamoDB"
	TargetDestinationEnumAmazonRelationalDatabaseService             TargetDestinationEnum = "Amazon Relational Database Service"
	TargetDestinationEnumBabelfishForAuroraPostgreSQL                TargetDestinationEnum = "Babelfish for Aurora PostgreSQL"
)

func (e *TargetDestinationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None specified":
		fallthrough
	case "AWS Elastic BeanStalk":
		fallthrough
	case "AWS Fargate":
		fallthrough
	case "Amazon Elastic Cloud Compute (EC2)":
		fallthrough
	case "Amazon Elastic Container Service (ECS)":
		fallthrough
	case "Amazon Elastic Kubernetes Service (EKS)":
		fallthrough
	case "Aurora MySQL":
		fallthrough
	case "Aurora PostgreSQL":
		fallthrough
	case "Amazon Relational Database Service on MySQL":
		fallthrough
	case "Amazon Relational Database Service on PostgreSQL":
		fallthrough
	case "Amazon DocumentDB":
		fallthrough
	case "Amazon DynamoDB":
		fallthrough
	case "Amazon Relational Database Service":
		fallthrough
	case "Babelfish for Aurora PostgreSQL":
		*e = TargetDestinationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetDestinationEnum: %s", s)
	}
}
