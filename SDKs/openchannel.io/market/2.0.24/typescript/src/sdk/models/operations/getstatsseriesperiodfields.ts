/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * The period for the series (day or month)
 */
export enum GetStatsSeriesPeriodFieldsPeriodEnum {
  Day = "day",
  Month = "month",
}

export class GetStatsSeriesPeriodFieldsRequest extends SpeakeasyBase {
  /**
   * The end date for this series (in millis)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=end" })
  end?: number;

  /**
   * The field to be graphed. This also be a comma separated list of fields and the result will be a single timeseries containing the sum of all fields.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=fields",
  })
  fields: string;

  /**
   * The period for the series (day or month)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=period",
  })
  period: GetStatsSeriesPeriodFieldsPeriodEnum;

  /**
   * A query document. Example: {'developerId': '112'} matches all the apps that have the developer with id 112
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;

  /**
   * The start date for this series (in millis)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=start" })
  start?: number;
}

export class GetStatsSeriesPeriodFieldsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
