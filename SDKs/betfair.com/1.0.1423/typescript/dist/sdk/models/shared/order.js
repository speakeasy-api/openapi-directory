"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Order = exports.OrderStatusEnum = exports.OrderSideEnum = exports.OrderPtEnum = exports.OrderOtEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Order Type - the type of the order (L = LIMIT, MOC = MARKET_ON_CLOSE, LOC = LIMIT_ON_CLOSE)
 */
var OrderOtEnum;
(function (OrderOtEnum) {
    OrderOtEnum["L"] = "L";
    OrderOtEnum["Loc"] = "LOC";
    OrderOtEnum["Moc"] = "MOC";
})(OrderOtEnum = exports.OrderOtEnum || (exports.OrderOtEnum = {}));
/**
 * Persistence Type - whether the order will persist at in play or not (L = LAPSE, P = PERSIST, MOC = Market On Close)
 */
var OrderPtEnum;
(function (OrderPtEnum) {
    OrderPtEnum["L"] = "L";
    OrderPtEnum["P"] = "P";
    OrderPtEnum["Moc"] = "MOC";
})(OrderPtEnum = exports.OrderPtEnum || (exports.OrderPtEnum = {}));
/**
 * Side - the side of the order. For Line markets a 'B' bet refers to a SELL line and an 'L' bet refers to a BUY line.
 */
var OrderSideEnum;
(function (OrderSideEnum) {
    OrderSideEnum["B"] = "B";
    OrderSideEnum["L"] = "L";
})(OrderSideEnum = exports.OrderSideEnum || (exports.OrderSideEnum = {}));
/**
 * Status - the status of the order (E = EXECUTABLE, EC = EXECUTION_COMPLETE)
 */
var OrderStatusEnum;
(function (OrderStatusEnum) {
    OrderStatusEnum["E"] = "E";
    OrderStatusEnum["Ec"] = "EC";
})(OrderStatusEnum = exports.OrderStatusEnum || (exports.OrderStatusEnum = {}));
var Order = /** @class */ (function (_super) {
    __extends(Order, _super);
    function Order() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "avp" }),
        __metadata("design:type", Number)
    ], Order.prototype, "avp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bsp" }),
        __metadata("design:type", Number)
    ], Order.prototype, "bsp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cd" }),
        __metadata("design:type", Number)
    ], Order.prototype, "cd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Order.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ld" }),
        __metadata("design:type", Number)
    ], Order.prototype, "ld", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lsrc" }),
        __metadata("design:type", String)
    ], Order.prototype, "lsrc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "md" }),
        __metadata("design:type", Number)
    ], Order.prototype, "md", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ot" }),
        __metadata("design:type", String)
    ], Order.prototype, "ot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p" }),
        __metadata("design:type", Number)
    ], Order.prototype, "p", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pd" }),
        __metadata("design:type", Number)
    ], Order.prototype, "pd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pt" }),
        __metadata("design:type", String)
    ], Order.prototype, "pt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rac" }),
        __metadata("design:type", String)
    ], Order.prototype, "rac", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rc" }),
        __metadata("design:type", String)
    ], Order.prototype, "rc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rfo" }),
        __metadata("design:type", String)
    ], Order.prototype, "rfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rfs" }),
        __metadata("design:type", String)
    ], Order.prototype, "rfs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "s" }),
        __metadata("design:type", Number)
    ], Order.prototype, "s", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sc" }),
        __metadata("design:type", Number)
    ], Order.prototype, "sc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "side" }),
        __metadata("design:type", String)
    ], Order.prototype, "side", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sl" }),
        __metadata("design:type", Number)
    ], Order.prototype, "sl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sm" }),
        __metadata("design:type", Number)
    ], Order.prototype, "sm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sr" }),
        __metadata("design:type", Number)
    ], Order.prototype, "sr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Order.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sv" }),
        __metadata("design:type", Number)
    ], Order.prototype, "sv", void 0);
    return Order;
}(utils_1.SpeakeasyBase));
exports.Order = Order;
