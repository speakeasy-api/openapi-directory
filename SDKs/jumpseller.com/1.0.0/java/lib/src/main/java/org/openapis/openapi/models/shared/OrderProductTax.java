/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderProductTax {
    /**
     * False if rate is a percentage and true if rate is monetary
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixed")
    public Boolean fixed;
    public OrderProductTax withFixed(Boolean fixed) {
        this.fixed = fixed;
        return this;
    }
    
    /**
     * Unique identifier of the Order Product Tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public OrderProductTax withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the category that the tax is associated with or the tax name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public OrderProductTax withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Tax rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate")
    public Float rate;
    public OrderProductTax withRate(Float rate) {
        this.rate = rate;
        return this;
    }
    
    /**
     * False if tax is not included on product price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_on_product_price")
    public Boolean taxOnProductPrice;
    public OrderProductTax withTaxOnProductPrice(Boolean taxOnProductPrice) {
        this.taxOnProductPrice = taxOnProductPrice;
        return this;
    }
    
}
