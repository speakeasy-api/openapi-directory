/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AccessPreviewFinding - An access preview finding generated by the access preview.
 */
public class AccessPreviewFinding {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String[] action;
    public AccessPreviewFinding withAction(String[] action) {
        this.action = action;
        return this;
    }
    
    @JsonProperty("changeType")
    public FindingChangeTypeEnum changeType;
    public AccessPreviewFinding withChangeType(FindingChangeTypeEnum changeType) {
        this.changeType = changeType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public java.util.Map<String, String> condition;
    public AccessPreviewFinding withCondition(java.util.Map<String, String> condition) {
        this.condition = condition;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public AccessPreviewFinding withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;
    public AccessPreviewFinding withError(String error) {
        this.error = error;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("existingFindingId")
    public String existingFindingId;
    public AccessPreviewFinding withExistingFindingId(String existingFindingId) {
        this.existingFindingId = existingFindingId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("existingFindingStatus")
    public FindingStatusEnum existingFindingStatus;
    public AccessPreviewFinding withExistingFindingStatus(FindingStatusEnum existingFindingStatus) {
        this.existingFindingStatus = existingFindingStatus;
        return this;
    }
    
    @JsonProperty("id")
    public String id;
    public AccessPreviewFinding withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPublic")
    public Boolean isPublic;
    public AccessPreviewFinding withIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principal")
    public java.util.Map<String, String> principal;
    public AccessPreviewFinding withPrincipal(java.util.Map<String, String> principal) {
        this.principal = principal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public String resource;
    public AccessPreviewFinding withResource(String resource) {
        this.resource = resource;
        return this;
    }
    
    @JsonProperty("resourceOwnerAccount")
    public String resourceOwnerAccount;
    public AccessPreviewFinding withResourceOwnerAccount(String resourceOwnerAccount) {
        this.resourceOwnerAccount = resourceOwnerAccount;
        return this;
    }
    
    @JsonProperty("resourceType")
    public ResourceTypeEnum resourceType;
    public AccessPreviewFinding withResourceType(ResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sources")
    public FindingSource[] sources;
    public AccessPreviewFinding withSources(FindingSource[] sources) {
        this.sources = sources;
        return this;
    }
    
    @JsonProperty("status")
    public FindingStatusEnum status;
    public AccessPreviewFinding withStatus(FindingStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
