/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DynamicListener - Describes a dynamically loaded listener via the LDS API. [#next-free-field: 6]
 */
public class DynamicListener {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeState")
    public DynamicListenerState activeState;

    public DynamicListener withActiveState(DynamicListenerState activeState) {
        this.activeState = activeState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drainingState")
    public DynamicListenerState drainingState;

    public DynamicListener withDrainingState(DynamicListenerState drainingState) {
        this.drainingState = drainingState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorState")
    public UpdateFailureState errorState;

    public DynamicListener withErrorState(UpdateFailureState errorState) {
        this.errorState = errorState;
        return this;
    }
    
    /**
     * The name or unique id of this listener, pulled from the DynamicListenerState config.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DynamicListener withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warmingState")
    public DynamicListenerState warmingState;

    public DynamicListener withWarmingState(DynamicListenerState warmingState) {
        this.warmingState = warmingState;
        return this;
    }
    
    public DynamicListener(){}
}
