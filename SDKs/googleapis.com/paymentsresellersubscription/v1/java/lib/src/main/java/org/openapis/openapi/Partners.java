/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Partners {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Partners(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * To retrieve the products that can be resold by the partner. It should be autenticated with a service account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersProductsListResponse paymentsresellersubscriptionPartnersProductsList(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersProductsListRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersProductsListPathParams.class, baseUrl, "/v1/{parent}/products", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersProductsListQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersProductsListResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersProductsListResponse() {{
            googleCloudPaymentsResellerSubscriptionV1ListProductsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1ListProductsResponse = out;
            }
        }

        return res;
    }

    /**
     * To find eligible promotions for the current user. The API requires user authorization via OAuth. The user is inferred from the authenticated OAuth credential.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsFindEligibleResponse paymentsresellersubscriptionPartnersPromotionsFindEligible(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsFindEligibleRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsFindEligiblePathParams.class, baseUrl, "/v1/{parent}/promotions:findEligible", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsFindEligibleQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsFindEligibleResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsFindEligibleResponse() {{
            googleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1FindEligiblePromotionsResponse = out;
            }
        }

        return res;
    }

    /**
     * To retrieve the promotions, such as free trial, that can be used by the partner. It should be autenticated with a service account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsListResponse paymentsresellersubscriptionPartnersPromotionsList(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsListRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsListPathParams.class, baseUrl, "/v1/{parent}/promotions", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsListQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsListResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersPromotionsListResponse() {{
            googleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1ListPromotionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Used by partners to cancel a subscription service either immediately or by the end of the current billing cycle for their customers. It should be called directly by the partner using service accounts.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCancelResponse paymentsresellersubscriptionPartnersSubscriptionsCancel(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCancelRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCancelPathParams.class, baseUrl, "/v1/{name}:cancel", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCancelQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCancelResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCancelResponse() {{
            googleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1CancelSubscriptionResponse = out;
            }
        }

        return res;
    }

    /**
     * Used by partners to create a subscription for their customers. The created subscription is associated with the end user inferred from the end user credentials. This API must be authorized by the end user using OAuth.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCreateResponse paymentsresellersubscriptionPartnersSubscriptionsCreate(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCreateRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCreatePathParams.class, baseUrl, "/v1/{parent}/subscriptions", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCreateQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCreateResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsCreateResponse() {{
            googleCloudPaymentsResellerSubscriptionV1Subscription = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1Subscription out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1Subscription.class);
                res.googleCloudPaymentsResellerSubscriptionV1Subscription = out;
            }
        }

        return res;
    }

    /**
     * Used by partners to entitle a previously provisioned subscription to the current end user. The end user identity is inferred from the authorized credential of the request. This API must be authorized by the end user using OAuth.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsEntitleResponse paymentsresellersubscriptionPartnersSubscriptionsEntitle(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsEntitleRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsEntitlePathParams.class, baseUrl, "/v1/{name}:entitle", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsEntitleQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsEntitleResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsEntitleResponse() {{
            googleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1EntitleSubscriptionResponse = out;
            }
        }

        return res;
    }

    /**
     * [Deprecated] New partners should be on auto-extend by default. Used by partners to extend a subscription service for their customers on an ongoing basis for the subscription to remain active and renewable. It should be called directly by the partner using service accounts.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsExtendResponse paymentsresellersubscriptionPartnersSubscriptionsExtend(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsExtendRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsExtendPathParams.class, baseUrl, "/v1/{name}:extend", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsExtendQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsExtendResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsExtendResponse() {{
            googleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionResponse = out;
            }
        }

        return res;
    }

    /**
     * Used by partners to get a subscription by id. It should be called directly by the partner using service accounts.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsGetResponse paymentsresellersubscriptionPartnersSubscriptionsGet(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsGetRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsGetPathParams.class, baseUrl, "/v1/{name}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsGetQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsGetResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsGetResponse() {{
            googleCloudPaymentsResellerSubscriptionV1Subscription = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1Subscription out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1Subscription.class);
                res.googleCloudPaymentsResellerSubscriptionV1Subscription = out;
            }
        }

        return res;
    }

    /**
     * Used by partners to provision a subscription for their customers. This creates a subscription without associating it with the end user account. EntitleSubscription must be called separately using OAuth in order for the end user account to be associated with the subscription. It should be called directly by the partner using service accounts.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsProvisionResponse paymentsresellersubscriptionPartnersSubscriptionsProvision(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsProvisionRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsProvisionPathParams.class, baseUrl, "/v1/{parent}/subscriptions:provision", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsProvisionQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsProvisionResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsProvisionResponse() {{
            googleCloudPaymentsResellerSubscriptionV1Subscription = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1Subscription out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1Subscription.class);
                res.googleCloudPaymentsResellerSubscriptionV1Subscription = out;
            }
        }

        return res;
    }

    /**
     * Used by partners to revoke the pending cancellation of a subscription, which is currently in `STATE_CANCEL_AT_END_OF_CYCLE` state. If the subscription is already cancelled, the request will fail. It should be called directly by the partner using service accounts.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsUndoCancelResponse paymentsresellersubscriptionPartnersSubscriptionsUndoCancel(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsUndoCancelRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsUndoCancelPathParams.class, baseUrl, "/v1/{name}:undoCancel", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsUndoCancelQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsUndoCancelResponse res = new org.openapis.openapi.models.operations.PaymentsresellersubscriptionPartnersSubscriptionsUndoCancelResponse() {{
            googleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse.class);
                res.googleCloudPaymentsResellerSubscriptionV1UndoCancelSubscriptionResponse = out;
            }
        }

        return res;
    }
}