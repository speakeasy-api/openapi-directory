"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import credit as shared_credit
from ..shared import legacy_error as shared_legacy_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddVideoCreditAlt1RequestBody:
    
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""The email address of the credited person."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the credited person."""  
    role: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""The role of the credited person."""  
    user_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_uri') }})
    r"""The URI of the Vimeo user who should be given credit in this video."""  
    

@dataclasses.dataclass
class AddVideoCreditAlt1Request:
    
    channel_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'channel_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the channel."""  
    request_body: AddVideoCreditAlt1RequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/vnd.vimeo.credit+json' }})  
    video_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'video_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the video."""  
    

@dataclasses.dataclass
class AddVideoCreditAlt1Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    credit: Optional[shared_credit.Credit] = dataclasses.field(default=None)
    r"""The credit was added."""  
    legacy_error: Optional[shared_legacy_error.LegacyError] = dataclasses.field(default=None)
    r"""* The credit was added.
    * A parameter is invalid.
    * The authenticated user has an unverified email address.
    * There is a user block between the video owner and the person receiving credit.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    