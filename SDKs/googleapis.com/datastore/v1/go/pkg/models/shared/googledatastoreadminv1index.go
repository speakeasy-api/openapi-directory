// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleDatastoreAdminV1IndexAncestorEnum - Required. The index's ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
type GoogleDatastoreAdminV1IndexAncestorEnum string

const (
	GoogleDatastoreAdminV1IndexAncestorEnumAncestorModeUnspecified GoogleDatastoreAdminV1IndexAncestorEnum = "ANCESTOR_MODE_UNSPECIFIED"
	GoogleDatastoreAdminV1IndexAncestorEnumNone                    GoogleDatastoreAdminV1IndexAncestorEnum = "NONE"
	GoogleDatastoreAdminV1IndexAncestorEnumAllAncestors            GoogleDatastoreAdminV1IndexAncestorEnum = "ALL_ANCESTORS"
)

func (e *GoogleDatastoreAdminV1IndexAncestorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ANCESTOR_MODE_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "ALL_ANCESTORS":
		*e = GoogleDatastoreAdminV1IndexAncestorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleDatastoreAdminV1IndexAncestorEnum: %s", s)
	}
}

// GoogleDatastoreAdminV1IndexStateEnum - Output only. The state of the index.
type GoogleDatastoreAdminV1IndexStateEnum string

const (
	GoogleDatastoreAdminV1IndexStateEnumStateUnspecified GoogleDatastoreAdminV1IndexStateEnum = "STATE_UNSPECIFIED"
	GoogleDatastoreAdminV1IndexStateEnumCreating         GoogleDatastoreAdminV1IndexStateEnum = "CREATING"
	GoogleDatastoreAdminV1IndexStateEnumReady            GoogleDatastoreAdminV1IndexStateEnum = "READY"
	GoogleDatastoreAdminV1IndexStateEnumDeleting         GoogleDatastoreAdminV1IndexStateEnum = "DELETING"
	GoogleDatastoreAdminV1IndexStateEnumError            GoogleDatastoreAdminV1IndexStateEnum = "ERROR"
)

func (e *GoogleDatastoreAdminV1IndexStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "DELETING":
		fallthrough
	case "ERROR":
		*e = GoogleDatastoreAdminV1IndexStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleDatastoreAdminV1IndexStateEnum: %s", s)
	}
}

// GoogleDatastoreAdminV1Index - Datastore composite index definition.
type GoogleDatastoreAdminV1Index struct {
	// Required. The index's ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
	Ancestor *GoogleDatastoreAdminV1IndexAncestorEnum `json:"ancestor,omitempty"`
	// Output only. The resource ID of the index.
	IndexID *string `json:"indexId,omitempty"`
	// Required. The entity kind to which this index applies.
	Kind *string `json:"kind,omitempty"`
	// Output only. Project ID.
	ProjectID *string `json:"projectId,omitempty"`
	// Required. An ordered sequence of property names and their index attributes. Requires: * A maximum of 100 properties.
	Properties []GoogleDatastoreAdminV1IndexedProperty `json:"properties,omitempty"`
	// Output only. The state of the index.
	State *GoogleDatastoreAdminV1IndexStateEnum `json:"state,omitempty"`
}

// GoogleDatastoreAdminV1IndexInput - Datastore composite index definition.
type GoogleDatastoreAdminV1IndexInput struct {
	// Required. The index's ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
	Ancestor *GoogleDatastoreAdminV1IndexAncestorEnum `json:"ancestor,omitempty"`
	// Required. The entity kind to which this index applies.
	Kind *string `json:"kind,omitempty"`
	// Required. An ordered sequence of property names and their index attributes. Requires: * A maximum of 100 properties.
	Properties []GoogleDatastoreAdminV1IndexedProperty `json:"properties,omitempty"`
}
