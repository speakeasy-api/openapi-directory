"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TCPRouteRouteMatch:
    r"""RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \\"OR\\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic."""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    r"""Required. Must be specified in the CIDR range format. A CIDR range consists of an IP Address and a prefix length to construct the subnet mask. By default, the prefix length is 32 (i.e. matches a single IP address). Only IPV4 addresses are supported. Examples: \\"10.0.0.1\\" - matches against this exact IP address. \\"10.0.0.0/8\\" - matches against any IP address within the 10.0.0.0 subnet and 255.255.255.0 mask. \\"0.0.0.0/0\\" - matches against any IP address'."""  
    port: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('port'), 'exclude': lambda f: f is None }})
    r"""Required. Specifies the destination port to match against."""  
    