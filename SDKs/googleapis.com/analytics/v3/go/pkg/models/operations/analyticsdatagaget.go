// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AnalyticsDataGaGetSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AnalyticsDataGaGetSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AnalyticsDataGaGetSecurity struct {
	Option1 *AnalyticsDataGaGetSecurityOption1 `security:"option"`
	Option2 *AnalyticsDataGaGetSecurityOption2 `security:"option"`
}

// AnalyticsDataGaGetOutputEnum - The selected format for the response. Default format is JSON.
type AnalyticsDataGaGetOutputEnum string

const (
	AnalyticsDataGaGetOutputEnumDataTable AnalyticsDataGaGetOutputEnum = "dataTable"
	AnalyticsDataGaGetOutputEnumJSON      AnalyticsDataGaGetOutputEnum = "json"
)

func (e AnalyticsDataGaGetOutputEnum) ToPointer() *AnalyticsDataGaGetOutputEnum {
	return &e
}

func (e *AnalyticsDataGaGetOutputEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dataTable":
		fallthrough
	case "json":
		*e = AnalyticsDataGaGetOutputEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsDataGaGetOutputEnum: %v", v)
	}
}

// AnalyticsDataGaGetSamplingLevelEnum - The desired sampling level.
type AnalyticsDataGaGetSamplingLevelEnum string

const (
	AnalyticsDataGaGetSamplingLevelEnumDefault         AnalyticsDataGaGetSamplingLevelEnum = "DEFAULT"
	AnalyticsDataGaGetSamplingLevelEnumFaster          AnalyticsDataGaGetSamplingLevelEnum = "FASTER"
	AnalyticsDataGaGetSamplingLevelEnumHigherPrecision AnalyticsDataGaGetSamplingLevelEnum = "HIGHER_PRECISION"
)

func (e AnalyticsDataGaGetSamplingLevelEnum) ToPointer() *AnalyticsDataGaGetSamplingLevelEnum {
	return &e
}

func (e *AnalyticsDataGaGetSamplingLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULT":
		fallthrough
	case "FASTER":
		fallthrough
	case "HIGHER_PRECISION":
		*e = AnalyticsDataGaGetSamplingLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsDataGaGetSamplingLevelEnum: %v", v)
	}
}

type AnalyticsDataGaGetRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// A comma-separated list of Analytics dimensions. E.g., 'ga:browser,ga:city'.
	Dimensions *string `queryParam:"style=form,explode=true,name=dimensions"`
	// End date for fetching Analytics data. Request can should specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is yesterday.
	EndDate string `queryParam:"style=form,explode=true,name=end-date"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// A comma-separated list of dimension or metric filters to be applied to Analytics data.
	Filters *string `queryParam:"style=form,explode=true,name=filters"`
	// Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
	Ids string `queryParam:"style=form,explode=true,name=ids"`
	// The response will include empty rows if this parameter is set to true, the default is true
	IncludeEmptyRows *bool `queryParam:"style=form,explode=true,name=include-empty-rows"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The maximum number of entries to include in this feed.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=max-results"`
	// A comma-separated list of Analytics metrics. E.g., 'ga:sessions,ga:pageviews'. At least one metric must be specified.
	Metrics string `queryParam:"style=form,explode=true,name=metrics"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The selected format for the response. Default format is JSON.
	Output *AnalyticsDataGaGetOutputEnum `queryParam:"style=form,explode=true,name=output"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The desired sampling level.
	SamplingLevel *AnalyticsDataGaGetSamplingLevelEnum `queryParam:"style=form,explode=true,name=samplingLevel"`
	// An Analytics segment to be applied to data.
	Segment *string `queryParam:"style=form,explode=true,name=segment"`
	// A comma-separated list of dimensions or metrics that determine the sort order for Analytics data.
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
	StartDate string `queryParam:"style=form,explode=true,name=start-date"`
	// An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
	StartIndex *int64 `queryParam:"style=form,explode=true,name=start-index"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type AnalyticsDataGaGetResponse struct {
	ContentType string
	// Successful response
	GaData      *shared.GaData
	StatusCode  int
	RawResponse *http.Response
}
