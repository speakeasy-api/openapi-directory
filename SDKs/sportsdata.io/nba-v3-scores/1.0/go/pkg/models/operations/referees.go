// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RefereesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type RefereesFormatEnum string

const (
	RefereesFormatEnumXML  RefereesFormatEnum = "XML"
	RefereesFormatEnumJSON RefereesFormatEnum = "JSON"
)

func (e *RefereesFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = RefereesFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RefereesFormatEnum: %s", s)
	}
}

type RefereesRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format RefereesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type RefereesResponse struct {
	ContentType string
	Referees    []shared.Referee
	StatusCode  int
	RawResponse *http.Response
}
