"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import ext_enum as shared_ext_enum
from ..shared import versionnumber_enum as shared_versionnumber_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiListAddress:
    
    freeform_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freeformAddress'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiListPoi:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiListPosition:
    
    lat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lat'), 'exclude': lambda f: f is None }})  
    lon: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lon'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiList:
    
    address: Optional[PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiListAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    poi: Optional[PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiListPoi] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('poi'), 'exclude': lambda f: f is None }})  
    position: Optional[PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiListPosition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBody:
    
    poi_list: Optional[list[PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBodyPoiList]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('poiList'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtRequest:
    
    ext: shared_ext_enum.ExtEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'ext', 'style': 'simple', 'explode': False }})
    r"""Expected response format."""  
    heading: float = dataclasses.field(metadata={'path_param': { 'field_name': 'heading', 'style': 'simple', 'explode': False }})
    r"""The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"""  
    position: str = dataclasses.field(metadata={'path_param': { 'field_name': 'position', 'style': 'simple', 'explode': False }})
    r"""This is specified as a comma separated string composed of lat., lon."""  
    version_number: shared_versionnumber_enum.VersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Service version number. The current value is 2."""  
    request_body: Optional[PostSearchVersionNumberRoutedFilterPositionHeadingExtRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    routing_timeout: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'routingTimeout', 'style': 'form', 'explode': True }})
    r"""Only return results that arrive from routing engine within this time limit."""  
    

@dataclasses.dataclass
class PostSearchVersionNumberRoutedFilterPositionHeadingExtResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    