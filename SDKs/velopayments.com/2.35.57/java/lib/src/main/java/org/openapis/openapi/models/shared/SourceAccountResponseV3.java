/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SourceAccountResponseV3 - Source account response
 */
public class SourceAccountResponseV3 {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoTopUpConfig")
    public AutoTopUpConfigV3 autoTopUpConfig;

    public SourceAccountResponseV3 withAutoTopUpConfig(AutoTopUpConfigV3 autoTopUpConfig) {
        this.autoTopUpConfig = autoTopUpConfig;
        return this;
    }
    
    /**
     * Decimal implied
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Long balance;

    public SourceAccountResponseV3 withBalance(Long balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * Valid ISO 3166 2 character country code. See the &lt;a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a&gt;ISO specification&lt;/a&gt; for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public SourceAccountResponseV3 withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Valid ISO 4217 3 letter currency code. See the &lt;a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a&gt;ISO specification&lt;/a&gt; for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public SourceAccountResponseV3 withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public String customerId;

    public SourceAccountResponseV3 withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * An optional flag for whether the source account has been deleted. Only present in the response if true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public SourceAccountResponseV3 withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * An optional timestamp when the source account has been deleted. Only present in the response if deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("deletedAt")
    public OffsetDateTime deletedAt;

    public SourceAccountResponseV3 withDeletedAt(OffsetDateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }
    
    /**
     * The funding reference (will not be set for DECOUPLED accounts).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundingRef")
    public String fundingRef;

    public SourceAccountResponseV3 withFundingRef(String fundingRef) {
        this.fundingRef = fundingRef;
        return this;
    }
    
    /**
     * Source Account Id
     */
    @JsonProperty("id")
    public String id;

    public SourceAccountResponseV3 withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SourceAccountResponseV3 withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifications")
    public NotificationsV3 notifications;

    public SourceAccountResponseV3 withNotifications(NotificationsV3 notifications) {
        this.notifications = notifications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payorId")
    public String payorId;

    public SourceAccountResponseV3 withPayorId(String payorId) {
        this.payorId = payorId;
        return this;
    }
    
    /**
     * The physical account id (will not be set for DECOUPLED accounts).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("physicalAccountId")
    public String physicalAccountId;

    public SourceAccountResponseV3 withPhysicalAccountId(String physicalAccountId) {
        this.physicalAccountId = physicalAccountId;
        return this;
    }
    
    /**
     * The physical account name (will not be set for DECOUPLED accounts).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("physicalAccountName")
    public String physicalAccountName;

    public SourceAccountResponseV3 withPhysicalAccountName(String physicalAccountName) {
        this.physicalAccountName = physicalAccountName;
        return this;
    }
    
    /**
     * The pooled account flag (will not be set for DECOUPLED accounts).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pooled")
    public Boolean pooled;

    public SourceAccountResponseV3 withPooled(Boolean pooled) {
        this.pooled = pooled;
        return this;
    }
    
    @JsonProperty("railsId")
    public String railsId;

    public SourceAccountResponseV3 withRailsId(String railsId) {
        this.railsId = railsId;
        return this;
    }
    
    @JsonProperty("type")
    public String type;

    public SourceAccountResponseV3 withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * An optional flag for whether the source account has been deleted by a user. Only present in the response if true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userDeleted")
    public Boolean userDeleted;

    public SourceAccountResponseV3 withUserDeleted(Boolean userDeleted) {
        this.userDeleted = userDeleted;
        return this;
    }
    
    public SourceAccountResponseV3(@JsonProperty("id") String id, @JsonProperty("railsId") String railsId, @JsonProperty("type") String type) {
        this.id = id;
        this.railsId = railsId;
        this.type = type;
  }
}
