/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateArtifactRawQueryParams {
    /**
     * Used only when the `ifExists` query parameter is set to `RETURN_OR_UPDATE`, this parameter can be set to `true` to indicate that the server should "canonicalize" the content when searching for a matching version.  The canonicalization algorithm is unique to each artifact type, but typically involves removing extra whitespace and formatting the content in a consistent manner.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=canonical")
    public Boolean canonical;
    public CreateArtifactRawQueryParams withCanonical(Boolean canonical) {
        this.canonical = canonical;
        return this;
    }
    
    /**
     * Set this option to instruct the server on what to do if the artifact already exists.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifExists")
    public org.openapis.openapi.models.shared.IfExistsEnum ifExists;
    public CreateArtifactRawQueryParams withIfExists(org.openapis.openapi.models.shared.IfExistsEnum ifExists) {
        this.ifExists = ifExists;
        return this;
    }
    
}
