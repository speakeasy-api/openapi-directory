// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateAFileParametersFile struct {
	Content []byte `multipartForm:"content"`
	File    string `multipartForm:"name=file"`
}

// CreateAFileParametersPurposeEnum - What the File will be used for in Increase's systems.
type CreateAFileParametersPurposeEnum string

const (
	CreateAFileParametersPurposeEnumCheckImageFront            CreateAFileParametersPurposeEnum = "check_image_front"
	CreateAFileParametersPurposeEnumCheckImageBack             CreateAFileParametersPurposeEnum = "check_image_back"
	CreateAFileParametersPurposeEnumFormSs4                    CreateAFileParametersPurposeEnum = "form_ss_4"
	CreateAFileParametersPurposeEnumIdentityDocument           CreateAFileParametersPurposeEnum = "identity_document"
	CreateAFileParametersPurposeEnumOther                      CreateAFileParametersPurposeEnum = "other"
	CreateAFileParametersPurposeEnumTrustFormationDocument     CreateAFileParametersPurposeEnum = "trust_formation_document"
	CreateAFileParametersPurposeEnumDigitalWalletArtwork       CreateAFileParametersPurposeEnum = "digital_wallet_artwork"
	CreateAFileParametersPurposeEnumDigitalWalletAppIcon       CreateAFileParametersPurposeEnum = "digital_wallet_app_icon"
	CreateAFileParametersPurposeEnumEntitySupplementalDocument CreateAFileParametersPurposeEnum = "entity_supplemental_document"
)

func (e *CreateAFileParametersPurposeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "check_image_front":
		fallthrough
	case "check_image_back":
		fallthrough
	case "form_ss_4":
		fallthrough
	case "identity_document":
		fallthrough
	case "other":
		fallthrough
	case "trust_formation_document":
		fallthrough
	case "digital_wallet_artwork":
		fallthrough
	case "digital_wallet_app_icon":
		fallthrough
	case "entity_supplemental_document":
		*e = CreateAFileParametersPurposeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAFileParametersPurposeEnum: %s", s)
	}
}

type CreateAFileParameters struct {
	// The description you choose to give the File.
	Description *string `multipartForm:"name=description"`
	// The file contents. This should follow the specifications of [RFC 7578](https://datatracker.ietf.org/doc/html/rfc7578) which defines file transfers for the multipart/form-data protocol.
	File CreateAFileParametersFile `multipartForm:"file"`
	// What the File will be used for in Increase's systems.
	Purpose CreateAFileParametersPurposeEnum `multipartForm:"name=purpose"`
}
