"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import adjustmenttype_enum as shared_adjustmenttype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SimpleScalingPolicyConfiguration:
    r"""An automatic scaling configuration, which describes how the policy adds or removes instances, the cooldown period, and the number of EC2 instances that will be added each time the CloudWatch metric alarm condition is satisfied."""
    
    scaling_adjustment: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScalingAdjustment') }})  
    adjustment_type: Optional[shared_adjustmenttype_enum.AdjustmentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdjustmentType'), 'exclude': lambda f: f is None }})  
    cool_down: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoolDown'), 'exclude': lambda f: f is None }})  
    