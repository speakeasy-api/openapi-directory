"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprototeardown as shared_enterprisecrmeventbusprototeardown
from ..shared import enterprisecrmfrontendseventbusprototaskconfig as shared_enterprisecrmfrontendseventbusprototaskconfig
from ..shared import enterprisecrmfrontendseventbusprototriggerconfig as shared_enterprisecrmfrontendseventbusprototriggerconfig
from ..shared import enterprisecrmfrontendseventbusprotoworkflowparameters as shared_enterprisecrmfrontendseventbusprotoworkflowparameters
from ..shared import googlecloudintegrationsv1alphaerrorcatcherconfig as shared_googlecloudintegrationsv1alphaerrorcatcherconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionDatabasePersistencePolicyEnum(str, Enum):
    r"""Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index."""
    DATABASE_PERSISTENCE_POLICY_UNSPECIFIED = 'DATABASE_PERSISTENCE_POLICY_UNSPECIFIED'
    DATABASE_PERSISTENCE_DISABLED = 'DATABASE_PERSISTENCE_DISABLED'

class GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionStatusEnum(str, Enum):
    r"""Optional. Generated by eventbus. User should not set it as an input."""
    UNKNOWN = 'UNKNOWN'
    DRAFT = 'DRAFT'
    ACTIVE = 'ACTIVE'
    ARCHIVED = 'ARCHIVED'
    SNAPSHOT = 'SNAPSHOT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion:
    r"""IntegrationTemplateVersion definition. An IntegrationTemplateVersion provides configurations required to construct an IntegrationVersion. It cannot be executed directly like an Integration. Users can create IntegrationTemplateVersions using Integrations. These Templates can be shared by users across GCP projects."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Auto-generated."""  
    database_persistence_policy: Optional[GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionDatabasePersistencePolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databasePersistencePolicy'), 'exclude': lambda f: f is None }})
    r"""Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces."""  
    error_catcher_configs: Optional[list[shared_googlecloudintegrationsv1alphaerrorcatcherconfig.GoogleCloudIntegrationsV1alphaErrorCatcherConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCatcherConfigs'), 'exclude': lambda f: f is None }})
    r"""Optional. Error Catch Task configuration for the IntegrationTemplateVersion. It's optional."""  
    last_modifier_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastModifierEmail'), 'exclude': lambda f: f is None }})
    r"""Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Auto-generated primary key. Format: projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}"""  
    parent_integration_version_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentIntegrationVersionId'), 'exclude': lambda f: f is None }})
    r"""Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion"""  
    snapshot_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snapshotNumber'), 'exclude': lambda f: f is None }})
    r"""Output only. An increasing sequence that is set when a new snapshot is created."""  
    status: Optional[GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Optional. Generated by eventbus. User should not set it as an input."""  
    task_configs: Optional[list[shared_enterprisecrmfrontendseventbusprototaskconfig.EnterpriseCrmFrontendsEventbusProtoTaskConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskConfigs'), 'exclude': lambda f: f is None }})
    r"""Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs."""  
    teardown: Optional[shared_enterprisecrmeventbusprototeardown.EnterpriseCrmEventbusProtoTeardown] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teardown'), 'exclude': lambda f: f is None }})  
    template_parameters: Optional[shared_enterprisecrmfrontendseventbusprotoworkflowparameters.EnterpriseCrmFrontendsEventbusProtoWorkflowParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateParameters'), 'exclude': lambda f: f is None }})
    r"""LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as \\"children\\" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters."""  
    trigger_configs: Optional[list[shared_enterprisecrmfrontendseventbusprototriggerconfig.EnterpriseCrmFrontendsEventbusProtoTriggerConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerConfigs'), 'exclude': lambda f: f is None }})
    r"""Optional. Trigger configurations."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Auto-generated."""  
    user_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userLabel'), 'exclude': lambda f: f is None }})
    r"""Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionInput:
    r"""IntegrationTemplateVersion definition. An IntegrationTemplateVersion provides configurations required to construct an IntegrationVersion. It cannot be executed directly like an Integration. Users can create IntegrationTemplateVersions using Integrations. These Templates can be shared by users across GCP projects."""
    
    database_persistence_policy: Optional[GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionDatabasePersistencePolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databasePersistencePolicy'), 'exclude': lambda f: f is None }})
    r"""Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces."""  
    error_catcher_configs: Optional[list[shared_googlecloudintegrationsv1alphaerrorcatcherconfig.GoogleCloudIntegrationsV1alphaErrorCatcherConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCatcherConfigs'), 'exclude': lambda f: f is None }})
    r"""Optional. Error Catch Task configuration for the IntegrationTemplateVersion. It's optional."""  
    last_modifier_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastModifierEmail'), 'exclude': lambda f: f is None }})
    r"""Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call."""  
    parent_integration_version_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentIntegrationVersionId'), 'exclude': lambda f: f is None }})
    r"""Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion"""  
    status: Optional[GoogleCloudIntegrationsV1alphaIntegrationTemplateVersionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Optional. Generated by eventbus. User should not set it as an input."""  
    task_configs: Optional[list[shared_enterprisecrmfrontendseventbusprototaskconfig.EnterpriseCrmFrontendsEventbusProtoTaskConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskConfigs'), 'exclude': lambda f: f is None }})
    r"""Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs."""  
    teardown: Optional[shared_enterprisecrmeventbusprototeardown.EnterpriseCrmEventbusProtoTeardown] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teardown'), 'exclude': lambda f: f is None }})  
    template_parameters: Optional[shared_enterprisecrmfrontendseventbusprotoworkflowparameters.EnterpriseCrmFrontendsEventbusProtoWorkflowParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateParameters'), 'exclude': lambda f: f is None }})
    r"""LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as \\"children\\" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters."""  
    trigger_configs: Optional[list[shared_enterprisecrmfrontendseventbusprototriggerconfig.EnterpriseCrmFrontendsEventbusProtoTriggerConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerConfigs'), 'exclude': lambda f: f is None }})
    r"""Optional. Trigger configurations."""  
    user_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userLabel'), 'exclude': lambda f: f is None }})
    r"""Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created."""  
    