/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmploymentBasisEnum } from "./employmentbasisenum";
import { ResidencyStatusEnum } from "./residencystatusenum";
import { TFNExemptionTypeEnum } from "./tfnexemptiontypeenum";
import { Expose } from "class-transformer";

export class TaxDeclarationInput extends SpeakeasyBase {
  /**
   * If the employee has approved withholding variation. e.g (0 - 100)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApprovedWithholdingVariationPercentage" })
  approvedWithholdingVariationPercentage?: number;

  /**
   * If the employee is Australian resident for tax purposes. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AustralianResidentForTaxPurposes" })
  australianResidentForTaxPurposes?: boolean;

  /**
   * If the employee is eligible to receive an additional percentage on top of ordinary earnings when they take leave (typically 17.5%). e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EligibleToReceiveLeaveLoading" })
  eligibleToReceiveLeaveLoading?: boolean;

  /**
   * Address line 1 for employee home address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeID" })
  employeeID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmploymentBasis" })
  employmentBasis?: EmploymentBasisEnum;

  /**
   * If employee has HECS or HELP debt. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasHELPDebt" })
  hasHELPDebt?: boolean;

  /**
   * If employee has financial supplement debt. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasSFSSDebt" })
  hasSFSSDebt?: boolean;

  /**
   * If the employee is eligible for student startup loan rules
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasStudentStartupLoan" })
  hasStudentStartupLoan?: boolean;

  /**
   * If employee has trade support loan. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasTradeSupportLoanDebt" })
  hasTradeSupportLoanDebt?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ResidencyStatus" })
  residencyStatus?: ResidencyStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TFNExemptionType" })
  tfnExemptionType?: TFNExemptionTypeEnum;

  /**
   * The tax file number e.g 123123123.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxFileNumber" })
  taxFileNumber?: string;

  /**
   * If tax free threshold claimed. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxFreeThresholdClaimed" })
  taxFreeThresholdClaimed?: boolean;

  /**
   * If has tax offset estimated then the tax offset estimated amount. e.g 100
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxOffsetEstimatedAmount" })
  taxOffsetEstimatedAmount?: number;

  /**
   * If the employee has requested that additional tax be withheld each pay run. e.g 50
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpwardVariationTaxWithholdingAmount" })
  upwardVariationTaxWithholdingAmount?: number;
}

export class TaxDeclaration extends SpeakeasyBase {
  /**
   * If the employee has approved withholding variation. e.g (0 - 100)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApprovedWithholdingVariationPercentage" })
  approvedWithholdingVariationPercentage?: number;

  /**
   * If the employee is Australian resident for tax purposes. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AustralianResidentForTaxPurposes" })
  australianResidentForTaxPurposes?: boolean;

  /**
   * If the employee is eligible to receive an additional percentage on top of ordinary earnings when they take leave (typically 17.5%). e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EligibleToReceiveLeaveLoading" })
  eligibleToReceiveLeaveLoading?: boolean;

  /**
   * Address line 1 for employee home address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeID" })
  employeeID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmploymentBasis" })
  employmentBasis?: EmploymentBasisEnum;

  /**
   * If employee has HECS or HELP debt. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasHELPDebt" })
  hasHELPDebt?: boolean;

  /**
   * If employee has financial supplement debt. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasSFSSDebt" })
  hasSFSSDebt?: boolean;

  /**
   * If the employee is eligible for student startup loan rules
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasStudentStartupLoan" })
  hasStudentStartupLoan?: boolean;

  /**
   * If employee has trade support loan. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HasTradeSupportLoanDebt" })
  hasTradeSupportLoanDebt?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ResidencyStatus" })
  residencyStatus?: ResidencyStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TFNExemptionType" })
  tfnExemptionType?: TFNExemptionTypeEnum;

  /**
   * The tax file number e.g 123123123.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxFileNumber" })
  taxFileNumber?: string;

  /**
   * If tax free threshold claimed. e.g true or false
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxFreeThresholdClaimed" })
  taxFreeThresholdClaimed?: boolean;

  /**
   * If has tax offset estimated then the tax offset estimated amount. e.g 100
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxOffsetEstimatedAmount" })
  taxOffsetEstimatedAmount?: number;

  /**
   * Last modified timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDateUTC" })
  updatedDateUTC?: string;

  /**
   * If the employee has requested that additional tax be withheld each pay run. e.g 50
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpwardVariationTaxWithholdingAmount" })
  upwardVariationTaxWithholdingAmount?: number;
}
