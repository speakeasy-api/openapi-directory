/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class TaskrouterV1WorkspaceWorkerWorkerChannel extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The total number of Tasks assigned to Worker for the TaskChannel type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assigned_tasks" })
  assignedTasks?: number;

  /**
   * Whether the Worker should receive Tasks of the TaskChannel type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: boolean;

  /**
   * The current percentage of capacity the TaskChannel has available. Can be a number between `0` and `100`. A value of `0` indicates that TaskChannel has no capacity available and a value of `100` means the  Worker is available to receive any Tasks of this TaskChannel type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available_capacity_percentage" })
  availableCapacityPercentage?: number;

  /**
   * The current configured capacity for the WorkerChannel. TaskRouter will not create any reservations after the assigned Tasks for the Worker reaches the value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configured_capacity" })
  configuredCapacity?: number;

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * The unique string that we created to identify the WorkerChannel resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The SID of the TaskChannel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_channel_sid" })
  taskChannelSid?: string;

  /**
   * The unique name of the TaskChannel, such as `voice` or `sms`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_channel_unique_name" })
  taskChannelUniqueName?: string;

  /**
   * The absolute URL of the WorkerChannel resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The SID of the Worker that contains the WorkerChannel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "worker_sid" })
  workerSid?: string;

  /**
   * The SID of the Workspace that contains the WorkerChannel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workspace_sid" })
  workspaceSid?: string;
}
