/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
 */
export enum BoxScoresDeltaByDateByCompetitionFormatEnum {
  Xml = "xml",
  Json = "json",
}

export class BoxScoresDeltaByDateByCompetitionRequest extends SpeakeasyBase {
  /**
   * An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=competition",
  })
  competition: string;

  /**
   * The date of the game(s).
   *
   * @remarks
   * <br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=date",
  })
  date: string;

  /**
   * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: BoxScoresDeltaByDateByCompetitionFormatEnum;

  /**
   * Only returns player statistics that have changed in the last X minutes.  You specify how many minutes in time to go back. Valid entries are:
   *
   * @remarks
   * <code>1</code>, <code>2</code> ... <code>all</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=minutes",
  })
  minutes: string;
}

export class BoxScoresDeltaByDateByCompetitionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.BoxScore })
  boxScores?: shared.BoxScore[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
