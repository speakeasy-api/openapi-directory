/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

export class GistCommitChangeStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additions" })
  additions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deletions" })
  deletions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

/**
 * Gist Commit
 */
export class GistCommit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "change_status" })
  @Type(() => GistCommitChangeStatus)
  changeStatus: GistCommitChangeStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "committed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  committedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NullableSimpleUser)
  user: NullableSimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: string;
}
