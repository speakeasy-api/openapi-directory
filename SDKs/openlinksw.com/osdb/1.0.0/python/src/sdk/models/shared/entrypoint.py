"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entrypointparameter as shared_entrypointparameter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class EntryPointHTTPMethodEnum(str, Enum):
    r"""The HTTP method used by the EntryPoint."""
    GET = 'GET'
    PUT = 'PUT'
    POST = 'POST'
    DELETE = 'DELETE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntryPoint:
    
    content_types: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_types') }})
    r"""The supported MIME type(s) for an EntryPoint response."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""A short description of the action. Optional - may be null."""  
    encoding_types: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encoding_types') }})
    r"""The supported MIME type(s) for an EntryPoint request. Null if not applicable."""  
    http_method: EntryPointHTTPMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method') }})
    r"""The HTTP method used by the EntryPoint."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""A word or short phrase to be used as the action's display name. Optional - may be null."""  
    parameters: list[shared_entrypointparameter.EntryPointParameter] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters') }})
    r"""Descriptions of the EntryPoint parameters. Null if not applicable."""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""The EntryPoint URL. It will be non-null if url_template is null."""  
    url_template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_template') }})
    r"""The EntryPoint's URL template. Only required if the entry point URL is parameterized. Property 'url' will be null if url_template is non-null."""  
    