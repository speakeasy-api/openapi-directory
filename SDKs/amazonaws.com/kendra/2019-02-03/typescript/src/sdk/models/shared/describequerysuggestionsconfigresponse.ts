/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModeEnum } from "./modeenum";
import { QuerySuggestionsStatusEnum } from "./querysuggestionsstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class DescribeQuerySuggestionsConfigResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IncludeQueriesWithoutUserInformation" })
  includeQueriesWithoutUserInformation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LastClearTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastClearTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastSuggestionsBuildTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSuggestionsBuildTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MinimumNumberOfQueryingUsers" })
  minimumNumberOfQueryingUsers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MinimumQueryCount" })
  minimumQueryCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Mode" })
  mode?: ModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryLogLookBackWindowInDays" })
  queryLogLookBackWindowInDays?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: QuerySuggestionsStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TotalSuggestionsCount" })
  totalSuggestionsCount?: number;
}
