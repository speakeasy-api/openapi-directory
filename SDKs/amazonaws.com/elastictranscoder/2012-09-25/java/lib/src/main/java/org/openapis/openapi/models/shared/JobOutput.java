/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobOutput - &lt;important&gt; &lt;p&gt;Outputs recommended instead.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;If you specified one output for a job, information about that output. If you specified multiple outputs for a job, the &lt;code&gt;Output&lt;/code&gt; object lists information about the first output. This duplicates the information that is listed for the first output in the &lt;code&gt;Outputs&lt;/code&gt; object.&lt;/p&gt;
 */
public class JobOutput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AlbumArt")
    public JobAlbumArt albumArt;

    public JobOutput withAlbumArt(JobAlbumArt albumArt) {
        this.albumArt = albumArt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AppliedColorSpaceConversion")
    public String appliedColorSpaceConversion;

    public JobOutput withAppliedColorSpaceConversion(String appliedColorSpaceConversion) {
        this.appliedColorSpaceConversion = appliedColorSpaceConversion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Captions")
    public Captions captions;

    public JobOutput withCaptions(Captions captions) {
        this.captions = captions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Composition")
    public Clip[] composition;

    public JobOutput withComposition(Clip[] composition) {
        this.composition = composition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Duration")
    public Long duration;

    public JobOutput withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DurationMillis")
    public Long durationMillis;

    public JobOutput withDurationMillis(Long durationMillis) {
        this.durationMillis = durationMillis;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Encryption")
    public Encryption encryption;

    public JobOutput withEncryption(Encryption encryption) {
        this.encryption = encryption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileSize")
    public Long fileSize;

    public JobOutput withFileSize(Long fileSize) {
        this.fileSize = fileSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FrameRate")
    public String frameRate;

    public JobOutput withFrameRate(String frameRate) {
        this.frameRate = frameRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Height")
    public Long height;

    public JobOutput withHeight(Long height) {
        this.height = height;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;

    public JobOutput withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Key")
    public String key;

    public JobOutput withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PresetId")
    public String presetId;

    public JobOutput withPresetId(String presetId) {
        this.presetId = presetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Rotate")
    public String rotate;

    public JobOutput withRotate(String rotate) {
        this.rotate = rotate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SegmentDuration")
    public String segmentDuration;

    public JobOutput withSegmentDuration(String segmentDuration) {
        this.segmentDuration = segmentDuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;

    public JobOutput withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatusDetail")
    public String statusDetail;

    public JobOutput withStatusDetail(String statusDetail) {
        this.statusDetail = statusDetail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThumbnailEncryption")
    public Encryption thumbnailEncryption;

    public JobOutput withThumbnailEncryption(Encryption thumbnailEncryption) {
        this.thumbnailEncryption = thumbnailEncryption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThumbnailPattern")
    public String thumbnailPattern;

    public JobOutput withThumbnailPattern(String thumbnailPattern) {
        this.thumbnailPattern = thumbnailPattern;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Watermarks")
    public JobWatermark[] watermarks;

    public JobOutput withWatermarks(JobWatermark[] watermarks) {
        this.watermarks = watermarks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Width")
    public Long width;

    public JobOutput withWidth(Long width) {
        this.width = width;
        return this;
    }
    
    public JobOutput(){}
}
