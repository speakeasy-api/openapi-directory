<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CheckInRequest - The parameters to the CheckIn method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CheckInRequest
{
    /**
     * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
     * 
     * @var ?array<string, mixed> $deadlineExpired
     */
	#[\JMS\Serializer\Annotation\SerializedName('deadlineExpired')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $deadlineExpired = null;
    
    /**
     * A workflow specific event occurred.
     * 
     * @var ?array<string, mixed> $event
     */
	#[\JMS\Serializer\Annotation\SerializedName('event')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $event = null;
    
    /**
     * A list of timestamped events.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TimestampedEvent> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TimestampedEvent>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Status $result
     */
	#[\JMS\Serializer\Annotation\SerializedName('result')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Status')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Status $result = null;
    
    /**
     * An SOS report for an unexpected VM failure.
     * 
     * @var ?string $sosReport
     */
	#[\JMS\Serializer\Annotation\SerializedName('sosReport')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sosReport = null;
    
    /**
     * The status of the worker VM.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WorkerStatus $workerStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('workerStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WorkerStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkerStatus $workerStatus = null;
    
	public function __construct()
	{
		$this->deadlineExpired = null;
		$this->event = null;
		$this->events = null;
		$this->result = null;
		$this->sosReport = null;
		$this->workerStatus = null;
	}
}
