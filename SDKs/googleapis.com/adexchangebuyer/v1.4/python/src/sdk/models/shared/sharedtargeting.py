"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import targetingvalue as shared_targetingvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SharedTargeting:
    
    exclusions: Optional[list[shared_targetingvalue.TargetingValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exclusions'), 'exclude': lambda f: f is None }})
    r"""The list of values to exclude from targeting. Each value is AND'd together."""  
    inclusions: Optional[list[shared_targetingvalue.TargetingValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inclusions'), 'exclude': lambda f: f is None }})
    r"""The list of value to include as part of the targeting. Each value is OR'd together."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""The key representing the shared targeting criterion."""  
    