"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetRandomPasswordRequest:
    
    exclude_characters: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludeCharacters'), 'exclude': lambda f: f is None }})  
    exclude_lowercase: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludeLowercase'), 'exclude': lambda f: f is None }})  
    exclude_numbers: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludeNumbers'), 'exclude': lambda f: f is None }})  
    exclude_punctuation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludePunctuation'), 'exclude': lambda f: f is None }})  
    exclude_uppercase: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludeUppercase'), 'exclude': lambda f: f is None }})  
    include_space: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncludeSpace'), 'exclude': lambda f: f is None }})  
    password_length: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PasswordLength'), 'exclude': lambda f: f is None }})  
    require_each_included_type: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequireEachIncludedType'), 'exclude': lambda f: f is None }})  
    