// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type MeetingLiveStreamStatusUpdateSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type MeetingLiveStreamStatusUpdatePathParams struct {
	// The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
	//
	// While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
	MeetingID int64 `pathParam:"style=simple,explode=false,name=meetingId"`
}

// MeetingLiveStreamStatusUpdateApplicationJSONActionEnum - Update the status of a livestream.
//
// The value can be one of the following:<br>
// `start`: Start a live stream. <br>
// `stop`: Stop an ongoing live stream.
type MeetingLiveStreamStatusUpdateApplicationJSONActionEnum string

const (
	MeetingLiveStreamStatusUpdateApplicationJSONActionEnumStart MeetingLiveStreamStatusUpdateApplicationJSONActionEnum = "start"
	MeetingLiveStreamStatusUpdateApplicationJSONActionEnumStop  MeetingLiveStreamStatusUpdateApplicationJSONActionEnum = "stop"
)

func (e *MeetingLiveStreamStatusUpdateApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "start":
		fallthrough
	case "stop":
		*e = MeetingLiveStreamStatusUpdateApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MeetingLiveStreamStatusUpdateApplicationJSONActionEnum: %s", s)
	}
}

// MeetingLiveStreamStatusUpdateApplicationJSONSettings - Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.
type MeetingLiveStreamStatusUpdateApplicationJSONSettings struct {
	// Display the name of the active speaker during a live stream.
	ActiveSpeakerName *bool `json:"active_speaker_name,omitempty"`
	// Display name of the live stream.
	DisplayName *string `json:"display_name,omitempty"`
}

// MeetingLiveStreamStatusUpdateApplicationJSON - Meeting live stream status.
type MeetingLiveStreamStatusUpdateApplicationJSON struct {
	// Update the status of a livestream.
	//
	// The value can be one of the following:<br>
	// `start`: Start a live stream. <br>
	// `stop`: Stop an ongoing live stream.
	Action *MeetingLiveStreamStatusUpdateApplicationJSONActionEnum `json:"action,omitempty"`
	// Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.
	Settings *MeetingLiveStreamStatusUpdateApplicationJSONSettings `json:"settings,omitempty"`
}

type MeetingLiveStreamStatusUpdateRequest struct {
	PathParams MeetingLiveStreamStatusUpdatePathParams
	// Meeting
	Request  MeetingLiveStreamStatusUpdateApplicationJSON `request:"mediaType=application/json"`
	Security MeetingLiveStreamStatusUpdateSecurity
}

type MeetingLiveStreamStatusUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
