// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CancelMailboxExportJobXAmzTargetEnum
type CancelMailboxExportJobXAmzTargetEnum string

const (
	CancelMailboxExportJobXAmzTargetEnumWorkMailServiceCancelMailboxExportJob CancelMailboxExportJobXAmzTargetEnum = "WorkMailService.CancelMailboxExportJob"
)

func (e CancelMailboxExportJobXAmzTargetEnum) ToPointer() *CancelMailboxExportJobXAmzTargetEnum {
	return &e
}

func (e *CancelMailboxExportJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkMailService.CancelMailboxExportJob":
		*e = CancelMailboxExportJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelMailboxExportJobXAmzTargetEnum: %v", v)
	}
}

type CancelMailboxExportJobRequest struct {
	CancelMailboxExportJobRequest shared.CancelMailboxExportJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    CancelMailboxExportJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CancelMailboxExportJobResponse struct {
	// Success
	CancelMailboxExportJobResponse map[string]interface{}
	ContentType                    string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
}
