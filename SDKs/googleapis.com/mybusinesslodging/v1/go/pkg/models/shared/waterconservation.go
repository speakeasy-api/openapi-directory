// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum - Independent organization audits water use exception.
type WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum string

const (
	WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnumExceptionUnspecified WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum = "EXCEPTION_UNSPECIFIED"
	WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnumUnderConstruction    WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum = "UNDER_CONSTRUCTION"
	WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnumDependentOnSeason    WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum = "DEPENDENT_ON_SEASON"
	WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnumDependentOnDayOfWeek WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum: %s", s)
	}
}

// WaterConservationLinenReuseProgramExceptionEnum - Linen reuse program exception.
type WaterConservationLinenReuseProgramExceptionEnum string

const (
	WaterConservationLinenReuseProgramExceptionEnumExceptionUnspecified WaterConservationLinenReuseProgramExceptionEnum = "EXCEPTION_UNSPECIFIED"
	WaterConservationLinenReuseProgramExceptionEnumUnderConstruction    WaterConservationLinenReuseProgramExceptionEnum = "UNDER_CONSTRUCTION"
	WaterConservationLinenReuseProgramExceptionEnumDependentOnSeason    WaterConservationLinenReuseProgramExceptionEnum = "DEPENDENT_ON_SEASON"
	WaterConservationLinenReuseProgramExceptionEnumDependentOnDayOfWeek WaterConservationLinenReuseProgramExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *WaterConservationLinenReuseProgramExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = WaterConservationLinenReuseProgramExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WaterConservationLinenReuseProgramExceptionEnum: %s", s)
	}
}

// WaterConservationTowelReuseProgramExceptionEnum - Towel reuse program exception.
type WaterConservationTowelReuseProgramExceptionEnum string

const (
	WaterConservationTowelReuseProgramExceptionEnumExceptionUnspecified WaterConservationTowelReuseProgramExceptionEnum = "EXCEPTION_UNSPECIFIED"
	WaterConservationTowelReuseProgramExceptionEnumUnderConstruction    WaterConservationTowelReuseProgramExceptionEnum = "UNDER_CONSTRUCTION"
	WaterConservationTowelReuseProgramExceptionEnumDependentOnSeason    WaterConservationTowelReuseProgramExceptionEnum = "DEPENDENT_ON_SEASON"
	WaterConservationTowelReuseProgramExceptionEnumDependentOnDayOfWeek WaterConservationTowelReuseProgramExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *WaterConservationTowelReuseProgramExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = WaterConservationTowelReuseProgramExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WaterConservationTowelReuseProgramExceptionEnum: %s", s)
	}
}

// WaterConservationWaterSavingShowersExceptionEnum - Water saving showers exception.
type WaterConservationWaterSavingShowersExceptionEnum string

const (
	WaterConservationWaterSavingShowersExceptionEnumExceptionUnspecified WaterConservationWaterSavingShowersExceptionEnum = "EXCEPTION_UNSPECIFIED"
	WaterConservationWaterSavingShowersExceptionEnumUnderConstruction    WaterConservationWaterSavingShowersExceptionEnum = "UNDER_CONSTRUCTION"
	WaterConservationWaterSavingShowersExceptionEnumDependentOnSeason    WaterConservationWaterSavingShowersExceptionEnum = "DEPENDENT_ON_SEASON"
	WaterConservationWaterSavingShowersExceptionEnumDependentOnDayOfWeek WaterConservationWaterSavingShowersExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *WaterConservationWaterSavingShowersExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = WaterConservationWaterSavingShowersExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WaterConservationWaterSavingShowersExceptionEnum: %s", s)
	}
}

// WaterConservationWaterSavingSinksExceptionEnum - Water saving sinks exception.
type WaterConservationWaterSavingSinksExceptionEnum string

const (
	WaterConservationWaterSavingSinksExceptionEnumExceptionUnspecified WaterConservationWaterSavingSinksExceptionEnum = "EXCEPTION_UNSPECIFIED"
	WaterConservationWaterSavingSinksExceptionEnumUnderConstruction    WaterConservationWaterSavingSinksExceptionEnum = "UNDER_CONSTRUCTION"
	WaterConservationWaterSavingSinksExceptionEnumDependentOnSeason    WaterConservationWaterSavingSinksExceptionEnum = "DEPENDENT_ON_SEASON"
	WaterConservationWaterSavingSinksExceptionEnumDependentOnDayOfWeek WaterConservationWaterSavingSinksExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *WaterConservationWaterSavingSinksExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = WaterConservationWaterSavingSinksExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WaterConservationWaterSavingSinksExceptionEnum: %s", s)
	}
}

// WaterConservationWaterSavingToiletsExceptionEnum - Water saving toilets exception.
type WaterConservationWaterSavingToiletsExceptionEnum string

const (
	WaterConservationWaterSavingToiletsExceptionEnumExceptionUnspecified WaterConservationWaterSavingToiletsExceptionEnum = "EXCEPTION_UNSPECIFIED"
	WaterConservationWaterSavingToiletsExceptionEnumUnderConstruction    WaterConservationWaterSavingToiletsExceptionEnum = "UNDER_CONSTRUCTION"
	WaterConservationWaterSavingToiletsExceptionEnumDependentOnSeason    WaterConservationWaterSavingToiletsExceptionEnum = "DEPENDENT_ON_SEASON"
	WaterConservationWaterSavingToiletsExceptionEnumDependentOnDayOfWeek WaterConservationWaterSavingToiletsExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *WaterConservationWaterSavingToiletsExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = WaterConservationWaterSavingToiletsExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WaterConservationWaterSavingToiletsExceptionEnum: %s", s)
	}
}

// WaterConservation - Water conservation practices implemented at the hotel.
type WaterConservation struct {
	// Independent organization audits water use. The property conducts a water conservation audit every 5 years, the results of which are either verified by a third-party and/or published in external communications. A water conservation audit is a detailed assessment of the facility, providing recommendations to existing operations and procedures to improve water efficiency, available incentives or rebates, and opportunities for improvements through renovations or upgrades. Examples of organizations who conduct credible third party audits include: Engie Impact, and local utility providers (they often provide energy and water audits).
	IndependentOrganizationAuditsWaterUse *bool `json:"independentOrganizationAuditsWaterUse,omitempty"`
	// Independent organization audits water use exception.
	IndependentOrganizationAuditsWaterUseException *WaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum `json:"independentOrganizationAuditsWaterUseException,omitempty"`
	// Linen reuse program. The property offers a linen reuse program.
	LinenReuseProgram *bool `json:"linenReuseProgram,omitempty"`
	// Linen reuse program exception.
	LinenReuseProgramException *WaterConservationLinenReuseProgramExceptionEnum `json:"linenReuseProgramException,omitempty"`
	// Towel reuse program. The property offers a towel reuse program.
	TowelReuseProgram *bool `json:"towelReuseProgram,omitempty"`
	// Towel reuse program exception.
	TowelReuseProgramException *WaterConservationTowelReuseProgramExceptionEnum `json:"towelReuseProgramException,omitempty"`
	// Water saving showers. All of the property's guest rooms have shower heads that use no more than 2.0 gallons per minute (gpm).
	WaterSavingShowers *bool `json:"waterSavingShowers,omitempty"`
	// Water saving showers exception.
	WaterSavingShowersException *WaterConservationWaterSavingShowersExceptionEnum `json:"waterSavingShowersException,omitempty"`
	// Water saving sinks. All of the property's guest rooms have bathroom faucets that use a maximum of 1.5 gallons per minute (gpm), public restroom faucets do not exceed 0.5 gpm, and kitchen faucets (excluding faucets used exclusively for filling operations) do not exceed 2.2 gpm.
	WaterSavingSinks *bool `json:"waterSavingSinks,omitempty"`
	// Water saving sinks exception.
	WaterSavingSinksException *WaterConservationWaterSavingSinksExceptionEnum `json:"waterSavingSinksException,omitempty"`
	// Water saving toilets. All of the property's toilets use 1.6 gallons per flush, or less.
	WaterSavingToilets *bool `json:"waterSavingToilets,omitempty"`
	// Water saving toilets exception.
	WaterSavingToiletsException *WaterConservationWaterSavingToiletsExceptionEnum `json:"waterSavingToiletsException,omitempty"`
}
