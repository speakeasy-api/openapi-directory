<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InputMapping - InputMapping creates a 'virtual' property that will be injected into the properties before sending the request to the underlying API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InputMapping
{
    /**
     * The name of the field that is going to be injected.
     * 
     * @var ?string $fieldName
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fieldName = null;
    
    /**
     * The location where this mapping applies.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InputMappingLocationEnum $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InputMappingLocationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InputMappingLocationEnum $location = null;
    
    /**
     * Regex to evaluate on method to decide if input applies.
     * 
     * @var ?string $methodMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('methodMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $methodMatch = null;
    
    /**
     * A jsonPath expression to select an element.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->fieldName = null;
		$this->location = null;
		$this->methodMatch = null;
		$this->value = null;
	}
}
