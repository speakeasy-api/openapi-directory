"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlanningStatistics:
    r"""Statistics related to the processing of a query statement."""
    
    estimated_data_to_scan_bytes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EstimatedDataToScanBytes'), 'exclude': lambda f: f is None }})  
    planning_time_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlanningTimeMillis'), 'exclude': lambda f: f is None }})  
    queue_time_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueueTimeMillis'), 'exclude': lambda f: f is None }})  
    work_units_generated_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkUnitsGeneratedCount'), 'exclude': lambda f: f is None }})  
    