// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartFleetXAmzTargetEnum
type StartFleetXAmzTargetEnum string

const (
	StartFleetXAmzTargetEnumPhotonAdminProxyServiceStartFleet StartFleetXAmzTargetEnum = "PhotonAdminProxyService.StartFleet"
)

func (e *StartFleetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PhotonAdminProxyService.StartFleet":
		*e = StartFleetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartFleetXAmzTargetEnum: %s", s)
	}
}

type StartFleetHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StartFleetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartFleetRequest struct {
	Headers StartFleetHeaders
	Request shared.StartFleetRequest `request:"mediaType=application/json"`
}

type StartFleetResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidAccountStatusException
	InvalidAccountStatusException interface{}
	// InvalidRoleException
	InvalidRoleException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// RequestLimitExceededException
	RequestLimitExceededException interface{}
	// ResourceNotAvailableException
	ResourceNotAvailableException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartFleetResult map[string]interface{}
	StatusCode       int
	RawResponse      *http.Response
}
