<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Employee - An employee object that is used by the external API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Employee
{
    /**
     * A read-only timestamp in RFC 3339 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The employee's email address
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * The employee's first name.
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * UUID for this object.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Whether this employee is the owner of the merchant. Each merchant
     * 
     * has one owner employee, and that employee has full authority over
     * the account.
     * 
     * @var ?bool $isOwner
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_owner')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isOwner = null;
    
    /**
     * The employee's last name.
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * A list of location IDs where this employee has access to.
     * 
     * @var ?array<string> $locationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locationIds = null;
    
    /**
     * The employee's phone number in E.164 format, i.e. "+12125554250"
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * Specifies the status of the employees being fetched.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * A read-only timestamp in RFC 3339 format.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->email = null;
		$this->firstName = null;
		$this->id = null;
		$this->isOwner = null;
		$this->lastName = null;
		$this->locationIds = null;
		$this->phoneNumber = null;
		$this->status = null;
		$this->updatedAt = null;
	}
}
