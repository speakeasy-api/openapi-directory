// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTSimulateCustomPolicyActionEnum
type POSTSimulateCustomPolicyActionEnum string

const (
	POSTSimulateCustomPolicyActionEnumSimulateCustomPolicy POSTSimulateCustomPolicyActionEnum = "SimulateCustomPolicy"
)

func (e *POSTSimulateCustomPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SimulateCustomPolicy":
		*e = POSTSimulateCustomPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSimulateCustomPolicyActionEnum: %s", s)
	}
}

// POSTSimulateCustomPolicyVersionEnum
type POSTSimulateCustomPolicyVersionEnum string

const (
	POSTSimulateCustomPolicyVersionEnumTwoThousandAndTen0508 POSTSimulateCustomPolicyVersionEnum = "2010-05-08"
)

func (e *POSTSimulateCustomPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = POSTSimulateCustomPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSimulateCustomPolicyVersionEnum: %s", s)
	}
}

type POSTSimulateCustomPolicyRequest struct {
	Action POSTSimulateCustomPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                             `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                              `request:"mediaType=text/xml"`
	Version           POSTSimulateCustomPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTSimulateCustomPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
