/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ImporterExporterCodeVerificationAPISecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-APISETU-APIKEY",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-APISETU-CLIENTID",
  })
  clientId?: string;
}

export class ImporterExporterCodeVerificationAPIRequest extends SpeakeasyBase {
  /**
   * Importer-Exporter code
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=iec" })
  iec: string;
}

export enum ImporterExporterCodeVerificationApi504ApplicationJSONErrorEnum {
  GatewayTimeout = "gateway_timeout",
}

export enum ImporterExporterCodeVerificationApi504ApplicationJSONErrorDescriptionEnum {
  PublisherServiceDidNotRespondInTime = "Publisher service did not respond in time",
}

/**
 * Gateway Timeout
 */
export class ImporterExporterCodeVerificationApi504ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi504ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi504ApplicationJSONErrorDescriptionEnum;
}

export enum ImporterExporterCodeVerificationApi503ApplicationJSONErrorEnum {
  ServiceUnavailable = "service_unavailable",
}

export enum ImporterExporterCodeVerificationApi503ApplicationJSONErrorDescriptionEnum {
  PublisherServiceIsTemporarilyUnavailable = "Publisher service is temporarily unavailable",
}

/**
 * Service Unavailable
 */
export class ImporterExporterCodeVerificationApi503ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi503ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi503ApplicationJSONErrorDescriptionEnum;
}

export enum ImporterExporterCodeVerificationApi502ApplicationJSONErrorEnum {
  BadGateway = "bad gateway",
}

export enum ImporterExporterCodeVerificationApi502ApplicationJSONErrorDescriptionEnum {
  PublisherServiceReturnedAnInvalidResponse = "Publisher service returned an invalid response.",
}

/**
 * Bad Gateway
 */
export class ImporterExporterCodeVerificationApi502ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi502ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi502ApplicationJSONErrorDescriptionEnum;
}

export enum ImporterExporterCodeVerificationApi500ApplicationJSONErrorEnum {
  InternalServerError = "internal_server_error",
}

export enum ImporterExporterCodeVerificationApi500ApplicationJSONErrorDescriptionEnum {
  InternalServerError = "Internal server error",
}

/**
 * Internal Server Error
 */
export class ImporterExporterCodeVerificationApi500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi500ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi500ApplicationJSONErrorDescriptionEnum;
}

export enum ImporterExporterCodeVerificationApi404ApplicationJSONErrorEnum {
  RecordNotFound = "record_not_found",
  UrlNotFound = "Url not found",
}

export enum ImporterExporterCodeVerificationApi404ApplicationJSONErrorDescriptionEnum {
  NoRecordFound = "No record found",
  YourAPIUrlOrPathIsIncorrect = "Your API url or path is incorrect.",
}

/**
 * Not Found
 */
export class ImporterExporterCodeVerificationApi404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi404ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi404ApplicationJSONErrorDescriptionEnum;
}

export enum ImporterExporterCodeVerificationApi401ApplicationJSONErrorEnum {
  InvalidAuthentication = "invalid_authentication",
  InvalidAuthorization = "invalid_authorization",
}

export enum ImporterExporterCodeVerificationApi401ApplicationJSONErrorDescriptionEnum {
  AuthenticationFailed = "Authentication failed",
  YouAreNotAuthorizedToUseThisAPI = "You are not authorized to use this API",
}

/**
 * Authentication failed
 */
export class ImporterExporterCodeVerificationApi401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi401ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi401ApplicationJSONErrorDescriptionEnum;
}

export enum ImporterExporterCodeVerificationApi400ApplicationJSONErrorEnum {
  InvalidParameter = "invalid parameter",
  MissingParameter = "missing parameter",
}

export enum ImporterExporterCodeVerificationApi400ApplicationJSONErrorDescriptionEnum {
  BadRequest = "Bad request",
  PleaseProvideAllMandatoryParameters = "Please provide all mandatory parameters.",
}

/**
 * Bad Request
 */
export class ImporterExporterCodeVerificationApi400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: ImporterExporterCodeVerificationApi400ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: ImporterExporterCodeVerificationApi400ApplicationJSONErrorDescriptionEnum;
}

export class ImporterExporterCodeVerificationApi200ApplicationJSONBranch extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "badd1" })
  badd1: string;

  @SpeakeasyMetadata()
  @Expose({ name: "badd2" })
  badd2: string;

  @SpeakeasyMetadata()
  @Expose({ name: "branchCode" })
  branchCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pin" })
  pin: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;
}

export class ImporterExporterCodeVerificationApi200ApplicationJSONDirectors extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * successful operation
 */
export class ImporterExporterCodeVerificationApi200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addressLine1" })
  addressLine1: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressLine2" })
  addressLine2: string;

  @SpeakeasyMetadata({
    elemType: ImporterExporterCodeVerificationApi200ApplicationJSONBranch,
  })
  @Expose({ name: "branch" })
  @Type(() => ImporterExporterCodeVerificationApi200ApplicationJSONBranch)
  branch: ImporterExporterCodeVerificationApi200ApplicationJSONBranch[];

  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataAsOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dataAsOn: Date;

  @SpeakeasyMetadata({
    elemType: ImporterExporterCodeVerificationApi200ApplicationJSONDirectors,
  })
  @Expose({ name: "directors" })
  @Type(() => ImporterExporterCodeVerificationApi200ApplicationJSONDirectors)
  directors: ImporterExporterCodeVerificationApi200ApplicationJSONDirectors[];

  @SpeakeasyMetadata()
  @Expose({ name: "entityName" })
  entityName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exporterType" })
  exporterType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iec" })
  iec: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iecIssueDate" })
  iecIssueDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iecModificationDate" })
  iecModificationDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iecStatus" })
  iecStatus: string;

  @SpeakeasyMetadata()
  @Expose({ name: "natureOfConcern" })
  natureOfConcern: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pan" })
  pan: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pin" })
  pin: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;
}

export class ImporterExporterCodeVerificationAPIResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI200ApplicationJSONObject?: ImporterExporterCodeVerificationApi200ApplicationJSON;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI400ApplicationJSONObject?: ImporterExporterCodeVerificationApi400ApplicationJSON;

  /**
   * Authentication failed
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI401ApplicationJSONObject?: ImporterExporterCodeVerificationApi401ApplicationJSON;

  /**
   * Not Found
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI404ApplicationJSONObject?: ImporterExporterCodeVerificationApi404ApplicationJSON;

  /**
   * Internal Server Error
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI500ApplicationJSONObject?: ImporterExporterCodeVerificationApi500ApplicationJSON;

  /**
   * Bad Gateway
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI502ApplicationJSONObject?: ImporterExporterCodeVerificationApi502ApplicationJSON;

  /**
   * Service Unavailable
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI503ApplicationJSONObject?: ImporterExporterCodeVerificationApi503ApplicationJSON;

  /**
   * Gateway Timeout
   */
  @SpeakeasyMetadata()
  importerExporterCodeVerificationAPI504ApplicationJSONObject?: ImporterExporterCodeVerificationApi504ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
