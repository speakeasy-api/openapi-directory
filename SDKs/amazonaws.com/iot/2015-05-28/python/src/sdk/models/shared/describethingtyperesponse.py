"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import thingtypemetadata as shared_thingtypemetadata
from ..shared import thingtypeproperties as shared_thingtypeproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeThingTypeResponse:
    r"""The output for the DescribeThingType operation."""
    
    thing_type_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingTypeArn'), 'exclude': lambda f: f is None }})  
    thing_type_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingTypeId'), 'exclude': lambda f: f is None }})  
    thing_type_metadata: Optional[shared_thingtypemetadata.ThingTypeMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingTypeMetadata'), 'exclude': lambda f: f is None }})  
    thing_type_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingTypeName'), 'exclude': lambda f: f is None }})  
    thing_type_properties: Optional[shared_thingtypeproperties.ThingTypeProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingTypeProperties'), 'exclude': lambda f: f is None }})  
    