<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateLoggingConfigurationRequestBody
{
    /**
     * A complex type that describes a location where chat logs will be stored. Each member represents the configuration of one log destination. For logging, you define only one type of destination (for CloudWatch Logs, Kinesis Firehose, or S3).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateLoggingConfigurationRequestBodyDestinationConfiguration $destinationConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateLoggingConfigurationRequestBodyDestinationConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateLoggingConfigurationRequestBodyDestinationConfiguration $destinationConfiguration = null;
    
    /**
     * Identifier of the logging configuration to be updated.
     * 
     * @var string $identifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('identifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $identifier;
    
    /**
     * Logging-configuration name. The value does not need to be unique.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->destinationConfiguration = null;
		$this->identifier = "";
		$this->name = null;
	}
}
