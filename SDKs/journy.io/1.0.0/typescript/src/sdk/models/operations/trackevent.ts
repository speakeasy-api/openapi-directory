/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Account identification requires an accountId, domain or both
 */
export class TrackEventRequestBodyIdentificationAccount extends SpeakeasyBase {
  /**
   * Unique identifier for the account in your database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The domain associated with the account (e.g. acme-inc.com)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;
}

/**
 * User identification requires a userId, email or both
 */
export class TrackEventRequestBodyIdentificationUser extends SpeakeasyBase {
  /**
   * Email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Unique identifier for the user in your database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}

/**
 * Event identification requires a user, account or both
 */
export class TrackEventRequestBodyIdentification extends SpeakeasyBase {
  /**
   * Account identification requires an accountId, domain or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => TrackEventRequestBodyIdentificationAccount)
  account?: TrackEventRequestBodyIdentificationAccount;

  /**
   * User identification requires a userId, email or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => TrackEventRequestBodyIdentificationUser)
  user?: TrackEventRequestBodyIdentificationUser;
}

/**
 * Event for a user or an account
 */
export class TrackEventRequestBody extends SpeakeasyBase {
  /**
   * Event identification requires a user, account or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identification" })
  @Type(() => TrackEventRequestBodyIdentification)
  identification: TrackEventRequestBodyIdentification;

  /**
   * Event metadata, possible values are strings, booleans, numbers and datetimes (ISO 8601)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * If left blank this defaults to the current datetime
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggeredAt" })
  triggeredAt?: string;
}

export class TrackEvent500ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class TrackEvent500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => TrackEvent500ApplicationJSONMeta)
  meta: TrackEvent500ApplicationJSONMeta;
}

export class TrackEvent429ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class TrackEvent429ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => TrackEvent429ApplicationJSONMeta)
  meta: TrackEvent429ApplicationJSONMeta;
}

export class TrackEvent403ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class TrackEvent403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => TrackEvent403ApplicationJSONMeta)
  meta: TrackEvent403ApplicationJSONMeta;
}

export class TrackEvent401ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class TrackEvent401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => TrackEvent401ApplicationJSONMeta)
  meta: TrackEvent401ApplicationJSONMeta;
}

/**
 * All query-, header- and path- parameters that seemed incorrect
 */
export class TrackEvent400ApplicationJSONErrorsParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  header?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  query?: Record<string, string>;
}

/**
 * Map that sums up all received values that seemed incorrect
 */
export class TrackEvent400ApplicationJSONErrors extends SpeakeasyBase {
  /**
   * All input fields that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: Record<string, string>;

  /**
   * All query-, header- and path- parameters that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  @Type(() => TrackEvent400ApplicationJSONErrorsParameters)
  parameters?: TrackEvent400ApplicationJSONErrorsParameters;
}

export class TrackEvent400ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class TrackEvent400ApplicationJSON extends SpeakeasyBase {
  /**
   * Map that sums up all received values that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  @Type(() => TrackEvent400ApplicationJSONErrors)
  errors: TrackEvent400ApplicationJSONErrors;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => TrackEvent400ApplicationJSONMeta)
  meta: TrackEvent400ApplicationJSONMeta;
}

export class TrackEvent201ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class TrackEvent201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => TrackEvent201ApplicationJSONMeta)
  meta: TrackEvent201ApplicationJSONMeta;
}

export class TrackEventResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Object was created
   */
  @SpeakeasyMetadata()
  trackEvent201ApplicationJSONObject?: TrackEvent201ApplicationJSON;

  /**
   * Bad request, some fields or parameters are incorrect
   */
  @SpeakeasyMetadata()
  trackEvent400ApplicationJSONObject?: TrackEvent400ApplicationJSON;

  /**
   * No API Key was provided or the key is not authorised to perform the action
   */
  @SpeakeasyMetadata()
  trackEvent401ApplicationJSONObject?: TrackEvent401ApplicationJSON;

  /**
   * The API Key provided is currently not enabled
   */
  @SpeakeasyMetadata()
  trackEvent403ApplicationJSONObject?: TrackEvent403ApplicationJSON;

  /**
   * Too many API requests were send
   */
  @SpeakeasyMetadata()
  trackEvent429ApplicationJSONObject?: TrackEvent429ApplicationJSON;

  /**
   * An unexpected error occurred
   */
  @SpeakeasyMetadata()
  trackEvent500ApplicationJSONObject?: TrackEvent500ApplicationJSON;
}
