/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AutomationEntity - List Automations
 */
public class AutomationEntity {
    /**
     * Automation type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automation")
    public AutomationEntityAutomationEnum automation;

    public AutomationEntity withAutomation(AutomationEntityAutomationEnum automation) {
        this.automation = automation;
        return this;
    }
    
    /**
     * Indicates if the automation has been deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public AutomationEntity withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * Description for the this Automation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public AutomationEntity withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * If set, this string in the destination path will be replaced with the value in `destination_replace_to`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination_replace_from")
    public String destinationReplaceFrom;

    public AutomationEntity withDestinationReplaceFrom(String destinationReplaceFrom) {
        this.destinationReplaceFrom = destinationReplaceFrom;
        return this;
    }
    
    /**
     * If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination_replace_to")
    public String destinationReplaceTo;

    public AutomationEntity withDestinationReplaceTo(String destinationReplaceTo) {
        this.destinationReplaceTo = destinationReplaceTo;
        return this;
    }
    
    /**
     * Destination Path
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinations")
    public String[] destinations;

    public AutomationEntity withDestinations(String[] destinations) {
        this.destinations = destinations;
        return this;
    }
    
    /**
     * If true, this automation will not run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;

    public AutomationEntity withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * IDs of Groups for the Automation (i.e. who to Request File from)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group_ids")
    public Integer[] groupIds;

    public AutomationEntity withGroupIds(Integer[] groupIds) {
        this.groupIds = groupIds;
        return this;
    }
    
    /**
     * Automation ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;

    public AutomationEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * If trigger is `daily`, this specifies how often to run this automation.  One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interval")
    public String interval;

    public AutomationEntity withInterval(String interval) {
        this.interval = interval;
        return this;
    }
    
    /**
     * Time when automation was last modified. Does not change for name or description updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_modified_at")
    public OffsetDateTime lastModifiedAt;

    public AutomationEntity withLastModifiedAt(OffsetDateTime lastModifiedAt) {
        this.lastModifiedAt = lastModifiedAt;
        return this;
    }
    
    /**
     * Name for this automation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AutomationEntity withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Path on which this Automation runs.  Supports globs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public AutomationEntity withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recurring_day")
    public Integer recurringDay;

    public AutomationEntity withRecurringDay(Integer recurringDay) {
        this.recurringDay = recurringDay;
        return this;
    }
    
    /**
     * If trigger is `custom_schedule`, Custom schedule description for when the automation should be run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public java.util.Map<String, Object> schedule;

    public AutomationEntity withSchedule(java.util.Map<String, Object> schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * Source Path
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public AutomationEntity withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * IDs of remote sync folder behaviors to run by this Automation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sync_ids")
    public Integer[] syncIds;

    public AutomationEntity withSyncIds(Integer[] syncIds) {
        this.syncIds = syncIds;
        return this;
    }
    
    /**
     * How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trigger")
    public AutomationEntityTriggerEnum trigger;

    public AutomationEntity withTrigger(AutomationEntityTriggerEnum trigger) {
        this.trigger = trigger;
        return this;
    }
    
    /**
     * If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trigger_actions")
    public String[] triggerActions;

    public AutomationEntity withTriggerActions(String[] triggerActions) {
        this.triggerActions = triggerActions;
        return this;
    }
    
    /**
     * User ID of the Automation's creator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public Integer userId;

    public AutomationEntity withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * IDs of Users for the Automation (i.e. who to Request File from)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_ids")
    public Integer[] userIds;

    public AutomationEntity withUserIds(Integer[] userIds) {
        this.userIds = userIds;
        return this;
    }
    
    /**
     * A Hash of attributes specific to the automation type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public java.util.Map<String, Object> value;

    public AutomationEntity withValue(java.util.Map<String, Object> value) {
        this.value = value;
        return this;
    }
    
    /**
     * If trigger is `webhook`, this is the URL of the webhook to trigger the Automation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhook_url")
    public String webhookUrl;

    public AutomationEntity withWebhookUrl(String webhookUrl) {
        this.webhookUrl = webhookUrl;
        return this;
    }
    
    public AutomationEntity(){}
}
