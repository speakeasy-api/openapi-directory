/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReleasesCreateReleaseUploadSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * Optional parameters to create releases with user defined metadata
 */
export class ReleasesCreateReleaseUploadRequestBody extends SpeakeasyBase {
  /**
   * User defined build number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "build_number" })
  buildNumber?: string;

  /**
   * User defined build version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "build_version" })
  buildVersion?: string;
}

export class ReleasesCreateReleaseUploadRequest extends SpeakeasyBase {
  /**
   * Optional parameters to create releases with user defined metadata
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ReleasesCreateReleaseUploadRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * Error codes:
 *
 * @remarks
 * - `not_found` - The app doesn't exist.
 *
 */
export class ReleasesCreateReleaseUpload404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export enum ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * The request contained invalid properties.
 */
export class ReleasesCreateReleaseUpload400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Created
 */
export class ReleasesCreateReleaseUpload201ApplicationJSON extends SpeakeasyBase {
  /**
   * The ID for the newly created upload. It is going to be required later in the process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The associated asset ID in the file management service associated with this uploaded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "package_asset_id" })
  packageAssetId: string;

  /**
   * The access token used for upload permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token: string;

  /**
   * The URL domain used to upload the release.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upload_domain" })
  uploadDomain: string;

  /**
   * The access token used for upload permissions (URL encoded to use as a single query parameter).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url_encoded_token" })
  urlEncodedToken: string;
}

export class ReleasesCreateReleaseUploadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  releasesCreateReleaseUpload201ApplicationJSONObject?: ReleasesCreateReleaseUpload201ApplicationJSON;

  /**
   * The request contained invalid properties.
   */
  @SpeakeasyMetadata()
  releasesCreateReleaseUpload400ApplicationJSONObject?: ReleasesCreateReleaseUpload400ApplicationJSON;

  /**
   * Error codes:
   *
   * @remarks
   * - `not_found` - The app doesn't exist.
   *
   */
  @SpeakeasyMetadata()
  releasesCreateReleaseUpload404ApplicationJSONObject?: ReleasesCreateReleaseUpload404ApplicationJSON;
}
