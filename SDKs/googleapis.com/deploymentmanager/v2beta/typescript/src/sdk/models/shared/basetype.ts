/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CollectionOverride } from "./collectionoverride";
import { Credential } from "./credential";
import { Options } from "./options";
import { Expose, Type } from "class-transformer";

/**
 * BaseType that describes a service-backed Type.
 */
export class BaseType extends SpeakeasyBase {
  /**
   * Allows resource handling overrides for specific collections
   */
  @SpeakeasyMetadata({ elemType: CollectionOverride })
  @Expose({ name: "collectionOverrides" })
  @Type(() => CollectionOverride)
  collectionOverrides?: CollectionOverride[];

  /**
   * The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credential" })
  @Type(() => Credential)
  credential?: Credential;

  /**
   * Descriptor Url for the this type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "descriptorUrl" })
  descriptorUrl?: string;

  /**
   * Options allows customized resource handling by Deployment Manager.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  @Type(() => Options)
  options?: Options;
}
