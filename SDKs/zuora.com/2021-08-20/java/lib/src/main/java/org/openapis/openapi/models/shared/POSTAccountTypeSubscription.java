/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * POSTAccountTypeSubscription - Container for custom fields of a Subscription object.
 * 
 */
public class POSTAccountTypeSubscription {
    /**
     * The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CpqBundleJsonId__QT")
    public String cpqBundleJsonIdQT;
    public POSTAccountTypeSubscription withCpqBundleJsonIdQT(String cpqBundleJsonIdQT) {
        this.cpqBundleJsonIdQT = cpqBundleJsonIdQT;
        return this;
    }
    
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public POSTAccountTypeSubscription withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the subscription's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public POSTAccountTypeSubscription withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * The closing date of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("OpportunityCloseDate__QT")
    public LocalDate opportunityCloseDateQT;
    public POSTAccountTypeSubscription withOpportunityCloseDateQT(LocalDate opportunityCloseDateQT) {
        this.opportunityCloseDateQT = opportunityCloseDateQT;
        return this;
    }
    
    /**
     * The unique identifier of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpportunityName__QT")
    public String opportunityNameQT;
    public POSTAccountTypeSubscription withOpportunityNameQT(String opportunityNameQT) {
        this.opportunityNameQT = opportunityNameQT;
        return this;
    }
    
    /**
     * The NetSuite project that the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Project__NS")
    public String projectNS;
    public POSTAccountTypeSubscription withProjectNS(String projectNS) {
        this.projectNS = projectNS;
        return this;
    }
    
    /**
     * The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuoteBusinessType__QT")
    public String quoteBusinessTypeQT;
    public POSTAccountTypeSubscription withQuoteBusinessTypeQT(String quoteBusinessTypeQT) {
        this.quoteBusinessTypeQT = quoteBusinessTypeQT;
        return this;
    }
    
    /**
     * The unique identifier of the Quote. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuoteNumber__QT")
    public String quoteNumberQT;
    public POSTAccountTypeSubscription withQuoteNumberQT(String quoteNumberQT) {
        this.quoteNumberQT = quoteNumberQT;
        return this;
    }
    
    /**
     * The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuoteType__QT")
    public String quoteTypeQT;
    public POSTAccountTypeSubscription withQuoteTypeQT(String quoteTypeQT) {
        this.quoteTypeQT = quoteTypeQT;
        return this;
    }
    
    /**
     * The NetSuite sales order than the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SalesOrder__NS")
    public String salesOrderNS;
    public POSTAccountTypeSubscription withSalesOrderNS(String salesOrderNS) {
        this.salesOrderNS = salesOrderNS;
        return this;
    }
    
    /**
     * Date when the subscription was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public POSTAccountTypeSubscription withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * If `true`, auto-renew is enabled. Default is `false`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRenew")
    public Boolean autoRenew;
    public POSTAccountTypeSubscription withAutoRenew(Boolean autoRenew) {
        this.autoRenew = autoRenew;
        return this;
    }
    
    /**
     * Effective contract date for this subscription, as `yyyy-mm-dd`.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("contractEffectiveDate")
    public LocalDate contractEffectiveDate;
    public POSTAccountTypeSubscription withContractEffectiveDate(LocalDate contractEffectiveDate) {
        this.contractEffectiveDate = contractEffectiveDate;
        return this;
    }
    
    /**
     * The date on which the services or products within a subscription have been accepted by the customer, as `yyyy-mm-dd`.
     * 
     * Default value is dependent on the value of other fields. See Notes section for more details.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("customerAcceptanceDate")
    public LocalDate customerAcceptanceDate;
    public POSTAccountTypeSubscription withCustomerAcceptanceDate(LocalDate customerAcceptanceDate) {
        this.customerAcceptanceDate = customerAcceptanceDate;
        return this;
    }
    
    /**
     * Duration of the initial subscription term in whole months.  Default is 0. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialTerm")
    public Long initialTerm;
    public POSTAccountTypeSubscription withInitialTerm(Long initialTerm) {
        this.initialTerm = initialTerm;
        return this;
    }
    
    /**
     * Invoice owner account number or ID.
     * 
     * **Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceOwnerAccountKey")
    public String invoiceOwnerAccountKey;
    public POSTAccountTypeSubscription withInvoiceOwnerAccountKey(String invoiceOwnerAccountKey) {
        this.invoiceOwnerAccountKey = invoiceOwnerAccountKey;
        return this;
    }
    
    /**
     * Separates a single subscription from other subscriptions and invoices the charge independently. 
     * 
     * If the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.
     * The default value is `false`.
     * 
     * Prerequisite: The default subscription setting `Enable Subscriptions to be Invoiced Separately` must be set to `Yes`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceSeparately")
    public Boolean invoiceSeparately;
    public POSTAccountTypeSubscription withInvoiceSeparately(Boolean invoiceSeparately) {
        this.invoiceSeparately = invoiceSeparately;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public POSTAccountTypeSubscription withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Duration of the renewal term in whole months. Default is 0.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewalTerm")
    public Long renewalTerm;
    public POSTAccountTypeSubscription withRenewalTerm(Long renewalTerm) {
        this.renewalTerm = renewalTerm;
        return this;
    }
    
    /**
     * The date on which the services or products within a subscription have been activated and access has been provided to the customer, as `yyyy-mm-dd`.
     * 
     * Default value is dependent on the value of other fields. See Notes section for more details.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceActivationDate")
    public LocalDate serviceActivationDate;
    public POSTAccountTypeSubscription withServiceActivationDate(LocalDate serviceActivationDate) {
        this.serviceActivationDate = serviceActivationDate;
        return this;
    }
    
    /**
     * Container for one or more rate plans for this subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscribeToRatePlans")
    public POSTSrpCreateType[] subscribeToRatePlans;
    public POSTAccountTypeSubscription withSubscribeToRatePlans(POSTSrpCreateType[] subscribeToRatePlans) {
        this.subscribeToRatePlans = subscribeToRatePlans;
        return this;
    }
    
    /**
     * Subscription Number. The value can be up to 1000 characters.
     * 
     * If you do not specify a subscription number when creating a subscription for the new account, Zuora will generate a subscription number automatically.
     * 
     * If the account is created successfully, the subscription number is returned in the `subscriptionNumber` response field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumber")
    public String subscriptionNumber;
    public POSTAccountTypeSubscription withSubscriptionNumber(String subscriptionNumber) {
        this.subscriptionNumber = subscriptionNumber;
        return this;
    }
    
    /**
     * The date on which the subscription term begins, as `yyyy-mm-dd`. If this is a renewal subscription, this date is different from the subscription start date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("termStartDate")
    public LocalDate termStartDate;
    public POSTAccountTypeSubscription withTermStartDate(LocalDate termStartDate) {
        this.termStartDate = termStartDate;
        return this;
    }
    
    /**
     * Possible values are: `TERMED`, `EVERGREEN`.
     * 
     */
    @JsonProperty("termType")
    public String termType;
    public POSTAccountTypeSubscription withTermType(String termType) {
        this.termType = termType;
        return this;
    }
    
}
