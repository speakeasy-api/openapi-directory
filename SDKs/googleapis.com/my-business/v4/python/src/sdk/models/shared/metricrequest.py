"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MetricRequestMetricEnum(str, Enum):
    r"""The requested metric."""
    METRIC_UNSPECIFIED = 'METRIC_UNSPECIFIED'
    ALL = 'ALL'
    QUERIES_DIRECT = 'QUERIES_DIRECT'
    QUERIES_INDIRECT = 'QUERIES_INDIRECT'
    QUERIES_CHAIN = 'QUERIES_CHAIN'
    VIEWS_MAPS = 'VIEWS_MAPS'
    VIEWS_SEARCH = 'VIEWS_SEARCH'
    ACTIONS_WEBSITE = 'ACTIONS_WEBSITE'
    ACTIONS_PHONE = 'ACTIONS_PHONE'
    ACTIONS_DRIVING_DIRECTIONS = 'ACTIONS_DRIVING_DIRECTIONS'
    PHOTOS_VIEWS_MERCHANT = 'PHOTOS_VIEWS_MERCHANT'
    PHOTOS_VIEWS_CUSTOMERS = 'PHOTOS_VIEWS_CUSTOMERS'
    PHOTOS_COUNT_MERCHANT = 'PHOTOS_COUNT_MERCHANT'
    PHOTOS_COUNT_CUSTOMERS = 'PHOTOS_COUNT_CUSTOMERS'
    LOCAL_POST_VIEWS_SEARCH = 'LOCAL_POST_VIEWS_SEARCH'
    LOCAL_POST_ACTIONS_CALL_TO_ACTION = 'LOCAL_POST_ACTIONS_CALL_TO_ACTION'

class MetricRequestOptionsEnum(str, Enum):
    METRIC_OPTION_UNSPECIFIED = 'METRIC_OPTION_UNSPECIFIED'
    AGGREGATED_TOTAL = 'AGGREGATED_TOTAL'
    AGGREGATED_DAILY = 'AGGREGATED_DAILY'
    BREAKDOWN_DAY_OF_WEEK = 'BREAKDOWN_DAY_OF_WEEK'
    BREAKDOWN_HOUR_OF_DAY = 'BREAKDOWN_HOUR_OF_DAY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetricRequest:
    r"""A request to return values for one metric and the options for how those values should be returned."""
    
    metric: Optional[MetricRequestMetricEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metric'), 'exclude': lambda f: f is None }})
    r"""The requested metric."""  
    options: Optional[list[MetricRequestOptionsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})
    r"""How the values should appear when returned."""  
    