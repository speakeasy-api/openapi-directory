/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Created
 */
export class ScannedClinicalDocument extends SpeakeasyBase {
  /**
   * `DELETE` operation will set this field to `true`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * ID of the doctor who owns the document
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor: number;

  /**
   * When creating, if you receive response as 201, but this field is `null`, please send a `GET` request with the created object's ID to retrieve the updated file URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "document" })
  document: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Array of tags represented as string. This should be quoted--e.g. `'["a", "b"]'`--since this endpoint requires `multipart/form-data` encoding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metatags" })
  metatags?: string;

  /**
   * ID of the patient the document concerns
   */
  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  patient: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
