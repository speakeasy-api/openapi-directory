/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Deployment state of admission-webhook
 */
export enum ConfigManagementConfigSyncDeploymentStateAdmissionWebhookEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * Deployment state of the git-sync pod
 */
export enum ConfigManagementConfigSyncDeploymentStateGitSyncEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * Deployment state of the importer pod
 */
export enum ConfigManagementConfigSyncDeploymentStateImporterEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * Deployment state of the monitor pod
 */
export enum ConfigManagementConfigSyncDeploymentStateMonitorEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * Deployment state of reconciler-manager pod
 */
export enum ConfigManagementConfigSyncDeploymentStateReconcilerManagerEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * Deployment state of root-reconciler
 */
export enum ConfigManagementConfigSyncDeploymentStateRootReconcilerEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * Deployment state of the syncer pod
 */
export enum ConfigManagementConfigSyncDeploymentStateSyncerEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  NotInstalled = "NOT_INSTALLED",
  Installed = "INSTALLED",
  Error = "ERROR",
}

/**
 * The state of ConfigSync's deployment on a cluster
 */
export class ConfigManagementConfigSyncDeploymentState extends SpeakeasyBase {
  /**
   * Deployment state of admission-webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "admissionWebhook" })
  admissionWebhook?: ConfigManagementConfigSyncDeploymentStateAdmissionWebhookEnum;

  /**
   * Deployment state of the git-sync pod
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gitSync" })
  gitSync?: ConfigManagementConfigSyncDeploymentStateGitSyncEnum;

  /**
   * Deployment state of the importer pod
   */
  @SpeakeasyMetadata()
  @Expose({ name: "importer" })
  importer?: ConfigManagementConfigSyncDeploymentStateImporterEnum;

  /**
   * Deployment state of the monitor pod
   */
  @SpeakeasyMetadata()
  @Expose({ name: "monitor" })
  monitor?: ConfigManagementConfigSyncDeploymentStateMonitorEnum;

  /**
   * Deployment state of reconciler-manager pod
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reconcilerManager" })
  reconcilerManager?: ConfigManagementConfigSyncDeploymentStateReconcilerManagerEnum;

  /**
   * Deployment state of root-reconciler
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rootReconciler" })
  rootReconciler?: ConfigManagementConfigSyncDeploymentStateRootReconcilerEnum;

  /**
   * Deployment state of the syncer pod
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syncer" })
  syncer?: ConfigManagementConfigSyncDeploymentStateSyncerEnum;
}
