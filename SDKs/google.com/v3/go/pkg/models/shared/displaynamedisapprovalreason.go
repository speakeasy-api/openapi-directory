// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisplayNameDisapprovalReasonDisapprovalReasonEnum - Disapproval reason.
type DisplayNameDisapprovalReasonDisapprovalReasonEnum string

const (
	DisplayNameDisapprovalReasonDisapprovalReasonEnumDisapprovalReasonUnspecified DisplayNameDisapprovalReasonDisapprovalReasonEnum = "DISAPPROVAL_REASON_UNSPECIFIED"
	DisplayNameDisapprovalReasonDisapprovalReasonEnumPunctuation                  DisplayNameDisapprovalReasonDisapprovalReasonEnum = "PUNCTUATION"
	DisplayNameDisapprovalReasonDisapprovalReasonEnumMarketingLanguage            DisplayNameDisapprovalReasonDisapprovalReasonEnum = "MARKETING_LANGUAGE"
	DisplayNameDisapprovalReasonDisapprovalReasonEnumLandingPageNotMatched        DisplayNameDisapprovalReasonDisapprovalReasonEnum = "LANDING_PAGE_NOT_MATCHED"
)

func (e *DisplayNameDisapprovalReasonDisapprovalReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISAPPROVAL_REASON_UNSPECIFIED":
		fallthrough
	case "PUNCTUATION":
		fallthrough
	case "MARKETING_LANGUAGE":
		fallthrough
	case "LANDING_PAGE_NOT_MATCHED":
		*e = DisplayNameDisapprovalReasonDisapprovalReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisplayNameDisapprovalReasonDisapprovalReasonEnum: %s", s)
	}
}

// DisplayNameDisapprovalReason - Disapproval reason of the display name in a specific language.
type DisplayNameDisapprovalReason struct {
	// Disapproval reason.
	DisapprovalReason *DisplayNameDisapprovalReasonDisapprovalReasonEnum `json:"disapprovalReason,omitempty"`
	// Language of the disapproved display name.
	LanguageCode *string `json:"languageCode,omitempty"`
}
