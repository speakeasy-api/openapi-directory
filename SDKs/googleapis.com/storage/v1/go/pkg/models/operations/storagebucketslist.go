// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StorageBucketsListSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsListSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsListSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsListSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsListSecurityOption5 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsListSecurity struct {
	Option1 *StorageBucketsListSecurityOption1 `security:"option"`
	Option2 *StorageBucketsListSecurityOption2 `security:"option"`
	Option3 *StorageBucketsListSecurityOption3 `security:"option"`
	Option4 *StorageBucketsListSecurityOption4 `security:"option"`
	Option5 *StorageBucketsListSecurityOption5 `security:"option"`
}

// StorageBucketsListProjectionEnum - Set of properties to return. Defaults to noAcl.
type StorageBucketsListProjectionEnum string

const (
	StorageBucketsListProjectionEnumFull  StorageBucketsListProjectionEnum = "full"
	StorageBucketsListProjectionEnumNoACL StorageBucketsListProjectionEnum = "noAcl"
)

func (e *StorageBucketsListProjectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "noAcl":
		*e = StorageBucketsListProjectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageBucketsListProjectionEnum: %s", s)
	}
}

type StorageBucketsListQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of buckets to return in a single response. The service will use this parameter or 1,000 items, whichever is smaller.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// A previously-returned page token representing part of the larger set of results to view.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Filter results to buckets whose names begin with this prefix.
	Prefix *string `queryParam:"style=form,explode=true,name=prefix"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// A valid API project identifier.
	Project string `queryParam:"style=form,explode=true,name=project"`
	// Set of properties to return. Defaults to noAcl.
	Projection *StorageBucketsListProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Upload protocol for media (e.g. "media", "multipart", "resumable").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
	// The project to be billed for this request.
	UserProject *string `queryParam:"style=form,explode=true,name=userProject"`
}

type StorageBucketsListRequest struct {
	QueryParams StorageBucketsListQueryParams
	Security    StorageBucketsListSecurity
}

type StorageBucketsListResponse struct {
	// Successful response
	Buckets     *shared.Buckets
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
