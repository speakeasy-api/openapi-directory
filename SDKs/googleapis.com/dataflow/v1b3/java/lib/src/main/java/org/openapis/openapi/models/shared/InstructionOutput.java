/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstructionOutput - An output of an instruction.
 */
public class InstructionOutput {
    /**
     * The codec to use to encode data being written via this output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codec")
    public java.util.Map<String, Object> codec;

    public InstructionOutput withCodec(java.util.Map<String, Object> codec) {
        this.codec = codec;
        return this;
    }
    
    /**
     * The user-provided name of this output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public InstructionOutput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * For system-generated byte and mean byte metrics, certain instructions should only report the key size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onlyCountKeyBytes")
    public Boolean onlyCountKeyBytes;

    public InstructionOutput withOnlyCountKeyBytes(Boolean onlyCountKeyBytes) {
        this.onlyCountKeyBytes = onlyCountKeyBytes;
        return this;
    }
    
    /**
     * For system-generated byte and mean byte metrics, certain instructions should only report the value size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onlyCountValueBytes")
    public Boolean onlyCountValueBytes;

    public InstructionOutput withOnlyCountValueBytes(Boolean onlyCountValueBytes) {
        this.onlyCountValueBytes = onlyCountValueBytes;
        return this;
    }
    
    /**
     * System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalName")
    public String originalName;

    public InstructionOutput withOriginalName(String originalName) {
        this.originalName = originalName;
        return this;
    }
    
    /**
     * System-defined name of this output. Unique across the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemName")
    public String systemName;

    public InstructionOutput withSystemName(String systemName) {
        this.systemName = systemName;
        return this;
    }
    
    public InstructionOutput(){}
}
