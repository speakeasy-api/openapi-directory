"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import shoppingadsprogramstatusreviewineligibilityreasondetails as shared_shoppingadsprogramstatusreviewineligibilityreasondetails
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ShoppingAdsProgramStatusRegionStatusEligibilityStatusEnum(str, Enum):
    r"""Eligibility status of the Shopping Ads program."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    APPROVED = 'APPROVED'
    DISAPPROVED = 'DISAPPROVED'
    WARNING = 'WARNING'
    UNDER_REVIEW = 'UNDER_REVIEW'
    PENDING_REVIEW = 'PENDING_REVIEW'
    ONBOARDING = 'ONBOARDING'

class ShoppingAdsProgramStatusRegionStatusReviewEligibilityStatusEnum(str, Enum):
    r"""If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`."""
    REVIEW_ELIGIBILITY_UNSPECIFIED = 'REVIEW_ELIGIBILITY_UNSPECIFIED'
    ELIGIBLE = 'ELIGIBLE'
    INELIGIBLE = 'INELIGIBLE'

class ShoppingAdsProgramStatusRegionStatusReviewIneligibilityReasonEnum(str, Enum):
    r"""Review ineligibility reason if account is not eligible for review."""
    REVIEW_INELIGIBILITY_REASON_UNSPECIFIED = 'REVIEW_INELIGIBILITY_REASON_UNSPECIFIED'
    ONBOARDING_ISSUES = 'ONBOARDING_ISSUES'
    NOT_ENOUGH_OFFERS = 'NOT_ENOUGH_OFFERS'
    IN_COOLDOWN_PERIOD = 'IN_COOLDOWN_PERIOD'
    ALREADY_UNDER_REVIEW = 'ALREADY_UNDER_REVIEW'
    NO_REVIEW_REQUIRED = 'NO_REVIEW_REQUIRED'
    WILL_BE_REVIEWED_AUTOMATICALLY = 'WILL_BE_REVIEWED_AUTOMATICALLY'
    IS_RETIRED = 'IS_RETIRED'
    ALREADY_REVIEWED = 'ALREADY_REVIEWED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShoppingAdsProgramStatusRegionStatus:
    r"""Status of program and region."""
    
    disapproval_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disapprovalDate'), 'exclude': lambda f: f is None }})
    r"""Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`."""  
    eligibility_status: Optional[ShoppingAdsProgramStatusRegionStatusEligibilityStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eligibilityStatus'), 'exclude': lambda f: f is None }})
    r"""Eligibility status of the Shopping Ads program."""  
    onboarding_issues: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onboardingIssues'), 'exclude': lambda f: f is None }})
    r"""Issues that must be fixed to be eligible for review."""  
    region_codes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regionCodes'), 'exclude': lambda f: f is None }})
    r"""The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`."""  
    review_eligibility_status: Optional[ShoppingAdsProgramStatusRegionStatusReviewEligibilityStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reviewEligibilityStatus'), 'exclude': lambda f: f is None }})
    r"""If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`."""  
    review_ineligibility_reason: Optional[ShoppingAdsProgramStatusRegionStatusReviewIneligibilityReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reviewIneligibilityReason'), 'exclude': lambda f: f is None }})
    r"""Review ineligibility reason if account is not eligible for review."""  
    review_ineligibility_reason_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reviewIneligibilityReasonDescription'), 'exclude': lambda f: f is None }})
    r"""Reason a program in a specific region isnâ€™t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`."""  
    review_ineligibility_reason_details: Optional[shared_shoppingadsprogramstatusreviewineligibilityreasondetails.ShoppingAdsProgramStatusReviewIneligibilityReasonDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reviewIneligibilityReasonDetails'), 'exclude': lambda f: f is None }})
    r"""Additional details for review ineligibility reasons."""  
    review_issues: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reviewIssues'), 'exclude': lambda f: f is None }})
    r"""Issues evaluated in the review process. Fix all issues before requesting a review."""  
    