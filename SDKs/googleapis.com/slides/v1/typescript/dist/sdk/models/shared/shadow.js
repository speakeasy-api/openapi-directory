"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Shadow = exports.ShadowTypeEnum = exports.ShadowPropertyStateEnum = exports.ShadowAlignmentEnum = void 0;
var utils_1 = require("../../../internal/utils");
var affinetransform_1 = require("./affinetransform");
var dimension_1 = require("./dimension");
var opaquecolor_1 = require("./opaquecolor");
var class_transformer_1 = require("class-transformer");
/**
 * The alignment point of the shadow, that sets the origin for translate, scale and skew of the shadow. This property is read-only.
 */
var ShadowAlignmentEnum;
(function (ShadowAlignmentEnum) {
    ShadowAlignmentEnum["RectanglePositionUnspecified"] = "RECTANGLE_POSITION_UNSPECIFIED";
    ShadowAlignmentEnum["TopLeft"] = "TOP_LEFT";
    ShadowAlignmentEnum["TopCenter"] = "TOP_CENTER";
    ShadowAlignmentEnum["TopRight"] = "TOP_RIGHT";
    ShadowAlignmentEnum["LeftCenter"] = "LEFT_CENTER";
    ShadowAlignmentEnum["Center"] = "CENTER";
    ShadowAlignmentEnum["RightCenter"] = "RIGHT_CENTER";
    ShadowAlignmentEnum["BottomLeft"] = "BOTTOM_LEFT";
    ShadowAlignmentEnum["BottomCenter"] = "BOTTOM_CENTER";
    ShadowAlignmentEnum["BottomRight"] = "BOTTOM_RIGHT";
})(ShadowAlignmentEnum = exports.ShadowAlignmentEnum || (exports.ShadowAlignmentEnum = {}));
/**
 * The shadow property state. Updating the shadow on a page element will implicitly update this field to `RENDERED`, unless another value is specified in the same request. To have no shadow on a page element, set this field to `NOT_RENDERED`. In this case, any other shadow fields set in the same request will be ignored.
 */
var ShadowPropertyStateEnum;
(function (ShadowPropertyStateEnum) {
    ShadowPropertyStateEnum["Rendered"] = "RENDERED";
    ShadowPropertyStateEnum["NotRendered"] = "NOT_RENDERED";
    ShadowPropertyStateEnum["Inherit"] = "INHERIT";
})(ShadowPropertyStateEnum = exports.ShadowPropertyStateEnum || (exports.ShadowPropertyStateEnum = {}));
/**
 * The type of the shadow. This property is read-only.
 */
var ShadowTypeEnum;
(function (ShadowTypeEnum) {
    ShadowTypeEnum["ShadowTypeUnspecified"] = "SHADOW_TYPE_UNSPECIFIED";
    ShadowTypeEnum["Outer"] = "OUTER";
})(ShadowTypeEnum = exports.ShadowTypeEnum || (exports.ShadowTypeEnum = {}));
/**
 * The shadow properties of a page element. If these fields are unset, they may be inherited from a parent placeholder if it exists. If there is no parent, the fields will default to the value used for new page elements created in the Slides editor, which may depend on the page element kind.
 */
var Shadow = /** @class */ (function (_super) {
    __extends(Shadow, _super);
    function Shadow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alignment" }),
        __metadata("design:type", String)
    ], Shadow.prototype, "alignment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alpha" }),
        __metadata("design:type", Number)
    ], Shadow.prototype, "alpha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blurRadius" }),
        (0, class_transformer_1.Type)(function () { return dimension_1.Dimension; }),
        __metadata("design:type", dimension_1.Dimension)
    ], Shadow.prototype, "blurRadius", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "color" }),
        (0, class_transformer_1.Type)(function () { return opaquecolor_1.OpaqueColor; }),
        __metadata("design:type", opaquecolor_1.OpaqueColor)
    ], Shadow.prototype, "color", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "propertyState" }),
        __metadata("design:type", String)
    ], Shadow.prototype, "propertyState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rotateWithShape" }),
        __metadata("design:type", Boolean)
    ], Shadow.prototype, "rotateWithShape", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transform" }),
        (0, class_transformer_1.Type)(function () { return affinetransform_1.AffineTransform; }),
        __metadata("design:type", affinetransform_1.AffineTransform)
    ], Shadow.prototype, "transform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Shadow.prototype, "type", void 0);
    return Shadow;
}(utils_1.SpeakeasyBase));
exports.Shadow = Shadow;
