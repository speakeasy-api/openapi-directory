<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListCollectionsRequest
{
    /**
     * Sort direction
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListCollectionsDirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?ListCollectionsDirectionEnum $direction = null;
    
    /**
     * This is the maximum number of objects that may be returned
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * An opaque string cursor to fetch the next page of data.
     * 
     * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
     * 
     * 
     * @var ?string $next
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=next')]
    public ?string $next = null;
    
    /**
     * List the collection contained in this `parent` collection.
     * 
     * 
     * This option doesn't provide a complete multi-level collection support.
     * When sharing a collection with someone, this one will have as `parent` `sharedWithMe`.
     * 
     * 
     * @var ?string $parent
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parent')]
    public ?string $parent = null;
    
    /**
     * An opaque string cursor to fetch the previous page of data.
     * 
     * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
     * 
     * 
     * @var ?string $previous
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=previous')]
    public ?string $previous = null;
    
    /**
     * Sort
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListCollectionsSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?ListCollectionsSortEnum $sort = null;
    
	public function __construct()
	{
		$this->direction = null;
		$this->limit = null;
		$this->next = null;
		$this->parent = null;
		$this->previous = null;
		$this->sort = null;
	}
}
