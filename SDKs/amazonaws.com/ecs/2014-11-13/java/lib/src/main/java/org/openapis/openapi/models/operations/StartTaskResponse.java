/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class StartTaskResponse {
    /**
     * ClientException
     */
    
    public Object clientException;

    public StartTaskResponse withClientException(Object clientException) {
        this.clientException = clientException;
        return this;
    }
    
    /**
     * ClusterNotFoundException
     */
    
    public Object clusterNotFoundException;

    public StartTaskResponse withClusterNotFoundException(Object clusterNotFoundException) {
        this.clusterNotFoundException = clusterNotFoundException;
        return this;
    }
    
    
    public String contentType;

    public StartTaskResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public StartTaskResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * ServerException
     */
    
    public Object serverException;

    public StartTaskResponse withServerException(Object serverException) {
        this.serverException = serverException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.StartTaskResponse startTaskResponse;

    public StartTaskResponse withStartTaskResponse(org.openapis.openapi.models.shared.StartTaskResponse startTaskResponse) {
        this.startTaskResponse = startTaskResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public StartTaskResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public StartTaskResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public StartTaskResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
