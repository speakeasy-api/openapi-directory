// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum - The type of resource, for example a VPC attachment.
type AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum string

const (
	AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnumVpc                  AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum = "vpc"
	AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnumVpn                  AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum = "vpn"
	AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnumDirectConnectGateway AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum = "direct-connect-gateway"
	AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnumConnect              AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum = "connect"
	AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnumPeering              AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum = "peering"
	AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnumTgwPeering           AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum = "tgw-peering"
)

func (e AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum) ToPointer() *AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum {
	return &e
}

func (e *AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum: %v", v)
	}
}

// AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum - The state of the subnet association.
type AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum string

const (
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumPendingAcceptance AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "pendingAcceptance"
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumAssociating       AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "associating"
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumAssociated        AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "associated"
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumDisassociating    AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "disassociating"
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumDisassociated     AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "disassociated"
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumRejected          AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "rejected"
	AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnumFailed            AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum = "failed"
)

func (e AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum) ToPointer() *AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum {
	return &e
}

func (e *AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pendingAcceptance":
		fallthrough
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "rejected":
		fallthrough
	case "failed":
		*e = AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum: %v", v)
	}
}

// AssociateTransitGatewayMulticastDomainResultAssociationsSubnets - Describes the subnet association with the transit gateway multicast domain.
type AssociateTransitGatewayMulticastDomainResultAssociationsSubnets struct {
	State    *AssociateTransitGatewayMulticastDomainResultAssociationsSubnetsStateEnum
	SubnetID *string
}

// AssociateTransitGatewayMulticastDomainResultAssociations - Information about the transit gateway multicast domain associations.
type AssociateTransitGatewayMulticastDomainResultAssociations struct {
	ResourceID                      *string
	ResourceOwnerID                 *string
	ResourceType                    *AssociateTransitGatewayMulticastDomainResultAssociationsResourceTypeEnum
	Subnets                         []AssociateTransitGatewayMulticastDomainResultAssociationsSubnets
	TransitGatewayAttachmentID      *string
	TransitGatewayMulticastDomainID *string
}

// AssociateTransitGatewayMulticastDomainResult - Success
type AssociateTransitGatewayMulticastDomainResult struct {
	Associations *AssociateTransitGatewayMulticastDomainResultAssociations
}
