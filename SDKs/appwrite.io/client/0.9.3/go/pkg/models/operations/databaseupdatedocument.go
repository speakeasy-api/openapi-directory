// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DatabaseUpdateDocumentSecurity struct {
	Jwt     string `security:"scheme,type=apiKey,subtype=header,name=X-Appwrite-JWT"`
	Project string `security:"scheme,type=apiKey,subtype=header,name=X-Appwrite-Project"`
}

type DatabaseUpdateDocumentRequestBody struct {
	// Document data as JSON object.
	Data map[string]interface{} `json:"data"`
	// An array of strings with read permissions. By default inherits the existing read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
	Read []string `json:"read,omitempty"`
	// An array of strings with write permissions. By default inherits the existing write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
	Write []string `json:"write,omitempty"`
}

type DatabaseUpdateDocumentRequest struct {
	RequestBody *DatabaseUpdateDocumentRequestBody `request:"mediaType=application/json"`
	// Collection unique ID. You can create a new collection with validation rules using the Database service [server integration](/docs/server/database#createCollection).
	CollectionID string `pathParam:"style=simple,explode=false,name=collectionId"`
	// Document unique ID.
	DocumentID string `pathParam:"style=simple,explode=false,name=documentId"`
}

type DatabaseUpdateDocumentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Document
	Document map[string]interface{}
}
