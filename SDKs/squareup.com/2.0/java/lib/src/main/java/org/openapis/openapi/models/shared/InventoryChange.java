/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InventoryChange - Represents a single physical count, inventory, adjustment, or transfer
 * that is part of the history of inventory changes for a particular
 * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance.
 */
public class InventoryChange {
    /**
     * Represents a change in state or quantity of product inventory at a
     * particular time and location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjustment")
    public InventoryAdjustment adjustment;
    public InventoryChange withAdjustment(InventoryAdjustment adjustment) {
        this.adjustment = adjustment;
        return this;
    }
    
    /**
     * Represents the unit used to measure a `CatalogItemVariation` and
     * specifies the precision for decimal quantities.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurement_unit")
    public CatalogMeasurementUnit measurementUnit;
    public InventoryChange withMeasurementUnit(CatalogMeasurementUnit measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    /**
     * The ID of the [CatalogMeasurementUnit](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogMeasurementUnit) object representing the catalog measurement unit associated with the inventory change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurement_unit_id")
    public String measurementUnitId;
    public InventoryChange withMeasurementUnitId(String measurementUnitId) {
        this.measurementUnitId = measurementUnitId;
        return this;
    }
    
    /**
     * Represents the quantity of an item variation that is physically present
     * at a specific location, verified by a seller or a seller's employee. For example,
     * a physical count might come from an employee counting the item variations on
     * hand or from syncing with an external system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("physical_count")
    public InventoryPhysicalCount physicalCount;
    public InventoryChange withPhysicalCount(InventoryPhysicalCount physicalCount) {
        this.physicalCount = physicalCount;
        return this;
    }
    
    /**
     * Represents the transfer of a quantity of product inventory at a
     * particular time from one location to another.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer")
    public InventoryTransfer transfer;
    public InventoryChange withTransfer(InventoryTransfer transfer) {
        this.transfer = transfer;
        return this;
    }
    
    /**
     * Indicates how the inventory change is applied. See
     * [InventoryChangeType](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryChangeType) for all possible values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public InventoryChange withType(String type) {
        this.type = type;
        return this;
    }
    
}
