<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PlacedBet
{
    /**
     * The cash in value of the bet. For example £0.88. When no value is given or no value is present, no cash in is available
     * 
     * @var ?float $cashinValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('cashinValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cashinValue = null;
    
    /**
     * The estimated value of the returns if the bet is successful. Note: when an estimated return isn’t available, as in the case of a bet placed on a horse at SP (starting price) where the actual price is unknown when the bet is placed, ‘NOT_AVAILABLE’ will appear in the response field.
     * 
     * @var float $estimatedReturns
     */
	#[\JMS\Serializer\Annotation\SerializedName('estimatedReturns')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $estimatedReturns;
    
    /**
     * If a free bet token is used for the bet, this element represents the value
     * 
     * @var ?float $freeBetValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('freeBetValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $freeBetValue = null;
    
    /**
     * The unique identifier of the bet
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * $legs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PlacedBetLeg> $legs
     */
	#[\JMS\Serializer\Annotation\SerializedName('legs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PlacedBetLeg>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $legs = null;
    
    /**
     * Number of lines of bets
     * 
     * @var ?int $numLines
     */
	#[\JMS\Serializer\Annotation\SerializedName('numLines')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numLines = null;
    
    /**
     * Number of selections that the bet is made of
     * 
     * @var ?int $numSelections
     */
	#[\JMS\Serializer\Annotation\SerializedName('numSelections')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numSelections = null;
    
    /**
     * The unique identifier of the receipt for the bet
     * 
     * @var ?string $receipt
     */
	#[\JMS\Serializer\Annotation\SerializedName('receipt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receipt = null;
    
    /**
     * Whether the bet is settled
     * 
     * @var bool $settled
     */
	#[\JMS\Serializer\Annotation\SerializedName('settled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $settled;
    
    /**
     * The bet stake, which represents the total value of the bet. For example: £ 12.34
     * 
     * @var float $stake
     */
	#[\JMS\Serializer\Annotation\SerializedName('stake')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $stake;
    
    /**
     * The individual stake on each line of the bet. For example: £ 6.17
     * 
     * @var ?float $stakePerLine
     */
	#[\JMS\Serializer\Annotation\SerializedName('stakePerLine')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $stakePerLine = null;
    
    /**
     * The status of the bet. Can be one of the following: A - Active, S - suspended, C - Cashed Out
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * The time the bet was placed
     * 
     * @var string $transDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('transDateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transDateTime;
    
    /**
     * The bet type code of the bet. For example: TBL (Treble)
     * 
     * @var string $typeCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('typeCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $typeCode;
    
    /**
     * The name of the bet type. For example: Double
     * 
     * @var string $typeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('typeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $typeName;
    
    /**
     * Actual value of the returns from this bet
     * 
     * @var float $winnings
     */
	#[\JMS\Serializer\Annotation\SerializedName('winnings')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $winnings;
    
	public function __construct()
	{
		$this->cashinValue = null;
		$this->estimatedReturns = 0;
		$this->freeBetValue = null;
		$this->id = "";
		$this->legs = null;
		$this->numLines = null;
		$this->numSelections = null;
		$this->receipt = null;
		$this->settled = false;
		$this->stake = 0;
		$this->stakePerLine = null;
		$this->status = "";
		$this->transDateTime = "";
		$this->typeCode = "";
		$this->typeName = "";
		$this->winnings = 0;
	}
}
