/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TableInput - A structure used to define a table.
 */
public class TableInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public TableInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastAccessTime")
    public OffsetDateTime lastAccessTime;

    public TableInput withLastAccessTime(OffsetDateTime lastAccessTime) {
        this.lastAccessTime = lastAccessTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastAnalyzedTime")
    public OffsetDateTime lastAnalyzedTime;

    public TableInput withLastAnalyzedTime(OffsetDateTime lastAnalyzedTime) {
        this.lastAnalyzedTime = lastAnalyzedTime;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public TableInput withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;

    public TableInput withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parameters")
    public java.util.Map<String, String> parameters;

    public TableInput withParameters(java.util.Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PartitionKeys")
    public Column[] partitionKeys;

    public TableInput withPartitionKeys(Column[] partitionKeys) {
        this.partitionKeys = partitionKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Retention")
    public Long retention;

    public TableInput withRetention(Long retention) {
        this.retention = retention;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageDescriptor")
    public StorageDescriptor storageDescriptor;

    public TableInput withStorageDescriptor(StorageDescriptor storageDescriptor) {
        this.storageDescriptor = storageDescriptor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TableType")
    public String tableType;

    public TableInput withTableType(String tableType) {
        this.tableType = tableType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetTable")
    public TableIdentifier targetTable;

    public TableInput withTargetTable(TableIdentifier targetTable) {
        this.targetTable = targetTable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ViewExpandedText")
    public String viewExpandedText;

    public TableInput withViewExpandedText(String viewExpandedText) {
        this.viewExpandedText = viewExpandedText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ViewOriginalText")
    public String viewOriginalText;

    public TableInput withViewOriginalText(String viewOriginalText) {
        this.viewOriginalText = viewOriginalText;
        return this;
    }
    
    public TableInput(@JsonProperty("Name") String name) {
        this.name = name;
  }
}
