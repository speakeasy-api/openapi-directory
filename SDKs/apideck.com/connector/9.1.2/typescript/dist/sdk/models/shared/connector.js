"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Connector = exports.ConnectorUnifiedApis = exports.ConnectorUnifiedApisOauthScopes = exports.ConnectorTlsSupport = exports.ConnectorOauthScopes = exports.ConnectorOauthGrantTypeEnum = exports.ConnectorOauthCredentialsSourceEnum = exports.ConnectorAuthTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var connectordoc_1 = require("./connectordoc");
var connectorevent_1 = require("./connectorevent");
var connectorsetting_1 = require("./connectorsetting");
var connectorstatusenum_1 = require("./connectorstatusenum");
var linkedconnectorresource_1 = require("./linkedconnectorresource");
var unifiedapiidenum_1 = require("./unifiedapiidenum");
var webhooksupport_1 = require("./webhooksupport");
var class_transformer_1 = require("class-transformer");
/**
 * Type of authorization used by the connector
 */
var ConnectorAuthTypeEnum;
(function (ConnectorAuthTypeEnum) {
    ConnectorAuthTypeEnum["Oauth2"] = "oauth2";
    ConnectorAuthTypeEnum["ApiKey"] = "apiKey";
    ConnectorAuthTypeEnum["Basic"] = "basic";
    ConnectorAuthTypeEnum["Custom"] = "custom";
    ConnectorAuthTypeEnum["None"] = "none";
})(ConnectorAuthTypeEnum = exports.ConnectorAuthTypeEnum || (exports.ConnectorAuthTypeEnum = {}));
/**
 * Location of the OAuth client credentials. For most connectors the OAuth client credentials are stored on integration and managed by the application owner. For others they are stored on connection and managed by the consumer in Vault.
 */
var ConnectorOauthCredentialsSourceEnum;
(function (ConnectorOauthCredentialsSourceEnum) {
    ConnectorOauthCredentialsSourceEnum["Integration"] = "integration";
    ConnectorOauthCredentialsSourceEnum["Connection"] = "connection";
})(ConnectorOauthCredentialsSourceEnum = exports.ConnectorOauthCredentialsSourceEnum || (exports.ConnectorOauthCredentialsSourceEnum = {}));
/**
 * OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types
 */
var ConnectorOauthGrantTypeEnum;
(function (ConnectorOauthGrantTypeEnum) {
    ConnectorOauthGrantTypeEnum["AuthorizationCode"] = "authorization_code";
    ConnectorOauthGrantTypeEnum["ClientCredentials"] = "client_credentials";
    ConnectorOauthGrantTypeEnum["Password"] = "password";
})(ConnectorOauthGrantTypeEnum = exports.ConnectorOauthGrantTypeEnum || (exports.ConnectorOauthGrantTypeEnum = {}));
var ConnectorOauthScopes = /** @class */ (function (_super) {
    __extends(ConnectorOauthScopes, _super);
    function ConnectorOauthScopes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "default_apis" }),
        __metadata("design:type", Array)
    ], ConnectorOauthScopes.prototype, "defaultApis", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ConnectorOauthScopes.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label" }),
        __metadata("design:type", String)
    ], ConnectorOauthScopes.prototype, "label", void 0);
    return ConnectorOauthScopes;
}(utils_1.SpeakeasyBase));
exports.ConnectorOauthScopes = ConnectorOauthScopes;
var ConnectorTlsSupport = /** @class */ (function (_super) {
    __extends(ConnectorTlsSupport, _super);
    function ConnectorTlsSupport() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], ConnectorTlsSupport.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], ConnectorTlsSupport.prototype, "type", void 0);
    return ConnectorTlsSupport;
}(utils_1.SpeakeasyBase));
exports.ConnectorTlsSupport = ConnectorTlsSupport;
/**
 * OAuth scopes required for the connector. Add these scopes to your OAuth app.
 */
var ConnectorUnifiedApisOauthScopes = /** @class */ (function (_super) {
    __extends(ConnectorUnifiedApisOauthScopes, _super);
    function ConnectorUnifiedApisOauthScopes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ConnectorUnifiedApisOauthScopes.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label" }),
        __metadata("design:type", String)
    ], ConnectorUnifiedApisOauthScopes.prototype, "label", void 0);
    return ConnectorUnifiedApisOauthScopes;
}(utils_1.SpeakeasyBase));
exports.ConnectorUnifiedApisOauthScopes = ConnectorUnifiedApisOauthScopes;
var ConnectorUnifiedApis = /** @class */ (function (_super) {
    __extends(ConnectorUnifiedApis, _super);
    function ConnectorUnifiedApis() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "downstream_unsupported_resources" }),
        __metadata("design:type", Array)
    ], ConnectorUnifiedApis.prototype, "downstreamUnsupportedResources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ConnectorUnifiedApis.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ConnectorUnifiedApis.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ConnectorUnifiedApisOauthScopes }),
        (0, class_transformer_1.Expose)({ name: "oauth_scopes" }),
        (0, class_transformer_1.Type)(function () { return ConnectorUnifiedApisOauthScopes; }),
        __metadata("design:type", Array)
    ], ConnectorUnifiedApis.prototype, "oauthScopes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connectorevent_1.ConnectorEvent }),
        (0, class_transformer_1.Expose)({ name: "supported_events" }),
        (0, class_transformer_1.Type)(function () { return connectorevent_1.ConnectorEvent; }),
        __metadata("design:type", Array)
    ], ConnectorUnifiedApis.prototype, "supportedEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: linkedconnectorresource_1.LinkedConnectorResource }),
        (0, class_transformer_1.Expose)({ name: "supported_resources" }),
        (0, class_transformer_1.Type)(function () { return linkedconnectorresource_1.LinkedConnectorResource; }),
        __metadata("design:type", Array)
    ], ConnectorUnifiedApis.prototype, "supportedResources", void 0);
    return ConnectorUnifiedApis;
}(utils_1.SpeakeasyBase));
exports.ConnectorUnifiedApis = ConnectorUnifiedApis;
var Connector = /** @class */ (function (_super) {
    __extends(Connector, _super);
    function Connector() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auth_only" }),
        __metadata("design:type", Boolean)
    ], Connector.prototype, "authOnly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auth_type" }),
        __metadata("design:type", String)
    ], Connector.prototype, "authType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blind_mapped" }),
        __metadata("design:type", Boolean)
    ], Connector.prototype, "blindMapped", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configurable_resources" }),
        __metadata("design:type", Array)
    ], Connector.prototype, "configurableResources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_scopes" }),
        __metadata("design:type", Boolean)
    ], Connector.prototype, "customScopes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Connector.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connectordoc_1.ConnectorDoc }),
        (0, class_transformer_1.Expose)({ name: "docs" }),
        (0, class_transformer_1.Type)(function () { return connectordoc_1.ConnectorDoc; }),
        __metadata("design:type", Array)
    ], Connector.prototype, "docs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "free_trial_available" }),
        __metadata("design:type", Boolean)
    ], Connector.prototype, "freeTrialAvailable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_sandbox_credentials" }),
        __metadata("design:type", Boolean)
    ], Connector.prototype, "hasSandboxCredentials", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "icon_url" }),
        __metadata("design:type", String)
    ], Connector.prototype, "iconUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Connector.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "logo_url" }),
        __metadata("design:type", String)
    ], Connector.prototype, "logoUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Connector.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "oauth_credentials_source" }),
        __metadata("design:type", String)
    ], Connector.prototype, "oauthCredentialsSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "oauth_grant_type" }),
        __metadata("design:type", String)
    ], Connector.prototype, "oauthGrantType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ConnectorOauthScopes }),
        (0, class_transformer_1.Expose)({ name: "oauth_scopes" }),
        (0, class_transformer_1.Type)(function () { return ConnectorOauthScopes; }),
        __metadata("design:type", Array)
    ], Connector.prototype, "oauthScopes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "service_id" }),
        __metadata("design:type", String)
    ], Connector.prototype, "serviceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connectorsetting_1.ConnectorSetting }),
        (0, class_transformer_1.Expose)({ name: "settings" }),
        (0, class_transformer_1.Type)(function () { return connectorsetting_1.ConnectorSetting; }),
        __metadata("design:type", Array)
    ], Connector.prototype, "settings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signup_url" }),
        __metadata("design:type", String)
    ], Connector.prototype, "signupUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Connector.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connectorevent_1.ConnectorEvent }),
        (0, class_transformer_1.Expose)({ name: "supported_events" }),
        (0, class_transformer_1.Type)(function () { return connectorevent_1.ConnectorEvent; }),
        __metadata("design:type", Array)
    ], Connector.prototype, "supportedEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: linkedconnectorresource_1.LinkedConnectorResource }),
        (0, class_transformer_1.Expose)({ name: "supported_resources" }),
        (0, class_transformer_1.Type)(function () { return linkedconnectorresource_1.LinkedConnectorResource; }),
        __metadata("design:type", Array)
    ], Connector.prototype, "supportedResources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tls_support" }),
        (0, class_transformer_1.Type)(function () { return ConnectorTlsSupport; }),
        __metadata("design:type", ConnectorTlsSupport)
    ], Connector.prototype, "tlsSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ConnectorUnifiedApis }),
        (0, class_transformer_1.Expose)({ name: "unified_apis" }),
        (0, class_transformer_1.Type)(function () { return ConnectorUnifiedApis; }),
        __metadata("design:type", Array)
    ], Connector.prototype, "unifiedApis", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "webhook_support" }),
        (0, class_transformer_1.Type)(function () { return webhooksupport_1.WebhookSupport; }),
        __metadata("design:type", webhooksupport_1.WebhookSupport)
    ], Connector.prototype, "webhookSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "website_url" }),
        __metadata("design:type", String)
    ], Connector.prototype, "websiteUrl", void 0);
    return Connector;
}(utils_1.SpeakeasyBase));
exports.Connector = Connector;
