// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListTaskServerList = []string{
	"https://taskrouter.twilio.com",
}

type ListTaskSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListTaskRequest struct {
	// The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`.
	AssignmentStatus []string `queryParam:"style=form,explode=true,name=AssignmentStatus"`
	// The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter.
	EvaluateTaskAttributes *string `queryParam:"style=form,explode=true,name=EvaluateTaskAttributes"`
	// Whether to read Tasks with addons. If `true`, returns only Tasks with addons. If `false`, returns only Tasks without addons.
	HasAddons *bool `queryParam:"style=form,explode=true,name=HasAddons"`
	// How to order the returned Task resources. y default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `Priority` or `DateCreated` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Multiple sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order.
	Ordering *string `queryParam:"style=form,explode=true,name=Ordering"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority.
	Priority *int64 `queryParam:"style=form,explode=true,name=Priority"`
	// The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name.
	TaskQueueName *string `queryParam:"style=form,explode=true,name=TaskQueueName"`
	// The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID.
	TaskQueueSid *string `queryParam:"style=form,explode=true,name=TaskQueueSid"`
	// The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name.
	WorkflowName *string `queryParam:"style=form,explode=true,name=WorkflowName"`
	// The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID.
	WorkflowSid *string `queryParam:"style=form,explode=true,name=WorkflowSid"`
	// The SID of the Workspace with the Tasks to read.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type ListTaskListTaskResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListTaskListTaskResponse - OK
type ListTaskListTaskResponse struct {
	Meta  *ListTaskListTaskResponseMeta      `json:"meta,omitempty"`
	Tasks []shared.TaskrouterV1WorkspaceTask `json:"tasks,omitempty"`
}

type ListTaskResponse struct {
	ContentType string
	// OK
	ListTaskResponse *ListTaskListTaskResponse
	StatusCode       int
	RawResponse      *http.Response
}
