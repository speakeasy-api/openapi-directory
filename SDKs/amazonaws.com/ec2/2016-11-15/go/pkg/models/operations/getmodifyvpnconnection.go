// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyVpnConnectionActionEnum
type GETModifyVpnConnectionActionEnum string

const (
	GETModifyVpnConnectionActionEnumModifyVpnConnection GETModifyVpnConnectionActionEnum = "ModifyVpnConnection"
)

func (e *GETModifyVpnConnectionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyVpnConnection":
		*e = GETModifyVpnConnectionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpnConnectionActionEnum: %s", s)
	}
}

// GETModifyVpnConnectionVersionEnum
type GETModifyVpnConnectionVersionEnum string

const (
	GETModifyVpnConnectionVersionEnumTwoThousandAndSixteen1115 GETModifyVpnConnectionVersionEnum = "2016-11-15"
)

func (e *GETModifyVpnConnectionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETModifyVpnConnectionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpnConnectionVersionEnum: %s", s)
	}
}

type GETModifyVpnConnectionQueryParams struct {
	Action GETModifyVpnConnectionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the customer gateway at your end of the VPN connection.
	CustomerGatewayID *string `queryParam:"style=form,explode=true,name=CustomerGatewayId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the transit gateway.
	TransitGatewayID *string                           `queryParam:"style=form,explode=true,name=TransitGatewayId"`
	Version          GETModifyVpnConnectionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the VPN connection.
	VpnConnectionID string `queryParam:"style=form,explode=true,name=VpnConnectionId"`
	// The ID of the virtual private gateway at the Amazon Web Services side of the VPN connection.
	VpnGatewayID *string `queryParam:"style=form,explode=true,name=VpnGatewayId"`
}

type GETModifyVpnConnectionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyVpnConnectionRequest struct {
	QueryParams GETModifyVpnConnectionQueryParams
	Headers     GETModifyVpnConnectionHeaders
}

type GETModifyVpnConnectionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
