/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateApplication200ApplicationJSON - Success
 */
public class UpdateApplication200ApplicationJSON {
    /**
     * Your application can use multiple products. This contains the configuration for each product. This replaces the application `type` from version 1 of the Application API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capabilities")
    public org.openapis.openapi.models.shared.Capabilities capabilities;

    public UpdateApplication200ApplicationJSON withCapabilities(org.openapis.openapi.models.shared.Capabilities capabilities) {
        this.capabilities = capabilities;
        return this;
    }
    
    /**
     * The application's ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public UpdateApplication200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keys")
    public UpdateApplication200ApplicationJSONKeys keys;

    public UpdateApplication200ApplicationJSON withKeys(UpdateApplication200ApplicationJSONKeys keys) {
        this.keys = keys;
        return this;
    }
    
    /**
     * Friendly identifier for your application. This is not unique
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UpdateApplication200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Application privacy config
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privacy")
    public UpdateApplication200ApplicationJSONPrivacy privacy;

    public UpdateApplication200ApplicationJSON withPrivacy(UpdateApplication200ApplicationJSONPrivacy privacy) {
        this.privacy = privacy;
        return this;
    }
    
    public UpdateApplication200ApplicationJSON(){}
}
