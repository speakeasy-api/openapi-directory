// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateFleetActionEnum
type POSTCreateFleetActionEnum string

const (
	POSTCreateFleetActionEnumCreateFleet POSTCreateFleetActionEnum = "CreateFleet"
)

func (e POSTCreateFleetActionEnum) ToPointer() *POSTCreateFleetActionEnum {
	return &e
}

func (e *POSTCreateFleetActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateFleet":
		*e = POSTCreateFleetActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateFleetActionEnum: %v", v)
	}
}

// POSTCreateFleetVersionEnum
type POSTCreateFleetVersionEnum string

const (
	POSTCreateFleetVersionEnumTwoThousandAndSixteen1115 POSTCreateFleetVersionEnum = "2016-11-15"
)

func (e POSTCreateFleetVersionEnum) ToPointer() *POSTCreateFleetVersionEnum {
	return &e
}

func (e *POSTCreateFleetVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTCreateFleetVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateFleetVersionEnum: %v", v)
	}
}

type POSTCreateFleetRequest struct {
	Action            POSTCreateFleetActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                     `request:"mediaType=text/xml"`
	Version           POSTCreateFleetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateFleetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
