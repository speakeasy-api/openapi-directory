/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Sets the sort order of the results.
 *
 * @remarks
 *
 * Results ordered by-title are in ascending alphabetical order. Results ordered by one of the date parameters are in reverse chronological order.
 *
 * If you do not specify a sort order, the results will be ordered by publication-date.
 *
 */
export enum GetReviewsResourceTypeJsonOrderEnum {
  ByTitle = "by-title",
  ByPublicationDate = "by-publication-date",
  ByOpeningDate = "by-opening-date",
}

/**
 * Specify all to retrieve all reviews, including NYT Critics' Picks.
 *
 * @remarks
 *
 * Specify picks to get NYT Critics' Picks currently in theaters.
 *
 *
 */
export enum GetReviewsResourceTypeJsonResourceTypeEnum {
  All = "all",
  Picks = "picks",
}

export class GetReviewsResourceTypeJsonRequest extends SpeakeasyBase {
  /**
   * Positive integer, multiple of 20
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Sets the sort order of the results.
   *
   * @remarks
   *
   * Results ordered by-title are in ascending alphabetical order. Results ordered by one of the date parameters are in reverse chronological order.
   *
   * If you do not specify a sort order, the results will be ordered by publication-date.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: GetReviewsResourceTypeJsonOrderEnum;

  /**
   * Specify all to retrieve all reviews, including NYT Critics' Picks.
   *
   * @remarks
   *
   * Specify picks to get NYT Critics' Picks currently in theaters.
   *
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=resource-type",
  })
  resourceType: GetReviewsResourceTypeJsonResourceTypeEnum;
}

/**
 * An array of Movies
 */
export class GetReviewsResourceTypeJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "num_results" })
  numResults?: number;

  @SpeakeasyMetadata({ elemType: shared.Movie })
  @Expose({ name: "results" })
  @Type(() => shared.Movie)
  results?: shared.Movie[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GetReviewsResourceTypeJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of Movies
   */
  @SpeakeasyMetadata()
  getReviewsResourceTypeJSON200ApplicationJSONObject?: GetReviewsResourceTypeJson200ApplicationJSON;
}
