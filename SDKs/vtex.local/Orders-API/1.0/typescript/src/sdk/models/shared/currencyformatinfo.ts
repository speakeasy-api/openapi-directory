/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Object with currency format details.
 */
export class CurrencyFormatInfo extends SpeakeasyBase {
  /**
   * Quantity of currency decimal digits.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrencyDecimalDigits" })
  currencyDecimalDigits: number;

  /**
   * Defines what currency decimal separator will be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrencyDecimalSeparator" })
  currencyDecimalSeparator: string;

  /**
   * Defines what currency group separator will be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrencyGroupSeparator" })
  currencyGroupSeparator: string;

  /**
   * Defines how many characters will be grouped.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrencyGroupSize" })
  currencyGroupSize: number;

  /**
   * Defines if all prices will be initiated with the currency symbol (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartsWithCurrencySymbol" })
  startsWithCurrencySymbol: boolean;
}
