"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VolumeseriesinfoVolumeSeriesIssue:
    
    issue_display_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issueDisplayNumber'), 'exclude': lambda f: f is None }})  
    issue_order_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issueOrderNumber'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VolumeseriesinfoVolumeSeries:
    
    issue: Optional[list[VolumeseriesinfoVolumeSeriesIssue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issue'), 'exclude': lambda f: f is None }})
    r"""List of issues. Applicable only for Collection Edition and Omnibus."""  
    order_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderNumber'), 'exclude': lambda f: f is None }})
    r"""The book order number in the series."""  
    series_book_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seriesBookType'), 'exclude': lambda f: f is None }})
    r"""The book type in the context of series. Examples - Single Issue, Collection Edition, etc."""  
    series_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seriesId'), 'exclude': lambda f: f is None }})
    r"""The series id."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Volumeseriesinfo:
    
    book_display_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bookDisplayNumber'), 'exclude': lambda f: f is None }})
    r"""The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Resource type."""  
    short_series_book_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shortSeriesBookTitle'), 'exclude': lambda f: f is None }})
    r"""Short book title in the context of the series."""  
    volume_series: Optional[list[VolumeseriesinfoVolumeSeries]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumeSeries'), 'exclude': lambda f: f is None }})  
    