// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CityStateNameFacilityCodeEnum - The type of locale identified in the city/state name. The facility may be a USPS facility, such as a post office, station, or branch, or it may be a non-postal place name. City/state name facility codes include the following:
// - B = Branch
// - C = Community post office (CPO)
// - N = Non-postal community name, former USPS facility, or place name
// - P = Post Office
// - S = Station
// - U = Urbanization
type CityStateNameFacilityCodeEnum string

const (
	CityStateNameFacilityCodeEnumB       CityStateNameFacilityCodeEnum = "B"
	CityStateNameFacilityCodeEnumC       CityStateNameFacilityCodeEnum = "C"
	CityStateNameFacilityCodeEnumN       CityStateNameFacilityCodeEnum = "N"
	CityStateNameFacilityCodeEnumP       CityStateNameFacilityCodeEnum = "P"
	CityStateNameFacilityCodeEnumS       CityStateNameFacilityCodeEnum = "S"
	CityStateNameFacilityCodeEnumU       CityStateNameFacilityCodeEnum = "U"
	CityStateNameFacilityCodeEnumY       CityStateNameFacilityCodeEnum = "Y"
	CityStateNameFacilityCodeEnumUnknown CityStateNameFacilityCodeEnum = ""
)

func (e *CityStateNameFacilityCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "B":
		fallthrough
	case "C":
		fallthrough
	case "N":
		fallthrough
	case "P":
		fallthrough
	case "S":
		fallthrough
	case "U":
		fallthrough
	case "Y":
		fallthrough
	case "":
		*e = CityStateNameFacilityCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CityStateNameFacilityCodeEnum: %s", s)
	}
}
