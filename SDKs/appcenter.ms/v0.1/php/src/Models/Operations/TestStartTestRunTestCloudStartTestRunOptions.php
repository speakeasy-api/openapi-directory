<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * TestStartTestRunTestCloudStartTestRunOptions - Options required to start the test run
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class TestStartTestRunTestCloudStartTestRunOptions
{
    /**
     * Device selection string.
     * 
     * @var string $deviceSelection
     */
	#[\JMS\Serializer\Annotation\SerializedName('device_selection')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceSelection;
    
    /**
     * Language that should be used to run tests.
     * 
     * @var ?string $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $language = null;
    
    /**
     * Locale that should be used to run tests.
     * 
     * @var ?string $locale
     */
	#[\JMS\Serializer\Annotation\SerializedName('locale')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locale = null;
    
    /**
     * Test framework used by tests.
     * 
     * @var string $testFramework
     */
	#[\JMS\Serializer\Annotation\SerializedName('test_framework')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $testFramework;
    
    /**
     * A JSON dictionary with additional test parameters
     * 
     * @var ?array<string, mixed> $testParameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('test_parameters')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $testParameters = null;
    
    /**
     * Name of the test series.
     * 
     * @var ?string $testSeries
     */
	#[\JMS\Serializer\Annotation\SerializedName('test_series')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $testSeries = null;
    
	public function __construct()
	{
		$this->deviceSelection = "";
		$this->language = null;
		$this->locale = null;
		$this->testFramework = "";
		$this->testParameters = null;
		$this->testSeries = null;
	}
}
