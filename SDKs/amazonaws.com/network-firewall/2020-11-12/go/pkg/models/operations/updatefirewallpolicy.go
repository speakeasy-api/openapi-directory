// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateFirewallPolicyXAmzTargetEnum
type UpdateFirewallPolicyXAmzTargetEnum string

const (
	UpdateFirewallPolicyXAmzTargetEnumNetworkFirewall20201112UpdateFirewallPolicy UpdateFirewallPolicyXAmzTargetEnum = "NetworkFirewall_20201112.UpdateFirewallPolicy"
)

func (e UpdateFirewallPolicyXAmzTargetEnum) ToPointer() *UpdateFirewallPolicyXAmzTargetEnum {
	return &e
}

func (e *UpdateFirewallPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NetworkFirewall_20201112.UpdateFirewallPolicy":
		*e = UpdateFirewallPolicyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFirewallPolicyXAmzTargetEnum: %v", v)
	}
}

type UpdateFirewallPolicyRequest struct {
	UpdateFirewallPolicyRequest shared.UpdateFirewallPolicyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  UpdateFirewallPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateFirewallPolicyResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidTokenException
	InvalidTokenException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateFirewallPolicyResponse *shared.UpdateFirewallPolicyResponse
}
