// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DocumentNotificationStatusEnum string

const (
	DocumentNotificationStatusEnumClosed     DocumentNotificationStatusEnum = "closed"
	DocumentNotificationStatusEnumDownloaded DocumentNotificationStatusEnum = "downloaded"
	DocumentNotificationStatusEnumFailed     DocumentNotificationStatusEnum = "failed"
	DocumentNotificationStatusEnumNone       DocumentNotificationStatusEnum = "none"
	DocumentNotificationStatusEnumOpened     DocumentNotificationStatusEnum = "opened"
	DocumentNotificationStatusEnumReaded     DocumentNotificationStatusEnum = "readed"
)

func (e *DocumentNotificationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "closed":
		fallthrough
	case "downloaded":
		fallthrough
	case "failed":
		fallthrough
	case "none":
		fallthrough
	case "opened":
		fallthrough
	case "readed":
		*e = DocumentNotificationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentNotificationStatusEnum: %s", s)
	}
}
