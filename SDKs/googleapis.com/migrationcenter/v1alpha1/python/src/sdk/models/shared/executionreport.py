"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import importerror as shared_importerror
from ..shared import validationreport as shared_validationreport
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExecutionReport:
    r"""A resource that reports result of the import job execution."""
    
    execution_errors: Optional[shared_validationreport.ValidationReport] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionErrors'), 'exclude': lambda f: f is None }})
    r"""A resource that aggregates errors across import job files."""  
    frames_reported: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('framesReported'), 'exclude': lambda f: f is None }})
    r"""Total number of asset frames reported for the import job."""  
    job_errors: Optional[list[shared_importerror.ImportErrorT]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobErrors'), 'exclude': lambda f: f is None }})
    r"""List of job-level errors. Deprecated, use the job errors under execution_errors instead."""  
    total_rows_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalRowsCount'), 'exclude': lambda f: f is None }})
    r"""Total number of rows in the import job."""  
    