/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { UpdateTeamMemberRequest } from "./updateteammemberrequest";
import { Expose, Transform } from "class-transformer";

/**
 * Represents a bulk update request for `TeamMember` objects.
 */
export class BulkUpdateTeamMembersRequest extends SpeakeasyBase {
  /**
   * The data used to update the `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`.
   */
  @SpeakeasyMetadata({ elemType: UpdateTeamMemberRequest })
  @Expose({ name: "team_members" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, UpdateTeamMemberRequest> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], UpdateTeamMemberRequest);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  teamMembers: Record<string, UpdateTeamMemberRequest>;
}
