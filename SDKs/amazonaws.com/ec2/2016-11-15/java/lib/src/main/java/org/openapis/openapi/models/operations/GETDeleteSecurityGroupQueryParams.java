/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDeleteSecurityGroupQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDeleteSecurityGroupActionEnum action;
    public GETDeleteSecurityGroupQueryParams withAction(GETDeleteSecurityGroupActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETDeleteSecurityGroupQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The ID of the security group. Required for a nondefault VPC.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=GroupId")
    public String groupId;
    public GETDeleteSecurityGroupQueryParams withGroupId(String groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * [EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, you must specify the security group ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=GroupName")
    public String groupName;
    public GETDeleteSecurityGroupQueryParams withGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDeleteSecurityGroupVersionEnum version;
    public GETDeleteSecurityGroupQueryParams withVersion(GETDeleteSecurityGroupVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
