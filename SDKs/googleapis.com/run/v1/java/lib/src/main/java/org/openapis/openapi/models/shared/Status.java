/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Status - Status is a return value for calls that don't return other objects.
 */
public class Status {
    /**
     * Suggested HTTP return code for this status, 0 if not set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public Integer code;
    public Status withCode(Integer code) {
        this.code = code;
        return this;
    }
    
    /**
     * StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public StatusDetails details;
    public Status withDetails(StatusDetails details) {
        this.details = details;
        return this;
    }
    
    /**
     * A human-readable description of the status of this operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public Status withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Metadata for synthetic resources like List. In Cloud Run, all List Resources Responses will have a ListMeta instead of ObjectMeta.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public ListMeta metadata;
    public Status withMetadata(ListMeta metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;
    public Status withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public Status withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
