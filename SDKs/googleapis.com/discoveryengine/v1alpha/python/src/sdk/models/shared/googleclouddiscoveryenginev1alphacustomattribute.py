"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDiscoveryengineV1alphaCustomAttribute:
    r"""A custom attribute that is not explicitly modeled in a resource, e.g. UserEvent."""
    
    numbers: Optional[list[float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numbers'), 'exclude': lambda f: f is None }})
    r"""The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is \\"lengths_cm\\". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned."""  
    text: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The textual values of this custom attribute. For example, `[\\"yellow\\", \\"green\\"]` when the key is \\"color\\". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned."""  
    