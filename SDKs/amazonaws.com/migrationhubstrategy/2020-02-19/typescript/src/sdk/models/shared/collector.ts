/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CollectorHealthEnum } from "./collectorhealthenum";
import { ConfigurationSummary } from "./configurationsummary";
import { Expose, Type } from "class-transformer";

/**
 *  Process data collector that runs in the environment that you specify.
 */
export class Collector extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collectorHealth" })
  collectorHealth?: CollectorHealthEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "collectorId" })
  collectorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collectorVersion" })
  collectorVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "configurationSummary" })
  @Type(() => ConfigurationSummary)
  configurationSummary?: ConfigurationSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "hostName" })
  hostName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastActivityTimeStamp" })
  lastActivityTimeStamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredTimeStamp" })
  registeredTimeStamp?: string;
}
