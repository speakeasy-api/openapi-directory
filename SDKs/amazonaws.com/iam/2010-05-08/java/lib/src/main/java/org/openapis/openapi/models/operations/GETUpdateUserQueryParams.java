/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETUpdateUserQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETUpdateUserActionEnum action;
    public GETUpdateUserQueryParams withAction(GETUpdateUserActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;New path for the IAM user. Include this parameter only if you're changing the user's path.&lt;/p&gt; &lt;p&gt;This parameter allows (through its &lt;a href="http://wikipedia.org/wiki/regex"&gt;regex pattern&lt;/a&gt;) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (&lt;code&gt;\ u0021&lt;/code&gt;) through the DEL character (&lt;code&gt;\ u007F&lt;/code&gt;), including most punctuation characters, digits, and upper and lowercased letters.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NewPath")
    public String newPath;
    public GETUpdateUserQueryParams withNewPath(String newPath) {
        this.newPath = newPath;
        return this;
    }
    
    /**
     * &lt;p&gt;New name for the user. Include this parameter only if you're changing the user's name.&lt;/p&gt; &lt;p&gt;IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both "MyResource" and "myresource".&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NewUserName")
    public String newUserName;
    public GETUpdateUserQueryParams withNewUserName(String newUserName) {
        this.newUserName = newUserName;
        return this;
    }
    
    /**
     * &lt;p&gt;Name of the user to update. If you're changing the name of the user, this is the original user name.&lt;/p&gt; &lt;p&gt;This parameter allows (through its &lt;a href="http://wikipedia.org/wiki/regex"&gt;regex pattern&lt;/a&gt;) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=UserName")
    public String userName;
    public GETUpdateUserQueryParams withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETUpdateUserVersionEnum version;
    public GETUpdateUserQueryParams withVersion(GETUpdateUserVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
