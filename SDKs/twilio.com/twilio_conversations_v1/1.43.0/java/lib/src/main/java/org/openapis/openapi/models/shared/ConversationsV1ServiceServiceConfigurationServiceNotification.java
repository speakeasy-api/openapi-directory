/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConversationsV1ServiceServiceConfigurationServiceNotification - OK
 */
public class ConversationsV1ServiceServiceConfigurationServiceNotification {
    /**
     * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The Push Notification configuration for being added to a Conversation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("added_to_conversation")
    public Object addedToConversation;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withAddedToConversation(Object addedToConversation) {
        this.addedToConversation = addedToConversation;
        return this;
    }
    
    /**
     * The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chat_service_sid")
    public String chatServiceSid;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withChatServiceSid(String chatServiceSid) {
        this.chatServiceSid = chatServiceSid;
        return this;
    }
    
    /**
     * Weather the notification logging is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("log_enabled")
    public Boolean logEnabled;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withLogEnabled(Boolean logEnabled) {
        this.logEnabled = logEnabled;
        return this;
    }
    
    /**
     * The Push Notification configuration for New Messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_message")
    public Object newMessage;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withNewMessage(Object newMessage) {
        this.newMessage = newMessage;
        return this;
    }
    
    /**
     * The Push Notification configuration for being removed from a Conversation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removed_from_conversation")
    public Object removedFromConversation;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withRemovedFromConversation(Object removedFromConversation) {
        this.removedFromConversation = removedFromConversation;
        return this;
    }
    
    /**
     * An absolute API resource URL for this configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public ConversationsV1ServiceServiceConfigurationServiceNotification withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public ConversationsV1ServiceServiceConfigurationServiceNotification(){}
}
