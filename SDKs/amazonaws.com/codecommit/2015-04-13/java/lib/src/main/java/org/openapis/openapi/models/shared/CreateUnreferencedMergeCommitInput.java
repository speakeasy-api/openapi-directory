/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateUnreferencedMergeCommitInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorName")
    public String authorName;

    public CreateUnreferencedMergeCommitInput withAuthorName(String authorName) {
        this.authorName = authorName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commitMessage")
    public String commitMessage;

    public CreateUnreferencedMergeCommitInput withCommitMessage(String commitMessage) {
        this.commitMessage = commitMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conflictDetailLevel")
    public ConflictDetailLevelTypeEnumEnum conflictDetailLevel;

    public CreateUnreferencedMergeCommitInput withConflictDetailLevel(ConflictDetailLevelTypeEnumEnum conflictDetailLevel) {
        this.conflictDetailLevel = conflictDetailLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conflictResolution")
    public ConflictResolution conflictResolution;

    public CreateUnreferencedMergeCommitInput withConflictResolution(ConflictResolution conflictResolution) {
        this.conflictResolution = conflictResolution;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conflictResolutionStrategy")
    public ConflictResolutionStrategyTypeEnumEnum conflictResolutionStrategy;

    public CreateUnreferencedMergeCommitInput withConflictResolutionStrategy(ConflictResolutionStrategyTypeEnumEnum conflictResolutionStrategy) {
        this.conflictResolutionStrategy = conflictResolutionStrategy;
        return this;
    }
    
    @JsonProperty("destinationCommitSpecifier")
    public String destinationCommitSpecifier;

    public CreateUnreferencedMergeCommitInput withDestinationCommitSpecifier(String destinationCommitSpecifier) {
        this.destinationCommitSpecifier = destinationCommitSpecifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public CreateUnreferencedMergeCommitInput withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keepEmptyFolders")
    public Boolean keepEmptyFolders;

    public CreateUnreferencedMergeCommitInput withKeepEmptyFolders(Boolean keepEmptyFolders) {
        this.keepEmptyFolders = keepEmptyFolders;
        return this;
    }
    
    @JsonProperty("mergeOption")
    public MergeOptionTypeEnumEnum mergeOption;

    public CreateUnreferencedMergeCommitInput withMergeOption(MergeOptionTypeEnumEnum mergeOption) {
        this.mergeOption = mergeOption;
        return this;
    }
    
    @JsonProperty("repositoryName")
    public String repositoryName;

    public CreateUnreferencedMergeCommitInput withRepositoryName(String repositoryName) {
        this.repositoryName = repositoryName;
        return this;
    }
    
    @JsonProperty("sourceCommitSpecifier")
    public String sourceCommitSpecifier;

    public CreateUnreferencedMergeCommitInput withSourceCommitSpecifier(String sourceCommitSpecifier) {
        this.sourceCommitSpecifier = sourceCommitSpecifier;
        return this;
    }
    
    public CreateUnreferencedMergeCommitInput(@JsonProperty("destinationCommitSpecifier") String destinationCommitSpecifier, @JsonProperty("mergeOption") MergeOptionTypeEnumEnum mergeOption, @JsonProperty("repositoryName") String repositoryName, @JsonProperty("sourceCommitSpecifier") String sourceCommitSpecifier) {
        this.destinationCommitSpecifier = destinationCommitSpecifier;
        this.mergeOption = mergeOption;
        this.repositoryName = repositoryName;
        this.sourceCommitSpecifier = sourceCommitSpecifier;
  }
}
