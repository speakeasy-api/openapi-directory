/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetricAttribution } from "./metricattribution";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents user interaction event information sent using the <code>PutEvents</code> API.
 */
export class Event extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "eventId" })
  eventId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventValue" })
  eventValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "impression" })
  impression?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metricAttribution" })
  @Type(() => MetricAttribution)
  metricAttribution?: MetricAttribution;

  /**
   * <p>A string map of event-specific data that you might choose to record. For example, if a user rates a movie on your site, other than movie ID (<code>itemId</code>) and rating (<code>eventValue</code>) , you might also send the number of movie ratings made by the user.</p> <p>Each item in the map consists of a key-value pair. For example,</p> <p> <code>{"numberOfRatings": "12"}</code> </p> <p>The keys use camel case names that match the fields in the Interactions schema. In the above example, the <code>numberOfRatings</code> would match the 'NUMBER_OF_RATINGS' field defined in the Interactions schema.</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendationId" })
  recommendationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sentAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  sentAt: Date;
}
