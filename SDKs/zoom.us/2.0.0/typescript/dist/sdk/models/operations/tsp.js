"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TspResponse = exports.Tsp200ApplicationJSON = exports.Tsp200ApplicationJSONTspBridgeEnum = exports.Tsp200ApplicationJSONDialInNumbers = exports.Tsp200ApplicationXML = exports.Tsp200ApplicationXMLTspBridgeEnum = exports.Tsp200ApplicationXMLDialInNumbers = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var Tsp200ApplicationXMLDialInNumbers = /** @class */ (function (_super) {
    __extends(Tsp200ApplicationXMLDialInNumbers, _super);
    function Tsp200ApplicationXMLDialInNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Tsp200ApplicationXMLDialInNumbers.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Tsp200ApplicationXMLDialInNumbers.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Tsp200ApplicationXMLDialInNumbers.prototype, "type", void 0);
    return Tsp200ApplicationXMLDialInNumbers;
}(utils_1.SpeakeasyBase));
exports.Tsp200ApplicationXMLDialInNumbers = Tsp200ApplicationXMLDialInNumbers;
/**
 * Telephony bridge zone
 */
var Tsp200ApplicationXMLTspBridgeEnum;
(function (Tsp200ApplicationXMLTspBridgeEnum) {
    Tsp200ApplicationXMLTspBridgeEnum["UsTspTb"] = "US_TSP_TB";
    Tsp200ApplicationXMLTspBridgeEnum["EuTspTb"] = "EU_TSP_TB";
})(Tsp200ApplicationXMLTspBridgeEnum = exports.Tsp200ApplicationXMLTspBridgeEnum || (exports.Tsp200ApplicationXMLTspBridgeEnum = {}));
/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * TSP account detail returned successfully.
 */
var Tsp200ApplicationXML = /** @class */ (function (_super) {
    __extends(Tsp200ApplicationXML, _super);
    function Tsp200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationXML.prototype, "dialInNumberUnrestricted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Tsp200ApplicationXMLDialInNumbers }),
        __metadata("design:type", Array)
    ], Tsp200ApplicationXML.prototype, "dialInNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationXML.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationXML.prototype, "masterAccountSettingExtended", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationXML.prototype, "modifyCredentialForbidden", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Tsp200ApplicationXML.prototype, "tspBridge", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationXML.prototype, "tspEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Tsp200ApplicationXML.prototype, "tspProvider", void 0);
    return Tsp200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.Tsp200ApplicationXML = Tsp200ApplicationXML;
var Tsp200ApplicationJSONDialInNumbers = /** @class */ (function (_super) {
    __extends(Tsp200ApplicationJSONDialInNumbers, _super);
    function Tsp200ApplicationJSONDialInNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], Tsp200ApplicationJSONDialInNumbers.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], Tsp200ApplicationJSONDialInNumbers.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Tsp200ApplicationJSONDialInNumbers.prototype, "type", void 0);
    return Tsp200ApplicationJSONDialInNumbers;
}(utils_1.SpeakeasyBase));
exports.Tsp200ApplicationJSONDialInNumbers = Tsp200ApplicationJSONDialInNumbers;
/**
 * Telephony bridge zone
 */
var Tsp200ApplicationJSONTspBridgeEnum;
(function (Tsp200ApplicationJSONTspBridgeEnum) {
    Tsp200ApplicationJSONTspBridgeEnum["UsTspTb"] = "US_TSP_TB";
    Tsp200ApplicationJSONTspBridgeEnum["EuTspTb"] = "EU_TSP_TB";
})(Tsp200ApplicationJSONTspBridgeEnum = exports.Tsp200ApplicationJSONTspBridgeEnum || (exports.Tsp200ApplicationJSONTspBridgeEnum = {}));
/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * TSP account detail returned successfully.
 */
var Tsp200ApplicationJSON = /** @class */ (function (_super) {
    __extends(Tsp200ApplicationJSON, _super);
    function Tsp200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dial_in_number_unrestricted" }),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationJSON.prototype, "dialInNumberUnrestricted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Tsp200ApplicationJSONDialInNumbers }),
        (0, class_transformer_1.Expose)({ name: "dial_in_numbers" }),
        (0, class_transformer_1.Type)(function () { return Tsp200ApplicationJSONDialInNumbers; }),
        __metadata("design:type", Array)
    ], Tsp200ApplicationJSON.prototype, "dialInNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationJSON.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "master_account_setting_extended" }),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationJSON.prototype, "masterAccountSettingExtended", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "modify_credential_forbidden" }),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationJSON.prototype, "modifyCredentialForbidden", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tsp_bridge" }),
        __metadata("design:type", String)
    ], Tsp200ApplicationJSON.prototype, "tspBridge", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tsp_enabled" }),
        __metadata("design:type", Boolean)
    ], Tsp200ApplicationJSON.prototype, "tspEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tsp_provider" }),
        __metadata("design:type", String)
    ], Tsp200ApplicationJSON.prototype, "tspProvider", void 0);
    return Tsp200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Tsp200ApplicationJSON = Tsp200ApplicationJSON;
var TspResponse = /** @class */ (function (_super) {
    __extends(TspResponse, _super);
    function TspResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], TspResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], TspResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], TspResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], TspResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Tsp200ApplicationJSON)
    ], TspResponse.prototype, "tsp200ApplicationJSONObject", void 0);
    return TspResponse;
}(utils_1.SpeakeasyBase));
exports.TspResponse = TspResponse;
