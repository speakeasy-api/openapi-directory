// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleCloudFunctionRulePatchRuleTypeEnum string

const (
	GoogleCloudFunctionRulePatchRuleTypeEnumHTTPGoogleCloudFunction GoogleCloudFunctionRulePatchRuleTypeEnum = "http/google-cloud-function"
)

func (e GoogleCloudFunctionRulePatchRuleTypeEnum) ToPointer() *GoogleCloudFunctionRulePatchRuleTypeEnum {
	return &e
}

func (e *GoogleCloudFunctionRulePatchRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "http/google-cloud-function":
		*e = GoogleCloudFunctionRulePatchRuleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudFunctionRulePatchRuleTypeEnum: %v", v)
	}
}

type GoogleCloudFunctionRulePatchTargetHeaders struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

type GoogleCloudFunctionRulePatchTarget struct {
	Enveloped    *bool                                       `json:"enveloped,omitempty"`
	Format       *string                                     `json:"format,omitempty"`
	FunctionName *string                                     `json:"functionName,omitempty"`
	Headers      []GoogleCloudFunctionRulePatchTargetHeaders `json:"headers,omitempty"`
	ProjectID    *string                                     `json:"projectId,omitempty"`
	Region       *string                                     `json:"region,omitempty"`
	SigningKeyID *string                                     `json:"signingKeyId,omitempty"`
}

type GoogleCloudFunctionRulePatch struct {
	RequestMode *string                                  `json:"requestMode,omitempty"`
	RuleType    GoogleCloudFunctionRulePatchRuleTypeEnum `json:"ruleType"`
	Source      *RuleSourcePatch                         `json:"source,omitempty"`
	Status      *string                                  `json:"status,omitempty"`
	Target      *GoogleCloudFunctionRulePatchTarget      `json:"target,omitempty"`
}
