/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Movie - Object defining the movie to be rendered
 */
public class Movie {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cache")
    public Boolean cache;
    public Movie withCache(Boolean cache) {
        this.cache = cache;
        return this;
    }
    
    /**
     * Used for adding your comments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public Movie withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * Draft movies include a watermark. Check your plan how many draft and final movies you have
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("draft")
    public MovieDraftEnum draft;
    public Movie withDraft(MovieDraftEnum draft) {
        this.draft = draft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elements")
    public Object[] elements;
    public Movie withElements(Object[] elements) {
        this.elements = elements;
        return this;
    }
    
    /**
     * Frames per second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fps")
    public Long fps;
    public Movie withFps(Long fps) {
        this.fps = fps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Long height;
    public Movie withHeight(Long height) {
        this.height = height;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quality")
    public MovieQualityEnum quality;
    public Movie withQuality(MovieQualityEnum quality) {
        this.quality = quality;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolution")
    public MovieResolutionEnum resolution;
    public Movie withResolution(MovieResolutionEnum resolution) {
        this.resolution = resolution;
        return this;
    }
    
    @JsonProperty("scenes")
    public Scene[] scenes;
    public Movie withScenes(Scene[] scenes) {
        this.scenes = scenes;
        return this;
    }
    
    /**
     * Movie advanced settings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public java.util.Map<String, Object> settings;
    public Movie withSettings(java.util.Map<String, Object> settings) {
        this.settings = settings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Long width;
    public Movie withWidth(Long width) {
        this.width = width;
        return this;
    }
    
}
