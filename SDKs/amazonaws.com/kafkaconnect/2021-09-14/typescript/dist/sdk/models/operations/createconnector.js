"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateConnectorResponse = exports.CreateConnectorRequest = exports.CreateConnectorRequestBody = exports.CreateConnectorRequestBodyWorkerConfiguration = exports.CreateConnectorRequestBodyLogDelivery = exports.CreateConnectorRequestBodyKafkaClusterEncryptionInTransit = exports.CreateConnectorRequestBodyKafkaClusterClientAuthentication = exports.CreateConnectorRequestBodyKafkaCluster = exports.CreateConnectorRequestBodyCapacity = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * Information about the capacity of the connector, whether it is auto scaled or provisioned.
 */
var CreateConnectorRequestBodyCapacity = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBodyCapacity, _super);
    function CreateConnectorRequestBodyCapacity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoScaling" }),
        (0, class_transformer_1.Type)(function () { return shared.AutoScaling; }),
        __metadata("design:type", shared.AutoScaling)
    ], CreateConnectorRequestBodyCapacity.prototype, "autoScaling", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisionedCapacity" }),
        (0, class_transformer_1.Type)(function () { return shared.ProvisionedCapacity; }),
        __metadata("design:type", shared.ProvisionedCapacity)
    ], CreateConnectorRequestBodyCapacity.prototype, "provisionedCapacity", void 0);
    return CreateConnectorRequestBodyCapacity;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBodyCapacity = CreateConnectorRequestBodyCapacity;
/**
 * The details of the Apache Kafka cluster to which the connector is connected.
 */
var CreateConnectorRequestBodyKafkaCluster = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBodyKafkaCluster, _super);
    function CreateConnectorRequestBodyKafkaCluster() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "apacheKafkaCluster" }),
        (0, class_transformer_1.Type)(function () { return shared.ApacheKafkaCluster; }),
        __metadata("design:type", shared.ApacheKafkaCluster)
    ], CreateConnectorRequestBodyKafkaCluster.prototype, "apacheKafkaCluster", void 0);
    return CreateConnectorRequestBodyKafkaCluster;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBodyKafkaCluster = CreateConnectorRequestBodyKafkaCluster;
/**
 * The client authentication information used in order to authenticate with the Apache Kafka cluster.
 */
var CreateConnectorRequestBodyKafkaClusterClientAuthentication = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBodyKafkaClusterClientAuthentication, _super);
    function CreateConnectorRequestBodyKafkaClusterClientAuthentication() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authenticationType" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBodyKafkaClusterClientAuthentication.prototype, "authenticationType", void 0);
    return CreateConnectorRequestBodyKafkaClusterClientAuthentication;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBodyKafkaClusterClientAuthentication = CreateConnectorRequestBodyKafkaClusterClientAuthentication;
/**
 * Details of encryption in transit to the Apache Kafka cluster.
 */
var CreateConnectorRequestBodyKafkaClusterEncryptionInTransit = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBodyKafkaClusterEncryptionInTransit, _super);
    function CreateConnectorRequestBodyKafkaClusterEncryptionInTransit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encryptionType" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBodyKafkaClusterEncryptionInTransit.prototype, "encryptionType", void 0);
    return CreateConnectorRequestBodyKafkaClusterEncryptionInTransit;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBodyKafkaClusterEncryptionInTransit = CreateConnectorRequestBodyKafkaClusterEncryptionInTransit;
/**
 * Details about log delivery.
 */
var CreateConnectorRequestBodyLogDelivery = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBodyLogDelivery, _super);
    function CreateConnectorRequestBodyLogDelivery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workerLogDelivery" }),
        (0, class_transformer_1.Type)(function () { return shared.WorkerLogDelivery; }),
        __metadata("design:type", shared.WorkerLogDelivery)
    ], CreateConnectorRequestBodyLogDelivery.prototype, "workerLogDelivery", void 0);
    return CreateConnectorRequestBodyLogDelivery;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBodyLogDelivery = CreateConnectorRequestBodyLogDelivery;
/**
 * The configuration of the workers, which are the processes that run the connector logic.
 */
var CreateConnectorRequestBodyWorkerConfiguration = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBodyWorkerConfiguration, _super);
    function CreateConnectorRequestBodyWorkerConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revision" }),
        __metadata("design:type", Number)
    ], CreateConnectorRequestBodyWorkerConfiguration.prototype, "revision", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workerConfigurationArn" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBodyWorkerConfiguration.prototype, "workerConfigurationArn", void 0);
    return CreateConnectorRequestBodyWorkerConfiguration;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBodyWorkerConfiguration = CreateConnectorRequestBodyWorkerConfiguration;
var CreateConnectorRequestBody = /** @class */ (function (_super) {
    __extends(CreateConnectorRequestBody, _super);
    function CreateConnectorRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "capacity" }),
        (0, class_transformer_1.Type)(function () { return CreateConnectorRequestBodyCapacity; }),
        __metadata("design:type", CreateConnectorRequestBodyCapacity)
    ], CreateConnectorRequestBody.prototype, "capacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorConfiguration" }),
        __metadata("design:type", Object)
    ], CreateConnectorRequestBody.prototype, "connectorConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorDescription" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBody.prototype, "connectorDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorName" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBody.prototype, "connectorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaCluster" }),
        (0, class_transformer_1.Type)(function () { return CreateConnectorRequestBodyKafkaCluster; }),
        __metadata("design:type", CreateConnectorRequestBodyKafkaCluster)
    ], CreateConnectorRequestBody.prototype, "kafkaCluster", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaClusterClientAuthentication" }),
        (0, class_transformer_1.Type)(function () { return CreateConnectorRequestBodyKafkaClusterClientAuthentication; }),
        __metadata("design:type", CreateConnectorRequestBodyKafkaClusterClientAuthentication)
    ], CreateConnectorRequestBody.prototype, "kafkaClusterClientAuthentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaClusterEncryptionInTransit" }),
        (0, class_transformer_1.Type)(function () { return CreateConnectorRequestBodyKafkaClusterEncryptionInTransit; }),
        __metadata("design:type", CreateConnectorRequestBodyKafkaClusterEncryptionInTransit)
    ], CreateConnectorRequestBody.prototype, "kafkaClusterEncryptionInTransit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaConnectVersion" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBody.prototype, "kafkaConnectVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "logDelivery" }),
        (0, class_transformer_1.Type)(function () { return CreateConnectorRequestBodyLogDelivery; }),
        __metadata("design:type", CreateConnectorRequestBodyLogDelivery)
    ], CreateConnectorRequestBody.prototype, "logDelivery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.Plugin }),
        (0, class_transformer_1.Expose)({ name: "plugins" }),
        (0, class_transformer_1.Type)(function () { return shared.Plugin; }),
        __metadata("design:type", Array)
    ], CreateConnectorRequestBody.prototype, "plugins", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serviceExecutionRoleArn" }),
        __metadata("design:type", String)
    ], CreateConnectorRequestBody.prototype, "serviceExecutionRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workerConfiguration" }),
        (0, class_transformer_1.Type)(function () { return CreateConnectorRequestBodyWorkerConfiguration; }),
        __metadata("design:type", CreateConnectorRequestBodyWorkerConfiguration)
    ], CreateConnectorRequestBody.prototype, "workerConfiguration", void 0);
    return CreateConnectorRequestBody;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequestBody = CreateConnectorRequestBody;
var CreateConnectorRequest = /** @class */ (function (_super) {
    __extends(CreateConnectorRequest, _super);
    function CreateConnectorRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", CreateConnectorRequestBody)
    ], CreateConnectorRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], CreateConnectorRequest.prototype, "xAmzSignedHeaders", void 0);
    return CreateConnectorRequest;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorRequest = CreateConnectorRequest;
var CreateConnectorResponse = /** @class */ (function (_super) {
    __extends(CreateConnectorResponse, _super);
    function CreateConnectorResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "badRequestException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "conflictException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateConnectorResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.CreateConnectorResponse)
    ], CreateConnectorResponse.prototype, "createConnectorResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "forbiddenException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "internalServerErrorException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "notFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "serviceUnavailableException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateConnectorResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "tooManyRequestsException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateConnectorResponse.prototype, "unauthorizedException", void 0);
    return CreateConnectorResponse;
}(utils_1.SpeakeasyBase));
exports.CreateConnectorResponse = CreateConnectorResponse;
