/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * List Bundle Registrations
 */
export class BundleRegistrationEntity extends SpeakeasyBase {
  /**
   * Bundle URL code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundle_code" })
  bundleCode?: string;

  /**
   * Id of associated bundle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundle_id" })
  bundleId?: number;

  /**
   * Id of associated bundle recipient
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundle_recipient_id" })
  bundleRecipientId?: number;

  /**
   * Clickwrap text that was shown to the registrant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clickwrap_body" })
  clickwrapBody?: string;

  /**
   * Registration cookie code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Registrant company name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  company?: string;

  /**
   * Registration creation date/time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Registrant email address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Data for form field set with form field ids as keys and user data as values
   */
  @SpeakeasyMetadata()
  @Expose({ name: "form_field_data" })
  formFieldData?: Record<string, any>;

  /**
   * Id of associated form field set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "form_field_set_id" })
  formFieldSetId?: number;

  /**
   * InboxRegistration cookie code, if there is an associated InboxRegistration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbox_code" })
  inboxCode?: string;

  /**
   * Registrant IP Address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip" })
  ip?: string;

  /**
   * Registrant name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
