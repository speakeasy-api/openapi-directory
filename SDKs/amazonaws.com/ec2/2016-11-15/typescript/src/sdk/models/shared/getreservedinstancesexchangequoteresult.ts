/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The cost associated with the Reserved Instance.
 */
export class GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  remainingTotalValue?: string;

  @SpeakeasyMetadata()
  remainingUpfrontValue?: string;
}

/**
 * The total value of the Convertible Reserved Instance that you are exchanging.
 */
export class GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  remainingTotalValue?: string;

  @SpeakeasyMetadata()
  remainingUpfrontValue?: string;
}

/**
 * The total value of the Convertible Reserved Instance.
 */
export class GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  reservationValue?: GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue;

  @SpeakeasyMetadata()
  reservedInstanceId?: string;
}

/**
 * The cost associated with the Reserved Instance.
 */
export class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  remainingTotalValue?: string;

  @SpeakeasyMetadata()
  remainingUpfrontValue?: string;
}

/**
 * The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.
 */
export class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  remainingTotalValue?: string;

  @SpeakeasyMetadata()
  remainingUpfrontValue?: string;
}

/**
 * The configuration of the Convertible Reserved Instances that make up the exchange.
 */
export class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instanceCount?: number;

  @SpeakeasyMetadata()
  offeringId?: string;
}

/**
 * The total value of the new Convertible Reserved Instances.
 */
export class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  reservationValue?: GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue;

  @SpeakeasyMetadata()
  targetConfiguration?: GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration;
}

/**
 * Contains the output of GetReservedInstancesExchangeQuote.
 */
export class GetReservedInstancesExchangeQuoteResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  currencyCode?: string;

  @SpeakeasyMetadata()
  isValidExchange?: boolean;

  @SpeakeasyMetadata()
  outputReservedInstancesWillExpireAt?: Date;

  @SpeakeasyMetadata()
  paymentDue?: string;

  @SpeakeasyMetadata()
  reservedInstanceValueRollup?: GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup;

  @SpeakeasyMetadata({
    elemType: GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet,
  })
  reservedInstanceValueSet?: GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet[];

  @SpeakeasyMetadata()
  targetConfigurationValueRollup?: GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup;

  @SpeakeasyMetadata({
    elemType:
      GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet,
  })
  targetConfigurationValueSet?: GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet[];

  @SpeakeasyMetadata()
  validationFailureReason?: string;
}
