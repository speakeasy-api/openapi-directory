/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class FhirCondition {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asserter")
    public String asserter;
    public FhirCondition withAsserter(String asserter) {
        this.asserter = asserter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;
    public FhirCondition withCategory(String category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public FhirCondition withCode(String code) {
        this.code = code;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date")
    public OffsetDateTime date;
    public FhirCondition withDate(OffsetDateTime date) {
        this.date = date;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public FhirCondition withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullDescription")
    public String fullDescription;
    public FhirCondition withFullDescription(String fullDescription) {
        this.fullDescription = fullDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public Group group;
    public FhirCondition withGroup(Group group) {
        this.group = group;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public FhirCondition withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identifier")
    public String identifier;
    public FhirCondition withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public Link[] links;
    public FhirCondition withLinks(Link[] links) {
        this.links = links;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public FhirCondition withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public String severity;
    public FhirCondition withSeverity(String severity) {
        this.severity = severity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public FhirCondition withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
