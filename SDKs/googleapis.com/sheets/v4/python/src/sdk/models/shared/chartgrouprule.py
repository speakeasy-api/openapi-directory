"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import chartdatetimerule as shared_chartdatetimerule
from ..shared import charthistogramrule as shared_charthistogramrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChartGroupRule:
    r"""An optional setting on the ChartData of the domain of a data source chart that defines buckets for the values in the domain rather than breaking out each individual value. For example, when plotting a data source chart, you can specify a histogram rule on the domain (it should only contain numeric values), grouping its values into buckets. Any values of a chart series that fall into the same bucket are aggregated based on the aggregate_type."""
    
    date_time_rule: Optional[shared_chartdatetimerule.ChartDateTimeRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateTimeRule'), 'exclude': lambda f: f is None }})
    r"""Allows you to organize the date-time values in a source data column into buckets based on selected parts of their date or time values."""  
    histogram_rule: Optional[shared_charthistogramrule.ChartHistogramRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('histogramRule'), 'exclude': lambda f: f is None }})
    r"""Allows you to organize numeric values in a source data column into buckets of constant size."""  
    