// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UntagResourceRequestBody struct {
	// The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
	ResourceArn string `json:"ResourceArn"`
	// Keys of the tag that need to be removed from the resource.
	TagKeys []string `json:"TagKeys"`
}

type UntagResourceRequest struct {
	RequestBody       UntagResourceRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UntagResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException *shared.AccessDeniedException
	ContentType           string
	// InternalServiceException
	InternalServiceException *shared.InternalServiceException
	// InvalidArnException
	InvalidArnException *shared.InvalidArnException
	// InvalidTaggingRequestException
	InvalidTaggingRequestException *shared.InvalidTaggingRequestException
	// LimitExceededException
	LimitExceededException *shared.LimitExceededException
	// ResourceNotFoundException
	ResourceNotFoundException *shared.ResourceNotFoundException
	// RetryableConflictException
	RetryableConflictException *shared.RetryableConflictException
	StatusCode                 int
	RawResponse                *http.Response
	// Success
	UntagResourceResponse map[string]interface{}
	// ValidationException
	ValidationException *shared.ValidationException
}
