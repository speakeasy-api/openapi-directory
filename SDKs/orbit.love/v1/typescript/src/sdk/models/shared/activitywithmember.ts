/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Member } from "./member";
import { Expose, Type } from "class-transformer";

export class ActivityWithMember extends SpeakeasyBase {
  /**
   * The type of activity - what action was done by the member. This is a legacy field, use activity_type_key instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activity_type" })
  activityType?: string;

  /**
   * The key for a custom activity type for the workspace. Will create a new activity type if it does not exist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activity_type_key" })
  activityTypeKey?: string;

  /**
   * A description of the activity; displayed in the timeline
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Supply a key that must be unique or leave blank to have one generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * A URL for the activity; displayed in the timeline
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * The text for the timeline link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link_text" })
  linkText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "member" })
  @Type(() => Member)
  member?: Member;

  /**
   * The date and time the activity occurred; defaults to now
   */
  @SpeakeasyMetadata()
  @Expose({ name: "occurred_at" })
  occurredAt?: string;

  /**
   * Key-value pairs to provide contextual metadata about an activity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: Record<string, any>;

  /**
   * A title for the activity; displayed in the timeline
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * A custom weight to be used in filters and reports; defaults to 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: string;
}
