"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum(str, Enum):
    r"""Indicates whether the NAT gateway supports public or private connectivity."""
    PRIVATE = 'private'
    PUBLIC = 'public'

class DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum(str, Enum):
    r"""The address status."""
    ASSIGNING = 'assigning'
    UNASSIGNING = 'unassigning'
    ASSOCIATING = 'associating'
    DISASSOCIATING = 'disassociating'
    SUCCEEDED = 'succeeded'
    FAILED = 'failed'


@dataclasses.dataclass
class DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses:
    r"""Describes the IP addresses and network interface associated with a NAT gateway."""
    
    allocation_id: Optional[str] = dataclasses.field(default=None)  
    association_id: Optional[str] = dataclasses.field(default=None)  
    failure_message: Optional[str] = dataclasses.field(default=None)  
    is_primary: Optional[bool] = dataclasses.field(default=None)  
    network_interface_id: Optional[str] = dataclasses.field(default=None)  
    private_ip: Optional[str] = dataclasses.field(default=None)  
    public_ip: Optional[str] = dataclasses.field(default=None)  
    status: Optional[DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth:
    r"""Reserved. If you need to sustain traffic greater than the <a href=\\"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html\\">documented limits</a>, contact us through the <a href=\\"https://console.aws.amazon.com/support/home?\\">Support Center</a>."""
    
    provisioned: Optional[str] = dataclasses.field(default=None)  
    provision_time: Optional[datetime] = dataclasses.field(default=None)  
    requested: Optional[str] = dataclasses.field(default=None)  
    request_time: Optional[datetime] = dataclasses.field(default=None)  
    status: Optional[str] = dataclasses.field(default=None)  
    
class DescribeNatGatewaysResultNatGatewaysStateEnum(str, Enum):
    r"""<p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>"""
    PENDING = 'pending'
    FAILED = 'failed'
    AVAILABLE = 'available'
    DELETING = 'deleting'
    DELETED = 'deleted'


@dataclasses.dataclass
class DescribeNatGatewaysResultNatGatewaysTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeNatGatewaysResultNatGateways:
    r"""Describes a NAT gateway."""
    
    connectivity_type: Optional[DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum] = dataclasses.field(default=None)  
    create_time: Optional[datetime] = dataclasses.field(default=None)  
    delete_time: Optional[datetime] = dataclasses.field(default=None)  
    failure_code: Optional[str] = dataclasses.field(default=None)  
    failure_message: Optional[str] = dataclasses.field(default=None)  
    nat_gateway_addresses: Optional[list[DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses]] = dataclasses.field(default=None)  
    nat_gateway_id: Optional[str] = dataclasses.field(default=None)  
    provisioned_bandwidth: Optional[DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth] = dataclasses.field(default=None)  
    state: Optional[DescribeNatGatewaysResultNatGatewaysStateEnum] = dataclasses.field(default=None)  
    subnet_id: Optional[str] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeNatGatewaysResultNatGatewaysTags]] = dataclasses.field(default=None)  
    vpc_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeNatGatewaysResult:
    r"""Success"""
    
    nat_gateways: Optional[list[DescribeNatGatewaysResultNatGateways]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    