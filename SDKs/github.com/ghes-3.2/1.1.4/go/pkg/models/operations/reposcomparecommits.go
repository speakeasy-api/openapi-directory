// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposCompareCommitsPathParams struct {
	// The base branch and head branch to compare. This parameter expects the format `{base}...{head}`.
	Basehead string `pathParam:"style=simple,explode=false,name=basehead"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposCompareCommitsQueryParams struct {
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
}

type ReposCompareCommitsRequest struct {
	PathParams  ReposCompareCommitsPathParams
	QueryParams ReposCompareCommitsQueryParams
}

// ReposCompareCommits503ApplicationJSON - Service unavailable
type ReposCompareCommits503ApplicationJSON struct {
	Code             *string `json:"code,omitempty"`
	DocumentationURL *string `json:"documentation_url,omitempty"`
	Message          *string `json:"message,omitempty"`
}

type ReposCompareCommitsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	CommitComparison *shared.CommitComparison
	// Service unavailable
	ReposCompareCommits503ApplicationJSONObject *ReposCompareCommits503ApplicationJSON
}
