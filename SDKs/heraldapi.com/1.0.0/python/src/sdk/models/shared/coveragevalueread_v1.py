"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import parametertext_v1 as shared_parametertext_v1
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CoverageValueReadV1InputTypeEnum(str, Enum):
    r"""Recommended input type. Only returned by `/applications` endpoint. [Full list of input types](https://www.heraldapi.com/docs/input-types)."""
    DATE = 'date'
    NUMBER = 'number'
    INTEGER = 'integer'
    SELECT_ONE = 'select_one'
    SELECT_MANY = 'select_many'
    ADDRESS = 'address'
    CLAIM_EVENT = 'claim_event'
    EMAIL = 'email'
    PHONE = 'phone'
    YEAR = 'year'
    SHORT_TEXT = 'short_text'
    LONG_TEXT = 'long_text'
    WEBSITE = 'website'
    FILE = 'file'

class CoverageValueReadV1RequiredForEnum(str, Enum):
    QUOTE = 'quote'
    BIND = 'bind'
    NULL = 'null'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CoverageValueReadV1:
    r"""Coverage values assign specific values to coverage parameters."""
    
    affects_conditions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affects_conditions'), 'exclude': lambda f: f is None }})
    r"""True if the value potentially impacts the relevance of other risk or coverage values. Only returned by `/applications` endpoint. Read more about [conditionality](https://www.heraldapi.com/docs/risk-and-coverage-parameters#affects_conditions)."""  
    child_coverage_values: Optional[list[CoverageValueReadV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('child_coverage_values'), 'exclude': lambda f: f is None }})
    r"""Array of \\"children\\" coverage values, only required for certain coverage parameters.
    
    Objects in the `child_coverage_values` array should adhere to the `coverage_values` schema. Read more about [parent/child relationships](https://www.heraldapi.com/docs/risk-and-coverage-parameters#parent_child).
    """  
    coverage_parameter_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coverage_parameter_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the [coverage parameter](https://www.heraldapi.com/docs/risk-and-coverage-parameters) for which a value is being provided. A list of all coverage parameters are documented in the [appendix](https://www.heraldapi.com/tools-and-resources/the-appendix)."""  
    creates_array: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creates_array'), 'exclude': lambda f: f is None }})
    r"""True if multiple values can be submitted with the same parameter ID.  Read more about [`creates_array`](https://www.heraldapi.com/docs/risk-and-coverage-parameters#creates_array)."""  
    input_type: Optional[CoverageValueReadV1InputTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input_type'), 'exclude': lambda f: f is None }})
    r"""Recommended input type. Only returned by `/applications` endpoint. [Full list of input types](https://www.heraldapi.com/docs/input-types)."""  
    instance: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instance'), 'exclude': lambda f: f is None }})
    r"""Unique identifier to distinguish different instances of coverage values that have the same `coverage_parameter_id`. Only returned by `/applications` for risk and coverage values where `creates_array: true`
    Read our [guide to using instances](https://www.heraldapi.com/docs/instance).
    """  
    parameter_text: Optional[shared_parametertext_v1.ParameterTextV1] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameter_text'), 'exclude': lambda f: f is None }})
    r"""Object containing text for the parameter that you can render on a front-end."""  
    relevant_products: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relevant_products'), 'exclude': lambda f: f is None }})
    r"""Array of product IDs the coverage parameter is relevant for. Some coverage parameters are relevant for all products, but some are unique to a certain product. Only returned by `/applications` endpoint."""  
    required_for: Optional[list[CoverageValueReadV1RequiredForEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required_for'), 'exclude': lambda f: f is None }})
    r"""Specifies fow which operations this value is required."""  
    schema: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schema'), 'exclude': lambda f: f is None }})
    r"""[JSON schema](https://json-schema.org/) describing the expected value. Only returned by `/applications` endpoint."""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""**Deprecated**: use the `parameter_text` object instead."""  
    value: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value being assigned. Different coverage parameters expect different value types. This is specified in the [appendix](https://www.heraldapi.com/tools-and-resources/the-appendix)."""  
    