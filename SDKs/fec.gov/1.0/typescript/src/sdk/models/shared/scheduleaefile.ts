/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitteeHistory } from "./committeehistory";
import { EFilings } from "./efilings";
import { Expose, Transform, Type } from "class-transformer";

export class ScheduleAEfile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator" })
  amendmentIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_schedule_name" })
  backReferenceScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_transaction_id" })
  backReferenceTransactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beginning_image_number" })
  beginningImageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee" })
  @Type(() => CommitteeHistory)
  committee?: CommitteeHistory;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_city" })
  conduitCommitteeCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_id" })
  conduitCommitteeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_name" })
  conduitCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_state" })
  conduitCommitteeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street1" })
  conduitCommitteeStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street2" })
  conduitCommitteeStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_zip" })
  conduitCommitteeZip?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "contribution_receipt_amount" })
  contributionReceiptAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "contribution_receipt_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  contributionReceiptDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_aggregate_ytd" })
  contributorAggregateYtd?: number;

  /**
   * City of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_city" })
  contributorCity?: string;

  /**
   * Employer of contributor, filers need to make an effort to gather this information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_employer" })
  contributorEmployer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_first_name" })
  contributorFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_last_name" })
  contributorLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_middle_name" })
  contributorMiddleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_name" })
  contributorName?: string;

  /**
   * Occupation of contributor, filers need to make an effort to gather this information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_occupation" })
  contributorOccupation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_prefix" })
  contributorPrefix?: string;

  /**
   * State of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_state" })
  contributorState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_suffix" })
  contributorSuffix?: string;

  /**
   * Zip code of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_zip" })
  contributorZip?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "csv_url" })
  csvUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cycle" })
  cycle?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type" })
  entityType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fec_election_type_desc" })
  fecElectionTypeDesc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fec_url" })
  fecUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filing" })
  @Type(() => EFilings)
  filing?: EFilings;

  /**
   *
   * @remarks
   * An unique identifier for each page where the electronic or paper filing is reported.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_number" })
  imageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "load_timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  loadTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code" })
  memoCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_text" })
  memoText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pgo" })
  pgo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "related_line_number" })
  relatedLineNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "report_type" })
  reportType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;
}
