/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TestIssue - An issue detected occurring during a test execution.
 */
public class TestIssue {
    /**
     * Category of issue. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public TestIssueCategoryEnum category;

    public TestIssue withCategory(TestIssueCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * A brief human-readable message describing the issue. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public TestIssue withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * Severity of issue. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public TestIssueSeverityEnum severity;

    public TestIssue withSeverity(TestIssueSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * A stacktrace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stackTrace")
    public StackTrace stackTrace;

    public TestIssue withStackTrace(StackTrace stackTrace) {
        this.stackTrace = stackTrace;
        return this;
    }
    
    /**
     * Type of issue. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public TestIssueTypeEnum type;

    public TestIssue withType(TestIssueTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     *  `Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++. Foo foo = ...; Any any; any.PackFrom(foo); ... if (any.UnpackTo(&amp;foo)) { ... } Example 2: Pack and unpack a message in Java. Foo foo = ...; Any any = Any.pack(foo); ... if (any.is(Foo.class)) { foo = any.unpack(Foo.class); } Example 3: Pack and unpack a message in Python. foo = Foo(...) any = Any() any.Pack(foo) ... if any.Is(Foo.DESCRIPTOR): any.Unpack(foo) ... Example 4: Pack and unpack a message in Go foo := &amp;pb.Foo{...} any, err := ptypes.MarshalAny(foo) ... foo := &amp;pb.Foo{} if err := ptypes.UnmarshalAny(any, foo); err != nil { ... } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". # JSON The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example: package google.profile; message Person { string first_name = 1; string last_name = 2; } { "@type": "type.googleapis.com/google.profile.Person", "firstName": , "lastName": } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message google.protobuf.Duration): { "@type": "type.googleapis.com/google.protobuf.Duration", "value": "1.212s" }
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warning")
    public Any warning;

    public TestIssue withWarning(Any warning) {
        this.warning = warning;
        return this;
    }
    
    public TestIssue(){}
}
