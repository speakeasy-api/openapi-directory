"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeFlowLogsResult = exports.DescribeFlowLogsResultFlowLogs = exports.DescribeFlowLogsResultFlowLogsTrafficTypeEnum = exports.DescribeFlowLogsResultFlowLogsTags = exports.DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum = exports.DescribeFlowLogsResultFlowLogsDestinationOptions = exports.DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The format for the flow log.
 */
var DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum;
(function (DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum) {
    DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum["PlainText"] = "plain-text";
    DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum["Parquet"] = "parquet";
})(DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum = exports.DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum || (exports.DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum = {}));
/**
 * The destination options.
 */
var DescribeFlowLogsResultFlowLogsDestinationOptions = /** @class */ (function (_super) {
    __extends(DescribeFlowLogsResultFlowLogsDestinationOptions, _super);
    function DescribeFlowLogsResultFlowLogsDestinationOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogsDestinationOptions.prototype, "fileFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeFlowLogsResultFlowLogsDestinationOptions.prototype, "hiveCompatiblePartitions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeFlowLogsResultFlowLogsDestinationOptions.prototype, "perHourPartition", void 0);
    return DescribeFlowLogsResultFlowLogsDestinationOptions;
}(utils_1.SpeakeasyBase));
exports.DescribeFlowLogsResultFlowLogsDestinationOptions = DescribeFlowLogsResultFlowLogsDestinationOptions;
/**
 * The type of destination for the flow log data.
 */
var DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum;
(function (DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum) {
    DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum["CloudWatchLogs"] = "cloud-watch-logs";
    DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum["S3"] = "s3";
    DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum["KinesisDataFirehose"] = "kinesis-data-firehose";
})(DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum = exports.DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum || (exports.DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum = {}));
/**
 * Describes a tag.
 */
var DescribeFlowLogsResultFlowLogsTags = /** @class */ (function (_super) {
    __extends(DescribeFlowLogsResultFlowLogsTags, _super);
    function DescribeFlowLogsResultFlowLogsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogsTags.prototype, "value", void 0);
    return DescribeFlowLogsResultFlowLogsTags;
}(utils_1.SpeakeasyBase));
exports.DescribeFlowLogsResultFlowLogsTags = DescribeFlowLogsResultFlowLogsTags;
/**
 * The type of traffic captured for the flow log.
 */
var DescribeFlowLogsResultFlowLogsTrafficTypeEnum;
(function (DescribeFlowLogsResultFlowLogsTrafficTypeEnum) {
    DescribeFlowLogsResultFlowLogsTrafficTypeEnum["Accept"] = "ACCEPT";
    DescribeFlowLogsResultFlowLogsTrafficTypeEnum["Reject"] = "REJECT";
    DescribeFlowLogsResultFlowLogsTrafficTypeEnum["All"] = "ALL";
})(DescribeFlowLogsResultFlowLogsTrafficTypeEnum = exports.DescribeFlowLogsResultFlowLogsTrafficTypeEnum || (exports.DescribeFlowLogsResultFlowLogsTrafficTypeEnum = {}));
/**
 * Describes a flow log.
 */
var DescribeFlowLogsResultFlowLogs = /** @class */ (function (_super) {
    __extends(DescribeFlowLogsResultFlowLogs, _super);
    function DescribeFlowLogsResultFlowLogs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DescribeFlowLogsResultFlowLogs.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "deliverCrossAccountRole", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "deliverLogsErrorMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "deliverLogsPermissionArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "deliverLogsStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeFlowLogsResultFlowLogsDestinationOptions)
    ], DescribeFlowLogsResultFlowLogs.prototype, "destinationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "flowLogId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "flowLogStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "logDestination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "logDestinationType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "logFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "logGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeFlowLogsResultFlowLogs.prototype, "maxAggregationInterval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "resourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeFlowLogsResultFlowLogsTags }),
        __metadata("design:type", Array)
    ], DescribeFlowLogsResultFlowLogs.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResultFlowLogs.prototype, "trafficType", void 0);
    return DescribeFlowLogsResultFlowLogs;
}(utils_1.SpeakeasyBase));
exports.DescribeFlowLogsResultFlowLogs = DescribeFlowLogsResultFlowLogs;
/**
 * Success
 */
var DescribeFlowLogsResult = /** @class */ (function (_super) {
    __extends(DescribeFlowLogsResult, _super);
    function DescribeFlowLogsResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeFlowLogsResultFlowLogs }),
        __metadata("design:type", Array)
    ], DescribeFlowLogsResult.prototype, "flowLogs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeFlowLogsResult.prototype, "nextToken", void 0);
    return DescribeFlowLogsResult;
}(utils_1.SpeakeasyBase));
exports.DescribeFlowLogsResult = DescribeFlowLogsResult;
