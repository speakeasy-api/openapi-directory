/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetConnectSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  authHeader: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=client_id",
  })
  clientId: string;
}

export class GetConnectRequest extends SpeakeasyBase {
  /**
   * The client id belonging to your application
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client_id",
  })
  clientId: string;

  /**
   * The redirect uri you have configured for your application
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=redirect_uri",
  })
  redirectUri: string;

  /**
   * It's recommended to use "code" here
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=response_type",
  })
  responseType: shared.ResponseTypeEnum;

  /**
   * Scope
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope: string;

  /**
   * Any value included here will be appended to the redirect URI. Use this for CSRF protection.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: string;
}

export class GetConnectResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Found
   */
  @SpeakeasyMetadata()
  getConnect302ApplicationJSONString?: string;
}
