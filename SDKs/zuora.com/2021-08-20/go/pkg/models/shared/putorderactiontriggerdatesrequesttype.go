// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

type PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsCharges struct {
	// Charge number of the charge which needs the triggering date to be provided. The charge's `triggerEvent` must have been set as `SpecificDate`.
	ChargeNumber *string `json:"chargeNumber,omitempty"`
	// Date in YYYY-MM-DD format. The specific trigger date you are to set for the charge.
	SpecificTriggerDate *types.Date `json:"specificTriggerDate,omitempty"`
}

// PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum - Name of the trigger date of the order action.
type PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum string

const (
	PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnumServiceActivation  PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum = "ServiceActivation"
	PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnumCustomerAcceptance PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum = "CustomerAcceptance"
)

func (e *PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ServiceActivation":
		fallthrough
	case "CustomerAcceptance":
		*e = PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum: %s", s)
	}
}

type PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDates struct {
	// Name of the trigger date of the order action.
	Name *PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum `json:"name,omitempty"`
	// Trigger date in YYYY-MM-DD format. The date you are to set as the service activation date or the customer acceptance date.
	//
	TriggerDate *types.Date `json:"triggerDate,omitempty"`
}

type PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActions struct {
	Charges []PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsCharges `json:"charges,omitempty"`
	// Identifies which order action will have its triggering dates updated.
	//
	Sequence int64 `json:"sequence"`
	// Container for the service activation and customer acceptance dates of the order action.
	TriggerDates []PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDates `json:"triggerDates,omitempty"`
}

type PUTOrderActionTriggerDatesRequestTypeSubscriptions struct {
	OrderActions []PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActions `json:"orderActions,omitempty"`
	// Subscription number of a subscription in the `Pending` order for which you are to update the triggering dates. For example, A-S00000001.
	//
	SubscriptionNumber string `json:"subscriptionNumber"`
}

type PUTOrderActionTriggerDatesRequestType struct {
	Subscriptions []PUTOrderActionTriggerDatesRequestTypeSubscriptions `json:"subscriptions,omitempty"`
}
