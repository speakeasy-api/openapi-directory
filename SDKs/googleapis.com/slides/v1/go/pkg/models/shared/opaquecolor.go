// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OpaqueColorThemeColorEnum - An opaque theme color.
type OpaqueColorThemeColorEnum string

const (
	OpaqueColorThemeColorEnumThemeColorTypeUnspecified OpaqueColorThemeColorEnum = "THEME_COLOR_TYPE_UNSPECIFIED"
	OpaqueColorThemeColorEnumDark1                     OpaqueColorThemeColorEnum = "DARK1"
	OpaqueColorThemeColorEnumLight1                    OpaqueColorThemeColorEnum = "LIGHT1"
	OpaqueColorThemeColorEnumDark2                     OpaqueColorThemeColorEnum = "DARK2"
	OpaqueColorThemeColorEnumLight2                    OpaqueColorThemeColorEnum = "LIGHT2"
	OpaqueColorThemeColorEnumAccent1                   OpaqueColorThemeColorEnum = "ACCENT1"
	OpaqueColorThemeColorEnumAccent2                   OpaqueColorThemeColorEnum = "ACCENT2"
	OpaqueColorThemeColorEnumAccent3                   OpaqueColorThemeColorEnum = "ACCENT3"
	OpaqueColorThemeColorEnumAccent4                   OpaqueColorThemeColorEnum = "ACCENT4"
	OpaqueColorThemeColorEnumAccent5                   OpaqueColorThemeColorEnum = "ACCENT5"
	OpaqueColorThemeColorEnumAccent6                   OpaqueColorThemeColorEnum = "ACCENT6"
	OpaqueColorThemeColorEnumHyperlink                 OpaqueColorThemeColorEnum = "HYPERLINK"
	OpaqueColorThemeColorEnumFollowedHyperlink         OpaqueColorThemeColorEnum = "FOLLOWED_HYPERLINK"
	OpaqueColorThemeColorEnumText1                     OpaqueColorThemeColorEnum = "TEXT1"
	OpaqueColorThemeColorEnumBackground1               OpaqueColorThemeColorEnum = "BACKGROUND1"
	OpaqueColorThemeColorEnumText2                     OpaqueColorThemeColorEnum = "TEXT2"
	OpaqueColorThemeColorEnumBackground2               OpaqueColorThemeColorEnum = "BACKGROUND2"
)

func (e OpaqueColorThemeColorEnum) ToPointer() *OpaqueColorThemeColorEnum {
	return &e
}

func (e *OpaqueColorThemeColorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THEME_COLOR_TYPE_UNSPECIFIED":
		fallthrough
	case "DARK1":
		fallthrough
	case "LIGHT1":
		fallthrough
	case "DARK2":
		fallthrough
	case "LIGHT2":
		fallthrough
	case "ACCENT1":
		fallthrough
	case "ACCENT2":
		fallthrough
	case "ACCENT3":
		fallthrough
	case "ACCENT4":
		fallthrough
	case "ACCENT5":
		fallthrough
	case "ACCENT6":
		fallthrough
	case "HYPERLINK":
		fallthrough
	case "FOLLOWED_HYPERLINK":
		fallthrough
	case "TEXT1":
		fallthrough
	case "BACKGROUND1":
		fallthrough
	case "TEXT2":
		fallthrough
	case "BACKGROUND2":
		*e = OpaqueColorThemeColorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OpaqueColorThemeColorEnum: %v", v)
	}
}

// OpaqueColor - A themeable solid color value.
type OpaqueColor struct {
	// An RGB color.
	RgbColor *RgbColor `json:"rgbColor,omitempty"`
	// An opaque theme color.
	ThemeColor *OpaqueColorThemeColorEnum `json:"themeColor,omitempty"`
}
