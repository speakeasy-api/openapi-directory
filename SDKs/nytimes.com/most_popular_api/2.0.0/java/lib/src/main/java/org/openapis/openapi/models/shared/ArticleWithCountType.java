/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ArticleWithCountType {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abstract")
    public String abstract_;
    public ArticleWithCountType withAbstract(String abstract_) {
        this.abstract_ = abstract_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("byline")
    public String byline;
    public ArticleWithCountType withByline(String byline) {
        this.byline = byline;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("column")
    public String column;
    public ArticleWithCountType withColumn(String column) {
        this.column = column;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count_type")
    public String countType;
    public ArticleWithCountType withCountType(String countType) {
        this.countType = countType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("des_facet")
    public Object desFacet;
    public ArticleWithCountType withDesFacet(Object desFacet) {
        this.desFacet = desFacet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geo_facet")
    public Object geoFacet;
    public ArticleWithCountType withGeoFacet(Object geoFacet) {
        this.geoFacet = geoFacet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media")
    public ArticleWithCountTypeMedia[] media;
    public ArticleWithCountType withMedia(ArticleWithCountTypeMedia[] media) {
        this.media = media;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("org_facet")
    public Object[] orgFacet;
    public ArticleWithCountType withOrgFacet(Object[] orgFacet) {
        this.orgFacet = orgFacet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per_facet")
    public Object[] perFacet;
    public ArticleWithCountType withPerFacet(Object[] perFacet) {
        this.perFacet = perFacet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("published_date")
    public String publishedDate;
    public ArticleWithCountType withPublishedDate(String publishedDate) {
        this.publishedDate = publishedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("section")
    public String section;
    public ArticleWithCountType withSection(String section) {
        this.section = section;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;
    public ArticleWithCountType withSource(String source) {
        this.source = source;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public ArticleWithCountType withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public ArticleWithCountType withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
