/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Volume } from "./volume";
import { Expose, Type } from "class-transformer";

export class DiscoveryclustersClustersBannerWithContentContainer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fillColorArgb" })
  fillColorArgb?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "maskColorArgb" })
  maskColorArgb?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "moreButtonText" })
  moreButtonText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "moreButtonUrl" })
  moreButtonUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "textColorArgb" })
  textColorArgb?: string;
}

export class DiscoveryclustersClusters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "banner_with_content_container" })
  @Type(() => DiscoveryclustersClustersBannerWithContentContainer)
  bannerWithContentContainer?: DiscoveryclustersClustersBannerWithContentContainer;

  @SpeakeasyMetadata()
  @Expose({ name: "subTitle" })
  subTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalVolumes" })
  totalVolumes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  @SpeakeasyMetadata({ elemType: Volume })
  @Expose({ name: "volumes" })
  @Type(() => Volume)
  volumes?: Volume[];
}

/**
 * Successful response
 */
export class Discoveryclusters extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DiscoveryclustersClusters })
  @Expose({ name: "clusters" })
  @Type(() => DiscoveryclustersClusters)
  clusters?: DiscoveryclustersClusters[];

  /**
   * Resorce type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalClusters" })
  totalClusters?: number;
}
