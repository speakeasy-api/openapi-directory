import { SpeakeasyBase } from "../../../internal/utils";
import { Recipient, RecipientOutput } from "./recipient";
/**
 * Form factor of the push device.
 */
export declare enum DeviceDetailsFormFactorEnum {
    Phone = "phone",
    Tablet = "tablet",
    Desktop = "desktop",
    Tv = "tv",
    Watch = "watch",
    Car = "car",
    Embedded = "embedded"
}
/**
 * Platform of the push device.
 */
export declare enum DeviceDetailsPlatformEnum {
    Ios = "ios",
    Android = "android"
}
/**
 * the current state of the push device.
 */
export declare enum DeviceDetailsPushStateEnum {
    Active = "Active",
    Failing = "Failing",
    Failed = "Failed"
}
/**
 * OK
 */
export declare class DeviceDetailsOutput extends SpeakeasyBase {
    /**
     * Optional trusted client identifier for the device.
     */
    clientId?: string;
    /**
     * Secret value for the device.
     */
    deviceSecret?: string;
    /**
     * Form factor of the push device.
     */
    formFactor?: DeviceDetailsFormFactorEnum;
    /**
     * Unique identifier for the device generated by the device itself.
     */
    id?: string;
    /**
     * Optional metadata object for this device. The metadata for a device may only be set by clients with push-admin privileges and will be used more extensively in the future with smart notifications.
     */
    metadata?: Record<string, any>;
    /**
     * Platform of the push device.
     */
    platform?: DeviceDetailsPlatformEnum;
    /**
     * Push recipient details for a device.
     */
    pushRecipient?: RecipientOutput;
    /**
     * the current state of the push device.
     */
    pushState?: DeviceDetailsPushStateEnum;
}
export declare class DeviceDetailsInput extends SpeakeasyBase {
    /**
     * Optional trusted client identifier for the device.
     */
    clientId?: string;
    /**
     * Secret value for the device.
     */
    deviceSecret?: string;
    /**
     * Form factor of the push device.
     */
    formFactor?: DeviceDetailsFormFactorEnum;
    /**
     * Unique identifier for the device generated by the device itself.
     */
    id?: string;
    /**
     * Optional metadata object for this device. The metadata for a device may only be set by clients with push-admin privileges and will be used more extensively in the future with smart notifications.
     */
    metadata?: Record<string, any>;
    /**
     * Platform of the push device.
     */
    platform?: DeviceDetailsPlatformEnum;
    /**
     * Push recipient details for a device.
     */
    pushRecipient?: Recipient;
}
