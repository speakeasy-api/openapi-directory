// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PostExternalEventsRequestBodyStatusEnum - Status of event.
type PostExternalEventsRequestBodyStatusEnum string

const (
	PostExternalEventsRequestBodyStatusEnumSuccess        PostExternalEventsRequestBodyStatusEnum = "success"
	PostExternalEventsRequestBodyStatusEnumFailure        PostExternalEventsRequestBodyStatusEnum = "failure"
	PostExternalEventsRequestBodyStatusEnumPartialFailure PostExternalEventsRequestBodyStatusEnum = "partial_failure"
	PostExternalEventsRequestBodyStatusEnumInProgress     PostExternalEventsRequestBodyStatusEnum = "in_progress"
	PostExternalEventsRequestBodyStatusEnumSkipped        PostExternalEventsRequestBodyStatusEnum = "skipped"
)

func (e *PostExternalEventsRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "failure":
		fallthrough
	case "partial_failure":
		fallthrough
	case "in_progress":
		fallthrough
	case "skipped":
		*e = PostExternalEventsRequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostExternalEventsRequestBodyStatusEnum: %s", s)
	}
}

type PostExternalEventsRequestBody struct {
	// Event body
	Body string `multipartForm:"name=body"`
	// Status of event.
	Status PostExternalEventsRequestBodyStatusEnum `multipartForm:"name=status"`
}

type PostExternalEventsRequest struct {
	Request PostExternalEventsRequestBody `request:"mediaType=multipart/form-data"`
}

type PostExternalEventsResponse struct {
	ContentType string
	// The ExternalEvents object.
	ExternalEventEntity *shared.ExternalEventEntity
	StatusCode          int
	RawResponse         *http.Response
}
