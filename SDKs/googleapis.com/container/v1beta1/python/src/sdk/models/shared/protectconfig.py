"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import workloadconfig as shared_workloadconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProtectConfigWorkloadVulnerabilityModeEnum(str, Enum):
    r"""Sets which mode to use for Protect workload vulnerability scanning feature."""
    WORKLOAD_VULNERABILITY_MODE_UNSPECIFIED = 'WORKLOAD_VULNERABILITY_MODE_UNSPECIFIED'
    DISABLED = 'DISABLED'
    BASIC = 'BASIC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProtectConfig:
    r"""ProtectConfig defines the flags needed to enable/disable features for the Protect API."""
    
    workload_config: Optional[shared_workloadconfig.WorkloadConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workloadConfig'), 'exclude': lambda f: f is None }})
    r"""WorkloadConfig defines the flags to enable or disable the workload configurations for the cluster."""  
    workload_vulnerability_mode: Optional[ProtectConfigWorkloadVulnerabilityModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workloadVulnerabilityMode'), 'exclude': lambda f: f is None }})
    r"""Sets which mode to use for Protect workload vulnerability scanning feature."""  
    