"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DevicesListCsvFormatResponse = exports.DevicesListCsvFormat400TextCsv = exports.DevicesListCsvFormat400TextCsvCodeEnum = exports.DevicesListCsvFormatRequest = exports.DevicesListCsvFormatSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var DevicesListCsvFormatSecurity = /** @class */ (function (_super) {
    __extends(DevicesListCsvFormatSecurity, _super);
    function DevicesListCsvFormatSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], DevicesListCsvFormatSecurity.prototype, "apiToken", void 0);
    return DevicesListCsvFormatSecurity;
}(utils_1.SpeakeasyBase));
exports.DevicesListCsvFormatSecurity = DevicesListCsvFormatSecurity;
var DevicesListCsvFormatRequest = /** @class */ (function (_super) {
    __extends(DevicesListCsvFormatRequest, _super);
    function DevicesListCsvFormatRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], DevicesListCsvFormatRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=distribution_group_name",
        }),
        __metadata("design:type", String)
    ], DevicesListCsvFormatRequest.prototype, "distributionGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], DevicesListCsvFormatRequest.prototype, "ownerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=udids",
        }),
        __metadata("design:type", Array)
    ], DevicesListCsvFormatRequest.prototype, "udids", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=unprovisioned_only",
        }),
        __metadata("design:type", Boolean)
    ], DevicesListCsvFormatRequest.prototype, "unprovisionedOnly", void 0);
    return DevicesListCsvFormatRequest;
}(utils_1.SpeakeasyBase));
exports.DevicesListCsvFormatRequest = DevicesListCsvFormatRequest;
var DevicesListCsvFormat400TextCsvCodeEnum;
(function (DevicesListCsvFormat400TextCsvCodeEnum) {
    DevicesListCsvFormat400TextCsvCodeEnum["BadRequest"] = "BadRequest";
    DevicesListCsvFormat400TextCsvCodeEnum["Conflict"] = "Conflict";
    DevicesListCsvFormat400TextCsvCodeEnum["NotAcceptable"] = "NotAcceptable";
    DevicesListCsvFormat400TextCsvCodeEnum["NotFound"] = "NotFound";
    DevicesListCsvFormat400TextCsvCodeEnum["InternalServerError"] = "InternalServerError";
    DevicesListCsvFormat400TextCsvCodeEnum["Unauthorized"] = "Unauthorized";
    DevicesListCsvFormat400TextCsvCodeEnum["TooManyRequests"] = "TooManyRequests";
})(DevicesListCsvFormat400TextCsvCodeEnum = exports.DevicesListCsvFormat400TextCsvCodeEnum || (exports.DevicesListCsvFormat400TextCsvCodeEnum = {}));
/**
 * <b>bad_request</b>: Devices information can only be requested for iOS apps.
 *
 * @remarks
 *
 */
var DevicesListCsvFormat400TextCsv = /** @class */ (function (_super) {
    __extends(DevicesListCsvFormat400TextCsv, _super);
    function DevicesListCsvFormat400TextCsv() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DevicesListCsvFormat400TextCsv.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DevicesListCsvFormat400TextCsv.prototype, "message", void 0);
    return DevicesListCsvFormat400TextCsv;
}(utils_1.SpeakeasyBase));
exports.DevicesListCsvFormat400TextCsv = DevicesListCsvFormat400TextCsv;
var DevicesListCsvFormatResponse = /** @class */ (function (_super) {
    __extends(DevicesListCsvFormatResponse, _super);
    function DevicesListCsvFormatResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], DevicesListCsvFormatResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DevicesListCsvFormatResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DevicesListCsvFormatResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], DevicesListCsvFormatResponse.prototype, "rawResponse", void 0);
    return DevicesListCsvFormatResponse;
}(utils_1.SpeakeasyBase));
exports.DevicesListCsvFormatResponse = DevicesListCsvFormatResponse;
