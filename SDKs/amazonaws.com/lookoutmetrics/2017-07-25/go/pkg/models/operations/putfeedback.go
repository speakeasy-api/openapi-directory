// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// PutFeedbackRequestBodyAnomalyGroupTimeSeriesFeedback - Feedback for an anomalous metric.
type PutFeedbackRequestBodyAnomalyGroupTimeSeriesFeedback struct {
	AnomalyGroupID *string `json:"AnomalyGroupId,omitempty"`
	IsAnomaly      *bool   `json:"IsAnomaly,omitempty"`
	TimeSeriesID   *string `json:"TimeSeriesId,omitempty"`
}

type PutFeedbackRequestBody struct {
	// The Amazon Resource Name (ARN) of the anomaly detector.
	AnomalyDetectorArn string `json:"AnomalyDetectorArn"`
	// Feedback for an anomalous metric.
	AnomalyGroupTimeSeriesFeedback PutFeedbackRequestBodyAnomalyGroupTimeSeriesFeedback `json:"AnomalyGroupTimeSeriesFeedback"`
}

type PutFeedbackRequest struct {
	RequestBody       PutFeedbackRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutFeedbackResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	PutFeedbackResponse map[string]interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// ValidationException
	ValidationException interface{}
}
