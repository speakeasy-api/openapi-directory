// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateRelatedItemRequestBodyContent - Represents the content of a related item to be created.
type CreateRelatedItemRequestBodyContent struct {
	Comment *shared.CommentContent `json:"comment,omitempty"`
	Contact *shared.Contact        `json:"contact,omitempty"`
}

// CreateRelatedItemRequestBodyTypeEnum - The type of a related item.
type CreateRelatedItemRequestBodyTypeEnum string

const (
	CreateRelatedItemRequestBodyTypeEnumContact CreateRelatedItemRequestBodyTypeEnum = "Contact"
	CreateRelatedItemRequestBodyTypeEnumComment CreateRelatedItemRequestBodyTypeEnum = "Comment"
)

func (e CreateRelatedItemRequestBodyTypeEnum) ToPointer() *CreateRelatedItemRequestBodyTypeEnum {
	return &e
}

func (e *CreateRelatedItemRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Contact":
		fallthrough
	case "Comment":
		*e = CreateRelatedItemRequestBodyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRelatedItemRequestBodyTypeEnum: %v", v)
	}
}

type CreateRelatedItemRequestBody struct {
	// Represents the content of a related item to be created.
	Content CreateRelatedItemRequestBodyContent `json:"content"`
	// The type of a related item.
	Type CreateRelatedItemRequestBodyTypeEnum `json:"type"`
}

type CreateRelatedItemRequest struct {
	RequestBody       CreateRelatedItemRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// A unique identifier of the case.
	CaseID string `pathParam:"style=simple,explode=false,name=caseId"`
	// The unique identifier of the Cases domain.
	DomainID string `pathParam:"style=simple,explode=false,name=domainId"`
}

type CreateRelatedItemResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateRelatedItemResponse *shared.CreateRelatedItemResponse
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
