// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateServiceServerList = []string{
	"https://sync.twilio.com",
}

type CreateServiceSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateServiceCreateServiceRequest struct {
	// Whether token identities in the Service must be granted access to Sync objects by using the [Permissions](https://www.twilio.com/docs/sync/api/sync-permissions) resource.
	ACLEnabled *bool `form:"name=AclEnabled"`
	// A string that you assign to describe the resource.
	FriendlyName *string `form:"name=FriendlyName"`
	// Whether every `endpoint_disconnected` event should occur after a configurable delay. The default is `false`, where the `endpoint_disconnected` event occurs immediately after disconnection. When `true`, intervening reconnections can prevent the `endpoint_disconnected` event.
	ReachabilityDebouncingEnabled *bool `form:"name=ReachabilityDebouncingEnabled"`
	// The reachability event delay in milliseconds if `reachability_debouncing_enabled` = `true`.  Must be between 1,000 and 30,000 and defaults to 5,000. This is the number of milliseconds after the last running client disconnects, and a Sync identity is declared offline, before the `webhook_url` is called if all endpoints remain offline. A reconnection from the same identity by any endpoint during this interval prevents the call to `webhook_url`.
	ReachabilityDebouncingWindow *int64 `form:"name=ReachabilityDebouncingWindow"`
	// Whether the service instance should call `webhook_url` when client endpoints connect to Sync. The default is `false`.
	ReachabilityWebhooksEnabled *bool `form:"name=ReachabilityWebhooksEnabled"`
	// The URL we should call when Sync objects are manipulated.
	WebhookURL *string `form:"name=WebhookUrl"`
	// Whether the Service instance should call `webhook_url` when the REST API is used to update Sync objects. The default is `false`.
	WebhooksFromRestEnabled *bool `form:"name=WebhooksFromRestEnabled"`
}

type CreateServiceRequest struct {
	Request   *CreateServiceCreateServiceRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security  CreateServiceSecurity
	ServerURL *string
}

type CreateServiceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	SyncV1Service *shared.SyncV1Service
}
