// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETDescribeEnvironmentHealthActionEnum
type GETDescribeEnvironmentHealthActionEnum string

const (
	GETDescribeEnvironmentHealthActionEnumDescribeEnvironmentHealth GETDescribeEnvironmentHealthActionEnum = "DescribeEnvironmentHealth"
)

func (e *GETDescribeEnvironmentHealthActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeEnvironmentHealth":
		*e = GETDescribeEnvironmentHealthActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEnvironmentHealthActionEnum: %s", s)
	}
}

// GETDescribeEnvironmentHealthVersionEnum
type GETDescribeEnvironmentHealthVersionEnum string

const (
	GETDescribeEnvironmentHealthVersionEnumTwoThousandAndTen1201 GETDescribeEnvironmentHealthVersionEnum = "2010-12-01"
)

func (e *GETDescribeEnvironmentHealthVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETDescribeEnvironmentHealthVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEnvironmentHealthVersionEnum: %s", s)
	}
}

type GETDescribeEnvironmentHealthQueryParams struct {
	Action GETDescribeEnvironmentHealthActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Specify the response elements to return. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns the name of the environment.
	AttributeNames []shared.EnvironmentHealthAttributeEnum `queryParam:"style=form,explode=true,name=AttributeNames"`
	// <p>Specify the environment by ID.</p> <p>You must specify either this or an EnvironmentName, or both.</p>
	EnvironmentID *string `queryParam:"style=form,explode=true,name=EnvironmentId"`
	// <p>Specify the environment by name.</p> <p>You must specify either this or an EnvironmentName, or both.</p>
	EnvironmentName *string                                 `queryParam:"style=form,explode=true,name=EnvironmentName"`
	Version         GETDescribeEnvironmentHealthVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeEnvironmentHealthHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEnvironmentHealthRequest struct {
	QueryParams GETDescribeEnvironmentHealthQueryParams
	Headers     GETDescribeEnvironmentHealthHeaders
}

type GETDescribeEnvironmentHealthResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
