"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import iampolicyanalysisoutputconfig as shared_iampolicyanalysisoutputconfig
from ..shared import iampolicyanalysisquery as shared_iampolicyanalysisquery
from ..shared import options as shared_options
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportIamPolicyAnalysisRequest:
    r"""A request message for AssetService.ExportIamPolicyAnalysis."""
    
    analysis_query: Optional[shared_iampolicyanalysisquery.IamPolicyAnalysisQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysisQuery'), 'exclude': lambda f: f is None }})
    r"""IAM policy analysis query message."""  
    options: Optional[shared_options.Options] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})
    r"""Contains request options."""  
    output_config: Optional[shared_iampolicyanalysisoutputconfig.IamPolicyAnalysisOutputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputConfig'), 'exclude': lambda f: f is None }})
    r"""Output configuration for export IAM policy analysis destination."""  
    