// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BooksLayersAnnotationDataGetSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BooksLayersAnnotationDataGetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// For the dictionary layer. Whether or not to allow web definitions.
	AllowWebDefinitions *bool `queryParam:"style=form,explode=true,name=allowWebDefinitions"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// The ID of the annotation data to retrieve.
	AnnotationDataID string `pathParam:"style=simple,explode=false,name=annotationDataId"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The content version for the volume you are trying to retrieve.
	ContentVersion string `queryParam:"style=form,explode=true,name=contentVersion"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// The requested pixel height for any images. If height is provided width must also be provided.
	H *int64 `queryParam:"style=form,explode=true,name=h"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The ID for the layer to get the annotations.
	LayerID string `pathParam:"style=simple,explode=false,name=layerId"`
	// The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The requested scale for the image.
	Scale *int64 `queryParam:"style=form,explode=true,name=scale"`
	// String to identify the originator of this request.
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// The volume to retrieve annotations for.
	VolumeID string `pathParam:"style=simple,explode=false,name=volumeId"`
	// The requested pixel width for any images. If width is provided height must also be provided.
	W *int64 `queryParam:"style=form,explode=true,name=w"`
}

type BooksLayersAnnotationDataGetResponse struct {
	ContentType string
	// Successful response
	DictionaryAnnotationdata *shared.DictionaryAnnotationdata
	StatusCode               int
	RawResponse              *http.Response
}
