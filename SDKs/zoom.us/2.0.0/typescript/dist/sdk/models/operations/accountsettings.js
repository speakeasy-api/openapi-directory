"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountSettings200ApplicationXMLAccountSettings = exports.AccountSettings200ApplicationXMLAccountSettingsZoomRooms = exports.AccountSettings200ApplicationXMLAccountSettingsTsp = exports.AccountSettings200ApplicationXMLAccountSettingsTelephony = exports.AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions = exports.AccountSettings200ApplicationXMLAccountSettingsSecurity = exports.AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum = exports.AccountSettings200ApplicationXMLAccountSettingsRecording = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchive = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings = exports.AccountSettings200ApplicationXMLAccountSettingsProfile = exports.AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation = exports.AccountSettings200ApplicationXMLAccountSettingsIntegration = exports.AccountSettings200ApplicationXMLAccountSettingsInMeeting = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum = exports.AccountSettings200ApplicationXMLAccountSettingsFeature = exports.AccountSettings200ApplicationXMLAccountSettingsEmailNotification = exports.AccountSettings200ApplicationXml2AccountSettingsAuthentication = exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions = exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum = exports.AccountSettings200ApplicationXml2AccountSettingsAuthentication1 = exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1 = exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 = exports.AccountSettings200ApplicationXml3 = exports.AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationXml3PasswordRequirement = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum = exports.AccountSettingsRequest = exports.AccountSettingsOptionEnum = void 0;
exports.AccountSettingsResponse = exports.AccountSettings200ApplicationJSONAccountSettings = exports.AccountSettings200ApplicationJSONAccountSettingsZoomRooms = exports.AccountSettings200ApplicationJSONAccountSettingsTsp = exports.AccountSettings200ApplicationJSONAccountSettingsTelephony = exports.AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions = exports.AccountSettings200ApplicationJSONAccountSettingsSecurity = exports.AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum = exports.AccountSettings200ApplicationJSONAccountSettingsRecording = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchive = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings = exports.AccountSettings200ApplicationJSONAccountSettingsProfile = exports.AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation = exports.AccountSettings200ApplicationJSONAccountSettingsIntegration = exports.AccountSettings200ApplicationJSONAccountSettingsInMeeting = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum = exports.AccountSettings200ApplicationJSONAccountSettingsFeature = exports.AccountSettings200ApplicationJSONAccountSettingsEmailNotification = exports.AccountSettings200ApplicationJson2AccountSettingsAuthentication = exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions = exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum = exports.AccountSettings200ApplicationJson2AccountSettingsAuthentication1 = exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1 = exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 = exports.AccountSettings200ApplicationJson3 = exports.AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationJson3PasswordRequirement = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * `meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.<br>`security`: Use this query parameter to view security settings such as password requirements for user login, two factor authentication etc., applied on the account.<br>
 *
 * @remarks
 * `meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>
 */
var AccountSettingsOptionEnum;
(function (AccountSettingsOptionEnum) {
    AccountSettingsOptionEnum["MeetingAuthentication"] = "meeting_authentication";
    AccountSettingsOptionEnum["RecordingAuthentication"] = "recording_authentication";
})(AccountSettingsOptionEnum = exports.AccountSettingsOptionEnum || (exports.AccountSettingsOptionEnum = {}));
var AccountSettingsRequest = /** @class */ (function (_super) {
    __extends(AccountSettingsRequest, _super);
    function AccountSettingsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=accountId",
        }),
        __metadata("design:type", String)
    ], AccountSettingsRequest.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=custom_query_fields",
        }),
        __metadata("design:type", String)
    ], AccountSettingsRequest.prototype, "customQueryFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=option",
        }),
        __metadata("design:type", String)
    ], AccountSettingsRequest.prototype, "option", void 0);
    return AccountSettingsRequest;
}(utils_1.SpeakeasyBase));
exports.AccountSettingsRequest = AccountSettingsRequest;
/**
 * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
 *
 * @remarks
 * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
 *
 * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
 */
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum;
(function (AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum) {
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum["EnhancedEncryption"] = "enhanced_encryption";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum["E2ee"] = "e2ee";
})(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum || (exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum = {}));
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum;
(function (AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum) {
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Zero"] = "0";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Four"] = "4";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Five"] = "5";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Six"] = "6";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Seven"] = "7";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Eight"] = "8";
})(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum || (exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum = {}));
/**
 * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
 */
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement, _super);
    function AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveLetter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveUpperAndLowerCharacters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "onlyAllowNumeric", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement = AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement;
/**
 *
 * @remarks
 *
 * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
 * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
 */
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum;
(function (AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum) {
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum["Zero"] = "0";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum["One"] = "1";
    AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum["Two"] = "2";
})(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum = exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum || (exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum = {}));
/**
 * Specify the settings to be applied if waiting room is enabled.
 */
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings, _super);
    function AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings.prototype, "participantsToPlaceInWaitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings.prototype, "usersWhoCanAdmitParticipantsFromWaitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings.prototype, "whitelistedDomainsForWaitingRoom", void 0);
    return AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings = AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings;
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity, _super);
    function AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "autoSecurity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "embedPasswordInJoinLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "encryptionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "endToEndEncryptedMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "meetingPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "meetingPasswordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "phonePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "pmiPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "requirePasswordForScheduledMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "requirePasswordForScheduledWebinar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "waitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "waitingRoomSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "webinarPassword", void 0);
    return AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity = AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity;
var AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings, _super);
    function AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLMeetingWebinarSecuritySettingsMeetingSecurity)
    ], AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings.prototype, "meetingSecurity", void 0);
    return AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings = AccountSettings200ApplicationXMLMeetingWebinarSecuritySettings;
/**
 * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
 */
var AccountSettings200ApplicationXml3PasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXml3PasswordRequirement, _super);
    function AccountSettings200ApplicationXml3PasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXml3PasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml3PasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXml3PasswordRequirement.prototype, "minimumPasswordLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml3PasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationXml3PasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXml3PasswordRequirement = AccountSettings200ApplicationXml3PasswordRequirement;
/**
 * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
 *
 * @remarks
 * `all`: Two factor authentication will be enabled for all users in the account.<br>
 * `none`: Two factor authentication is disabled.<br>
 * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
 * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
 * `sign_in_with_two_factor_auth_roles` field.
 *
 */
var AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum;
(function (AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum) {
    AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum["All"] = "all";
    AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum["Group"] = "group";
    AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum["Role"] = "role";
    AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum["None"] = "none";
})(AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum || (exports.AccountSettings200ApplicationXml3SignInWithTwoFactorAuthEnum = {}));
/**
 * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
 */
var AccountSettings200ApplicationXml3 = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXml3, _super);
    function AccountSettings200ApplicationXml3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml3.prototype, "adminChangeNamePic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml3.prototype, "hideBillingInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml3.prototype, "importPhotosFromDevices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXml3PasswordRequirement)
    ], AccountSettings200ApplicationXml3.prototype, "passwordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXml3.prototype, "signAgainPeriodForInactivityOnClient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXml3.prototype, "signAgainPeriodForInactivityOnWeb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml3.prototype, "signInWithTwoFactorAuth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXml3.prototype, "signInWithTwoFactorAuthGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXml3.prototype, "signInWithTwoFactorAuthRoles", void 0);
    return AccountSettings200ApplicationXml3;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXml3 = AccountSettings200ApplicationXml3;
/**
 * Authentication type
 */
var AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1;
(function (AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1) {
    AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1["Internally"] = "internally";
    AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1["EnforceLogin"] = "enforce_login";
    AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1["EnforceLoginWithDomains"] = "enforce_login_with_domains";
})(AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 = exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 || (exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 = {}));
var AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1 = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1, _super);
    function AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "defaultOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "domains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "visible", void 0);
    return AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1 = AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1;
var AccountSettings200ApplicationXml2AccountSettingsAuthentication1 = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXml2AccountSettingsAuthentication1, _super);
    function AccountSettings200ApplicationXml2AccountSettingsAuthentication1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions1,
        }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthentication1.prototype, "authenticationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthentication1.prototype, "recordingAuthentication", void 0);
    return AccountSettings200ApplicationXml2AccountSettingsAuthentication1;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXml2AccountSettingsAuthentication1 = AccountSettings200ApplicationXml2AccountSettingsAuthentication1;
/**
 *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
 *
 * @remarks
 *  * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
 *  * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
 *  * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
 */
var AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum;
(function (AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum) {
    AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum["EnforceLogin"] = "enforce_login";
    AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum["EnforceLoginWithSameAccount"] = "enforce_login_with_same_account";
    AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum["EnforceLoginWithDomains"] = "enforce_login_with_domains";
})(AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum = exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum || (exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum = {}));
var AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions, _super);
    function AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions.prototype, "defaultOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions.prototype, "domains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions.prototype, "visible", void 0);
    return AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions = AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions;
var AccountSettings200ApplicationXml2AccountSettingsAuthentication = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXml2AccountSettingsAuthentication, _super);
    function AccountSettings200ApplicationXml2AccountSettingsAuthentication() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AccountSettings200ApplicationXml2AccountSettingsAuthenticationAuthenticationOptions,
        }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthentication.prototype, "authenticationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXml2AccountSettingsAuthentication.prototype, "meetingAuthentication", void 0);
    return AccountSettings200ApplicationXml2AccountSettingsAuthentication;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXml2AccountSettingsAuthentication = AccountSettings200ApplicationXml2AccountSettingsAuthentication;
/**
 * Account Settings: Notification.
 */
var AccountSettings200ApplicationXMLAccountSettingsEmailNotification = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsEmailNotification, _super);
    function AccountSettings200ApplicationXMLAccountSettingsEmailNotification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsEmailNotification.prototype, "alternativeHostReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsEmailNotification.prototype, "cancelMeetingReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsEmailNotification.prototype, "cloudRecordingAvaliableReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsEmailNotification.prototype, "jbhReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsEmailNotification.prototype, "lowHostCountReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsEmailNotification.prototype, "scheduleForReminder", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsEmailNotification;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsEmailNotification = AccountSettings200ApplicationXMLAccountSettingsEmailNotification;
/**
 * Account Settings: Feature.
 */
var AccountSettings200ApplicationXMLAccountSettingsFeature = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsFeature, _super);
    function AccountSettings200ApplicationXMLAccountSettingsFeature() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsFeature.prototype, "meetingCapacity", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsFeature;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsFeature = AccountSettings200ApplicationXMLAccountSettingsFeature;
/**
 * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
 *
 * @remarks
 *
 */
var AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum) {
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Eu"] = "EU";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Hk"] = "HK";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Au"] = "AU";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["In"] = "IN";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Ty"] = "TY";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Cn"] = "CN";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Us"] = "US";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum["Ca"] = "CA";
})(AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingDataCenterRegionsEnum = {}));
/**
 * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
 */
var AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum) {
    AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum["Host"] = "host";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum["All"] = "all";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum["None"] = "none";
})(AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingEntryExitChimeEnum = {}));
var AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles, _super);
    function AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "isDefault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "type", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles = AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles;
/**
 * Settings to manage virtual background.
 */
var AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings, _super);
    function AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "allowUploadCustom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "allowVideos", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettingsFiles,
        }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "files", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings = AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings;
/**
 * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
 *
 * @remarks
 * `host`: Only host can share the screen.<br>
 * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
 *
 */
var AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum) {
    AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum["Host"] = "host";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum["All"] = "all";
})(AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenEnum = {}));
/**
 * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
 *
 * @remarks
 * `host`: Only a host can share the screen when someone else is sharing.<br>
 * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
 *
 */
var AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum) {
    AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum["Host"] = "host";
    AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum["All"] = "all";
})(AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum = exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum = {}));
/**
 * Account Settings: In Meeting.
 */
var AccountSettings200ApplicationXMLAccountSettingsInMeeting = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsInMeeting, _super);
    function AccountSettings200ApplicationXMLAccountSettingsInMeeting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "alertGuestJoin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "allowLiveStreaming", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "allowParticipantsToRename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "allowShowZoomWindows", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "annotation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "anonymousQuestionAnswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "attendeeOnHold", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "autoAnswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "autoSavingChat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "breakoutRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "chat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "closedCaption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "coHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "customDataCenterRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "customLiveStreamingService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "customServiceInstructions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "dataCenterRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "dscpAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "dscpMarking", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "dscpVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "e2eEncryption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "entryExitChime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "farEndCameraControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "feedback", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "fileTransfer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "groupHd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "meetingReactions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "originalAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "p2pConnetion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "p2pPorts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "polling", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "portsRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "postMeetingFeedback", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "privateChat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "recordPlayOwnVoice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "remoteControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "requestPermissionToUnmute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "screenSharing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "sendingDefaultEmailInvites", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "showAJoinFromYourBrowserLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "showMeetingControlToolbar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "stereoAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "useHtmlFormatEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "virtualBackground", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsInMeetingVirtualBackgroundSettings)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "virtualBackgroundSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "watermark", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "webinarQuestionAnswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "whiteboard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "whoCanShareScreen", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "whoCanShareScreenWhenSomeoneIsSharing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsInMeeting.prototype, "workplaceByFacebook", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsInMeeting;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsInMeeting = AccountSettings200ApplicationXMLAccountSettingsInMeeting;
/**
 * Account Settings: Integration.
 */
var AccountSettings200ApplicationXMLAccountSettingsIntegration = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsIntegration, _super);
    function AccountSettings200ApplicationXMLAccountSettingsIntegration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsIntegration.prototype, "box", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsIntegration.prototype, "dropbox", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsIntegration.prototype, "googleCalendar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsIntegration.prototype, "googleDrive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsIntegration.prototype, "kubi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsIntegration.prototype, "microsoftOneDrive", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsIntegration;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsIntegration = AccountSettings200ApplicationXMLAccountSettingsIntegration;
var AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation, _super);
    function AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation.prototype, "allowedValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation.prototype, "value", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation = AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation;
var AccountSettings200ApplicationXMLAccountSettingsProfile = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsProfile, _super);
    function AccountSettings200ApplicationXMLAccountSettingsProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsProfileRecordingStorageLocation)
    ], AccountSettings200ApplicationXMLAccountSettingsProfile.prototype, "recordingStorageLocation", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsProfile;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsProfile = AccountSettings200ApplicationXMLAccountSettingsProfile;
var AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings, _super);
    function AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings.prototype, "audioFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings.prototype, "ccTranscriptFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings.prototype, "chatFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings.prototype, "chatWithSenderEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings.prototype, "videoFile", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings = AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings;
/**
 * Archive types:
 *
 * @remarks
 *
 * * `1`: Only meetings are archived.<br>
 * * `2`: Only webinars are archived.<br>
 * * `3`: Both meetings and webinars are archived.
 */
var AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum) {
    AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum["One"] = "1";
    AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum["Two"] = "2";
    AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum["Three"] = "3";
})(AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveTypeEnum = {}));
/**
 * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
 */
var AccountSettings200ApplicationXMLAccountSettingsRecordingArchive = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsRecordingArchive, _super);
    function AccountSettings200ApplicationXMLAccountSettingsRecordingArchive() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchive.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsRecordingArchiveSettings)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchive.prototype, "settings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingArchive.prototype, "type", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsRecordingArchive;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsRecordingArchive = AccountSettings200ApplicationXMLAccountSettingsRecordingArchive;
/**
 * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
 */
var AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum) {
    AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum["Local"] = "local";
    AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum["Cloud"] = "cloud";
    AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum["None"] = "none";
})(AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum = exports.AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsRecordingAutoRecordingEnum = {}));
/**
 * Setting to allow cloud recording access only from specific IP address ranges.
 *
 * @remarks
 *
 */
var AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl, _super);
    function AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl.prototype, "ipAddressesOrRanges", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl = AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl;
/**
 * This object represents the minimum password requirements set for recordings via Account Recording Settings.
 */
var AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement, _super);
    function AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement.prototype, "haveLetter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement.prototype, "haveNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement.prototype, "onlyAllowNumeric", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement = AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement;
/**
 * Account Settings: Recording.
 */
var AccountSettings200ApplicationXMLAccountSettingsRecording = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsRecording, _super);
    function AccountSettings200ApplicationXMLAccountSettingsRecording() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "accountUserAccessRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "allowRecoveryDeletedCloudRecordings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsRecordingArchive)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "archive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "autoDeleteCmr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "autoDeleteCmrDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "autoRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "cloudRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "cloudRecordingDownload", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "cloudRecordingDownloadHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "hostDeleteCloudRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsRecordingIpAddressAccessControl)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "ipAddressAccessControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "localRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "preventHostAccessRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "recordAudioFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "recordGalleryView", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "recordSpeakerView", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "recordingAudioTranscript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "recordingDisclaimer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsRecordingRecordingPasswordRequirement)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "recordingPasswordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "requiredPasswordForExistingCloudRecordings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "saveChatText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsRecording.prototype, "showTimestamp", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsRecording;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsRecording = AccountSettings200ApplicationXMLAccountSettingsRecording;
/**
 * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
 */
var AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum) {
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum["Both"] = "both";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum["Telephony"] = "telephony";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum["Voip"] = "voip";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum["ThirdParty"] = "thirdParty";
})(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum = {}));
var AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum) {
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Zero"] = "0";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Four"] = "4";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Five"] = "5";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Six"] = "6";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Seven"] = "7";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Eight"] = "8";
})(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum = {}));
/**
 * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
 */
var AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement, _super);
    function AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveLetter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveUpperAndLowerCharacters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "onlyAllowNumeric", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement = AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement;
/**
 * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
 *
 * @remarks
 *
 */
var AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum) {
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum["JbhOnly"] = "jbh_only";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum["All"] = "all";
    AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum["None"] = "none";
})(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum = exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum = {}));
/**
 * Account Settings: Schedule Meeting.
 */
var AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting, _super);
    function AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "audioType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "enforceLogin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "enforceLoginDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "enforceLoginWithDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "forcePmiJbhPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "hostVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "joinBeforeHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "meetingPasswordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "notStoreMeetingTopic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "participantVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "personalMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "requirePasswordForInstantMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "requirePasswordForPmiMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "requirePasswordForScheduledMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "requirePasswordForSchedulingNewMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "usePmiForInstantMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting.prototype, "usePmiForScheduledMeetings", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting = AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting;
/**
 * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
 */
var AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement, _super);
    function AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement.prototype, "minimumPasswordLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement = AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement;
/**
 * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
 *
 * @remarks
 * `all`: Two factor authentication will be enabled for all users in the account.<br>
 * `none`: Two factor authentication is disabled.<br>
 * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
 * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
 * `sign_in_with_two_factor_auth_roles` field.
 *
 */
var AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum;
(function (AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum) {
    AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum["All"] = "all";
    AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum["Group"] = "group";
    AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum["Role"] = "role";
    AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum["None"] = "none";
})(AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum || (exports.AccountSettings200ApplicationXMLAccountSettingsSecuritySignInWithTwoFactorAuthEnum = {}));
/**
 * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
 */
var AccountSettings200ApplicationXMLAccountSettingsSecurity = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsSecurity, _super);
    function AccountSettings200ApplicationXMLAccountSettingsSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "adminChangeNamePic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "hideBillingInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "importPhotosFromDevices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "passwordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "signAgainPeriodForInactivityOnClient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "signAgainPeriodForInactivityOnWeb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "signInWithTwoFactorAuth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "signInWithTwoFactorAuthGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsSecurity.prototype, "signInWithTwoFactorAuthRoles", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsSecurity;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsSecurity = AccountSettings200ApplicationXMLAccountSettingsSecurity;
/**
 * Indicates where most of the participants call into or call from duriing a meeting.
 */
var AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions, _super);
    function AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions.prototype, "allowedValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions.prototype, "selectionValues", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions = AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions;
/**
 * Account Settings: Telephony.
 */
var AccountSettings200ApplicationXMLAccountSettingsTelephony = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsTelephony, _super);
    function AccountSettings200ApplicationXMLAccountSettingsTelephony() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationXMLAccountSettingsTelephony.prototype, "audioConferenceInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsTelephonyTelephonyRegions)
    ], AccountSettings200ApplicationXMLAccountSettingsTelephony.prototype, "telephonyRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsTelephony.prototype, "thirdPartyAudio", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsTelephony;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsTelephony = AccountSettings200ApplicationXMLAccountSettingsTelephony;
/**
 * Account Settings: TSP.
 */
var AccountSettings200ApplicationXMLAccountSettingsTsp = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsTsp, _super);
    function AccountSettings200ApplicationXMLAccountSettingsTsp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsTsp.prototype, "callOut", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationXMLAccountSettingsTsp.prototype, "callOutCountries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsTsp.prototype, "displayTollFreeNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsTsp.prototype, "showInternationalNumbersLink", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsTsp;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsTsp = AccountSettings200ApplicationXMLAccountSettingsTsp;
/**
 * Account Settings: Zoom Rooms.
 */
var AccountSettings200ApplicationXMLAccountSettingsZoomRooms = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettingsZoomRooms, _super);
    function AccountSettings200ApplicationXMLAccountSettingsZoomRooms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "autoStartStopScheduledMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "cmrForInstantMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "forcePrivateMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "hideHostInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "listMeetingsWithCalendar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "startAirplayManually", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "ultrasonic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "upcomingMeetingAlert", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "weeklySystemRestart", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationXMLAccountSettingsZoomRooms.prototype, "zrPostMeetingFeedback", void 0);
    return AccountSettings200ApplicationXMLAccountSettingsZoomRooms;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettingsZoomRooms = AccountSettings200ApplicationXMLAccountSettingsZoomRooms;
var AccountSettings200ApplicationXMLAccountSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationXMLAccountSettings, _super);
    function AccountSettings200ApplicationXMLAccountSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsEmailNotification)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "emailNotification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsFeature)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "feature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsInMeeting)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "inMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsIntegration)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "integration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsProfile)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsRecording)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "recording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "scheduleMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsSecurity)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "security", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsTelephony)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "telephony", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsTsp)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "tsp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AccountSettings200ApplicationXMLAccountSettingsZoomRooms)
    ], AccountSettings200ApplicationXMLAccountSettings.prototype, "zoomRooms", void 0);
    return AccountSettings200ApplicationXMLAccountSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationXMLAccountSettings = AccountSettings200ApplicationXMLAccountSettings;
/**
 * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
 *
 * @remarks
 * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
 *
 * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
 */
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum;
(function (AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum) {
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum["EnhancedEncryption"] = "enhanced_encryption";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum["E2ee"] = "e2ee";
})(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum || (exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityEncryptionTypeEnum = {}));
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum;
(function (AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum) {
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Zero"] = "0";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Four"] = "4";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Five"] = "5";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Six"] = "6";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Seven"] = "7";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Eight"] = "8";
})(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum || (exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirementConsecutiveCharactersLengthEnum = {}));
/**
 * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
 */
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement, _super);
    function AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "consecutive_characters_length" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_letter" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveLetter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_number" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_special_character" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_upper_and_lower_characters" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "haveUpperAndLowerCharacters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "only_allow_numeric" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "onlyAllowNumeric", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weak_enhance_detection" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement = AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement;
/**
 *
 * @remarks
 *
 * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
 * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
 */
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum;
(function (AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum) {
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum["Zero"] = "0";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum["One"] = "1";
    AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum["Two"] = "2";
})(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum = exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum || (exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum = {}));
/**
 * Specify the settings to be applied if waiting room is enabled.
 */
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings, _super);
    function AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "participants_to_place_in_waiting_room" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings.prototype, "participantsToPlaceInWaitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "users_who_can_admit_participants_from_waiting_room" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings.prototype, "usersWhoCanAdmitParticipantsFromWaitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "whitelisted_domains_for_waiting_room" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings.prototype, "whitelistedDomainsForWaitingRoom", void 0);
    return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings = AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings;
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity, _super);
    function AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_security" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "autoSecurity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "embed_password_in_join_link" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "embedPasswordInJoinLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encryption_type" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "encryptionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_to_end_encrypted_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "endToEndEncryptedMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_password" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "meetingPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_password_requirement" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityMeetingPasswordRequirement)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "meetingPasswordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "phone_password" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "phonePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pmi_password" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "pmiPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "require_password_for_scheduled_meeting" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "requirePasswordForScheduledMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "require_password_for_scheduled_webinar" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "requirePasswordForScheduledWebinar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "waiting_room" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "waitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "waiting_room_settings" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "waitingRoomSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "webinar_password" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity.prototype, "webinarPassword", void 0);
    return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity = AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity;
var AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings, _super);
    function AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_security" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurity)
    ], AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings.prototype, "meetingSecurity", void 0);
    return AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings = AccountSettings200ApplicationJSONMeetingWebinarSecuritySettings;
/**
 * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
 */
var AccountSettings200ApplicationJson3PasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJson3PasswordRequirement, _super);
    function AccountSettings200ApplicationJson3PasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "consecutive_characters_length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJson3PasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_special_character" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson3PasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "minimum_password_length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJson3PasswordRequirement.prototype, "minimumPasswordLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weak_enhance_detection" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson3PasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationJson3PasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJson3PasswordRequirement = AccountSettings200ApplicationJson3PasswordRequirement;
/**
 * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
 *
 * @remarks
 * `all`: Two factor authentication will be enabled for all users in the account.<br>
 * `none`: Two factor authentication is disabled.<br>
 * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
 * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
 * `sign_in_with_two_factor_auth_roles` field.
 *
 */
var AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum;
(function (AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum) {
    AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum["All"] = "all";
    AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum["Group"] = "group";
    AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum["Role"] = "role";
    AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum["None"] = "none";
})(AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum || (exports.AccountSettings200ApplicationJson3SignInWithTwoFactorAuthEnum = {}));
/**
 * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
 */
var AccountSettings200ApplicationJson3 = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJson3, _super);
    function AccountSettings200ApplicationJson3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "admin_change_name_pic" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson3.prototype, "adminChangeNamePic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hide_billing_info" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson3.prototype, "hideBillingInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "import_photos_from_devices" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson3.prototype, "importPhotosFromDevices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password_requirement" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJson3PasswordRequirement; }),
        __metadata("design:type", AccountSettings200ApplicationJson3PasswordRequirement)
    ], AccountSettings200ApplicationJson3.prototype, "passwordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_again_period_for_inactivity_on_client" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJson3.prototype, "signAgainPeriodForInactivityOnClient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_again_period_for_inactivity_on_web" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJson3.prototype, "signAgainPeriodForInactivityOnWeb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_in_with_two_factor_auth" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson3.prototype, "signInWithTwoFactorAuth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_in_with_two_factor_auth_groups" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJson3.prototype, "signInWithTwoFactorAuthGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_in_with_two_factor_auth_roles" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJson3.prototype, "signInWithTwoFactorAuthRoles", void 0);
    return AccountSettings200ApplicationJson3;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJson3 = AccountSettings200ApplicationJson3;
/**
 * Authentication type
 */
var AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1;
(function (AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1) {
    AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1["Internally"] = "internally";
    AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1["EnforceLogin"] = "enforce_login";
    AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1["EnforceLoginWithDomains"] = "enforce_login_with_domains";
})(AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 = exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 || (exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum1 = {}));
var AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1 = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1, _super);
    function AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "default_option" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "defaultOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domains" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "domains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visible" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1.prototype, "visible", void 0);
    return AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1 = AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1;
var AccountSettings200ApplicationJson2AccountSettingsAuthentication1 = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJson2AccountSettingsAuthentication1, _super);
    function AccountSettings200ApplicationJson2AccountSettingsAuthentication1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1,
        }),
        (0, class_transformer_1.Expose)({ name: "authentication_options" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions1;
        }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthentication1.prototype, "authenticationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording_authentication" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthentication1.prototype, "recordingAuthentication", void 0);
    return AccountSettings200ApplicationJson2AccountSettingsAuthentication1;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJson2AccountSettingsAuthentication1 = AccountSettings200ApplicationJson2AccountSettingsAuthentication1;
/**
 *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
 *
 * @remarks
 *  * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
 *  * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
 *  * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
 */
var AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum;
(function (AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum) {
    AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum["EnforceLogin"] = "enforce_login";
    AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum["EnforceLoginWithSameAccount"] = "enforce_login_with_same_account";
    AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum["EnforceLoginWithDomains"] = "enforce_login_with_domains";
})(AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum = exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum || (exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptionsTypeEnum = {}));
var AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions, _super);
    function AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "default_option" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions.prototype, "defaultOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domains" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions.prototype, "domains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visible" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions.prototype, "visible", void 0);
    return AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions = AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions;
var AccountSettings200ApplicationJson2AccountSettingsAuthentication = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJson2AccountSettingsAuthentication, _super);
    function AccountSettings200ApplicationJson2AccountSettingsAuthentication() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions,
        }),
        (0, class_transformer_1.Expose)({ name: "authentication_options" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJson2AccountSettingsAuthenticationAuthenticationOptions;
        }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthentication.prototype, "authenticationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_authentication" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJson2AccountSettingsAuthentication.prototype, "meetingAuthentication", void 0);
    return AccountSettings200ApplicationJson2AccountSettingsAuthentication;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJson2AccountSettingsAuthentication = AccountSettings200ApplicationJson2AccountSettingsAuthentication;
/**
 * Account Settings: Notification.
 */
var AccountSettings200ApplicationJSONAccountSettingsEmailNotification = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsEmailNotification, _super);
    function AccountSettings200ApplicationJSONAccountSettingsEmailNotification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alternative_host_reminder" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsEmailNotification.prototype, "alternativeHostReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancel_meeting_reminder" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsEmailNotification.prototype, "cancelMeetingReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloud_recording_avaliable_reminder" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsEmailNotification.prototype, "cloudRecordingAvaliableReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "jbh_reminder" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsEmailNotification.prototype, "jbhReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "low_host_count_reminder" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsEmailNotification.prototype, "lowHostCountReminder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule_for_reminder" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsEmailNotification.prototype, "scheduleForReminder", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsEmailNotification;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsEmailNotification = AccountSettings200ApplicationJSONAccountSettingsEmailNotification;
/**
 * Account Settings: Feature.
 */
var AccountSettings200ApplicationJSONAccountSettingsFeature = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsFeature, _super);
    function AccountSettings200ApplicationJSONAccountSettingsFeature() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_capacity" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsFeature.prototype, "meetingCapacity", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsFeature;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsFeature = AccountSettings200ApplicationJSONAccountSettingsFeature;
/**
 * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
 *
 * @remarks
 *
 */
var AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum) {
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Eu"] = "EU";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Hk"] = "HK";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Au"] = "AU";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["In"] = "IN";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Ty"] = "TY";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Cn"] = "CN";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Us"] = "US";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum["Ca"] = "CA";
})(AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingDataCenterRegionsEnum = {}));
/**
 * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
 */
var AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum) {
    AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum["Host"] = "host";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum["All"] = "all";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum["None"] = "none";
})(AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingEntryExitChimeEnum = {}));
var AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles, _super);
    function AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_default" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "isDefault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles.prototype, "type", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles = AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles;
/**
 * Settings to manage virtual background.
 */
var AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings, _super);
    function AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_upload_custom" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "allowUploadCustom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_videos" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "allowVideos", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles,
        }),
        (0, class_transformer_1.Expose)({ name: "files" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettingsFiles;
        }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings.prototype, "files", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings = AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings;
/**
 * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
 *
 * @remarks
 * `host`: Only host can share the screen.<br>
 * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
 *
 */
var AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum) {
    AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum["Host"] = "host";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum["All"] = "all";
})(AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenEnum = {}));
/**
 * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
 *
 * @remarks
 * `host`: Only a host can share the screen when someone else is sharing.<br>
 * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
 *
 */
var AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum) {
    AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum["Host"] = "host";
    AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum["All"] = "all";
})(AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum = exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsInMeetingWhoCanShareScreenWhenSomeoneIsSharingEnum = {}));
/**
 * Account Settings: In Meeting.
 */
var AccountSettings200ApplicationJSONAccountSettingsInMeeting = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsInMeeting, _super);
    function AccountSettings200ApplicationJSONAccountSettingsInMeeting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alert_guest_join" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "alertGuestJoin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_live_streaming" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "allowLiveStreaming", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_participants_to_rename" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "allowParticipantsToRename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_show_zoom_windows" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "allowShowZoomWindows", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "annotation" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "annotation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "anonymous_question_answer" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "anonymousQuestionAnswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attendee_on_hold" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "attendeeOnHold", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_answer" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "autoAnswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_saving_chat" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "autoSavingChat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "breakout_room" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "breakoutRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chat" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "chat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "closed_caption" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "closedCaption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "co_host" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "coHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_data_center_regions" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "customDataCenterRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_live_streaming_service" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "customLiveStreamingService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_service_instructions" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "customServiceInstructions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data_center_regions" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "dataCenterRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dscp_audio" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "dscpAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dscp_marking" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "dscpMarking", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dscp_video" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "dscpVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "e2e_encryption" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "e2eEncryption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "entry_exit_chime" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "entryExitChime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "far_end_camera_control" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "farEndCameraControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "feedback" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "feedback", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "file_transfer" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "fileTransfer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "group_hd" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "groupHd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_reactions" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "meetingReactions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "original_audio" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "originalAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p2p_connetion" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "p2pConnetion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p2p_ports" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "p2pPorts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "polling" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "polling", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ports_range" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "portsRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "post_meeting_feedback" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "postMeetingFeedback", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "private_chat" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "privateChat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "record_play_own_voice" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "recordPlayOwnVoice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remote_control" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "remoteControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "request_permission_to_unmute" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "requestPermissionToUnmute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "screen_sharing" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "screenSharing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sending_default_email_invites" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "sendingDefaultEmailInvites", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "show_a_join_from_your_browser_link" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "showAJoinFromYourBrowserLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "show_meeting_control_toolbar" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "showMeetingControlToolbar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stereo_audio" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "stereoAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "use_html_format_email" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "useHtmlFormatEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "virtual_background" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "virtualBackground", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "virtual_background_settings" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsInMeetingVirtualBackgroundSettings)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "virtualBackgroundSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "watermark" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "watermark", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "webinar_question_answer" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "webinarQuestionAnswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "whiteboard" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "whiteboard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "who_can_share_screen" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "whoCanShareScreen", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "who_can_share_screen_when_someone_is_sharing" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "whoCanShareScreenWhenSomeoneIsSharing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workplace_by_facebook" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsInMeeting.prototype, "workplaceByFacebook", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsInMeeting;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsInMeeting = AccountSettings200ApplicationJSONAccountSettingsInMeeting;
/**
 * Account Settings: Integration.
 */
var AccountSettings200ApplicationJSONAccountSettingsIntegration = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsIntegration, _super);
    function AccountSettings200ApplicationJSONAccountSettingsIntegration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "box" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsIntegration.prototype, "box", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dropbox" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsIntegration.prototype, "dropbox", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "google_calendar" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsIntegration.prototype, "googleCalendar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "google_drive" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsIntegration.prototype, "googleDrive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kubi" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsIntegration.prototype, "kubi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "microsoft_one_drive" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsIntegration.prototype, "microsoftOneDrive", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsIntegration;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsIntegration = AccountSettings200ApplicationJSONAccountSettingsIntegration;
var AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation, _super);
    function AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowed_values" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation.prototype, "allowedValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation.prototype, "value", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation = AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation;
var AccountSettings200ApplicationJSONAccountSettingsProfile = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsProfile, _super);
    function AccountSettings200ApplicationJSONAccountSettingsProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording_storage_location" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsProfileRecordingStorageLocation)
    ], AccountSettings200ApplicationJSONAccountSettingsProfile.prototype, "recordingStorageLocation", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsProfile;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsProfile = AccountSettings200ApplicationJSONAccountSettingsProfile;
var AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings, _super);
    function AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "audio_file" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings.prototype, "audioFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cc_transcript_file" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings.prototype, "ccTranscriptFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chat_file" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings.prototype, "chatFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chat_with_sender_email" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings.prototype, "chatWithSenderEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "video_file" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings.prototype, "videoFile", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings = AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings;
/**
 * Archive types:
 *
 * @remarks
 *
 * * `1`: Only meetings are archived.<br>
 * * `2`: Only webinars are archived.<br>
 * * `3`: Both meetings and webinars are archived.
 */
var AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum) {
    AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum["One"] = "1";
    AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum["Two"] = "2";
    AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum["Three"] = "3";
})(AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveTypeEnum = {}));
/**
 * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
 */
var AccountSettings200ApplicationJSONAccountSettingsRecordingArchive = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsRecordingArchive, _super);
    function AccountSettings200ApplicationJSONAccountSettingsRecordingArchive() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchive.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "settings" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsRecordingArchiveSettings)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchive.prototype, "settings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingArchive.prototype, "type", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsRecordingArchive;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsRecordingArchive = AccountSettings200ApplicationJSONAccountSettingsRecordingArchive;
/**
 * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
 */
var AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum) {
    AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum["Local"] = "local";
    AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum["Cloud"] = "cloud";
    AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum["None"] = "none";
})(AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum = exports.AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsRecordingAutoRecordingEnum = {}));
/**
 * Setting to allow cloud recording access only from specific IP address ranges.
 *
 * @remarks
 *
 */
var AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl, _super);
    function AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip_addresses_or_ranges" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl.prototype, "ipAddressesOrRanges", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl = AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl;
/**
 * This object represents the minimum password requirements set for recordings via Account Recording Settings.
 */
var AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement, _super);
    function AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_letter" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement.prototype, "haveLetter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_number" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement.prototype, "haveNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_special_character" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "only_allow_numeric" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement.prototype, "onlyAllowNumeric", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement = AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement;
/**
 * Account Settings: Recording.
 */
var AccountSettings200ApplicationJSONAccountSettingsRecording = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsRecording, _super);
    function AccountSettings200ApplicationJSONAccountSettingsRecording() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_user_access_recording" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "accountUserAccessRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_recovery_deleted_cloud_recordings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "allowRecoveryDeletedCloudRecordings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archive" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsRecordingArchive; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsRecordingArchive)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "archive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_delete_cmr" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "autoDeleteCmr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_delete_cmr_days" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "autoDeleteCmrDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_recording" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "autoRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloud_recording" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "cloudRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloud_recording_download" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "cloudRecordingDownload", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloud_recording_download_host" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "cloudRecordingDownloadHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host_delete_cloud_recording" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "hostDeleteCloudRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip_address_access_control" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsRecordingIpAddressAccessControl)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "ipAddressAccessControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "local_recording" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "localRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "prevent_host_access_recording" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "preventHostAccessRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "record_audio_file" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "recordAudioFile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "record_gallery_view" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "recordGalleryView", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "record_speaker_view" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "recordSpeakerView", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording_audio_transcript" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "recordingAudioTranscript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording_disclaimer" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "recordingDisclaimer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording_password_requirement" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsRecordingRecordingPasswordRequirement)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "recordingPasswordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "required_password_for_existing_cloud_recordings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "requiredPasswordForExistingCloudRecordings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "save_chat_text" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "saveChatText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "show_timestamp" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsRecording.prototype, "showTimestamp", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsRecording;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsRecording = AccountSettings200ApplicationJSONAccountSettingsRecording;
/**
 * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
 */
var AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum) {
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum["Both"] = "both";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum["Telephony"] = "telephony";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum["Voip"] = "voip";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum["ThirdParty"] = "thirdParty";
})(AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingAudioTypeEnum = {}));
var AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum) {
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Zero"] = "0";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Four"] = "4";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Five"] = "5";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Six"] = "6";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Seven"] = "7";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum["Eight"] = "8";
})(AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirementConsecutiveCharactersLengthEnum = {}));
/**
 * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
 */
var AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement, _super);
    function AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "consecutive_characters_length" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_letter" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveLetter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_number" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_special_character" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_upper_and_lower_characters" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "haveUpperAndLowerCharacters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "only_allow_numeric" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "onlyAllowNumeric", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weak_enhance_detection" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement = AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement;
/**
 * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
 *
 * @remarks
 *
 */
var AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum) {
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum["JbhOnly"] = "jbh_only";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum["All"] = "all";
    AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum["None"] = "none";
})(AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum = exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum = {}));
/**
 * Account Settings: Schedule Meeting.
 */
var AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting, _super);
    function AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "audio_type" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "audioType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforce_login" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "enforceLogin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforce_login_domains" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "enforceLoginDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforce_login_with_domains" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "enforceLoginWithDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "force_pmi_jbh_password" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "forcePmiJbhPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host_video" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "hostVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "join_before_host" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "joinBeforeHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_password_requirement" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsScheduleMeetingMeetingPasswordRequirement)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "meetingPasswordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "not_store_meeting_topic" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "notStoreMeetingTopic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "participant_video" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "participantVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "personal_meeting" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "personalMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "require_password_for_instant_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "requirePasswordForInstantMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "require_password_for_pmi_meetings" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "requirePasswordForPmiMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "require_password_for_scheduled_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "requirePasswordForScheduledMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "require_password_for_scheduling_new_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "requirePasswordForSchedulingNewMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "use_pmi_for_instant_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "usePmiForInstantMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "use_pmi_for_scheduled_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting.prototype, "usePmiForScheduledMeetings", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting = AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting;
/**
 * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
 */
var AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement, _super);
    function AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "consecutive_characters_length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement.prototype, "consecutiveCharactersLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "have_special_character" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement.prototype, "haveSpecialCharacter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "minimum_password_length" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement.prototype, "minimumPasswordLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weak_enhance_detection" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement.prototype, "weakEnhanceDetection", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement = AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement;
/**
 * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
 *
 * @remarks
 * `all`: Two factor authentication will be enabled for all users in the account.<br>
 * `none`: Two factor authentication is disabled.<br>
 * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
 * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
 * `sign_in_with_two_factor_auth_roles` field.
 *
 */
var AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum;
(function (AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum) {
    AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum["All"] = "all";
    AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum["Group"] = "group";
    AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum["Role"] = "role";
    AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum["None"] = "none";
})(AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum = exports.AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum || (exports.AccountSettings200ApplicationJSONAccountSettingsSecuritySignInWithTwoFactorAuthEnum = {}));
/**
 * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
 */
var AccountSettings200ApplicationJSONAccountSettingsSecurity = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsSecurity, _super);
    function AccountSettings200ApplicationJSONAccountSettingsSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "admin_change_name_pic" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "adminChangeNamePic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hide_billing_info" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "hideBillingInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "import_photos_from_devices" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "importPhotosFromDevices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password_requirement" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsSecurityPasswordRequirement)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "passwordRequirement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_again_period_for_inactivity_on_client" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "signAgainPeriodForInactivityOnClient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_again_period_for_inactivity_on_web" }),
        __metadata("design:type", Number)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "signAgainPeriodForInactivityOnWeb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_in_with_two_factor_auth" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "signInWithTwoFactorAuth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_in_with_two_factor_auth_groups" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "signInWithTwoFactorAuthGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign_in_with_two_factor_auth_roles" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsSecurity.prototype, "signInWithTwoFactorAuthRoles", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsSecurity;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsSecurity = AccountSettings200ApplicationJSONAccountSettingsSecurity;
/**
 * Indicates where most of the participants call into or call from duriing a meeting.
 */
var AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions, _super);
    function AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowed_values" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions.prototype, "allowedValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selection_values" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions.prototype, "selectionValues", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions = AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions;
/**
 * Account Settings: Telephony.
 */
var AccountSettings200ApplicationJSONAccountSettingsTelephony = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsTelephony, _super);
    function AccountSettings200ApplicationJSONAccountSettingsTelephony() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "audio_conference_info" }),
        __metadata("design:type", String)
    ], AccountSettings200ApplicationJSONAccountSettingsTelephony.prototype, "audioConferenceInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "telephony_regions" }),
        (0, class_transformer_1.Type)(function () {
            return AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions;
        }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsTelephonyTelephonyRegions)
    ], AccountSettings200ApplicationJSONAccountSettingsTelephony.prototype, "telephonyRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "third_party_audio" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsTelephony.prototype, "thirdPartyAudio", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsTelephony;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsTelephony = AccountSettings200ApplicationJSONAccountSettingsTelephony;
/**
 * Account Settings: TSP.
 */
var AccountSettings200ApplicationJSONAccountSettingsTsp = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsTsp, _super);
    function AccountSettings200ApplicationJSONAccountSettingsTsp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "call_out" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsTsp.prototype, "callOut", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "call_out_countries" }),
        __metadata("design:type", Array)
    ], AccountSettings200ApplicationJSONAccountSettingsTsp.prototype, "callOutCountries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "display_toll_free_numbers" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsTsp.prototype, "displayTollFreeNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "show_international_numbers_link" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsTsp.prototype, "showInternationalNumbersLink", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsTsp;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsTsp = AccountSettings200ApplicationJSONAccountSettingsTsp;
/**
 * Account Settings: Zoom Rooms.
 */
var AccountSettings200ApplicationJSONAccountSettingsZoomRooms = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettingsZoomRooms, _super);
    function AccountSettings200ApplicationJSONAccountSettingsZoomRooms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_start_stop_scheduled_meetings" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "autoStartStopScheduledMeetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cmr_for_instant_meeting" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "cmrForInstantMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "force_private_meeting" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "forcePrivateMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hide_host_information" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "hideHostInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "list_meetings_with_calendar" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "listMeetingsWithCalendar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_airplay_manually" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "startAirplayManually", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ultrasonic" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "ultrasonic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "upcoming_meeting_alert" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "upcomingMeetingAlert", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weekly_system_restart" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "weeklySystemRestart", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zr_post_meeting_feedback" }),
        __metadata("design:type", Boolean)
    ], AccountSettings200ApplicationJSONAccountSettingsZoomRooms.prototype, "zrPostMeetingFeedback", void 0);
    return AccountSettings200ApplicationJSONAccountSettingsZoomRooms;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettingsZoomRooms = AccountSettings200ApplicationJSONAccountSettingsZoomRooms;
var AccountSettings200ApplicationJSONAccountSettings = /** @class */ (function (_super) {
    __extends(AccountSettings200ApplicationJSONAccountSettings, _super);
    function AccountSettings200ApplicationJSONAccountSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email_notification" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsEmailNotification; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsEmailNotification)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "emailNotification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "feature" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsFeature; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsFeature)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "feature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "in_meeting" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsInMeeting; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsInMeeting)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "inMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "integration" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsIntegration; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsIntegration)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "integration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "profile" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsProfile; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsProfile)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsRecording; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsRecording)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "recording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule_meeting" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsScheduleMeeting)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "scheduleMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "security" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsSecurity; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsSecurity)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "security", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "telephony" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsTelephony; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsTelephony)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "telephony", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tsp" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsTsp; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsTsp)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "tsp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zoom_rooms" }),
        (0, class_transformer_1.Type)(function () { return AccountSettings200ApplicationJSONAccountSettingsZoomRooms; }),
        __metadata("design:type", AccountSettings200ApplicationJSONAccountSettingsZoomRooms)
    ], AccountSettings200ApplicationJSONAccountSettings.prototype, "zoomRooms", void 0);
    return AccountSettings200ApplicationJSONAccountSettings;
}(utils_1.SpeakeasyBase));
exports.AccountSettings200ApplicationJSONAccountSettings = AccountSettings200ApplicationJSONAccountSettings;
var AccountSettingsResponse = /** @class */ (function (_super) {
    __extends(AccountSettingsResponse, _super);
    function AccountSettingsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], AccountSettingsResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AccountSettingsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AccountSettingsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AccountSettingsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AccountSettingsResponse.prototype, "accountSettings200ApplicationJSONOneOf", void 0);
    return AccountSettingsResponse;
}(utils_1.SpeakeasyBase));
exports.AccountSettingsResponse = AccountSettingsResponse;
