// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContentFileLinks struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

type ContentFileTypeEnum string

const (
	ContentFileTypeEnumFile ContentFileTypeEnum = "file"
)

func (e ContentFileTypeEnum) ToPointer() *ContentFileTypeEnum {
	return &e
}

func (e *ContentFileTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "file":
		*e = ContentFileTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentFileTypeEnum: %v", v)
	}
}

// ContentFile - Content File
type ContentFile struct {
	Links           ContentFileLinks    `json:"_links"`
	Content         string              `json:"content"`
	DownloadURL     string              `json:"download_url"`
	Encoding        string              `json:"encoding"`
	GitURL          string              `json:"git_url"`
	HTMLURL         string              `json:"html_url"`
	Name            string              `json:"name"`
	Path            string              `json:"path"`
	Sha             string              `json:"sha"`
	Size            int64               `json:"size"`
	SubmoduleGitURL *string             `json:"submodule_git_url,omitempty"`
	Target          *string             `json:"target,omitempty"`
	Type            ContentFileTypeEnum `json:"type"`
	URL             string              `json:"url"`
}
