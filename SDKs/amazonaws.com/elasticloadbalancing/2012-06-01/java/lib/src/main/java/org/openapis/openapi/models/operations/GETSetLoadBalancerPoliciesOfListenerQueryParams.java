/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETSetLoadBalancerPoliciesOfListenerQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETSetLoadBalancerPoliciesOfListenerActionEnum action;
    public GETSetLoadBalancerPoliciesOfListenerQueryParams withAction(GETSetLoadBalancerPoliciesOfListenerActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The name of the load balancer.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=LoadBalancerName")
    public String loadBalancerName;
    public GETSetLoadBalancerPoliciesOfListenerQueryParams withLoadBalancerName(String loadBalancerName) {
        this.loadBalancerName = loadBalancerName;
        return this;
    }
    
    /**
     * The external port of the load balancer.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=LoadBalancerPort")
    public Long loadBalancerPort;
    public GETSetLoadBalancerPoliciesOfListenerQueryParams withLoadBalancerPort(Long loadBalancerPort) {
        this.loadBalancerPort = loadBalancerPort;
        return this;
    }
    
    /**
     * The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PolicyNames")
    public String[] policyNames;
    public GETSetLoadBalancerPoliciesOfListenerQueryParams withPolicyNames(String[] policyNames) {
        this.policyNames = policyNames;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETSetLoadBalancerPoliciesOfListenerVersionEnum version;
    public GETSetLoadBalancerPoliciesOfListenerQueryParams withVersion(GETSetLoadBalancerPoliciesOfListenerVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
