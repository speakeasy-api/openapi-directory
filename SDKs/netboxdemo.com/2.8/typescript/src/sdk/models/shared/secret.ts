/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedDevice } from "./nesteddevice";
import { NestedSecretRole } from "./nestedsecretrole";
import { Expose, Transform, Type } from "class-transformer";

export class Secret extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  @Type(() => NestedDevice)
  device: NestedDevice;

  @SpeakeasyMetadata()
  @Expose({ name: "hash" })
  hash?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "plaintext" })
  plaintext: string;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => NestedSecretRole)
  role: NestedSecretRole;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];
}
