"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetMartCaseAssociationsResourceRequest:
    
    object_category: str = dataclasses.field(metadata={'path_param': { 'field_name': 'object_category', 'style': 'simple', 'explode': False }})
    r"""Category of entity at link Subject (target), e.g. phenotype, disease"""  
    taxon: str = dataclasses.field(metadata={'path_param': { 'field_name': 'taxon', 'style': 'simple', 'explode': False }})
    r"""taxon of case, must be of form NCBITaxon:9606"""  
    slim: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slim', 'style': 'form', 'explode': True }})
    r"""Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"""  
    

@dataclasses.dataclass
class GetMartCaseAssociationsResourceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    