/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class GETAmendmentType {
    /**
     * Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRenew")
    public Boolean autoRenew;
    public GETAmendmentType withAutoRenew(Boolean autoRenew) {
        this.autoRenew = autoRenew;
        return this;
    }
    
    /**
     * The rate plan ID on which changes are made. Only the Update or Remove amendment returns a base rate plan ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseRatePlanId")
    public String baseRatePlanId;
    public GETAmendmentType withBaseRatePlanId(String baseRatePlanId) {
        this.baseRatePlanId = baseRatePlanId;
        return this;
    }
    
    /**
     * The ID of the subscription based on which the amendment is created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseSubscriptionId")
    public String baseSubscriptionId;
    public GETAmendmentType withBaseSubscriptionId(String baseSubscriptionId) {
        this.baseSubscriptionId = baseSubscriptionId;
        return this;
    }
    
    /**
     * The amendment code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public GETAmendmentType withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * The date when the amendment becomes effective for billing purposes, as `yyyy-mm-dd`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("contractEffectiveDate")
    public LocalDate contractEffectiveDate;
    public GETAmendmentType withContractEffectiveDate(LocalDate contractEffectiveDate) {
        this.contractEffectiveDate = contractEffectiveDate;
        return this;
    }
    
    /**
     * The length of the period for the current subscription term. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentTerm")
    public Long currentTerm;
    public GETAmendmentType withCurrentTerm(Long currentTerm) {
        this.currentTerm = currentTerm;
        return this;
    }
    
    /**
     * The period type for the current subscription term.
     * Possible values are:
     * 
     * - Month
     * - Year
     * - Day
     * - Week
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentTermPeriodType")
    public String currentTermPeriodType;
    public GETAmendmentType withCurrentTermPeriodType(String currentTermPeriodType) {
        this.currentTermPeriodType = currentTermPeriodType;
        return this;
    }
    
    /**
     * The date when the customer accepts the amendment changes to the subscription, as `yyyy-mm-dd`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("customerAcceptanceDate")
    public LocalDate customerAcceptanceDate;
    public GETAmendmentType withCustomerAcceptanceDate(LocalDate customerAcceptanceDate) {
        this.customerAcceptanceDate = customerAcceptanceDate;
        return this;
    }
    
    /**
     * Description of the amendment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GETAmendmentType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The ID of the account that the subscription is being transferred to.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationAccountId")
    public String destinationAccountId;
    public GETAmendmentType withDestinationAccountId(String destinationAccountId) {
        this.destinationAccountId = destinationAccountId;
        return this;
    }
    
    /**
     * The ID of the invoice that the subscription is being transferred to.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationInvoiceOwnerId")
    public String destinationInvoiceOwnerId;
    public GETAmendmentType withDestinationInvoiceOwnerId(String destinationInvoiceOwnerId) {
        this.destinationInvoiceOwnerId = destinationInvoiceOwnerId;
        return this;
    }
    
    /**
     * The date when the amendment changes take effective. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("effectiveDate")
    public LocalDate effectiveDate;
    public GETAmendmentType withEffectiveDate(LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * The amendment ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETAmendmentType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The name of the amendment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GETAmendmentType withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the rate plan charge on which amendment is made. Only the Add or Update amendment returns a new rate plan ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newRatePlanId")
    public String newRatePlanId;
    public GETAmendmentType withNewRatePlanId(String newRatePlanId) {
        this.newRatePlanId = newRatePlanId;
        return this;
    }
    
    /**
     * The ID of the subscription that the amendment changes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newSubscriptionId")
    public String newSubscriptionId;
    public GETAmendmentType withNewSubscriptionId(String newSubscriptionId) {
        this.newSubscriptionId = newSubscriptionId;
        return this;
    }
    
    /**
     * Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.
     * Possible values are:
     * 
     * - RENEW_WITH_SPECIFIC_TERM
     * - RENEW_TO_EVERGREEN
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewalSetting")
    public String renewalSetting;
    public GETAmendmentType withRenewalSetting(String renewalSetting) {
        this.renewalSetting = renewalSetting;
        return this;
    }
    
    /**
     * The term of renewal for the amended subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewalTerm")
    public Long renewalTerm;
    public GETAmendmentType withRenewalTerm(Long renewalTerm) {
        this.renewalTerm = renewalTerm;
        return this;
    }
    
    /**
     * The period type for the subscription renewal term.
     * Possible values are:
     * 
     * - Month
     * - Year
     * - Day
     * - Week
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewalTermPeriodType")
    public String renewalTermPeriodType;
    public GETAmendmentType withRenewalTermPeriodType(String renewalTermPeriodType) {
        this.renewalTermPeriodType = renewalTermPeriodType;
        return this;
    }
    
    /**
     * The date when the subscription resumption takes effect, as `yyyy-mm-dd`.
     * 
     * **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("resumeDate")
    public LocalDate resumeDate;
    public GETAmendmentType withResumeDate(LocalDate resumeDate) {
        this.resumeDate = resumeDate;
        return this;
    }
    
    /**
     * The date when service is activated, as `yyyy-mm-dd`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceActivationDate")
    public LocalDate serviceActivationDate;
    public GETAmendmentType withServiceActivationDate(LocalDate serviceActivationDate) {
        this.serviceActivationDate = serviceActivationDate;
        return this;
    }
    
    /**
     * The date when the Update Product amendment takes effect. 
     * Only for the Update Product amendments if there is already a future-dated Update Product amendment on
     * the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("specificUpdateDate")
    public LocalDate specificUpdateDate;
    public GETAmendmentType withSpecificUpdateDate(LocalDate specificUpdateDate) {
        this.specificUpdateDate = specificUpdateDate;
        return this;
    }
    
    /**
     * The status of the amendment.
     * Possible values are:
     * 
     * - Draft 
     * - Pending Activation
     * - Pending Acceptance
     * - Completed
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public GETAmendmentType withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETAmendmentType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * The date when the subscription suspension takes effect, as `yyyy-mm-dd`.
     * 
     * **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("suspendDate")
    public LocalDate suspendDate;
    public GETAmendmentType withSuspendDate(LocalDate suspendDate) {
        this.suspendDate = suspendDate;
        return this;
    }
    
    /**
     * The date when the new terms and conditions take effect.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("termStartDate")
    public LocalDate termStartDate;
    public GETAmendmentType withTermStartDate(LocalDate termStartDate) {
        this.termStartDate = termStartDate;
        return this;
    }
    
    /**
     * Indicates if the subscription is `TERMED` or `EVERGREEN`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termType")
    public String termType;
    public GETAmendmentType withTermType(String termType) {
        this.termType = termType;
        return this;
    }
    
    /**
     * Type of the amendment.
     * Possible values are:
     * 
     * - Cancellation
     * - NewProduct
     * - OwnerTransfer
     * - RemoveProduct
     * - Renewal
     * - UpdateProduct
     * - TermsAndConditions
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GETAmendmentType withType(String type) {
        this.type = type;
        return this;
    }
    
}
