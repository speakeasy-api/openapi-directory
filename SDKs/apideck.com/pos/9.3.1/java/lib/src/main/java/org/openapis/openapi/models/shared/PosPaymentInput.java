/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PosPaymentInput {
    @JsonProperty("amount")
    public Double amount;

    public PosPaymentInput withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The amount the developer is taking as a fee for facilitating the payment on behalf of the seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("app_fee")
    public Double appFee;

    public PosPaymentInput withAppFee(Double appFee) {
        this.appFee = appFee;
        return this;
    }
    
    /**
     * The initial amount of money approved for this payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approved")
    public Double approved;

    public PosPaymentInput withApproved(Double approved) {
        this.approved = approved;
        return this;
    }
    
    /**
     * Card details for this payment. This field is currently not available. Reach out to our team for more info.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank_account")
    public PosBankAccount bankAccount;

    public PosPaymentInput withBankAccount(PosBankAccount bankAccount) {
        this.bankAccount = bankAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_details")
    public PosPaymentCardDetailsInput cardDetails;

    public PosPaymentInput withCardDetails(PosPaymentCardDetailsInput cardDetails) {
        this.cardDetails = cardDetails;
        return this;
    }
    
    /**
     * Cash details for this payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cash")
    public PosPaymentCashDetails cash;

    public PosPaymentInput withCash(PosPaymentCashDetails cash) {
        this.cash = cash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("change_back_cash_amount")
    public Double changeBackCashAmount;

    public PosPaymentInput withChangeBackCashAmount(Double changeBackCashAmount) {
        this.changeBackCashAmount = changeBackCashAmount;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonProperty("currency")
    public CurrencyEnum currency;

    public PosPaymentInput withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonProperty("customer_id")
    public String customerId;

    public PosPaymentInput withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("device_id")
    public String deviceId;

    public PosPaymentInput withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employee_id")
    public String employeeId;

    public PosPaymentInput withEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }
    
    /**
     * Details about an external payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_details")
    public PosPaymentExternalDetails externalDetails;

    public PosPaymentInput withExternalDetails(PosPaymentExternalDetails externalDetails) {
        this.externalDetails = externalDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_payment_id")
    public String externalPaymentId;

    public PosPaymentInput withExternalPaymentId(String externalPaymentId) {
        this.externalPaymentId = externalPaymentId;
        return this;
    }
    
    /**
     * A value you specify that uniquely identifies this request among requests you have sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idempotency_key")
    public String idempotencyKey;

    public PosPaymentInput withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;

    public PosPaymentInput withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchant_id")
    public String merchantId;

    public PosPaymentInput withMerchantId(String merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    @JsonProperty("order_id")
    public String orderId;

    public PosPaymentInput withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processing_fees")
    public PosPaymentProcessingFees[] processingFees;

    public PosPaymentInput withProcessingFees(PosPaymentProcessingFees[] processingFees) {
        this.processingFees = processingFees;
        return this;
    }
    
    /**
     * The initial amount of money approved for this payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refunded")
    public Double refunded;

    public PosPaymentInput withRefunded(Double refunded) {
        this.refunded = refunded;
        return this;
    }
    
    /**
     * Optional service charges or gratuity tip applied to the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_charges")
    public ServiceChargeInput[] serviceCharges;

    public PosPaymentInput withServiceCharges(ServiceChargeInput[] serviceCharges) {
        this.serviceCharges = serviceCharges;
        return this;
    }
    
    /**
     * Source of this payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public PosPaymentSourceEnum source;

    public PosPaymentInput withSource(PosPaymentSourceEnum source) {
        this.source = source;
        return this;
    }
    
    /**
     * The ID for the source of funds for this payment. Square-only: This can be a payment token (card nonce) generated by the payment form or a card on file made linked to the customer. if recording a payment that the seller received outside of Square, specify either `CASH` or `EXTERNAL`.
     */
    @JsonProperty("source_id")
    public String sourceId;

    public PosPaymentInput withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     * Status of this payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PosPaymentStatusEnum status;

    public PosPaymentInput withStatus(PosPaymentStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")
    public Double tax;

    public PosPaymentInput withTax(Double tax) {
        this.tax = tax;
        return this;
    }
    
    @JsonProperty("tender_id")
    public String tenderId;

    public PosPaymentInput withTenderId(String tenderId) {
        this.tenderId = tenderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tip")
    public Double tip;

    public PosPaymentInput withTip(Double tip) {
        this.tip = tip;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public PosPaymentInput withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    /**
     * Wallet details for this payment. This field is currently not available. Reach out to our team for more info.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wallet")
    public PosPaymentWalletDetails wallet;

    public PosPaymentInput withWallet(PosPaymentWalletDetails wallet) {
        this.wallet = wallet;
        return this;
    }
    
    public PosPaymentInput(@JsonProperty("amount") Double amount, @JsonProperty("currency") CurrencyEnum currency, @JsonProperty("customer_id") String customerId, @JsonProperty("order_id") String orderId, @JsonProperty("source_id") String sourceId, @JsonProperty("tender_id") String tenderId) {
        this.amount = amount;
        this.currency = currency;
        this.customerId = customerId;
        this.orderId = orderId;
        this.sourceId = sourceId;
        this.tenderId = tenderId;
  }
}
