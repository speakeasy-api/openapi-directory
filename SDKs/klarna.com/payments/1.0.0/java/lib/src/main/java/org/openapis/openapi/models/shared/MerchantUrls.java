/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class MerchantUrls {
    /**
     * URL for receiving the authorization token when payment is completed. Used for Authorization Callback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorization")
    public String authorization;
    public MerchantUrls withAuthorization(String authorization) {
        this.authorization = authorization;
        return this;
    }
    
    /**
     * URL of the merchant confirmation page. The consumer will be redirected back to the confirmation page if the consumer is sent to the redirect URL after placing the order. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL(max 2000 characters).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmation")
    public String confirmation;
    public MerchantUrls withConfirmation(String confirmation) {
        this.confirmation = confirmation;
        return this;
    }
    
    /**
     * URL for notifications on pending orders. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notification")
    public String notification;
    public MerchantUrls withNotification(String notification) {
        this.notification = notification;
        return this;
    }
    
    /**
     * URL that will be requested when an order is completed. Should be different than checkout and confirmation URLs. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push")
    public String push;
    public MerchantUrls withPush(String push) {
        this.push = push;
        return this;
    }
    
}
