<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Entity
{
    /**
     * Administrative name (region).
     * 
     * @var ?string $administrative
     */
	#[\JMS\Serializer\Annotation\SerializedName('administrative')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $administrative = null;
    
    /**
     * City name.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * Country name.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * [Two-letter ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
     * 
     * 
     * 
     * @var ?string $countrycode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countrycode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countrycode = null;
    
    /**
     * County name (department).
     * 
     * @var ?string $county
     */
	#[\JMS\Serializer\Annotation\SerializedName('county')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $county = null;
    
    /**
     * Name of the current entity with highlighted matched words.
     * 
     * @var ?string $highlight
     */
	#[\JMS\Serializer\Annotation\SerializedName('highlight')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $highlight = null;
    
    /**
     * Latitude.
     * 
     * @var ?float $lat
     */
	#[\JMS\Serializer\Annotation\SerializedName('lat')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $lat = null;
    
    /**
     * Longitude.
     * 
     * @var ?float $lng
     */
	#[\JMS\Serializer\Annotation\SerializedName('lng')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $lng = null;
    
    /**
     * Name of the current entity.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Population number of the entity city.
     * 
     * @var ?int $population
     */
	#[\JMS\Serializer\Annotation\SerializedName('population')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $population = null;
    
    /**
     * Type of the entity.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EntityTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EntityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EntityTypeEnum $type = null;
    
    /**
     * Postcodes associated with the entity.
     * 
     * @var ?array<string> $zipcode
     */
	#[\JMS\Serializer\Annotation\SerializedName('zipcode')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $zipcode = null;
    
	public function __construct()
	{
		$this->administrative = null;
		$this->city = null;
		$this->country = null;
		$this->countrycode = null;
		$this->county = null;
		$this->highlight = null;
		$this->lat = null;
		$this->lng = null;
		$this->name = null;
		$this->population = null;
		$this->type = null;
		$this->zipcode = null;
	}
}
