// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum - The strategy for conflict resolution.
type UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum string

const (
	UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumOptimisticConcurrency UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "OPTIMISTIC_CONCURRENCY"
	UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumLambda                UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "LAMBDA"
	UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumAutomerge             UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "AUTOMERGE"
	UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumNone                  UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "NONE"
)

func (e UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum) ToPointer() *UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum {
	return &e
}

func (e *UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPTIMISTIC_CONCURRENCY":
		fallthrough
	case "LAMBDA":
		fallthrough
	case "AUTOMERGE":
		fallthrough
	case "NONE":
		*e = UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum: %v", v)
	}
}

// UpdateBackendAPIRequestBodyResourceConfigConflictResolution - The conflict resolution strategy for your data stored in the data models.
type UpdateBackendAPIRequestBodyResourceConfigConflictResolution struct {
	ResolutionStrategy *UpdateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum `json:"ResolutionStrategy,omitempty"`
}

// UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum - Describes the authentication mode.
type UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum string

const (
	UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumAPIKey                 UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "API_KEY"
	UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumAwsIam                 UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "AWS_IAM"
	UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumAmazonCognitoUserPools UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "AMAZON_COGNITO_USER_POOLS"
	UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumOpenidConnect          UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "OPENID_CONNECT"
)

func (e UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum) ToPointer() *UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum {
	return &e
}

func (e *UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "API_KEY":
		fallthrough
	case "AWS_IAM":
		fallthrough
	case "AMAZON_COGNITO_USER_POOLS":
		fallthrough
	case "OPENID_CONNECT":
		*e = UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum: %v", v)
	}
}

// UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeSettings - Describes settings for the authentication mode.
type UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeSettings struct {
	CognitoUserPoolID  *string  `json:"CognitoUserPoolId,omitempty"`
	Description        *string  `json:"Description,omitempty"`
	ExpirationTime     *float64 `json:"ExpirationTime,omitempty"`
	OpenIDAuthTTL      *string  `json:"OpenIDAuthTTL,omitempty"`
	OpenIDClientID     *string  `json:"OpenIDClientId,omitempty"`
	OpenIDIatTTL       *string  `json:"OpenIDIatTTL,omitempty"`
	OpenIDIssueURL     *string  `json:"OpenIDIssueURL,omitempty"`
	OpenIDProviderName *string  `json:"OpenIDProviderName,omitempty"`
}

// UpdateBackendAPIRequestBodyResourceConfigDefaultAuthType - The default authentication type for interacting with the configured data models in your Amplify project.
type UpdateBackendAPIRequestBodyResourceConfigDefaultAuthType struct {
	Mode     *UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum `json:"Mode,omitempty"`
	Settings *UpdateBackendAPIRequestBodyResourceConfigDefaultAuthTypeSettings `json:"Settings,omitempty"`
}

// UpdateBackendAPIRequestBodyResourceConfig - The resource config for the data model, configured as a part of the Amplify project.
type UpdateBackendAPIRequestBodyResourceConfig struct {
	AdditionalAuthTypes []shared.BackendAPIAuthType                                  `json:"AdditionalAuthTypes,omitempty"`
	APIName             *string                                                      `json:"ApiName,omitempty"`
	ConflictResolution  *UpdateBackendAPIRequestBodyResourceConfigConflictResolution `json:"ConflictResolution,omitempty"`
	DefaultAuthType     *UpdateBackendAPIRequestBodyResourceConfigDefaultAuthType    `json:"DefaultAuthType,omitempty"`
	Service             *string                                                      `json:"Service,omitempty"`
	TransformSchema     *string                                                      `json:"TransformSchema,omitempty"`
}

type UpdateBackendAPIRequestBody struct {
	// The resource config for the data model, configured as a part of the Amplify project.
	ResourceConfig *UpdateBackendAPIRequestBodyResourceConfig `json:"resourceConfig,omitempty"`
	// The name of this resource.
	ResourceName string `json:"resourceName"`
}

type UpdateBackendAPIRequest struct {
	RequestBody       UpdateBackendAPIRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The app ID.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The name of the backend environment.
	BackendEnvironmentName string `pathParam:"style=simple,explode=false,name=backendEnvironmentName"`
}

type UpdateBackendAPIResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// GatewayTimeoutException
	GatewayTimeoutException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateBackendAPIResponse *shared.UpdateBackendAPIResponse
}
