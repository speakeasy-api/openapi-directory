/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Fileshare {
    /**
     * The size of the file share in gigabyte.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capacity")
    public Long capacity;
    public Fileshare withCapacity(Long capacity) {
        this.capacity = capacity;
        return this;
    }
    
    /**
     * The timestamp when the file share was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_date")
    public String createdDate;
    public Fileshare withCreatedDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The name of the file share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fsName")
    public String fsName;
    public Fileshare withFsName(String fsName) {
        this.fsName = fsName;
        return this;
    }
    
    /**
     * The path to the volume on the host node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostPath")
    public String hostPath;
    public Fileshare withHostPath(String hostPath) {
        this.hostPath = hostPath;
        return this;
    }
    
    /**
     * The number of Input/Output operations per second. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iops")
    public Double iops;
    public Fileshare withIops(Double iops) {
        this.iops = iops;
        return this;
    }
    
    /**
     * The total number of IOPS considering the size of the file share. The size of your file share in gigabyte multiplied with the number of IOPS indicates the total number of IOPS. The higher the number of IOPS the faster you can read from and write to your volumes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iopsTotal")
    public Long iopsTotal;
    public Fileshare withIopsTotal(Long iopsTotal) {
        this.iopsTotal = iopsTotal;
        return this;
    }
    
    /**
     * The ID received from softlayer when the file share was ordered to be set up in softlayer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    public String orderId;
    public Fileshare withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * The provider of the file share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider")
    public String provider;
    public Fileshare withProvider(String provider) {
        this.provider = provider;
        return this;
    }
    
    /**
     * The unique ID representing a Bluemix space in which the file share was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spaceGuid")
    public String spaceGuid;
    public Fileshare withSpaceGuid(String spaceGuid) {
        this.spaceGuid = spaceGuid;
        return this;
    }
    
    /**
     * The current state of the file share. When the file share is ready to be used, this attribute is set to `READY`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public Fileshare withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * The timestamp when the file share last was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_date")
    public String updatedDate;
    public Fileshare withUpdatedDate(String updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
