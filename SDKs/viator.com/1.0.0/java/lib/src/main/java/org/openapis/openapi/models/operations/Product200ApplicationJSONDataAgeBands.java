/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Product200ApplicationJSONDataAgeBands {
    /**
     * **indicator**: `true` if *this* age band describes adults (not children)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adult")
    public Boolean adult;

    public Product200ApplicationJSONDataAgeBands withAdult(Boolean adult) {
        this.adult = adult;
        return this;
    }
    
    /**
     * **numeric lower age limit** of the age range defined by *this* age band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ageFrom")
    public Long ageFrom;

    public Product200ApplicationJSONDataAgeBands withAgeFrom(Long ageFrom) {
        this.ageFrom = ageFrom;
        return this;
    }
    
    /**
     * **numeric upper age limit** of the age range included in *this* age band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ageTo")
    public Long ageTo;

    public Product200ApplicationJSONDataAgeBands withAgeTo(Long ageTo) {
        this.ageTo = ageTo;
        return this;
    }
    
    /**
     * **unique numeric identifier** for the age band
     * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bandId")
    public Long bandId;

    public Product200ApplicationJSONDataAgeBands withBandId(Long bandId) {
        this.bandId = bandId;
        return this;
    }
    
    /**
     * **number** of participants in *this* age band required to book the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;

    public Product200ApplicationJSONDataAgeBands withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * **natural-language description** (singular) of *this* age band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Product200ApplicationJSONDataAgeBands withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * **natural-language description** (plural) of *this* age band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pluralDescription")
    public String pluralDescription;

    public Product200ApplicationJSONDataAgeBands withPluralDescription(String pluralDescription) {
        this.pluralDescription = pluralDescription;
        return this;
    }
    
    /**
     * **sort order** for *this* age band object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public Long sortOrder;

    public Product200ApplicationJSONDataAgeBands withSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * **indicator**: `true` if members of this age band are considered to be adults
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treatAsAdult")
    public Boolean treatAsAdult;

    public Product200ApplicationJSONDataAgeBands withTreatAsAdult(Boolean treatAsAdult) {
        this.treatAsAdult = treatAsAdult;
        return this;
    }
    
    public Product200ApplicationJSONDataAgeBands(){}
}
