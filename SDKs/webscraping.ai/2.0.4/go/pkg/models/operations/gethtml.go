// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetHTMLQueryParams struct {
	// HTTP headers to pass to the target page. Can be specified either via a nested query parameter (...&headers[One]=value1&headers=[Another]=value2) or as a JSON encoded object (...&headers={"One": "value1", "Another": "value2"})
	Headers map[string]string `queryParam:"style=form,explode=true,name=headers"`
	// Execute on-page JavaScript using a headless browser (true by default)
	Js *bool `queryParam:"style=form,explode=true,name=js"`
	// Type of proxy, use residential proxies if your site restricts traffic from datacenters (datacenter by default). Note that residential proxy requests are more expensive than datacenter, see the pricing page for details.
	Proxy *shared.ProxyEnum `queryParam:"style=form,explode=true,name=proxy"`
	// Maximum processing time in ms. Increase it in case of timeout errors (5000 by default, maximum is 30000)
	Timeout *int64 `queryParam:"style=form,explode=true,name=timeout"`
	// URL of the target page
	URL string `queryParam:"style=form,explode=true,name=url"`
}

type GetHTMLRequest struct {
	QueryParams GetHTMLQueryParams
}

type GetHTMLResponse struct {
	ContentType string
	// Parameters validation error
	Error *shared.Error
	// Non-2xx and non-404 HTTP status code on the target page
	PageError   *shared.PageError
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetHTML200TextHTMLString *string
}
