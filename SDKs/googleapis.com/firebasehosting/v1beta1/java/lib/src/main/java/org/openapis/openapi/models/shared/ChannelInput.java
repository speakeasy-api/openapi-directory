/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChannelInput - A `Channel` represents a stream of releases for a site. All sites have a default `live` channel that serves content to the Firebase-provided subdomains and any connected custom domains.
 */
public class ChannelInput {
    /**
     * The time at which the channel will be automatically deleted. If null, the channel will not be automatically deleted. This field is present in the output whether it's set directly or via the `ttl` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireTime")
    public String expireTime;

    public ChannelInput withExpireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * Text labels used for extra metadata and/or filtering.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public ChannelInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The fully-qualified resource name for the channel, in the format: sites/ SITE_ID/channels/CHANNEL_ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ChannelInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     *  A `Release` is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release")
    public Release release;

    public ChannelInput withRelease(Release release) {
        this.release = release;
        return this;
    }
    
    /**
     * The number of previous releases to retain on the channel for rollback or other purposes. Must be a number between 1-100. Defaults to 10 for new channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retainedReleaseCount")
    public Integer retainedReleaseCount;

    public ChannelInput withRetainedReleaseCount(Integer retainedReleaseCount) {
        this.retainedReleaseCount = retainedReleaseCount;
        return this;
    }
    
    /**
     * Input only. A time-to-live for this channel. Sets `expire_time` to the provided duration past the time of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ttl")
    public String ttl;

    public ChannelInput withTtl(String ttl) {
        this.ttl = ttl;
        return this;
    }
    
    public ChannelInput(){}
}
