/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ReportingMetadataEntry {
    /**
     * For metrics this is a list of dimension IDs which the metric is compatible with, for dimensions it is a list of compatibility groups the dimension belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compatibleDimensions")
    public String[] compatibleDimensions;

    public ReportingMetadataEntry withCompatibleDimensions(String[] compatibleDimensions) {
        this.compatibleDimensions = compatibleDimensions;
        return this;
    }
    
    /**
     * The names of the metrics the dimension or metric this reporting metadata entry describes is compatible with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compatibleMetrics")
    public String[] compatibleMetrics;

    public ReportingMetadataEntry withCompatibleMetrics(String[] compatibleMetrics) {
        this.compatibleMetrics = compatibleMetrics;
        return this;
    }
    
    /**
     * Unique identifier of this reporting metadata entry, corresponding to the name of the appropriate dimension or metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public ReportingMetadataEntry withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Kind of resource this is, in this case adsense#reportingMetadataEntry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public ReportingMetadataEntry withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The names of the dimensions which the dimension or metric this reporting metadata entry describes requires to also be present in order for the report to be valid. Omitting these will not cause an error or warning, but may result in data which cannot be correctly interpreted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiredDimensions")
    public String[] requiredDimensions;

    public ReportingMetadataEntry withRequiredDimensions(String[] requiredDimensions) {
        this.requiredDimensions = requiredDimensions;
        return this;
    }
    
    /**
     * The names of the metrics which the dimension or metric this reporting metadata entry describes requires to also be present in order for the report to be valid. Omitting these will not cause an error or warning, but may result in data which cannot be correctly interpreted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiredMetrics")
    public String[] requiredMetrics;

    public ReportingMetadataEntry withRequiredMetrics(String[] requiredMetrics) {
        this.requiredMetrics = requiredMetrics;
        return this;
    }
    
    /**
     * The codes of the projects supported by the dimension or metric this reporting metadata entry describes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedProducts")
    public String[] supportedProducts;

    public ReportingMetadataEntry withSupportedProducts(String[] supportedProducts) {
        this.supportedProducts = supportedProducts;
        return this;
    }
    
    public ReportingMetadataEntry(){}
}
