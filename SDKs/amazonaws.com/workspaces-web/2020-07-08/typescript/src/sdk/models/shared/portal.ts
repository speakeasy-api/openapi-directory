/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationTypeEnum } from "./authenticationtypeenum";
import { BrowserTypeEnum } from "./browsertypeenum";
import { PortalStatusEnum } from "./portalstatusenum";
import { RendererTypeEnum } from "./renderertypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The web portal.
 */
export class Portal extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authenticationType" })
  authenticationType?: AuthenticationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "browserSettingsArn" })
  browserSettingsArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "browserType" })
  browserType?: BrowserTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkSettingsArn" })
  networkSettingsArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalArn" })
  portalArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalEndpoint" })
  portalEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalStatus" })
  portalStatus?: PortalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "rendererType" })
  rendererType?: RendererTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trustStoreArn" })
  trustStoreArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userAccessLoggingSettingsArn" })
  userAccessLoggingSettingsArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userSettingsArn" })
  userSettingsArn?: string;
}
