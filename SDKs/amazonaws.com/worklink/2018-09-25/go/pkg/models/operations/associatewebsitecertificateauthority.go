// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AssociateWebsiteCertificateAuthorityHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type AssociateWebsiteCertificateAuthorityRequestBody struct {
	// The root certificate of the CA.
	Certificate string `json:"Certificate"`
	// The certificate name to display.
	DisplayName *string `json:"DisplayName,omitempty"`
	// The ARN of the fleet.
	FleetArn string `json:"FleetArn"`
}

type AssociateWebsiteCertificateAuthorityRequest struct {
	Headers AssociateWebsiteCertificateAuthorityHeaders
	Request AssociateWebsiteCertificateAuthorityRequestBody `request:"mediaType=application/json"`
}

type AssociateWebsiteCertificateAuthorityResponse struct {
	// Success
	AssociateWebsiteCertificateAuthorityResponse *shared.AssociateWebsiteCertificateAuthorityResponse
	ContentType                                  string
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
