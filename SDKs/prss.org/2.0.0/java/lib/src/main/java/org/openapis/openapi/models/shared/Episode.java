/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Episode - An episode that defines a specific air date for an instance of a program.
 */
public class Episode {
    /**
     * The date the air window opens for the episode.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("beginAirDate")
    public OffsetDateTime beginAirDate;
    public Episode withBeginAirDate(OffsetDateTime beginAirDate) {
        this.beginAirDate = beginAirDate;
        return this;
    }
    
    /**
     * The date the live stream begins for the episode. Only set for live and LWSF episodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("beginTransmissionDate")
    public OffsetDateTime beginTransmissionDate;
    public Episode withBeginTransmissionDate(OffsetDateTime beginTransmissionDate) {
        this.beginTransmissionDate = beginTransmissionDate;
        return this;
    }
    
    /**
     * The date the segment was created. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public Episode withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The ID of the customer that owns this programs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public Long customerId;
    public Episode withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * The date the air window closes for the episode.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endAirDate")
    public OffsetDateTime endAirDate;
    public Episode withEndAirDate(OffsetDateTime endAirDate) {
        this.endAirDate = endAirDate;
        return this;
    }
    
    /**
     * The date the live stream ends for the episode. Only set for live and LWSF episodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTransmissionDate")
    public OffsetDateTime endTransmissionDate;
    public Episode withEndTransmissionDate(OffsetDateTime endTransmissionDate) {
        this.endTransmissionDate = endTransmissionDate;
        return this;
    }
    
    /**
     * The unique ID of the episode. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public Episode withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The date the segment was last modified/updated. Automatically updated on any write operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModifiedDate")
    public OffsetDateTime lastModifiedDate;
    public Episode withLastModifiedDate(OffsetDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
        return this;
    }
    
    /**
     * The ID of the program that owns this episode.
     */
    @JsonProperty("programId")
    public Long programId;
    public Episode withProgramId(Long programId) {
        this.programId = programId;
        return this;
    }
    
    /**
     * The title of the program.
     */
    @JsonProperty("title")
    public String title;
    public Episode withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
