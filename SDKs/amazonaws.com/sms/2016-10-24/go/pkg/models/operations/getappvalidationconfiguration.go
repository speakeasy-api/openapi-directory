// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAppValidationConfigurationXAmzTargetEnum
type GetAppValidationConfigurationXAmzTargetEnum string

const (
	GetAppValidationConfigurationXAmzTargetEnumAwsServerMigrationServiceV20161024GetAppValidationConfiguration GetAppValidationConfigurationXAmzTargetEnum = "AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration"
)

func (e GetAppValidationConfigurationXAmzTargetEnum) ToPointer() *GetAppValidationConfigurationXAmzTargetEnum {
	return &e
}

func (e *GetAppValidationConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration":
		*e = GetAppValidationConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAppValidationConfigurationXAmzTargetEnum: %v", v)
	}
}

type GetAppValidationConfigurationRequest struct {
	GetAppValidationConfigurationRequest shared.GetAppValidationConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           GetAppValidationConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAppValidationConfigurationResponse struct {
	ContentType string
	// Success
	GetAppValidationConfigurationResponse *shared.GetAppValidationConfigurationResponse
	// InternalError
	InternalError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// MissingRequiredParameterException
	MissingRequiredParameterException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnauthorizedOperationException
	UnauthorizedOperationException interface{}
}
