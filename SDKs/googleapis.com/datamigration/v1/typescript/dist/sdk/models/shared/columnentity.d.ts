import { SpeakeasyBase } from "../../../internal/utils";
/**
 * Column is not used as an independent entity, it is retrieved as part of a Table entity.
 */
export declare class ColumnEntity extends SpeakeasyBase {
    /**
     * Is the column of array type.
     */
    array?: boolean;
    /**
     * If the column is array, of which length.
     */
    arrayLength?: number;
    /**
     * Is the column auto-generated/identity.
     */
    autoGenerated?: boolean;
    /**
     * Charset override - instead of table level charset.
     */
    charset?: string;
    /**
     * Collation override - instead of table level collation.
     */
    collation?: string;
    /**
     * Comment associated with the column.
     */
    comment?: string;
    /**
     * Custom engine specific features.
     */
    customFeatures?: Record<string, any>;
    /**
     * Column data type.
     */
    dataType?: string;
    /**
     * Default value of the column.
     */
    defaultValue?: string;
    /**
     * Column fractional second precision - used for timestamp based datatypes.
     */
    fractionalSecondsPrecision?: number;
    /**
     * Column length - e.g. varchar (50).
     */
    length?: string;
    /**
     * Column name.
     */
    name?: string;
    /**
     * Is the column nullable.
     */
    nullable?: boolean;
    /**
     * Column order in the table.
     */
    ordinalPosition?: number;
    /**
     * Column precision - when relevant.
     */
    precision?: number;
    /**
     * Column scale - when relevant.
     */
    scale?: number;
    /**
     * Specifies the list of values allowed in the column. Only used for set data type.
     */
    setValues?: string[];
    /**
     * Is the column a UDT.
     */
    udt?: boolean;
}
