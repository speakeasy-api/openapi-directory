// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LabelingJobStatusEnum string

const (
	LabelingJobStatusEnumInitializing LabelingJobStatusEnum = "Initializing"
	LabelingJobStatusEnumInProgress   LabelingJobStatusEnum = "InProgress"
	LabelingJobStatusEnumCompleted    LabelingJobStatusEnum = "Completed"
	LabelingJobStatusEnumFailed       LabelingJobStatusEnum = "Failed"
	LabelingJobStatusEnumStopping     LabelingJobStatusEnum = "Stopping"
	LabelingJobStatusEnumStopped      LabelingJobStatusEnum = "Stopped"
)

func (e LabelingJobStatusEnum) ToPointer() *LabelingJobStatusEnum {
	return &e
}

func (e *LabelingJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Initializing":
		fallthrough
	case "InProgress":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		*e = LabelingJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LabelingJobStatusEnum: %v", v)
	}
}
