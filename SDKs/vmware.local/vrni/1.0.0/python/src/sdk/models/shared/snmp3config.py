"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class Snmp3ConfigAuthenticationTypeEnum(str, Enum):
    NO_AUTH = 'NO_AUTH'
    MD5 = 'MD5'
    SHA = 'SHA'

class Snmp3ConfigPrivacyTypeEnum(str, Enum):
    AES = 'AES'
    DES = 'DES'
    AES128 = 'AES128'
    AES192 = 'AES192'
    AES256 = 'AES256'
    THREE_DES = '3DES'
    NO_PRIV = 'NO_PRIV'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Snmp3Config:
    
    authentication_password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authentication_password'), 'exclude': lambda f: f is None }})  
    authentication_type: Optional[Snmp3ConfigAuthenticationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authentication_type'), 'exclude': lambda f: f is None }})  
    context_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context_name'), 'exclude': lambda f: f is None }})  
    privacy_password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privacy_password'), 'exclude': lambda f: f is None }})  
    privacy_type: Optional[Snmp3ConfigPrivacyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privacy_type'), 'exclude': lambda f: f is None }})  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})  
    