/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AccountUser {
    /**
     * Whether user is an admin.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("admin")
    public Boolean admin;
    public AccountUser withAdmin(Boolean admin) {
        this.admin = admin;
        return this;
    }
    
    /**
     * User's email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailAddress")
    public String emailAddress;
    public AccountUser withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }
    
    /**
     * Whether user is an order manager.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderManager")
    public Boolean orderManager;
    public AccountUser withOrderManager(Boolean orderManager) {
        this.orderManager = orderManager;
        return this;
    }
    
    /**
     * Whether user can access payment statements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentsAnalyst")
    public Boolean paymentsAnalyst;
    public AccountUser withPaymentsAnalyst(Boolean paymentsAnalyst) {
        this.paymentsAnalyst = paymentsAnalyst;
        return this;
    }
    
    /**
     * Whether user can manage payment settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentsManager")
    public Boolean paymentsManager;
    public AccountUser withPaymentsManager(Boolean paymentsManager) {
        this.paymentsManager = paymentsManager;
        return this;
    }
    
    /**
     * Whether user is a reporting manager.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportingManager")
    public Boolean reportingManager;
    public AccountUser withReportingManager(Boolean reportingManager) {
        this.reportingManager = reportingManager;
        return this;
    }
    
}
