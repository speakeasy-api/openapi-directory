// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MoveAccountXAmzTargetEnum
type MoveAccountXAmzTargetEnum string

const (
	MoveAccountXAmzTargetEnumAwsOrganizationsV20161128MoveAccount MoveAccountXAmzTargetEnum = "AWSOrganizationsV20161128.MoveAccount"
)

func (e MoveAccountXAmzTargetEnum) ToPointer() *MoveAccountXAmzTargetEnum {
	return &e
}

func (e *MoveAccountXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.MoveAccount":
		*e = MoveAccountXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MoveAccountXAmzTargetEnum: %v", v)
	}
}

type MoveAccountRequest struct {
	MoveAccountRequest shared.MoveAccountRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         MoveAccountXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type MoveAccountResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountNotFoundException
	AccountNotFoundException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// DestinationParentNotFoundException
	DestinationParentNotFoundException interface{}
	// DuplicateAccountException
	DuplicateAccountException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ServiceException
	ServiceException interface{}
	// SourceParentNotFoundException
	SourceParentNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
