// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConnectionProfileProviderEnum - The database provider.
type ConnectionProfileProviderEnum string

const (
	ConnectionProfileProviderEnumDatabaseProviderUnspecified ConnectionProfileProviderEnum = "DATABASE_PROVIDER_UNSPECIFIED"
	ConnectionProfileProviderEnumCloudsql                    ConnectionProfileProviderEnum = "CLOUDSQL"
	ConnectionProfileProviderEnumRds                         ConnectionProfileProviderEnum = "RDS"
	ConnectionProfileProviderEnumAurora                      ConnectionProfileProviderEnum = "AURORA"
	ConnectionProfileProviderEnumAlloydb                     ConnectionProfileProviderEnum = "ALLOYDB"
)

func (e *ConnectionProfileProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATABASE_PROVIDER_UNSPECIFIED":
		fallthrough
	case "CLOUDSQL":
		fallthrough
	case "RDS":
		fallthrough
	case "AURORA":
		fallthrough
	case "ALLOYDB":
		*e = ConnectionProfileProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionProfileProviderEnum: %s", s)
	}
}

// ConnectionProfileStateEnum - The current connection profile state (e.g. DRAFT, READY, or FAILED).
type ConnectionProfileStateEnum string

const (
	ConnectionProfileStateEnumStateUnspecified ConnectionProfileStateEnum = "STATE_UNSPECIFIED"
	ConnectionProfileStateEnumDraft            ConnectionProfileStateEnum = "DRAFT"
	ConnectionProfileStateEnumCreating         ConnectionProfileStateEnum = "CREATING"
	ConnectionProfileStateEnumReady            ConnectionProfileStateEnum = "READY"
	ConnectionProfileStateEnumUpdating         ConnectionProfileStateEnum = "UPDATING"
	ConnectionProfileStateEnumDeleting         ConnectionProfileStateEnum = "DELETING"
	ConnectionProfileStateEnumDeleted          ConnectionProfileStateEnum = "DELETED"
	ConnectionProfileStateEnumFailed           ConnectionProfileStateEnum = "FAILED"
)

func (e *ConnectionProfileStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "DRAFT":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		fallthrough
	case "FAILED":
		*e = ConnectionProfileStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionProfileStateEnum: %s", s)
	}
}

// ConnectionProfile - A connection profile definition.
type ConnectionProfile struct {
	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	Alloydb *AlloyDbConnectionProfile `json:"alloydb,omitempty"`
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	Cloudsql *CloudSQLConnectionProfile `json:"cloudsql,omitempty"`
	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `json:"createTime,omitempty"`
	// The connection profile display name.
	DisplayName *string `json:"displayName,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Error *Status `json:"error,omitempty"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels map[string]string `json:"labels,omitempty"`
	// Specifies connection parameters required specifically for MySQL databases.
	Mysql *MySQLConnectionProfile `json:"mysql,omitempty"`
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name *string `json:"name,omitempty"`
	// Specifies connection parameters required specifically for Oracle databases.
	Oracle *OracleConnectionProfile `json:"oracle,omitempty"`
	// Specifies connection parameters required specifically for PostgreSQL databases.
	Postgresql *PostgreSQLConnectionProfile `json:"postgresql,omitempty"`
	// The database provider.
	Provider *ConnectionProfileProviderEnum `json:"provider,omitempty"`
	// The current connection profile state (e.g. DRAFT, READY, or FAILED).
	State *ConnectionProfileStateEnum `json:"state,omitempty"`
	// Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `json:"updateTime,omitempty"`
}

// ConnectionProfileInput - A connection profile definition.
type ConnectionProfileInput struct {
	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	Alloydb *AlloyDbConnectionProfileInput `json:"alloydb,omitempty"`
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	Cloudsql *CloudSQLConnectionProfileInput `json:"cloudsql,omitempty"`
	// The connection profile display name.
	DisplayName *string `json:"displayName,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Error *Status `json:"error,omitempty"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels map[string]string `json:"labels,omitempty"`
	// Specifies connection parameters required specifically for MySQL databases.
	Mysql *MySQLConnectionProfileInput `json:"mysql,omitempty"`
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name *string `json:"name,omitempty"`
	// Specifies connection parameters required specifically for Oracle databases.
	Oracle *OracleConnectionProfileInput `json:"oracle,omitempty"`
	// Specifies connection parameters required specifically for PostgreSQL databases.
	Postgresql *PostgreSQLConnectionProfileInput `json:"postgresql,omitempty"`
	// The database provider.
	Provider *ConnectionProfileProviderEnum `json:"provider,omitempty"`
	// The current connection profile state (e.g. DRAFT, READY, or FAILED).
	State *ConnectionProfileStateEnum `json:"state,omitempty"`
}
