/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LockConfiguration } from "./lockconfiguration";
import { LockStateEnum } from "./lockstateenum";
import { ResourceTag } from "./resourcetag";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { RetentionPeriod } from "./retentionperiod";
import { RuleStatusEnum } from "./rulestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class UnlockRuleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Identifier" })
  identifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LockConfiguration" })
  @Type(() => LockConfiguration)
  lockConfiguration?: LockConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "LockEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lockEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LockState" })
  lockState?: LockStateEnum;

  @SpeakeasyMetadata({ elemType: ResourceTag })
  @Expose({ name: "ResourceTags" })
  @Type(() => ResourceTag)
  resourceTags?: ResourceTag[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceType" })
  resourceType?: ResourceTypeEnum;

  /**
   * Information about the retention period for which the retention rule is to retain resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RetentionPeriod" })
  @Type(() => RetentionPeriod)
  retentionPeriod?: RetentionPeriod;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: RuleStatusEnum;
}
