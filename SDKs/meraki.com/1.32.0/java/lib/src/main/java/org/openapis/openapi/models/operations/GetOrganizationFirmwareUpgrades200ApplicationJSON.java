/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetOrganizationFirmwareUpgrades200ApplicationJSON {
    /**
     * Timestamp when upgrade completed. Null if status pending.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completedAt")
    public String completedAt;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withCompletedAt(String completedAt) {
        this.completedAt = completedAt;
        return this;
    }
    
    /**
     * ID of the upgrade's starting version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromVersion")
    public GetOrganizationFirmwareUpgrades200ApplicationJSONFromVersion fromVersion;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withFromVersion(GetOrganizationFirmwareUpgrades200ApplicationJSONFromVersion fromVersion) {
        this.fromVersion = fromVersion;
        return this;
    }
    
    /**
     * Network of the upgrade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public GetOrganizationFirmwareUpgrades200ApplicationJSONNetwork network;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withNetwork(GetOrganizationFirmwareUpgrades200ApplicationJSONNetwork network) {
        this.network = network;
        return this;
    }
    
    /**
     * product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productType")
    public String productType;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withProductType(String productType) {
        this.productType = productType;
        return this;
    }
    
    /**
     * Status of upgrade event: [Cancelled, Completed]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Scheduled start time
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
    /**
     * ID of the upgrade's target version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toVersion")
    public GetOrganizationFirmwareUpgrades200ApplicationJSONToVersion toVersion;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withToVersion(GetOrganizationFirmwareUpgrades200ApplicationJSONToVersion toVersion) {
        this.toVersion = toVersion;
        return this;
    }
    
    /**
     * The upgrade batch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upgradeBatchId")
    public String upgradeBatchId;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withUpgradeBatchId(String upgradeBatchId) {
        this.upgradeBatchId = upgradeBatchId;
        return this;
    }
    
    /**
     * The upgrade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upgradeId")
    public String upgradeId;

    public GetOrganizationFirmwareUpgrades200ApplicationJSON withUpgradeId(String upgradeId) {
        this.upgradeId = upgradeId;
        return this;
    }
    
    public GetOrganizationFirmwareUpgrades200ApplicationJSON(){}
}
