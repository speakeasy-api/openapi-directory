/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The creation source of the payee.
 */
export enum GetPayeesPayeeBankAccountsPayeeCreatedByEnum {
  Customer = "CUSTOMER",
  Lodgement = "LODGEMENT",
  DirectDebit = "DIRECT DEBIT",
  OpenBanking = "OPEN BANKING",
  FireOpenPayment = "FIRE OPEN PAYMENT",
  FireDirect = "FIRE DIRECT",
}

/**
 * The three letter code for the currency - either `EUR` or `GBP`.
 */
export enum GetPayeesPayeeBankAccountsPayeeCurrencyCodeEnum {
  Eur = "EUR",
  Gbp = "GBP",
}

/**
 * The currency.
 */
export class GetPayeesPayeeBankAccountsPayeeCurrency extends SpeakeasyBase {
  /**
   * The three letter code for the currency - either `EUR` or `GBP`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: GetPayeesPayeeBankAccountsPayeeCurrencyCodeEnum;

  /**
   * The name of the currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

/**
 * The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.
 *
 * @remarks
 *   * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.
 *   * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.
 *   * 'CLOSED'
 *   * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.
 *
 */
export enum GetPayeesPayeeBankAccountsPayeeStatusEnum {
  Created = "CREATED",
  Live = "LIVE",
  Closed = "CLOSED",
  Archived = "ARCHIVED",
}

export class GetPayeesPayeeBankAccountsPayee extends SpeakeasyBase {
  /**
   * The name on the payee bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderName" })
  accountHolderName?: string;

  /**
   * The alias attributed to the payee, usually set by the user when creating the payee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountName" })
  accountName?: string;

  /**
   * The Account Number of the account if currency is GBP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber?: string;

  /**
   * The BIC of the account if currency is EUR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bic" })
  bic?: string;

  /**
   * The creation source of the payee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: GetPayeesPayeeBankAccountsPayeeCreatedByEnum;

  /**
   * The currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  @Type(() => GetPayeesPayeeBankAccountsPayeeCurrency)
  currency?: GetPayeesPayeeBankAccountsPayeeCurrency;

  /**
   * The date the payee was created. ISO Date Time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateCreated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The IBAN of the account if currency is EUR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iban" })
  iban?: string;

  /**
   * Identifier for the fire.com payee bank account (assigned by fire.com).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The Sort Code of the account if currency is GBP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nsc" })
  nsc?: string;

  /**
   * The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.
   *
   * @remarks
   *   * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.
   *   * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.
   *   * 'CLOSED'
   *   * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetPayeesPayeeBankAccountsPayeeStatusEnum;
}

/**
 * An array of Payee Bank Accounts
 */
export class GetPayeesPayeeBankAccounts extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetPayeesPayeeBankAccountsPayee })
  @Expose({ name: "fundingSources" })
  @Type(() => GetPayeesPayeeBankAccountsPayee)
  fundingSources?: GetPayeesPayeeBankAccountsPayee[];

  /**
   * The total number of payees in the list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetPayeesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of Payee Bank Accounts
   */
  @SpeakeasyMetadata()
  payeeBankAccounts?: GetPayeesPayeeBankAccounts;
}
