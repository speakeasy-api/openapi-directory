// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateASupplementalDocumentForAnEntityRequest struct {
	CreateASupplementalDocumentForAnEntityParameters shared.CreateASupplementalDocumentForAnEntityParameters `request:"mediaType=application/json"`
	EntityID                                         string                                                  `pathParam:"style=simple,explode=false,name=entity_id"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnumRateLimitedError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13 struct {
	Detail     string                                                                   `json:"detail"`
	RetryAfter *int64                                                                   `json:"retry_after,omitempty"`
	Status     CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                                   `json:"title"`
	Type       CreateASupplementalDocumentForAnEntityDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnumFourHundredAndThree CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnumPrivateFeatureError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12 struct {
	Detail string                                                                   `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                                   `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnumFourHundredAndFour CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnumObjectNotFoundError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11 struct {
	Detail string                                                                   `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                                   `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnumFourHundred CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnumMalformedRequestError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10 struct {
	Detail string                                                                   `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                                   `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnumFourHundred CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnumInvalidParametersError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                                `json:"errors,omitempty"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnumFourHundredAndNine CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnumInvalidOperationError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnumFourHundredAndOne CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnumFiveHundred CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnumInternalServerError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnumFourHundredAndThree CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnumFourHundredAndNine CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnumIdempotencyConflictError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnumFourHundredAndThree CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnumFourHundredAndFour CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnum string

const (
	CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1 struct {
	Detail string                                                                  `json:"detail"`
	Status CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                                  `json:"title"`
	Type   CreateASupplementalDocumentForAnEntityDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CreateASupplementalDocumentForAnEntityResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Entity
	Entity *shared.Entity
	// Error
	Error interface{}
}
