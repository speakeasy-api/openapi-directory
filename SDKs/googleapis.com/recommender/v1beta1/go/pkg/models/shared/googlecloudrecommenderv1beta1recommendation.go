// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRecommenderV1beta1RecommendationPriorityEnum - Recommendation's priority.
type GoogleCloudRecommenderV1beta1RecommendationPriorityEnum string

const (
	GoogleCloudRecommenderV1beta1RecommendationPriorityEnumPriorityUnspecified GoogleCloudRecommenderV1beta1RecommendationPriorityEnum = "PRIORITY_UNSPECIFIED"
	GoogleCloudRecommenderV1beta1RecommendationPriorityEnumP4                  GoogleCloudRecommenderV1beta1RecommendationPriorityEnum = "P4"
	GoogleCloudRecommenderV1beta1RecommendationPriorityEnumP3                  GoogleCloudRecommenderV1beta1RecommendationPriorityEnum = "P3"
	GoogleCloudRecommenderV1beta1RecommendationPriorityEnumP2                  GoogleCloudRecommenderV1beta1RecommendationPriorityEnum = "P2"
	GoogleCloudRecommenderV1beta1RecommendationPriorityEnumP1                  GoogleCloudRecommenderV1beta1RecommendationPriorityEnum = "P1"
)

func (e GoogleCloudRecommenderV1beta1RecommendationPriorityEnum) ToPointer() *GoogleCloudRecommenderV1beta1RecommendationPriorityEnum {
	return &e
}

func (e *GoogleCloudRecommenderV1beta1RecommendationPriorityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRIORITY_UNSPECIFIED":
		fallthrough
	case "P4":
		fallthrough
	case "P3":
		fallthrough
	case "P2":
		fallthrough
	case "P1":
		*e = GoogleCloudRecommenderV1beta1RecommendationPriorityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRecommenderV1beta1RecommendationPriorityEnum: %v", v)
	}
}

// GoogleCloudRecommenderV1beta1Recommendation - A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc
type GoogleCloudRecommenderV1beta1Recommendation struct {
	// Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.
	AdditionalImpact []GoogleCloudRecommenderV1beta1Impact `json:"additionalImpact,omitempty"`
	// Insights that led to this recommendation.
	AssociatedInsights []GoogleCloudRecommenderV1beta1RecommendationInsightReference `json:"associatedInsights,omitempty"`
	// Contains what resources are changing and how they are changing.
	Content *GoogleCloudRecommenderV1beta1RecommendationContent `json:"content,omitempty"`
	// Free-form human readable summary in English. The maximum length is 500 characters.
	Description *string `json:"description,omitempty"`
	// Fingerprint of the Recommendation. Provides optimistic locking when updating states.
	Etag *string `json:"etag,omitempty"`
	// Last time this recommendation was refreshed by the system that created it in the first place.
	LastRefreshTime *string `json:"lastRefreshTime,omitempty"`
	// Name of recommendation.
	Name *string `json:"name,omitempty"`
	// Contains the impact a recommendation can have for a given category.
	PrimaryImpact *GoogleCloudRecommenderV1beta1Impact `json:"primaryImpact,omitempty"`
	// Recommendation's priority.
	Priority *GoogleCloudRecommenderV1beta1RecommendationPriorityEnum `json:"priority,omitempty"`
	// Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = "google.iam.policy.Recommender", recommender_subtype can be one of "REMOVE_ROLE"/"REPLACE_ROLE"
	RecommenderSubtype *string `json:"recommenderSubtype,omitempty"`
	// Information for state. Contains state and metadata.
	StateInfo *GoogleCloudRecommenderV1beta1RecommendationStateInfo `json:"stateInfo,omitempty"`
	// Corresponds to a mutually exclusive group ID within a recommender. A non-empty ID indicates that the recommendation belongs to a mutually exclusive group. This means that only one recommendation within the group is suggested to be applied.
	XorGroupID *string `json:"xorGroupId,omitempty"`
}
