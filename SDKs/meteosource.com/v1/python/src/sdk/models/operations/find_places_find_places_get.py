"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import findplacesmodel as shared_findplacesmodel
from ..shared import generalrequesterror as shared_generalrequesterror
from ..shared import httpvalidationerror as shared_httpvalidationerror
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class FindPlacesFindPlacesGetSecurity:
    
    api_key_header: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Key' }})  
    
class FindPlacesFindPlacesGetLanguageLanguageEnum(str, Enum):
    r"""An enumeration."""
    CS = 'cs'
    EN = 'en'
    DE = 'de'
    ES = 'es'
    FR = 'fr'
    PL = 'pl'
    PT = 'pt'


@dataclasses.dataclass
class FindPlacesFindPlacesGetRequest:
    
    text: str = dataclasses.field(metadata={'query_param': { 'field_name': 'text', 'style': 'form', 'explode': True }})
    r"""Place name or ZIP code"""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."""  
    language: Optional[FindPlacesFindPlacesGetLanguageLanguageEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'language', 'style': 'form', 'explode': True }})
    r"""The language of text summaries and place names (variable names are never translated). Available languages are:
    
       * ``en``: English
       * ``es``: Spanish
       * ``fr``: French
       * ``de``: German
       * ``pl``: Polish
       * ``pt``: Portuguese
       * ``cs``: Czech
    """  
    

@dataclasses.dataclass
class FindPlacesFindPlacesGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    find_places_models: Optional[list[shared_findplacesmodel.FindPlacesModel]] = dataclasses.field(default=None)
    r"""Successful Response"""  
    general_request_error: Optional[shared_generalrequesterror.GeneralRequestError] = dataclasses.field(default=None)
    r"""Error in passed parameter."""  
    http_validation_error: Optional[shared_httpvalidationerror.HTTPValidationError] = dataclasses.field(default=None)
    r"""Validation Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    