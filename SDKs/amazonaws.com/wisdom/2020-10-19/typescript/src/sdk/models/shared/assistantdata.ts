/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssistantStatusEnum } from "./assistantstatusenum";
import { AssistantTypeEnum } from "./assistanttypeenum";
import { ServerSideEncryptionConfiguration } from "./serversideencryptionconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * The assistant data.
 */
export class AssistantData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assistantArn" })
  assistantArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assistantId" })
  assistantId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serverSideEncryptionConfiguration" })
  @Type(() => ServerSideEncryptionConfiguration)
  serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AssistantStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AssistantTypeEnum;
}
