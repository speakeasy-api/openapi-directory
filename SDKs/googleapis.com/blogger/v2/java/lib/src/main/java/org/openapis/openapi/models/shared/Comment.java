/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Comment - Successful response
 */
public class Comment {
    /**
     * The author of this Comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public CommentAuthor author;

    public Comment withAuthor(CommentAuthor author) {
        this.author = author;
        return this;
    }
    
    /**
     * Data about the blog containing this comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blog")
    public CommentBlog blog;

    public Comment withBlog(CommentBlog blog) {
        this.blog = blog;
        return this;
    }
    
    /**
     * The actual content of the comment. May include HTML markup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public Comment withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * The identifier for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Comment withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Data about the comment this is in reply to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inReplyTo")
    public CommentInReplyTo inReplyTo;

    public Comment withInReplyTo(CommentInReplyTo inReplyTo) {
        this.inReplyTo = inReplyTo;
        return this;
    }
    
    /**
     * The kind of this entry. Always blogger#comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Comment withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Data about the post containing this comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("post")
    public CommentPost post;

    public Comment withPost(CommentPost post) {
        this.post = post;
        return this;
    }
    
    /**
     * RFC 3339 date-time when this comment was published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("published")
    public String published;

    public Comment withPublished(String published) {
        this.published = published;
        return this;
    }
    
    /**
     * The API REST URL to fetch this resource from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Comment withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The status of the comment (only populated for admin users).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CommentStatusEnum status;

    public Comment withStatus(CommentStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * RFC 3339 date-time when this comment was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated")
    public String updated;

    public Comment withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    public Comment(){}
}
