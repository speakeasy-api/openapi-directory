/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class MediaFile {
    /**
     * The number of audio channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channels")
    public Integer channels;

    public MediaFile withChannels(Integer channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * The way in which the media file is delivered.
     */
    @JsonProperty("deliveryType")
    public MediaFileDeliveryTypeEnum deliveryType;

    public MediaFile withDeliveryType(MediaFileDeliveryTypeEnum deliveryType) {
        this.deliveryType = deliveryType;
        return this;
    }
    
    /**
     * The type of drm used to encrypt the media. 'None' if unencrypted.
     */
    @JsonProperty("drm")
    public String drm;

    public MediaFile withDrm(String drm) {
        this.drm = drm;
        return this;
    }
    
    /**
     * The format the media was encoded in.
     */
    @JsonProperty("format")
    public String format;

    public MediaFile withFormat(String format) {
        this.format = format;
        return this;
    }
    
    /**
     * The height of the video media.
     */
    @JsonProperty("height")
    public Integer height;

    public MediaFile withHeight(Integer height) {
        this.height = height;
        return this;
    }
    
    /**
     * The language code for the media, e.g. 'en'.
     */
    @JsonProperty("language")
    public String language;

    public MediaFile withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * The name of the media file.
     */
    @JsonProperty("name")
    public String name;

    public MediaFile withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The resolution of the video media.
     */
    @JsonProperty("resolution")
    public MediaFileResolutionEnum1 resolution;

    public MediaFile withResolution(MediaFileResolutionEnum1 resolution) {
        this.resolution = resolution;
        return this;
    }
    
    /**
     * The url to access the media file.
     */
    @JsonProperty("url")
    public String url;

    public MediaFile withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The width of the video media.
     */
    @JsonProperty("width")
    public Integer width;

    public MediaFile withWidth(Integer width) {
        this.width = width;
        return this;
    }
    
    public MediaFile(@JsonProperty("deliveryType") MediaFileDeliveryTypeEnum deliveryType, @JsonProperty("drm") String drm, @JsonProperty("format") String format, @JsonProperty("height") Integer height, @JsonProperty("language") String language, @JsonProperty("name") String name, @JsonProperty("resolution") MediaFileResolutionEnum1 resolution, @JsonProperty("url") String url, @JsonProperty("width") Integer width) {
        this.deliveryType = deliveryType;
        this.drm = drm;
        this.format = format;
        this.height = height;
        this.language = language;
        this.name = name;
        this.resolution = resolution;
        this.url = url;
        this.width = width;
  }
}
