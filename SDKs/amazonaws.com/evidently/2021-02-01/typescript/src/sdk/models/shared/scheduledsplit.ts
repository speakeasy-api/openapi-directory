/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentOverride } from "./segmentoverride";
import { Expose, Transform, Type } from "class-transformer";

/**
 * This structure defines the traffic allocation percentages among the feature variations during one step of a launch, and the start time of that step.
 */
export class ScheduledSplit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "groupWeights" })
  groupWeights?: Record<string, number>;

  @SpeakeasyMetadata({ elemType: SegmentOverride })
  @Expose({ name: "segmentOverrides" })
  @Type(() => SegmentOverride)
  segmentOverrides?: SegmentOverride[];

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;
}
