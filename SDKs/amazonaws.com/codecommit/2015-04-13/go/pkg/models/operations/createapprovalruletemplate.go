// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateApprovalRuleTemplateXAmzTargetEnum
type CreateApprovalRuleTemplateXAmzTargetEnum string

const (
	CreateApprovalRuleTemplateXAmzTargetEnumCodeCommit20150413CreateApprovalRuleTemplate CreateApprovalRuleTemplateXAmzTargetEnum = "CodeCommit_20150413.CreateApprovalRuleTemplate"
)

func (e CreateApprovalRuleTemplateXAmzTargetEnum) ToPointer() *CreateApprovalRuleTemplateXAmzTargetEnum {
	return &e
}

func (e *CreateApprovalRuleTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeCommit_20150413.CreateApprovalRuleTemplate":
		*e = CreateApprovalRuleTemplateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateApprovalRuleTemplateXAmzTargetEnum: %v", v)
	}
}

type CreateApprovalRuleTemplateRequest struct {
	CreateApprovalRuleTemplateInput shared.CreateApprovalRuleTemplateInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      CreateApprovalRuleTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateApprovalRuleTemplateResponse struct {
	// ApprovalRuleTemplateContentRequiredException
	ApprovalRuleTemplateContentRequiredException interface{}
	// ApprovalRuleTemplateNameAlreadyExistsException
	ApprovalRuleTemplateNameAlreadyExistsException interface{}
	// ApprovalRuleTemplateNameRequiredException
	ApprovalRuleTemplateNameRequiredException interface{}
	ContentType                               string
	// Success
	CreateApprovalRuleTemplateOutput *shared.CreateApprovalRuleTemplateOutput
	// InvalidApprovalRuleTemplateContentException
	InvalidApprovalRuleTemplateContentException interface{}
	// InvalidApprovalRuleTemplateDescriptionException
	InvalidApprovalRuleTemplateDescriptionException interface{}
	// InvalidApprovalRuleTemplateNameException
	InvalidApprovalRuleTemplateNameException interface{}
	// NumberOfRuleTemplatesExceededException
	NumberOfRuleTemplatesExceededException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
}
