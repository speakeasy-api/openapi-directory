/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class PastWebinarsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class PastWebinarsRequest extends SpeakeasyBase {
  /**
   * The webinar ID in "**long**" format(represented as int64 data type in JSON).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=webinarId",
  })
  webinarId: number;
}

export class PastWebinarsWebinarInstancesWebinars extends SpeakeasyBase {
  /**
   * Start time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * Webinar UUID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}

/**
 * List of webinars.
 */
export class PastWebinarsWebinarInstances extends SpeakeasyBase {
  /**
   * List of ended webinar instances.
   */
  @SpeakeasyMetadata({ elemType: PastWebinarsWebinarInstancesWebinars })
  @Expose({ name: "webinars" })
  @Type(() => PastWebinarsWebinarInstancesWebinars)
  webinars?: PastWebinarsWebinarInstancesWebinars[];
}

export class PastWebinarsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * List of past webinar instances returned.
   */
  @SpeakeasyMetadata()
  webinarInstances?: PastWebinarsWebinarInstances;
}
