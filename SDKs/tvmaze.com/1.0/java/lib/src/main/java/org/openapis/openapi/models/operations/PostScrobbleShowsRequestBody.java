/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class PostScrobbleShowsRequestBody {
    /**
     * The episode airdate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("airdate")
    public LocalDate airdate;

    public PostScrobbleShowsRequestBody withAirdate(LocalDate airdate) {
        this.airdate = airdate;
        return this;
    }
    
    /**
     * The episode number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("episode")
    public Long episode;

    public PostScrobbleShowsRequestBody withEpisode(Long episode) {
        this.episode = episode;
        return this;
    }
    
    /**
     * Epoch timestamp for when the user watched the episode, or 0 for unknown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marked_at")
    public Long markedAt;

    public PostScrobbleShowsRequestBody withMarkedAt(Long markedAt) {
        this.markedAt = markedAt;
        return this;
    }
    
    /**
     * The season number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("season")
    public Long season;

    public PostScrobbleShowsRequestBody withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    /**
     * 0 for watched, 1 for acquired, 2 for skipped
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public Object type;

    public PostScrobbleShowsRequestBody withType(Object type) {
        this.type = type;
        return this;
    }
    
    public PostScrobbleShowsRequestBody(){}
}
