/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  auth: string;
}

export class OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetRequest extends SpeakeasyBase {
  /**
   * http header: application/json or application/xml (Acceptable values are: "application/json", "application/xml")
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Cabin class: 'M', 'E', 'C', 'F'. Some flights have fewer classes (Acceptable values are: "M", "E", "C", "F")
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=cabinClass",
  })
  cabinClass: string;

  /**
   * Departure date (YYYY-MM-DD)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=date",
  })
  date: string;

  /**
   * Destination airport. 3-letter IATA airport code (e.g. 'MUC')
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=destination",
  })
  destination: string;

  /**
   * Flight number including carrier code and any suffix (e.g. 'LH2037')
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=flightNumber",
  })
  flightNumber: string;

  /**
   * Departure airport. 3-letter IATA airport code (e.g. 'TXL')
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=origin",
  })
  origin: string;
}

export class OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  offersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGet200ApplicationJSONObject?: Record<
    string,
    any
  >;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
