// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteCarrierGatewayResultCarrierGatewayStateEnum - The state of the carrier gateway.
type DeleteCarrierGatewayResultCarrierGatewayStateEnum string

const (
	DeleteCarrierGatewayResultCarrierGatewayStateEnumPending   DeleteCarrierGatewayResultCarrierGatewayStateEnum = "pending"
	DeleteCarrierGatewayResultCarrierGatewayStateEnumAvailable DeleteCarrierGatewayResultCarrierGatewayStateEnum = "available"
	DeleteCarrierGatewayResultCarrierGatewayStateEnumDeleting  DeleteCarrierGatewayResultCarrierGatewayStateEnum = "deleting"
	DeleteCarrierGatewayResultCarrierGatewayStateEnumDeleted   DeleteCarrierGatewayResultCarrierGatewayStateEnum = "deleted"
)

func (e DeleteCarrierGatewayResultCarrierGatewayStateEnum) ToPointer() *DeleteCarrierGatewayResultCarrierGatewayStateEnum {
	return &e
}

func (e *DeleteCarrierGatewayResultCarrierGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DeleteCarrierGatewayResultCarrierGatewayStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteCarrierGatewayResultCarrierGatewayStateEnum: %v", v)
	}
}

// DeleteCarrierGatewayResultCarrierGatewayTags - Describes a tag.
type DeleteCarrierGatewayResultCarrierGatewayTags struct {
	Key   *string
	Value *string
}

// DeleteCarrierGatewayResultCarrierGateway - Information about the carrier gateway.
type DeleteCarrierGatewayResultCarrierGateway struct {
	CarrierGatewayID *string
	OwnerID          *string
	State            *DeleteCarrierGatewayResultCarrierGatewayStateEnum
	Tags             []DeleteCarrierGatewayResultCarrierGatewayTags
	VpcID            *string
}

// DeleteCarrierGatewayResult - Success
type DeleteCarrierGatewayResult struct {
	CarrierGateway *DeleteCarrierGatewayResultCarrierGateway
}
