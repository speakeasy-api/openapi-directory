// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TimeOffTypeResourceAttributes struct {
	Name *string `json:"name,omitempty"`
}

// TimeOffTypeResourceTypeEnum - Time-off type resource name
type TimeOffTypeResourceTypeEnum string

const (
	TimeOffTypeResourceTypeEnumTimeOffType TimeOffTypeResourceTypeEnum = "TimeOffType"
)

func (e *TimeOffTypeResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TimeOffType":
		*e = TimeOffTypeResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeOffTypeResourceTypeEnum: %s", s)
	}
}

type TimeOffTypeResource struct {
	Attributes *TimeOffTypeResourceAttributes `json:"attributes,omitempty"`
	// identifier
	ID *int64 `json:"id,omitempty"`
	// Time-off type resource name
	Type *TimeOffTypeResourceTypeEnum `json:"type,omitempty"`
}
