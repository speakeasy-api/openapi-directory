"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2bigqueryoptions as shared_googleprivacydlpv2bigqueryoptions
from ..shared import googleprivacydlpv2cloudstorageoptions as shared_googleprivacydlpv2cloudstorageoptions
from ..shared import googleprivacydlpv2datastoreoptions as shared_googleprivacydlpv2datastoreoptions
from ..shared import googleprivacydlpv2hybridoptions as shared_googleprivacydlpv2hybridoptions
from ..shared import googleprivacydlpv2timespanconfig as shared_googleprivacydlpv2timespanconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2StorageConfig:
    r"""Shared message indicating Cloud storage type."""
    
    big_query_options: Optional[shared_googleprivacydlpv2bigqueryoptions.GooglePrivacyDlpV2BigQueryOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigQueryOptions'), 'exclude': lambda f: f is None }})
    r"""Options defining BigQuery table and row identifiers."""  
    cloud_storage_options: Optional[shared_googleprivacydlpv2cloudstorageoptions.GooglePrivacyDlpV2CloudStorageOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudStorageOptions'), 'exclude': lambda f: f is None }})
    r"""Options defining a file or a set of files within a Cloud Storage bucket."""  
    datastore_options: Optional[shared_googleprivacydlpv2datastoreoptions.GooglePrivacyDlpV2DatastoreOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datastoreOptions'), 'exclude': lambda f: f is None }})
    r"""Options defining a data set within Google Cloud Datastore."""  
    hybrid_options: Optional[shared_googleprivacydlpv2hybridoptions.GooglePrivacyDlpV2HybridOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hybridOptions'), 'exclude': lambda f: f is None }})
    r"""Configuration to control jobs where the content being inspected is outside of Google Cloud Platform."""  
    timespan_config: Optional[shared_googleprivacydlpv2timespanconfig.GooglePrivacyDlpV2TimespanConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timespanConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery."""  
    