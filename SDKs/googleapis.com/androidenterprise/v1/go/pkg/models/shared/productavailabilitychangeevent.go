// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductAvailabilityChangeEventAvailabilityStatusEnum - The new state of the product. This field will always be present.
type ProductAvailabilityChangeEventAvailabilityStatusEnum string

const (
	ProductAvailabilityChangeEventAvailabilityStatusEnumUnknown     ProductAvailabilityChangeEventAvailabilityStatusEnum = "unknown"
	ProductAvailabilityChangeEventAvailabilityStatusEnumAvailable   ProductAvailabilityChangeEventAvailabilityStatusEnum = "available"
	ProductAvailabilityChangeEventAvailabilityStatusEnumRemoved     ProductAvailabilityChangeEventAvailabilityStatusEnum = "removed"
	ProductAvailabilityChangeEventAvailabilityStatusEnumUnpublished ProductAvailabilityChangeEventAvailabilityStatusEnum = "unpublished"
)

func (e ProductAvailabilityChangeEventAvailabilityStatusEnum) ToPointer() *ProductAvailabilityChangeEventAvailabilityStatusEnum {
	return &e
}

func (e *ProductAvailabilityChangeEventAvailabilityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown":
		fallthrough
	case "available":
		fallthrough
	case "removed":
		fallthrough
	case "unpublished":
		*e = ProductAvailabilityChangeEventAvailabilityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductAvailabilityChangeEventAvailabilityStatusEnum: %v", v)
	}
}

// ProductAvailabilityChangeEvent - An event generated whenever a product's availability changes.
type ProductAvailabilityChangeEvent struct {
	// The new state of the product. This field will always be present.
	AvailabilityStatus *ProductAvailabilityChangeEventAvailabilityStatusEnum `json:"availabilityStatus,omitempty"`
	// The id of the product (e.g. "app:com.google.android.gm") for which the product availability changed. This field will always be present.
	ProductID *string `json:"productId,omitempty"`
}
