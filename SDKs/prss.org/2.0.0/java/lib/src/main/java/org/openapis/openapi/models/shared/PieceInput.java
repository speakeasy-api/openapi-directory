/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PieceInput - The metadata about a "piece" which may be a story, song, report, etc.
 */
public class PieceInput {
    /**
     * The artist or contributor name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contributor")
    public String contributor;

    public PieceInput withContributor(String contributor) {
        this.contributor = contributor;
        return this;
    }
    
    /**
     * The short description of the piece.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public PieceInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The ID of the episode that owns the piece.
     */
    @JsonProperty("episodeId")
    public Long episodeId;

    public PieceInput withEpisodeId(Long episodeId) {
        this.episodeId = episodeId;
        return this;
    }
    
    /**
     * The long description of the piece.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullDescription")
    public String fullDescription;

    public PieceInput withFullDescription(String fullDescription) {
        this.fullDescription = fullDescription;
        return this;
    }
    
    /**
     * The URI to the piece image content in CD Drive. Format should be 'cddrive:id:{value}' or 'cddrive://{path}'. This property is only used on modification and is not returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageCdDriveUri")
    public String imageCdDriveUri;

    public PieceInput withImageCdDriveUri(String imageCdDriveUri) {
        this.imageCdDriveUri = imageCdDriveUri;
        return this;
    }
    
    /**
     * The name of the piece image file. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageFileName")
    public String imageFileName;

    public PieceInput withImageFileName(String imageFileName) {
        this.imageFileName = imageFileName;
        return this;
    }
    
    /**
     * The size of the piece image file in bytes. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageFileSize")
    public Long imageFileSize;

    public PieceInput withImageFileSize(Long imageFileSize) {
        this.imageFileSize = imageFileSize;
        return this;
    }
    
    /**
     * The user's original name of the piece image file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageOriginalFileName")
    public String imageOriginalFileName;

    public PieceInput withImageOriginalFileName(String imageOriginalFileName) {
        this.imageOriginalFileName = imageOriginalFileName;
        return this;
    }
    
    /**
     * Seconds relative to the start of the episode.
     */
    @JsonProperty("relativeEndTime")
    public Integer relativeEndTime;

    public PieceInput withRelativeEndTime(Integer relativeEndTime) {
        this.relativeEndTime = relativeEndTime;
        return this;
    }
    
    /**
     * Seconds relative to the start of the episode.
     */
    @JsonProperty("relativeStartTime")
    public Integer relativeStartTime;

    public PieceInput withRelativeStartTime(Integer relativeStartTime) {
        this.relativeStartTime = relativeStartTime;
        return this;
    }
    
    /**
     * The number of the segment that this piece is in, starting with 1. This is an optional field but it can be used to provide more detail by linking the piece to a specific audio segment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segmentNumber")
    public Integer segmentNumber;

    public PieceInput withSegmentNumber(Integer segmentNumber) {
        this.segmentNumber = segmentNumber;
        return this;
    }
    
    /**
     * The human readable title of the piece that is normally displayed on an end user's device.
     */
    @JsonProperty("title")
    public String title;

    public PieceInput withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public PieceInput(@JsonProperty("episodeId") Long episodeId, @JsonProperty("relativeEndTime") Integer relativeEndTime, @JsonProperty("relativeStartTime") Integer relativeStartTime, @JsonProperty("title") String title) {
        this.episodeId = episodeId;
        this.relativeEndTime = relativeEndTime;
        this.relativeStartTime = relativeStartTime;
        this.title = title;
  }
}
