// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTRunScheduledInstancesActionEnum
type POSTRunScheduledInstancesActionEnum string

const (
	POSTRunScheduledInstancesActionEnumRunScheduledInstances POSTRunScheduledInstancesActionEnum = "RunScheduledInstances"
)

func (e POSTRunScheduledInstancesActionEnum) ToPointer() *POSTRunScheduledInstancesActionEnum {
	return &e
}

func (e *POSTRunScheduledInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RunScheduledInstances":
		*e = POSTRunScheduledInstancesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRunScheduledInstancesActionEnum: %v", v)
	}
}

// POSTRunScheduledInstancesVersionEnum
type POSTRunScheduledInstancesVersionEnum string

const (
	POSTRunScheduledInstancesVersionEnumTwoThousandAndSixteen1115 POSTRunScheduledInstancesVersionEnum = "2016-11-15"
)

func (e POSTRunScheduledInstancesVersionEnum) ToPointer() *POSTRunScheduledInstancesVersionEnum {
	return &e
}

func (e *POSTRunScheduledInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTRunScheduledInstancesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRunScheduledInstancesVersionEnum: %v", v)
	}
}

type POSTRunScheduledInstancesRequest struct {
	Action            POSTRunScheduledInstancesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                               `request:"mediaType=text/xml"`
	Version           POSTRunScheduledInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTRunScheduledInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
