/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerGame {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assists")
    public Double assists;

    public PlayerGame withAssists(Double assists) {
        this.assists = assists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CombatPlayerScore")
    public Double combatPlayerScore;

    public PlayerGame withCombatPlayerScore(Double combatPlayerScore) {
        this.combatPlayerScore = combatPlayerScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public PlayerGame withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public PlayerGame withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Deaths")
    public Double deaths;

    public PlayerGame withDeaths(Double deaths) {
        this.deaths = deaths;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DoubleKills")
    public Double doubleKills;

    public PlayerGame withDoubleKills(Double doubleKills) {
        this.doubleKills = doubleKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;

    public PlayerGame withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameId")
    public Long gameId;

    public PlayerGame withGameId(Long gameId) {
        this.gameId = gameId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;

    public PlayerGame withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoldEarned")
    public Double goldEarned;

    public PlayerGame withGoldEarned(Double goldEarned) {
        this.goldEarned = goldEarned;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoldSpent")
    public Double goldSpent;

    public PlayerGame withGoldSpent(Double goldSpent) {
        this.goldSpent = goldSpent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InhibitorKills")
    public Double inhibitorKills;

    public PlayerGame withInhibitorKills(Double inhibitorKills) {
        this.inhibitorKills = inhibitorKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsClosed")
    public Boolean isClosed;

    public PlayerGame withIsClosed(Boolean isClosed) {
        this.isClosed = isClosed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KillingSpree")
    public Double killingSpree;

    public PlayerGame withKillingSpree(Double killingSpree) {
        this.killingSpree = killingSpree;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Kills")
    public Double kills;

    public PlayerGame withKills(Double kills) {
        this.kills = kills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LargestCriticalStrike")
    public Double largestCriticalStrike;

    public PlayerGame withLargestCriticalStrike(Double largestCriticalStrike) {
        this.largestCriticalStrike = largestCriticalStrike;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LargestKillingSpree")
    public Double largestKillingSpree;

    public PlayerGame withLargestKillingSpree(Double largestKillingSpree) {
        this.largestKillingSpree = largestKillingSpree;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LargestMultiKill")
    public Double largestMultiKill;

    public PlayerGame withLargestMultiKill(Double largestMultiKill) {
        this.largestMultiKill = largestMultiKill;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LongestTimeSpentLiving")
    public Double longestTimeSpentLiving;

    public PlayerGame withLongestTimeSpentLiving(Double longestTimeSpentLiving) {
        this.longestTimeSpentLiving = longestTimeSpentLiving;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MagicDamageDealt")
    public Double magicDamageDealt;

    public PlayerGame withMagicDamageDealt(Double magicDamageDealt) {
        this.magicDamageDealt = magicDamageDealt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MagicDamageDealtToChampions")
    public Double magicDamageDealtToChampions;

    public PlayerGame withMagicDamageDealtToChampions(Double magicDamageDealtToChampions) {
        this.magicDamageDealtToChampions = magicDamageDealtToChampions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MagicDamageTaken")
    public Double magicDamageTaken;

    public PlayerGame withMagicDamageTaken(Double magicDamageTaken) {
        this.magicDamageTaken = magicDamageTaken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MatchName")
    public String matchName;

    public PlayerGame withMatchName(String matchName) {
        this.matchName = matchName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Matches")
    public Long matches;

    public PlayerGame withMatches(Long matches) {
        this.matches = matches;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public PlayerGame withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NeutralMinionsKIlled")
    public Double neutralMinionsKIlled;

    public PlayerGame withNeutralMinionsKIlled(Double neutralMinionsKIlled) {
        this.neutralMinionsKIlled = neutralMinionsKIlled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NeutralMinionsKIlledTeamJungle")
    public Double neutralMinionsKIlledTeamJungle;

    public PlayerGame withNeutralMinionsKIlledTeamJungle(Double neutralMinionsKIlledTeamJungle) {
        this.neutralMinionsKIlledTeamJungle = neutralMinionsKIlledTeamJungle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NeutralMinionsKilledEnemyJungle")
    public Double neutralMinionsKilledEnemyJungle;

    public PlayerGame withNeutralMinionsKilledEnemyJungle(Double neutralMinionsKilledEnemyJungle) {
        this.neutralMinionsKilledEnemyJungle = neutralMinionsKilledEnemyJungle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ObjectivePlayerScore")
    public Double objectivePlayerScore;

    public PlayerGame withObjectivePlayerScore(Double objectivePlayerScore) {
        this.objectivePlayerScore = objectivePlayerScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;

    public PlayerGame withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentId")
    public Long opponentId;

    public PlayerGame withOpponentId(Long opponentId) {
        this.opponentId = opponentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PentaKills")
    public Double pentaKills;

    public PlayerGame withPentaKills(Double pentaKills) {
        this.pentaKills = pentaKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PhysicalDamageDealt")
    public Double physicalDamageDealt;

    public PlayerGame withPhysicalDamageDealt(Double physicalDamageDealt) {
        this.physicalDamageDealt = physicalDamageDealt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PhysicalDamageDealtToChampions")
    public Double physicalDamageDealtToChampions;

    public PlayerGame withPhysicalDamageDealtToChampions(Double physicalDamageDealtToChampions) {
        this.physicalDamageDealtToChampions = physicalDamageDealtToChampions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PhysicalDamageTaken")
    public Double physicalDamageTaken;

    public PlayerGame withPhysicalDamageTaken(Double physicalDamageTaken) {
        this.physicalDamageTaken = physicalDamageTaken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerId")
    public Long playerId;

    public PlayerGame withPlayerId(Long playerId) {
        this.playerId = playerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Position")
    public String position;

    public PlayerGame withPosition(String position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuadraKills")
    public Double quadraKills;

    public PlayerGame withQuadraKills(Double quadraKills) {
        this.quadraKills = quadraKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SightWardsBoughtInGame")
    public Double sightWardsBoughtInGame;

    public PlayerGame withSightWardsBoughtInGame(Double sightWardsBoughtInGame) {
        this.sightWardsBoughtInGame = sightWardsBoughtInGame;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public PlayerGame withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamId")
    public Long teamId;

    public PlayerGame withTeamId(Long teamId) {
        this.teamId = teamId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TenKillsOrAssists")
    public Double tenKillsOrAssists;

    public PlayerGame withTenKillsOrAssists(Double tenKillsOrAssists) {
        this.tenKillsOrAssists = tenKillsOrAssists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalDamageDealt")
    public Double totalDamageDealt;

    public PlayerGame withTotalDamageDealt(Double totalDamageDealt) {
        this.totalDamageDealt = totalDamageDealt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalDamageDealtToChampions")
    public Double totalDamageDealtToChampions;

    public PlayerGame withTotalDamageDealtToChampions(Double totalDamageDealtToChampions) {
        this.totalDamageDealtToChampions = totalDamageDealtToChampions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalDamageTaken")
    public Double totalDamageTaken;

    public PlayerGame withTotalDamageTaken(Double totalDamageTaken) {
        this.totalDamageTaken = totalDamageTaken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalHeal")
    public Double totalHeal;

    public PlayerGame withTotalHeal(Double totalHeal) {
        this.totalHeal = totalHeal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalMinionsKilled")
    public Double totalMinionsKilled;

    public PlayerGame withTotalMinionsKilled(Double totalMinionsKilled) {
        this.totalMinionsKilled = totalMinionsKilled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalPlayerScore")
    public Double totalPlayerScore;

    public PlayerGame withTotalPlayerScore(Double totalPlayerScore) {
        this.totalPlayerScore = totalPlayerScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalTimeCrowdControlDealt")
    public Double totalTimeCrowdControlDealt;

    public PlayerGame withTotalTimeCrowdControlDealt(Double totalTimeCrowdControlDealt) {
        this.totalTimeCrowdControlDealt = totalTimeCrowdControlDealt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalUnitsHealed")
    public Double totalUnitsHealed;

    public PlayerGame withTotalUnitsHealed(Double totalUnitsHealed) {
        this.totalUnitsHealed = totalUnitsHealed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TripleKills")
    public Double tripleKills;

    public PlayerGame withTripleKills(Double tripleKills) {
        this.tripleKills = tripleKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueDamageDealt")
    public Double trueDamageDealt;

    public PlayerGame withTrueDamageDealt(Double trueDamageDealt) {
        this.trueDamageDealt = trueDamageDealt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueDamageDealtToChampions")
    public Double trueDamageDealtToChampions;

    public PlayerGame withTrueDamageDealtToChampions(Double trueDamageDealtToChampions) {
        this.trueDamageDealtToChampions = trueDamageDealtToChampions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueDamageTaken")
    public Double trueDamageTaken;

    public PlayerGame withTrueDamageTaken(Double trueDamageTaken) {
        this.trueDamageTaken = trueDamageTaken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TurretKills")
    public Double turretKills;

    public PlayerGame withTurretKills(Double turretKills) {
        this.turretKills = turretKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UnrealKills")
    public Double unrealKills;

    public PlayerGame withUnrealKills(Double unrealKills) {
        this.unrealKills = unrealKills;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public PlayerGame withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VisionWardsBoughtInGame")
    public Double visionWardsBoughtInGame;

    public PlayerGame withVisionWardsBoughtInGame(Double visionWardsBoughtInGame) {
        this.visionWardsBoughtInGame = visionWardsBoughtInGame;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WardsKilled")
    public Double wardsKilled;

    public PlayerGame withWardsKilled(Double wardsKilled) {
        this.wardsKilled = wardsKilled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WardsPlaced")
    public Double wardsPlaced;

    public PlayerGame withWardsPlaced(Double wardsPlaced) {
        this.wardsPlaced = wardsPlaced;
        return this;
    }
    
    public PlayerGame(){}
}
