"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
var utils_1 = require("../../../internal/utils");
var articleandparentcomment_1 = require("./articleandparentcomment");
var textentry_1 = require("./textentry");
var class_transformer_1 = require("class-transformer");
/**
 * Context is typically something that a Comment is referencing or replying to (such as an article, or previous comment). Note: Populate only ONE OF the following fields. The oneof syntax cannot be used because that would require nesting entries inside another message and breaking backwards compatibility. The server will return an error if more than one of the following fields is present.
 */
var Context = /** @class */ (function (_super) {
    __extends(Context, _super);
    function Context() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "articleAndParentComment" }),
        (0, class_transformer_1.Type)(function () { return articleandparentcomment_1.ArticleAndParentComment; }),
        __metadata("design:type", articleandparentcomment_1.ArticleAndParentComment)
    ], Context.prototype, "articleAndParentComment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: textentry_1.TextEntry }),
        (0, class_transformer_1.Expose)({ name: "entries" }),
        (0, class_transformer_1.Type)(function () { return textentry_1.TextEntry; }),
        __metadata("design:type", Array)
    ], Context.prototype, "entries", void 0);
    return Context;
}(utils_1.SpeakeasyBase));
exports.Context = Context;
