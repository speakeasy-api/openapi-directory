/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TopDirectionSources } from "./topdirectionsources";
import { Expose, Type } from "class-transformer";

/**
 * A location indexed with the regions that people usually come from. This is captured by counting how many driving-direction requests to this location are from each region.
 */
export class LocationDrivingDirectionMetrics extends SpeakeasyBase {
  /**
   * The location resource name this metric value belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationName" })
  locationName?: string;

  /**
   * Time zone (IANA timezone IDs, for example, 'Europe/London') of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;

  /**
   * Driving-direction requests by source region. By convention, these are sorted by count with at most 10 results.
   */
  @SpeakeasyMetadata({ elemType: TopDirectionSources })
  @Expose({ name: "topDirectionSources" })
  @Type(() => TopDirectionSources)
  topDirectionSources?: TopDirectionSources[];
}
