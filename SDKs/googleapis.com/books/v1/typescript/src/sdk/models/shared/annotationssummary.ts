/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class AnnotationsSummaryLayers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowedCharacterCount" })
  allowedCharacterCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "layerId" })
  layerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "limitType" })
  limitType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "remainingCharacterCount" })
  remainingCharacterCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: string;
}

/**
 * Successful response
 */
export class AnnotationsSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  @SpeakeasyMetadata({ elemType: AnnotationsSummaryLayers })
  @Expose({ name: "layers" })
  @Type(() => AnnotationsSummaryLayers)
  layers?: AnnotationsSummaryLayers[];
}
