/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetV4LayersAsPlantedSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Api-Key",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2AuthorizationCode?: string;
}

export class GetV4LayersAsPlantedRequest extends SpeakeasyBase {
  /**
   * Must be either \* /* or application/octet-stream,application/json
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Max number of results to return per batch.  Must be between 1 and 100 inclusive.  Defaults to 100.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Limit",
  })
  xLimit?: number;

  /**
   * Opaque string which allows for fetching the next batch of results.  Can be used to poll for changes.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Next-Token",
  })
  xNextToken?: string;

  /**
   * Optional start time by which to filter layer results. Time must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339). Layers with an end time at or after (inclusive) the specified time will match this filter. If both occurredAfter and occurredBefore are populated, occurredAfter must be <= occurredBefore.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=occurredAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  occurredAfter?: Date;

  /**
   * Optional end time by which to filter layer results. Time must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339). Layers with a start time at or before (inclusive) the specified time. If both occurredAfter and occurredBefore are populated, occurredAfter must be <= occurredBefore.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=occurredBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  occurredBefore?: Date;

  /**
   * Optional unique identifier of the resource owner.  If resourceOwnerId is not specified, it defaults to the x-authenticated-user-uuid.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resourceOwnerId",
  })
  resourceOwnerId?: string;

  /**
   * Optional updated time by which to filter layer results. Time must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339). Layers with a modification time at or after (inclusive) the specified time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updatedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  updatedAfter?: Date;
}

export class GetV4LayersAsPlantedResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Modified
   */
  @SpeakeasyMetadata()
  empty?: Record<string, any>;

  /**
   * Bad Input
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  plantingActivities?: shared.PlantingActivities;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
