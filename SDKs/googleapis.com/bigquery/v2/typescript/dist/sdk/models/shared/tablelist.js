"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TableList = exports.TableListTables = exports.TableListTablesView = void 0;
var utils_1 = require("../../../internal/utils");
var clustering_1 = require("./clustering");
var rangepartitioning_1 = require("./rangepartitioning");
var tablereference_1 = require("./tablereference");
var timepartitioning_1 = require("./timepartitioning");
var class_transformer_1 = require("class-transformer");
/**
 * Additional details for a view.
 */
var TableListTablesView = /** @class */ (function (_super) {
    __extends(TableListTablesView, _super);
    function TableListTablesView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useLegacySql" }),
        __metadata("design:type", Boolean)
    ], TableListTablesView.prototype, "useLegacySql", void 0);
    return TableListTablesView;
}(utils_1.SpeakeasyBase));
exports.TableListTablesView = TableListTablesView;
var TableListTables = /** @class */ (function (_super) {
    __extends(TableListTables, _super);
    function TableListTables() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clustering" }),
        (0, class_transformer_1.Type)(function () { return clustering_1.Clustering; }),
        __metadata("design:type", clustering_1.Clustering)
    ], TableListTables.prototype, "clustering", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTime" }),
        __metadata("design:type", String)
    ], TableListTables.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expirationTime" }),
        __metadata("design:type", String)
    ], TableListTables.prototype, "expirationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "friendlyName" }),
        __metadata("design:type", String)
    ], TableListTables.prototype, "friendlyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], TableListTables.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], TableListTables.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], TableListTables.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rangePartitioning" }),
        (0, class_transformer_1.Type)(function () { return rangepartitioning_1.RangePartitioning; }),
        __metadata("design:type", rangepartitioning_1.RangePartitioning)
    ], TableListTables.prototype, "rangePartitioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tableReference" }),
        (0, class_transformer_1.Type)(function () { return tablereference_1.TableReference; }),
        __metadata("design:type", tablereference_1.TableReference)
    ], TableListTables.prototype, "tableReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timePartitioning" }),
        (0, class_transformer_1.Type)(function () { return timepartitioning_1.TimePartitioning; }),
        __metadata("design:type", timepartitioning_1.TimePartitioning)
    ], TableListTables.prototype, "timePartitioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TableListTables.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "view" }),
        (0, class_transformer_1.Type)(function () { return TableListTablesView; }),
        __metadata("design:type", TableListTablesView)
    ], TableListTables.prototype, "view", void 0);
    return TableListTables;
}(utils_1.SpeakeasyBase));
exports.TableListTables = TableListTables;
/**
 * Successful response
 */
var TableList = /** @class */ (function (_super) {
    __extends(TableList, _super);
    function TableList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], TableList.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], TableList.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nextPageToken" }),
        __metadata("design:type", String)
    ], TableList.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TableListTables }),
        (0, class_transformer_1.Expose)({ name: "tables" }),
        (0, class_transformer_1.Type)(function () { return TableListTables; }),
        __metadata("design:type", Array)
    ], TableList.prototype, "tables", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "totalItems" }),
        __metadata("design:type", Number)
    ], TableList.prototype, "totalItems", void 0);
    return TableList;
}(utils_1.SpeakeasyBase));
exports.TableList = TableList;
