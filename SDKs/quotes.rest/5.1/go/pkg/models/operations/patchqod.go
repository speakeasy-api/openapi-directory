// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PatchQodSecurity struct {
	BearerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

type PatchQodRequest struct {
	// Comma seperated author names. Quotes will be chosen from one of these authors.
	Authors *string `queryParam:"style=form,explode=true,name=authors"`
	// Quotes language.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// Should apply the filters to the private collection. Default is public quotes in the platform.
	Private *bool `queryParam:"style=form,explode=true,name=private"`
	// How many days after the quotes can repeat? If you are setting this up from your private collection make sure you have more quotes that meet the filter conditions than the days you specify here.
	RepeatAfter *int64 `queryParam:"style=form,explode=true,name=repeat_after"`
	// Consider only quotes marked as "sfw" (Safe for work).
	Sfw *bool `queryParam:"style=form,explode=true,name=sfw"`
	// Title of the Quote of the day category
	Title string `queryParam:"style=form,explode=true,name=title"`
}

type PatchQodResponse struct {
	ContentType string
	// 200  response
	QuoteResponse *shared.QuoteResponse
	StatusCode    int
	RawResponse   *http.Response
}
