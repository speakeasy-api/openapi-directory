// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateGroupIfNotExistsForUsingPOSTQueryParams struct {
	GroupMapper *string `queryParam:"style=form,explode=true,name=groupMapper"`
}

type CreateGroupIfNotExistsForUsingPOSTRequest struct {
	QueryParams CreateGroupIfNotExistsForUsingPOSTQueryParams
}

// CreateGroupIfNotExistsForUsingPOST500ApplicationJSON - internal api error (code 2)
type CreateGroupIfNotExistsForUsingPOST500ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// CreateGroupIfNotExistsForUsingPOST401ApplicationJSON - no or wrong API key (code 4)
type CreateGroupIfNotExistsForUsingPOST401ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// CreateGroupIfNotExistsForUsingPOST400ApplicationJSON - generic api error (code 1)
type CreateGroupIfNotExistsForUsingPOST400ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

type CreateGroupIfNotExistsForUsingPOST200ApplicationJSONData struct {
	GroupID *string `json:"groupID,omitempty"`
}

// CreateGroupIfNotExistsForUsingPOST200ApplicationJSON - ok (code 0)
type CreateGroupIfNotExistsForUsingPOST200ApplicationJSON struct {
	Code    *int64                                                    `json:"code,omitempty"`
	Data    *CreateGroupIfNotExistsForUsingPOST200ApplicationJSONData `json:"data,omitempty"`
	Message *string                                                   `json:"message,omitempty"`
}

type CreateGroupIfNotExistsForUsingPOSTResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ok (code 0)
	CreateGroupIfNotExistsForUsingPOST200ApplicationJSONObject *CreateGroupIfNotExistsForUsingPOST200ApplicationJSON
	// generic api error (code 1)
	CreateGroupIfNotExistsForUsingPOST400ApplicationJSONObject *CreateGroupIfNotExistsForUsingPOST400ApplicationJSON
	// no or wrong API key (code 4)
	CreateGroupIfNotExistsForUsingPOST401ApplicationJSONObject *CreateGroupIfNotExistsForUsingPOST401ApplicationJSON
	// internal api error (code 2)
	CreateGroupIfNotExistsForUsingPOST500ApplicationJSONObject *CreateGroupIfNotExistsForUsingPOST500ApplicationJSON
}
