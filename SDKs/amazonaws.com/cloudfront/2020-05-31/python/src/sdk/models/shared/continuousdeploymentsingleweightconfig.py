"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sessionstickinessconfig as shared_sessionstickinessconfig
from typing import Optional


@dataclasses.dataclass
class ContinuousDeploymentSingleWeightConfig:
    r"""Contains the percentage of traffic to send to a staging distribution."""
    
    weight: float = dataclasses.field()  
    session_stickiness_config: Optional[shared_sessionstickinessconfig.SessionStickinessConfig] = dataclasses.field(default=None)
    r"""Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values."""  
    