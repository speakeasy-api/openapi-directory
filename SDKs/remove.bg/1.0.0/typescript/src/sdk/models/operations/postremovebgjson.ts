/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostRemovebgJson400WildcardErrors extends SpeakeasyBase {
  /**
   * Error code
   */
  @SpeakeasyMetadata()
  code?: string;

  /**
   * Detailed description of the error
   */
  @SpeakeasyMetadata()
  detail?: string;

  /**
   * Error message
   */
  @SpeakeasyMetadata()
  title?: string;
}

/**
 * Error: Invalid parameters or input file unprocessable (no credits charged)
 */
export class PostRemovebgJson400Wildcard extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PostRemovebgJson400WildcardErrors })
  errors?: PostRemovebgJson400WildcardErrors[];
}

export class PostRemovebgJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Image background removed
   */
  @SpeakeasyMetadata()
  removeBgJsonResponse?: shared.RemoveBgJsonResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Image background removed
   */
  @SpeakeasyMetadata()
  postRemovebgJson200ImageWildcardBinaryString?: Uint8Array;
}
