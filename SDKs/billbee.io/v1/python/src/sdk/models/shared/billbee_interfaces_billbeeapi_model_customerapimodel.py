"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import billbee_interfaces_billbeeapi_models_customermetadataapimodel as shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelCustomerAPIModelInput:
    
    archived_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ArchivedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ArchivedAt' }})
    r"""If set, the customer was already archived at the given date. Further modification is disabled."""  
    default_commercial_mail_address: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultCommercialMailAddress'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DefaultCommercialMailAddress', 'json': True }})  
    default_fax: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultFax'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DefaultFax', 'json': True }})  
    default_mail_address: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultMailAddress'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DefaultMailAddress', 'json': True }})  
    default_phone1: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultPhone1'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DefaultPhone1', 'json': True }})  
    default_phone2: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultPhone2'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DefaultPhone2', 'json': True }})  
    default_status_updates_mail_address: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultStatusUpdatesMailAddress'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DefaultStatusUpdatesMailAddress', 'json': True }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Email'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Email' }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Id' }})
    r"""The Billbee Id of the customer"""  
    language_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LanguageId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'LanguageId' }})  
    meta_data: Optional[list[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModelInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetaData'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'MetaData', 'json': True }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Name' }})  
    number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Number'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Number' }})  
    price_group_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PriceGroupId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'PriceGroupId' }})  
    restored_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RestoredAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'RestoredAt' }})
    r"""If set, the customer was restored from the archive at the given date."""  
    tel1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tel1'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Tel1' }})  
    tel2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tel2'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Tel2' }})  
    type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Type' }})
    r"""Customer Type"""  
    vat_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VatId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'VatId' }})
    r"""The vat-id, that should be saved at the customer. Only used if CustomerVatId is not set on the order."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelCustomerAPIModel:
    
    archived_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ArchivedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""If set, the customer was already archived at the given date. Further modification is disabled."""  
    default_commercial_mail_address: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultCommercialMailAddress'), 'exclude': lambda f: f is None }})  
    default_fax: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultFax'), 'exclude': lambda f: f is None }})  
    default_mail_address: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultMailAddress'), 'exclude': lambda f: f is None }})  
    default_phone1: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultPhone1'), 'exclude': lambda f: f is None }})  
    default_phone2: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultPhone2'), 'exclude': lambda f: f is None }})  
    default_status_updates_mail_address: Optional[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultStatusUpdatesMailAddress'), 'exclude': lambda f: f is None }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Email'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""The Billbee Id of the customer"""  
    language_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LanguageId'), 'exclude': lambda f: f is None }})  
    meta_data: Optional[list[shared_billbee_interfaces_billbeeapi_models_customermetadataapimodel.BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetaData'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Number'), 'exclude': lambda f: f is None }})  
    price_group_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PriceGroupId'), 'exclude': lambda f: f is None }})  
    restored_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RestoredAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""If set, the customer was restored from the archive at the given date."""  
    tel1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tel1'), 'exclude': lambda f: f is None }})  
    tel2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tel2'), 'exclude': lambda f: f is None }})  
    type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})
    r"""Customer Type"""  
    vat_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VatId'), 'exclude': lambda f: f is None }})
    r"""The vat-id, that should be saved at the customer. Only used if CustomerVatId is not set on the order."""  
    