// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type GetServicePointsRequestType string

const (
	GetServicePointsRequestTypeGetServicePointsRequestBody GetServicePointsRequestType = "get_service_points_request_body"
)

type GetServicePointsRequest struct {
	GetServicePointsRequestBody *GetServicePointsRequestBody

	Type GetServicePointsRequestType
}

func CreateGetServicePointsRequestGetServicePointsRequestBody(getServicePointsRequestBody GetServicePointsRequestBody) GetServicePointsRequest {
	typ := GetServicePointsRequestTypeGetServicePointsRequestBody

	return GetServicePointsRequest{
		GetServicePointsRequestBody: &getServicePointsRequestBody,
		Type:                        typ,
	}
}

func (u *GetServicePointsRequest) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	getServicePointsRequestBody := new(GetServicePointsRequestBody)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&getServicePointsRequestBody); err == nil {
		u.GetServicePointsRequestBody = getServicePointsRequestBody
		u.Type = GetServicePointsRequestTypeGetServicePointsRequestBody
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetServicePointsRequest) MarshalJSON() ([]byte, error) {
	if u.GetServicePointsRequestBody != nil {
		return json.Marshal(u.GetServicePointsRequestBody)
	}

	return nil, nil
}
