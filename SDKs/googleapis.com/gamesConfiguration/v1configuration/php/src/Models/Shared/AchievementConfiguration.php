<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AchievementConfiguration - An achievement configuration resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AchievementConfiguration
{
    /**
     * The type of the achievement.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationAchievementTypeEnum $achievementType
     */
	#[\JMS\Serializer\Annotation\SerializedName('achievementType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationAchievementTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AchievementConfigurationAchievementTypeEnum $achievementType = null;
    
    /**
     * An achievement configuration detail.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationDetail $draft
     */
	#[\JMS\Serializer\Annotation\SerializedName('draft')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AchievementConfigurationDetail $draft = null;
    
    /**
     * The ID of the achievement.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The initial state of the achievement.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationInitialStateEnum $initialState
     */
	#[\JMS\Serializer\Annotation\SerializedName('initialState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationInitialStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AchievementConfigurationInitialStateEnum $initialState = null;
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfiguration`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * An achievement configuration detail.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationDetail $published
     */
	#[\JMS\Serializer\Annotation\SerializedName('published')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AchievementConfigurationDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AchievementConfigurationDetail $published = null;
    
    /**
     * Steps to unlock. Only applicable to incremental achievements.
     * 
     * @var ?int $stepsToUnlock
     */
	#[\JMS\Serializer\Annotation\SerializedName('stepsToUnlock')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stepsToUnlock = null;
    
    /**
     * The token for this resource.
     * 
     * @var ?string $token
     */
	#[\JMS\Serializer\Annotation\SerializedName('token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $token = null;
    
	public function __construct()
	{
		$this->achievementType = null;
		$this->draft = null;
		$this->id = null;
		$this->initialState = null;
		$this->kind = null;
		$this->published = null;
		$this->stepsToUnlock = null;
		$this->token = null;
	}
}
