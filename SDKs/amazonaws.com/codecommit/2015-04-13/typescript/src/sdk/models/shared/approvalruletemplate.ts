/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Returns information about an approval rule template.
 */
export class ApprovalRuleTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleTemplateContent" })
  approvalRuleTemplateContent?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleTemplateDescription" })
  approvalRuleTemplateDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleTemplateId" })
  approvalRuleTemplateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleTemplateName" })
  approvalRuleTemplateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedUser" })
  lastModifiedUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ruleContentSha256" })
  ruleContentSha256?: string;
}
