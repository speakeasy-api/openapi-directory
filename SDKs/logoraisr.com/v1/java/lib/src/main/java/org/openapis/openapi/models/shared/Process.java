/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Process {
    /**
     * Crops the image according to the specified mechanism. If you specify the size "WidthexHeight", the image will be cropped centered. If coordinates "x1,y1,x2,y2" are given, the image is cropped according to the coordinates. The image will be cropped to the size of the stories if "faces" are specified as. Example Centered: "crop": "200x300". Example Region: "crop": "200,300,150,300". Example Faces: "crop": "faces".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("crop")
    public String crop;
    public Process withCrop(String crop) {
        this.crop = crop;
        return this;
    }
    
    /**
     * Flips the image around the horizontal axis, from top to bottom. Example: "flip": true
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flip")
    public Boolean flip;
    public Process withFlip(Boolean flip) {
        this.flip = flip;
        return this;
    }
    
    /**
     * Mirrors the image around the vertical axis, i.e. from right to left. Example: "mirror": true
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mirror")
    public Boolean mirror;
    public Process withMirror(Boolean mirror) {
        this.mirror = mirror;
        return this;
    }
    
    /**
     * Schl\u00fcssel welcher Verarbeitungs-Algorithmus angewendet wird. Zur Auswahl stehen "logo-to-vector", "logo-super-resolution", "logo-segmentation" und "image-processing".
     */
    @JsonProperty("processing_algorithm")
    public String processingAlgorithm;
    public Process withProcessingAlgorithm(String processingAlgorithm) {
        this.processingAlgorithm = processingAlgorithm;
        return this;
    }
    
    /**
     * Changes the size of the image according to the specified size. Example: "resize": "200x300".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resize")
    public String resize;
    public Process withResize(String resize) {
        this.resize = resize;
        return this;
    }
    
    /**
     * Rotates the image around the center according to the specified degree. Example: "rotate": 90
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rotate")
    public Long rotate;
    public Process withRotate(Long rotate) {
        this.rotate = rotate;
        return this;
    }
    
}
