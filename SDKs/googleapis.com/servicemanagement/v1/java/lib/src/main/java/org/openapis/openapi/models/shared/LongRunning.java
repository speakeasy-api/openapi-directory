/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LongRunning - Describes settings to use when generating API methods that use the long-running operation pattern. All default values below are from those used in the client library generators (e.g. [Java](https://github.com/googleapis/gapic-generator-java/blob/04c2faa191a9b5a10b92392fe8482279c4404803/src/main/java/com/google/api/generator/gapic/composer/common/RetrySettingsComposer.java)).
 */
public class LongRunning {
    /**
     * Initial delay after which the first poll request will be made. Default value: 5 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialPollDelay")
    public String initialPollDelay;
    public LongRunning withInitialPollDelay(String initialPollDelay) {
        this.initialPollDelay = initialPollDelay;
        return this;
    }
    
    /**
     * Maximum time between two subsequent poll requests. Default value: 45 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxPollDelay")
    public String maxPollDelay;
    public LongRunning withMaxPollDelay(String maxPollDelay) {
        this.maxPollDelay = maxPollDelay;
        return this;
    }
    
    /**
     * Multiplier to gradually increase delay between subsequent polls until it reaches max_poll_delay. Default value: 1.5.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pollDelayMultiplier")
    public Float pollDelayMultiplier;
    public LongRunning withPollDelayMultiplier(Float pollDelayMultiplier) {
        this.pollDelayMultiplier = pollDelayMultiplier;
        return this;
    }
    
    /**
     * Total polling timeout. Default value: 5 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPollTimeout")
    public String totalPollTimeout;
    public LongRunning withTotalPollTimeout(String totalPollTimeout) {
        this.totalPollTimeout = totalPollTimeout;
        return this;
    }
    
}
