/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EcsEnvironmentFile } from "./ecsenvironmentfile";
import { EcsEnvironmentVariable } from "./ecsenvironmentvariable";
import { EcsResourceRequirement } from "./ecsresourcerequirement";
import { Expose, Type } from "class-transformer";

/**
 * The overrides that are sent to a container. An empty container override can be passed in. An example of an empty container override is <code>{"containerOverrides": [ ] }</code>. If a non-empty container override is specified, the <code>name</code> parameter must be included.
 */
export class EcsContainerOverride extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Command" })
  command?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Cpu" })
  cpu?: number;

  @SpeakeasyMetadata({ elemType: EcsEnvironmentVariable })
  @Expose({ name: "Environment" })
  @Type(() => EcsEnvironmentVariable)
  environment?: EcsEnvironmentVariable[];

  @SpeakeasyMetadata({ elemType: EcsEnvironmentFile })
  @Expose({ name: "EnvironmentFiles" })
  @Type(() => EcsEnvironmentFile)
  environmentFiles?: EcsEnvironmentFile[];

  @SpeakeasyMetadata()
  @Expose({ name: "Memory" })
  memory?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MemoryReservation" })
  memoryReservation?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: EcsResourceRequirement })
  @Expose({ name: "ResourceRequirements" })
  @Type(() => EcsResourceRequirement)
  resourceRequirements?: EcsResourceRequirement[];
}
