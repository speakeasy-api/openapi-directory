/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OfferingClassTypeEnum } from "./offeringclasstypeenum";

/**
 * <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>
 */
export class DescribeReservedInstancesRequestFilters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  values?: string[];
}

/**
 * The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.
 */
export enum DescribeReservedInstancesRequestOfferingTypeEnum {
  HeavyUtilization = "Heavy Utilization",
  MediumUtilization = "Medium Utilization",
  LightUtilization = "Light Utilization",
  NoUpfront = "No Upfront",
  PartialUpfront = "Partial Upfront",
  AllUpfront = "All Upfront",
}

/**
 * Contains the parameters for DescribeReservedInstances.
 */
export class DescribeReservedInstancesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  dryRun?: boolean;

  @SpeakeasyMetadata({ elemType: DescribeReservedInstancesRequestFilters })
  filters?: DescribeReservedInstancesRequestFilters[];

  @SpeakeasyMetadata()
  offeringClass?: OfferingClassTypeEnum;

  @SpeakeasyMetadata()
  offeringType?: DescribeReservedInstancesRequestOfferingTypeEnum;

  @SpeakeasyMetadata()
  reservedInstancesIds?: string[];
}
