/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Type of the Symptom.
 */
export enum SymptomSymptomTypeEnum {
  SymptomTypeUnspecified = "SYMPTOM_TYPE_UNSPECIFIED",
  LowMemory = "LOW_MEMORY",
  OutOfMemory = "OUT_OF_MEMORY",
  ExecuteTimedOut = "EXECUTE_TIMED_OUT",
  MeshBuildFail = "MESH_BUILD_FAIL",
  HbmOutOfMemory = "HBM_OUT_OF_MEMORY",
  ProjectAbuse = "PROJECT_ABUSE",
}

/**
 * A Symptom instance.
 */
export class Symptom extends SpeakeasyBase {
  /**
   * Timestamp when the Symptom is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Detailed information of the current Symptom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: string;

  /**
   * Type of the Symptom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "symptomType" })
  symptomType?: SymptomSymptomTypeEnum;

  /**
   * A string used to uniquely distinguish a worker within a TPU node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workerId" })
  workerId?: string;
}
