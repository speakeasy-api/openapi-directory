"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import event as shared_event
from ..shared import transitionevent as shared_transitionevent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnInputLifecycle:
    r"""Specifies the actions performed when the <code>condition</code> evaluates to TRUE."""
    
    events: Optional[list[shared_event.Event]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('events'), 'exclude': lambda f: f is None }})  
    transition_events: Optional[list[shared_transitionevent.TransitionEvent]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitionEvents'), 'exclude': lambda f: f is None }})  
    