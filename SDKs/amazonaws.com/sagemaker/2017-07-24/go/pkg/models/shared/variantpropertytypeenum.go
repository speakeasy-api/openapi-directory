// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VariantPropertyTypeEnum string

const (
	VariantPropertyTypeEnumDesiredInstanceCount VariantPropertyTypeEnum = "DesiredInstanceCount"
	VariantPropertyTypeEnumDesiredWeight        VariantPropertyTypeEnum = "DesiredWeight"
	VariantPropertyTypeEnumDataCaptureConfig    VariantPropertyTypeEnum = "DataCaptureConfig"
)

func (e VariantPropertyTypeEnum) ToPointer() *VariantPropertyTypeEnum {
	return &e
}

func (e *VariantPropertyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DesiredInstanceCount":
		fallthrough
	case "DesiredWeight":
		fallthrough
	case "DataCaptureConfig":
		*e = VariantPropertyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VariantPropertyTypeEnum: %v", v)
	}
}
