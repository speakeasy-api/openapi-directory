/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyDefinitionsCollectiblesDestinyCollectibleDefinition - Defines a
 */
public class DestinyDefinitionsCollectiblesDestinyCollectibleDefinition {
    
    public DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock acquisitionInfo;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withAcquisitionInfo(DestinyDefinitionsCollectiblesDestinyCollectibleAcquisitionBlock acquisitionInfo) {
        this.acquisitionInfo = acquisitionInfo;
        return this;
    }
    
    /**
     * Many Destiny*Definition contracts - the "first order" entities of Destiny that have their own tables in the Manifest Database - also have displayable information. This is the base class for that display information.
     */
    
    public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
        this.displayProperties = displayProperties;
        return this;
    }
    
    /**
     * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
     * When entities refer to each other in Destiny content, it is this hash that they are referring to.
     */
    
    public Long hash;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withHash(Long hash) {
        this.hash = hash;
        return this;
    }
    
    /**
     * The index of the entity as it was found in the investment tables.
     */
    
    public Integer index;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    
    public Long itemHash;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withItemHash(Long itemHash) {
        this.itemHash = itemHash;
        return this;
    }
    
    /**
     * A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.
     */
    
    public Long[] parentNodeHashes;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withParentNodeHashes(Long[] parentNodeHashes) {
        this.parentNodeHashes = parentNodeHashes;
        return this;
    }
    
    
    public DestinyDefinitionsPresentationDestinyPresentationChildBlock presentationInfo;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withPresentationInfo(DestinyDefinitionsPresentationDestinyPresentationChildBlock presentationInfo) {
        this.presentationInfo = presentationInfo;
        return this;
    }
    
    
    public Integer presentationNodeType;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withPresentationNodeType(Integer presentationNodeType) {
        this.presentationNodeType = presentationNodeType;
        return this;
    }
    
    /**
     * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
     */
    
    public Boolean redacted;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withRedacted(Boolean redacted) {
        this.redacted = redacted;
        return this;
    }
    
    /**
     * Indicates whether the state of this Collectible is determined on a per-character or on an account-wide basis.
     */
    
    public Integer scope;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withScope(Integer scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * This is a hash identifier we are building on the BNet side in an attempt to let people group collectibles by similar sources.
     * I can't promise that it's going to be 100% accurate, but if the designers were consistent in assigning the same source strings to items with the same sources, it *ought to* be. No promises though.
     * This hash also doesn't relate to an actual definition, just to note: we've got nothing useful other than the source string for this data.
     */
    
    public Long sourceHash;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withSourceHash(Long sourceHash) {
        this.sourceHash = sourceHash;
        return this;
    }
    
    /**
     * A human readable string for a hint about how to acquire the item.
     */
    
    public String sourceString;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withSourceString(String sourceString) {
        this.sourceString = sourceString;
        return this;
    }
    
    
    public DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock stateInfo;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withStateInfo(DestinyDefinitionsCollectiblesDestinyCollectibleStateBlock stateInfo) {
        this.stateInfo = stateInfo;
        return this;
    }
    
    
    public Long[] traitHashes;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withTraitHashes(Long[] traitHashes) {
        this.traitHashes = traitHashes;
        return this;
    }
    
    
    public String[] traitIds;
    public DestinyDefinitionsCollectiblesDestinyCollectibleDefinition withTraitIds(String[] traitIds) {
        this.traitIds = traitIds;
        return this;
    }
    
}
