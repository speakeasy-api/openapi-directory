// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTProvisionPublicIpv4PoolCidrActionEnum
type POSTProvisionPublicIpv4PoolCidrActionEnum string

const (
	POSTProvisionPublicIpv4PoolCidrActionEnumProvisionPublicIpv4PoolCidr POSTProvisionPublicIpv4PoolCidrActionEnum = "ProvisionPublicIpv4PoolCidr"
)

func (e POSTProvisionPublicIpv4PoolCidrActionEnum) ToPointer() *POSTProvisionPublicIpv4PoolCidrActionEnum {
	return &e
}

func (e *POSTProvisionPublicIpv4PoolCidrActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ProvisionPublicIpv4PoolCidr":
		*e = POSTProvisionPublicIpv4PoolCidrActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTProvisionPublicIpv4PoolCidrActionEnum: %v", v)
	}
}

// POSTProvisionPublicIpv4PoolCidrVersionEnum
type POSTProvisionPublicIpv4PoolCidrVersionEnum string

const (
	POSTProvisionPublicIpv4PoolCidrVersionEnumTwoThousandAndSixteen1115 POSTProvisionPublicIpv4PoolCidrVersionEnum = "2016-11-15"
)

func (e POSTProvisionPublicIpv4PoolCidrVersionEnum) ToPointer() *POSTProvisionPublicIpv4PoolCidrVersionEnum {
	return &e
}

func (e *POSTProvisionPublicIpv4PoolCidrVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTProvisionPublicIpv4PoolCidrVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTProvisionPublicIpv4PoolCidrVersionEnum: %v", v)
	}
}

type POSTProvisionPublicIpv4PoolCidrRequest struct {
	Action            POSTProvisionPublicIpv4PoolCidrActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                     `request:"mediaType=text/xml"`
	Version           POSTProvisionPublicIpv4PoolCidrVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTProvisionPublicIpv4PoolCidrResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
