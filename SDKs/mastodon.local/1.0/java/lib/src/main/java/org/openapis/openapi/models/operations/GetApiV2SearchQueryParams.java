/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetApiV2SearchQueryParams {
    /**
     * If provided, statuses returned will be authored only by this account
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=account_id")
    public String accountId;
    public GetApiV2SearchQueryParams withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Filter out unreviewed tags? Defaults to false. Use true when trying to find trending tags.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=exclude_unreviewed")
    public Boolean excludeUnreviewed;
    public GetApiV2SearchQueryParams withExcludeUnreviewed(Boolean excludeUnreviewed) {
        this.excludeUnreviewed = excludeUnreviewed;
        return this;
    }
    
    /**
     * Only who the user is following. Defaults to false.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=following")
    public Boolean following;
    public GetApiV2SearchQueryParams withFollowing(Boolean following) {
        this.following = following;
        return this;
    }
    
    /**
     * Maximum number of results. Defaults to 40.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GetApiV2SearchQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Return results older than this id
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=max_id")
    public String maxId;
    public GetApiV2SearchQueryParams withMaxId(String maxId) {
        this.maxId = maxId;
        return this;
    }
    
    /**
     * Return results immediately newer than this id
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=min_id")
    public String minId;
    public GetApiV2SearchQueryParams withMinId(String minId) {
        this.minId = minId;
        return this;
    }
    
    /**
     * Offset in search results. Used for pagination. Defaults to 0.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Long offset;
    public GetApiV2SearchQueryParams withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * What to search for
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;
    public GetApiV2SearchQueryParams withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * Attempt WebFinger lookup.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=resolve")
    public String resolve;
    public GetApiV2SearchQueryParams withResolve(String resolve) {
        this.resolve = resolve;
        return this;
    }
    
    /**
     * Enum(accounts, hashtags, statuses)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public GetApiV2SearchTypeEnum type;
    public GetApiV2SearchQueryParams withType(GetApiV2SearchTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
