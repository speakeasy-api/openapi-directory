/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CloudOutStorageForecastSummary {
    /**
     * Data retrieval costs, in USD, for the cloud archival location. The list contains forecastPeriodInGranularityUnit values, one for each granularity period. For example, for a 3-year forecast period with a granularity of 'year', the list contains 3 values. The first value corresponds to the first year, the second value corresponds to the second year, and the third value corresponds to the third year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataRetrievalCostInUSD")
    public Long[] dataRetrievalCostInUSD;

    public CloudOutStorageForecastSummary withDataRetrievalCostInUSD(Long[] dataRetrievalCostInUSD) {
        this.dataRetrievalCostInUSD = dataRetrievalCostInUSD;
        return this;
    }
    
    /**
     * Early deletion costs, in USD, for the cloud archival location. The list contains forecastPeriodInGranularityUnit values, one for each granularity period. For example, for a 3-year forecast period with a granularity of 'year', the list contains 3 values. The first value corresponds to the first year, the second value corresponds to the second year, and the third value corresponds to the third year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("earlyDeletionCostInUSD")
    public Long[] earlyDeletionCostInUSD;

    public CloudOutStorageForecastSummary withEarlyDeletionCostInUSD(Long[] earlyDeletionCostInUSD) {
        this.earlyDeletionCostInUSD = earlyDeletionCostInUSD;
        return this;
    }
    
    /**
     * Storage utilization forecast for cloud archival location across various storage classes. The list contains one object per storage class that is used on the cloud archival location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("perStorageClassForecast")
    public PerStorageClassCloudOutStorageForecastSummary[] perStorageClassForecast;

    public CloudOutStorageForecastSummary withPerStorageClassForecast(PerStorageClassCloudOutStorageForecastSummary[] perStorageClassForecast) {
        this.perStorageClassForecast = perStorageClassForecast;
        return this;
    }
    
    /**
     * Storage costs, in USD, for the cloud archival location. The list contains forecastPeriodInGranularityUnit values, one for each granularity period. For example, for a 3-year forecast period with a granularity of 'year', the list contains 3 values. The first value corresponds to the first year, the second value corresponds to the second year, and the third value corresponds to the third year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageCostInUSD")
    public Long[] storageCostInUSD;

    public CloudOutStorageForecastSummary withStorageCostInUSD(Long[] storageCostInUSD) {
        this.storageCostInUSD = storageCostInUSD;
        return this;
    }
    
    /**
     * Storage values, in GBs, used on the cloud archival location. The number of values in the list is specified by the value of the forecastPeriodInGranularityUnit parameter. Each value in the list is for the last day of the granularity period. For example, for a 3-year forecast period with a granularity of 'year', the list contains 3 values. First value corresponds to the last day of the first year. Second value corresponds to the last day of the second year. Third value corresponds to the last day of the third year.
     */
    @JsonProperty("storageUsedInGB")
    public Long[] storageUsedInGB;

    public CloudOutStorageForecastSummary withStorageUsedInGB(Long[] storageUsedInGB) {
        this.storageUsedInGB = storageUsedInGB;
        return this;
    }
    
    public CloudOutStorageForecastSummary(@JsonProperty("storageUsedInGB") Long[] storageUsedInGB) {
        this.storageUsedInGB = storageUsedInGB;
  }
}
