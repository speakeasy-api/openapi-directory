/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ListAuditFindingsRequestBody {
    /**
     * An audit check name. Checks must be enabled for your account. (Use &lt;code&gt;DescribeAccountAuditConfiguration&lt;/code&gt; to see the list of all checks, including those that are enabled or use &lt;code&gt;UpdateAccountAuditConfiguration&lt;/code&gt; to select which checks are enabled.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkName")
    public String checkName;

    public ListAuditFindingsRequestBody withCheckName(String checkName) {
        this.checkName = checkName;
        return this;
    }
    
    /**
     * A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;

    public ListAuditFindingsRequestBody withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     *  Boolean flag indicating whether only the suppressed findings or the unsuppressed findings should be listed. If this parameter isn't provided, the response will list both suppressed and unsuppressed findings. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listSuppressedFindings")
    public Boolean listSuppressedFindings;

    public ListAuditFindingsRequestBody withListSuppressedFindings(Boolean listSuppressedFindings) {
        this.listSuppressedFindings = listSuppressedFindings;
        return this;
    }
    
    /**
     * The maximum number of results to return at one time. The default is 25.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public ListAuditFindingsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token for the next set of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public ListAuditFindingsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * Information that identifies the noncompliant resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceIdentifier")
    public ListAuditFindingsRequestBodyResourceIdentifier resourceIdentifier;

    public ListAuditFindingsRequestBody withResourceIdentifier(ListAuditFindingsRequestBodyResourceIdentifier resourceIdentifier) {
        this.resourceIdentifier = resourceIdentifier;
        return this;
    }
    
    /**
     * A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;

    public ListAuditFindingsRequestBody withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskId")
    public String taskId;

    public ListAuditFindingsRequestBody withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }
    
    public ListAuditFindingsRequestBody(){}
}
