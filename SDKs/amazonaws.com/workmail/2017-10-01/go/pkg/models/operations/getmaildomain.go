// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetMailDomainXAmzTargetEnum
type GetMailDomainXAmzTargetEnum string

const (
	GetMailDomainXAmzTargetEnumWorkMailServiceGetMailDomain GetMailDomainXAmzTargetEnum = "WorkMailService.GetMailDomain"
)

func (e *GetMailDomainXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkMailService.GetMailDomain":
		*e = GetMailDomainXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMailDomainXAmzTargetEnum: %s", s)
	}
}

type GetMailDomainRequest struct {
	GetMailDomainRequest shared.GetMailDomainRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           GetMailDomainXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetMailDomainResponse struct {
	ContentType string
	// Success
	GetMailDomainResponse *shared.GetMailDomainResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// MailDomainNotFoundException
	MailDomainNotFoundException interface{}
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
}
