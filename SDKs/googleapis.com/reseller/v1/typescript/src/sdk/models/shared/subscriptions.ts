/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Subscription } from "./subscription";
import { Expose, Type } from "class-transformer";

/**
 * A subscription manages the relationship of a Google customer's payment plan with a product's SKU, user licenses, 30-day free trial status, and renewal options. A primary role of a reseller is to manage the Google customer's subscriptions.
 */
export class Subscriptions extends SpeakeasyBase {
  /**
   * Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The subscriptions in this page of results.
   */
  @SpeakeasyMetadata({ elemType: Subscription })
  @Expose({ name: "subscriptions" })
  @Type(() => Subscription)
  subscriptions?: Subscription[];
}
