<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UpdateTableBorderPropertiesRequest - Updates the properties of the table borders in a Table.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UpdateTableBorderPropertiesRequest
{
    /**
     * The border position in the table range the updates should apply to. If a border position is not specified, the updates will apply to all borders in the table range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UpdateTableBorderPropertiesRequestBorderPositionEnum $borderPosition
     */
	#[\JMS\Serializer\Annotation\SerializedName('borderPosition')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UpdateTableBorderPropertiesRequestBorderPositionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateTableBorderPropertiesRequestBorderPositionEnum $borderPosition = null;
    
    /**
     * The fields that should be updated. At least one field must be specified. The root `tableBorderProperties` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example to update the table border solid fill color, set `fields` to `"tableBorderFill.solidFill.color"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.
     * 
     * @var ?string $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fields = null;
    
    /**
     * The object ID of the table.
     * 
     * @var ?string $objectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectId = null;
    
    /**
     * The border styling properties of the TableBorderCell.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TableBorderProperties $tableBorderProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('tableBorderProperties')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TableBorderProperties')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TableBorderProperties $tableBorderProperties = null;
    
    /**
     * A table range represents a reference to a subset of a table. It's important to note that the cells specified by a table range do not necessarily form a rectangle. For example, let's say we have a 3 x 3 table where all the cells of the last row are merged together. The table looks like this: [ ] A table range with location = (0, 0), row span = 3 and column span = 2 specifies the following cells: x x [ x x x ]
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TableRange $tableRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('tableRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TableRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TableRange $tableRange = null;
    
	public function __construct()
	{
		$this->borderPosition = null;
		$this->fields = null;
		$this->objectId = null;
		$this->tableBorderProperties = null;
		$this->tableRange = null;
	}
}
