/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class CompanyInfo {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addresses")
    public Address[] addresses;

    public CompanyInfo withAddresses(Address[] addresses) {
        this.addresses = addresses;
        return this;
    }
    
    /**
     * Whether sales tax is calculated automatically for the company
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automated_sales_tax")
    public Boolean automatedSalesTax;

    public CompanyInfo withAutomatedSalesTax(Boolean automatedSalesTax) {
        this.automatedSalesTax = automatedSalesTax;
        return this;
    }
    
    /**
     * The name of the company.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    public String companyName;

    public CompanyInfo withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Date when company file was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("company_start_date")
    public LocalDate companyStartDate;

    public CompanyInfo withCompanyStartDate(LocalDate companyStartDate) {
        this.companyStartDate = companyStartDate;
        return this;
    }
    
    /**
     * country code according to ISO 3166-1 alpha-2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public CompanyInfo withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public CompanyInfo withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;

    public CompanyInfo withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;

    public CompanyInfo withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_sales_tax")
    public LinkedTaxRate defaultSalesTax;

    public CompanyInfo withDefaultSalesTax(LinkedTaxRate defaultSalesTax) {
        this.defaultSalesTax = defaultSalesTax;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emails")
    public Email[] emails;

    public CompanyInfo withEmails(Email[] emails) {
        this.emails = emails;
        return this;
    }
    
    /**
     * The start month of fiscal year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fiscal_year_start_month")
    public CompanyInfoTheStartMonthOfFiscalYearEnum fiscalYearStartMonth;

    public CompanyInfo withFiscalYearStartMonth(CompanyInfoTheStartMonthOfFiscalYearEnum fiscalYearStartMonth) {
        this.fiscalYearStartMonth = fiscalYearStartMonth;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CompanyInfo withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * language code according to ISO 639-1. For the United States - EN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public CompanyInfo withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * The legal name of the company
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legal_name")
    public String legalName;

    public CompanyInfo withLegalName(String legalName) {
        this.legalName = legalName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_numbers")
    public PhoneNumber[] phoneNumbers;

    public CompanyInfo withPhoneNumbers(PhoneNumber[] phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;

    public CompanyInfo withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    /**
     * Whether sales tax is enabled for the company
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sales_tax_enabled")
    public Boolean salesTaxEnabled;

    public CompanyInfo withSalesTaxEnabled(Boolean salesTaxEnabled) {
        this.salesTaxEnabled = salesTaxEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sales_tax_number")
    public String salesTaxNumber;

    public CompanyInfo withSalesTaxNumber(String salesTaxNumber) {
        this.salesTaxNumber = salesTaxNumber;
        return this;
    }
    
    /**
     * Based on the status some functionality is enabled or disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CompanyInfoCompanyStatusEnum status;

    public CompanyInfo withStatus(CompanyInfoCompanyStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public CompanyInfo withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The user who last updated the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    public String updatedBy;

    public CompanyInfo withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    public CompanyInfo(){}
}
