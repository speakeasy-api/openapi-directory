/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ObservabilityConfiguration - &lt;p&gt;Describes an App Runner observability configuration resource. Multiple revisions of a configuration have the same &lt;code&gt;ObservabilityConfigurationName&lt;/code&gt; and different &lt;code&gt;ObservabilityConfigurationRevision&lt;/code&gt; values.&lt;/p&gt; &lt;p&gt;The resource is designed to configure multiple features (currently one feature, tracing). This type contains optional members that describe the configuration of these features (currently one member, &lt;code&gt;TraceConfiguration&lt;/code&gt;). If a feature member isn't specified, the feature isn't enabled.&lt;/p&gt;
 */
public class ObservabilityConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;
    public ObservabilityConfiguration withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("DeletedAt")
    public OffsetDateTime deletedAt;
    public ObservabilityConfiguration withDeletedAt(OffsetDateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Latest")
    public Boolean latest;
    public ObservabilityConfiguration withLatest(Boolean latest) {
        this.latest = latest;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ObservabilityConfigurationArn")
    public String observabilityConfigurationArn;
    public ObservabilityConfiguration withObservabilityConfigurationArn(String observabilityConfigurationArn) {
        this.observabilityConfigurationArn = observabilityConfigurationArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ObservabilityConfigurationName")
    public String observabilityConfigurationName;
    public ObservabilityConfiguration withObservabilityConfigurationName(String observabilityConfigurationName) {
        this.observabilityConfigurationName = observabilityConfigurationName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ObservabilityConfigurationRevision")
    public Long observabilityConfigurationRevision;
    public ObservabilityConfiguration withObservabilityConfigurationRevision(Long observabilityConfigurationRevision) {
        this.observabilityConfigurationRevision = observabilityConfigurationRevision;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public ObservabilityConfigurationStatusEnum status;
    public ObservabilityConfiguration withStatus(ObservabilityConfigurationStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TraceConfiguration")
    public TraceConfiguration traceConfiguration;
    public ObservabilityConfiguration withTraceConfiguration(TraceConfiguration traceConfiguration) {
        this.traceConfiguration = traceConfiguration;
        return this;
    }
    
}
