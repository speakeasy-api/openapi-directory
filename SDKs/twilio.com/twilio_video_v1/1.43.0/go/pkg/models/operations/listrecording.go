// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListRecordingServerList = []string{
	"https://video.twilio.com",
}

type ListRecordingSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListRecordingRequest struct {
	// Read only recordings that started on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time with time zone.
	DateCreatedAfter *time.Time `queryParam:"style=form,explode=true,name=DateCreatedAfter"`
	// Read only recordings that started before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time with time zone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.
	DateCreatedBefore *time.Time `queryParam:"style=form,explode=true,name=DateCreatedBefore"`
	// Read only recordings with this `grouping_sid`, which may include a `participant_sid` and/or a `room_sid`.
	GroupingSid []string `queryParam:"style=form,explode=true,name=GroupingSid"`
	// Read only recordings that have this media type. Can be either `audio` or `video`.
	MediaType *shared.RecordingEnumTypeEnum `queryParam:"style=form,explode=true,name=MediaType"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// Read only the recordings that have this `source_sid`.
	SourceSid *string `queryParam:"style=form,explode=true,name=SourceSid"`
	// Read only the recordings that have this status. Can be: `processing`, `completed`, or `deleted`.
	Status *shared.RecordingEnumStatusEnum `queryParam:"style=form,explode=true,name=Status"`
}

type ListRecordingListRecordingResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListRecordingListRecordingResponse - OK
type ListRecordingListRecordingResponse struct {
	Meta       *ListRecordingListRecordingResponseMeta `json:"meta,omitempty"`
	Recordings []shared.VideoV1Recording               `json:"recordings,omitempty"`
}

type ListRecordingResponse struct {
	ContentType string
	// OK
	ListRecordingResponse *ListRecordingListRecordingResponse
	StatusCode            int
	RawResponse           *http.Response
}
