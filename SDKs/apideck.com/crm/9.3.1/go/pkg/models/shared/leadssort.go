// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LeadsSortByEnum - The field on which to sort the Leads
type LeadsSortByEnum string

const (
	LeadsSortByEnumCreatedAt LeadsSortByEnum = "created_at"
	LeadsSortByEnumUpdatedAt LeadsSortByEnum = "updated_at"
	LeadsSortByEnumName      LeadsSortByEnum = "name"
	LeadsSortByEnumFirstName LeadsSortByEnum = "first_name"
	LeadsSortByEnumLastName  LeadsSortByEnum = "last_name"
	LeadsSortByEnumEmail     LeadsSortByEnum = "email"
)

func (e LeadsSortByEnum) ToPointer() *LeadsSortByEnum {
	return &e
}

func (e *LeadsSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "updated_at":
		fallthrough
	case "name":
		fallthrough
	case "first_name":
		fallthrough
	case "last_name":
		fallthrough
	case "email":
		*e = LeadsSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LeadsSortByEnum: %v", v)
	}
}

// LeadsSort - Apply sorting
type LeadsSort struct {
	// The field on which to sort the Leads
	By *LeadsSortByEnum `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirectionEnum `queryParam:"name=direction"`
}
