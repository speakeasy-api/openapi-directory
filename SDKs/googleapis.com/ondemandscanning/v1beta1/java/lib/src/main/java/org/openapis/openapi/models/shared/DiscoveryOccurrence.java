/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DiscoveryOccurrence - Provides information about the analysis status of a discovered resource.
 */
public class DiscoveryOccurrence {
    /**
     * Indicates which analysis completed successfully. Multiple types of analysis can be performed on a single resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisCompleted")
    public AnalysisCompleted analysisCompleted;

    public DiscoveryOccurrence withAnalysisCompleted(AnalysisCompleted analysisCompleted) {
        this.analysisCompleted = analysisCompleted;
        return this;
    }
    
    /**
     * Indicates any errors encountered during analysis of a resource. There could be 0 or more of these errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisError")
    public Status[] analysisError;

    public DiscoveryOccurrence withAnalysisError(Status[] analysisError) {
        this.analysisError = analysisError;
        return this;
    }
    
    /**
     * The status of discovery for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisStatus")
    public DiscoveryOccurrenceAnalysisStatusEnum analysisStatus;

    public DiscoveryOccurrence withAnalysisStatus(DiscoveryOccurrenceAnalysisStatusEnum analysisStatus) {
        this.analysisStatus = analysisStatus;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisStatusError")
    public Status analysisStatusError;

    public DiscoveryOccurrence withAnalysisStatusError(Status analysisStatusError) {
        this.analysisStatusError = analysisStatusError;
        return this;
    }
    
    /**
     * Output only. The time occurrences related to this discovery occurrence were archived.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archiveTime")
    public String archiveTime;

    public DiscoveryOccurrence withArchiveTime(String archiveTime) {
        this.archiveTime = archiveTime;
        return this;
    }
    
    /**
     * Whether the resource is continuously analyzed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continuousAnalysis")
    public DiscoveryOccurrenceContinuousAnalysisEnum continuousAnalysis;

    public DiscoveryOccurrence withContinuousAnalysis(DiscoveryOccurrenceContinuousAnalysisEnum continuousAnalysis) {
        this.continuousAnalysis = continuousAnalysis;
        return this;
    }
    
    /**
     * The CPE of the resource being scanned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpe")
    public String cpe;

    public DiscoveryOccurrence withCpe(String cpe) {
        this.cpe = cpe;
        return this;
    }
    
    /**
     * The last time this resource was scanned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastScanTime")
    public String lastScanTime;

    public DiscoveryOccurrence withLastScanTime(String lastScanTime) {
        this.lastScanTime = lastScanTime;
        return this;
    }
    
    public DiscoveryOccurrence(){}
}
