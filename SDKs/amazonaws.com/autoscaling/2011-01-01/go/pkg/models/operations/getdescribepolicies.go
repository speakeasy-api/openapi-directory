// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribePoliciesActionEnum
type GETDescribePoliciesActionEnum string

const (
	GETDescribePoliciesActionEnumDescribePolicies GETDescribePoliciesActionEnum = "DescribePolicies"
)

func (e *GETDescribePoliciesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribePolicies":
		*e = GETDescribePoliciesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribePoliciesActionEnum: %s", s)
	}
}

// GETDescribePoliciesVersionEnum
type GETDescribePoliciesVersionEnum string

const (
	GETDescribePoliciesVersionEnumTwoThousandAndEleven0101 GETDescribePoliciesVersionEnum = "2011-01-01"
)

func (e *GETDescribePoliciesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETDescribePoliciesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribePoliciesVersionEnum: %s", s)
	}
}

type GETDescribePoliciesQueryParams struct {
	Action GETDescribePoliciesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName *string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The token for the next set of items to return. (You received this token from a previous call.)
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// <p>The names of one or more policies. If you omit this property, all policies are described. If a group name is provided, the results are limited to that group. If you specify an unknown policy name, it is ignored with no error.</p> <p>Array Members: Maximum number of 50 items.</p>
	PolicyNames []string `queryParam:"style=form,explode=true,name=PolicyNames"`
	// One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, <code>TargetTrackingScaling</code>, and <code>PredictiveScaling</code>.
	PolicyTypes []string                       `queryParam:"style=form,explode=true,name=PolicyTypes"`
	Version     GETDescribePoliciesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribePoliciesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribePoliciesRequest struct {
	QueryParams GETDescribePoliciesQueryParams
	Headers     GETDescribePoliciesHeaders
}

type GETDescribePoliciesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
