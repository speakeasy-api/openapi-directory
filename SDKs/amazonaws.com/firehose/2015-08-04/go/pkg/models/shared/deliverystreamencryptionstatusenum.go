// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeliveryStreamEncryptionStatusEnum string

const (
	DeliveryStreamEncryptionStatusEnumEnabled         DeliveryStreamEncryptionStatusEnum = "ENABLED"
	DeliveryStreamEncryptionStatusEnumEnabling        DeliveryStreamEncryptionStatusEnum = "ENABLING"
	DeliveryStreamEncryptionStatusEnumEnablingFailed  DeliveryStreamEncryptionStatusEnum = "ENABLING_FAILED"
	DeliveryStreamEncryptionStatusEnumDisabled        DeliveryStreamEncryptionStatusEnum = "DISABLED"
	DeliveryStreamEncryptionStatusEnumDisabling       DeliveryStreamEncryptionStatusEnum = "DISABLING"
	DeliveryStreamEncryptionStatusEnumDisablingFailed DeliveryStreamEncryptionStatusEnum = "DISABLING_FAILED"
)

func (e DeliveryStreamEncryptionStatusEnum) ToPointer() *DeliveryStreamEncryptionStatusEnum {
	return &e
}

func (e *DeliveryStreamEncryptionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "ENABLING":
		fallthrough
	case "ENABLING_FAILED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DISABLING":
		fallthrough
	case "DISABLING_FAILED":
		*e = DeliveryStreamEncryptionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeliveryStreamEncryptionStatusEnum: %v", v)
	}
}
