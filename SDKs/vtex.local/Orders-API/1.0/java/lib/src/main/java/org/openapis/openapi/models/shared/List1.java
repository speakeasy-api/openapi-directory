/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class List1 {
    /**
     * Estimate shipping date.
     */
    @JsonProperty("ShippingEstimatedDate")
    public String shippingEstimatedDate;

    public List1 withShippingEstimatedDate(String shippingEstimatedDate) {
        this.shippingEstimatedDate = shippingEstimatedDate;
        return this;
    }
    
    /**
     * The most extended shipping estimation possible.
     */
    @JsonProperty("ShippingEstimatedDateMax")
    public String shippingEstimatedDateMax;

    public List1 withShippingEstimatedDateMax(String shippingEstimatedDateMax) {
        this.shippingEstimatedDateMax = shippingEstimatedDateMax;
        return this;
    }
    
    /**
     * The least extended shipping estimation possible.
     */
    @JsonProperty("ShippingEstimatedDateMin")
    public String shippingEstimatedDateMin;

    public List1 withShippingEstimatedDateMin(String shippingEstimatedDateMin) {
        this.shippingEstimatedDateMin = shippingEstimatedDateMin;
        return this;
    }
    
    /**
     * Corresponds to the three-digits [affiliate](https://help.vtex.com/en/tutorial/configuring-affiliates--tutorials_187) identification code of the seller responsible for the order.
     */
    @JsonProperty("affiliateId")
    public String affiliateId;

    public List1 withAffiliateId(String affiliateId) {
        this.affiliateId = affiliateId;
        return this;
    }
    
    /**
     * Authorized order date.
     */
    @JsonProperty("authorizedDate")
    public String authorizedDate;

    public List1 withAuthorizedDate(String authorizedDate) {
        this.authorizedDate = authorizedDate;
        return this;
    }
    
    /**
     * Call center operator responsible for the order.
     */
    @JsonProperty("callCenterOperatorName")
    public String callCenterOperatorName;

    public List1 withCallCenterOperatorName(String callCenterOperatorName) {
        this.callCenterOperatorName = callCenterOperatorName;
        return this;
    }
    
    /**
     * Order's customer name.
     */
    @JsonProperty("clientName")
    public String clientName;

    public List1 withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    /**
     * Order's creation date.
     */
    @JsonProperty("creationDate")
    public String creationDate;

    public List1 withCreationDate(String creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * Currency code in ISO 4217. For example, `BRL`.
     */
    @JsonProperty("currencyCode")
    public String currencyCode;

    public List1 withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * Information about order's items
     */
    @JsonProperty("items")
    public Item2[] items;

    public List1 withItems(Item2[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Last sent transactional message.
     */
    @JsonProperty("lastMessageUnread")
    public String lastMessageUnread;

    public List1 withLastMessageUnread(String lastMessageUnread) {
        this.lastMessageUnread = lastMessageUnread;
        return this;
    }
    
    /**
     * Related Gift List ID.
     */
    @JsonProperty("listId")
    public String listId;

    public List1 withListId(String listId) {
        this.listId = listId;
        return this;
    }
    
    /**
     * Related Gift list type.
     */
    @JsonProperty("listType")
    public String listType;

    public List1 withListType(String listType) {
        this.listType = listType;
        return this;
    }
    
    /**
     * Marketplace order ID.
     */
    @JsonProperty("marketPlaceOrderId")
    public String marketPlaceOrderId;

    public List1 withMarketPlaceOrderId(String marketPlaceOrderId) {
        this.marketPlaceOrderId = marketPlaceOrderId;
        return this;
    }
    
    /**
     * Order ID is a unique code that identifies an order.
     */
    @JsonProperty("orderId")
    public String orderId;

    public List1 withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * If it is a completed order (`true`) or not (`false`). For more information, see [Order flow and status](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196).
     */
    @JsonProperty("orderIsComplete")
    public Boolean orderIsComplete;

    public List1 withOrderIsComplete(Boolean orderIsComplete) {
        this.orderIsComplete = orderIsComplete;
        return this;
    }
    
    /**
     * Order Origin, if `Marketplace` or `Fulfillment`.
     */
    @JsonProperty("origin")
    public String origin;

    public List1 withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * Payment system name.
     */
    @JsonProperty("paymentNames")
    public String paymentNames;

    public List1 withPaymentNames(String paymentNames) {
        this.paymentNames = paymentNames;
        return this;
    }
    
    /**
     * Sales channel (or [trade policy](https://help.vtex.com/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) ID related to the order.
     */
    @JsonProperty("salesChannel")
    public String salesChannel;

    public List1 withSalesChannel(String salesChannel) {
        this.salesChannel = salesChannel;
        return this;
    }
    
    /**
     * Six-digit string that follows the order ID. For example, in order `1268540501456-01 (501456)`, the sequence is `501456`.
     */
    @JsonProperty("sequence")
    public String sequence;

    public List1 withSequence(String sequence) {
        this.sequence = sequence;
        return this;
    }
    
    /**
     * Order [status](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196).
     */
    @JsonProperty("status")
    public String status;

    public List1 withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Status description which is displayed on the Admin panel. This field is deprecated and may not return any value.
     */
    @JsonProperty("statusDescription")
    public String statusDescription;

    public List1 withStatusDescription(String statusDescription) {
        this.statusDescription = statusDescription;
        return this;
    }
    
    /**
     * Order's total amount of items.
     */
    @JsonProperty("totalItems")
    public Integer totalItems;

    public List1 withTotalItems(Integer totalItems) {
        this.totalItems = totalItems;
        return this;
    }
    
    /**
     * Total value amount.
     */
    @JsonProperty("totalValue")
    public Integer totalValue;

    public List1 withTotalValue(Integer totalValue) {
        this.totalValue = totalValue;
        return this;
    }
    
    /**
     * If there is a work flow error (`true`) or not (`false`).
     */
    @JsonProperty("workflowInErrorState")
    public Boolean workflowInErrorState;

    public List1 withWorkflowInErrorState(Boolean workflowInErrorState) {
        this.workflowInErrorState = workflowInErrorState;
        return this;
    }
    
    /**
     * If the order is in a work flow retry (`true`) or not (`false`).
     */
    @JsonProperty("workflowInRetry")
    public Boolean workflowInRetry;

    public List1 withWorkflowInRetry(Boolean workflowInRetry) {
        this.workflowInRetry = workflowInRetry;
        return this;
    }
    
    public List1(@JsonProperty("ShippingEstimatedDate") String shippingEstimatedDate, @JsonProperty("ShippingEstimatedDateMax") String shippingEstimatedDateMax, @JsonProperty("ShippingEstimatedDateMin") String shippingEstimatedDateMin, @JsonProperty("affiliateId") String affiliateId, @JsonProperty("authorizedDate") String authorizedDate, @JsonProperty("callCenterOperatorName") String callCenterOperatorName, @JsonProperty("clientName") String clientName, @JsonProperty("creationDate") String creationDate, @JsonProperty("currencyCode") String currencyCode, @JsonProperty("items") Item2[] items, @JsonProperty("lastMessageUnread") String lastMessageUnread, @JsonProperty("listId") String listId, @JsonProperty("listType") String listType, @JsonProperty("marketPlaceOrderId") String marketPlaceOrderId, @JsonProperty("orderId") String orderId, @JsonProperty("orderIsComplete") Boolean orderIsComplete, @JsonProperty("origin") String origin, @JsonProperty("paymentNames") String paymentNames, @JsonProperty("salesChannel") String salesChannel, @JsonProperty("sequence") String sequence, @JsonProperty("status") String status, @JsonProperty("statusDescription") String statusDescription, @JsonProperty("totalItems") Integer totalItems, @JsonProperty("totalValue") Integer totalValue, @JsonProperty("workflowInErrorState") Boolean workflowInErrorState, @JsonProperty("workflowInRetry") Boolean workflowInRetry) {
        this.shippingEstimatedDate = shippingEstimatedDate;
        this.shippingEstimatedDateMax = shippingEstimatedDateMax;
        this.shippingEstimatedDateMin = shippingEstimatedDateMin;
        this.affiliateId = affiliateId;
        this.authorizedDate = authorizedDate;
        this.callCenterOperatorName = callCenterOperatorName;
        this.clientName = clientName;
        this.creationDate = creationDate;
        this.currencyCode = currencyCode;
        this.items = items;
        this.lastMessageUnread = lastMessageUnread;
        this.listId = listId;
        this.listType = listType;
        this.marketPlaceOrderId = marketPlaceOrderId;
        this.orderId = orderId;
        this.orderIsComplete = orderIsComplete;
        this.origin = origin;
        this.paymentNames = paymentNames;
        this.salesChannel = salesChannel;
        this.sequence = sequence;
        this.status = status;
        this.statusDescription = statusDescription;
        this.totalItems = totalItems;
        this.totalValue = totalValue;
        this.workflowInErrorState = workflowInErrorState;
        this.workflowInRetry = workflowInRetry;
  }
}
