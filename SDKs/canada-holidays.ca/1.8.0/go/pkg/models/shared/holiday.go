// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// HolidayFederalEnum - Whether this holiday is observed by federally-regulated industries.
type HolidayFederalEnum int64

const (
	HolidayFederalEnumOne  HolidayFederalEnum = 1
	HolidayFederalEnumZero HolidayFederalEnum = 0
)

func (e HolidayFederalEnum) ToPointer() *HolidayFederalEnum {
	return &e
}

func (e *HolidayFederalEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 0:
		*e = HolidayFederalEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidayFederalEnum: %v", v)
	}
}

// HolidayOptionalEnum - Whether this is a province-wide statutory holiday, or one that is optional for employers.
type HolidayOptionalEnum int64

const (
	HolidayOptionalEnumOne HolidayOptionalEnum = 1
)

func (e HolidayOptionalEnum) ToPointer() *HolidayOptionalEnum {
	return &e
}

func (e *HolidayOptionalEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		*e = HolidayOptionalEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidayOptionalEnum: %v", v)
	}
}

// Holiday - A Canadian holiday. Includes a name, the literal date of the holiday, the observed date of the holiday (ie, accommodating for weekends), and a list of regions that observe this holiday.
type Holiday struct {
	// ISO date: the literal date of the holiday
	Date types.Date `json:"date"`
	// Whether this holiday is observed by federally-regulated industries.
	Federal HolidayFederalEnum `json:"federal"`
	// Primary key for a holiday
	ID int64 `json:"id"`
	// English name
	NameEn string `json:"nameEn"`
	// French name
	NameFr string `json:"nameFr"`
	// ISO date: when this holiday is observed
	ObservedDate types.Date `json:"observedDate"`
	// Whether this is a province-wide statutory holiday, or one that is optional for employers.
	Optional  *HolidayOptionalEnum `json:"optional,omitempty"`
	Provinces []Province           `json:"provinces,omitempty"`
}
