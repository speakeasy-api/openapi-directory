"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StoredValueVoidResponseResultCodeEnum(str, Enum):
    r"""The result of the payment. Possible values:
    
    * **Success** – The operation has been completed successfully. 
    * **Refused** – The operation was refused. The reason is given in the `refusalReason` field. 
    * **Error** – There was an error when the operation was processed. The reason is given in the `refusalReason` field. 
    * **NotEnoughBalance** – The amount on the payment method is lower than the amount given in the request. Only applicable to balance checks.
    """
    SUCCESS = 'Success'
    REFUSED = 'Refused'
    ERROR = 'Error'
    NOT_ENOUGH_BALANCE = 'NotEnoughBalance'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoredValueVoidResponse:
    r"""OK - the request has succeeded."""
    
    current_balance: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentBalance'), 'exclude': lambda f: f is None }})  
    psp_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference'), 'exclude': lambda f: f is None }})
    r"""Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request."""  
    refusal_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refusalReason'), 'exclude': lambda f: f is None }})
    r"""If the transaction is refused or an error occurs, this field holds Adyen's mapped reason for the refusal or a description of the error.
    
    When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.
    """  
    result_code: Optional[StoredValueVoidResponseResultCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode'), 'exclude': lambda f: f is None }})
    r"""The result of the payment. Possible values:
    
    * **Success** – The operation has been completed successfully. 
    * **Refused** – The operation was refused. The reason is given in the `refusalReason` field. 
    * **Error** – There was an error when the operation was processed. The reason is given in the `refusalReason` field. 
    * **NotEnoughBalance** – The amount on the payment method is lower than the amount given in the request. Only applicable to balance checks.
    """  
    third_party_refusal_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thirdPartyRefusalReason'), 'exclude': lambda f: f is None }})
    r"""Raw refusal reason received from the third party, where available"""  
    