// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CheckSchemaVersionValidityXAmzTargetEnum
type CheckSchemaVersionValidityXAmzTargetEnum string

const (
	CheckSchemaVersionValidityXAmzTargetEnumAwsGlueCheckSchemaVersionValidity CheckSchemaVersionValidityXAmzTargetEnum = "AWSGlue.CheckSchemaVersionValidity"
)

func (e CheckSchemaVersionValidityXAmzTargetEnum) ToPointer() *CheckSchemaVersionValidityXAmzTargetEnum {
	return &e
}

func (e *CheckSchemaVersionValidityXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.CheckSchemaVersionValidity":
		*e = CheckSchemaVersionValidityXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckSchemaVersionValidityXAmzTargetEnum: %v", v)
	}
}

type CheckSchemaVersionValidityRequest struct {
	CheckSchemaVersionValidityInput shared.CheckSchemaVersionValidityInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      CheckSchemaVersionValidityXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CheckSchemaVersionValidityResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	CheckSchemaVersionValidityResponse *shared.CheckSchemaVersionValidityResponse
	ContentType                        string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
