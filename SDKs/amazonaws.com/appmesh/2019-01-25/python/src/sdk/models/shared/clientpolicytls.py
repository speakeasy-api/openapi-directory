"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clienttlscertificate as shared_clienttlscertificate
from ..shared import tlsvalidationcontext as shared_tlsvalidationcontext
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClientPolicyTLS:
    r"""A reference to an object that represents a Transport Layer Security (TLS) client policy."""
    
    validation: shared_tlsvalidationcontext.TLSValidationContext = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validation') }})  
    certificate: Optional[shared_clienttlscertificate.ClientTLSCertificate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificate'), 'exclude': lambda f: f is None }})  
    enforce: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enforce'), 'exclude': lambda f: f is None }})  
    ports: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ports'), 'exclude': lambda f: f is None }})  
    