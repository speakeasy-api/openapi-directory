/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IdentitytoolkitRelyingpartySendVerificationCodeRequest - Request for Identitytoolkit-SendVerificationCode
 */
public class IdentitytoolkitRelyingpartySendVerificationCodeRequest {
    /**
     * Receipt of successful app token validation with APNS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iosReceipt")
    public String iosReceipt;
    public IdentitytoolkitRelyingpartySendVerificationCodeRequest withIosReceipt(String iosReceipt) {
        this.iosReceipt = iosReceipt;
        return this;
    }
    
    /**
     * Secret delivered to iOS app via APNS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iosSecret")
    public String iosSecret;
    public IdentitytoolkitRelyingpartySendVerificationCodeRequest withIosSecret(String iosSecret) {
        this.iosSecret = iosSecret;
        return this;
    }
    
    /**
     * The phone number to send the verification code to in E.164 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public String phoneNumber;
    public IdentitytoolkitRelyingpartySendVerificationCodeRequest withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Recaptcha solution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recaptchaToken")
    public String recaptchaToken;
    public IdentitytoolkitRelyingpartySendVerificationCodeRequest withRecaptchaToken(String recaptchaToken) {
        this.recaptchaToken = recaptchaToken;
        return this;
    }
    
}
