"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import error as shared_error
from ..shared import inventoryphysicalcount as shared_inventoryphysicalcount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveInventoryPhysicalCountResponse:
    r"""Success"""
    
    count: Optional[shared_inventoryphysicalcount.InventoryPhysicalCount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Represents the quantity of an item variation that is physically present
    at a specific location, verified by a seller or a seller's employee. For example,
    a physical count might come from an employee counting the item variations on
    hand or from syncing with an external system.
    """  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Any errors that occurred during the request."""  
    