/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetCalendarDatesRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey: string;

  /**
   *
   * @remarks
   * Each type of event has a calendar category with an integer id. Options are: Open Meetings: 32, Executive Sessions: 39, Public Hearings: 40,
   * Conferences: 33, Roundtables: 34, Election Dates: 36, Federal Holidays: 37, FEA Periods: 38, Commission Meetings: 20,
   * Reporting Deadlines: 21, Conferences and Outreach: 22, AOs and Rules: 23, Other: 24, Quarterly: 25, Monthly: 26,
   * Pre and Post-Elections: 27, EC Periods:28, and IE Periods: 29
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=calendar_category_id",
  })
  calendarCategoryId?: number[];

  /**
   * Brief description of event
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=description",
  })
  description?: string[];

  /**
   * An unique ID for an event. Useful for downloading a single event to your calendar. This ID is not a permanent, persistent ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=event_id",
  })
  eventId?: number;

  /**
   *
   * @remarks
   * The maximum end date.(MM/DD/YYYY or YYYY-MM-DD)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_end_date;dateTimeFormat=YYYY-MM-DD",
  })
  maxEndDate?: Date;

  /**
   *
   * @remarks
   * The maximum start date.(MM/DD/YYYY or YYYY-MM-DD)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_start_date;dateTimeFormat=YYYY-MM-DD",
  })
  maxStartDate?: Date;

  /**
   *
   * @remarks
   * The minimum end date.(MM/DD/YYYY or YYYY-MM-DD)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_end_date;dateTimeFormat=YYYY-MM-DD",
  })
  minEndDate?: Date;

  /**
   *
   * @remarks
   * The minimum start date.(MM/DD/YYYY or YYYY-MM-DD)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_start_date;dateTimeFormat=YYYY-MM-DD",
  })
  minStartDate?: Date;

  /**
   * For paginating through results, starting at page 1
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results returned per page. Defaults to 20.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Provide a field to sort by. Use `-` for descending order.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Hide null values on sorted column(s).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_hide_null",
  })
  sortHideNull?: boolean;

  /**
   * Toggle that filters out all rows having sort column that is non-null
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_null_only",
  })
  sortNullOnly?: boolean;

  /**
   * Toggle that sorts null values last
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_nulls_last",
  })
  sortNullsLast?: boolean;

  /**
   * Longer description of event
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=summary",
  })
  summary?: string[];
}

export class GetCalendarDatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  calendarDatePage?: shared.CalendarDatePage;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
