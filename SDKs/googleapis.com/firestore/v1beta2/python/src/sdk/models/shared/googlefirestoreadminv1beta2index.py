"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlefirestoreadminv1beta2indexfield as shared_googlefirestoreadminv1beta2indexfield
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleFirestoreAdminV1beta2IndexQueryScopeEnum(str, Enum):
    r"""Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index."""
    QUERY_SCOPE_UNSPECIFIED = 'QUERY_SCOPE_UNSPECIFIED'
    COLLECTION = 'COLLECTION'
    COLLECTION_GROUP = 'COLLECTION_GROUP'

class GoogleFirestoreAdminV1beta2IndexStateEnum(str, Enum):
    r"""Output only. The serving state of the index."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    CREATING = 'CREATING'
    READY = 'READY'
    NEEDS_REPAIR = 'NEEDS_REPAIR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirestoreAdminV1beta2Index:
    r"""Cloud Firestore indexes enable simple and complex queries against documents in a database."""
    
    fields_: Optional[list[shared_googlefirestoreadminv1beta2indexfield.GoogleFirestoreAdminV1beta2IndexField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty."""  
    query_scope: Optional[GoogleFirestoreAdminV1beta2IndexQueryScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryScope'), 'exclude': lambda f: f is None }})
    r"""Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index."""  
    state: Optional[GoogleFirestoreAdminV1beta2IndexStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The serving state of the index."""  
    