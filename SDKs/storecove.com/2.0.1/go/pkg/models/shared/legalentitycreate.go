// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LegalEntityCreateDocumentTypeEnum - A document type to advertise.
type LegalEntityCreateDocumentTypeEnum string

const (
	LegalEntityCreateDocumentTypeEnumInvoice         LegalEntityCreateDocumentTypeEnum = "invoice"
	LegalEntityCreateDocumentTypeEnumInvoiceResponse LegalEntityCreateDocumentTypeEnum = "invoice_response"
	LegalEntityCreateDocumentTypeEnumOrder           LegalEntityCreateDocumentTypeEnum = "order"
	LegalEntityCreateDocumentTypeEnumOrdering        LegalEntityCreateDocumentTypeEnum = "ordering"
	LegalEntityCreateDocumentTypeEnumOrderResponse   LegalEntityCreateDocumentTypeEnum = "order_response"
)

func (e *LegalEntityCreateDocumentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invoice":
		fallthrough
	case "invoice_response":
		fallthrough
	case "order":
		fallthrough
	case "ordering":
		fallthrough
	case "order_response":
		*e = LegalEntityCreateDocumentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LegalEntityCreateDocumentTypeEnum: %s", s)
	}
}

// LegalEntityCreate - LegalEntity to create
type LegalEntityCreate struct {
	// A list of document types to advertise. Use if this LegalEntity needs the ability to receive more than only invoice documents.
	Advertisements []LegalEntityCreateDocumentTypeEnum `json:"advertisements,omitempty"`
	// The city.
	City string `json:"city"`
	// An ISO 3166-1 alpha-2 country code.
	Country CountryEnum `json:"country"`
	// County, if applicable
	County *string `json:"county,omitempty"`
	// The first address line.
	Line1 string `json:"line1"`
	// The second address line, if applicable
	Line2 *string `json:"line2,omitempty"`
	// The name of the company.
	PartyName string `json:"party_name"`
	// Whether or not this LegalEntity is public. Public means it will be entered into the PEPPOL directory at https://directory.peppol.eu/
	Public *bool `json:"public,omitempty"`
	Rea    *Rea  `json:"rea,omitempty"`
	// The id of the tenant, to be used in case of single-tenant solutions that share webhook URLs. This property will included in webhook events.
	TenantID *string `json:"tenant_id,omitempty"`
	// The password to use to authenticate to a system through which to send the document, or to obtain tax authority approval to send it. This field is currently relevant only for India and mandatory when creating an IN LegalEntity.
	ThirdPartyPassword *string `json:"third_party_password,omitempty"`
	// The username to use to authenticate to a system through which to send the document, or to obtain tax authority approval to send it. This field is currently relevant only for India and mandatory when creating an IN LegalEntity.
	ThirdPartyUsername *string `json:"third_party_username,omitempty"`
	// The zipcode.
	Zip string `json:"zip"`
}
