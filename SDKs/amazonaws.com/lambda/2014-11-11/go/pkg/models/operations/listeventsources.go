// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListEventSourcesQueryParams struct {
	// The Amazon Resource Name (ARN) of the Amazon Kinesis stream.
	EventSource *string `queryParam:"style=form,explode=true,name=EventSource"`
	// The name of the AWS Lambda function.
	FunctionName *string `queryParam:"style=form,explode=true,name=FunctionName"`
	// Optional string. An opaque pagination token returned from a previous <code>ListEventSources</code> operation. If present, specifies to continue the list from where the returning call left off.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Optional integer. Specifies the maximum number of event sources to return in response. This value must be greater than 0.
	MaxItems *int64 `queryParam:"style=form,explode=true,name=MaxItems"`
}

type ListEventSourcesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListEventSourcesRequest struct {
	QueryParams ListEventSourcesQueryParams
	Headers     ListEventSourcesHeaders
}

type ListEventSourcesResponse struct {
	ContentType string
	// InvalidParameterValueException
	InvalidParameterValueException *shared.InvalidParameterValueException
	// Success
	ListEventSourcesResponse *shared.ListEventSourcesResponse
	// ServiceException
	ServiceException *shared.ServiceException
	StatusCode       int
	RawResponse      *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException *shared.ResourceNotFoundException
}
