/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - User data
 */
public class User {
    /**
     * A short bio a user has written about themselves to help other members get to know them better. May be null if the user has not written anything about themselves.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("about_me")
    public String aboutMe;
    public User withAboutMe(String aboutMe) {
        this.aboutMe = aboutMe;
        return this;
    }
    
    /**
     * A 2 letter country code for the country that has been automatically detected for the user (see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 ). May be null if no country has been set.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public User withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feedback")
    public UserFeedback feedback;
    public User withFeedback(UserFeedback feedback) {
        this.feedback = feedback;
        return this;
    }
    
    /**
     * The first name of the user (may be null).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstname")
    public String firstname;
    public User withFirstname(String firstname) {
        this.firstname = firstname;
        return this;
    }
    
    /**
     * The last name of the user (may be null).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastname")
    public String lastname;
    public User withLastname(String lastname) {
        this.lastname = lastname;
        return this;
    }
    
    /**
     * The date and time when the user first became publicly active on a group (the date may be older than when the user signed up).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("member_since")
    public String memberSince;
    public User withMemberSince(String memberSince) {
        this.memberSince = memberSince;
        return this;
    }
    
    /**
     * A URL to a profile image for the user.  Profile images sizes vary based on the source (Google, Facebook, Gravatar, etc) and some can be as small as 64px by 64px.  Will be null for api key requests and requests where the oauth user doesn't belong to any of the same groups as this user.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile_image")
    public String profileImage;
    public User withProfileImage(String profileImage) {
        this.profileImage = profileImage;
        return this;
    }
    
    /**
     * An estimate of how many seconds it takes this user to reply to messages. May be null when there is not enough data to calculate an estimate.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reply_time")
    public Long replyTime;
    public User withReplyTime(Long replyTime) {
        this.replyTime = replyTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public User withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * A username that can be displayed for the user (the username is NOT guaranteed to be unique). Will be null for api key requests and requests where the oauth user doesn't belong to any of the same groups as this user.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public User withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
