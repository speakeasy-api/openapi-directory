// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type GetChargerSecurity struct {
	UserAccessToken  *shared.SchemeUserAccessToken `security:"scheme,type=oauth2"`
	UserAccessToken1 *shared.SchemeUserAccessToken `security:"scheme,type=oauth2"`
	UserAccessToken2 *shared.SchemeUserAccessToken `security:"scheme,type=oauth2"`
}

type GetChargerPathParams struct {
	// ID of the Charger
	ChargerID string `pathParam:"style=simple,explode=false,name=chargerId"`
}

type GetChargerQueryParams struct {
	// An optional array of Charger fields that should be included in the response, for example: `?field[]=information&field[]=chargeState`
	//
	// By default, no optional fields are included and only the Charger ID will be returned. Response time will generally be slower the more fields you request.
	Field []shared.OnechargersGetParameters0Enum `queryParam:"style=form,explode=true,name=field[]"`
}

type GetChargerRequest struct {
	PathParams  GetChargerPathParams
	QueryParams GetChargerQueryParams
	Security    GetChargerSecurity
}

type GetCharger200ApplicationJSONChargeState struct {
	// The current charge rate in kW.
	//
	// This property is only available when the charger is actively charging a vehicle, and is `null` any other time.
	ChargeRate *float64 `json:"chargeRate,omitempty"`
	// Current charging status
	IsCharging *bool `json:"isCharging,omitempty"`
	// Indicates whether the charger has a vehicle plugged into it (regardless of whether that vehicle is actually charging)
	IsPluggedIn *bool `json:"isPluggedIn,omitempty"`
}

// GetCharger200ApplicationJSONInformation - Descriptive information about the Charger
type GetCharger200ApplicationJSONInformation struct {
	// Charger brand
	Brand *string `json:"brand,omitempty"`
	// Charger ID
	ID *string `json:"id,omitempty"`
	// Charger model
	Model *string `json:"model,omitempty"`
	// Charger production year
	Year *int64 `json:"year,omitempty"`
}

// GetCharger200ApplicationJSON - Successful
type GetCharger200ApplicationJSON struct {
	ChargeState *GetCharger200ApplicationJSONChargeState `json:"chargeState,omitempty"`
	// Charger ID
	ID *string `json:"id,omitempty"`
	// Descriptive information about the Charger
	Information *GetCharger200ApplicationJSONInformation `json:"information,omitempty"`
	// Is the charger currently reachable?
	IsReachable *bool `json:"isReachable,omitempty"`
	// The last time the charger was successfully communicated with
	LastSeen *types.Date `json:"lastSeen,omitempty"`
}

type GetChargerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful
	GetCharger200ApplicationJSONObject *GetCharger200ApplicationJSON
}
