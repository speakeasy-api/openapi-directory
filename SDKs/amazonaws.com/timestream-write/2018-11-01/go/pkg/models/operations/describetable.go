// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeTableXAmzTargetEnum
type DescribeTableXAmzTargetEnum string

const (
	DescribeTableXAmzTargetEnumTimestream20181101DescribeTable DescribeTableXAmzTargetEnum = "Timestream_20181101.DescribeTable"
)

func (e DescribeTableXAmzTargetEnum) ToPointer() *DescribeTableXAmzTargetEnum {
	return &e
}

func (e *DescribeTableXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Timestream_20181101.DescribeTable":
		*e = DescribeTableXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTableXAmzTargetEnum: %v", v)
	}
}

type DescribeTableRequest struct {
	DescribeTableRequest shared.DescribeTableRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           DescribeTableXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeTableResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DescribeTableResponse *shared.DescribeTableResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidEndpointException
	InvalidEndpointException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
