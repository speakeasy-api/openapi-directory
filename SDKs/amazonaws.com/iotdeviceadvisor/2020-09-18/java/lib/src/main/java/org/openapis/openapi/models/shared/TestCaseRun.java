/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TestCaseRun - Provides the test case run.
 */
public class TestCaseRun {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;

    public TestCaseRun withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failure")
    public String failure;

    public TestCaseRun withFailure(String failure) {
        this.failure = failure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logUrl")
    public String logUrl;

    public TestCaseRun withLogUrl(String logUrl) {
        this.logUrl = logUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;

    public TestCaseRun withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public StatusEnum status;

    public TestCaseRun withStatus(StatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testCaseDefinitionId")
    public String testCaseDefinitionId;

    public TestCaseRun withTestCaseDefinitionId(String testCaseDefinitionId) {
        this.testCaseDefinitionId = testCaseDefinitionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testCaseDefinitionName")
    public String testCaseDefinitionName;

    public TestCaseRun withTestCaseDefinitionName(String testCaseDefinitionName) {
        this.testCaseDefinitionName = testCaseDefinitionName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testCaseRunId")
    public String testCaseRunId;

    public TestCaseRun withTestCaseRunId(String testCaseRunId) {
        this.testCaseRunId = testCaseRunId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testScenarios")
    public TestCaseScenario[] testScenarios;

    public TestCaseRun withTestScenarios(TestCaseScenario[] testScenarios) {
        this.testScenarios = testScenarios;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public String warnings;

    public TestCaseRun withWarnings(String warnings) {
        this.warnings = warnings;
        return this;
    }
    
    public TestCaseRun(){}
}
