/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetVideoPrivacyDomainsRequest extends SpeakeasyBase {
  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The ID of the video.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=video_id",
  })
  videoId: number;
}

export class GetVideoPrivacyDomainsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The domains were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.Domain })
  domains?: shared.Domain[];

  /**
   * There are no domains on which the video can be embedded.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;
}
