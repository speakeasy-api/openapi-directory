/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetSimilarRequest extends SpeakeasyBase {
  /**
   * We'll provide information about related companies based on the site you provide. If a LinkedIn page is sent, we will try to identify the company related to the page. Ex. https://api.byautomata.io/similar?link=ibm.com
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=link" })
  link: string;

  /**
   * Page number of search results. Ex. https://api.byautomata.io/similar?link=ibm.com&page=1
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: string;
}

/**
 * A successful operation
 */
export class GetSimilar200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "calls_per_month" })
  callsPerMonth?: string;

  @SpeakeasyMetadata({ elemType: shared.SimilarCompany })
  @Expose({ name: "companies" })
  @Type(() => shared.SimilarCompany)
  companies?: shared.SimilarCompany[];

  @SpeakeasyMetadata()
  @Expose({ name: "count_remaining" })
  countRemaining?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "input_company" })
  @Type(() => shared.InputCompany)
  inputCompany?: shared.InputCompany;

  @SpeakeasyMetadata()
  @Expose({ name: "renewal_date" })
  renewalDate?: string;
}

export class GetSimilarResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A successful operation
   */
  @SpeakeasyMetadata()
  getSimilar200ApplicationJSONObject?: GetSimilar200ApplicationJSON;
}
