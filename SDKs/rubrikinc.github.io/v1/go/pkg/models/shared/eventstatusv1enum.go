// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EventStatusV1Enum - Status of an event.
type EventStatusV1Enum string

const (
	EventStatusV1EnumFailure     EventStatusV1Enum = "Failure"
	EventStatusV1EnumWarning     EventStatusV1Enum = "Warning"
	EventStatusV1EnumInfo        EventStatusV1Enum = "Info"
	EventStatusV1EnumRunning     EventStatusV1Enum = "Running"
	EventStatusV1EnumQueued      EventStatusV1Enum = "Queued"
	EventStatusV1EnumSuccess     EventStatusV1Enum = "Success"
	EventStatusV1EnumCanceled    EventStatusV1Enum = "Canceled"
	EventStatusV1EnumCanceling   EventStatusV1Enum = "Canceling"
	EventStatusV1EnumTaskSuccess EventStatusV1Enum = "TaskSuccess"
)

func (e EventStatusV1Enum) ToPointer() *EventStatusV1Enum {
	return &e
}

func (e *EventStatusV1Enum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Failure":
		fallthrough
	case "Warning":
		fallthrough
	case "Info":
		fallthrough
	case "Running":
		fallthrough
	case "Queued":
		fallthrough
	case "Success":
		fallthrough
	case "Canceled":
		fallthrough
	case "Canceling":
		fallthrough
	case "TaskSuccess":
		*e = EventStatusV1Enum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventStatusV1Enum: %v", v)
	}
}
