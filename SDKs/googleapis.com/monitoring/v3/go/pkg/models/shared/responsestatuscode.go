// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ResponseStatusCodeStatusClassEnum - A class of status codes to accept.
type ResponseStatusCodeStatusClassEnum string

const (
	ResponseStatusCodeStatusClassEnumStatusClassUnspecified ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_UNSPECIFIED"
	ResponseStatusCodeStatusClassEnumStatusClass1Xx         ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_1XX"
	ResponseStatusCodeStatusClassEnumStatusClass2Xx         ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_2XX"
	ResponseStatusCodeStatusClassEnumStatusClass3Xx         ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_3XX"
	ResponseStatusCodeStatusClassEnumStatusClass4Xx         ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_4XX"
	ResponseStatusCodeStatusClassEnumStatusClass5Xx         ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_5XX"
	ResponseStatusCodeStatusClassEnumStatusClassAny         ResponseStatusCodeStatusClassEnum = "STATUS_CLASS_ANY"
)

func (e *ResponseStatusCodeStatusClassEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATUS_CLASS_UNSPECIFIED":
		fallthrough
	case "STATUS_CLASS_1XX":
		fallthrough
	case "STATUS_CLASS_2XX":
		fallthrough
	case "STATUS_CLASS_3XX":
		fallthrough
	case "STATUS_CLASS_4XX":
		fallthrough
	case "STATUS_CLASS_5XX":
		fallthrough
	case "STATUS_CLASS_ANY":
		*e = ResponseStatusCodeStatusClassEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResponseStatusCodeStatusClassEnum: %s", s)
	}
}

// ResponseStatusCode - A status to accept. Either a status code class like "2xx", or an integer status code like "200".
type ResponseStatusCode struct {
	// A class of status codes to accept.
	StatusClass *ResponseStatusCodeStatusClassEnum `json:"statusClass,omitempty"`
	// A status code to accept.
	StatusValue *int `json:"statusValue,omitempty"`
}
