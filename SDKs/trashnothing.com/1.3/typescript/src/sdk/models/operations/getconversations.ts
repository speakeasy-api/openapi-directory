/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetConversationsRequest extends SpeakeasyBase {
  /**
   * Used to filter messases by category.  Must be set to one of the following three categories: inbox, archived, blocked
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=category",
  })
  category?: string;

  /**
   * Client device pixel ratio used to determine thumbnail size (default 1.0).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device_pixel_ratio",
  })
  devicePixelRatio?: number;

  /**
   * If set to 1, the num_unread field in the response will be set to the count of the total number of conversations that have unread messages. <br /><br /> This is useful for showing users the total number of unread messages that they have in their inbox. Calculating the count will slow the request down a bit so setting this should be avoided for requests where it's not needed (eg. requesting archived or blocked conversations or requests that are just paging through older conversations).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_num_unread",
  })
  includeNumUnread?: number;

  /**
   * The number of recent messages to return with each conversation. Additional messages can be retrieved using get conversation messages endpoint.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=num_messages",
  })
  numMessages?: number;

  /**
   * The page of conversations to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of conversations to return per page (must be >= 1 and <= 30).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;
}

/**
 * The conversations and paging data.
 */
export class GetConversations200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Conversation })
  @Expose({ name: "conversations" })
  @Type(() => shared.Conversation)
  conversations?: shared.Conversation[];

  /**
   * If the include_num_unread parameter is set to 1, this will be set to the total number of conversations that have unread messages matching the query parameters of the request.  If the include_num_unread parameter is set to 0, this will be null.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "num_unread" })
  numUnread?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage?: number;
}

export class GetConversationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The conversations and paging data.
   */
  @SpeakeasyMetadata()
  getConversations200ApplicationJSONObject?: GetConversations200ApplicationJSON;
}
