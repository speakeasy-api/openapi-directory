"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipaddressbasedremoteinfo as shared_ipaddressbasedremoteinfo
from ..shared import pipelineinfo as shared_pipelineinfo
from ..shared import remotesourcecodeanalysisserverinfo as shared_remotesourcecodeanalysisserverinfo
from ..shared import vcenterbasedremoteinfo as shared_vcenterbasedremoteinfo
from ..shared import versioncontrolinfo as shared_versioncontrolinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigurationSummary:
    r"""Summary of the collector configuration."""
    
    ip_address_based_remote_info_list: Optional[list[shared_ipaddressbasedremoteinfo.IPAddressBasedRemoteInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddressBasedRemoteInfoList'), 'exclude': lambda f: f is None }})  
    pipeline_info_list: Optional[list[shared_pipelineinfo.PipelineInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipelineInfoList'), 'exclude': lambda f: f is None }})  
    remote_source_code_analysis_server_info: Optional[shared_remotesourcecodeanalysisserverinfo.RemoteSourceCodeAnalysisServerInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remoteSourceCodeAnalysisServerInfo'), 'exclude': lambda f: f is None }})  
    vcenter_based_remote_info_list: Optional[list[shared_vcenterbasedremoteinfo.VcenterBasedRemoteInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vcenterBasedRemoteInfoList'), 'exclude': lambda f: f is None }})  
    version_control_info_list: Optional[list[shared_versioncontrolinfo.VersionControlInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionControlInfoList'), 'exclude': lambda f: f is None }})  
    