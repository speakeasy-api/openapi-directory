/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ApplyYaraRulesRequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export enum ApplyYaraRulesRequestBodyIsUnpackingRequiredEnum {
  True = "true",
  False = "false",
}

export class ApplyYaraRulesRequestBody extends SpeakeasyBase {
  /**
   * file
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: ApplyYaraRulesRequestBodyFile;

  @SpeakeasyMetadata({ data: "multipart_form, name=is_unpacking_required" })
  isUnpackingRequired?: ApplyYaraRulesRequestBodyIsUnpackingRequiredEnum;

  @SpeakeasyMetadata({ data: "multipart_form, name=rules" })
  rules: string[];
}

/**
 * Yara rules
 */
export class ApplyYaraRules200Wildcard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  result?: shared.ApplyYaraRule;
}

export class ApplyYaraRulesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
