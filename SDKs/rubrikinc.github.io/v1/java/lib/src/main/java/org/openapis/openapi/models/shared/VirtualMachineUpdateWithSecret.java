/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VirtualMachineUpdateWithSecret - Properties to update.
 */
public class VirtualMachineUpdateWithSecret {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudInstantiationSpec")
    public CloudInstantiationSpec cloudInstantiationSpec;

    public VirtualMachineUpdateWithSecret withCloudInstantiationSpec(CloudInstantiationSpec cloudInstantiationSpec) {
        this.cloudInstantiationSpec = cloudInstantiationSpec;
        return this;
    }
    
    /**
     * Assign this VM to the given SLA domain. Existing snapshots of the object will be retained with the configuration of specified SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public VirtualMachineUpdateWithSecret withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guestCredential")
    public BaseGuestCredential guestCredential;

    public VirtualMachineUpdateWithSecret withGuestCredential(BaseGuestCredential guestCredential) {
        this.guestCredential = guestCredential;
        return this;
    }
    
    /**
     * User setting to dictate whether to use storage array snaphots for ingest. This setting only makes sense for VMs where array based ingest is possible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isArrayIntegrationEnabled")
    public Boolean isArrayIntegrationEnabled;

    public VirtualMachineUpdateWithSecret withIsArrayIntegrationEnabled(Boolean isArrayIntegrationEnabled) {
        this.isArrayIntegrationEnabled = isArrayIntegrationEnabled;
        return this;
    }
    
    /**
     * Whether to pause or resume backups/archival for this VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isVmPaused")
    public Boolean isVmPaused;

    public VirtualMachineUpdateWithSecret withIsVmPaused(Boolean isVmPaused) {
        this.isVmPaused = isVmPaused;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxNestedVsphereSnapshots")
    public Integer maxNestedVsphereSnapshots;

    public VirtualMachineUpdateWithSecret withMaxNestedVsphereSnapshots(Integer maxNestedVsphereSnapshots) {
        this.maxNestedVsphereSnapshots = maxNestedVsphereSnapshots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postBackupScript")
    public VirtualMachineScriptDetail postBackupScript;

    public VirtualMachineUpdateWithSecret withPostBackupScript(VirtualMachineScriptDetail postBackupScript) {
        this.postBackupScript = postBackupScript;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postSnapScript")
    public VirtualMachineScriptDetail postSnapScript;

    public VirtualMachineUpdateWithSecret withPostSnapScript(VirtualMachineScriptDetail postSnapScript) {
        this.postSnapScript = postSnapScript;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preBackupScript")
    public VirtualMachineScriptDetail preBackupScript;

    public VirtualMachineUpdateWithSecret withPreBackupScript(VirtualMachineScriptDetail preBackupScript) {
        this.preBackupScript = preBackupScript;
        return this;
    }
    
    /**
     * A boolean value that specifies whether an update also refreshes the in-memory cache. When 'false' updates do not refresh the in-memory cache. When 'true' updates refresh the in-memory cache. By default, this value is 'true'. Setting this value to 'false' reduces the time required for updates to complete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shouldRefreshCacheAfterUpdate")
    public Boolean shouldRefreshCacheAfterUpdate;

    public VirtualMachineUpdateWithSecret withShouldRefreshCacheAfterUpdate(Boolean shouldRefreshCacheAfterUpdate) {
        this.shouldRefreshCacheAfterUpdate = shouldRefreshCacheAfterUpdate;
        return this;
    }
    
    /**
     * Consistency level mandated for this VM or empty string for none.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotConsistencyMandate")
    public VirtualMachineUpdateWithSecretSnapshotConsistencyMandateEnum snapshotConsistencyMandate;

    public VirtualMachineUpdateWithSecret withSnapshotConsistencyMandate(VirtualMachineUpdateWithSecretSnapshotConsistencyMandateEnum snapshotConsistencyMandate) {
        this.snapshotConsistencyMandate = snapshotConsistencyMandate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("throttlingSettings")
    public VmwareAdaptiveThrottlingSettings throttlingSettings;

    public VirtualMachineUpdateWithSecret withThrottlingSettings(VmwareAdaptiveThrottlingSettings throttlingSettings) {
        this.throttlingSettings = throttlingSettings;
        return this;
    }
    
    public VirtualMachineUpdateWithSecret(){}
}
