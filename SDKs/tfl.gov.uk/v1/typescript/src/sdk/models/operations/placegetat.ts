/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class PlaceGetAtRequest extends SpeakeasyBase {
  /**
   * Automatically added
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Lat" })
  latPathParameter: string;

  /**
   * Automatically added
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Lon" })
  lonPathParameter: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lat" })
  latQueryParameter: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location.lat",
  })
  locationLat: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location.lon",
  })
  locationLon: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lon" })
  lonQueryParameter: string;

  /**
   * The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=type",
  })
  type: string[];
}

export class PlaceGetAtResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  systemObject?: Record<string, any>;
}
