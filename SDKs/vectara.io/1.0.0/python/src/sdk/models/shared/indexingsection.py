"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import vectaraindexingcustomdimension as shared_vectaraindexingcustomdimension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IndexingSection:
    r"""A section within a structured document."""
    
    custom_dims: Optional[list[shared_vectaraindexingcustomdimension.VectaraindexingCustomDimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customDims'), 'exclude': lambda f: f is None }})
    r"""A list of custom dimension values that are included in the generated
    representation of all subsections (i.e. sections contains by this section).
    """  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Optionally, the unique ID of this section. If set, it will be returned as
    metadata in query results.
    """  
    metadata_json: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadataJson'), 'exclude': lambda f: f is None }})
    r"""Metadata about this section. This should be a json string. It is passed
    through the system, without being used at indexing time. It can be
    retrieved at query time.
    """  
    section: Optional[list[IndexingSection]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('section'), 'exclude': lambda f: f is None }})
    r"""A list of subsections."""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The text of the section. This should never be empty."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Optionally, the title of the section. This may be empty."""  
    