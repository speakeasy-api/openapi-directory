"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import logicaloperator_enum as shared_logicaloperator_enum
from ..shared import propertyfilter as shared_propertyfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PropertyFilters:
    r"""<p/>"""
    
    logical_operator: Optional[shared_logicaloperator_enum.LogicalOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LogicalOperator'), 'exclude': lambda f: f is None }})  
    properties: Optional[list[shared_propertyfilter.PropertyFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Properties'), 'exclude': lambda f: f is None }})  
    