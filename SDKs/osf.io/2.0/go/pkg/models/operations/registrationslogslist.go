// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type RegistrationsLogsListRequest struct {
	// The unique identifier of the registration.
	RegistrationID string `pathParam:"style=simple,explode=false,name=registration_id"`
}

// RegistrationsLogsListLogAttributesLogParams - The type of action performed on the OSF. See description for full list of possible actions.
type RegistrationsLogsListLogAttributesLogParams struct {
	// The addon associated with the connected node.
	Addon *string
	// The view only link added to the node was anonymous.
	AnonymousLink *bool
	// The Amazon s3 bucket connected to the connected node.
	Bucket *string
	// Name of citation associated with the connected node.
	CitationName *string
	// List of contributors on the connected node involved in the action represented by this node log.
	Contributors *string
	// The dataset associated with the connected node.
	DataSet *string
	// A dictionary with information about the destination for the move of the item on the node associated with this log. Details include the path, url, addon, node_url and node_title.
	Destination *string
	// Title of the fighshare project associated with this node log
	FigshareTitle *string
	// Dictionary with information about the file involved with the log.
	File *string
	// Filename for the file associated with the log.
	Filename *string
	// Folder associated with the log.
	Folder *string
	// Name of the folder associated with the log.
	FolderName *string
	// URL that the connected node forwards to.
	ForwardURL *string
	// The github repository involved with the action represented by this node log.
	GithubRepo *string
	// The github user involved with the action represented by this node log.
	GithubUser *string
	// Dictionary containing the DOI and ARK ID for a preprint associated with the log.
	Identifiers *string
	// Dictionary containing the ID and Name of the institution associated with the log.
	Institution *string
	// Kind of the object associated with the log.
	Kind *string
	// License for the associated node.
	License *string
	// Old name of wiki page for a wiki rename log action.
	OldPage *string
	// Current name of wiki page for rename log action.
	Page *string
	// Primary key of the wiki page associated with the log.
	PageID *string
	// Node that is refered to in the params of the log.
	ParamsNode *string
	// Project that is refered to in the params of the log.
	ParamsProject *string
	// Path for a file associated with the log.
	Path *string
	// A dictionary with information about the node that is linked to the associated node.
	Pointer *string
	// Preprint related to the associated node.
	Preprint *string
	// Preprint provider for the associated node.
	PreprintProvider *string
	// If a primary institution for the associated node is changed, this will show the previous institution.
	PreviousInstitution *string
	// A dictionary with information about the source of a move related event for a log. Details include the path, url, addon, node_url and node_title.
	Source *string
	// Dataverse study linked to the associated node.
	Study *string
	// Tag associated with the associated node.
	Tag *string
	// Tags associated with the associated node.
	Tags *string
	// A dictionary containing details about the target of the log. Details include the path, url, addon, node_url and node_title.
	Target *string
	// A dictionary containing information about the node that was used as a template for the associated node.
	TemplateNode *string
	// The new title for the associated node.
	TitleNew *string
	// The original title for the associated node
	TitleOriginal *string
	// A dictionary containing all of the fields updated on the associated node.
	UpdatedFields *string
	// Links to access information about the file associated with this log.
	Urls *string
	// Version of the wiki page associated with this log.
	Version *string
	// A dictionary with information about the wiki page associated with the log.
	Wiki *string
}

// RegistrationsLogsListLogAttributes - The properties of the log.
type RegistrationsLogsListLogAttributes struct {
	// The type of action performed on the OSF. See actions section for full list of possible actions.
	Action string
	// The date and time at which the log was created, as an iso8601 formatted timestamp.
	Date time.Time
	// The type of action performed on the OSF. See description for full list of possible actions.
	Params *RegistrationsLogsListLogAttributesLogParams
}

// RegistrationsLogsListLogLinks - URLs to alternative representations of the log entity.
type RegistrationsLogsListLogLinks struct {
	// A link to the detail page for the log.
	Self string
}

// RegistrationsLogsListLogRelationships - URLs to other entities or entity collections that have a relationship to the log.
type RegistrationsLogsListLogRelationships struct {
	// A relationship to the node linked to this log.
	LinkedNode *string
	// A relationship to the node associated with this log.
	Node string
	// A relationship to the original node that was associated with this log, in case this log was copied from a node to a fork or registration.
	OriginalNode *string
	// A relationship to the node used as a template for this log.
	TemplateNode *string
	// A relationship to the user who performed the log action.
	User *string
}

type RegistrationsLogsListLog struct {
	// The properties of the log.
	Attributes RegistrationsLogsListLogAttributes
	// The identifier of the log.
	ID string
	// URLs to alternative representations of the log entity.
	Links RegistrationsLogsListLogLinks
	// URLs to other entities or entity collections that have a relationship to the log.
	Relationships RegistrationsLogsListLogRelationships
	// The type identifier of the log (`logs`)
	Type string
}

type RegistrationsLogsListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
