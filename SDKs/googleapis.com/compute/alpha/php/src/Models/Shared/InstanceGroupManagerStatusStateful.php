<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class InstanceGroupManagerStatusStateful
{
    /**
     * [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.
     * 
     * @var ?bool $hasStatefulConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasStatefulConfig')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasStatefulConfig = null;
    
    /**
     * [Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config.
     * 
     * @var ?bool $isStateful
     */
	#[\JMS\Serializer\Annotation\SerializedName('isStateful')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isStateful = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('perInstanceConfigs')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerStatusStatefulPerInstanceConfigs')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupManagerStatusStatefulPerInstanceConfigs $perInstanceConfigs = null;
    
	public function __construct()
	{
		$this->hasStatefulConfig = null;
		$this->isStateful = null;
		$this->perInstanceConfigs = null;
	}
}
