/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationConfiguration } from "./destinationconfiguration";
import { LoggingConfigurationStateEnum } from "./loggingconfigurationstateenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Summary information about a logging configuration.
 */
export class LoggingConfigurationSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationConfiguration" })
  @Type(() => DestinationConfiguration)
  destinationConfiguration?: DestinationConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: LoggingConfigurationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime?: Date;
}
