/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateEmbeddingRequest {
    /**
     * Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed 8192 tokens in length.
     * 
     */
    @JsonProperty("input")
    public Object input;
    public CreateEmbeddingRequest withInput(Object input) {
        this.input = input;
        return this;
    }
    
    /**
     * ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.
     */
    @JsonProperty("model")
    public String model;
    public CreateEmbeddingRequest withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public String user;
    public CreateEmbeddingRequest withUser(String user) {
        this.user = user;
        return this;
    }
    
}
