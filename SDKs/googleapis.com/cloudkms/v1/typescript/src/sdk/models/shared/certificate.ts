/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A Certificate represents an X.509 certificate used to authenticate HTTPS connections to EKM replicas.
 */
export class Certificate extends SpeakeasyBase {
  /**
   * Output only. The issuer distinguished name in RFC 2253 format. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuer" })
  issuer?: string;

  /**
   * Output only. The certificate is not valid after this time. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notAfterTime" })
  notAfterTime?: string;

  /**
   * Output only. The certificate is not valid before this time. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notBeforeTime" })
  notBeforeTime?: string;

  /**
   * Output only. True if the certificate was parsed successfully.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parsed" })
  parsed?: boolean;

  /**
   * Required. The raw certificate bytes in DER format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawDer" })
  rawDer?: string;

  /**
   * Output only. The certificate serial number as a hex string. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serialNumber" })
  serialNumber?: string;

  /**
   * Output only. The SHA-256 certificate fingerprint as a hex string. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sha256Fingerprint" })
  sha256Fingerprint?: string;

  /**
   * Output only. The subject distinguished name in RFC 2253 format. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  /**
   * Output only. The subject Alternative DNS names. Only present if parsed is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subjectAlternativeDnsNames" })
  subjectAlternativeDnsNames?: string[];
}

/**
 * A Certificate represents an X.509 certificate used to authenticate HTTPS connections to EKM replicas.
 */
export class CertificateInput extends SpeakeasyBase {
  /**
   * Required. The raw certificate bytes in DER format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawDer" })
  rawDer?: string;
}
