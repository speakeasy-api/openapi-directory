// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterPatchBaselineForPatchGroupXAmzTargetEnum
type RegisterPatchBaselineForPatchGroupXAmzTargetEnum string

const (
	RegisterPatchBaselineForPatchGroupXAmzTargetEnumAmazonSsmRegisterPatchBaselineForPatchGroup RegisterPatchBaselineForPatchGroupXAmzTargetEnum = "AmazonSSM.RegisterPatchBaselineForPatchGroup"
)

func (e RegisterPatchBaselineForPatchGroupXAmzTargetEnum) ToPointer() *RegisterPatchBaselineForPatchGroupXAmzTargetEnum {
	return &e
}

func (e *RegisterPatchBaselineForPatchGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.RegisterPatchBaselineForPatchGroup":
		*e = RegisterPatchBaselineForPatchGroupXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterPatchBaselineForPatchGroupXAmzTargetEnum: %v", v)
	}
}

type RegisterPatchBaselineForPatchGroupRequest struct {
	RegisterPatchBaselineForPatchGroupRequest shared.RegisterPatchBaselineForPatchGroupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                            *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                  *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                         *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                RegisterPatchBaselineForPatchGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterPatchBaselineForPatchGroupResponse struct {
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// DoesNotExistException
	DoesNotExistException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidResourceId
	InvalidResourceID interface{}
	// Success
	RegisterPatchBaselineForPatchGroupResult *shared.RegisterPatchBaselineForPatchGroupResult
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
}
