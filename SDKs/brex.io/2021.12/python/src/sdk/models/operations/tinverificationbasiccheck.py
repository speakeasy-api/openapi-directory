"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class TinVerificationBasicCheckSecurity:
    
    user_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'user_key' }})  
    

@dataclasses.dataclass
class TinVerificationBasicCheckRequest:
    
    name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""Company Name"""  
    tin: str = dataclasses.field(metadata={'query_param': { 'field_name': 'tin', 'style': 'form', 'explode': True }})
    r"""Nine letter TIN number with or without hyphens"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TinVerificationBasicCheckDefaultApplicationJSON:
    r"""Detailed information about the error"""
    
    code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})  
    fault: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fault'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TinVerificationBasicCheck200ApplicationJSON:
    r"""Result of a basic TIN number check with company name"""
    
    match_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchStatus') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    possible_match: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('possibleMatch') }})  
    tin: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tin') }})  
    validation_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationStatus') }})  
    

@dataclasses.dataclass
class TinVerificationBasicCheckResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tin_verification_basic_check_200_application_json_object: Optional[TinVerificationBasicCheck200ApplicationJSON] = dataclasses.field(default=None)
    r"""Result of a basic TIN number check with company name"""  
    tin_verification_basic_check_default_application_json_object: Optional[TinVerificationBasicCheckDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Detailed information about the error"""  
    