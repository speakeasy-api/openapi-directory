/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The Action when the device has lost the connection
 */
export enum OutputConfigurationContainerDigitalOutputNoConnectionActionEnum {
  Nothing = "Nothing",
  TurnOff = "TurnOff",
  TurnOn = "TurnOn",
  SetPwmValue = "SetPwmValue",
}

/**
 * The S0 Pulse Value
 */
export enum OutputConfigurationContainerS0PulseValueEnum {
  PulseValue1000Kwh = "PulseValue1000Kwh",
  PulseValue10000Kwh = "PulseValue10000Kwh",
}

/**
 * The Type of the output
 */
export enum OutputConfigurationContainerTypeEnum {
  ImpulseOutputActiveEnergy = "ImpulseOutputActiveEnergy",
  ImpulseOutputActiveEnergyImport = "ImpulseOutputActiveEnergyImport",
  ImpulseOutputActiveEnergyExport = "ImpulseOutputActiveEnergyExport",
  ImpulseOutputReactiveEnergy = "ImpulseOutputReactiveEnergy",
  DigitalOutput = "DigitalOutput",
  AnalogPwmSignalOutput = "AnalogPwmSignalOutput",
  Disabled = "Disabled",
}

/**
 * Configuration for the outputs of a meter (analog/digital outputs)
 */
export class OutputConfigurationContainer extends SpeakeasyBase {
  /**
   * The Action when the device has lost the connection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DigitalOutputNoConnectionAction" })
  digitalOutputNoConnectionAction?: OutputConfigurationContainerDigitalOutputNoConnectionActionEnum;

  /**
   * The Name of the Output
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The number of the Output. (1 for Output 1, 2 for Output 2)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Number" })
  number?: number;

  /**
   * The S0 Pulse Value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "S0PulseValue" })
  s0PulseValue?: OutputConfigurationContainerS0PulseValueEnum;

  /**
   * The Type of the output
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: OutputConfigurationContainerTypeEnum;
}
