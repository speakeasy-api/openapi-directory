/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ComptageRequest - sms request
 */
public class ComptageRequest {
    @JsonProperty("comptage")
    public ComptageRequestComptageEnum comptage;
    public ComptageRequest withComptage(ComptageRequestComptageEnum comptage) {
        this.comptage = comptage;
        return this;
    }
    
    /**
     * Date d'envoi au format YYYY-MM-DD hh:mm . Ce param\u00e8tre est optionnel, si il est omis l'envoi est r\u00e9alis\u00e9 imm\u00e9diatement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_envoi")
    public String dateEnvoi;
    public ComptageRequest withDateEnvoi(String dateEnvoi) {
        this.dateEnvoi = dateEnvoi;
        return this;
    }
    
    /**
     * - L'emetteur doit \u00eatre une cha\u00eene alphanum\u00e9rique comprise entre 4 et 11 caract\u00e8res.
     * 
     * - Les caract\u00e8res accept\u00e9s sont les chiffres entre 0 et 9, les lettres entre A et Z et l\u2019espace.
     * 
     * - Il ne peut pas comporter uniquement des chiffres. 
     * 
     * - Pour la modification de l'\u00e9metteur et dans le cadre de campagnes commerciales, les op\u00e9rateurs imposent contractuellement d'ajouter en fin de message le texte "STOP XXXXX". De ce fait, le message envoy\u00e9 ne pourra exc\u00e9der une longueur de 148 caract\u00e8res au lieu des 160 caract\u00e8res, le \u00ab\u00a0STOP\u00a0\u00bb \u00e9tant rajout\u00e9 automatiquement.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emetteur")
    public String emetteur;
    public ComptageRequest withEmetteur(String emetteur) {
        this.emetteur = emetteur;
        return this;
    }
    
    /**
     * Fuseau horaire de la date d'envoi
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gmt_zone")
    public ComptageRequestGmtZoneEnum gmtZone;
    public ComptageRequest withGmtZone(ComptageRequestGmtZoneEnum gmtZone) {
        this.gmtZone = gmtZone;
        return this;
    }
    
    /**
     * Cl\u00e9 API
     */
    @JsonProperty("keyid")
    public String keyid;
    public ComptageRequest withKeyid(String keyid) {
        this.keyid = keyid;
        return this;
    }
    
    /**
     * Si le message n\u2019est pas \u00e0 but commercial, vous pouvez faire une demande pour retirer l\u2019obligation du STOP. Une fois votre demande valid\u00e9e par nos services, vous pourrez supprimer la mention STOP SMS en ajoutant nostop = "1"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nostop")
    public String nostop;
    public ComptageRequest withNostop(String nostop) {
        this.nostop = nostop;
        return this;
    }
    
    /**
     * Numero de t\u00e9l\u00e9phone au format national (exemple 0680010203) ou international (example 33680010203)
     */
    @JsonProperty("num")
    public String num;
    public ComptageRequest withNum(String num) {
        this.num = num;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numAzur")
    public ComptageRequestNumAzurEnum numAzur;
    public ComptageRequest withNumAzur(ComptageRequestNumAzurEnum numAzur) {
        this.numAzur = numAzur;
        return this;
    }
    
    /**
     * Message \u00e0 envoyer aux destinataires. Le message doit \u00eatre encod\u00e9 au format utf-8 et ne contenir que des caract\u00e8res existant dans l'alphabet GSM. Il est \u00e9galement possible d'envoyer (\u00e0 l'\u00e9tranger uniquement) des SMS en UCS-2, cf param\u00e8tre ucs2 pour plus de d\u00e9tails.
     */
    @JsonProperty("sms")
    public String sms;
    public ComptageRequest withSms(String sms) {
        this.sms = sms;
        return this;
    }
    
    /**
     * Le SMS long permet de d\u00e9passer la limite de 160 caract\u00e8res en envoyant un message constitu\u00e9
     * de plusieurs SMS.
     * Il est possible d\u2019envoyer jusqu\u2019\u00e0 6 SMS concat\u00e9n\u00e9s pour une longueur totale maximale de 918
     * caract\u00e8res par message.
     * Pour des raisons technique, la limite par SMS concat\u00e9n\u00e9 \u00e9tant de 153 caract\u00e8res.
     * En cas de modification de l\u2019\u00e9metteur, il faut consid\u00e9rer l\u2019ajout automatique de 12 caract\u00e8res
     * du \u00ab\u00a0STOP SMS\u00a0\u00bb.
     * Pour envoyer un smslong, il faut ajouter le param\u00e8tre smslong aux appels. La valeur de SMS doit \u00eatre le nombre maximum de sms concat\u00e9n\u00e9 autoris\u00e9.   Pour ne pas avoir ce message d\u2019erreur et obtenir un calcul dynamique du nombre de SMS alors il faut renseigner smslong = "999"
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smslong")
    public ComptageRequestSmslongEnum smslong;
    public ComptageRequest withSmslong(ComptageRequestSmslongEnum smslong) {
        this.smslong = smslong;
        return this;
    }
    
    /**
     * Le tracker doit \u00eatre une chaine alphanum\u00e9rique de moins de 50 caract\u00e8res. Ce tracker sera ensuite renvoy\u00e9 en param\u00e8tre des urls pour les retours des accus\u00e9s de r\u00e9ception. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracker")
    public String tracker;
    public ComptageRequest withTracker(String tracker) {
        this.tracker = tracker;
        return this;
    }
    
    /**
     * Il est \u00e9galement possible d\u2019envoyer des SMS en alphabet non latin (russe, chinois, arabe, etc) sur
     * les num\u00e9ros hors France m\u00e9tropolitaine.
     * Pour ce faire, la requ\u00eate devrait \u00eatre encod\u00e9e au format UTF-8 et contenir l\u2019argument ucs2 = "1"
     * Du fait de contraintes techniques, 1 SMS unique ne pourra pas d\u00e9passer 70 caract\u00e8res (au lieu
     * des 160 usuels) et dans le cas de SMS long, chaque sms ne pourra d\u00e9passer 67 caract\u00e8res.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ucs2")
    public String ucs2;
    public ComptageRequest withUcs2(String ucs2) {
        this.ucs2 = ucs2;
        return this;
    }
    
}
