"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogItemOptionValue:
    r"""An enumerated value that can link a
    `CatalogItemVariation` to an item option as one of
    its item option values.
    """
    
    color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    r"""The HTML-supported hex color for the item option (e.g., \\"#ff8d4e85\\").
    Only displayed if `show_colors` is enabled on the parent `ItemOption`. When
    left unset, `color` defaults to white (\"#ffffff\") when `show_colors` is
    enabled on the parent `ItemOption`.
    """  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A human-readable description for the option value. This is a searchable attribute for use in applicable query filters."""  
    item_option_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item_option_id'), 'exclude': lambda f: f is None }})
    r"""Unique ID of the associated item option."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this item option value. This is a searchable attribute for use in applicable query filters."""  
    ordinal: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ordinal'), 'exclude': lambda f: f is None }})
    r"""Determines where this option value appears in a list of option values."""  
    