/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ReceiptRecognitionResult - Result of recognizing a receipt, to extract the key information from the receipt
 */
public class ReceiptRecognitionResult {
    /**
     * The address of the business printed on the receipt (if included on the receipt)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AddressString")
    public String addressString;
    public ReceiptRecognitionResult withAddressString(String addressString) {
        this.addressString = addressString;
        return this;
    }
    
    /**
     * The name of the business printed on the receipt (if included on the receipt)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BusinessName")
    public String businessName;
    public ReceiptRecognitionResult withBusinessName(String businessName) {
        this.businessName = businessName;
        return this;
    }
    
    /**
     * The website URL of the business printed on the receipt (if included on the receipt)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BusinessWebsite")
    public String businessWebsite;
    public ReceiptRecognitionResult withBusinessWebsite(String businessWebsite) {
        this.businessWebsite = businessWebsite;
        return this;
    }
    
    /**
     * The phone number printed on the receipt (if included on the receipt)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PhoneNumber")
    public String phoneNumber;
    public ReceiptRecognitionResult withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * The individual line items comprising the order; does not include total (see ReceiptTotal)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceiptItems")
    public ReceiptLineItem[] receiptItems;
    public ReceiptRecognitionResult withReceiptItems(ReceiptLineItem[] receiptItems) {
        this.receiptItems = receiptItems;
        return this;
    }
    
    /**
     * Optional; if available, the monetary value of the receipt subtotal - typically not including specialized line items such as Tax. If this value is not available, it will be 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceiptSubTotal")
    public Double receiptSubTotal;
    public ReceiptRecognitionResult withReceiptSubTotal(Double receiptSubTotal) {
        this.receiptSubTotal = receiptSubTotal;
        return this;
    }
    
    /**
     * The total monetary value of the receipt (if included on the receipt)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceiptTotal")
    public Double receiptTotal;
    public ReceiptRecognitionResult withReceiptTotal(Double receiptTotal) {
        this.receiptTotal = receiptTotal;
        return this;
    }
    
    /**
     * True if the operation was successful, false otherwise
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Successful")
    public Boolean successful;
    public ReceiptRecognitionResult withSuccessful(Boolean successful) {
        this.successful = successful;
        return this;
    }
    
    /**
     * The date and time printed on the receipt (if included on the receipt)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Timestamp")
    public OffsetDateTime timestamp;
    public ReceiptRecognitionResult withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
}
