// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum - The BGP status.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum string

const (
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnumUp   CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum = "up"
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnumDown CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum = "down"
)

func (e *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "up":
		fallthrough
	case "down":
		*e = CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum: %s", s)
	}
}

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations - The BGP configuration information.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations struct {
	BgpStatus             *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum
	PeerAddress           *string
	PeerAsn               *int64
	TransitGatewayAddress *string
	TransitGatewayAsn     *int64
}

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum - The tunnel protocol.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum string

const (
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnumGre CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum = "gre"
)

func (e *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "gre":
		*e = CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum: %s", s)
	}
}

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration - The Connect peer details.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration struct {
	BgpConfigurations     []CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations
	InsideCidrBlocks      []string
	PeerAddress           *string
	Protocol              *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum
	TransitGatewayAddress *string
}

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum - The state of the Connect peer.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum string

const (
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumPending   CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "pending"
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumAvailable CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "available"
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumDeleting  CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "deleting"
	CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumDeleted   CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "deleted"
)

func (e *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum: %s", s)
	}
}

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerTags - Describes a tag.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerTags struct {
	Key   *string
	Value *string
}

// CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeer - Information about the Connect peer.
type CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeer struct {
	ConnectPeerConfiguration    *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration
	CreationTime                *time.Time
	State                       *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum
	Tags                        []CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerTags
	TransitGatewayAttachmentID  *string
	TransitGatewayConnectPeerID *string
}

// CreateTransitGatewayConnectPeerResult - Success
type CreateTransitGatewayConnectPeerResult struct {
	TransitGatewayConnectPeer *CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeer
}
