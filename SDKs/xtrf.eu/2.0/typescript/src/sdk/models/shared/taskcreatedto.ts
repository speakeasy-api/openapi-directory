/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClassicPeopleDTO } from "./classicpeopledto";
import { CommonLanguageCombinationDTO } from "./commonlanguagecombinationdto";
import { InstructionsDTO } from "./instructionsdto";
import { ProjectDatesDTO } from "./projectdatesdto";
import { TaskFileDTO } from "./taskfiledto";
import { Expose, Type } from "class-transformer";

/**
 * Created new task for a given project.
 */
export class TaskCreateDTO extends SpeakeasyBase {
  /**
   * client task PO number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientTaskPONumber" })
  clientTaskPONumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dates" })
  @Type(() => ProjectDatesDTO)
  dates?: ProjectDatesDTO;

  /**
   * files
   */
  @SpeakeasyMetadata({ elemType: TaskFileDTO })
  @Expose({ name: "files" })
  @Type(() => TaskFileDTO)
  files?: TaskFileDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "instructions" })
  @Type(() => InstructionsDTO)
  instructions?: InstructionsDTO;

  /**
   * language combination (ie. PL -> EN)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCombination" })
  @Type(() => CommonLanguageCombinationDTO)
  languageCombination?: CommonLanguageCombinationDTO;

  /**
   * name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * people
   */
  @SpeakeasyMetadata()
  @Expose({ name: "people" })
  @Type(() => ClassicPeopleDTO)
  people?: ClassicPeopleDTO;

  /**
   * specialization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "specializationId" })
  specializationId?: number;

  /**
   * workflow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflowId" })
  workflowId?: number;
}
