/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CodeownersErrorsErrors {
    /**
     * The column number where this errors occurs.
     */
    @JsonProperty("column")
    public Long column;

    public CodeownersErrorsErrors withColumn(Long column) {
        this.column = column;
        return this;
    }
    
    /**
     * The type of error.
     */
    @JsonProperty("kind")
    public String kind;

    public CodeownersErrorsErrors withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The line number where this errors occurs.
     */
    @JsonProperty("line")
    public Long line;

    public CodeownersErrorsErrors withLine(Long line) {
        this.line = line;
        return this;
    }
    
    /**
     * A human-readable description of the error, combining information from multiple fields, laid out for display in a monospaced typeface (for example, a command-line setting).
     */
    @JsonProperty("message")
    public String message;

    public CodeownersErrorsErrors withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * The path of the file where the error occured.
     */
    @JsonProperty("path")
    public String path;

    public CodeownersErrorsErrors withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * The contents of the line where the error occurs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public CodeownersErrorsErrors withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * Suggested action to fix the error. This will usually be `null`, but is provided for some common errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestion")
    public String suggestion;

    public CodeownersErrorsErrors withSuggestion(String suggestion) {
        this.suggestion = suggestion;
        return this;
    }
    
    public CodeownersErrorsErrors(@JsonProperty("column") Long column, @JsonProperty("kind") String kind, @JsonProperty("line") Long line, @JsonProperty("message") String message, @JsonProperty("path") String path) {
        this.column = column;
        this.kind = kind;
        this.line = line;
        this.message = message;
        this.path = path;
  }
}
