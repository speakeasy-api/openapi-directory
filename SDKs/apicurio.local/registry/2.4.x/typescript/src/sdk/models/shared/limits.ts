/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * List of limitations on used resources, that are applied on the current instance of Registry.
 *
 * @remarks
 * Keys represent the resource type and are suffixed by the corresponding unit.
 * Values are integers. Only non-negative values are allowed, with the exception of -1, which means that the limit is not applied.
 */
export class Limits extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "maxArtifactDescriptionLengthChars" })
  maxArtifactDescriptionLengthChars?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxArtifactLabelsCount" })
  maxArtifactLabelsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxArtifactNameLengthChars" })
  maxArtifactNameLengthChars?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxArtifactPropertiesCount" })
  maxArtifactPropertiesCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxArtifactsCount" })
  maxArtifactsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxLabelSizeBytes" })
  maxLabelSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxPropertyKeySizeBytes" })
  maxPropertyKeySizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxPropertyValueSizeBytes" })
  maxPropertyValueSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxRequestsPerSecondCount" })
  maxRequestsPerSecondCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxSchemaSizeBytes" })
  maxSchemaSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxTotalSchemasCount" })
  maxTotalSchemasCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxVersionsPerArtifactCount" })
  maxVersionsPerArtifactCount?: number;
}
