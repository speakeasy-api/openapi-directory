// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AllResponseTypesExampleOpTypesEnum string

const (
	AllResponseTypesExampleOpTypesEnumConnection AllResponseTypesExampleOpTypesEnum = "connection"
	AllResponseTypesExampleOpTypesEnumStatus     AllResponseTypesExampleOpTypesEnum = "status"
	AllResponseTypesExampleOpTypesEnumMcm        AllResponseTypesExampleOpTypesEnum = "mcm"
	AllResponseTypesExampleOpTypesEnumOcm        AllResponseTypesExampleOpTypesEnum = "ocm"
)

func (e *AllResponseTypesExampleOpTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "connection":
		fallthrough
	case "status":
		fallthrough
	case "mcm":
		fallthrough
	case "ocm":
		*e = AllResponseTypesExampleOpTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AllResponseTypesExampleOpTypesEnum: %s", s)
	}
}

// AllResponseTypesExample - Responses are received from socket
type AllResponseTypesExample struct {
	Connection          *ConnectionMessage                  `json:"connection,omitempty"`
	MarketChangeMessage *MarketChangeMessage                `json:"marketChangeMessage,omitempty"`
	OpTypes             *AllResponseTypesExampleOpTypesEnum `json:"opTypes,omitempty"`
	OrderChangeMessage  *OrderChangeMessage                 `json:"orderChangeMessage,omitempty"`
	Status              *StatusMessage                      `json:"status,omitempty"`
}
