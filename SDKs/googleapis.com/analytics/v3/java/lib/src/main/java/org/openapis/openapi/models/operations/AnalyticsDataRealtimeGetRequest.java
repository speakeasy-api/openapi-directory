/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class AnalyticsDataRealtimeGetRequest {
    /**
     * Data format for the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public AnalyticsDataRealtimeGetRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * A comma-separated list of real time dimensions. E.g., 'rt:medium,rt:city'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=dimensions")
    public String dimensions;

    public AnalyticsDataRealtimeGetRequest withDimensions(String dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public AnalyticsDataRealtimeGetRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * A comma-separated list of dimension or metric filters to be applied to real time data.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filters")
    public String filters;

    public AnalyticsDataRealtimeGetRequest withFilters(String filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * Unique table ID for retrieving real time data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ids")
    public String ids;

    public AnalyticsDataRealtimeGetRequest withIds(String ids) {
        this.ids = ids;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public AnalyticsDataRealtimeGetRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The maximum number of entries to include in this feed.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=max-results")
    public Long maxResults;

    public AnalyticsDataRealtimeGetRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * A comma-separated list of real time metrics. E.g., 'rt:activeUsers'. At least one metric must be specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=metrics")
    public String metrics;

    public AnalyticsDataRealtimeGetRequest withMetrics(String metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public AnalyticsDataRealtimeGetRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public AnalyticsDataRealtimeGetRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public AnalyticsDataRealtimeGetRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * A comma-separated list of dimensions or metrics that determine the sort order for real time data.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;

    public AnalyticsDataRealtimeGetRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Deprecated. Please use quotaUser instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userIp")
    public String userIp;

    public AnalyticsDataRealtimeGetRequest withUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }
    
    public AnalyticsDataRealtimeGetRequest(@JsonProperty("ids") String ids, @JsonProperty("metrics") String metrics) {
        this.ids = ids;
        this.metrics = metrics;
  }
}
