// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLicenseUsageXAmzTargetEnum
type GetLicenseUsageXAmzTargetEnum string

const (
	GetLicenseUsageXAmzTargetEnumAwsLicenseManagerGetLicenseUsage GetLicenseUsageXAmzTargetEnum = "AWSLicenseManager.GetLicenseUsage"
)

func (e GetLicenseUsageXAmzTargetEnum) ToPointer() *GetLicenseUsageXAmzTargetEnum {
	return &e
}

func (e *GetLicenseUsageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSLicenseManager.GetLicenseUsage":
		*e = GetLicenseUsageXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLicenseUsageXAmzTargetEnum: %v", v)
	}
}

type GetLicenseUsageRequest struct {
	GetLicenseUsageRequest shared.GetLicenseUsageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             GetLicenseUsageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetLicenseUsageResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// Success
	GetLicenseUsageResponse *shared.GetLicenseUsageResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServerInternalException
	ServerInternalException interface{}
	// ValidationException
	ValidationException interface{}
}
