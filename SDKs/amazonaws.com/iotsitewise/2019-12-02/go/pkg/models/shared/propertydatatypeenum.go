// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PropertyDataTypeEnum string

const (
	PropertyDataTypeEnumString  PropertyDataTypeEnum = "STRING"
	PropertyDataTypeEnumInteger PropertyDataTypeEnum = "INTEGER"
	PropertyDataTypeEnumDouble  PropertyDataTypeEnum = "DOUBLE"
	PropertyDataTypeEnumBoolean PropertyDataTypeEnum = "BOOLEAN"
	PropertyDataTypeEnumStruct  PropertyDataTypeEnum = "STRUCT"
)

func (e PropertyDataTypeEnum) ToPointer() *PropertyDataTypeEnum {
	return &e
}

func (e *PropertyDataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING":
		fallthrough
	case "INTEGER":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "STRUCT":
		*e = PropertyDataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyDataTypeEnum: %v", v)
	}
}
