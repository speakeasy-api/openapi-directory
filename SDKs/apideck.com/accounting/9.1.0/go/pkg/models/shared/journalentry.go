// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type JournalEntryInput struct {
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// Currency Exchange Rate at the time entity was recorded/generated.
	CurrencyRate *float64 `json:"currency_rate,omitempty"`
	// Journal symbol of the entry. For example IND for indirect costs
	JournalSymbol *string `json:"journal_symbol,omitempty"`
	// Requires a minimum of 2 line items that sum to 0
	LineItems []JournalEntryLineItemInput `json:"line_items,omitempty"`
	// Reference for the journal entry.
	Memo *string `json:"memo,omitempty"`
	// This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
	PostedAt *time.Time `json:"posted_at,omitempty"`
	// Journal entry title
	Title *string `json:"title,omitempty"`
}

type JournalEntry struct {
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// Currency Exchange Rate at the time entity was recorded/generated.
	CurrencyRate *float64 `json:"currency_rate,omitempty"`
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// Journal symbol of the entry. For example IND for indirect costs
	JournalSymbol *string `json:"journal_symbol,omitempty"`
	// Requires a minimum of 2 line items that sum to 0
	LineItems []JournalEntryLineItem `json:"line_items,omitempty"`
	// Reference for the journal entry.
	Memo *string `json:"memo,omitempty"`
	// This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
	PostedAt *time.Time `json:"posted_at,omitempty"`
	// Journal entry title
	Title *string `json:"title,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
}
