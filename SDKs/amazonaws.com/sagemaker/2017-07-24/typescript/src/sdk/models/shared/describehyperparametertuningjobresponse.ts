/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HyperParameterTrainingJobDefinition } from "./hyperparametertrainingjobdefinition";
import { HyperParameterTrainingJobSummary } from "./hyperparametertrainingjobsummary";
import { HyperParameterTuningJobCompletionDetails } from "./hyperparametertuningjobcompletiondetails";
import { HyperParameterTuningJobConfig } from "./hyperparametertuningjobconfig";
import { HyperParameterTuningJobConsumedResources } from "./hyperparametertuningjobconsumedresources";
import { HyperParameterTuningJobStatusEnum } from "./hyperparametertuningjobstatusenum";
import { HyperParameterTuningJobWarmStartConfig } from "./hyperparametertuningjobwarmstartconfig";
import { ObjectiveStatusCounters } from "./objectivestatuscounters";
import { TrainingJobStatusCounters } from "./trainingjobstatuscounters";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeHyperParameterTuningJobResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BestTrainingJob" })
  @Type(() => HyperParameterTrainingJobSummary)
  bestTrainingJob?: HyperParameterTrainingJobSummary;

  /**
   * The total resources consumed by your hyperparameter tuning job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ConsumedResources" })
  @Type(() => HyperParameterTuningJobConsumedResources)
  consumedResources?: HyperParameterTuningJobConsumedResources;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  hyperParameterTuningEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobArn" })
  hyperParameterTuningJobArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobConfig" })
  @Type(() => HyperParameterTuningJobConfig)
  hyperParameterTuningJobConfig: HyperParameterTuningJobConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobName" })
  hyperParameterTuningJobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobStatus" })
  hyperParameterTuningJobStatus: HyperParameterTuningJobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ObjectiveStatusCounters" })
  @Type(() => ObjectiveStatusCounters)
  objectiveStatusCounters: ObjectiveStatusCounters;

  @SpeakeasyMetadata()
  @Expose({ name: "OverallBestTrainingJob" })
  @Type(() => HyperParameterTrainingJobSummary)
  overallBestTrainingJob?: HyperParameterTrainingJobSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingJobDefinition" })
  @Type(() => HyperParameterTrainingJobDefinition)
  trainingJobDefinition?: HyperParameterTrainingJobDefinition;

  @SpeakeasyMetadata({ elemType: HyperParameterTrainingJobDefinition })
  @Expose({ name: "TrainingJobDefinitions" })
  @Type(() => HyperParameterTrainingJobDefinition)
  trainingJobDefinitions?: HyperParameterTrainingJobDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingJobStatusCounters" })
  @Type(() => TrainingJobStatusCounters)
  trainingJobStatusCounters: TrainingJobStatusCounters;

  @SpeakeasyMetadata()
  @Expose({ name: "TuningJobCompletionDetails" })
  @Type(() => HyperParameterTuningJobCompletionDetails)
  tuningJobCompletionDetails?: HyperParameterTuningJobCompletionDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "WarmStartConfig" })
  @Type(() => HyperParameterTuningJobWarmStartConfig)
  warmStartConfig?: HyperParameterTuningJobWarmStartConfig;
}
