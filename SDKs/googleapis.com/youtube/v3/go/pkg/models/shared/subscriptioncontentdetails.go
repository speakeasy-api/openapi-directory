// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubscriptionContentDetailsActivityTypeEnum - The type of activity this subscription is for (only uploads, everything).
type SubscriptionContentDetailsActivityTypeEnum string

const (
	SubscriptionContentDetailsActivityTypeEnumSubscriptionActivityTypeUnspecified SubscriptionContentDetailsActivityTypeEnum = "subscriptionActivityTypeUnspecified"
	SubscriptionContentDetailsActivityTypeEnumAll                                 SubscriptionContentDetailsActivityTypeEnum = "all"
	SubscriptionContentDetailsActivityTypeEnumUploads                             SubscriptionContentDetailsActivityTypeEnum = "uploads"
)

func (e SubscriptionContentDetailsActivityTypeEnum) ToPointer() *SubscriptionContentDetailsActivityTypeEnum {
	return &e
}

func (e *SubscriptionContentDetailsActivityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "subscriptionActivityTypeUnspecified":
		fallthrough
	case "all":
		fallthrough
	case "uploads":
		*e = SubscriptionContentDetailsActivityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionContentDetailsActivityTypeEnum: %v", v)
	}
}

// SubscriptionContentDetails - Details about the content to witch a subscription refers.
type SubscriptionContentDetails struct {
	// The type of activity this subscription is for (only uploads, everything).
	ActivityType *SubscriptionContentDetailsActivityTypeEnum `json:"activityType,omitempty"`
	// The number of new items in the subscription since its content was last read.
	NewItemCount *int64 `json:"newItemCount,omitempty"`
	// The approximate number of items that the subscription points to.
	TotalItemCount *int64 `json:"totalItemCount,omitempty"`
}
