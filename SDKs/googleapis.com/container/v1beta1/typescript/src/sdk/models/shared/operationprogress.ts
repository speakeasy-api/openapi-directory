/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Metric } from "./metric";
import { Expose, Type } from "class-transformer";

/**
 * Status of an operation stage. Unset for single-stage operations.
 */
export enum OperationProgressStatusEnum {
  StatusUnspecified = "STATUS_UNSPECIFIED",
  Pending = "PENDING",
  Running = "RUNNING",
  Done = "DONE",
  Aborting = "ABORTING",
}

/**
 * Information about operation (or operation stage) progress.
 */
export class OperationProgress extends SpeakeasyBase {
  /**
   * Progress metric bundle, for example: metrics: [{name: "nodes done", int_value: 15}, {name: "nodes total", int_value: 32}] or metrics: [{name: "progress", double_value: 0.56}, {name: "progress scale", double_value: 1.0}]
   */
  @SpeakeasyMetadata({ elemType: Metric })
  @Expose({ name: "metrics" })
  @Type(() => Metric)
  metrics?: Metric[];

  /**
   * A non-parameterized string describing an operation stage. Unset for single-stage operations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Substages of an operation or a stage.
   */
  @SpeakeasyMetadata({ elemType: OperationProgress })
  @Expose({ name: "stages" })
  @Type(() => OperationProgress)
  stages?: OperationProgress[];

  /**
   * Status of an operation stage. Unset for single-stage operations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: OperationProgressStatusEnum;
}
