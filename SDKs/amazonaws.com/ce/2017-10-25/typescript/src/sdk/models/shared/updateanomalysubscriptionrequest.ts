/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnomalySubscriptionFrequencyEnum } from "./anomalysubscriptionfrequencyenum";
import { Expression } from "./expression";
import { Subscriber } from "./subscriber";
import { Expose, Type } from "class-transformer";

export class UpdateAnomalySubscriptionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Frequency" })
  frequency?: AnomalySubscriptionFrequencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorArnList" })
  monitorArnList?: string[];

  @SpeakeasyMetadata({ elemType: Subscriber })
  @Expose({ name: "Subscribers" })
  @Type(() => Subscriber)
  subscribers?: Subscriber[];

  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionArn" })
  subscriptionArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionName" })
  subscriptionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Threshold" })
  threshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ThresholdExpression" })
  @Type(() => Expression)
  thresholdExpression?: Expression;
}
