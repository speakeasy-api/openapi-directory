// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExplicitAuthFlowsTypeEnum string

const (
	ExplicitAuthFlowsTypeEnumAdminNoSrpAuth             ExplicitAuthFlowsTypeEnum = "ADMIN_NO_SRP_AUTH"
	ExplicitAuthFlowsTypeEnumCustomAuthFlowOnly         ExplicitAuthFlowsTypeEnum = "CUSTOM_AUTH_FLOW_ONLY"
	ExplicitAuthFlowsTypeEnumUserPasswordAuth           ExplicitAuthFlowsTypeEnum = "USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeEnumAllowAdminUserPasswordAuth ExplicitAuthFlowsTypeEnum = "ALLOW_ADMIN_USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeEnumAllowCustomAuth            ExplicitAuthFlowsTypeEnum = "ALLOW_CUSTOM_AUTH"
	ExplicitAuthFlowsTypeEnumAllowUserPasswordAuth      ExplicitAuthFlowsTypeEnum = "ALLOW_USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeEnumAllowUserSrpAuth           ExplicitAuthFlowsTypeEnum = "ALLOW_USER_SRP_AUTH"
	ExplicitAuthFlowsTypeEnumAllowRefreshTokenAuth      ExplicitAuthFlowsTypeEnum = "ALLOW_REFRESH_TOKEN_AUTH"
)

func (e ExplicitAuthFlowsTypeEnum) ToPointer() *ExplicitAuthFlowsTypeEnum {
	return &e
}

func (e *ExplicitAuthFlowsTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ADMIN_NO_SRP_AUTH":
		fallthrough
	case "CUSTOM_AUTH_FLOW_ONLY":
		fallthrough
	case "USER_PASSWORD_AUTH":
		fallthrough
	case "ALLOW_ADMIN_USER_PASSWORD_AUTH":
		fallthrough
	case "ALLOW_CUSTOM_AUTH":
		fallthrough
	case "ALLOW_USER_PASSWORD_AUTH":
		fallthrough
	case "ALLOW_USER_SRP_AUTH":
		fallthrough
	case "ALLOW_REFRESH_TOKEN_AUTH":
		*e = ExplicitAuthFlowsTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExplicitAuthFlowsTypeEnum: %v", v)
	}
}
