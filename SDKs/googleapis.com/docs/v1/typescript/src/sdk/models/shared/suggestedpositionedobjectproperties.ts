/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PositionedObjectProperties } from "./positionedobjectproperties";
import { PositionedObjectPropertiesSuggestionState } from "./positionedobjectpropertiessuggestionstate";
import { Expose, Type } from "class-transformer";

/**
 * A suggested change to PositionedObjectProperties.
 */
export class SuggestedPositionedObjectProperties extends SpeakeasyBase {
  /**
   * Properties of a PositionedObject.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "positionedObjectProperties" })
  @Type(() => PositionedObjectProperties)
  positionedObjectProperties?: PositionedObjectProperties;

  /**
   * A mask that indicates which of the fields on the base PositionedObjectProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "positionedObjectPropertiesSuggestionState" })
  @Type(() => PositionedObjectPropertiesSuggestionState)
  positionedObjectPropertiesSuggestionState?: PositionedObjectPropertiesSuggestionState;
}
