/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents the rule of conversion between a stockable [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation)
 *
 * @remarks
 * and a non-stockable sell-by or receive-by `CatalogItemVariation` that
 * share the same underlying stock.
 */
export class CatalogStockConversion extends SpeakeasyBase {
  /**
   * The converted equivalent quantity of the non-stockable [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation)
   *
   * @remarks
   * in its measurement unit. The `stockable_quantity` value and this `nonstockable_quantity` value together
   * define the conversion ratio between stockable item variation and the non-stockable item variation.
   * It accepts a decimal number in a string format that can take up to 10 digits before the decimal point
   * and up to 5 digits after the decimal point.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonstockable_quantity" })
  nonstockableQuantity: string;

  /**
   * References to the stockable [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation)
   *
   * @remarks
   * for this stock conversion. Selling, receiving or recounting the non-stockable `CatalogItemVariation`
   * defined with a stock conversion results in adjustments of this stockable `CatalogItemVariation`.
   * This immutable field must reference a stockable `CatalogItemVariation`
   * that shares the parent [CatalogItem](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItem) of the converted `CatalogItemVariation.`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stockable_item_variation_id" })
  stockableItemVariationId: string;

  /**
   * The quantity of the stockable item variation (as identified by `stockable_item_variation_id`)
   *
   * @remarks
   * equivalent to the non-stockable item variation quantity (as specified in `nonstockable_quantity`)
   * as defined by this stock conversion.  It accepts a decimal number in a string format that can take
   * up to 10 digits before the decimal point and up to 5 digits after the decimal point.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stockable_quantity" })
  stockableQuantity: string;
}
