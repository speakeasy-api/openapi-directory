/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class SearchCseSiterestrictListRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;
    public SearchCseSiterestrictListRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;
    public SearchCseSiterestrictListRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public SearchCseSiterestrictListRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * Enables or disables [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch). The default value for this parameter is 0 (zero), meaning that the feature is enabled. Supported values are: * `1`: Disabled * `0`: Enabled (default)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=c2coff")
    public String c2coff;
    public SearchCseSiterestrictListRequest withC2coff(String c2coff) {
        this.c2coff = c2coff;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;
    public SearchCseSiterestrictListRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#booleanOperators) in the cr parameter's value. Google Search determines the country of a document by analyzing: * the top-level domain (TLD) of the document's URL * the geographic location of the Web server's IP address See the [Country Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) page for a list of valid values for this parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cr")
    public String cr;
    public SearchCseSiterestrictListRequest withCr(String cr) {
        this.cr = cr;
        return this;
    }
    
    /**
     * The Programmable Search Engine ID to use for this request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cx")
    public String cx;
    public SearchCseSiterestrictListRequest withCx(String cx) {
        this.cx = cx;
        return this;
    }
    
    /**
     * Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=dateRestrict")
    public String dateRestrict;
    public SearchCseSiterestrictListRequest withDateRestrict(String dateRestrict) {
        this.dateRestrict = dateRestrict;
        return this;
    }
    
    /**
     * Identifies a phrase that all documents in the search results must contain.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=exactTerms")
    public String exactTerms;
    public SearchCseSiterestrictListRequest withExactTerms(String exactTerms) {
        this.exactTerms = exactTerms;
        return this;
    }
    
    /**
     * Identifies a word or phrase that should not appear in any documents in the search results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=excludeTerms")
    public String excludeTerms;
    public SearchCseSiterestrictListRequest withExcludeTerms(String excludeTerms) {
        this.excludeTerms = excludeTerms;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public SearchCseSiterestrictListRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Restricts results to files of a specified extension. A list of file types indexable by Google can be found in Search Console [Help Center](https://support.google.com/webmasters/answer/35287).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fileType")
    public String fileType;
    public SearchCseSiterestrictListRequest withFileType(String fileType) {
        this.fileType = fileType;
        return this;
    }
    
    /**
     * Controls turning on or off the duplicate content filter. * See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Note that host crowding filtering applies only to multi-site searches. * By default, Google applies filtering to all search results to improve the quality of those results. Acceptable values are: * `0`: Turns off duplicate content filter. * `1`: Turns on duplicate content filter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public String filter;
    public SearchCseSiterestrictListRequest withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Geolocation of end user. * The `gl` parameter value is a two-letter country code. The `gl` parameter boosts search results whose country of origin matches the parameter value. See the [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) page for a list of valid values. * Specifying a `gl` parameter value should lead to more relevant results. This is particularly true for international customers and, even more specifically, for customers in English- speaking countries other than the United States.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=gl")
    public String gl;
    public SearchCseSiterestrictListRequest withGl(String gl) {
        this.gl = gl;
        return this;
    }
    
    /**
     * **Deprecated**. Use the `gl` parameter for a similar effect. The local Google domain (for example, google.com, google.de, or google.fr) to use to perform the search.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=googlehost")
    public String googlehost;
    public SearchCseSiterestrictListRequest withGooglehost(String googlehost) {
        this.googlehost = googlehost;
        return this;
    }
    
    /**
     * Specifies the ending value for a search range. * Use `lowRange` and `highRange` to append an inclusive search range of `lowRange...highRange` to the query.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=highRange")
    public String highRange;
    public SearchCseSiterestrictListRequest withHighRange(String highRange) {
        this.highRange = highRange;
        return this;
    }
    
    /**
     * Sets the user interface language. * Explicitly setting this parameter improves the performance and the quality of your search results. * See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=hl")
    public String hl;
    public SearchCseSiterestrictListRequest withHl(String hl) {
        this.hl = hl;
        return this;
    }
    
    /**
     * Appends the specified query terms to the query, as if they were combined with a logical AND operator.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=hq")
    public String hq;
    public SearchCseSiterestrictListRequest withHq(String hq) {
        this.hq = hq;
        return this;
    }
    
    /**
     * Returns black and white, grayscale, transparent, or color images. Acceptable values are: * `"color"` * `"gray"` * `"mono"`: black and white * `"trans"`: transparent background
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=imgColorType")
    public SearchCseSiterestrictListImgColorTypeEnum imgColorType;
    public SearchCseSiterestrictListRequest withImgColorType(SearchCseSiterestrictListImgColorTypeEnum imgColorType) {
        this.imgColorType = imgColorType;
        return this;
    }
    
    /**
     * Returns images of a specific dominant color. Acceptable values are: * `"black"` * `"blue"` * `"brown"` * `"gray"` * `"green"` * `"orange"` * `"pink"` * `"purple"` * `"red"` * `"teal"` * `"white"` * `"yellow"`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=imgDominantColor")
    public SearchCseSiterestrictListImgDominantColorEnum imgDominantColor;
    public SearchCseSiterestrictListRequest withImgDominantColor(SearchCseSiterestrictListImgDominantColorEnum imgDominantColor) {
        this.imgDominantColor = imgDominantColor;
        return this;
    }
    
    /**
     * Returns images of a specified size. Acceptable values are: * `"huge"` * `"icon"` * `"large"` * `"medium"` * `"small"` * `"xlarge"` * `"xxlarge"`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=imgSize")
    public SearchCseSiterestrictListImgSizeEnum imgSize;
    public SearchCseSiterestrictListRequest withImgSize(SearchCseSiterestrictListImgSizeEnum imgSize) {
        this.imgSize = imgSize;
        return this;
    }
    
    /**
     * Returns images of a type. Acceptable values are: * `"clipart"` * `"face"` * `"lineart"` * `"stock"` * `"photo"` * `"animated"`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=imgType")
    public SearchCseSiterestrictListImgTypeEnum imgType;
    public SearchCseSiterestrictListRequest withImgType(SearchCseSiterestrictListImgTypeEnum imgType) {
        this.imgType = imgType;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public SearchCseSiterestrictListRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Specifies that all search results should contain a link to a particular URL.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=linkSite")
    public String linkSite;
    public SearchCseSiterestrictListRequest withLinkSite(String linkSite) {
        this.linkSite = linkSite;
        return this;
    }
    
    /**
     * Specifies the starting value for a search range. Use `lowRange` and `highRange` to append an inclusive search range of `lowRange...highRange` to the query.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lowRange")
    public String lowRange;
    public SearchCseSiterestrictListRequest withLowRange(String lowRange) {
        this.lowRange = lowRange;
        return this;
    }
    
    /**
     * Restricts the search to documents written in a particular language (e.g., `lr=lang_ja`). Acceptable values are: * `"lang_ar"`: Arabic * `"lang_bg"`: Bulgarian * `"lang_ca"`: Catalan * `"lang_cs"`: Czech * `"lang_da"`: Danish * `"lang_de"`: German * `"lang_el"`: Greek * `"lang_en"`: English * `"lang_es"`: Spanish * `"lang_et"`: Estonian * `"lang_fi"`: Finnish * `"lang_fr"`: French * `"lang_hr"`: Croatian * `"lang_hu"`: Hungarian * `"lang_id"`: Indonesian * `"lang_is"`: Icelandic * `"lang_it"`: Italian * `"lang_iw"`: Hebrew * `"lang_ja"`: Japanese * `"lang_ko"`: Korean * `"lang_lt"`: Lithuanian * `"lang_lv"`: Latvian * `"lang_nl"`: Dutch * `"lang_no"`: Norwegian * `"lang_pl"`: Polish * `"lang_pt"`: Portuguese * `"lang_ro"`: Romanian * `"lang_ru"`: Russian * `"lang_sk"`: Slovak * `"lang_sl"`: Slovenian * `"lang_sr"`: Serbian * `"lang_sv"`: Swedish * `"lang_tr"`: Turkish * `"lang_zh-CN"`: Chinese (Simplified) * `"lang_zh-TW"`: Chinese (Traditional)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lr")
    public String lr;
    public SearchCseSiterestrictListRequest withLr(String lr) {
        this.lr = lr;
        return this;
    }
    
    /**
     * Number of search results to return. * Valid values are integers between 1 and 10, inclusive.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=num")
    public Long num;
    public SearchCseSiterestrictListRequest withNum(Long num) {
        this.num = num;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public SearchCseSiterestrictListRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=orTerms")
    public String orTerms;
    public SearchCseSiterestrictListRequest withOrTerms(String orTerms) {
        this.orTerms = orTerms;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public SearchCseSiterestrictListRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Query
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;
    public SearchCseSiterestrictListRequest withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public SearchCseSiterestrictListRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Specifies that all search results should be pages that are related to the specified URL.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=relatedSite")
    public String relatedSite;
    public SearchCseSiterestrictListRequest withRelatedSite(String relatedSite) {
        this.relatedSite = relatedSite;
        return this;
    }
    
    /**
     * Filters based on licensing. Supported values include: `cc_publicdomain`, `cc_attribute`, `cc_sharealike`, `cc_noncommercial`, `cc_nonderived` and combinations of these. See [typical combinations](https://wiki.creativecommons.org/wiki/CC_Search_integration).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=rights")
    public String rights;
    public SearchCseSiterestrictListRequest withRights(String rights) {
        this.rights = rights;
        return this;
    }
    
    /**
     * Search safety level. Acceptable values are: * `"active"`: Enables SafeSearch filtering. * `"off"`: Disables SafeSearch filtering. (default)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=safe")
    public SearchCseSiterestrictListSafeEnum safe;
    public SearchCseSiterestrictListRequest withSafe(SearchCseSiterestrictListSafeEnum safe) {
        this.safe = safe;
        return this;
    }
    
    /**
     * Specifies the search type: `image`. If unspecified, results are limited to webpages. Acceptable values are: * `"image"`: custom image search.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=searchType")
    public SearchCseSiterestrictListSearchTypeEnum searchType;
    public SearchCseSiterestrictListRequest withSearchType(SearchCseSiterestrictListSearchTypeEnum searchType) {
        this.searchType = searchType;
        return this;
    }
    
    /**
     * Specifies a given site which should always be included or excluded from results (see `siteSearchFilter` parameter, below).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=siteSearch")
    public String siteSearch;
    public SearchCseSiterestrictListRequest withSiteSearch(String siteSearch) {
        this.siteSearch = siteSearch;
        return this;
    }
    
    /**
     * Controls whether to include or exclude results from the site named in the `siteSearch` parameter. Acceptable values are: * `"e"`: exclude * `"i"`: include
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=siteSearchFilter")
    public SearchCseSiterestrictListSiteSearchFilterEnum siteSearchFilter;
    public SearchCseSiterestrictListRequest withSiteSearchFilter(SearchCseSiterestrictListSiteSearchFilterEnum siteSearchFilter) {
        this.siteSearchFilter = siteSearchFilter;
        return this;
    }
    
    /**
     * The sort expression to apply to the results. The sort parameter specifies that the results be sorted according to the specified expression i.e. sort by date. [Example: sort=date](https://developers.google.com/custom-search/docs/structured_search#sort-by-attribute).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public SearchCseSiterestrictListRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The index of the first result to return. The default number of results per page is 10, so `&amp;start=11` would start at the top of the second page of results. **Note**: The JSON API will never return more than 100 results, even if more than 100 documents match the query, so setting the sum of `start + num` to a number greater than 100 will produce an error. Also note that the maximum value for `num` is 10.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start")
    public Long start;
    public SearchCseSiterestrictListRequest withStart(Long start) {
        this.start = start;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public SearchCseSiterestrictListRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;
    public SearchCseSiterestrictListRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
}
