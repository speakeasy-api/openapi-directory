// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTRecordHandlerProgressActionEnum
type POSTRecordHandlerProgressActionEnum string

const (
	POSTRecordHandlerProgressActionEnumRecordHandlerProgress POSTRecordHandlerProgressActionEnum = "RecordHandlerProgress"
)

func (e *POSTRecordHandlerProgressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RecordHandlerProgress":
		*e = POSTRecordHandlerProgressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRecordHandlerProgressActionEnum: %s", s)
	}
}

// POSTRecordHandlerProgressVersionEnum
type POSTRecordHandlerProgressVersionEnum string

const (
	POSTRecordHandlerProgressVersionEnumTwoThousandAndTen0515 POSTRecordHandlerProgressVersionEnum = "2010-05-15"
)

func (e *POSTRecordHandlerProgressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = POSTRecordHandlerProgressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRecordHandlerProgressVersionEnum: %s", s)
	}
}

type POSTRecordHandlerProgressQueryParams struct {
	Action  POSTRecordHandlerProgressActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTRecordHandlerProgressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTRecordHandlerProgressHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTRecordHandlerProgressRequest struct {
	QueryParams POSTRecordHandlerProgressQueryParams
	Headers     POSTRecordHandlerProgressHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTRecordHandlerProgressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
