/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateFunctionRequestBody {
    /**
     * The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is &lt;code&gt;x86_64&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Architectures")
    public org.openapis.openapi.models.shared.ArchitectureEnum[] architectures;

    public CreateFunctionRequestBody withArchitectures(org.openapis.openapi.models.shared.ArchitectureEnum[] architectures) {
        this.architectures = architectures;
        return this;
    }
    
    /**
     * The code for the Lambda function. You can either specify an object in Amazon S3, upload a .zip file archive deployment package directly, or specify the URI of a container image.
     */
    @JsonProperty("Code")
    public CreateFunctionRequestBodyCode code;

    public CreateFunctionRequestBody withCode(CreateFunctionRequestBodyCode code) {
        this.code = code;
        return this;
    }
    
    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeSigningConfigArn")
    public String codeSigningConfigArn;

    public CreateFunctionRequestBody withCodeSigningConfigArn(String codeSigningConfigArn) {
        this.codeSigningConfigArn = codeSigningConfigArn;
        return this;
    }
    
    /**
     * The &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq"&gt;dead-letter queue&lt;/a&gt; for failed asynchronous invocations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeadLetterConfig")
    public CreateFunctionRequestBodyDeadLetterConfig deadLetterConfig;

    public CreateFunctionRequestBody withDeadLetterConfig(CreateFunctionRequestBodyDeadLetterConfig deadLetterConfig) {
        this.deadLetterConfig = deadLetterConfig;
        return this;
    }
    
    /**
     * A description of the function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public CreateFunctionRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public CreateFunctionRequestBodyEnvironment environment;

    public CreateFunctionRequestBody withEnvironment(CreateFunctionRequestBodyEnvironment environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * The size of the function's &lt;code&gt;/tmp&lt;/code&gt; directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EphemeralStorage")
    public CreateFunctionRequestBodyEphemeralStorage ephemeralStorage;

    public CreateFunctionRequestBody withEphemeralStorage(CreateFunctionRequestBodyEphemeralStorage ephemeralStorage) {
        this.ephemeralStorage = ephemeralStorage;
        return this;
    }
    
    /**
     * Connection settings for an Amazon EFS file system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileSystemConfigs")
    public org.openapis.openapi.models.shared.FileSystemConfig[] fileSystemConfigs;

    public CreateFunctionRequestBody withFileSystemConfigs(org.openapis.openapi.models.shared.FileSystemConfig[] fileSystemConfigs) {
        this.fileSystemConfigs = fileSystemConfigs;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the Lambda function.&lt;/p&gt; &lt;p class="title"&gt; &lt;b&gt;Name formats&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Function name&lt;/b&gt; \u2013 &lt;code&gt;my-function&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Function ARN&lt;/b&gt; \u2013 &lt;code&gt;arn:aws:lambda:us-west-2:123456789012:function:my-function&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Partial ARN&lt;/b&gt; \u2013 &lt;code&gt;123456789012:function:my-function&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.&lt;/p&gt;
     */
    @JsonProperty("FunctionName")
    public String functionName;

    public CreateFunctionRequestBody withFunctionName(String functionName) {
        this.functionName = functionName;
        return this;
    }
    
    /**
     * The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html"&gt;Lambda programming model&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Handler")
    public String handler;

    public CreateFunctionRequestBody withHandler(String handler) {
        this.handler = handler;
        return this;
    }
    
    /**
     * Configuration values that override the container image Dockerfile settings. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms"&gt;Container image settings&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImageConfig")
    public CreateFunctionRequestBodyImageConfig imageConfig;

    public CreateFunctionRequestBody withImageConfig(CreateFunctionRequestBodyImageConfig imageConfig) {
        this.imageConfig = imageConfig;
        return this;
    }
    
    /**
     * The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption"&gt;environment variables&lt;/a&gt;. When &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html"&gt;Lambda SnapStart&lt;/a&gt; is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KMSKeyArn")
    public String kmsKeyArn;

    public CreateFunctionRequestBody withKMSKeyArn(String kmsKeyArn) {
        this.kmsKeyArn = kmsKeyArn;
        return this;
    }
    
    /**
     * A list of &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"&gt;function layers&lt;/a&gt; to add to the function's execution environment. Specify each layer by its ARN, including the version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Layers")
    public String[] layers;

    public CreateFunctionRequestBody withLayers(String[] layers) {
        this.layers = layers;
        return this;
    }
    
    /**
     * The amount of &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console"&gt;memory available to the function&lt;/a&gt; at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MemorySize")
    public Long memorySize;

    public CreateFunctionRequestBody withMemorySize(Long memorySize) {
        this.memorySize = memorySize;
        return this;
    }
    
    /**
     * The type of deployment package. Set to &lt;code&gt;Image&lt;/code&gt; for container image and set to &lt;code&gt;Zip&lt;/code&gt; for .zip file archive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PackageType")
    public CreateFunctionRequestBodyPackageTypeEnum packageType;

    public CreateFunctionRequestBody withPackageType(CreateFunctionRequestBodyPackageTypeEnum packageType) {
        this.packageType = packageType;
        return this;
    }
    
    /**
     * Set to true to publish the first version of the function during creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Publish")
    public Boolean publish;

    public CreateFunctionRequestBody withPublish(Boolean publish) {
        this.publish = publish;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     */
    @JsonProperty("Role")
    public String role;

    public CreateFunctionRequestBody withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * &lt;p&gt;The identifier of the function's &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html"&gt;runtime&lt;/a&gt;. Runtime is required if the deployment package is a .zip file archive.&lt;/p&gt; &lt;p&gt;The following list includes deprecated runtimes. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy"&gt;Runtime deprecation policy&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Runtime")
    public CreateFunctionRequestBodyRuntimeEnum runtime;

    public CreateFunctionRequestBody withRuntime(CreateFunctionRequestBodyRuntimeEnum runtime) {
        this.runtime = runtime;
        return this;
    }
    
    /**
     * &lt;p&gt;The function's Lambda SnapStart setting. Set &lt;code&gt;ApplyOn&lt;/code&gt; to &lt;code&gt;PublishedVersions&lt;/code&gt; to create a snapshot of the initialized execution environment when you publish a function version.&lt;/p&gt; &lt;p&gt;SnapStart is supported with the &lt;code&gt;java11&lt;/code&gt; runtime. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html"&gt;Improving startup performance with Lambda SnapStart&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnapStart")
    public CreateFunctionRequestBodySnapStart snapStart;

    public CreateFunctionRequestBody withSnapStart(CreateFunctionRequestBodySnapStart snapStart) {
        this.snapStart = snapStart;
        return this;
    }
    
    /**
     * A list of &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html"&gt;tags&lt;/a&gt; to apply to the function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;

    public CreateFunctionRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html"&gt;Lambda execution environment&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Timeout")
    public Long timeout;

    public CreateFunctionRequestBody withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * The function's &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"&gt;X-Ray&lt;/a&gt; tracing configuration. To sample and record incoming requests, set &lt;code&gt;Mode&lt;/code&gt; to &lt;code&gt;Active&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TracingConfig")
    public CreateFunctionRequestBodyTracingConfig tracingConfig;

    public CreateFunctionRequestBody withTracingConfig(CreateFunctionRequestBodyTracingConfig tracingConfig) {
        this.tracingConfig = tracingConfig;
        return this;
    }
    
    /**
     * The VPC security groups and subnets that are attached to a Lambda function. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html"&gt;Configuring a Lambda function to access resources in a VPC&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfig")
    public CreateFunctionRequestBodyVpcConfig vpcConfig;

    public CreateFunctionRequestBody withVpcConfig(CreateFunctionRequestBodyVpcConfig vpcConfig) {
        this.vpcConfig = vpcConfig;
        return this;
    }
    
    public CreateFunctionRequestBody(@JsonProperty("Code") CreateFunctionRequestBodyCode code, @JsonProperty("FunctionName") String functionName, @JsonProperty("Role") String role) {
        this.code = code;
        this.functionName = functionName;
        this.role = role;
  }
}
