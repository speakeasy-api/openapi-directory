"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import certificateaddress as shared_certificateaddress
from ..shared import jurisdictionofincorporation as shared_jurisdictionofincorporation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CertificateOrganization:
    
    address: shared_certificateaddress.CertificateAddress = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of organization that owns common name"""  
    phone: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone') }})
    r"""Phone number for organization"""  
    assumed_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assumedName'), 'exclude': lambda f: f is None }})
    r"""Only for EVSSL. The DBA(does business as) name for the organization."""  
    jurisdiction_of_incorporation: Optional[shared_jurisdictionofincorporation.JurisdictionOfIncorporation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jurisdictionOfIncorporation'), 'exclude': lambda f: f is None }})  
    registration_agent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationAgent'), 'exclude': lambda f: f is None }})
    r"""Only for EVSSL."""  
    registration_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationNumber'), 'exclude': lambda f: f is None }})
    r"""Only for EVSSL."""  
    