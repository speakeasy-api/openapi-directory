// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VideoRoomSummaryEnumEdgeLocationEnum string

const (
	VideoRoomSummaryEnumEdgeLocationEnumAshburn   VideoRoomSummaryEnumEdgeLocationEnum = "ashburn"
	VideoRoomSummaryEnumEdgeLocationEnumDublin    VideoRoomSummaryEnumEdgeLocationEnum = "dublin"
	VideoRoomSummaryEnumEdgeLocationEnumFrankfurt VideoRoomSummaryEnumEdgeLocationEnum = "frankfurt"
	VideoRoomSummaryEnumEdgeLocationEnumSingapore VideoRoomSummaryEnumEdgeLocationEnum = "singapore"
	VideoRoomSummaryEnumEdgeLocationEnumSydney    VideoRoomSummaryEnumEdgeLocationEnum = "sydney"
	VideoRoomSummaryEnumEdgeLocationEnumSaoPaulo  VideoRoomSummaryEnumEdgeLocationEnum = "sao_paulo"
	VideoRoomSummaryEnumEdgeLocationEnumRoaming   VideoRoomSummaryEnumEdgeLocationEnum = "roaming"
	VideoRoomSummaryEnumEdgeLocationEnumUmatilla  VideoRoomSummaryEnumEdgeLocationEnum = "umatilla"
	VideoRoomSummaryEnumEdgeLocationEnumTokyo     VideoRoomSummaryEnumEdgeLocationEnum = "tokyo"
)

func (e VideoRoomSummaryEnumEdgeLocationEnum) ToPointer() *VideoRoomSummaryEnumEdgeLocationEnum {
	return &e
}

func (e *VideoRoomSummaryEnumEdgeLocationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ashburn":
		fallthrough
	case "dublin":
		fallthrough
	case "frankfurt":
		fallthrough
	case "singapore":
		fallthrough
	case "sydney":
		fallthrough
	case "sao_paulo":
		fallthrough
	case "roaming":
		fallthrough
	case "umatilla":
		fallthrough
	case "tokyo":
		*e = VideoRoomSummaryEnumEdgeLocationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoRoomSummaryEnumEdgeLocationEnum: %v", v)
	}
}
