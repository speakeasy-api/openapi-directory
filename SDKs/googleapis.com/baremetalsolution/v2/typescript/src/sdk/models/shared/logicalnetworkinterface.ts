/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Type of network.
 */
export enum LogicalNetworkInterfaceNetworkTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  Client = "CLIENT",
  Private = "PRIVATE",
}

/**
 * Each logical network interface is effectively a network and IP pair.
 */
export class LogicalNetworkInterface extends SpeakeasyBase {
  /**
   * Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultGateway" })
  defaultGateway?: boolean;

  /**
   * An identifier for the `Network`, generated by the backend.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * IP address in the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  /**
   * Name of the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Type of network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkType" })
  networkType?: LogicalNetworkInterfaceNetworkTypeEnum;
}
