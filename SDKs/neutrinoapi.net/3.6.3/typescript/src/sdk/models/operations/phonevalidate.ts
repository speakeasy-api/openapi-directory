/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PhoneValidateRequest extends SpeakeasyBase {
  /**
   * ISO 2-letter country code, assume numbers are based in this country. If not set numbers are assumed to be in international format (with or without the leading + sign)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country-code",
  })
  countryCode?: string;

  /**
   * Pass in a users IP address and we will assume numbers are based in the country of the IP address
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ip" })
  ip?: string;

  /**
   * A phone number. This can be in international format (E.164) or local format. If passing local format you must also set either the 'country-code' OR 'ip' options as well
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=number",
  })
  number: string;
}

export class PhoneValidateResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  phoneValidateResponse?: shared.PhoneValidateResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
