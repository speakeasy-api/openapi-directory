"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import client as shared_client
from ..shared import problemdetail as shared_problemdetail
from typing import Optional


@dataclasses.dataclass
class UpdateClientSecurity:
    
    client_registration_token: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    oauth_code: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    oauth_implicit: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class UpdateClientRequest:
    
    client: shared_client.Client = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Client Object"""  
    client_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'client_id', 'style': 'simple', 'explode': False }})
    r"""Client identifier"""  
    

@dataclasses.dataclass
class UpdateClientResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    client: Optional[shared_client.Client] = dataclasses.field(default=None)
    r"""Client updated"""  
    problem_detail: Optional[shared_problemdetail.ProblemDetail] = dataclasses.field(default=None)
    r"""Problem Detail error response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    