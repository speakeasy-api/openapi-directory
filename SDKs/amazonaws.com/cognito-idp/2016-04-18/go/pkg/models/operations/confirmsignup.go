// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConfirmSignUpXAmzTargetEnum
type ConfirmSignUpXAmzTargetEnum string

const (
	ConfirmSignUpXAmzTargetEnumAwsCognitoIdentityProviderServiceConfirmSignUp ConfirmSignUpXAmzTargetEnum = "AWSCognitoIdentityProviderService.ConfirmSignUp"
)

func (e *ConfirmSignUpXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.ConfirmSignUp":
		*e = ConfirmSignUpXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfirmSignUpXAmzTargetEnum: %s", s)
	}
}

type ConfirmSignUpHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ConfirmSignUpXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ConfirmSignUpRequest struct {
	Headers ConfirmSignUpHeaders
	Request shared.ConfirmSignUpRequest `request:"mediaType=application/json"`
}

type ConfirmSignUpResponse struct {
	// AliasExistsException
	AliasExistsException interface{}
	// CodeMismatchException
	CodeMismatchException interface{}
	// Success
	ConfirmSignUpResponse map[string]interface{}
	ContentType           string
	// ExpiredCodeException
	ExpiredCodeException interface{}
	// ForbiddenException
	ForbiddenException interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidLambdaResponseException
	InvalidLambdaResponseException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyFailedAttemptsException
	TooManyFailedAttemptsException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnexpectedLambdaException
	UnexpectedLambdaException interface{}
	// UserLambdaValidationException
	UserLambdaValidationException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
