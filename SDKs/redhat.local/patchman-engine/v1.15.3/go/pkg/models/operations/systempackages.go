// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SystemPackagesSecurity struct {
	RhIdentity shared.SchemeRhIdentity `security:"scheme,type=apiKey,subtype=header"`
}

type SystemPackagesPathParams struct {
	// Inventory ID
	InventoryID string `pathParam:"style=simple,explode=false,name=inventory_id"`
}

type SystemPackagesQueryParams struct {
	// Filter
	FilterDescription *string `queryParam:"style=form,explode=true,name=filter[description]"`
	// Filter
	FilterEvra *string `queryParam:"style=form,explode=true,name=filter[evra]"`
	// Filter
	FilterName *string `queryParam:"style=form,explode=true,name=filter[name]"`
	// Filter
	FilterSummary *string `queryParam:"style=form,explode=true,name=filter[summary]"`
	// Filter
	FilterUpdatable *bool `queryParam:"style=form,explode=true,name=filter[updatable]"`
	// Limit for paging, set -1 to return all
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Offset for paging
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Find matching text
	Search *string `queryParam:"style=form,explode=true,name=search"`
}

type SystemPackagesRequest struct {
	PathParams  SystemPackagesPathParams
	QueryParams SystemPackagesQueryParams
	Security    SystemPackagesSecurity
}

type SystemPackagesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ControllersSystemPackageResponse *shared.ControllersSystemPackageResponse
}
