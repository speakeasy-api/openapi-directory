// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ApproveACheckTransferPathParams struct {
	CheckTransferID string `pathParam:"style=simple,explode=false,name=check_transfer_id"`
}

type ApproveACheckTransferRequest struct {
	PathParams ApproveACheckTransferPathParams
}

type ApproveACheckTransferDefaultApplicationJSON13StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ApproveACheckTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ApproveACheckTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ApproveACheckTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON13TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON13TypeEnumRateLimitedError ApproveACheckTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ApproveACheckTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON13 struct {
	Detail     string                                                  `json:"detail"`
	RetryAfter *int64                                                  `json:"retry_after,omitempty"`
	Status     ApproveACheckTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                  `json:"title"`
	Type       ApproveACheckTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON12StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ApproveACheckTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ApproveACheckTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveACheckTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON12TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ApproveACheckTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ApproveACheckTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON12 struct {
	Detail string                                                  `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON11StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ApproveACheckTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ApproveACheckTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ApproveACheckTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON11TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ApproveACheckTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ApproveACheckTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON11 struct {
	Detail string                                                  `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON10StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON10StatusEnumFourHundred ApproveACheckTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ApproveACheckTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ApproveACheckTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON10TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ApproveACheckTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ApproveACheckTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON10 struct {
	Detail string                                                  `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON9StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON9StatusEnumFourHundred ApproveACheckTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ApproveACheckTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ApproveACheckTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON9TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ApproveACheckTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ApproveACheckTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                               `json:"errors,omitempty"`
	Status ApproveACheckTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON8StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ApproveACheckTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ApproveACheckTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ApproveACheckTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON8TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ApproveACheckTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ApproveACheckTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON8 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON7StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ApproveACheckTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ApproveACheckTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ApproveACheckTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON7TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ApproveACheckTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ApproveACheckTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON7 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON6StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON6StatusEnumFiveHundred ApproveACheckTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ApproveACheckTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ApproveACheckTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON6TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON6TypeEnumInternalServerError ApproveACheckTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ApproveACheckTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON6 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON5StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ApproveACheckTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ApproveACheckTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveACheckTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON5TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ApproveACheckTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ApproveACheckTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON5 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON4StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ApproveACheckTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ApproveACheckTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ApproveACheckTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON4TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ApproveACheckTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ApproveACheckTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON4 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON3StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ApproveACheckTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ApproveACheckTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ApproveACheckTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON3TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ApproveACheckTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ApproveACheckTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON3 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON2StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ApproveACheckTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ApproveACheckTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveACheckTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON2TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ApproveACheckTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ApproveACheckTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON2 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ApproveACheckTransferDefaultApplicationJSON1StatusEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ApproveACheckTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ApproveACheckTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ApproveACheckTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON1TypeEnum string

const (
	ApproveACheckTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ApproveACheckTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ApproveACheckTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ApproveACheckTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveACheckTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ApproveACheckTransferDefaultApplicationJSON1 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveACheckTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveACheckTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ApproveACheckTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Transfer
	CheckTransfer *shared.CheckTransfer
	// Error
	Error interface{}
}
