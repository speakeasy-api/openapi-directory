<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GETPaymentMethodType
{
    /**
     * Container for the name and billing address for the card holder.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPaymentMethodTypeCardHolderInfo $cardHolderInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardHolderInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GETPaymentMethodTypeCardHolderInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPaymentMethodTypeCardHolderInfo $cardHolderInfo = null;
    
    /**
     * Credit or debit card number, 16 characters or less, masked for security purposes.
     * 
     * 
     * 
     * @var ?string $cardNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardNumber = null;
    
    /**
     * The type of the credit card.
     * 
     *     
     * Possible values  include `Visa`, `MasterCard`, `AmericanExpress`, `Discover`, `JCB`, and `Diners`. For more information about credit card types supported by different payment gateways, see [Supported Payment Gateways](https://knowledgecenter.zuora.com/CB_Billing/M_Payment_Gateways/Supported_Payment_Gateways).
     * 
     * 
     * @var ?string $cardType
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardType = null;
    
    /**
     * Contains true if this is the default payment method for this customer, otherwise false.
     * 
     * 
     * 
     * @var ?bool $defaultPaymentMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultPaymentMethod')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $defaultPaymentMethod = null;
    
    /**
     * One or two digit(s) expiration month (1-12).
     * 
     * 
     * 
     * @var ?int $expirationMonth
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationMonth')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expirationMonth = null;
    
    /**
     * Four-digit expiration year.
     * 
     * 
     * 
     * @var ?int $expirationYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationYear')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expirationYear = null;
    
    /**
     * Unique ID generated by Zuora when this payment method was created.
     * 
     * 
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	public function __construct()
	{
		$this->cardHolderInfo = null;
		$this->cardNumber = null;
		$this->cardType = null;
		$this->defaultPaymentMethod = null;
		$this->expirationMonth = null;
		$this->expirationYear = null;
		$this->id = null;
	}
}
