"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import activityfailedeventdetails as shared_activityfailedeventdetails
from ..shared import activityscheduledeventdetails as shared_activityscheduledeventdetails
from ..shared import activityschedulefailedeventdetails as shared_activityschedulefailedeventdetails
from ..shared import activitystartedeventdetails as shared_activitystartedeventdetails
from ..shared import activitysucceededeventdetails as shared_activitysucceededeventdetails
from ..shared import activitytimedouteventdetails as shared_activitytimedouteventdetails
from ..shared import executionabortedeventdetails as shared_executionabortedeventdetails
from ..shared import executionfailedeventdetails as shared_executionfailedeventdetails
from ..shared import executionstartedeventdetails as shared_executionstartedeventdetails
from ..shared import executionsucceededeventdetails as shared_executionsucceededeventdetails
from ..shared import executiontimedouteventdetails as shared_executiontimedouteventdetails
from ..shared import historyeventtype_enum as shared_historyeventtype_enum
from ..shared import lambdafunctionfailedeventdetails as shared_lambdafunctionfailedeventdetails
from ..shared import lambdafunctionscheduledeventdetails as shared_lambdafunctionscheduledeventdetails
from ..shared import lambdafunctionschedulefailedeventdetails as shared_lambdafunctionschedulefailedeventdetails
from ..shared import lambdafunctionstartfailedeventdetails as shared_lambdafunctionstartfailedeventdetails
from ..shared import lambdafunctionsucceededeventdetails as shared_lambdafunctionsucceededeventdetails
from ..shared import lambdafunctiontimedouteventdetails as shared_lambdafunctiontimedouteventdetails
from ..shared import mapiterationeventdetails as shared_mapiterationeventdetails
from ..shared import maprunfailedeventdetails as shared_maprunfailedeventdetails
from ..shared import maprunstartedeventdetails as shared_maprunstartedeventdetails
from ..shared import mapstatestartedeventdetails as shared_mapstatestartedeventdetails
from ..shared import stateenteredeventdetails as shared_stateenteredeventdetails
from ..shared import stateexitedeventdetails as shared_stateexitedeventdetails
from ..shared import taskfailedeventdetails as shared_taskfailedeventdetails
from ..shared import taskscheduledeventdetails as shared_taskscheduledeventdetails
from ..shared import taskstartedeventdetails as shared_taskstartedeventdetails
from ..shared import taskstartfailedeventdetails as shared_taskstartfailedeventdetails
from ..shared import tasksubmitfailedeventdetails as shared_tasksubmitfailedeventdetails
from ..shared import tasksubmittedeventdetails as shared_tasksubmittedeventdetails
from ..shared import tasksucceededeventdetails as shared_tasksucceededeventdetails
from ..shared import tasktimedouteventdetails as shared_tasktimedouteventdetails
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HistoryEvent:
    r"""Contains details about the events of an execution."""
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    type: shared_historyeventtype_enum.HistoryEventTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    activity_failed_event_details: Optional[shared_activityfailedeventdetails.ActivityFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityFailedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an activity that failed during an execution."""  
    activity_scheduled_event_details: Optional[shared_activityscheduledeventdetails.ActivityScheduledEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityScheduledEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an activity scheduled during an execution."""  
    activity_schedule_failed_event_details: Optional[shared_activityschedulefailedeventdetails.ActivityScheduleFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityScheduleFailedEventDetails'), 'exclude': lambda f: f is None }})  
    activity_started_event_details: Optional[shared_activitystartedeventdetails.ActivityStartedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityStartedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about the start of an activity during an execution."""  
    activity_succeeded_event_details: Optional[shared_activitysucceededeventdetails.ActivitySucceededEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activitySucceededEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an activity that successfully terminated during an execution."""  
    activity_timed_out_event_details: Optional[shared_activitytimedouteventdetails.ActivityTimedOutEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityTimedOutEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an activity timeout that occurred during an execution."""  
    execution_aborted_event_details: Optional[shared_executionabortedeventdetails.ExecutionAbortedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionAbortedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an abort of an execution."""  
    execution_failed_event_details: Optional[shared_executionfailedeventdetails.ExecutionFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionFailedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an execution failure event."""  
    execution_started_event_details: Optional[shared_executionstartedeventdetails.ExecutionStartedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionStartedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about the start of the execution."""  
    execution_succeeded_event_details: Optional[shared_executionsucceededeventdetails.ExecutionSucceededEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionSucceededEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about the successful termination of the execution."""  
    execution_timed_out_event_details: Optional[shared_executiontimedouteventdetails.ExecutionTimedOutEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionTimedOutEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about the execution timeout that occurred during the execution."""  
    lambda_function_failed_event_details: Optional[shared_lambdafunctionfailedeventdetails.LambdaFunctionFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaFunctionFailedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about a Lambda function that failed during an execution."""  
    lambda_function_scheduled_event_details: Optional[shared_lambdafunctionscheduledeventdetails.LambdaFunctionScheduledEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaFunctionScheduledEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about a Lambda function scheduled during an execution."""  
    lambda_function_schedule_failed_event_details: Optional[shared_lambdafunctionschedulefailedeventdetails.LambdaFunctionScheduleFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaFunctionScheduleFailedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about a failed Lambda function schedule event that occurred during an execution."""  
    lambda_function_start_failed_event_details: Optional[shared_lambdafunctionstartfailedeventdetails.LambdaFunctionStartFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaFunctionStartFailedEventDetails'), 'exclude': lambda f: f is None }})  
    lambda_function_succeeded_event_details: Optional[shared_lambdafunctionsucceededeventdetails.LambdaFunctionSucceededEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaFunctionSucceededEventDetails'), 'exclude': lambda f: f is None }})  
    lambda_function_timed_out_event_details: Optional[shared_lambdafunctiontimedouteventdetails.LambdaFunctionTimedOutEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaFunctionTimedOutEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about a Lambda function timeout that occurred during an execution."""  
    map_iteration_aborted_event_details: Optional[shared_mapiterationeventdetails.MapIterationEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapIterationAbortedEventDetails'), 'exclude': lambda f: f is None }})  
    map_iteration_failed_event_details: Optional[shared_mapiterationeventdetails.MapIterationEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapIterationFailedEventDetails'), 'exclude': lambda f: f is None }})  
    map_iteration_started_event_details: Optional[shared_mapiterationeventdetails.MapIterationEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapIterationStartedEventDetails'), 'exclude': lambda f: f is None }})  
    map_iteration_succeeded_event_details: Optional[shared_mapiterationeventdetails.MapIterationEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapIterationSucceededEventDetails'), 'exclude': lambda f: f is None }})  
    map_run_failed_event_details: Optional[shared_maprunfailedeventdetails.MapRunFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapRunFailedEventDetails'), 'exclude': lambda f: f is None }})  
    map_run_started_event_details: Optional[shared_maprunstartedeventdetails.MapRunStartedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapRunStartedEventDetails'), 'exclude': lambda f: f is None }})  
    map_state_started_event_details: Optional[shared_mapstatestartedeventdetails.MapStateStartedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapStateStartedEventDetails'), 'exclude': lambda f: f is None }})  
    previous_event_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previousEventId'), 'exclude': lambda f: f is None }})  
    state_entered_event_details: Optional[shared_stateenteredeventdetails.StateEnteredEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateEnteredEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about a state entered during an execution."""  
    state_exited_event_details: Optional[shared_stateexitedeventdetails.StateExitedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateExitedEventDetails'), 'exclude': lambda f: f is None }})
    r"""Contains details about an exit from a state during an execution."""  
    task_failed_event_details: Optional[shared_taskfailedeventdetails.TaskFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskFailedEventDetails'), 'exclude': lambda f: f is None }})  
    task_scheduled_event_details: Optional[shared_taskscheduledeventdetails.TaskScheduledEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskScheduledEventDetails'), 'exclude': lambda f: f is None }})  
    task_started_event_details: Optional[shared_taskstartedeventdetails.TaskStartedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskStartedEventDetails'), 'exclude': lambda f: f is None }})  
    task_start_failed_event_details: Optional[shared_taskstartfailedeventdetails.TaskStartFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskStartFailedEventDetails'), 'exclude': lambda f: f is None }})  
    task_submit_failed_event_details: Optional[shared_tasksubmitfailedeventdetails.TaskSubmitFailedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskSubmitFailedEventDetails'), 'exclude': lambda f: f is None }})  
    task_submitted_event_details: Optional[shared_tasksubmittedeventdetails.TaskSubmittedEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskSubmittedEventDetails'), 'exclude': lambda f: f is None }})  
    task_succeeded_event_details: Optional[shared_tasksucceededeventdetails.TaskSucceededEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskSucceededEventDetails'), 'exclude': lambda f: f is None }})  
    task_timed_out_event_details: Optional[shared_tasktimedouteventdetails.TaskTimedOutEventDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskTimedOutEventDetails'), 'exclude': lambda f: f is None }})  
    