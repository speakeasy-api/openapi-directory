/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationTypeEnum } from "./authenticationtypeenum";
import { CognitoUserPoolConfig } from "./cognitouserpoolconfig";
import { LambdaAuthorizerConfig } from "./lambdaauthorizerconfig";
import { OpenIDConnectConfig } from "./openidconnectconfig";
import { Expose, Type } from "class-transformer";

/**
 * Describes an additional authentication provider.
 */
export class AdditionalAuthenticationProvider extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authenticationType" })
  authenticationType?: AuthenticationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lambdaAuthorizerConfig" })
  @Type(() => LambdaAuthorizerConfig)
  lambdaAuthorizerConfig?: LambdaAuthorizerConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "openIDConnectConfig" })
  @Type(() => OpenIDConnectConfig)
  openIDConnectConfig?: OpenIDConnectConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "userPoolConfig" })
  @Type(() => CognitoUserPoolConfig)
  userPoolConfig?: CognitoUserPoolConfig;
}
