/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsIdTransactionRequestBody extends SpeakeasyBase {
  /**
   * if false, transaction isn't considered in analyzisis endpoints (like /balances)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=active" })
  active?: boolean;

  /**
   * change application date of the transaction
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=application_date;dateTimeFormat=YYYY-MM-DD",
  })
  applicationDate?: Date;

  /**
   * change comment
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=comment" })
  comment?: string;

  /**
   * ID of the associated category
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=id_category" })
  idCategory?: number;

  /**
   * user rewording of the transaction
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=wording" })
  wording?: string;
}

export class PutUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsIdTransactionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PutUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsIdTransactionRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_account",
  })
  idAccount: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connection",
  })
  idConnection: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_transaction",
  })
  idTransaction: number;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;
}

export class PutUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsIdTransactionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful PUT on Transaction resource
   */
  @SpeakeasyMetadata()
  transaction?: shared.Transaction;
}
