"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1SearchCatalogResultIntegratedSystemEnum(str, Enum):
    r"""Output only. The source system that Data Catalog automatically integrates with, such as BigQuery, Cloud Pub/Sub, or Dataproc Metastore."""
    INTEGRATED_SYSTEM_UNSPECIFIED = 'INTEGRATED_SYSTEM_UNSPECIFIED'
    BIGQUERY = 'BIGQUERY'
    CLOUD_PUBSUB = 'CLOUD_PUBSUB'
    DATAPROC_METASTORE = 'DATAPROC_METASTORE'
    DATAPLEX = 'DATAPLEX'
    CLOUD_SPANNER = 'CLOUD_SPANNER'
    CLOUD_BIGTABLE = 'CLOUD_BIGTABLE'
    CLOUD_SQL = 'CLOUD_SQL'
    LOOKER = 'LOOKER'

class GoogleCloudDatacatalogV1SearchCatalogResultSearchResultTypeEnum(str, Enum):
    r"""Type of the search result. You can use this field to determine which get method to call to fetch the full resource."""
    SEARCH_RESULT_TYPE_UNSPECIFIED = 'SEARCH_RESULT_TYPE_UNSPECIFIED'
    ENTRY = 'ENTRY'
    TAG_TEMPLATE = 'TAG_TEMPLATE'
    ENTRY_GROUP = 'ENTRY_GROUP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1SearchCatalogResult:
    r"""Result in the response to a search request. Each result captures details of one entry that matches the search."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Entry description that can consist of several sentences or paragraphs that describe entry contents."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The display name of the result."""  
    fully_qualified_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullyQualifiedName'), 'exclude': lambda f: f is None }})
    r"""Fully qualified name (FQN) of the resource. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:PROJECT_ID.LOCATION_ID.INSTANCE_ID.DATABASE_ID.TABLE_ID`"""  
    integrated_system: Optional[GoogleCloudDatacatalogV1SearchCatalogResultIntegratedSystemEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integratedSystem'), 'exclude': lambda f: f is None }})
    r"""Output only. The source system that Data Catalog automatically integrates with, such as BigQuery, Cloud Pub/Sub, or Dataproc Metastore."""  
    linked_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedResource'), 'exclude': lambda f: f is None }})
    r"""The full name of the Google Cloud resource the entry belongs to. For more information, see [Full Resource Name] (/apis/design/resource_names#full_resource_name). Example: `//bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID`"""  
    modify_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modifyTime'), 'exclude': lambda f: f is None }})
    r"""The last modification timestamp of the entry in the source system."""  
    relative_resource_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relativeResourceName'), 'exclude': lambda f: f is None }})
    r"""The relative name of the resource in URL format. Examples: * `projects/{PROJECT_ID}/locations/{LOCATION_ID}/entryGroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}` * `projects/{PROJECT_ID}/tagTemplates/{TAG_TEMPLATE_ID}`"""  
    search_result_subtype: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchResultSubtype'), 'exclude': lambda f: f is None }})
    r"""Sub-type of the search result. A dot-delimited full type of the resource. The same type you specify in the `type` search predicate. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`."""  
    search_result_type: Optional[GoogleCloudDatacatalogV1SearchCatalogResultSearchResultTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchResultType'), 'exclude': lambda f: f is None }})
    r"""Type of the search result. You can use this field to determine which get method to call to fetch the full resource."""  
    user_specified_system: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userSpecifiedSystem'), 'exclude': lambda f: f is None }})
    r"""Custom source system that you can manually integrate Data Catalog with."""  
    