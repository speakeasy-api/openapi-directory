// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeDBInstancesActionEnum
type GETDescribeDBInstancesActionEnum string

const (
	GETDescribeDBInstancesActionEnumDescribeDbInstances GETDescribeDBInstancesActionEnum = "DescribeDBInstances"
)

func (e GETDescribeDBInstancesActionEnum) ToPointer() *GETDescribeDBInstancesActionEnum {
	return &e
}

func (e *GETDescribeDBInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeDBInstances":
		*e = GETDescribeDBInstancesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDBInstancesActionEnum: %v", v)
	}
}

// GETDescribeDBInstancesVersionEnum
type GETDescribeDBInstancesVersionEnum string

const (
	GETDescribeDBInstancesVersionEnumTwoThousandAndThirteen0110 GETDescribeDBInstancesVersionEnum = "2013-01-10"
)

func (e GETDescribeDBInstancesVersionEnum) ToPointer() *GETDescribeDBInstancesVersionEnum {
	return &e
}

func (e *GETDescribeDBInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-10":
		*e = GETDescribeDBInstancesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDBInstancesVersionEnum: %v", v)
	}
}

type GETDescribeDBInstancesRequest struct {
	Action               GETDescribeDBInstancesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBInstanceIdentifier *string                           `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	Marker               *string                           `queryParam:"style=form,explode=true,name=Marker"`
	MaxRecords           *int64                            `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version              GETDescribeDBInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm        *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeDBInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
