/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetBanksIdConnectorConnectionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connector",
  })
  idConnector: number;

  /**
   * methode of selection use between 'diversity' (default), 'cover' and 'type_select'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=method",
  })
  method?: string;

  /**
   * Ensure the connection will not have a sync happening for at
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minutes_without_sync",
  })
  minutesWithoutSync?: number;

  /**
   * the number of requested connections, if applicable by the method
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=n" })
  n?: number;

  /**
   * for 'type_select' method. Each connection requires at least N
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=occurences",
  })
  occurences?: number;

  /**
   * specify a source name that should have a null state
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=source",
  })
  source?: string;

  /**
   * for 'type_select' method. Specific account type id (weboob_type_id) to select
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: number;
}

/**
 * connections
 */
export class GetBanksIdConnectorConnections200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Connection })
  @Expose({ name: "connections" })
  @Type(() => shared.Connection)
  connections: shared.Connection[];

  /**
   * total number of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetBanksIdConnectorConnectionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * connections
   */
  @SpeakeasyMetadata()
  getBanksIdConnectorConnections200ApplicationJSONObject?: GetBanksIdConnectorConnections200ApplicationJSON;
}
