// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetPlatformArchEnum string

const (
	TargetPlatformArchEnumX8664     TargetPlatformArchEnum = "X86_64"
	TargetPlatformArchEnumX86       TargetPlatformArchEnum = "X86"
	TargetPlatformArchEnumArm64     TargetPlatformArchEnum = "ARM64"
	TargetPlatformArchEnumArmEabi   TargetPlatformArchEnum = "ARM_EABI"
	TargetPlatformArchEnumArmEabihf TargetPlatformArchEnum = "ARM_EABIHF"
)

func (e TargetPlatformArchEnum) ToPointer() *TargetPlatformArchEnum {
	return &e
}

func (e *TargetPlatformArchEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "X86_64":
		fallthrough
	case "X86":
		fallthrough
	case "ARM64":
		fallthrough
	case "ARM_EABI":
		fallthrough
	case "ARM_EABIHF":
		*e = TargetPlatformArchEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetPlatformArchEnum: %v", v)
	}
}
