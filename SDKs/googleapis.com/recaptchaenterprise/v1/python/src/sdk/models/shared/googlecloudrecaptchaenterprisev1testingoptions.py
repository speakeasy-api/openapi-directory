"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallengeEnum(str, Enum):
    r"""For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE."""
    TESTING_CHALLENGE_UNSPECIFIED = 'TESTING_CHALLENGE_UNSPECIFIED'
    NOCAPTCHA = 'NOCAPTCHA'
    UNSOLVABLE_CHALLENGE = 'UNSOLVABLE_CHALLENGE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1TestingOptions:
    r"""Options for user acceptance testing."""
    
    testing_challenge: Optional[GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallengeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testingChallenge'), 'exclude': lambda f: f is None }})
    r"""For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE."""  
    testing_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testingScore'), 'exclude': lambda f: f is None }})
    r"""All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive."""  
    