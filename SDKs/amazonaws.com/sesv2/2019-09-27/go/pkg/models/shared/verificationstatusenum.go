// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VerificationStatusEnum string

const (
	VerificationStatusEnumPending          VerificationStatusEnum = "PENDING"
	VerificationStatusEnumSuccess          VerificationStatusEnum = "SUCCESS"
	VerificationStatusEnumFailed           VerificationStatusEnum = "FAILED"
	VerificationStatusEnumTemporaryFailure VerificationStatusEnum = "TEMPORARY_FAILURE"
	VerificationStatusEnumNotStarted       VerificationStatusEnum = "NOT_STARTED"
)

func (e VerificationStatusEnum) ToPointer() *VerificationStatusEnum {
	return &e
}

func (e *VerificationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "TEMPORARY_FAILURE":
		fallthrough
	case "NOT_STARTED":
		*e = VerificationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationStatusEnum: %v", v)
	}
}
