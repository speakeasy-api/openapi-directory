/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SubmissionEntryFrom - Identifies the sender.
 * 
 * Instead of a structured object, you can supply a string value here. 
 * If you do this, the `type` of the sender is derived to be either INTERNATIONAL or ALPHANUMERIC.  If the value does not begin with a `+` and it contains at least one character that is not a digit, the type is detected as ALPHANUMERIC. Otherwise, the type is detected as INTERNATIONAL.
 * 
 */
public class SubmissionEntryFrom {
    /**
     * The address of the sender id.
     * 
     * The validation for this field depends on the value of the `type`.
     * INTERNATIONAL can start with `+`. It has a maximum length of 15 digits, and has to be longer than 6 digits.
     * ALPHANUMERIC has a maximum length of 11 characters.
     * SHORTCODE has a maximum length of 6 digits.
     * REPLIABLE should not specify a value here.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public SubmissionEntryFrom withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * The type of the sender id.
     * 
     * If you want BulkSMS to collect replies to this message on your behalf, specify the type as REPLIABLE.  If the recipient is in a country where BulkSMS does not have a local reply number, the reply may incur costs that are more expensive than sending a local SMS in that country.
     * If you operate a service from a shortcode in a locale that allows messaging from such a shortcode, you can specify SHORTCODE for the type.
     * 
     */
    @JsonProperty("type")
    public SubmissionEntryFromTypeEnum type;

    public SubmissionEntryFrom withType(SubmissionEntryFromTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public SubmissionEntryFrom(@JsonProperty("type") SubmissionEntryFromTypeEnum type) {
        this.type = type;
  }
}
