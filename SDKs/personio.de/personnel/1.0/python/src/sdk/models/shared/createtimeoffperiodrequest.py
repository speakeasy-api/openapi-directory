"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTimeOffPeriodRequest:
    r"""Absence period to create"""
    
    employee_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_id') }})
    r"""Employee identifier"""  
    end_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Absence end date as YYYY-MM-DD"""  
    half_day_end: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('half_day_end') }})
    r"""Weather the end date is a half-day off"""  
    half_day_start: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('half_day_start') }})
    r"""Weather the start date is a half-day off"""  
    start_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Absence start date as YYYY-MM-DD"""  
    time_off_type_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_off_type_id') }})
    r"""Time-off type identifier"""  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Optional comment"""  
    