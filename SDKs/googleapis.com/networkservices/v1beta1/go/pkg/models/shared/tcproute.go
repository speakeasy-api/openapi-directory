// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TCPRoute - TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource.
type TCPRoute struct {
	// Output only. The timestamp when the resource was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. A free-text description of the resource. Max length 1024 characters.
	Description *string `json:"description,omitempty"`
	// Optional. Gateways defines a list of gateways this TcpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`
	Gateways []string `json:"gateways,omitempty"`
	// Optional. Set of label tags associated with the TcpRoute resource.
	Labels map[string]string `json:"labels,omitempty"`
	// Optional. Meshes defines a list of meshes this TcpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/` The attached Mesh should be of a type SIDECAR
	Meshes []string `json:"meshes,omitempty"`
	// Required. Name of the TcpRoute resource. It matches pattern `projects/*/locations/global/tcpRoutes/tcp_route_name>`.
	Name *string `json:"name,omitempty"`
	// Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
	Rules []TCPRouteRouteRule `json:"rules,omitempty"`
	// Output only. Server-defined URL of this resource
	SelfLink *string `json:"selfLink,omitempty"`
	// Output only. The timestamp when the resource was updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// TCPRouteInput - TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource.
type TCPRouteInput struct {
	// Optional. A free-text description of the resource. Max length 1024 characters.
	Description *string `json:"description,omitempty"`
	// Optional. Gateways defines a list of gateways this TcpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`
	Gateways []string `json:"gateways,omitempty"`
	// Optional. Set of label tags associated with the TcpRoute resource.
	Labels map[string]string `json:"labels,omitempty"`
	// Optional. Meshes defines a list of meshes this TcpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/` The attached Mesh should be of a type SIDECAR
	Meshes []string `json:"meshes,omitempty"`
	// Required. Name of the TcpRoute resource. It matches pattern `projects/*/locations/global/tcpRoutes/tcp_route_name>`.
	Name *string `json:"name,omitempty"`
	// Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
	Rules []TCPRouteRouteRule `json:"rules,omitempty"`
}
