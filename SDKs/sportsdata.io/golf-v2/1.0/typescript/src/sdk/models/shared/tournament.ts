/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Round } from "./round";
import { Expose, Type } from "class-transformer";

export class Tournament extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Canceled" })
  canceled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "City" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Covered" })
  covered?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EndDate" })
  endDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Format" })
  format?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsInProgress" })
  isInProgress?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IsOver" })
  isOver?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Par" })
  par?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Purse" })
  purse?: number;

  @SpeakeasyMetadata({ elemType: Round })
  @Expose({ name: "Rounds" })
  @Type(() => Round)
  rounds?: Round[];

  @SpeakeasyMetadata()
  @Expose({ name: "SportRadarTournamentID" })
  sportRadarTournamentID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDateTime" })
  startDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeZone" })
  timeZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TournamentID" })
  tournamentID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Venue" })
  venue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Yards" })
  yards?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ZipCode" })
  zipCode?: string;
}
