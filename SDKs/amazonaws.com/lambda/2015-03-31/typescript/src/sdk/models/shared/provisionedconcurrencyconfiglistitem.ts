/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProvisionedConcurrencyStatusEnumEnum } from "./provisionedconcurrencystatusenumenum";
import { Expose } from "class-transformer";

/**
 * Details about the provisioned concurrency configuration for a function alias or version.
 */
export class ProvisionedConcurrencyConfigListItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllocatedProvisionedConcurrentExecutions" })
  allocatedProvisionedConcurrentExecutions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AvailableProvisionedConcurrentExecutions" })
  availableProvisionedConcurrentExecutions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "FunctionArn" })
  functionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModified" })
  lastModified?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestedProvisionedConcurrentExecutions" })
  requestedProvisionedConcurrentExecutions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ProvisionedConcurrencyStatusEnumEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusReason" })
  statusReason?: string;
}
