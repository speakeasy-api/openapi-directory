/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ApiVersion {
    /**
     * Timestamp when the version was added
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("added")
    public OffsetDateTime added;

    public ApiVersion withAdded(OffsetDateTime added) {
        this.added = added;
        return this;
    }
    
    /**
     * Copy of `externalDocs` section from OpenAPI definition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalDocs")
    public java.util.Map<String, Object> externalDocs;

    public ApiVersion withExternalDocs(java.util.Map<String, Object> externalDocs) {
        this.externalDocs = externalDocs;
        return this;
    }
    
    /**
     * Copy of `info` section from OpenAPI definition
     */
    @JsonProperty("info")
    public java.util.Map<String, Object> info;

    public ApiVersion withInfo(java.util.Map<String, Object> info) {
        this.info = info;
        return this;
    }
    
    /**
     * Link to the individual API entry for this API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link")
    public String link;

    public ApiVersion withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * The value of the `openapi` or `swagger` property of the source definition
     */
    @JsonProperty("openapiVer")
    public String openapiVer;

    public ApiVersion withOpenapiVer(String openapiVer) {
        this.openapiVer = openapiVer;
        return this;
    }
    
    /**
     * URL to OpenAPI definition in JSON format
     */
    @JsonProperty("swaggerUrl")
    public String swaggerUrl;

    public ApiVersion withSwaggerUrl(String swaggerUrl) {
        this.swaggerUrl = swaggerUrl;
        return this;
    }
    
    /**
     * URL to OpenAPI definition in YAML format
     */
    @JsonProperty("swaggerYamlUrl")
    public String swaggerYamlUrl;

    public ApiVersion withSwaggerYamlUrl(String swaggerYamlUrl) {
        this.swaggerYamlUrl = swaggerYamlUrl;
        return this;
    }
    
    /**
     * Timestamp when the version was updated
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public ApiVersion withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    public ApiVersion(@JsonProperty("added") OffsetDateTime added, @JsonProperty("info") java.util.Map<String, Object> info, @JsonProperty("openapiVer") String openapiVer, @JsonProperty("swaggerUrl") String swaggerUrl, @JsonProperty("swaggerYamlUrl") String swaggerYamlUrl, @JsonProperty("updated") OffsetDateTime updated) {
        this.added = added;
        this.info = info;
        this.openapiVer = openapiVer;
        this.swaggerUrl = swaggerUrl;
        this.swaggerYamlUrl = swaggerYamlUrl;
        this.updated = updated;
  }
}
