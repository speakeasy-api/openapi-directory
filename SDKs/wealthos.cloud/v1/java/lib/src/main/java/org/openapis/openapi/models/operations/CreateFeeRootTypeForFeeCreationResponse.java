/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateFeeRootTypeForFeeCreationResponse - JSON for the Fee creation response
 */
public class CreateFeeRootTypeForFeeCreationResponse {
    /**
     * Will indicate the date where this record was created
     */
    @JsonProperty("created_at")
    public String createdAt;
    public CreateFeeRootTypeForFeeCreationResponse withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Currency of the Fee
     */
    @JsonProperty("currency")
    public String currency;
    public CreateFeeRootTypeForFeeCreationResponse withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
     */
    @JsonProperty("direction")
    public CreateFeeRootTypeForFeeCreationResponseDirectionEnum direction;
    public CreateFeeRootTypeForFeeCreationResponse withDirection(CreateFeeRootTypeForFeeCreationResponseDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * External Transaction Reference
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_transaction_reference")
    public String externalTransactionReference;
    public CreateFeeRootTypeForFeeCreationResponse withExternalTransactionReference(String externalTransactionReference) {
        this.externalTransactionReference = externalTransactionReference;
        return this;
    }
    
    /**
     * investment_product_id
     */
    @JsonProperty("investment_product_id")
    public String investmentProductId;
    public CreateFeeRootTypeForFeeCreationResponse withInvestmentProductId(String investmentProductId) {
        this.investmentProductId = investmentProductId;
        return this;
    }
    
    /**
     * Origin of the transaction
     */
    @JsonProperty("origin")
    public CreateFeeRootTypeForFeeCreationResponseOriginEnum origin;
    public CreateFeeRootTypeForFeeCreationResponse withOrigin(CreateFeeRootTypeForFeeCreationResponseOriginEnum origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * Pot ID
     */
    @JsonProperty("pot_id")
    public String potId;
    public CreateFeeRootTypeForFeeCreationResponse withPotId(String potId) {
        this.potId = potId;
        return this;
    }
    
    @JsonProperty("primary_transaction_type")
    public CreateFeeRootTypeForFeeCreationResponsePrimaryTransactionTypeEnum primaryTransactionType;
    public CreateFeeRootTypeForFeeCreationResponse withPrimaryTransactionType(CreateFeeRootTypeForFeeCreationResponsePrimaryTransactionTypeEnum primaryTransactionType) {
        this.primaryTransactionType = primaryTransactionType;
        return this;
    }
    
    /**
     * Intended settlement date of the pending transaction or actual the settled day of the transaction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settlement_date")
    public String settlementDate;
    public CreateFeeRootTypeForFeeCreationResponse withSettlementDate(String settlementDate) {
        this.settlementDate = settlementDate;
        return this;
    }
    
    /**
     * Sub transaction type
     */
    @JsonProperty("sub_transaction_type")
    public CreateFeeRootTypeForFeeCreationResponseSubTransactionTypeEnum subTransactionType;
    public CreateFeeRootTypeForFeeCreationResponse withSubTransactionType(CreateFeeRootTypeForFeeCreationResponseSubTransactionTypeEnum subTransactionType) {
        this.subTransactionType = subTransactionType;
        return this;
    }
    
    /**
     * Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
     */
    @JsonProperty("sub_type")
    public CreateFeeRootTypeForFeeCreationResponseSubTypeEnum subType;
    public CreateFeeRootTypeForFeeCreationResponse withSubType(CreateFeeRootTypeForFeeCreationResponseSubTypeEnum subType) {
        this.subType = subType;
        return this;
    }
    
    /**
     * Date the transaction was effected
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trade_date")
    public String tradeDate;
    public CreateFeeRootTypeForFeeCreationResponse withTradeDate(String tradeDate) {
        this.tradeDate = tradeDate;
        return this;
    }
    
    /**
     * Unique ID of the fee transaction
     */
    @JsonProperty("transaction_id")
    public String transactionId;
    public CreateFeeRootTypeForFeeCreationResponse withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * Fee Amount upto 2 decimal places
     */
    @JsonProperty("transaction_value")
    public String transactionValue;
    public CreateFeeRootTypeForFeeCreationResponse withTransactionValue(String transactionValue) {
        this.transactionValue = transactionValue;
        return this;
    }
    
    /**
     * State of the transaction
     */
    @JsonProperty("type")
    public CreateFeeRootTypeForFeeCreationResponseTypeEnum type;
    public CreateFeeRootTypeForFeeCreationResponse withType(CreateFeeRootTypeForFeeCreationResponseTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Will indicate the date where this record was last changed
     */
    @JsonProperty("updated_at")
    public String updatedAt;
    public CreateFeeRootTypeForFeeCreationResponse withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
