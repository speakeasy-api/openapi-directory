"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class TeamTemplates:
    r"""Team Template Management"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_v2_team_templates_json(self, request: operations.GetV2TeamTemplatesJSONRequest) -> operations.GetV2TeamTemplatesJSONResponse:
        r"""List team templates
        Fetches multiple team template records. The records can be filtered, paged, and sorted according to
        the respective parameters.
        
        Team templates are templates that are available team-wide. Admins may use
        team templates to create original content for the entire team, monitor version control to ensure templates are always up to date,
        and track template performance across the entire organization. All metrics on a team template reflect usage across the team; individual metrics can be found with the email_templates API endpoint.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v2/team_templates.json'
        
        query_params = utils.get_query_params(operations.GetV2TeamTemplatesJSONRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetV2TeamTemplatesJSONResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, '*/*'):
                res.body = http_res.content

        return res

    def get_v2_team_templates_id_json(self, request: operations.GetV2TeamTemplatesIDJSONRequest) -> operations.GetV2TeamTemplatesIDJSONResponse:
        r"""Fetch a team template
        Fetches a team template, by ID only.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetV2TeamTemplatesIDJSONRequest, base_url, '/v2/team_templates/{id}.json', request)
        
        query_params = utils.get_query_params(operations.GetV2TeamTemplatesIDJSONRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetV2TeamTemplatesIDJSONResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, '*/*'):
                res.body = http_res.content

        return res

    