// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountPermissionLevelEnum - Output only. Specifies the PermissionLevel the caller has for this account.
type AccountPermissionLevelEnum string

const (
	AccountPermissionLevelEnumPermissionLevelUnspecified AccountPermissionLevelEnum = "PERMISSION_LEVEL_UNSPECIFIED"
	AccountPermissionLevelEnumOwnerLevel                 AccountPermissionLevelEnum = "OWNER_LEVEL"
	AccountPermissionLevelEnumMemberLevel                AccountPermissionLevelEnum = "MEMBER_LEVEL"
)

func (e *AccountPermissionLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PERMISSION_LEVEL_UNSPECIFIED":
		fallthrough
	case "OWNER_LEVEL":
		fallthrough
	case "MEMBER_LEVEL":
		*e = AccountPermissionLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPermissionLevelEnum: %s", s)
	}
}

// AccountRoleEnum - Output only. Specifies the AccountRole the caller has for this account.
type AccountRoleEnum string

const (
	AccountRoleEnumAccountRoleUnspecified AccountRoleEnum = "ACCOUNT_ROLE_UNSPECIFIED"
	AccountRoleEnumOwner                  AccountRoleEnum = "OWNER"
	AccountRoleEnumCoOwner                AccountRoleEnum = "CO_OWNER"
	AccountRoleEnumManager                AccountRoleEnum = "MANAGER"
	AccountRoleEnumCommunityManager       AccountRoleEnum = "COMMUNITY_MANAGER"
)

func (e *AccountRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCOUNT_ROLE_UNSPECIFIED":
		fallthrough
	case "OWNER":
		fallthrough
	case "CO_OWNER":
		fallthrough
	case "MANAGER":
		fallthrough
	case "COMMUNITY_MANAGER":
		*e = AccountRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountRoleEnum: %s", s)
	}
}

// AccountTypeEnum - Output only. Specifies the AccountType of this account.
type AccountTypeEnum string

const (
	AccountTypeEnumAccountTypeUnspecified AccountTypeEnum = "ACCOUNT_TYPE_UNSPECIFIED"
	AccountTypeEnumPersonal               AccountTypeEnum = "PERSONAL"
	AccountTypeEnumLocationGroup          AccountTypeEnum = "LOCATION_GROUP"
	AccountTypeEnumUserGroup              AccountTypeEnum = "USER_GROUP"
	AccountTypeEnumOrganization           AccountTypeEnum = "ORGANIZATION"
)

func (e *AccountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCOUNT_TYPE_UNSPECIFIED":
		fallthrough
	case "PERSONAL":
		fallthrough
	case "LOCATION_GROUP":
		fallthrough
	case "USER_GROUP":
		fallthrough
	case "ORGANIZATION":
		*e = AccountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountTypeEnum: %s", s)
	}
}

// Account - An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).
type Account struct {
	// The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account.
	AccountName *string `json:"accountName,omitempty"`
	// Account reference number if provisioned.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The resource name, in the format `accounts/{account_id}`.
	Name *string `json:"name,omitempty"`
	// Additional Info stored for an organization.
	OrganizationInfo *OrganizationInfo `json:"organizationInfo,omitempty"`
	// Output only. Specifies the PermissionLevel the caller has for this account.
	PermissionLevel *AccountPermissionLevelEnum `json:"permissionLevel,omitempty"`
	// Output only. Specifies the AccountRole the caller has for this account.
	Role *AccountRoleEnum `json:"role,omitempty"`
	// Indicates status of the account, such as whether the account has been verified by Google.
	State *AccountState `json:"state,omitempty"`
	// Output only. Specifies the AccountType of this account.
	Type *AccountTypeEnum `json:"type,omitempty"`
}
