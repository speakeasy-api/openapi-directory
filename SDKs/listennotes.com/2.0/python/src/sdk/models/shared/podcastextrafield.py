"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PodcastExtraField:
    
    amazon_music_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amazon_music_url'), 'exclude': lambda f: f is None }})
    r"""Amazon Music url for this podcast"""  
    facebook_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facebook_handle'), 'exclude': lambda f: f is None }})
    r"""Facebook username affiliated with this podcast"""  
    google_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('google_url'), 'exclude': lambda f: f is None }})
    r"""Google Podcasts url for this podcast"""  
    instagram_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instagram_handle'), 'exclude': lambda f: f is None }})
    r"""Instagram username affiliated with this podcast"""  
    linkedin_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedin_url'), 'exclude': lambda f: f is None }})
    r"""LinkedIn url affiliated with this podcast"""  
    patreon_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('patreon_handle'), 'exclude': lambda f: f is None }})
    r"""Patreon username affiliated with this podcast"""  
    spotify_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spotify_url'), 'exclude': lambda f: f is None }})
    r"""Spotify url for this podcast"""  
    twitter_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('twitter_handle'), 'exclude': lambda f: f is None }})
    r"""Twitter username affiliated with this podcast"""  
    url1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url1'), 'exclude': lambda f: f is None }})
    r"""Url affiliated with this podcast"""  
    url2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url2'), 'exclude': lambda f: f is None }})
    r"""Url affiliated with this podcast"""  
    url3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url3'), 'exclude': lambda f: f is None }})
    r"""Url affiliated with this podcast"""  
    wechat_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wechat_handle'), 'exclude': lambda f: f is None }})
    r"""WeChat username affiliated with this podcast"""  
    youtube_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('youtube_url'), 'exclude': lambda f: f is None }})
    r"""YouTube url affiliated with this podcast"""  
    