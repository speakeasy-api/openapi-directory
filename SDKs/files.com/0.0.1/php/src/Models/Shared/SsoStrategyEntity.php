<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SsoStrategyEntity - List Sso Strategies
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SsoStrategyEntity
{
    /**
     * Method used for deprovisioning users.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityDeprovisionBehaviorEnum $deprovisionBehavior
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprovision_behavior')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityDeprovisionBehaviorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SsoStrategyEntityDeprovisionBehaviorEnum $deprovisionBehavior = null;
    
    /**
     * Auto-deprovision group membership based on group memberships on the SSO side?
     * 
     * @var ?bool $deprovisionGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprovision_groups')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deprovisionGroups = null;
    
    /**
     * Auto-deprovision users?
     * 
     * @var ?bool $deprovisionUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprovision_users')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deprovisionUsers = null;
    
    /**
     * Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Custom label for the SSO provider on the login page.
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * Base DN for looking up users in LDAP server
     * 
     * @var ?string $ldapBaseDn
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_base_dn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapBaseDn = null;
    
    /**
     * Domain name that will be appended to LDAP usernames
     * 
     * @var ?string $ldapDomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapDomain = null;
    
    /**
     * LDAP host
     * 
     * @var ?string $ldapHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_host')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapHost = null;
    
    /**
     * LDAP backup host
     * 
     * @var ?string $ldapHost2
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_host_2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapHost2 = null;
    
    /**
     * LDAP backup host
     * 
     * @var ?string $ldapHost3
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_host_3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapHost3 = null;
    
    /**
     * LDAP port
     * 
     * @var ?int $ldapPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ldapPort = null;
    
    /**
     * Use secure LDAP?
     * 
     * @var ?bool $ldapSecure
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_secure')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ldapSecure = null;
    
    /**
     * Username for signing in to LDAP server.
     * 
     * @var ?string $ldapUsername
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapUsername = null;
    
    /**
     * LDAP username field
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityLdapUsernameFieldEnum $ldapUsernameField
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_username_field')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityLdapUsernameFieldEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SsoStrategyEntityLdapUsernameFieldEnum $ldapUsernameField = null;
    
    /**
     * URL holding a custom logo for the SSO provider on the login page.
     * 
     * @var ?string $logoUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('logo_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logoUrl = null;
    
    /**
     * SSO Protocol
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityProtocolEnum $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityProtocolEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SsoStrategyEntityProtocolEnum $protocol = null;
    
    /**
     * Provider name
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityProviderEnum $provider
     */
	#[\JMS\Serializer\Annotation\SerializedName('provider')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityProviderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SsoStrategyEntityProviderEnum $provider = null;
    
    /**
     * DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.
     * 
     * @var ?bool $provisionAttachmentsPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_attachments_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $provisionAttachmentsPermission = null;
    
    /**
     * Default company for auto provisioned users.
     * 
     * @var ?string $provisionCompany
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_company')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionCompany = null;
    
    /**
     * Auto-provisioned users get WebDAV permission?
     * 
     * @var ?bool $provisionDavPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_dav_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $provisionDavPermission = null;
    
    /**
     * Comma-separated list of group names whose members will be created with email_signup authentication.
     * 
     * @var ?string $provisionEmailSignupGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_email_signup_groups')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionEmailSignupGroups = null;
    
    /**
     * Auto-provisioned users get FTP permission?
     * 
     * @var ?bool $provisionFtpPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_ftp_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $provisionFtpPermission = null;
    
    /**
     * Comma-separated list of group names for groups to automatically add all auto-provisioned users to.
     * 
     * @var ?string $provisionGroupDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_group_default')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionGroupDefault = null;
    
    /**
     * Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.
     * 
     * @var ?string $provisionGroupExclusion
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_group_exclusion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionGroupExclusion = null;
    
    /**
     * Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.
     * 
     * @var ?string $provisionGroupInclusion
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_group_inclusion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionGroupInclusion = null;
    
    /**
     * Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.
     * 
     * @var ?string $provisionGroupRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_group_required')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionGroupRequired = null;
    
    /**
     * Auto-provision group membership based on group memberships on the SSO side?
     * 
     * @var ?bool $provisionGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_groups')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $provisionGroups = null;
    
    /**
     * Auto-provisioned users get SFTP permission?
     * 
     * @var ?bool $provisionSftpPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_sftp_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $provisionSftpPermission = null;
    
    /**
     * Comma-separated list of group names whose members will be created as Site Admins.
     * 
     * @var ?string $provisionSiteAdminGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_site_admin_groups')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionSiteAdminGroups = null;
    
    /**
     * Default time zone for auto provisioned users.
     * 
     * @var ?string $provisionTimeZone
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_time_zone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provisionTimeZone = null;
    
    /**
     * Auto-provision users?
     * 
     * @var ?bool $provisionUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('provision_users')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $provisionUsers = null;
    
    /**
     * Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.
     * 
     * @var ?string $samlProviderCertFingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('saml_provider_cert_fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $samlProviderCertFingerprint = null;
    
    /**
     * Identity provider issuer url
     * 
     * @var ?string $samlProviderIssuerUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('saml_provider_issuer_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $samlProviderIssuerUrl = null;
    
    /**
     * Custom identity provider metadata
     * 
     * @var ?string $samlProviderMetadataContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('saml_provider_metadata_content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $samlProviderMetadataContent = null;
    
    /**
     * Metadata URL for the SAML identity provider
     * 
     * @var ?string $samlProviderMetadataUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('saml_provider_metadata_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $samlProviderMetadataUrl = null;
    
    /**
     * Identity provider SLO endpoint
     * 
     * @var ?string $samlProviderSloTargetUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('saml_provider_slo_target_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $samlProviderSloTargetUrl = null;
    
    /**
     * Identity provider SSO endpoint if saml_provider_metadata_url is not available.
     * 
     * @var ?string $samlProviderSsoTargetUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('saml_provider_sso_target_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $samlProviderSsoTargetUrl = null;
    
    /**
     * SCIM authentication type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityScimAuthenticationMethodEnum $scimAuthenticationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('scim_authentication_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SsoStrategyEntityScimAuthenticationMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SsoStrategyEntityScimAuthenticationMethodEnum $scimAuthenticationMethod = null;
    
    /**
     * SCIM OAuth Access Token.
     * 
     * @var ?string $scimOauthAccessToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('scim_oauth_access_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scimOauthAccessToken = null;
    
    /**
     * SCIM OAuth Access Token Expiration Time.
     * 
     * @var ?string $scimOauthAccessTokenExpiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('scim_oauth_access_token_expires_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scimOauthAccessTokenExpiresAt = null;
    
    /**
     * SCIM username.
     * 
     * @var ?string $scimUsername
     */
	#[\JMS\Serializer\Annotation\SerializedName('scim_username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scimUsername = null;
    
    /**
     * Subdomain
     * 
     * @var ?string $subdomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('subdomain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subdomain = null;
    
	public function __construct()
	{
		$this->deprovisionBehavior = null;
		$this->deprovisionGroups = null;
		$this->deprovisionUsers = null;
		$this->enabled = null;
		$this->id = null;
		$this->label = null;
		$this->ldapBaseDn = null;
		$this->ldapDomain = null;
		$this->ldapHost = null;
		$this->ldapHost2 = null;
		$this->ldapHost3 = null;
		$this->ldapPort = null;
		$this->ldapSecure = null;
		$this->ldapUsername = null;
		$this->ldapUsernameField = null;
		$this->logoUrl = null;
		$this->protocol = null;
		$this->provider = null;
		$this->provisionAttachmentsPermission = null;
		$this->provisionCompany = null;
		$this->provisionDavPermission = null;
		$this->provisionEmailSignupGroups = null;
		$this->provisionFtpPermission = null;
		$this->provisionGroupDefault = null;
		$this->provisionGroupExclusion = null;
		$this->provisionGroupInclusion = null;
		$this->provisionGroupRequired = null;
		$this->provisionGroups = null;
		$this->provisionSftpPermission = null;
		$this->provisionSiteAdminGroups = null;
		$this->provisionTimeZone = null;
		$this->provisionUsers = null;
		$this->samlProviderCertFingerprint = null;
		$this->samlProviderIssuerUrl = null;
		$this->samlProviderMetadataContent = null;
		$this->samlProviderMetadataUrl = null;
		$this->samlProviderSloTargetUrl = null;
		$this->samlProviderSsoTargetUrl = null;
		$this->scimAuthenticationMethod = null;
		$this->scimOauthAccessToken = null;
		$this->scimOauthAccessTokenExpiresAt = null;
		$this->scimUsername = null;
		$this->subdomain = null;
	}
}
