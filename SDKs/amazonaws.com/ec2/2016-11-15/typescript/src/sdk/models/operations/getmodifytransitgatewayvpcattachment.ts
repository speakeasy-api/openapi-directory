/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GETModifyTransitGatewayVpcAttachmentActionEnum {
  ModifyTransitGatewayVpcAttachment = "ModifyTransitGatewayVpcAttachment",
}

/**
 * Describes the options for a VPC attachment.
 */
export class GETModifyTransitGatewayVpcAttachmentOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=ApplianceModeSupport" })
  applianceModeSupport?: shared.ApplianceModeSupportValueEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=DnsSupport" })
  dnsSupport?: shared.DnsSupportValueEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=Ipv6Support" })
  ipv6Support?: shared.Ipv6SupportValueEnum;
}

export enum GETModifyTransitGatewayVpcAttachmentVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifyTransitGatewayVpcAttachmentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyTransitGatewayVpcAttachmentActionEnum;

  /**
   * The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddSubnetIds",
  })
  addSubnetIds?: string[];

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The new VPC attachment options.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Options",
  })
  options?: GETModifyTransitGatewayVpcAttachmentOptions;

  /**
   * The IDs of one or more subnets to remove.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RemoveSubnetIds",
  })
  removeSubnetIds?: string[];

  /**
   * The ID of the attachment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TransitGatewayAttachmentId",
  })
  transitGatewayAttachmentId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyTransitGatewayVpcAttachmentVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyTransitGatewayVpcAttachmentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
