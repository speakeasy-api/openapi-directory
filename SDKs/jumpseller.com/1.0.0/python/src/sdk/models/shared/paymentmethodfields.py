"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PaymentMethodFieldsTypeEnum(str, Enum):
    r"""Type of the Payment Method"""
    MANUAL = 'manual'
    PAYPAL = 'paypal'
    PAGSEGURO = 'pagseguro'
    MONEYBOOKERS = 'moneybookers'
    WEBPAY_CL = 'webpay_cl'
    EASYPAY = 'easypay'
    EASYPAYCC = 'easypaycc'
    EASYPAYBOLETO = 'easypayboleto'
    IDEAL_BASIC = 'ideal_basic'
    HIPAY = 'hipay'
    KHIPU = 'khipu'
    MERCADO_PAGO = 'mercado_pago'
    IFTHENPAY = 'ifthenpay'
    EUPAGO = 'eupago'
    STRIPE = 'stripe'
    PAYU = 'payu'
    SERVIPAG = 'servipag'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentMethodFields:
    
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the Payment Method"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Payment Method"""  
    type: Optional[PaymentMethodFieldsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the Payment Method"""  
    