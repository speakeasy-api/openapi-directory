"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreprintsContributorsListResponse = exports.PreprintsContributorsListContributor = exports.PreprintsContributorsListContributorRelationships = exports.PreprintsContributorsListContributorLinks = exports.PreprintsContributorsListContributorAttributes = exports.PreprintsContributorsListContributorAttributesPermissionEnum = exports.PreprintsContributorsListRequest = void 0;
var utils_1 = require("../../../internal/utils");
var PreprintsContributorsListRequest = /** @class */ (function (_super) {
    __extends(PreprintsContributorsListRequest, _super);
    function PreprintsContributorsListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=preprint_id",
        }),
        __metadata("design:type", String)
    ], PreprintsContributorsListRequest.prototype, "preprintId", void 0);
    return PreprintsContributorsListRequest;
}(utils_1.SpeakeasyBase));
exports.PreprintsContributorsListRequest = PreprintsContributorsListRequest;
/**
 * The permission level of the contributor. The default value is 'write'.
 */
var PreprintsContributorsListContributorAttributesPermissionEnum;
(function (PreprintsContributorsListContributorAttributesPermissionEnum) {
    PreprintsContributorsListContributorAttributesPermissionEnum["Read"] = "read";
    PreprintsContributorsListContributorAttributesPermissionEnum["Write"] = "write";
    PreprintsContributorsListContributorAttributesPermissionEnum["Admin"] = "admin";
})(PreprintsContributorsListContributorAttributesPermissionEnum = exports.PreprintsContributorsListContributorAttributesPermissionEnum || (exports.PreprintsContributorsListContributorAttributesPermissionEnum = {}));
/**
 * The properties of the contributor entity.
 */
var PreprintsContributorsListContributorAttributes = /** @class */ (function (_super) {
    __extends(PreprintsContributorsListContributorAttributes, _super);
    function PreprintsContributorsListContributorAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], PreprintsContributorsListContributorAttributes.prototype, "bibliographic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], PreprintsContributorsListContributorAttributes.prototype, "index", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributorAttributes.prototype, "permission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributorAttributes.prototype, "unregisteredContributor", void 0);
    return PreprintsContributorsListContributorAttributes;
}(utils_1.SpeakeasyBase));
exports.PreprintsContributorsListContributorAttributes = PreprintsContributorsListContributorAttributes;
/**
 * URLs to alternative representations of the contributor entity.
 */
var PreprintsContributorsListContributorLinks = /** @class */ (function (_super) {
    __extends(PreprintsContributorsListContributorLinks, _super);
    function PreprintsContributorsListContributorLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributorLinks.prototype, "self", void 0);
    return PreprintsContributorsListContributorLinks;
}(utils_1.SpeakeasyBase));
exports.PreprintsContributorsListContributorLinks = PreprintsContributorsListContributorLinks;
/**
 * URLs to other entities or entity collections that have a relationship to the contributor entity.
 */
var PreprintsContributorsListContributorRelationships = /** @class */ (function (_super) {
    __extends(PreprintsContributorsListContributorRelationships, _super);
    function PreprintsContributorsListContributorRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributorRelationships.prototype, "node", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributorRelationships.prototype, "user", void 0);
    return PreprintsContributorsListContributorRelationships;
}(utils_1.SpeakeasyBase));
exports.PreprintsContributorsListContributorRelationships = PreprintsContributorsListContributorRelationships;
var PreprintsContributorsListContributor = /** @class */ (function (_super) {
    __extends(PreprintsContributorsListContributor, _super);
    function PreprintsContributorsListContributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PreprintsContributorsListContributorAttributes)
    ], PreprintsContributorsListContributor.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributor.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PreprintsContributorsListContributorLinks)
    ], PreprintsContributorsListContributor.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PreprintsContributorsListContributorRelationships)
    ], PreprintsContributorsListContributor.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListContributor.prototype, "type", void 0);
    return PreprintsContributorsListContributor;
}(utils_1.SpeakeasyBase));
exports.PreprintsContributorsListContributor = PreprintsContributorsListContributor;
var PreprintsContributorsListResponse = /** @class */ (function (_super) {
    __extends(PreprintsContributorsListResponse, _super);
    function PreprintsContributorsListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], PreprintsContributorsListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PreprintsContributorsListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], PreprintsContributorsListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], PreprintsContributorsListResponse.prototype, "rawResponse", void 0);
    return PreprintsContributorsListResponse;
}(utils_1.SpeakeasyBase));
exports.PreprintsContributorsListResponse = PreprintsContributorsListResponse;
