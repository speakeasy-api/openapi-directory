"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionInformationActionTypeEnum(str, Enum):
    r"""The Type of this action."""
    ON_OFF_ACTION = 'OnOffAction'
    ANALOG_ACTION = 'AnalogAction'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionInformation:
    r"""The Information about an Action of a device"""
    
    action_type: Optional[ActionInformationActionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ActionType'), 'exclude': lambda f: f is None }})
    r"""The Type of this action."""  
    max_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxValue'), 'exclude': lambda f: f is None }})
    r"""The maximum value of this action (e.g. for an AnalogAction)"""  
    min_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinValue'), 'exclude': lambda f: f is None }})
    r"""The minimum value of this action (e.g. for an AnalogAction)"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""The Name of this action"""  
    obis_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ObisCode'), 'exclude': lambda f: f is None }})
    r"""The Obis Code of this action. This is used as ID."""  
    