/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SearchperpackageSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-dcs-apikey",
  })
  apiKey: string;
}

/**
 * Whether the query is to be interpreted as a literal (`literal`) instead of as an RE2 regular expression (`regexp`). Literal searches are faster and do not require escaping special characters, regular expression searches are more powerful.
 */
export enum SearchperpackageMatchModeEnum {
  Literal = "literal",
  Regexp = "regexp",
}

export class SearchperpackageRequest extends SpeakeasyBase {
  /**
   * Whether the query is to be interpreted as a literal (`literal`) instead of as an RE2 regular expression (`regexp`). Literal searches are faster and do not require escaping special characters, regular expression searches are more powerful.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=match_mode",
  })
  matchMode?: SearchperpackageMatchModeEnum;

  /**
   * The search query, for example `who knows...` (literal) or `who knows\.\.\.` (regular expression). See https://codesearch.debian.net/faq for more details about which keywords are supported. The regular expression flavor is RE2, see https://github.com/google/re2/blob/master/doc/syntax.txt
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query: string;
}

export class SearchperpackageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * All search results
   */
  @SpeakeasyMetadata({ elemType: shared.PackageSearchResult })
  packageSearchResults?: shared.PackageSearchResult[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
