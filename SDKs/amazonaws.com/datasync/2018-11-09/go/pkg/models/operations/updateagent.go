// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAgentXAmzTargetEnum
type UpdateAgentXAmzTargetEnum string

const (
	UpdateAgentXAmzTargetEnumFmrsServiceUpdateAgent UpdateAgentXAmzTargetEnum = "FmrsService.UpdateAgent"
)

func (e UpdateAgentXAmzTargetEnum) ToPointer() *UpdateAgentXAmzTargetEnum {
	return &e
}

func (e *UpdateAgentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FmrsService.UpdateAgent":
		*e = UpdateAgentXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAgentXAmzTargetEnum: %v", v)
	}
}

type UpdateAgentRequest struct {
	UpdateAgentRequest shared.UpdateAgentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         UpdateAgentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateAgentResponse struct {
	ContentType string
	// InternalException
	InternalException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// Success
	UpdateAgentResponse map[string]interface{}
}
