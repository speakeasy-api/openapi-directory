/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetClientProfileByEmail200ApplicationJSON - OK
 */
public class GetClientProfileByEmail200ApplicationJSON {
    /**
     * Available accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableAccounts")
    public String[] availableAccounts;

    public GetClientProfileByEmail200ApplicationJSON withAvailableAccounts(String[] availableAccounts) {
        this.availableAccounts = availableAccounts;
        return this;
    }
    
    /**
     * Information on each available address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableAddresses")
    public GetClientProfileByEmail200ApplicationJSONAvailableAddresses[] availableAddresses;

    public GetClientProfileByEmail200ApplicationJSON withAvailableAddresses(GetClientProfileByEmail200ApplicationJSONAvailableAddresses[] availableAddresses) {
        this.availableAddresses = availableAddresses;
        return this;
    }
    
    /**
     * Indicates whether customer profile is complete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isComplete")
    public Boolean isComplete;

    public GetClientProfileByEmail200ApplicationJSON withIsComplete(Boolean isComplete) {
        this.isComplete = isComplete;
        return this;
    }
    
    /**
     * Profile provider.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileProvider")
    public String profileProvider;

    public GetClientProfileByEmail200ApplicationJSON withProfileProvider(String profileProvider) {
        this.profileProvider = profileProvider;
        return this;
    }
    
    /**
     * Customer profile information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userProfile")
    public GetClientProfileByEmail200ApplicationJSONUserProfile userProfile;

    public GetClientProfileByEmail200ApplicationJSON withUserProfile(GetClientProfileByEmail200ApplicationJSONUserProfile userProfile) {
        this.userProfile = userProfile;
        return this;
    }
    
    /**
     * Unique ID associated with the customer profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userProfileId")
    public String userProfileId;

    public GetClientProfileByEmail200ApplicationJSON withUserProfileId(String userProfileId) {
        this.userProfileId = userProfileId;
        return this;
    }
    
    public GetClientProfileByEmail200ApplicationJSON(){}
}
