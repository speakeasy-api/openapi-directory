<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class DefaultObjectAccessControls 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteResponse
     */
	public function storageDefaultObjectAccessControlsDelete(
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/b/{bucket}/defaultObjectAcl/{entity}', \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Returns the default object ACL entry for the specified entity on the specified bucket.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetResponse
     */
	public function storageDefaultObjectAccessControlsGet(
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/b/{bucket}/defaultObjectAcl/{entity}', \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->objectAccessControl = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ObjectAccessControl', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Creates a new default object ACL entry on the specified bucket.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertResponse
     */
	public function storageDefaultObjectAccessControlsInsert(
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/b/{bucket}/defaultObjectAcl', \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "objectAccessControl", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsInsertResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->objectAccessControl = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ObjectAccessControl', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieves default object ACL entries on the specified bucket.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListResponse
     */
	public function storageDefaultObjectAccessControlsList(
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/b/{bucket}/defaultObjectAcl', \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->objectAccessControls = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ObjectAccessControls', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates a default object ACL entry on the specified bucket. This method supports patch semantics.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchResponse
     */
	public function storageDefaultObjectAccessControlsPatch(
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/b/{bucket}/defaultObjectAcl/{entity}', \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "objectAccessControl", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->objectAccessControl = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ObjectAccessControl', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates a default object ACL entry on the specified bucket.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateResponse
     */
	public function storageDefaultObjectAccessControlsUpdate(
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/b/{bucket}/defaultObjectAcl/{entity}', \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "objectAccessControl", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\StorageDefaultObjectAccessControlsUpdateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->objectAccessControl = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ObjectAccessControl', 'json');
            }
        }

        return $response;
    }
}