/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { User } from "./user";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A restriction for accessing the content of the file.
 */
export class ContentRestriction extends SpeakeasyBase {
  /**
   * Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readOnly" })
  readOnly?: boolean;

  /**
   * Reason for why the content of the file is restricted. This is only mutable on requests that also set readOnly=true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * Information about a Drive user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictingUser" })
  @Type(() => User)
  restrictingUser?: User;

  /**
   * The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  restrictionDate?: Date;

  /**
   * The type of the content restriction. Currently the only possible value is globalContentRestriction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
