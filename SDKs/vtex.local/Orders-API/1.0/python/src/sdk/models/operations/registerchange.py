"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import registerchange as shared_registerchange
from ..shared import registerchangerequest as shared_registerchangerequest
from typing import Optional


@dataclasses.dataclass
class RegisterChangeRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    order_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'orderId', 'style': 'simple', 'explode': False }})
    r"""ID that identifies the order in the seller."""  
    register_change_request: shared_registerchangerequest.RegisterChangeRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class RegisterChangeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    register_change: Optional[shared_registerchange.RegisterChange] = dataclasses.field(default=None)
    r"""OK"""  
    