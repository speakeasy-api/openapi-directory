/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class TeamsGetMembershipsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-JWT",
  })
  jwt: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Key",
  })
  key: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class TeamsGetMembershipsRequest extends SpeakeasyBase {
  /**
   * Results limit value. By default will return maximum 25 results. Maximum of 100 results allowed per request.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Results offset. The default value is 0. Use this param to manage pagination.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Order result by ASC or DESC order.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderType",
  })
  orderType?: string;

  /**
   * Search term to filter your list results. Max length: 256 chars.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  /**
   * Team unique ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=teamId",
  })
  teamId: string;
}

export class TeamsGetMembershipsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Memberships List
   */
  @SpeakeasyMetadata()
  membershipList?: shared.MembershipList;
}
