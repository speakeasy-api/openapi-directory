<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkApplianceSingleLan200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkApplianceSingleLan200ApplicationJSON
{
    /**
     * The local IP of the appliance on the single LAN
     * 
     * @var ?string $applianceIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('applianceIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $applianceIp = null;
    
    /**
     * IPv6 configuration on the single LAN
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 $ipv6
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv6')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 $ipv6 = null;
    
    /**
     * Mandatory DHCP will enforce that clients connecting to this single LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp $mandatoryDhcp
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandatoryDhcp')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp $mandatoryDhcp = null;
    
    /**
     * The subnet of the single LAN
     * 
     * @var ?string $subnet
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnet = null;
    
	public function __construct()
	{
		$this->applianceIp = null;
		$this->ipv6 = null;
		$this->mandatoryDhcp = null;
		$this->subnet = null;
	}
}
