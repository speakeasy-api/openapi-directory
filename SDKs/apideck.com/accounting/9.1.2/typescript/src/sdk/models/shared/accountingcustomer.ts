/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { BankAccount } from "./bankaccount";
import { CurrencyEnum } from "./currencyenum";
import { Email } from "./email";
import {
  LinkedLedgerAccount,
  LinkedLedgerAccountInput,
} from "./linkedledgeraccount";
import { LinkedParentCustomer } from "./linkedparentcustomer";
import { LinkedTaxRate, LinkedTaxRateInput } from "./linkedtaxrate";
import { PhoneNumber } from "./phonenumber";
import { Website } from "./website";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Customer status
 */
export enum AccountingCustomerStatusEnum {
  Active = "active",
  Inactive = "inactive",
  Archived = "archived",
  GdprErasureRequest = "gdpr-erasure-request",
  Unknown = "unknown",
}

export class AccountingCustomerInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => LinkedLedgerAccountInput)
  account?: LinkedLedgerAccountInput;

  @SpeakeasyMetadata({ elemType: Address })
  @Expose({ name: "addresses" })
  @Type(() => Address)
  addresses?: Address[];

  @SpeakeasyMetadata({ elemType: BankAccount })
  @Expose({ name: "bank_accounts" })
  @Type(() => BankAccount)
  bankAccounts?: BankAccount[];

  /**
   * The name of the company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_name" })
  companyName?: string;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Display ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_id" })
  displayId?: string;

  /**
   * Display name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  @SpeakeasyMetadata({ elemType: Email })
  @Expose({ name: "emails" })
  @Type(() => Email)
  emails?: Email[];

  /**
   * The first name of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * Is this an individual or business customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  individual?: boolean;

  /**
   * The last name of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Middle name of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "middle_name" })
  middleName?: string;

  /**
   * Some notes about this customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * The parent customer this entity is linked to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => LinkedParentCustomer)
  parent?: LinkedParentCustomer;

  @SpeakeasyMetadata({ elemType: PhoneNumber })
  @Expose({ name: "phone_numbers" })
  @Type(() => PhoneNumber)
  phoneNumbers?: PhoneNumber[];

  /**
   * If true, indicates this is a Project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  project?: boolean;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Customer status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountingCustomerStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "suffix" })
  suffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tax_number" })
  taxNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tax_rate" })
  @Type(() => LinkedTaxRateInput)
  taxRate?: LinkedTaxRateInput;

  /**
   * The job title of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata({ elemType: Website })
  @Expose({ name: "websites" })
  @Type(() => Website)
  websites?: Website[];
}

export class AccountingCustomer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => LinkedLedgerAccount)
  account?: LinkedLedgerAccount;

  @SpeakeasyMetadata({ elemType: Address })
  @Expose({ name: "addresses" })
  @Type(() => Address)
  addresses?: Address[];

  @SpeakeasyMetadata({ elemType: BankAccount })
  @Expose({ name: "bank_accounts" })
  @Type(() => BankAccount)
  bankAccounts?: BankAccount[];

  /**
   * The name of the company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_name" })
  companyName?: string;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Display ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_id" })
  displayId?: string;

  /**
   * Display name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * The third-party API ID of original entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downstream_id" })
  downstreamId?: string;

  @SpeakeasyMetadata({ elemType: Email })
  @Expose({ name: "emails" })
  @Type(() => Email)
  emails?: Email[];

  /**
   * The first name of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Is this an individual or business customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  individual?: boolean;

  /**
   * The last name of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Middle name of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "middle_name" })
  middleName?: string;

  /**
   * Some notes about this customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * The parent customer this entity is linked to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => LinkedParentCustomer)
  parent?: LinkedParentCustomer;

  @SpeakeasyMetadata({ elemType: PhoneNumber })
  @Expose({ name: "phone_numbers" })
  @Type(() => PhoneNumber)
  phoneNumbers?: PhoneNumber[];

  /**
   * If true, indicates this is a Project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  project?: boolean;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Customer status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountingCustomerStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "suffix" })
  suffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tax_number" })
  taxNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tax_rate" })
  @Type(() => LinkedTaxRate)
  taxRate?: LinkedTaxRate;

  /**
   * The job title of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;

  @SpeakeasyMetadata({ elemType: Website })
  @Expose({ name: "websites" })
  @Type(() => Website)
  websites?: Website[];
}
