/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * How to format phone numbers (XTN fields)
 */
export enum StandardHl7ConfigurationPhoneNumberFormattingEnum {
  Standard = "STANDARD",
  OnlyDigitsInComponentOne = "ONLY_DIGITS_IN_COMPONENT_ONE",
  AreaLocalInComponentOne = "AREA_LOCAL_IN_COMPONENT_ONE",
}

/**
 * A standard HL7 configuration
 */
export class StandardHl7Configuration extends SpeakeasyBase {
  /**
   * A comma delimited list of HL7 fields to convert to the yyyMMddHHmmss format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "convertTimestampToDateTime" })
  convertTimestampToDateTime?: string;

  /**
   * Default the AOE result to UNK
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultAoeToUnknown" })
  defaultAoeToUnknown?: boolean;

  /**
   * Include the AOE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeAOE" })
  includeAOE: boolean;

  /**
   * The format to use for the file name generated by the translation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameFormat" })
  nameFormat?: string;

  /**
   * How to format phone numbers (XTN fields)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumberFormatting" })
  phoneNumberFormatting?: StandardHl7ConfigurationPhoneNumberFormattingEnum;

  /**
   * The receiving application name (needed for HL7 formats)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingApplicationName" })
  receivingApplicationName?: string;

  /**
   * The receiving application OID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingApplicationOID" })
  receivingApplicationOID?: string;

  /**
   * The receiving facility name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingFacilityName" })
  receivingFacilityName?: string;

  /**
   * The receiving facility name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingFacilityOID" })
  receivingFacilityOID?: string;

  /**
   * The name of the receiving organization in the message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingOrganization" })
  receivingOrganization?: string;

  /**
   * The reporting facility id (if different from CDC PRIME's OID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportingFacilityId" })
  reportingFacilityId?: string;

  /**
   * The reporting facility id type (if different from OID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportingFacilityIdType" })
  reportingFacilityIdType?: string;

  /**
   * The reporting facility name (if different from CDC PRIME)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportingFacilityName" })
  reportingFacilityName?: string;

  /**
   * Suppress the AOE OBX results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suppressAoe" })
  suppressAoe?: boolean;

  /**
   * A comma delimited list of HL7 fields to suppress
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suppressHl7Fields" })
  suppressHl7Fields?: string;

  /**
   * Suppress QST component is AOE OBX segments
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suppressQstForAoe" })
  suppressQstForAoe?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "transport" })
  transport: any;

  /**
   * Truncate the HD fields to HD_TRUNCATION_LIMIT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "truncateHDNamespaceIds" })
  truncateHDNamespaceIds?: boolean;

  /**
   * The discrimenator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  /**
   * Use BHS and FHS header
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useBatchHeaders" })
  useBatchHeaders: boolean;

  /**
   * A comma delimited list of element names that should use blank instead of unknown
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useBlankInsteadOfUnknown" })
  useBlankInsteadOfUnknown?: string;

  /**
   * Use the PID-14 field for patient email instead of the standard PID-13 field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usePid14ForPatientEmail" })
  usePid14ForPatientEmail?: boolean;

  /**
   * Set a test process mode flag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useTestProcessingMode" })
  useTestProcessingMode?: boolean;
}
