<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InputFileReadCsvConfiguration - The CSV file description
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InputFileReadCsvConfiguration
{
    /**
     * Indicate the separator of the values in the CSV file. Generally ";"
     * 
     * @var string $csvSeparator
     */
	#[\JMS\Serializer\Annotation\SerializedName('csvSeparator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $csvSeparator;
    
    /**
     * Indicate the text qualifier of the CSV file. Generally the value is "
     * 
     * @var ?string $csvTextQualifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('csvTextQualifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $csvTextQualifier = null;
    
    /**
     * Indicate if the csv file contains the column name at the first row
     * 
     * @var bool $hasHeaderRecord
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasHeaderRecord')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hasHeaderRecord;
    
    /**
     * Indicate if the importation should not use the csv column name from the file
     * 
     * @var bool $ignoreHeaderRecord
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreHeaderRecord')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $ignoreHeaderRecord;
    
	public function __construct()
	{
		$this->csvSeparator = "";
		$this->csvTextQualifier = null;
		$this->hasHeaderRecord = false;
		$this->ignoreHeaderRecord = false;
	}
}
