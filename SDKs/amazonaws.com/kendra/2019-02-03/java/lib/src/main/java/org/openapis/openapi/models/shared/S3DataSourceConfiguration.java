/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * S3DataSourceConfiguration - Provides the configuration information to connect to an Amazon S3 bucket.
 */
public class S3DataSourceConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessControlListConfiguration")
    public AccessControlListConfiguration accessControlListConfiguration;

    public S3DataSourceConfiguration withAccessControlListConfiguration(AccessControlListConfiguration accessControlListConfiguration) {
        this.accessControlListConfiguration = accessControlListConfiguration;
        return this;
    }
    
    @JsonProperty("BucketName")
    public String bucketName;

    public S3DataSourceConfiguration withBucketName(String bucketName) {
        this.bucketName = bucketName;
        return this;
    }
    
    /**
     * Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentsMetadataConfiguration")
    public DocumentsMetadataConfiguration documentsMetadataConfiguration;

    public S3DataSourceConfiguration withDocumentsMetadataConfiguration(DocumentsMetadataConfiguration documentsMetadataConfiguration) {
        this.documentsMetadataConfiguration = documentsMetadataConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExclusionPatterns")
    public String[] exclusionPatterns;

    public S3DataSourceConfiguration withExclusionPatterns(String[] exclusionPatterns) {
        this.exclusionPatterns = exclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InclusionPatterns")
    public String[] inclusionPatterns;

    public S3DataSourceConfiguration withInclusionPatterns(String[] inclusionPatterns) {
        this.inclusionPatterns = inclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InclusionPrefixes")
    public String[] inclusionPrefixes;

    public S3DataSourceConfiguration withInclusionPrefixes(String[] inclusionPrefixes) {
        this.inclusionPrefixes = inclusionPrefixes;
        return this;
    }
    
    public S3DataSourceConfiguration(@JsonProperty("BucketName") String bucketName) {
        this.bucketName = bucketName;
  }
}
