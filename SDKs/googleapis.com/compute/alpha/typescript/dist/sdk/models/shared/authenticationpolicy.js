"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationPolicy = exports.AuthenticationPolicyPrincipalBindingEnum = void 0;
var utils_1 = require("../../../internal/utils");
var originauthenticationmethod_1 = require("./originauthenticationmethod");
var peerauthenticationmethod_1 = require("./peerauthenticationmethod");
var tlscontext_1 = require("./tlscontext");
var class_transformer_1 = require("class-transformer");
/**
 * Define whether peer or origin identity should be used for principal. Default value is USE_PEER. If peer (or origin) identity is not available, either because peer/origin authentication is not defined, or failed, principal will be left unset. In other words, binding rule does not affect the decision to accept or reject request. This field can be set to one of the following: USE_PEER: Principal will be set to the identity from peer authentication. USE_ORIGIN: Principal will be set to the identity from origin authentication.
 */
var AuthenticationPolicyPrincipalBindingEnum;
(function (AuthenticationPolicyPrincipalBindingEnum) {
    AuthenticationPolicyPrincipalBindingEnum["Invalid"] = "INVALID";
    AuthenticationPolicyPrincipalBindingEnum["UseOrigin"] = "USE_ORIGIN";
    AuthenticationPolicyPrincipalBindingEnum["UsePeer"] = "USE_PEER";
})(AuthenticationPolicyPrincipalBindingEnum = exports.AuthenticationPolicyPrincipalBindingEnum || (exports.AuthenticationPolicyPrincipalBindingEnum = {}));
/**
 * [Deprecated] The authentication settings for the backend service. The authentication settings for the backend service.
 */
var AuthenticationPolicy = /** @class */ (function (_super) {
    __extends(AuthenticationPolicy, _super);
    function AuthenticationPolicy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: originauthenticationmethod_1.OriginAuthenticationMethod }),
        (0, class_transformer_1.Expose)({ name: "origins" }),
        (0, class_transformer_1.Type)(function () { return originauthenticationmethod_1.OriginAuthenticationMethod; }),
        __metadata("design:type", Array)
    ], AuthenticationPolicy.prototype, "origins", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: peerauthenticationmethod_1.PeerAuthenticationMethod }),
        (0, class_transformer_1.Expose)({ name: "peers" }),
        (0, class_transformer_1.Type)(function () { return peerauthenticationmethod_1.PeerAuthenticationMethod; }),
        __metadata("design:type", Array)
    ], AuthenticationPolicy.prototype, "peers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "principalBinding" }),
        __metadata("design:type", String)
    ], AuthenticationPolicy.prototype, "principalBinding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serverTlsContext" }),
        (0, class_transformer_1.Type)(function () { return tlscontext_1.TlsContext; }),
        __metadata("design:type", tlscontext_1.TlsContext)
    ], AuthenticationPolicy.prototype, "serverTlsContext", void 0);
    return AuthenticationPolicy;
}(utils_1.SpeakeasyBase));
exports.AuthenticationPolicy = AuthenticationPolicy;
