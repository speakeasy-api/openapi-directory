"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import face as shared_face
from ..shared import facedetail as shared_facedetail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FaceRecord:
    r"""Object containing both the face metadata (stored in the backend database), and facial attributes that are detected but aren't stored in the database."""
    
    face: Optional[shared_face.Face] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Face'), 'exclude': lambda f: f is None }})  
    face_detail: Optional[shared_facedetail.FaceDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FaceDetail'), 'exclude': lambda f: f is None }})  
    