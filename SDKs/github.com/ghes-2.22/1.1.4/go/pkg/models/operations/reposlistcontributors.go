// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposListContributorsPathParams struct {
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	Repo  string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposListContributorsQueryParams struct {
	// Set to `1` or `true` to include anonymous contributors in results.
	Anon *string `queryParam:"style=form,explode=true,name=anon"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
}

type ReposListContributorsRequest struct {
	PathParams  ReposListContributorsPathParams
	QueryParams ReposListContributorsQueryParams
}

type ReposListContributorsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// if repository contains content
	Contributors []shared.Contributor
}
