"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionEvent:
    r"""Describes changes to subscription and billing states."""
    
    effective_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effective_date') }})
    r"""The date, in YYYY-MM-DD format (for
    example, 2013-01-15), when the subscription event went into effect.
    """  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The ID of the subscription event."""  
    plan_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_id') }})
    r"""The ID of the subscription plan associated with the subscription."""  
    subscription_event_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription_event_type') }})
    r"""Type of the subscription event."""  
    info: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('info'), 'exclude': lambda f: f is None }})  
    