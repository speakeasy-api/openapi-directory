"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetNumbersRandomSecurity:
    
    x_mathtools_api_secret: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Mathtools-Api-Secret' }})  
    

@dataclasses.dataclass
class GetNumbersRandomRequest:
    
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': True }})
    r"""Maximum Number value"""  
    min: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'min', 'style': 'form', 'explode': True }})
    r"""Minimum Number value in the range"""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'total', 'style': 'form', 'explode': True }})
    r"""Total number of random numbers to generate. Defaults to 1"""  
    

@dataclasses.dataclass
class GetNumbersRandomResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    