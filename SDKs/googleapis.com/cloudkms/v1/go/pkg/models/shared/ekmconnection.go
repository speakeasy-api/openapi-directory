// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// EkmConnection - An EkmConnection represents an individual EKM connection. It can be used for creating CryptoKeys and CryptoKeyVersions with a ProtectionLevel of EXTERNAL_VPC, as well as performing cryptographic operations using keys created within the EkmConnection.
type EkmConnection struct {
	// Output only. The time at which the EkmConnection was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. Etag of the currently stored EkmConnection.
	Etag *string `json:"etag,omitempty"`
	// Output only. The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.
	Name *string `json:"name,omitempty"`
	// A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
	ServiceResolvers []ServiceResolver `json:"serviceResolvers,omitempty"`
}

// EkmConnectionInput - An EkmConnection represents an individual EKM connection. It can be used for creating CryptoKeys and CryptoKeyVersions with a ProtectionLevel of EXTERNAL_VPC, as well as performing cryptographic operations using keys created within the EkmConnection.
type EkmConnectionInput struct {
	// Optional. Etag of the currently stored EkmConnection.
	Etag *string `json:"etag,omitempty"`
	// A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
	ServiceResolvers []ServiceResolverInput `json:"serviceResolvers,omitempty"`
}
