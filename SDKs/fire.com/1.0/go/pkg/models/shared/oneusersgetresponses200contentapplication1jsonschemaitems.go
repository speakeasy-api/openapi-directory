// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum - Operating system of device.
type OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum string

const (
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnumAndroid OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum = "Android"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnumIos     OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum = "IOS"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnumOther   OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum = "OTHER"
)

func (e *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Android":
		fallthrough
	case "IOS":
		fallthrough
	case "OTHER":
		*e = OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum: %s", s)
	}
}

// OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum - type of device.
type OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum string

const (
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnumIPhone  OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum = "iPhone"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnumAndroid OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum = "Android"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnumOther   OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum = "Other"
)

func (e *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "iPhone":
		fallthrough
	case "Android":
		fallthrough
	case "Other":
		*e = OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum: %s", s)
	}
}

// OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum - Status of user
type OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum string

const (
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnumLive    OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum = "LIVE"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnumClosed  OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum = "CLOSED"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnumLocked  OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum = "LOCKED"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnumSmsSent OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum = "SMS_SENT"
)

func (e *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIVE":
		fallthrough
	case "CLOSED":
		fallthrough
	case "LOCKED":
		fallthrough
	case "SMS_SENT":
		*e = OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum: %s", s)
	}
}

type OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplication struct {
	// Operating system of device.
	Os *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationOSEnum `json:"OS,omitempty"`
	// Business user ID
	BusinessUserID *int64 `json:"businessUserId,omitempty"`
	// Client ID of user.
	ClientID *string `json:"clientID,omitempty"`
	// type of device.
	DeviceName *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationDeviceNameEnum `json:"deviceName,omitempty"`
	// OS version for device.
	DeviceOSVersion *string `json:"deviceOSVersion,omitempty"`
	// Mobile application id for user.
	MobileApplicationID *int64 `json:"mobileApplicationId,omitempty"`
	// Status of user
	Status *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplicationStatusEnum `json:"status,omitempty"`
}

// OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum - User role
type OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum string

const (
	OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnumAdmin    OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum = "ADMIN"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnumFullUser OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum = "FULL_USER"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnumReadOnly OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum = "READ_ONLY"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnumCardOnly OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum = "CARD_ONLY"
)

func (e *OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ADMIN":
		fallthrough
	case "FULL_USER":
		fallthrough
	case "READ_ONLY":
		fallthrough
	case "CARD_ONLY":
		*e = OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum: %s", s)
	}
}

// OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum - Status of user
type OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum string

const (
	OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnumLive        OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum = "LIVE"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnumClosed      OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum = "CLOSED"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnumFrozen      OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum = "FROZEN"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnumInviteSent  OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum = "INVITE_SENT"
	OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnumSmsCodeSent OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum = "SMS_CODE_SENT"
)

func (e *OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIVE":
		fallthrough
	case "CLOSED":
		fallthrough
	case "FROZEN":
		fallthrough
	case "INVITE_SENT":
		fallthrough
	case "SMS_CODE_SENT":
		*e = OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum: %s", s)
	}
}

// OneusersGetResponses200ContentApplication1jsonSchemaItems - Unique information about a User.
type OneusersGetResponses200ContentApplication1jsonSchemaItems struct {
	// email address for user
	EmailAddress *string `json:"emailAddress,omitempty"`
	// User first name
	FirstName *string `json:"firstName,omitempty"`
	// The User ID for this User
	ID *int64 `json:"id,omitempty"`
	// User second name
	LastName *string `json:"lastName,omitempty"`
	// Timestamp on when user last logged in.
	Lastlogin                *string                                                                     `json:"lastlogin,omitempty"`
	MobileApplicationDetails *OneusersGetResponses200ContentApplication1jsonSchemaItemsMobileApplication `json:"mobileApplicationDetails,omitempty"`
	// User mobile number
	MobileNumber *string `json:"mobileNumber,omitempty"`
	// User role
	Role *OneusersGetResponses200ContentApplication1jsonSchemaItemsRoleEnum `json:"role,omitempty"`
	// Status of user
	Status *OneusersGetResponses200ContentApplication1jsonSchemaItemsStatusEnum `json:"status,omitempty"`
	// Users Cvl type ID (shows up when status is LIVE)
	UserCvl *string `json:"userCvl,omitempty"`
}
