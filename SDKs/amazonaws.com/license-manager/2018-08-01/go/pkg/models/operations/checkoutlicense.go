// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CheckoutLicenseXAmzTargetEnum
type CheckoutLicenseXAmzTargetEnum string

const (
	CheckoutLicenseXAmzTargetEnumAwsLicenseManagerCheckoutLicense CheckoutLicenseXAmzTargetEnum = "AWSLicenseManager.CheckoutLicense"
)

func (e *CheckoutLicenseXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSLicenseManager.CheckoutLicense":
		*e = CheckoutLicenseXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckoutLicenseXAmzTargetEnum: %s", s)
	}
}

type CheckoutLicenseHeaders struct {
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CheckoutLicenseXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CheckoutLicenseRequest struct {
	Headers CheckoutLicenseHeaders
	Request shared.CheckoutLicenseRequest `request:"mediaType=application/json"`
}

type CheckoutLicenseResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	// Success
	CheckoutLicenseResponse *shared.CheckoutLicenseResponse
	ContentType             string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// NoEntitlementsAllowedException
	NoEntitlementsAllowedException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	// RedirectException
	RedirectException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServerInternalException
	ServerInternalException interface{}
	// UnsupportedDigitalSignatureMethodException
	UnsupportedDigitalSignatureMethodException interface{}
	// ValidationException
	ValidationException interface{}
}
