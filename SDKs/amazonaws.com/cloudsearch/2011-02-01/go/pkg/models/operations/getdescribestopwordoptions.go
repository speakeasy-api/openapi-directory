// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeStopwordOptionsActionEnum
type GETDescribeStopwordOptionsActionEnum string

const (
	GETDescribeStopwordOptionsActionEnumDescribeStopwordOptions GETDescribeStopwordOptionsActionEnum = "DescribeStopwordOptions"
)

func (e *GETDescribeStopwordOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeStopwordOptions":
		*e = GETDescribeStopwordOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeStopwordOptionsActionEnum: %s", s)
	}
}

// GETDescribeStopwordOptionsVersionEnum
type GETDescribeStopwordOptionsVersionEnum string

const (
	GETDescribeStopwordOptionsVersionEnumTwoThousandAndEleven0201 GETDescribeStopwordOptionsVersionEnum = "2011-02-01"
)

func (e *GETDescribeStopwordOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-02-01":
		*e = GETDescribeStopwordOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeStopwordOptionsVersionEnum: %s", s)
	}
}

type GETDescribeStopwordOptionsQueryParams struct {
	Action     GETDescribeStopwordOptionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                                `queryParam:"style=form,explode=true,name=DomainName"`
	Version    GETDescribeStopwordOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeStopwordOptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeStopwordOptionsRequest struct {
	QueryParams GETDescribeStopwordOptionsQueryParams
	Headers     GETDescribeStopwordOptionsHeaders
}

type GETDescribeStopwordOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
