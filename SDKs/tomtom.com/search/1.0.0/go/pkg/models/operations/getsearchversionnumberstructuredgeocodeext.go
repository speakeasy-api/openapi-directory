// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSearchVersionNumberStructuredGeocodeExtPathParams struct {
	// Expected response format.
	Ext shared.ExtEnum `pathParam:"style=simple,explode=false,name=ext"`
	// Service version number. The current value is 2.
	VersionNumber shared.VersionNumberEnum `pathParam:"style=simple,explode=false,name=versionNumber"`
}

type GetSearchVersionNumberStructuredGeocodeExtQueryParams struct {
	// 2 or 3 letter country code (e.g.: FR, ES).
	CountryCode string `queryParam:"style=form,explode=true,name=countryCode"`
	// The county for the structured address.
	CountrySecondarySubdivision *string `queryParam:"style=form,explode=true,name=countrySecondarySubdivision"`
	// The state or province for the structured address.
	CountrySubdivision *string `queryParam:"style=form,explode=true,name=countrySubdivision"`
	// The named area for the structured address.
	CountryTertiarySubdivision *string `queryParam:"style=form,explode=true,name=countryTertiarySubdivision"`
	// The cross street name for the structured address.
	CrossStreet *string `queryParam:"style=form,explode=true,name=crossStreet"`
	// Indexes for which extended postal codes should be included in the results. Available indexes are:
	//   - <b>Addr</b> = Address ranges
	//   - <b>Geo</b> = Geographies
	//   - <b>PAD</b> = Point Addresses
	//   - <b>POI</b> = Points of Interest
	//   - <b>Str</b> = Streets
	//   - <b>XStr</b> = Cross Streets (intersections)
	ExtendedPostalCodesFor *string `queryParam:"style=form,explode=true,name=extendedPostalCodesFor"`
	// Language in which search results should be returned. Should be one of <a href="/search-api/search-api-documentation/supported-languages">supported IETF language tags</a>, case insensitive.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// Maximum number of search results that will be returned.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// The municipality (city/town) for the structured address.
	Municipality *string `queryParam:"style=form,explode=true,name=municipality"`
	// The municipality subdivision (sub/super city) for the structured address.
	MunicipalitySubdivision *string `queryParam:"style=form,explode=true,name=municipalitySubdivision"`
	// Starting offset of the returned results within the full result set.
	Ofs *int64 `queryParam:"style=form,explode=true,name=ofs"`
	// The zip code or postal code for the structured address.
	PostalCode *string `queryParam:"style=form,explode=true,name=postalCode"`
	// The street name for the structured address.
	StreetName *string `queryParam:"style=form,explode=true,name=streetName"`
	// The street number for the structured address.
	StreetNumber *string `queryParam:"style=form,explode=true,name=streetNumber"`
}

type GetSearchVersionNumberStructuredGeocodeExtRequest struct {
	PathParams  GetSearchVersionNumberStructuredGeocodeExtPathParams
	QueryParams GetSearchVersionNumberStructuredGeocodeExtQueryParams
}

type GetSearchVersionNumberStructuredGeocodeExtResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
