/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PUTDebitMemoItemType } from "./putdebitmemoitemtype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Whether the debit memo is transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
 *
 * @remarks
 *
 */
export enum PUTDebitMemoTypeTransferredToAccountingEnum {
  Processing = "Processing",
  Yes = "Yes",
  No = "No",
  Error = "Error",
  Ignore = "Ignore",
}

/**
 * Container for custom fields of a Debit Memo object.
 *
 * @remarks
 *
 */
export class PUTDebitMemoType extends SpeakeasyBase {
  /**
   * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationId__NS" })
  integrationIdNS?: string;

  /**
   * Status of the debit memo's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationStatus__NS" })
  integrationStatusNS?: string;

  /**
   * Date when the debit memo was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SyncDate__NS" })
  syncDateNS?: string;

  /**
   * Whether debit memos are automatically picked up for processing in the corresponding payment run.
   *
   * @remarks
   *
   * By default, debit memos are automatically picked up for processing in the corresponding payment run.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoPay" })
  autoPay?: boolean;

  /**
   * Comments about the debit memo.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * The date by which the payment for the debit memo is due, in `yyyy-mm-dd` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dueDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * The date when the debit memo takes effect.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * Container for debit memo items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: PUTDebitMemoItemType })
  @Expose({ name: "items" })
  @Type(() => PUTDebitMemoItemType)
  items?: PUTDebitMemoItemType[];

  /**
   * A code identifying the reason for the transaction. The value must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reasonCode" })
  reasonCode?: string;

  /**
   * Whether the debit memo is transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transferredToAccounting" })
  transferredToAccounting?: PUTDebitMemoTypeTransferredToAccountingEnum;
}
