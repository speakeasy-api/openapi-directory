"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import devicecgrouppermission_enum as shared_devicecgrouppermission_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Device:
    r"""<p>An object that represents a container instance host device.</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources and shouldn't be provided.</p> </note>"""
    
    host_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostPath') }})  
    container_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerPath'), 'exclude': lambda f: f is None }})  
    permissions: Optional[list[shared_devicecgrouppermission_enum.DeviceCgroupPermissionEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})  
    