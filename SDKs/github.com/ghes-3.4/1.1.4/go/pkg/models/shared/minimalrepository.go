// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type MinimalRepositoryLicense struct {
	Key    *string `json:"key,omitempty"`
	Name   *string `json:"name,omitempty"`
	NodeID *string `json:"node_id,omitempty"`
	SpdxID *string `json:"spdx_id,omitempty"`
	URL    *string `json:"url,omitempty"`
}

type MinimalRepositoryPermissions struct {
	Admin    *bool `json:"admin,omitempty"`
	Maintain *bool `json:"maintain,omitempty"`
	Pull     *bool `json:"pull,omitempty"`
	Push     *bool `json:"push,omitempty"`
	Triage   *bool `json:"triage,omitempty"`
}

// MinimalRepository - Minimal Repository
type MinimalRepository struct {
	AllowForking *bool   `json:"allow_forking,omitempty"`
	ArchiveURL   string  `json:"archive_url"`
	Archived     *bool   `json:"archived,omitempty"`
	AssigneesURL string  `json:"assignees_url"`
	BlobsURL     string  `json:"blobs_url"`
	BranchesURL  string  `json:"branches_url"`
	CloneURL     *string `json:"clone_url,omitempty"`
	// Code Of Conduct
	CodeOfConduct       *CodeOfConduct            `json:"code_of_conduct,omitempty"`
	CollaboratorsURL    string                    `json:"collaborators_url"`
	CommentsURL         string                    `json:"comments_url"`
	CommitsURL          string                    `json:"commits_url"`
	CompareURL          string                    `json:"compare_url"`
	ContentsURL         string                    `json:"contents_url"`
	ContributorsURL     string                    `json:"contributors_url"`
	CreatedAt           *time.Time                `json:"created_at,omitempty"`
	DefaultBranch       *string                   `json:"default_branch,omitempty"`
	DeleteBranchOnMerge *bool                     `json:"delete_branch_on_merge,omitempty"`
	DeploymentsURL      string                    `json:"deployments_url"`
	Description         string                    `json:"description"`
	Disabled            *bool                     `json:"disabled,omitempty"`
	DownloadsURL        string                    `json:"downloads_url"`
	EventsURL           string                    `json:"events_url"`
	Fork                bool                      `json:"fork"`
	Forks               *int64                    `json:"forks,omitempty"`
	ForksCount          *int64                    `json:"forks_count,omitempty"`
	ForksURL            string                    `json:"forks_url"`
	FullName            string                    `json:"full_name"`
	GitCommitsURL       string                    `json:"git_commits_url"`
	GitRefsURL          string                    `json:"git_refs_url"`
	GitTagsURL          string                    `json:"git_tags_url"`
	GitURL              *string                   `json:"git_url,omitempty"`
	HasDownloads        *bool                     `json:"has_downloads,omitempty"`
	HasIssues           *bool                     `json:"has_issues,omitempty"`
	HasPages            *bool                     `json:"has_pages,omitempty"`
	HasProjects         *bool                     `json:"has_projects,omitempty"`
	HasWiki             *bool                     `json:"has_wiki,omitempty"`
	Homepage            *string                   `json:"homepage,omitempty"`
	HooksURL            string                    `json:"hooks_url"`
	HTMLURL             string                    `json:"html_url"`
	ID                  int64                     `json:"id"`
	IsTemplate          *bool                     `json:"is_template,omitempty"`
	IssueCommentURL     string                    `json:"issue_comment_url"`
	IssueEventsURL      string                    `json:"issue_events_url"`
	IssuesURL           string                    `json:"issues_url"`
	KeysURL             string                    `json:"keys_url"`
	LabelsURL           string                    `json:"labels_url"`
	Language            *string                   `json:"language,omitempty"`
	LanguagesURL        string                    `json:"languages_url"`
	License             *MinimalRepositoryLicense `json:"license,omitempty"`
	MergesURL           string                    `json:"merges_url"`
	MilestonesURL       string                    `json:"milestones_url"`
	MirrorURL           *string                   `json:"mirror_url,omitempty"`
	Name                string                    `json:"name"`
	NetworkCount        *int64                    `json:"network_count,omitempty"`
	NodeID              string                    `json:"node_id"`
	NotificationsURL    string                    `json:"notifications_url"`
	OpenIssues          *int64                    `json:"open_issues,omitempty"`
	OpenIssuesCount     *int64                    `json:"open_issues_count,omitempty"`
	// A GitHub user.
	Owner       SimpleUser                    `json:"owner"`
	Permissions *MinimalRepositoryPermissions `json:"permissions,omitempty"`
	Private     bool                          `json:"private"`
	PullsURL    string                        `json:"pulls_url"`
	PushedAt    *time.Time                    `json:"pushed_at,omitempty"`
	ReleasesURL string                        `json:"releases_url"`
	// The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.
	Size             *int64     `json:"size,omitempty"`
	SSHURL           *string    `json:"ssh_url,omitempty"`
	StargazersCount  *int64     `json:"stargazers_count,omitempty"`
	StargazersURL    string     `json:"stargazers_url"`
	StatusesURL      string     `json:"statuses_url"`
	SubscribersCount *int64     `json:"subscribers_count,omitempty"`
	SubscribersURL   string     `json:"subscribers_url"`
	SubscriptionURL  string     `json:"subscription_url"`
	SvnURL           *string    `json:"svn_url,omitempty"`
	TagsURL          string     `json:"tags_url"`
	TeamsURL         string     `json:"teams_url"`
	TempCloneToken   *string    `json:"temp_clone_token,omitempty"`
	Topics           []string   `json:"topics,omitempty"`
	TreesURL         string     `json:"trees_url"`
	UpdatedAt        *time.Time `json:"updated_at,omitempty"`
	URL              string     `json:"url"`
	Visibility       *string    `json:"visibility,omitempty"`
	Watchers         *int64     `json:"watchers,omitempty"`
	WatchersCount    *int64     `json:"watchers_count,omitempty"`
}
