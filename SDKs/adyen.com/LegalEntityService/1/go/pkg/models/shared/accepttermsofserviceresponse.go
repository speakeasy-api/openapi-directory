// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AcceptTermsOfServiceResponseTypeEnum - The type of Terms of Service.
type AcceptTermsOfServiceResponseTypeEnum string

const (
	AcceptTermsOfServiceResponseTypeEnumAdyenAccount              AcceptTermsOfServiceResponseTypeEnum = "adyenAccount"
	AcceptTermsOfServiceResponseTypeEnumAdyenCapital              AcceptTermsOfServiceResponseTypeEnum = "adyenCapital"
	AcceptTermsOfServiceResponseTypeEnumAdyenCard                 AcceptTermsOfServiceResponseTypeEnum = "adyenCard"
	AcceptTermsOfServiceResponseTypeEnumAdyenForPlatformsAdvanced AcceptTermsOfServiceResponseTypeEnum = "adyenForPlatformsAdvanced"
	AcceptTermsOfServiceResponseTypeEnumAdyenForPlatformsManage   AcceptTermsOfServiceResponseTypeEnum = "adyenForPlatformsManage"
	AcceptTermsOfServiceResponseTypeEnumAdyenFranchisee           AcceptTermsOfServiceResponseTypeEnum = "adyenFranchisee"
	AcceptTermsOfServiceResponseTypeEnumAdyenIssuing              AcceptTermsOfServiceResponseTypeEnum = "adyenIssuing"
)

func (e AcceptTermsOfServiceResponseTypeEnum) ToPointer() *AcceptTermsOfServiceResponseTypeEnum {
	return &e
}

func (e *AcceptTermsOfServiceResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "adyenAccount":
		fallthrough
	case "adyenCapital":
		fallthrough
	case "adyenCard":
		fallthrough
	case "adyenForPlatformsAdvanced":
		fallthrough
	case "adyenForPlatformsManage":
		fallthrough
	case "adyenFranchisee":
		fallthrough
	case "adyenIssuing":
		*e = AcceptTermsOfServiceResponseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcceptTermsOfServiceResponseTypeEnum: %v", v)
	}
}

// AcceptTermsOfServiceResponse - OK - the request has succeeded.
type AcceptTermsOfServiceResponse struct {
	// The unique identifier of the user that accepted the Terms of Service.
	AcceptedBy *string `json:"acceptedBy,omitempty"`
	// The unique identifier of the Terms of Service acceptance.
	ID *string `json:"id,omitempty"`
	// The IP address of the user that accepted the Terms of Service.
	IPAddress *string `json:"ipAddress,omitempty"`
	// The language used for the Terms of Service document, specified by the two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code. For example, **nl** for Dutch.
	Language *string `json:"language,omitempty"`
	// The unique identifier of the Terms of Service document.
	TermsOfServiceDocumentID *string `json:"termsOfServiceDocumentId,omitempty"`
	// The type of Terms of Service.
	Type *AcceptTermsOfServiceResponseTypeEnum `json:"type,omitempty"`
}
