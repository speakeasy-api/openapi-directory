// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RuntimeEnvironmentEnum string

const (
	RuntimeEnvironmentEnumSql10           RuntimeEnvironmentEnum = "SQL-1_0"
	RuntimeEnvironmentEnumFlink16         RuntimeEnvironmentEnum = "FLINK-1_6"
	RuntimeEnvironmentEnumFlink18         RuntimeEnvironmentEnum = "FLINK-1_8"
	RuntimeEnvironmentEnumZeppelinFlink10 RuntimeEnvironmentEnum = "ZEPPELIN-FLINK-1_0"
	RuntimeEnvironmentEnumFlink111        RuntimeEnvironmentEnum = "FLINK-1_11"
	RuntimeEnvironmentEnumFlink113        RuntimeEnvironmentEnum = "FLINK-1_13"
	RuntimeEnvironmentEnumZeppelinFlink20 RuntimeEnvironmentEnum = "ZEPPELIN-FLINK-2_0"
	RuntimeEnvironmentEnumFlink115        RuntimeEnvironmentEnum = "FLINK-1_15"
)

func (e *RuntimeEnvironmentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SQL-1_0":
		fallthrough
	case "FLINK-1_6":
		fallthrough
	case "FLINK-1_8":
		fallthrough
	case "ZEPPELIN-FLINK-1_0":
		fallthrough
	case "FLINK-1_11":
		fallthrough
	case "FLINK-1_13":
		fallthrough
	case "ZEPPELIN-FLINK-2_0":
		fallthrough
	case "FLINK-1_15":
		*e = RuntimeEnvironmentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RuntimeEnvironmentEnum: %s", s)
	}
}
