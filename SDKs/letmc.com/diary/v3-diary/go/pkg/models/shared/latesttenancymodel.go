// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// LatestTenancyModel - Holds information on the most recent tenancy linked to the property.
type LatestTenancyModel struct {
	// Access Arrangements
	AccessArrangements *string `json:"AccessArrangements,omitempty"`
	// Arrange access Mobile 1
	AccessMobile1 *string `json:"AccessMobile1,omitempty"`
	// Arrange access Mobile 2
	AccessMobile2 *string `json:"AccessMobile2,omitempty"`
	// Arrange access Mobile 3
	AccessMobile3 *string `json:"AccessMobile3,omitempty"`
	// Arrange access contact name 1
	AccessName1 *string `json:"AccessName1,omitempty"`
	// Arrange access contact name 2
	AccessName2 *string `json:"AccessName2,omitempty"`
	// Arrange access contact name 3
	AccessName3 *string `json:"AccessName3,omitempty"`
	// ETag
	ETag *string `json:"ETag,omitempty"`
	// The end date of the Tenancy
	EndDate *time.Time `json:"EndDate,omitempty"`
	// The fixed date of the Tenancy
	FixedDate *time.Time `json:"FixedDate,omitempty"`
	// The unique global reference of the Tenancy
	GlobalReference *string `json:"GlobalReference,omitempty"`
	// Has the Tenancy ended?
	IsTenancyEnded *bool `json:"IsTenancyEnded,omitempty"`
	// Is the tenancy Proposed?
	IsTenancyProposed *bool `json:"IsTenancyProposed,omitempty"`
	// Is the tenancy signed?
	IsTenancySigned *bool `json:"IsTenancySigned,omitempty"`
	// A collection of tenants linked to the tenancy:-
	LinkedTenants []LinkedTenantModel `json:"LinkedTenants,omitempty"`
	// OID
	Oid *string `json:"OID,omitempty"`
	// The start date of the Tenancy
	StartDate *time.Time `json:"StartDate,omitempty"`
}
