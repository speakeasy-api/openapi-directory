"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum(str, Enum):
    r"""The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>."""
    USD = 'USD'


@dataclasses.dataclass
class PurchaseReservedInstancesOfferingRequestLimitPrice:
    r"""Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices."""
    
    amount: Optional[float] = dataclasses.field(default=None)  
    currency_code: Optional[PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class PurchaseReservedInstancesOfferingRequest:
    r"""Contains the parameters for PurchaseReservedInstancesOffering."""
    
    instance_count: int = dataclasses.field()  
    reserved_instances_offering_id: str = dataclasses.field()  
    dry_run: Optional[bool] = dataclasses.field(default=None)  
    limit_price: Optional[PurchaseReservedInstancesOfferingRequestLimitPrice] = dataclasses.field(default=None)  
    purchase_time: Optional[datetime] = dataclasses.field(default=None)  
    