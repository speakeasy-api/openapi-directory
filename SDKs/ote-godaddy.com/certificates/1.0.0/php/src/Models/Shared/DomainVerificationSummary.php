<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DomainVerificationSummary
{
    /**
     * Timestamp indicating when the domain verification process was started
     * 
     * @var string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
    /**
     * DCE verification type token (if DCE verification type).
     * 
     * @var ?string $dceToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('dceToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dceToken = null;
    
    /**
     * Domain name
     * 
     * @var string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $domain;
    
    /**
     * A unique identifier that can be leveraged for retrieving domain verification related information. Primarily used when troubleshooting a request
     * 
     * @var int $domainEntityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('domainEntityId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $domainEntityId;
    
    /**
     * Timestamp indicating when the domain verification process was last updated
     * 
     * @var string $modifiedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $modifiedAt;
    
    /**
     * Domain verification status: 
     * 
     *   * `AWAITING` - Verification pending customer input
     *   * `INVALID` - SAN connected to a cancelled request
     *   * `COMPLETED` - Verification completed
     *   * `FAILED_VERIFICATION` - Verification failed
     *   * `PENDING_POSSIBLE_FRAUD` - Flagged for a system level fraud review
     *   * `VERIFIED_POSSIBLE_FRAUD` - Fraud detection reviewed but verified
     *   * `DROPPED` - SAN dropped from request
     *   * `REVOKED_CERT` - Certificate revoked
     *   * `DROPPED_GOOGLE_SAFE_BROWSING` - SAN dropped from request due to Google Safe Browsing check
     *   * `DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION` - SAN dropped from request due to Certificate Authorization Authority DNS record check
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryStatusEnum>')]
    public DomainVerificationSummaryStatusEnum $status;
    
    /**
     * Domain verification type: 
     * 
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN` - Domain verified using domain control verification email sent to admin@<your.domain.com>
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR` - Domain verified using domain control verification email sent to administrator@<your.domain.com>
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER` - Domain verified using domain control verification email sent to hostmaster@<your.domain.com>
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER` - Domain verified using domain control verification email sent to postmaster@<your.domain.com>
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER` - Domain verified using domain control verification email sent to webmaster@<your.domain.com>
     *   * `DOMAIN_ACCESS_EMAIL` - Domain verified using a domain access email
     *   * `DOMAIN_ACCESS_LETTER` - Customer completed a domain access letter which was used for domain verification
     *   * `DOMAIN_CONTROL_EMAIL` - Domain verified using HTML file or DNS zone file text value
     *   * `DOMAIN_ZONE_CONTROL` - DNS zone file containing a pre-generated text value used for domain verification
     *   * `MANUAL_DOMAIN_ACCESS_EMAIL` - DAE sent to an email address manually entered by a rep
     *   * `PREVIOUS_DOMAIN_ACCESS_EMAIL` - Customers domain access email for a prior certificate request was used for domain verification
     *   * `REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER` - Representative reviewed a customer provided domain access letter and verified domain
     *   * `REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL` - Representative verified domain using a manual domain zone control check
     *   * `REGISTRATION_AUTHORITY_OVERRIDE` - Representative verified domain using alternative methods
     *   * `REGISTRATION_AUTHORITY_WEBSITE_CONTROL` - Representative verified domain using a manual website control check
     *   * `CUSTOMER_OWNED` - Validated customer account information used for domain control verification
     *   * `WEBSITE_CONTROL` - HTML file in root website directory containing pre-generated value used for domain control verification
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryTypeEnum>')]
    public DomainVerificationSummaryTypeEnum $type;
    
    /**
     * Type of domain name used for domain verification
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryUsageEnum $usage
     */
	#[\JMS\Serializer\Annotation\SerializedName('usage')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryUsageEnum>')]
    public DomainVerificationSummaryUsageEnum $usage;
    
	public function __construct()
	{
		$this->createdAt = "";
		$this->dceToken = null;
		$this->domain = "";
		$this->domainEntityId = 0;
		$this->modifiedAt = "";
		$this->status = \OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryStatusEnum::COMPLETED;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryTypeEnum::DOMAIN_CONTROL_EMAIL;
		$this->usage = \OpenAPI\OpenAPI\Models\Shared\DomainVerificationSummaryUsageEnum::COMMON_NAME;
	}
}
