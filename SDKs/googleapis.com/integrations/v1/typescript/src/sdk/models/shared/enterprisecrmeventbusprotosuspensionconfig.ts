/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoNotification } from "./enterprisecrmeventbusprotonotification";
import { EnterpriseCrmEventbusProtoSuspensionAuthPermissions } from "./enterprisecrmeventbusprotosuspensionauthpermissions";
import { EnterpriseCrmEventbusProtoSuspensionExpiration } from "./enterprisecrmeventbusprotosuspensionexpiration";
import { Expose, Type } from "class-transformer";

export class EnterpriseCrmEventbusProtoSuspensionConfig extends SpeakeasyBase {
  /**
   * Optional information to provide recipients of the suspension in addition to the resolution URL, typically containing relevant parameter values from the originating workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customMessage" })
  customMessage?: string;

  @SpeakeasyMetadata({ elemType: EnterpriseCrmEventbusProtoNotification })
  @Expose({ name: "notifications" })
  @Type(() => EnterpriseCrmEventbusProtoNotification)
  notifications?: EnterpriseCrmEventbusProtoNotification[];

  @SpeakeasyMetadata()
  @Expose({ name: "suspensionExpiration" })
  @Type(() => EnterpriseCrmEventbusProtoSuspensionExpiration)
  suspensionExpiration?: EnterpriseCrmEventbusProtoSuspensionExpiration;

  /**
   * Identities able to resolve this suspension.
   */
  @SpeakeasyMetadata({
    elemType: EnterpriseCrmEventbusProtoSuspensionAuthPermissions,
  })
  @Expose({ name: "whoMayResolve" })
  @Type(() => EnterpriseCrmEventbusProtoSuspensionAuthPermissions)
  whoMayResolve?: EnterpriseCrmEventbusProtoSuspensionAuthPermissions[];
}
