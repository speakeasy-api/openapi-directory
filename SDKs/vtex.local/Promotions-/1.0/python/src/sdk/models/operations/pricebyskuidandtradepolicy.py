"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional

PRICEBYSKU_IDANDTRADE_POLICY_SERVERS = [
	"https://rnb.{environment}.com.br/api/pricing/pvt",
]


@dataclasses.dataclass
class PricebyskuIdandtradePolicyRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    an: str = dataclasses.field(metadata={'query_param': { 'field_name': 'an', 'style': 'form', 'explode': True }})  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    sku_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'skuId', 'style': 'simple', 'explode': False }})  
    trade_policy: str = dataclasses.field(metadata={'path_param': { 'field_name': 'tradePolicy', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class PricebyskuIdandtradePolicyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    