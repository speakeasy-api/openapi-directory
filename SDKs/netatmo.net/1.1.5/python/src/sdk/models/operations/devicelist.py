"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import nadevicelistresponse as shared_nadevicelistresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class DevicelistSecurity:
    
    code_oauth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    password_oauth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class DevicelistAppTypeEnum(str, Enum):
    r"""Defines which device type will be returned by devicelist. It could be app_thermostat or app_station (by default if not provided)"""
    APP_THERMOSTAT = 'app_thermostat'
    APP_STATION = 'app_station'


@dataclasses.dataclass
class DevicelistRequest:
    
    app_type: Optional[DevicelistAppTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'app_type', 'style': 'form', 'explode': True }})
    r"""Defines which device type will be returned by devicelist. It could be app_thermostat or app_station (by default if not provided)"""  
    device_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'device_id', 'style': 'form', 'explode': True }})
    r"""Specify a device_id if you want to retrieve only this device informations."""  
    get_favorites: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'get_favorites', 'style': 'form', 'explode': True }})
    r"""When set to \\"true\\", the favorite devices of the user are returned. This flag is available only if the devices requested are Weather Stations."""  
    

@dataclasses.dataclass
class DevicelistResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    na_device_list_response: Optional[shared_nadevicelistresponse.NADeviceListResponse] = dataclasses.field(default=None)
    r"""Successful response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    