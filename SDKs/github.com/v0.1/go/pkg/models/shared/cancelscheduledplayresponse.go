// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CancelScheduledPlayResponseMessageEnum - Response message
type CancelScheduledPlayResponseMessageEnum string

const (
	CancelScheduledPlayResponseMessageEnumScheduledPlayCancelationExecuted         CancelScheduledPlayResponseMessageEnum = "Scheduled Play Cancelation Executed"
	CancelScheduledPlayResponseMessageEnumSchedPlayIDParameterMustBePresent        CancelScheduledPlayResponseMessageEnum = "SchedPlayId Parameter must be present"
	CancelScheduledPlayResponseMessageEnumScheduledPlayCancelationFailedIDNotFound CancelScheduledPlayResponseMessageEnum = "Scheduled Play Cancelation Failed -- ID not found"
	CancelScheduledPlayResponseMessageEnumScheduledPlayCancelationFailed           CancelScheduledPlayResponseMessageEnum = "Scheduled Play Cancelation Failed"
)

func (e *CancelScheduledPlayResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Scheduled Play Cancelation Executed":
		fallthrough
	case "SchedPlayId Parameter must be present":
		fallthrough
	case "Scheduled Play Cancelation Failed -- ID not found":
		fallthrough
	case "Scheduled Play Cancelation Failed":
		*e = CancelScheduledPlayResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelScheduledPlayResponseMessageEnum: %s", s)
	}
}

// CancelScheduledPlayResponse - Response
type CancelScheduledPlayResponse struct {
	// Response message
	Message CancelScheduledPlayResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
