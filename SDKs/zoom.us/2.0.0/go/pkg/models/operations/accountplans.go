// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AccountPlansRequest struct {
	// The account ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
}

// AccountPlans200ApplicationXMLPlanAudioStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPlanAudioStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanAudioStatusEnumActive  AccountPlans200ApplicationXMLPlanAudioStatusEnum = "active"
	AccountPlans200ApplicationXMLPlanAudioStatusEnumCancel  AccountPlans200ApplicationXMLPlanAudioStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPlanAudioStatusEnumExpired AccountPlans200ApplicationXMLPlanAudioStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPlanAudioStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPlanAudioStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanAudioStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationXMLPlanAudio - Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>
type AccountPlans200ApplicationXMLPlanAudio struct {
	// Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
	CalloutCountries *string
	// Dedicated dial-In numbers.
	DdiNumbers *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
	PremiumCountries *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPlanAudioStatusEnum
	// Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
	TollfreeCountries *string
	// Additional audio conferencing <a href="/api-reference/other-references/plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPlanBaseStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPlanBaseStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanBaseStatusEnumActive  AccountPlans200ApplicationXMLPlanBaseStatusEnum = "active"
	AccountPlans200ApplicationXMLPlanBaseStatusEnumCancel  AccountPlans200ApplicationXMLPlanBaseStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPlanBaseStatusEnumExpired AccountPlans200ApplicationXMLPlanBaseStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPlanBaseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPlanBaseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanBaseStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationXMLPlanBase struct {
	// Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPlanBaseStatusEnum
	// Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnumActive  AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum = "active"
	AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnumCancel  AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnumExpired AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationXMLPlanLargeMeeting - Account plan object.
type AccountPlans200ApplicationXMLPlanLargeMeeting struct {
	// Account plan number of hosts.
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPlanLargeMeetingStatusEnum
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum string

const (
	AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnumActive  AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum = "active"
	AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnumCancel  AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnumExpired AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationXMLPhonePlanPlanBase - Additional phone base plans.
type AccountPlans200ApplicationXMLPhonePlanPlanBase struct {
	// Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
	CalloutCountries *string
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPhonePlanPlanBaseStatusEnum
	// Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum string

const (
	AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnumActive  AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum = "active"
	AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnumCancel  AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnumExpired AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationXMLPhonePlanPlanCalling struct {
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPhonePlanPlanCallingStatusEnum
	// Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum string

const (
	AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnumActive  AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum = "active"
	AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnumCancel  AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnumExpired AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationXMLPhonePlanPlanNumber struct {
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPhonePlanPlanNumberStatusEnum
	// Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPhonePlan - Phone Plan Object
type AccountPlans200ApplicationXMLPhonePlan struct {
	// Additional phone base plans.
	PlanBase *AccountPlans200ApplicationXMLPhonePlanPlanBase
	// Additional phone calling plans.
	PlanCalling []AccountPlans200ApplicationXMLPhonePlanPlanCalling
	// Additional phone number plans.
	PlanNumber []AccountPlans200ApplicationXMLPhonePlanPlanNumber
}

// AccountPlans200ApplicationXMLPlanRecordingStatusEnum - Status of additional Cloud Recording plan.
type AccountPlans200ApplicationXMLPlanRecordingStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanRecordingStatusEnumActive    AccountPlans200ApplicationXMLPlanRecordingStatusEnum = "Active"
	AccountPlans200ApplicationXMLPlanRecordingStatusEnumCancelled AccountPlans200ApplicationXMLPlanRecordingStatusEnum = "Cancelled"
)

func (e *AccountPlans200ApplicationXMLPlanRecordingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Cancelled":
		*e = AccountPlans200ApplicationXMLPlanRecordingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanRecordingStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnumActive  AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum = "active"
	AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnumCancel  AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnumExpired AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationXMLPlanRoomConnector struct {
	// Account plan number of hosts.
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPlanRoomConnectorStatusEnum
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPlanWebinarStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPlanWebinarStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanWebinarStatusEnumActive  AccountPlans200ApplicationXMLPlanWebinarStatusEnum = "active"
	AccountPlans200ApplicationXMLPlanWebinarStatusEnumCancel  AccountPlans200ApplicationXMLPlanWebinarStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPlanWebinarStatusEnumExpired AccountPlans200ApplicationXMLPlanWebinarStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPlanWebinarStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPlanWebinarStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanWebinarStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationXMLPlanWebinar - Account plan object.
type AccountPlans200ApplicationXMLPlanWebinar struct {
	// Account plan number of hosts.
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPlanWebinarStatusEnum
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum - Status of the plan.
type AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum string

const (
	AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnumActive  AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum = "active"
	AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnumCancel  AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum = "cancel"
	AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnumExpired AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationXMLPlanZoomRooms struct {
	// Account plan number of hosts.
	Hosts *int64
	// Next invoice date for the plan.
	NextInvoiceDate *string
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string
	// Status of the plan.
	Status *AccountPlans200ApplicationXMLPlanZoomRoomsStatusEnum
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string
}

// AccountPlans200ApplicationXML - **HTTP Status Code:**`200`<br>
// Account's plans returned.
type AccountPlans200ApplicationXML struct {
	// Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>
	PlanAudio        *AccountPlans200ApplicationXMLPlanAudio
	PlanBase         *AccountPlans200ApplicationXMLPlanBase
	PlanLargeMeeting []AccountPlans200ApplicationXMLPlanLargeMeeting
	// Phone Plan Object
	PlanPhone *AccountPlans200ApplicationXMLPhonePlan
	// Additional Cloud Recording plan.
	PlanRecording *string
	// Next invoice date of Additional Cloud Recording plan.
	PlanRecordingNextInvoiceDate *string
	// Plan start date of Additional Cloud Recording plan.
	PlanRecordingServiceEffectiveDate *string
	// Status of additional Cloud Recording plan.
	PlanRecordingStatus *AccountPlans200ApplicationXMLPlanRecordingStatusEnum
	PlanRoomConnector   *AccountPlans200ApplicationXMLPlanRoomConnector
	PlanWebinar         []AccountPlans200ApplicationXMLPlanWebinar
	PlanZoomRooms       *AccountPlans200ApplicationXMLPlanZoomRooms
}

// AccountPlans200ApplicationJSONPlanAudioStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPlanAudioStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanAudioStatusEnumActive  AccountPlans200ApplicationJSONPlanAudioStatusEnum = "active"
	AccountPlans200ApplicationJSONPlanAudioStatusEnumCancel  AccountPlans200ApplicationJSONPlanAudioStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPlanAudioStatusEnumExpired AccountPlans200ApplicationJSONPlanAudioStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPlanAudioStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPlanAudioStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanAudioStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationJSONPlanAudio - Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>
type AccountPlans200ApplicationJSONPlanAudio struct {
	// Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
	CalloutCountries *string `json:"callout_countries,omitempty"`
	// Dedicated dial-In numbers.
	DdiNumbers *int64 `json:"ddi_numbers,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
	PremiumCountries *string `json:"premium_countries,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPlanAudioStatusEnum `json:"status,omitempty"`
	// Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
	TollfreeCountries *string `json:"tollfree_countries,omitempty"`
	// Additional audio conferencing <a href="/api-reference/other-references/plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPlanBaseStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPlanBaseStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanBaseStatusEnumActive  AccountPlans200ApplicationJSONPlanBaseStatusEnum = "active"
	AccountPlans200ApplicationJSONPlanBaseStatusEnumCancel  AccountPlans200ApplicationJSONPlanBaseStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPlanBaseStatusEnumExpired AccountPlans200ApplicationJSONPlanBaseStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPlanBaseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPlanBaseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanBaseStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationJSONPlanBase struct {
	// Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPlanBaseStatusEnum `json:"status,omitempty"`
	// Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnumActive  AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum = "active"
	AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnumCancel  AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnumExpired AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationJSONPlanLargeMeeting - Account plan object.
type AccountPlans200ApplicationJSONPlanLargeMeeting struct {
	// Account plan number of hosts.
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPlanLargeMeetingStatusEnum `json:"status,omitempty"`
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum string

const (
	AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnumActive  AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum = "active"
	AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnumCancel  AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnumExpired AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationJSONPhonePlanPlanBase - Additional phone base plans.
type AccountPlans200ApplicationJSONPhonePlanPlanBase struct {
	// Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
	CalloutCountries *string `json:"callout_countries,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPhonePlanPlanBaseStatusEnum `json:"status,omitempty"`
	// Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum string

const (
	AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnumActive  AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum = "active"
	AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnumCancel  AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnumExpired AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationJSONPhonePlanPlanCalling struct {
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPhonePlanPlanCallingStatusEnum `json:"status,omitempty"`
	// Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum string

const (
	AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnumActive  AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum = "active"
	AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnumCancel  AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnumExpired AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationJSONPhonePlanPlanNumber struct {
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPhonePlanPlanNumberStatusEnum `json:"status,omitempty"`
	// Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPhonePlan - Phone Plan Object
type AccountPlans200ApplicationJSONPhonePlan struct {
	// Additional phone base plans.
	PlanBase *AccountPlans200ApplicationJSONPhonePlanPlanBase `json:"plan_base,omitempty"`
	// Additional phone calling plans.
	PlanCalling []AccountPlans200ApplicationJSONPhonePlanPlanCalling `json:"plan_calling,omitempty"`
	// Additional phone number plans.
	PlanNumber []AccountPlans200ApplicationJSONPhonePlanPlanNumber `json:"plan_number,omitempty"`
}

// AccountPlans200ApplicationJSONPlanRecordingStatusEnum - Status of additional Cloud Recording plan.
type AccountPlans200ApplicationJSONPlanRecordingStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanRecordingStatusEnumActive    AccountPlans200ApplicationJSONPlanRecordingStatusEnum = "Active"
	AccountPlans200ApplicationJSONPlanRecordingStatusEnumCancelled AccountPlans200ApplicationJSONPlanRecordingStatusEnum = "Cancelled"
)

func (e *AccountPlans200ApplicationJSONPlanRecordingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Cancelled":
		*e = AccountPlans200ApplicationJSONPlanRecordingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanRecordingStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnumActive  AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum = "active"
	AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnumCancel  AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnumExpired AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationJSONPlanRoomConnector struct {
	// Account plan number of hosts.
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPlanRoomConnectorStatusEnum `json:"status,omitempty"`
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPlanWebinarStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPlanWebinarStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanWebinarStatusEnumActive  AccountPlans200ApplicationJSONPlanWebinarStatusEnum = "active"
	AccountPlans200ApplicationJSONPlanWebinarStatusEnumCancel  AccountPlans200ApplicationJSONPlanWebinarStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPlanWebinarStatusEnumExpired AccountPlans200ApplicationJSONPlanWebinarStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPlanWebinarStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPlanWebinarStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanWebinarStatusEnum: %s", s)
	}
}

// AccountPlans200ApplicationJSONPlanWebinar - Account plan object.
type AccountPlans200ApplicationJSONPlanWebinar struct {
	// Account plan number of hosts.
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPlanWebinarStatusEnum `json:"status,omitempty"`
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum - Status of the plan.
type AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum string

const (
	AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnumActive  AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum = "active"
	AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnumCancel  AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum = "cancel"
	AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnumExpired AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum = "expired"
)

func (e *AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "cancel":
		fallthrough
	case "expired":
		*e = AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum: %s", s)
	}
}

type AccountPlans200ApplicationJSONPlanZoomRooms struct {
	// Account plan number of hosts.
	Hosts *int64 `json:"hosts,omitempty"`
	// Next invoice date for the plan.
	NextInvoiceDate *string `json:"next_invoice_date,omitempty"`
	// Date at which the plan became effective on the account.
	ServiceEffectiveDate *string `json:"service_effective_date,omitempty"`
	// Status of the plan.
	Status *AccountPlans200ApplicationJSONPlanZoomRoomsStatusEnum `json:"status,omitempty"`
	// Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
	Type *string `json:"type,omitempty"`
}

// AccountPlans200ApplicationJSON - **HTTP Status Code:**`200`<br>
// Account's plans returned.
type AccountPlans200ApplicationJSON struct {
	// Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>
	PlanAudio        *AccountPlans200ApplicationJSONPlanAudio         `json:"plan_audio,omitempty"`
	PlanBase         *AccountPlans200ApplicationJSONPlanBase          `json:"plan_base,omitempty"`
	PlanLargeMeeting []AccountPlans200ApplicationJSONPlanLargeMeeting `json:"plan_large_meeting,omitempty"`
	// Phone Plan Object
	PlanPhone *AccountPlans200ApplicationJSONPhonePlan `json:"plan_phone,omitempty"`
	// Additional Cloud Recording plan.
	PlanRecording *string `json:"plan_recording,omitempty"`
	// Next invoice date of Additional Cloud Recording plan.
	PlanRecordingNextInvoiceDate *string `json:"plan_recording_next_invoice_date,omitempty"`
	// Plan start date of Additional Cloud Recording plan.
	PlanRecordingServiceEffectiveDate *string `json:"plan_recording_service_effective_date,omitempty"`
	// Status of additional Cloud Recording plan.
	PlanRecordingStatus *AccountPlans200ApplicationJSONPlanRecordingStatusEnum `json:"plan_recording_status,omitempty"`
	PlanRoomConnector   *AccountPlans200ApplicationJSONPlanRoomConnector       `json:"plan_room_connector,omitempty"`
	PlanWebinar         []AccountPlans200ApplicationJSONPlanWebinar            `json:"plan_webinar,omitempty"`
	PlanZoomRooms       *AccountPlans200ApplicationJSONPlanZoomRooms           `json:"plan_zoom_rooms,omitempty"`
}

type AccountPlansResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:**`200`<br>
	// Account's plans returned.
	//
	AccountPlans200ApplicationJSONObject *AccountPlans200ApplicationJSON
}
