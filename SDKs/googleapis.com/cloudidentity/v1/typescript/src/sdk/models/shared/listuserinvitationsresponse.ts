/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserInvitation } from "./userinvitation";
import { Expose, Type } from "class-transformer";

/**
 * Response message for UserInvitation listing request.
 */
export class ListUserInvitationsResponse extends SpeakeasyBase {
  /**
   * The token for the next page. If not empty, indicates that there may be more `UserInvitation` resources that match the listing request; this value can be used in a subsequent ListUserInvitationsRequest to get continued results with the current list call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The list of UserInvitation resources.
   */
  @SpeakeasyMetadata({ elemType: UserInvitation })
  @Expose({ name: "userInvitations" })
  @Type(() => UserInvitation)
  userInvitations?: UserInvitation[];
}
