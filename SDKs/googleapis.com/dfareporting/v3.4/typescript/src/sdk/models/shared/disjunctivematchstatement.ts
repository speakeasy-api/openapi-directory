/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventFilter } from "./eventfilter";
import { Expose, Type } from "class-transformer";

/**
 * Represents a Disjunctive Match Statement resource, which is a conjunction (and) of disjunctive (or) boolean statements.
 */
export class DisjunctiveMatchStatement extends SpeakeasyBase {
  /**
   * The event filters contained within this disjunctive match statement.
   */
  @SpeakeasyMetadata({ elemType: EventFilter })
  @Expose({ name: "eventFilters" })
  @Type(() => EventFilter)
  eventFilters?: EventFilter[];

  /**
   * The kind of resource this is, in this case dfareporting#disjunctiveMatchStatement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
